id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
158,28,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Alexander II, Grand Duke of Finland's birthplace
  dbr:Aleksandr_II,_Grand_Duke_of_Finland dbo:nativePlace ?alexanderBirthplace .

  # Sandro Bertaggia's birthplace (must be a country)
  dbr:Sandro_Bertaggia dbo:birthPlace ?bertaggiaBirthplace .
  ?bertaggiaBirthplace rdf:type dbo:Country .

  # Nicholas II of Russia's native administration
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nicholasNativeAdmin .

  # Person who is a native of both Alexander II's birthplace and Nicholas II's native administration
  ?person dbo:nativePlace ?alexanderBirthplace .
  ?person dbo:nativePlace ?nicholasNativeAdmin .

  # Person deceased at Sandro Bertaggia's birthplace (if it's a country)
  ?person dbo:deathPlace ?bertaggiaBirthplace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
668,67,test,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Ghana .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  ?person a dbo:MusicalArtist .
  
  # Association with ""The Live Anthology""
  ?album dbo:artist ?person ;
         rdfs:label ""The Live Anthology""@en .

  # Connection to ""$pacely"" as an associated musical artist
  ?association dbo:associatedBand dbr:$pacely ;
               dbo:member ?person .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,28,test,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon and professional in the profession of Frédéric Bouraly.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?actor ?profession
WHERE {
  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alias ?alterEgo .
  
  # Find the actor associated with ""Lasso the Moon""
  dbr:Lasso_the_Moon dbo:starring ?actor .

  # Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:profession ?profession .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
595,69,test,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify the owner of USS Arcadia (ID-1605)
  ?arcadia a dbo:Ship ;
           dbo:owner ?owner .

  FILTER(STR(?arcadia) = ""USS_Arcadia_(ID-1605)"")

  # Step 2: Find disease and societal event associated with the owner
  ?disease a dbo:Disease ;
           dbo:relatedTo ?owner .
  
  ?event a dbo:SocietalEvent ;
         dbo:relatedTo ?owner .

  # Step 3: Identify Bill Clinton's work that is a book
  ?work a dbo:Book, dbo:WrittenWork ;
        dbo:author dbr:Bill_Clinton .

  # Step 4: Find Hillary Clinton's spouse who is a politician and office holder
  ?spouse a dbo:Politician, dbo:OfficeHolder ;
          dbo:spouseOf dbr:Hillary_Clinton ;
          dbo:work ?work .
  
  # Step 5: Identify the commander in the war related to disease and societal event
  ?commander a dbo:Commander ;
             dbo:relatedTo ?disease, ?event .
}
```",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
595,70,test,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find author of ""An Invitation to the White House""
  ?author dbo:title ""An Invitation to the White House""@en .
  
  # Step 2: Ensure the author is a politician and office holder
  ?author a dbo:Politician ;
          dbo:officeHolder true .

  # Step 3: Find commander in war that is both a disease and societal event
  ?war dbo:name ?name .
  FILTER(CONTAINS(?name, ""Spanish Flu"") || CONTAINS(?name, ""World War I"")).

  ?author dbo:commanderInWar ?war .

  # Step 4: Owner of USS Arcadia (ID-1605)
  ?owner dbo:owns dbr:USS_Arcadia_(ID-1605) .
  
  # Step 5: Find work associated with the owner
  ?work dbo:author ?owner ;
        a dbo:Book .

  # Step 6: Ensure author of that work is a politician and office holder
  ?author2 dbo:title ?workTitle .
  FILTER(?author = ?author2) .

  # Step 7: Resident of Chappaqua, New York
  ?resident dbo:residence dbr:Chappaqua,_New_York ;
            a dbo:Politician ;
            dbo:officeHolder true .

  FILTER(?author2 = ?resident) .

  # Step 8: Find spouse of the resident
  ?resident dbo:spouse ?spouse .
}",8,17,9,3,3,3,3,71,0,0,1,0,0.0,0
353,69,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual
WHERE {
  # Constance of Burgundy's spouse and their royal child
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  ?spouse dbo:child ?royalChild1 .
  ?royalChild1 rdf:type dbo:Monarch .

  # William I of Sicily's royal child
  dbr:William_I_of_Sicily dbo:child ?royalChild2 .
  ?royalChild2 rdf:type dbo:Monarch .

  # Roger II of Sicily's parent's royal child
  dbr:Roger_II_of_Sicily dbo:parent ?parent .
  ?parent dbo:child ?royalChild3 .
  ?royalChild3 rdf:type dbo:Monarch .

  # Find the individual who is the father of William I's royal child and a child of Constance's spouse
  ?spouse dbo:child ?fatherOfRoyalChild2 .
  ?fatherOfRoyalChild2 dbo:child ?royalChild2 .
  
  # The desired individual is the child of the parent of Roger II's royal child
  ?parent dbo:child ?desiredIndividual .
  ?desiredIndividual rdf:type dbo:Monarch .

  FILTER (?royalChild1 = ?desiredIndividual)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
706,20,test,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","# Part 1: Birthplace of an actor from a movie with Dipankar De

SELECT DISTINCT ?actorBirthPlace WHERE {
  ?movie dbo:starring ?actor .
  ?movie dbo:country dbc:India .
  ?movie dbo:castMember ?dipankarDe .
  ?dipankarDe foaf:name ""Dipankar De""@en .
  ?actor dbo:birthPlace ?birthPlace .
  BIND(STR(?birthPlace) AS ?actorBirthPlace)
}

UNION

# Part 2: Birthplace of an awardee of the Sangeet Natak Akademi Fellowship

SELECT DISTINCT ?awardeeBirthPlace WHERE {
  ?person dbo:award ""Sangeet Natak Akademi Fellowship""@en .
  ?person dbo:birthPlace ?birthPlace .
  BIND(STR(?birthPlace) AS ?awardeeBirthPlace)
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
414,19,test,"Give me the award of the awardee of the reference to Nobel Prize in Physics and show of the host, that is an educational institution, of Nobel Prize in Physics.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v4 <http://dbpedia.org/property/awards> ?result . ?v4 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award ?hostOrganization
WHERE {
  ?noblePrizeInPhysics a dbo:NobelPrizeInPhysics .
  ?noblePrizeInPhysics dbo:recipient ?awardee .
  ?awardee dbo:award ?award .
  ?noblePrizeInPhysics dbo:hostOrganization ?hostOrganization .
}
```

This query does the following:
- Selects entities that are instances of `NobelPrizeInPhysics`.
- Retrieves each recipient (`?awardee`) of these prizes.
- Fetches the award details associated with each awardee.
- Identifies the host organization for each Nobel Prize in Physics event.",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
38,20,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?person a dbo:Person .
  
  # Commander in Korean Conflict
  ?koreanConflict dbo:commander ?person ;
                  dbo:location dbr:Korean_War .

  # Author of an American Book
  ?book dbo:author ?person ;
        dbo:country dbr:United_States ;
        a dbo:Book .
  
  # Commander in North Carolina Air National Guard and Politician
  ?ncAirGuard dbo:commander ?person ;
              dbo:location dbr:North_Carolina_Air_National_Guard ;
              dbp:officeHolderType ""Politician"" .

}
```",6,15,7,3,2,3,2,20,0,0,1,0,0.0,0
414,20,test,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss and award of the awardee of the reference to Nobel Prize in Physics.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/property/awards> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show WHERE {
  # Rainer Weiss and his Nobel Prize in Physics award
  dbr:Rainer_Weiss a dbo:AwardWinner ;
                   dbo:award dbr:Nobel_Prize_in_Physics .

  # Educational institution associated with Rainer Weiss
  OPTIONAL { 
    dbr:Rainer_Weiss dbo:almaMater ?institution .
    FILTER (isBlank(?institution) || ?institution != dbr:Harvard_University)
  }

  # Shows or programs hosted by the educational institution
  ?show dbo:producer ?institution ;
        dbp:title ?title .

  # Filter to ensure relevance to Rainer Weiss's context
  FILTER CONTAINS(LCASE(?title), ""nobel"") .
}
```

This query does the following:
- Identifies Rainer Weiss as a Nobel Prize in Physics awardee.
- Checks for any educational institution associated with him, excluding his alma mater if necessary.
- Searches for shows or programs produced by these institutions that might be related to the Nobel context.",6,7,7,3,2,3,2,20,0,0,3,0,0.0,0
140,19,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  # Find John McDermott's death place
  ?johnMcDermott dbo:deathPlace ?deathPlace .
  FILTER (str(?johnMcDermott) = ""John_McDermott_(artist)"")

  # Find the war George Pickett commanded in
  ?georgePickett dbo:commanderInWar ?war .
  FILTER (str(?georgePickett) = ""George_Pickett"")

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find ruling party member that is an organization in the death place
  ?partyMember dbo:memberOfRulingParty ?rulingParty ;
               rdf:type dbo:PoliticalParty, dbo:Organization .
  FILTER (str(?partyMember) != """")

  # Ensure the ruling party is associated with the settlement
  ?rulingParty dbo:country ?deathPlace .

}
```",5,9,6,3,2,3,2,20,0,0,4,0,0.0,0
347,68,test,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Cecilia Renata of Austria's father
  ?ceciliaRenata dbo:father ?father1 .
  FILTER(STRSTARTS(STR(?ceciliaRenata), ""Cecilia_Renata_of_Austria""))

  # Archduke Charles Joseph's parent (likely his father)
  ?charlesJoseph dbo:parent ?parent2 .
  FILTER(STRSTARTS(STR(?charlesJoseph), ""Archduke_Charles_Joseph_of_Austria""))

  # The person is a child of Cecilia Renata's father
  ?father1 dbo:child ?person .

  # The person is a father of Archduke Charles Joseph's parent (likely his grandfather)
  ?person dbo:parent ?parent2 .

  # The person is associated with the Algerian War as a commander
  ?person dbo:militaryCommanderOf dbr:Algerian_War .

  # The person is related to societal events, an event, and a television show
  OPTIONAL { ?person dbo:societalEvent ?event1 . }
  OPTIONAL { ?person dbo:event ?event2 . }
  OPTIONAL { ?person dbo:televisionShow ?show . }

  FILTER(?event1 && ?event2 && ?show)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
347,67,test,"Give me the commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the commander in the Thirty Years' War
  ?commander dbo:occupation dbr:Commander_in_the_Thirty_Years'_War .
  
  # Find Maria Anna of Bavaria and her royal child
  ?mariaAnna dbp:birthDate ""1574-01-01""^^xsd:date ;
             dbp:child ?royalChild .
  ?royalChild a dbo:Royal .

  # Find the father of the royal child (grandparent of Maria Anna's child)
  ?royalChild dbp:father ?grandParent .

  # Find Archduke Charles Joseph and his parent
  dbr:Archduke_Charles_Joseph_of_Austria dbp:parent ?archdukeParent .
  
  # Find the grandparent of Archduke Charles Joseph (parent's parent)
  ?archdukeParent dbp:parent ?grandGrandParent .

  # Match the commander with the grandparent
  ?commander dbo:child ?grandGrandParent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,69,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maria Anna of Bavaria and her husband
  ?mariaAnna dbr:Maria_Anna_of_Bavary_(1574-1616) .
  ?mariaAnna dbo:spouse ?husband .

  # Child of Maria Anna who is royalty
  ?child dbo:parent ?husband ;
         dbo:parent ?mariaAnna ;
         a dbo:RoyalFamilyMember .

  # Commander in the war, which is a societal event, an event, and a television show
  ?war dbo:militaryForce dbr:Military_force_of_the_Algerian_War ;
       a dbo:SocietalEvent , dbo:Event , dbo:TelevisionShow .
  
  ?child dbo:commanderInWar ?war .

  # Father of the child of Ferdinand III, Holy Roman Emperor
  ?ferdinandChild dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor ;
                  dbo:father ?relatedPerson .

  # The related person is the commander we are looking for
  ?child dbr:?relatedPerson .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
941,19,test,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
    # Duke Anthony Ulrich of Brunswick's child who is royalty
    ?child1 dbo:parent dbr:Duke_Anthony_Ulrich_of_Brunswick .
    ?child1 a dbo:Monarch .

    # Princess Antoinette of Brunswick-Wolfenbüttel's child who is royalty
    ?child2 dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel .
    ?child2 a dbo:Monarch .

    # Spouse of Duke Anthony Ulrich's royal child
    ?spouse1 dbo:spouse ?child1 .

    # Parent of this spouse is Princess Antoinette's royal child
    ?parent ?child2 .

    # Spouse of the parent (Princess Antoinette's royal child)
    ?result dbo:spouse ?parent .
}",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
513,19,test,"Give me the entity in the award of George H. Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/ontology/leader> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # George H. Cameron and his award
  ?cameron a dbo:Person ;
           foaf:name ""George H. Cameron"" ;
           dbo:honoraryAward ?award .

  # George Savage (politician) and the party he was part of
  ?savage a dbo:Politician ;
          foaf:name ""George Savage (politician)"" ;
          dbo:partyLeader ?leader .

  # Leader's residence
  ?leader dbo:residenceLocation ?location .

  # Entity that is both an Organisation and a Political Party
  ?entity a dbo:Organization, dbo:PoliticalParty ;
          dbo:honoraryAward ?award ;
          dbo:location ?location .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
103,68,test,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Orson Welles as The Shadow
  dbr:Orson_Welles dbo:profession dbr:Actor .
  dbr:The_Shadow dbo:voiceActor dbr:Orson_Welles .

  # Movie that is also a television show
  ?movie dbo:starring dbr:Orson_Welles ;
         dbo:genre dbr:TelevisionFilm .

  # Actor from ""Ab Kya Hoga"" who was also a politician
  ?abKyaHogaActor dbo:profession dbr:Politician, dbr:Actor .
  dbr:Ab_Kya_Hoga dbo:starring ?abKyaHogaActor .

  # Find the actor of the movie that is a television show
  ?movie dbo:starring ?actor .
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
905,67,test,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFather WHERE {
  # Maria of Bytom's spouse
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  ?spouse1 dbo:spouse ?maria .

  # Charles II of Naples' spouse
  ?charles a dbo:Person ;
           foaf:name ""Charles II of Naples""@en .
  ?spouse2 dbo:spouse ?charles .

  # Common spouse
  FILTER (?spouse1 = ?spouse2)
  BIND(?spouse1 AS ?commonSpouse)

  # Child of common spouse who is royalty
  ?child dbo:parent ?commonSpouse ;
         a dbo:Monarch .
  
  # Predecessor of Stephen V of Hungary
  ?stephen a dbo:Person ;
           foaf:name ""Stephen V of Hungary""@en .
  ?predecessor dbo:successor ?stephen .

  # Child of predecessor's child who is royalty
  ?childOfPredecessorChild dbo:parent ?predecessor ;
                           a dbo:Monarch .
  
  # Father of this royalty
  ?father dbo:child ?childOfPredecessorChild .

  # Parent of father (royalty)
  ?parentOfFather dbo:child ?father ;
                  a dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,27,test,"Give me the actor of Paradise (2013 film) and actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorParadise ?movieWithAudreyHepburn ?spouseOfAwardee
WHERE {
  # Actor of ""Paradise"" (2013 film)
  dbr:Paradise_(2013_film) dbo:starring ?actorParadise .

  # Movie that is a work and a film with Audrey Hepburn
  ?movieWithAudreyHepburn a dbo:Film ;
                        dbo:starring dbr:Audrey_Hepburn .

  # Spouse of an awardee from Janusz Kamiński's awards list
  ?awardRecipient dbp:awardsReceived ?award .
  ?award dbo:recipient ?awardRecipient .
  ?awardRecipient dbo:spouse ?spouseOfAwardee .
  
  FILTER EXISTS { 
    ?award dbr:List_of_awards_and_nominations_received_by_Janusz_Kamiński
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
203,71,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Step 1: Identify William Bayne's military conflict
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne"" .
  
  ?bayne dbo:militaryConflict ?conflict1 .

  # Step 2: Identify The Triple X's figure and their war
  ?tripleX a dbo:MilitaryPerson ;
           foaf:name ?nameTripleX .
  
  FILTER regex(?nameTripleX, ""The Triple X"", ""i"") .
  
  ?tripleX dbo:militaryConflict ?conflict2 .

  # Step 3: Identify the Knight Commander of the Order of the Bath
  ?knightCommander a dbo:MilitaryPerson ;
                   foaf:name ?nameKnightCommander .
  
  ?knightCommander dbo:award ""Knight Commander of the Order of the Bath""^^xsd:string .
  
  ?knightCommander dbo:militaryConflict ?conflict3 .

  # Step 4: Find the military force involved in these conflicts
  ?conflict1 dbo:militaryForce ?militaryForce ;
            a dbo:MilitaryConflict .
  
  ?conflict2 dbo:militaryForce ?militaryForce ;
             a dbo:MilitaryConflict .
  
  ?conflict3 dbo:militaryForce ?militaryForce ;
             a dbo:MilitaryConflict .

}",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
198,68,test,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Henry Clay Lewis' birthplace
  VALUES (?birthPlace) { 
    dbr:New_Madrid,_Missouri 
  }
  
  # Quincy Adams Gillmore's award and its force
  ?gillmore dbo:awardReceived ?award .
  ?award dbo:awardee ?force .
  
  # United States Congress Award and associated war
  ?congressAward dbo:show ?war .
  
  # Entity in the birthplace that is a settlement and American
  ?entity dbo:birthPlace ?birthPlace ;
          a dbo:Settlement ;
          dbo:country dbr:United_States_of_America .

  # Ensure the entity matches both conditions
  FILTER (?force = ?entity || ?war = ?entity)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
628,68,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMemberArtist WHERE {
  # Step 1: Find a GS9 member who is both an artist and a musical artist
  ?gs9Member dbo:memberOf dbr:GS9 ;
             dbo:occupation dbr:Musical_artist ;
             dbo:occupation dbr:Artist .

  # Step 2: Get the birth name of this member
  ?gs9Member dbp:birthdayName ?birthName .

  # Step 3: Find a musical artist native to Florida with that birth name
  ?floridaArtist dbo:birthPlace dbr:Florida ;
                 dbp:name ?birthName ;
                 dbo:occupation dbr:Musical_artist .

  # Step 4: Determine the region associated with an award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:location dbr:Puerto_Rico ;
         dbo:recipient dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # The region must be a state and settlement in America
  ?region rdf:type dbo:State ;
          dbo:country dbr:United_States ;
          rdfs:label ?awardRegionLabel .
  
  FILTER (CONTAINS(LCASE(?awardRegionLabel), ""puerto rico""))

  # Step 5: Find the band member of the associated musical artist from Florida
  ?associatedArtist dbo:memberOf ?band ;
                   dbp:name ?birthName .

  ?bandMemberArtist dbo:memberOf ?band ;
                    dbo:occupation dbr:Musical_artist .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
225,20,test,"Give me the entity in the region of the time zone in Kiyosu and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v5 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?show dbo:genre dbr:Japanese_television_show .
  ?show dbo:reference dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  
  ?awardEvent dbo:recipient ?awardee .
  ?awardEvent dbo:name dbr:Anita_Borg_Institute_Women_of_Vision_Awards .

  ?awardee dbo:nationality dbr:Japan .
  ?awardee dbo:birthPlace dbr:Kiyosu_City .
  
  OPTIONAL { 
    ?location dbp:timeZoneRegion dbr:Kiyosu_City .
    ?awardee dbo:birthPlace ?location .
  }
}",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
905,69,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Predecessor of Stephen V of Hungary
  ?stephenV dbo:predecessor ?predecessor .
  
  # Parent of the father (grandfather) of Charles I of Hungary
  ?charlesI dbp:father ?father .
  ?father dbp:father ?grandfather .
  ?grandfather dbp:parent ?parent .

  # Spouse of the father of the parent (great-grandparent) of Philip, Despot of Romania
  ?philip dbo:parent ?parentOfPhilip .
  ?parentOfPhilip dbp:father ?fatherOfParent .
  ?fatherOfParent dbp:spouse ?spouse .

  # The child of the child that is a royalty
  ?predecessor dbo:child ?child1 .
  ?child1 dbo:child ?child2 .
  
  FILTER (dbo:royalty(?child2))
  
  # Linking all together
  ?parent = ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
609,68,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Part 1: Paulus Powell's birthplace
  ?powell dbo:birthPlace ?region .
  FILTER (str(?region) = ""RegionName"") # Replace with actual region name once identified

  # Find the governor of that region
  ?politician dbo:office ?governorOffice .
  ?governorOffice dbo:positionTitle ""Governor""@en .
  ?governorOffice dbo:heldBy ?politician .
  ?region dbo:governingBody ?governorOffice .

  # Governor's birthplace
  ?politician dbo:birthPlace ?governorBirthPlace .

  # Part 2: Cece Bell's birthplace
  dbr:Cece_Bell dbo:birthPlace ?bellBirthPlace .

  # Part 3: Vince Gilligan's award and awardee
  dbr:Vince_Gilligan dbo:awardReceived ?award .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?gilliganAwardeeBirthPlace .

  # Ensure the birthplace of the governor is returned
}
```

**Notes:**
- Replace `""RegionName""` with the actual region name once identified from Paulus Powell's data.
- This query assumes that DBpedia has structured data for these entities and their relationships. Adjustments may be needed based on available data.
- The query focuses on retrieving the birthplace of the governor, as requested.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
293,69,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?spouse WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""20.1168""^^xsd:float .

  # Get the ruling party of the country where this landmark is located
  ?country dbo:location ?landmark .
  ?party dbo:country dbr:?country ;
         dbo:type dbr:Ruling_Party .

  # Find a member of this ruling party
  ?person dbo:memberOf ?party .
  ?partyMember rdfs:label ?personLabel FILTER (lang(?personLabel) = ""en"") .

  # Identify the actor from ""1,000 Dollars a Minute""
  ?film dbo:title ""1,000 Dollars a Minute"" ;
        dbo:starring ?actor .
  
  # Find the spouse of this actor
  ?spouse dbo:spouse ?actor .

  # Get Tisha Sterling's parent and their birth name
  ?parent dbo:child dbr:Tisha_Sterling ;
          dbp:birthday ?birthDate .
  ?parent rdfs:label ?parentLabel FILTER (lang(?parentLabel) = ""en"") .

  # Match the person born with this birth name
  ?person2 rdfs:label ?parentLabel .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
39,67,test,"Give me the professional in Singer and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobThompsonBirthName ?bobThompsonSinger ?bobThompsonBand 
       ?walterBGibsonCharacter

WHERE {
  # Bob Thompson (musician)
  dbr:Bob_Thompson_(musician) dbo:birthName ?bobThompsonBirthName .
  
  OPTIONAL { dbr:Bob_Thompson_(musician) dbo:singer ?bobThompsonSinger . }
  OPTIONAL { dbr:Bob_Thompson_(musician) dbo:bandMember ?bobThompsonBand . }

  # Walter B. Gibson
  dbr:Walter_B._Gibson dbo:fictionalCreation ?character .
  
  FILTER EXISTS {
    ?character a dbo:FictionalCharacter ;
               dbo:comicsCharacter true .
  }
  
  BIND(?character AS ?walterBGibsonCharacter)
}",7,10,8,3,3,3,3,71,0,0,3,0,0.0,0
293,67,test,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Step 1: Find films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Identify Tisha Sterling's parent and their birth name
  ?parent foaf:name ?birthName ;
          dbo:child dbr:Tisha_Sterling .

  # Step 3: Find a person who is a member of the Republican Party (United States)
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) .
  
  # Ensure the birth name matches
  FILTER (?birthName = ?parentBirthName)

  # Step 4: Determine the actor involved in the film
  ?film dbo:actor ?actor .

  # Step 5: Find the spouse of that actor
  ?actor foaf:mbox ?actorEmail .
  ?spouse foaf:mbox ?actorEmail ;
          foaf:partner ?actor .
}
```

This query assumes certain relationships and properties based on typical DBpedia data. Adjustments may be necessary depending on the exact structure and availability of data in DBpedia.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,71,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?v2 . ?v8 <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v8 <http://dbpedia.org/ontology/manager> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
    # Find the successor season of 2006–07 VfL Bochum
    ?successorSeason a dbo:SoccerClubSeason ;
                     dbo:succeeds dbr:2006%E2%80%9307_VfL_Bochum_season .

    # Find the manager of the team in that successor season
    ?team a dbo:SoccerClub ;
          dbo:season ?successorSeason .
    ?manager a dbo:SportsManager ;
             dbo:manages ?team .

    # Ensure the manager is associated with a sports club, organisation, and soccer club
    ?manager dbo:sportsTeam ?sportsClub .
    ?sportsClub a dbo:SoccerClub ;
                a dbo:Organisation .

    # Find the person born on 1968-08-26 who is a sports manager
    ?person a dbo:SportsManager ;
            dbo:birthday ""1968-08-26""^^xsd:date .

    # Find the leader of West Germany and their administration (country)
    ?leader a dbo:Leader ;
            dbo:country dbr:West_Germany .
    ?administration dbo:headOfState ?leader ;
                    a dbo:Civilization .

    # Ensure the manager is native to this administration
    ?person dbo:nationality ?administration .
}
```",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
737,70,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?royaltyChild
WHERE {
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?parent a dbo:Person ;
          dbo:child ?margareteSophie .
  
  # Step 2: Find the child of this parent who is royalty
  ?parentChild a dbo:RoyalFamilyMember ;
               dbo:child ?parent .

  # Step 3: Identify Philipp Albrecht's child and find its predecessor
  ?philippAlbrecht a dbo:Person ;
                   rdfs:label ""Philipp Albrecht, Duke of Württemberg""@en .
  
  ?philippChild dbo:childOf ?philippAlbrecht .

  # Find the predecessor in terms of lineage or title
  ?predecessor dbo:succeededBy ?philippChild .

  # Step 4: Trace three generations down from Alexander of Württemberg
  ?alexander a dbo:Person ;
             rdfs:label ""Alexander of Württemberg (1804-1881)""@en .
  
  ?firstChild dbo:childOf ?alexander .
  ?secondChild dbo:childOf ?firstChild .
  ?thirdChild dbo:childOf ?secondChild .

  # Combine conditions to find the desired royalty child
  FILTER(?parentChild = ?predecessor)
  FILTER(?royaltyChild = ?thirdChild)

}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
782,71,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOfPerson1945 ?associatedArtistNickCurran ?realNameKimWilson ?bandKimWilson
WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthday ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .

  # Get the band of this person
  ?person dbo:bandMember ?bandOfPerson1945 .

  # Find Nick Curran and his associated musical artists
  dbr:Nick_Curran dbo:associatedBandOrchestra ?associatedArtistNickCurran .

  # Determine Kim Wilson's real name and band
  dbr:Kim_Wilson dbo:birthName ?realNameKimWilson ;
                 dbo:bandMember ?bandKimWilson .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
609,67,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v1 <http://dbpedia.org/property/author> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Paulus Powell's birth place
  VALUES (?paulusPowell) { dbr:Paulus_Powell }
  
  # Birth place of Paulus Powell
  ?paulusPowell dbo:birthPlace ?birthPlace .
  
  # Check if the birth place is a region and administrative region
  ?birthPlace rdf:type dbo:Region ;
             rdf:type dbo:AdministrativeRegion .

  # Governor of that region
  ?governor dbo:governmentRole ?role ;
           dbo:birthPlace ?governorBirthPlace .
  
  # Role should be governor of the birth place region
  ?role dbo:officeHolder ?governor .
  ?role dbo:administrativeArea ?birthPlace .

  # Author of ""El Deafo""
  VALUES (?elDeafoAuthor) { dbr:Susan_Boyle }
  
  # Birth place of the author
  ?elDeafoAuthor dbo:birthPlace ?authorBirthPlace .
  
  # Vince Gilligan's birth place
  VALUES (?vinceGilligan) { dbr:Vince_Gilligan }
  ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,70,test,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?associatedArtist ?realName
WHERE {
  # Find the person born on March 30, 1945
  ?person dbo:birthday ""1945-03-30""^^xsd:date .
  
  # Check if this person is associated with a musical artist persona or band membership
  OPTIONAL { ?person foaf:page ?bandPage . }
  OPTIONAL { ?person foaf:depiction ?personaImage . }

  # Find the associated musical artist of that person
  ?bandPage dbo:member ?associatedArtist .
  
  # Reference the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:realName ?realName .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
246,20,test,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
    # Step 1: Princess Muna al-Hussein's child who is royalty
    ?childMuna a dbo:Monarch ;
               dbo:mother dbr:Princess_Muna_al-Hussein .

    # Step 2: That child's parent (who should also be royalty)
    ?parentChildMuna a dbo:Monarch ;
                     dbo:child ?childMuna .

    # Step 3: Princess Aisha bint Faisal's parent who is royalty
    ?parentAisha a dbo:Monarch ;
                 dbo:child dbr:Princess_Aisha_bint_Faisal .

    # Step 4: Child of this parent who is royalty
    ?childParentAisha a dbo:Monarch ;
                      dbo:parent ?parentAisha .

    # Step 5: Parent of the child identified in step 4
    ?finalParent a dbo:Monarch ;
                 dbo:child ?childParentAisha .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
816,68,test,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Allan Arbus's child
  ?child dbo:spouse|dbo:partner dbr:Allan_Arbus .
  
  # Actor of the movie that is a work
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?actorLabel .

  # Person decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles,_California ;
            dbo:causeOfDeath ?cause .

  # Parent of the professional in the profession of Eugène Cattin
  dbr:Eugène_Cattin dbo:profession ?profession .
  ?professional dbo:profession ?profession .
  ?parent dbo:child ?professional .

  # Linking all components
  FILTER(?actor = ?decedent)
  FILTER(?child = ?actor)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
609,69,test,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v7 . }","```sparql
SELECT ?birthPlace WHERE {
  # Governor of Virginia
  ?governor dbo:officeHolderOf dbr:Governor_of_Virginia .
  ?governor dbo:occupation dbr:Politician .
  ?governor foaf:birthPlace ?birthPlace1 .

  UNION

  # Author of ""El Deafo""
  ?author dbo:wikiPageRedirects dbr:Cece_Barrett .
  ?author dbo:nationality dbr:United_States .
  ?author foaf:birthPlace ?birthPlace2 .

  UNION

  # Awardee associated with Vince Gilligan
  ?awardee dbo:award dbr:Award_for_Vince_Gilligan .
  ?awardee foaf:birthPlace ?birthPlace3 .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
816,67,test,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Mariclare Costello's spouse
  ?mariclareCostello a dbr:Mariclare_Costello ;
                     dbo:spouse ?spouse .

  # Child of the spouse and their parent (the spouse again)
  ?child dbo:parent ?spouse .

  # Eugène Cattin's profession
  ?eugeneCattin a dbr:Eugène_Cattin ;
                dbo:profession ?profession .

  # Actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?judgmentFilm a dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg ;
               dbo:actor ?actor .

  # Find the common entity
  FILTER (?spouse = ?commonEntity)
  FILTER (?commonEntity dbo:profession ?profession)
  FILTER (?actor = ?commonEntity)

}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
398,20,test,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in the writer of the work of Aleksandr Filimonov.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?clubNickname WHERE {
  # Find Denis Kolodin's soccer club
  ?kolodin dbo:nationality dbr:Russia ;
           dbo:sport dbr:Soccer ;
           dbo:team dbr:FC_Spartak_Moscow .

  # Get the nickname of the club
  ?kolodin dbo:team ?club .
  ?club dbo:nickname ?clubNickname .

  # Find works by Aleksandr Filimonov
  ?filimonov dbo:birthPlace dbr:Russia ;
             dbo:profession dbr:Writer ;
             dbo:work ?work .

  # Identify players associated with those works
  ?player dbo:occupation dbr:Soccer_player ;
          dbo:relatedWork ?work .
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
143,19,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Cynthia Morgan's birth name
  ?cynthiaMorgan a dbo:MusicalArtist ;
                 foaf:name ""Cynthia Morgan"" ;
                 dbo:birthName ?birthName .

  # Find Afeez Oyetoro and the movie he acted in
  ?afeezOyetoro a dbo:Actor ;
                foaf:name ""Afeez Oyetoro"" .
  
  ?movie dbo:starring ?afeezOyetoro ;
         dbo:title ?title .

  # Find the associated musical artist
  ?person dbo:birthName ?birthName ;
          dbo:musicalArtist ?artist .

  ?actor a dbo:Actor ;
         dbo:musicalArtist ?artist .
  
  FILTER(?movie != dbr:Unknown) # Ensure it's an actual movie
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
412,28,test,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30 and war of the leader of National Party of Greece.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Antonios Varthalitis' death place
  VALUES (?varthalitisDeathPlace) { 
    (dbr:Antonios_Varthalitis#death_place)
  }
  
  # Ensure the death place is a settlement
  ?varthalitisDeathPlace dbo:type dbr:Settlement .

  # Awardee of ""30"" and their war
  ?awardee dbo:award ?award .
  FILTER regex(str(?award), ""30"", ""i"") .
  ?awardee dbo:participatedInWar ?war1 .

  # Leader of National Party of Greece and their war
  ?leader dbo:partyLeader dbr:National_Party_of_Greece .
  ?leader dbo:participatedInWar ?war2 .

  # Find the entity in the death place that is related to both wars
  ?entity dbo:location ?varthalitisDeathPlace .
  ?entity dbo:relatedTo ?war1 .
  ?entity dbo:relatedTo ?war2 .
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
80,71,test,"Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/album> ?v5 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Assuming we know the alter ego from ""The Golden Master""
  VALUES (?alterEgo) { dbr:Alter_Ego_Name }

  # Professional associated with the alter ego
  ?professional dbo:alterEgo ?alterEgo .

  # Author of Smartbomb and a movie they are connected to
  ?author dbo:book dbr:Smartbomb .
  ?movie dbo:starring ?actor1 .
  ?author dbo:starring ?movie .

  # T.I.'s song/musical work, album, and associated actor
  ?song dbo:title ""Song_Title"" ;
        dbo:album ?album .
  ?album dbo:starring ?actor2 .

  # Ensure the same professional is connected to both actors
  FILTER (?actor1 = ?actor2)
}
```",9,11,10,3,3,3,3,71,0,0,4,0,0.0,0
103,70,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego in comics
  dbr:The_Shadow (dbo:alterEgo) ?comicCharacter .

  # Richard E. Grant's roles
  ?movie dbo:starring dbr:Richard_E._Grant .
  
  # Movie that is also a TV show
  ?tvShow dbo:title ?title ;
          dbo:basedOnSourceMaterial ?sourceMaterial .
  FILTER(?sourceMaterial = ?movie) .

  # Actor in both movie and TV show
  ?actor dbo:starring ?movie ;
         dbo:starring ?tvShow .

  # Profession of the actor who is a politician in ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga (dbo:character) ?politician .
  ?politician dbo:profession ?profession .
  
  # Actor's profession matches
  ?actor dbo:profession ?profession .

  # Linking all together
  FILTER(?actor = ?professional)
}
```",8,11,9,3,3,3,3,71,0,0,13,0,0.0,0
731,20,test,"Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Edmund Hakewill-Smith and his award
  ?person a dbo:Person ;
          foaf:name ""Edmund Hakewill-Smith""@en .
  ?award dbo:recipient ?person ;
         rdf:type dbo:Award ;
         rdfs:label ""Victoria Cross""@en .

  # Sinking of HMS Prince of Wales and Repulse as a military conflict
  ?event dbo:wikiPageRedirects dbr:Sinking_of_HMS_Prince_of_Wales_and_HMS_Repulse ;
         dbo:wikiPageWikiLink ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .

  # Commander associated with the event
  ?commander dbo:award ?award ;
             dbo:commandedForce ?force .

  # Ensure the force is related to a societal event (World War II)
  ?societalEvent dbo:wikiPageRedirects dbr:World_War_II ;
                 dbo:wikiPageWikiLink ?conflict .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
384,9,test,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyRetailleau ?successorParty WHERE {
  # Find Bruno Daniel Marie Paul Retailleau's party
  dbr:Bruno_Retailleau a dbo:Politician ;
    dbo:politicalParty ?partyRetailleau .

  # Find Patrice Martin-Lalande's successor who is a politician and French
  dbr:Patrice_Martin-Lalande a dbo:Politician ;
    dbo:succeededBy ?successor .
  
  FILTER EXISTS { ?successor a dbo:Politician . }
  FILTER EXISTS { ?successor dbo:nationality dbr:France . }

  # Find the successor's party
  ?successor dbo:politicalParty ?successorParty .
}
```",4,8,5,2,2,2,2,9,0,0,1,0,0.0,0
293,71,test,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v8 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Step 1: Find Tisha Sterling's parent
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling""@en .
  ?parent dbo:child ?tishaSterling .

  # Step 2: Find Nat Levine's film and its actor
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .
  ?film dbo:producer ?natLevine ;
        dbo:actor ?actor .

  # Step 3: Find the spouse of the actor
  ?spouse dbo:spouse ?actor ;
          foaf:name ?actorName .

  # Step 4: Get the birth name of the spouse
  ?spouse foaf:name ?birthName .

  # Step 5: Identify a landmark at elevation 20.1168 and its party member
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
            dbo:partyMember ?person .
  
  FILTER(?parent = ?spouse)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
943,69,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I and his child
  ?baedaMaryamI dbo:child ?child1 .
  
  # Child of Baeda Maryam I's parent who is royalty and an office holder
  ?child1 dbo:parent ?parent1 .
  ?parent1 a dbo:Monarch ;
           dbo:officeHolder ?office .

  # Father of this parent (grandfather)
  ?parent1 dbo:parent ?grandfather .
  ?grandfather a dbo:Monarch .

  # Commander in Siege of Mukha who is royalty
  ?commander dbo:event dbr:Siege_of_Mukha ;
            a dbo:Monarch .

  # Parent of this commander (royalty)
  ?commander dbo:parent ?parent2 .
  ?parent2 a dbo:Monarch .

  # Alter ego of The Shadow (Lamont Cranston)
  ?alterEgo dbr:Lamont_Cranston ;
            rdfs:label ""The Shadow""@en .

  FILTER(?grandfather = ?parent2) 
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
633,20,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfFather
WHERE {
  # Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine dbo:child ?child .

  # Child is royalty
  ?child a dbo:Monarch .

  # Parent (Spouse) of the child is both royalty and noble
  ?child dbo:parent ?spouse .
  ?spouse a dbo:Monarch ;
          a dbo:Noble .

  # Father of the child
  ?father dbo:child ?child .

  # Parent of the father
  ?father dbo:parent ?parentOfFather .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
492,27,test,Give me the death place of Reed Howes and death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  # Reed Howes
  OPTIONAL {
    VALUES (?person) { dbr:Reed_Howes }
    ?person dbo:deathPlace ?deathPlace .
  }

  # Actor of Color Me Dead
  OPTIONAL {
    ?movie dbo:starring ?actor .
    ?actor dbo:birthName ?name .
    FILTER(CONTAINS(LCASE(?name), ""color me dead""))
    ?actor dbo:deathPlace ?deathPlace .
    VALUES (?movie) { dbr:Color_Me_Dead }
  }

  # Actor of Aladdin (1958 film)
  OPTIONAL {
    ?movie dbo:starring ?actor .
    ?actor dbo:birthName ?name .
    FILTER(CONTAINS(LCASE(?name), ""aladdin""))
    ?actor dbo:deathPlace ?deathPlace .
    VALUES (?movie) { dbr:Aladdin_(1958_film) }
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,71,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Saw Shwe Khet's child who is royalty
  ?childShweKhet dbo:parent dbr:Saw_Shwe_Khet .
  ?childShweKhet a dbo:Monarch .

  # Step 2: Find predecessor of this child
  ?predecessor dbo:succeededBy ?childShweKhet .
  
  # Step 3: Find spouse of this predecessor who is royalty
  ?spouse dbo:spouse ?predecessor .
  ?spouse a dbo:Monarch .

  # Step 4: Find Saw Min Phyu's spouse who is royalty
  ?spouseMinPhyu dbo:spouse dbr:Saw_Min_Phu .
  ?spouseMinPhyu a dbo:Monarch .

  # Step 5: Find child of this spouse
  ?childSpouseMinPhyu dbo:parent ?spouseMinPhyu .

  # Step 6: Find parent of this child
  ?parentChild dbr:Saw_Min_Phu .
  
  # Step 7: Find child of this parent
  ?finalChild dbo:parent ?parentChild .

  # Ensure the final child matches the predecessor's child
  FILTER(?childShweKhet = ?finalChild)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
769,19,test,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Reference is a sports club, sports team, and soccer club
  ?reference a dbo:SportsClub ;
             a dbo:SportsTeam ;
             a dbo:SoccerClub .

  # Manager is a sports manager and soccer manager of the reference
  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager .
  ?reference dbo:manager ?manager .

  # Player is an athlete, soccer player, sports manager, and soccer manager born on 1981-12-01
  ?player a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .
  ?player dbo:birthDate ""1981-12-01""^^xsd:date .

  # Player is associated with the reference as a player
  ?reference dbo:player ?player .

  FILTER(?reference = dbr:Hong_Kong_C)
}
```",5,15,6,3,2,3,2,20,0,0,2,0,0.0,0
531,71,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v8 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelOffice ?manuelConflict ?manuelResidence ?madridLeaderResidence
WHERE {
  # Miguel Maura's political party and office
  dbr:Miguel_Maura dbo:party ?party .
  ?party a dbo:PoliticalParty .
  
  OPTIONAL { 
    ?officeHolder dbo:position ?miguelOffice ;
                  dbo:memberOf ?party .
  }
  
  # Manuel Pinto da Costa's military conflict and residence
  dbr:Manuel_Pinto_da_Costa dbo:commanderIn ?manuelConflict .
  ?manuelConflict a (dbo:MilitaryConflict | dbo:SocietalEvent) .

  OPTIONAL {
    ?officeHolder dbo:position ?commanderOffice ;
                  dbo:residence ?manuelResidence ;
                  dbo:memberOf ?manuelConflict .
  }
  
  # Leader of the 2003 Madrid City Council election
  dbr:Madrid_City_Council_Election_2003 dbo:leader ?madridLeader .
  ?madridLeader a dbo:OfficeHolder .

  OPTIONAL {
    ?madridLeader dbo:residence ?madridLeaderResidence .
  }
}
```",9,16,10,3,3,3,3,71,0,0,1,0,0.0,0
609,71,test,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v8 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://dbpedia.org/property/author> ?v8 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/governor> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceCeceBell ?birthPlaceAwardeeVinceGilligan ?birthPlaceGovernorNewSouthWales

WHERE {
  # Birth place of Cece Bell (author of El Deafo)
  dbr:Cecily_Ann_Bell dbo:birthPlace ?birthPlaceCeceBell .

  # Awardee of Vince Gilligan's award
  dbr:Vince_Gilligan dbo:awardReceived [
    a dbo:Award ;
    dbo:recipient ?awardee .
  ] .
  
  # Birth place of the awardee
  ?awardee dbo:birthPlace ?birthPlaceAwardeeVinceGilligan .

  # Governor of New South Wales (region and administrative region)
  dbr:New_South_Wales dbo:governor ?governor .
  
  # Birth place of the governor
  ?governor dbo:birthPlace ?birthPlaceGovernorNewSouthWales .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
943,68,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?shadow dbo:alias ""The Shadow""@en .
  ?shadow dbo:characterName ""Lamont Cranston""@en .
  
  ?grandfather dbo:child ?parent .
  ?parent dbo:child ?commander .
  
  ?grandfather rdf:type dbo:Monarch .
  ?parent rdf:type dbo:Monarch .
  ?commander rdf:type dbo:Monarch .

  ?alterEgo dbo:alias ""The Shadow""@en .
}
```

This query attempts to find the alter ego of Lamont Cranston, which is ""The Shadow,"" and traces a lineage involving royalty. Note that this is a conceptual approach, and actual results depend on the availability and structure of data in DBpedia.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,70,test,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  ?spouse dbo:child ?child .
  ?mariclare dbo:spouse ?spouse .
  FILTER(?mariclare = dbr:Mariclare_Costello) .

  ?parent dbo:profession dbr:Eugène_Cattin .
  ?movie dbo:starring ?parent .

  ?actor dbo:starring ?movie .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
905,71,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania's parent who is royalty
  ?philip a dbr:Philip_Despot_of_Romania .
  ?parent dbo:child ?philip ;
          a dbo:Monarch .

  # Step 2: Find the spouse of that parent (royalty)
  ?spouse1 dbo:spouse ?parent .

  # Step 3: Identify Maria of Bytom's spouse
  ?maria a dbr:Maria_of_Bytom .
  ?mariaSpouse dbo:spouse ?maria .

  # Step 4: Find the father of that spouse who is royalty
  ?father2 dbo:child ?mariaSpouse ;
           a dbo:Monarch .

  # Step 5: Find the child of that royal father
  ?child3 dbo:parent ?father2 ;
          a dbo:Monarch .

  # Step 6: Identify Stephen V of Hungary's predecessor and their royal child
  ?stephenV a dbr:Stephen_V_of_Hungary .
  ?predecessor dbo:successor ?stephenV .
  ?royalChild dbo:parent ?predecessor ;
              a dbo:Monarch .

  # Final step: Find the spouse of the child from Step 5
  ?finalSpouse dbo:spouse ?child3 .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
595,67,test,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?person dbo:residence dbr:Chappaqua,_New_York ;
          dbo:spouse dbr:Hillary_Clinton ;
          rdf:type dbo:Politician .
  
  ?work dbo:author ?person ;
        rdf:type dbo:Book .

  FILTER(?person = dbr:Bill_Clinton)
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
943,67,test,"Give me the child of Dawit I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfDawitI ?alterEgo ?royaltyOfficeHolder
WHERE {
  # Dawit I and his child
  dbr:Dawit_I_of_Ethiopia dbo:spouse ?mother .
  ?mother dbo:child ?childOfDawitI .

  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:fictionalAlterEgo dbr:The_Shadow .
  
  # Baeda Maryam I and his lineage
  dbr:Baeda_Maryam_I dbo:spouse ?motherBaeda .
  ?motherBaeda dbo:child dbr:Eskender_of_Ethiopia .
  dbr:Eskender_of_Ethiopia dbo:father ?fatherEskender .
  ?fatherEskender dbo:father ?royaltyOfficeHolder .

  # Ensure the royalty and office holder is a royalty
  ?royaltyOfficeHolder rdf:type dbo:Monarch .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,27,test,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?siege dbo:event = dbr:Siege_of_Padua .
  ?commander dbo:commanderOfEvent = ?siege ;
             dbo:child ?royalChild .
  
  ?royalChild a dbo:Monarch ;
              dbo:parent ?person .

  ?isabella dbo:father ?person ;
            rdf:type dbo:Person ;
            rdfs:label ""Isabella of Austria""@en .

  ?philip dbr:Philip_I_of_Castile ;
          dbo:child ?royalChildOfPhil .
  
  ?royalChildOfPhil a dbo:Monarch ;
                    dbo:parent ?person .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
871,68,test,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's child who is a politician
  ?child1 dbo:parent ?frederickStanley .
  ?frederickStanley rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child1 dbo:occupation dbp:Politician .

  # Edward Stanley, 17th Earl of Derby's parent who is a politician and office holder
  ?parent2 dbo:child ?edwardStanley .
  ?edwardStanley rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?parent2 dbo:occupation dbp:Politician .
  ?parent2 dbo:officeHolder true .

  # Awardee of the Rodney Lees Award
  ?awardee dbp:awardRecipientOf <http://dbpedia.org/resource/Rodney_Lees_Award> .
  
  # Connecting the dots
  ?child1 dbp:parent ?father .
  ?child1 = ?awardee .
  ?parent2 = ?father .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
633,19,test,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfFather
WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine and his spouse
  VALUES (?francis) { dbr:François_Ier,_Duke_of_Lorraine }
  ?spouse dbo:spouseOf ?francis .
  
  # Step 2: Find the parent of the spouse who is royalty and noble
  ?parent dbo:child ?spouse ;
          a dbo:Monarch ; # Assuming Monarch implies royalty
          dbo:nobleTitle ?title .

  # Step 3: Identify any child of Francis I who is royalty
  ?child dbo:childOf ?francis ;
         a dbo:Monarch .

  # Step 4: Find the father of that child
  ?father dbo:spouseOf ?mother .
  ?mother dbo:child ?child .

  # Step 5: Determine the parent of this father
  ?parentOfFather dbo:child ?father .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
756,67,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Find the person born on 1968-08-26 who is a sports manager
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .

  # Ensure this person is also the manager of VfL Bochum
  ?person dbp:team dbr:VfL_Bochum .

  # Find the native country by identifying the administration (country) of the leader of West Germany
  ?leader dbo:country dbr:West_Germany .
  ?leader dbo:positionTitle ""Chancellor"" .  # Assuming we're looking for a political leader like Chancellor
  ?person dbo:nationality ?nativeCountry .
  ?nativeCountry rdfs:label ?countryLabel .

  # Get the manager's name
  ?person rdfs:label ?managerName .

  FILTER(LANG(?managerName) = ""en"")
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
213,20,test,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v5 <http://dbpedia.org/ontology/country> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Step 1: Find Hu Jieqing's spouse who is a writer
  dbr:Hu_Jieqing dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Writer .

  # Step 2: Determine the country of work associated with this writer
  ?spouse dbo:countryOfWork ?countryOfWork .

  # Step 3: Find the person who died in Taipei
  ?decedent dbo:deathPlace dbr:Taipei .
  
  # Step 4: Identify their child who is a politician
  ?decedent dbo:child ?politicianChild .
  ?politicianChild rdf:type dbo:Politician .

  # Step 5: Retrieve the birthplace of that politician
  ?politicianChild dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
203,67,test,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?event ?war WHERE {
  # Napoleon Bonaparte as commander in the Egyptian campaign
  dbr:Napoleon_Bonaparte dbo:role ?commander .
  ?campaign dbo:commander ?commander ;
            a dbo:MilitaryConflict ;
            rdfs:label ?event .

  FILTER(CONTAINS(LCASE(?event), ""egyptian campaign"") || CONTAINS(LCASE(?event), ""syria""))

  # French military force
  ?campaign dbo:militaryForce ?militaryForce .
  
  # Link to William Bayne and the Napoleonic Wars
  dbr:William_Bayne dbo:award ?orderOfTheBath ;
                    dbo:participatedInWar ?war .

  FILTER(CONTAINS(LCASE(?orderOfTheBath), ""knight commander of the order of the bath""))

  # The war is the Napoleonic Wars
  ?war rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""napoleonic wars""))
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
871,69,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee WHERE {
  # Step 1: Find the award Rodney Lees received
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Step 2: Find the awardee of that award and their parent
  ?awardee dbo:award ?award ;
          dbo:parent ?parentOfAwardee .

  # Step 3: Find an alumnus of Eton College whose child is a politician
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?child dbo:parent ?alumnus ;
         rdf:type dbo:Politician .

  # Step 4: Find the parent of the child of Frederick Stanley, 16th Earl of Derby
  ?frederickChild dbo:parent dbr:Fredrick_Stanley_16th_Earl_of_Derby .
  ?parentOfFrederickChild dbo:child ?frederickChild .

  # Combine conditions to find the intersection
  FILTER(?parentOfAwardee = ?alumnus && ?parentOfAwardee = ?parentOfFrederickChild)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
943,71,test,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfFather WHERE {
  # Baeda Maryam I and his child
  ?baedaMaryamI a dbo:Monarch ;
                foaf:surname ""Baeda Maryam I"" .
  
  ?childOfBaedaMaryamI dbo:parent ?baedaMaryamI .

  # Child's parent who is royalty and an office holder
  ?parentOfChild dbo:parent ?childOfBaedaMaryamI ;
                 a dbo:Monarch ;
                 dbo:officeHolder true .

  # Father of this parent (royalty)
  ?fatherOfParent dbo:parent ?parentOfChild ;
                  a dbo:Monarch .

  # Commander in Siege of Mukha who is royalty
  ?commanderInSiege a dbo:MilitaryPerson ;
                    dbo:participatedIn dbr:Siege_of_Mukha ;
                    a dbo:Monarch .

  # Parent of this commander (royalty)
  ?parentOfCommander dbo:parent ?commanderInSiege ;
                     a dbo:Monarch .

  # Alter ego of Lamont Cranston
  ?lamontCranston dbr:Lamont_Cranston ;
                  foaf:name ""The Shadow"" .

  # Assuming some fictional connection or reference
  ?fictionalConnection dbr:The_Shadow ;
                       dbo:alterEgo ?lamontCranston .

  # Linking the historical and fictional elements
  ?fatherOfFather dbo:parent ?parentOfChild ;
                  dbo:parent ?parentOfCommander .
}
```

This query attempts to find a common ancestor (father of father) who is royalty, linking historical figures with a fictional character through their roles and relationships. Note that some assumptions are made due to the complexity and potential lack of direct data in DBpedia.",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
80,67,test,"Give me the actor of Shelby Oaks and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorShelbyOaks ?album ?actorGoldenMaster WHERE {
  # Find the actor associated with Shelby Oaks
  ?shelbyOaks dbo:actor ?actorShelbyOaks .
  
  # Find T.I.'s song that is also a musical work and its album
  ?song dbo:artist dbr:T.I. ;
        rdf:type dbo:Songs ;
        dbo:album ?album .

  # Find the actor related to ""The Golden Master"" series
  ?goldenMasterSeries dbo:actor ?actorGoldenMaster .
  
  FILTER(?shelbyOaks = dbr:Shelby_Oaks) .
  FILTER(?song = dbr:The_Song_That_Is_Also_A_Musical_Work) . # Replace with actual song/resource
  FILTER(?goldenMasterSeries = dbr:The_Golden_Master_Series) . # Replace with actual series/resource
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,69,test,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Myat Hpone Pyo's father who is royalty
  ?myatHponePyo dbo:father ?royalFather .
  ?royalFather a dbo:Monarch .

  # Saw Min Phyu's spouse who is royalty and their child
  ?sawMinPhyu dbo:spouse ?royalSpouse .
  ?royalSpouse a dbo:Monarch .
  ?royalSpouse dbo:child ?childOfRoyalSpouse .

  # Minye Kyawswa's child's parent
  ?minyeKyawswa dbo:child ?childOfMinyeKyawswa .
  ?parentOfChild dbr:Minye_Kyawswa dbo:child ?childOfMinyeKyawswa .

  # The spouse of Myat Hpone Pyo's royal father
  ?royalFather dbo:spouse ?spouse .

  # Predecessor condition
  ?predecessor dbo:successor ?spouse .
  ?predecessor dbo:child ?childOfRoyalSpouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
668,69,test,"Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?musician WHERE {
  # Rod Argent is a musician
  ?rodArgent dbo:profession dbr:Musician .
  
  # Tupac Shakur's birth name
  ?tupac dbp:birthName ""Lesane Parish Crooks""@en .

  # Amakye Dede, artist from Central Region, Ghana
  ?amakyeDede dbo:nationality dbr:Ghana ;
              dbo:birthPlace dbr:Central_Region,_Ghana ;
              dbo:profession dbr:Musician .
  
  # Find musicians associated with both Tupac and Amakye Dede
  ?musician dbo:associatedMusicalArtist ?tupac ;
            dbo:associatedMusicalArtist ?amakyeDede .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
151,9,test,Give me the entity in the birthplace of Burhan Belge and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplaceEntity ?award
WHERE {
  # Find Burhan Belge's birthplace
  dbr:Burhan_Belge dbo:birthPlace ?birthplace .
  
  # Get the entity associated with the birthplace
  ?birthplace rdfs:label ?birthplaceLabel .
  FILTER (lang(?birthplaceLabel) = 'en')
  OPTIONAL {
    ?birthplaceEntity rdfs:label ?birthplaceEntityLabel .
    FILTER (lang(?birthplaceEntityLabel) = 'en' && ?birthplaceEntity != ?birthplace)
  }
  
  # Find the award associated with Charles Parsons
  dbr:Charles_Parsons_(British_Army_officer) dbo:award ?award .
}
```

This query does the following:
- Retrieves the birthplace of Burhan Belge.
- Attempts to find an entity related to this birthplace (e.g., a city or region).
- Finds the award associated with Charles Parsons, specifically noting his role as a British Army officer.",4,4,5,2,2,2,2,9,0,0,3,0,0.0,0
23,28,test,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?countryOfGalán ?partyOfBarreras ?partyOfFatherPetro
WHERE {
  # Daniel Elahi Galán's country of birth
  dbr:Daniel_Elhai_Galán dbo:nationality ?nationalityGalán .
  ?nationalityGalán rdfs:label ?countryOfGalán .

  # Roy Leonardo Barreras Montealegre's political party
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:partyAffiliation ?partyBarreras .
  ?partyBarreras rdfs:label ?partyOfBarreras .

  # Sofía Petro's father and his political party
  dbr:Sofía_Petro dbo:father ?fatherPetro .
  ?fatherPetro dbo:partyAffiliation ?partyFatherPetro .
  ?partyFatherPetro rdfs:label ?partyOfFatherPetro .
  
  FILTER (lang(?countryOfGalán) = 'en')
  FILTER (lang(?partyOfBarreras) = 'en')
  FILTER (lang(?partyOfFatherPetro) = 'en')
}
```",6,7,7,2,3,2,3,28,0,0,1,0,0.0,0
412,27,test,"Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in the death place, that is a settlement, of Antonios Varthalitis.","SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfNapoleonZervas ?warOfAwardee30 ?deathPlaceSettlement
WHERE {
  # Find the war involving Napoleon Zervas
  ?person dbo:name ""Napoleon Zervas""@en .
  ?person dbo:participatedIn ?warOfNapoleonZervas .

  # Find the war of the awardee in 1930
  ?awardee dbo:awardYear ""1930""^^xsd:gYear .
  ?awardee dbo:participatedIn ?warOfAwardee30 .

  # Find Antonios Varthalitis' death place, which is a settlement
  ?varthalitis dbo:name ""Antonios Varthalitis""@en .
  ?varthalitis dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
  
  BIND(?deathPlace AS ?deathPlaceSettlement)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
742,19,test,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?birthplace WHERE {
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  ?alumnus dbo:birthPlace ?birthplace .

  OPTIONAL { 
    ?residence dbp:timeZone ""Eastern European Time"" .
    ?alumnus dbo:residence ?residence .
    ?residence dbo:settlementType dbr:Settlement .
  }
}
```

This query does the following:
- Selects individuals (`?alumnus`) who are alumni of Plovdiv University ""Paisii Hilendarski"".
- Retrieves their birthplace (`?birthplace`).
- Optionally checks if they reside in a settlement within a region observing Eastern European Time.",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
756,68,test,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/ontology/team> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v5 . ?v4 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor season of 2006–07 VfL Bochum
  ?successorSeason a dbo:SoccerClubSeason ;
                   dbo:succeeds dbr:2006%E2%80%9307_VfL_Bochum_season .

  # Ensure it's also a football league season, sports team season, and sports season
  ?successorSeason a dbo:FootballLeagueSeason ;
                   a dbo:SportsTeamSeason ;
                   a dbo:SportsSeason .

  # Find the manager of the team in this successor season
  ?team dbr:VfL_Bochum ;
        dbo:season ?successorSeason .
  ?managerPosition dbo:player ?team ;
                   dbo:position ""Manager""^^xsd:string .
  ?managerPosition dbo:agent ?manager .

  # Ensure Thomas Letsch is a manager of a soccer club season
  ?letschSeason a dbo:SoccerClubSeason ;
                dbo:manager ?manager .
  FILTER (str(?manager) = ""Thomas_Letsch"") .

  # Find the country of administration for the leader of West Germany
  ?leader dbr:Leader_of_West_Germany ;
          dbo:nationality ?country .
  ?country rdfs:label ""Germany""@en .

  # Ensure the manager is native to this country
  ?manager dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?country .
}
```",8,18,9,3,3,3,3,71,0,0,1,0,0.0,0
89,68,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Saw Shwe Khet's child
  ?sawChild dbo:childOf dbr:Saw_Shwe_Khet .
  
  # Minye Kyawswa's child and its parent (Minye Kyawswa)
  ?minyeChild dbo:childOf dbr:Minye_Kyawswa ;
              dbo:parent dbr:Minye_Kyawswa .

  # Predecessor of Saw Shwe Khet's child
  ?predecessor dbo:successor ?sawChild .
  
  # Ensure all are royalty
  FILTER (dbo:royalty(?sawChild) && dbo:royalty(?minyeChild) && dbo:royalty(?predecessor))

  # Father of Saw Shwe Khet's child
  ?father dbo:child ?sawChild .

  # Spouse of the father
  ?spouse dbo:spouse ?father .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
399,9,test,Give me the band member of the person born as Emilia Yancheva Valeva and professional in the profession of Jamie T.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find the DBpedia resource for Jamie T
  dbr:Jamie_T a dbo:MusicalArtist .
  
  # Query for band membership information
  OPTIONAL { 
    dbr:Jamie_T dbo:memberOf ?band .
  }
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
38,19,test,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict and author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author
WHERE {
  # Find the commander in the Korean conflict who is also an author
  ?commander a dbo:OfficeHolder ;
             dbo:officeName ""Commander"" ;
             dbo:country dbr:Korea ;
             dbo:work ?work1 .
  
  ?work1 a dbo:WrittenWork .

  ?author dbo:author ?work1 .

  # Find works by Joe Biden that are American and books
  ?bidenWork a dbo:Book ;
             dbo:author dbr:Joe_Biden ;
             dbo:country dbr:United_States .
  
  FILTER(?commander = ?author)
}
```",5,12,6,3,2,3,2,20,0,0,1,0,0.0,0
293,68,test,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/property/leaderParty> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v5 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Find the landmark with the given elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""20.1168""^^xsd:float .

  # Step 2: Identify films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .

  # Step 3: Find actors in those films
  ?film dbo:starring ?actor .

  # Step 4: Determine the spouse of these actors
  ?actor dbp:spouse ?spouse .

  # Step 5: Identify a person born as Anne Sothern
  ?person dbp:birthName ""Anne Sothern"" ;
          rdfs:label ?name .

  # Step 6: Find the party member of the ruling party related to all these connections
  ?partyMember dbo:memberOfParty ?rulingParty ;
               dbo:spouse ?spouse ;
               dbo:relatedTo ?person .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
737,69,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild
WHERE {
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?parent a dbo:Person ;
          dbo:child ?margareteSophie .
  
  # Step 2: Find the child's child of Duke Philipp of Württemberg
  ?philippChild a dbo:Person ;
                dbo:child ?philippGrandchild .

  # Step 3: Find the spouse and their royal child of Archduchess Helena of Austria
  ?helenaSpouse a dbo:Person ;
                dbo:spouse ?helena .
  
  ?royalChild a dbo:Person, dbo:RoyalFamilyMember ;
              dbo:parent ?helenaSpouse .

  # Step 4: Find the child of the child that is royalty and matches all conditions
  ?childOfParent a dbo:Person ;
                 dbo:child ?philippGrandchild ;
                 rdfs:label ?royalLabel .
  
  FILTER CONTAINS(LCASE(?royalLabel), ""king"") || 
         CONTAINS(LCASE(?royalLabel), ""queen"") ||
         CONTAINS(LCASE(?royalLabel), ""prince"") ||
         CONTAINS(LCASE(?royalLabel), ""princess"")

  # Step 5: Ensure the child of the child is a predecessor
  ?childOfChild a dbo:Person ;
                dbo:parent ?childOfParent .
  
  FILTER EXISTS {
    ?predecessor a dbo:Person ;
                 dbo:succeededBy ?childOfChild .
  }
}
ORDER BY ?childOfChild",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,28,test,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childWar ?birthPlaceEntity ?koichiroWar
WHERE {
  # Toyotomi Hideyoshi's child and their war
  dbr:Toyotomi_Hideyoshi dbo:child ?child .
  ?child dbo:participatedIn ?childWar .

  # Yamaza Enjirō's birthplace and associated entities or wars
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:wikiPageRedirects ?birthPlaceEntity .
  OPTIONAL { ?birthPlaceEntity dbo:participatedIn ?birthPlaceWar . }

  # Koichirō's war
  ?koichiro dbo:birthName ""Koichirō"" .
  ?koichiro dbo:participatedIn ?koichiroWar .
}
```",6,6,7,2,3,2,3,28,0,0,2,0,0.0,0
668,68,test,"Give me the associated musical artist of the person born as the birth name of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of Joey B.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Lesane Parish Crooks (Tupac Shakur)
  ?tupac dbo:birthName ""Lesane Parish Crooks""@en .
  ?tupac dbo:musicalArtist ?artist1 .

  # Dave Grohl
  ?dave foaf:name ""Dave Grohl""@en .
  ?dave dbo:profession dbr:Musical_artist .
  ?dave dbo:musicalArtist ?artist2 .

  # Jo-Vaughn Virginie Scott (Joey Badass)
  ?joey dbo:birthName ""Jo-Vaughn Virginie Scott""@en .
  ?joey dbo:musicalArtist ?artist3 .

  FILTER(?artist1 = ?artist2 && ?artist2 = ?artist3)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
353,67,test,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
    # Reference: Royalty and office holder related to William I
    ?reference a dbo:Monarch ;
               dbo:officeHolderOf ?office ;
               dbo:spouse ?williamI .
    
    # Child of Reference who is royalty
    ?child1 dbo:parent ?reference ;
            a dbo:Monarch .

    # Spouse of Constance of Burgundy
    ?constance dbr:Constance_of_Burgundy ;
               dbo:spouse ?spouseOfConstance .

    # Child of Spouse of Constance and Roger II of Sicily
    ?child2 dbo:parent ?spouseOfConstance ;
            dbo:parent dbr:Roger_II_of_Sicily .
    
    # Father of the child from Step 2
    ?father dbo:parent ?child1 .

    FILTER(?child1 = ?child2)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
295,20,test,"Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native 
WHERE {
  # Find the producer of ""Storm in a Teacup""
  ?film dbo:producer ?producer .
  
  FILTER (str(?film) = ""Storm_in_a_Teacup_(film)"")

  # Get the birthplace of the producer
  ?producer dbo:birthPlace ?birthPlace .

  # Find the native of this birthplace
  ?native dbo:nativeOf ?birthPlace .

  # Find Steven Kapur's musical work related to the true self
  ?kapur dbo:occupation dbr:Artist .
  FILTER (str(?kapur) = ""Steven_Kapur"")

  ?musicalWork dbo:writer ?kapur .
  ?musicalWork dbo:title ?title .

  FILTER regex(?title, ""true self"", ""i"")
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
213,19,test,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v4 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?countryOfWork
WHERE {
  # Find Chiang Ching-kuo's child who is a politician
  ?child dbo:parent dbr:Chiang_Ching-kuo ;
         dbo:occupation dbr:Politician .
  
  # Get the birthplace of this child
  ?child dbo:birthPlace ?birthPlace .

  # Find Hu Jieqing's spouse who is a writer
  ?spouse dbo:spouse dbr:Hu_Jieqing ;
          dbo:occupation dbr:Writer .

  # Get the country associated with the work of this writer
  ?work dbo:author ?spouse ;
        dbo:country ?countryOfWork .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
687,70,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v7 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Find the player who is both an actor and a soccer player
  ?player dbo:occupation dbr:Soccer_player .
  ?player dbo:occupation dbr:Actor .

  # This player should be in a film directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:starring ?player .

  # The film must be associated with a team linked to a person born as a soccer player and manager on Marcelo Sarmiento's birthday
  ?team dbo:member ?person .
  ?person dbo:birthDate ?birthdaySarmiento .
  ?person dbo:occupation dbr:Soccer_player .
  ?person dbo:occupation dbr:Soccer_manager .

  # Find Marcelo Sarmiento's birthdate
  ?sarmiento dbp:birthday ?birthdaySarmiento ;
            a dbo:Soccer_player .

  # Additionally, this player should be connected to another athlete born on February 22, 1955
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date .
  ?athlete dbo:occupation dbr:Athlete .
  ?player dbo:starring ?film2 .
  ?film2 dbo:starring ?athlete .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
103,71,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v2 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # The Shadow (video game) alter ego in comics
  ?shadowVideoGame dbo:wikiPageRedirects ?comicCharacter .
  FILTER(STRSTARTS(LCASE(?shadowVideoGame), ""the_shadow_(video_game)_""))

  # Ab Kya Hoga actor who is also a politician
  ?actor dbo:profession dbr:Politician ;
         dbo:workFeaturedIn dbr:Ab_Kya_Hoga .

  # Richard Grant Esterhuysen (John Matshikiza) connections
  ?person rdfs:label ""John Matshikiza""@en .
  ?movie dbo:starring ?person .
  ?tvShow dbo:starring ?person .

  # Find the professional in common
  ?professional dbo:profession ?actor ;
                dbo:alterEgo ?comicCharacter ;
                dbo:workFeaturedIn ?tvShow .
}
```",9,12,10,3,3,3,3,71,0,0,13,0,0.0,0
68,28,test,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  ?dorothea a dbo:Person ;
           foaf:name ""Dorothea of Denmark"" ;
           dbo:parent ?parent .

  # Parent of Dorothea (her father)
  ?parent a dbo:Person ;
          foaf:name ?fatherName .

  # Father of Dorothea's parent (her grandfather)
  ?grandfather a dbo:Person ;
              foaf:name ?grandfatherName ;
              dbo:child ?parent .

  # Ensure the grandfather is royalty and connected to Siege of Padua
  ?grandfather dbo:occupation dbr:Siege_of_Padua ;
               dbo:nationality dbr:Royal_Nationality .

  # Philip I of Castile's parent
  ?philip1 a dbo:Person ;
           foaf:name ""Philip I of Castile"" ;
           dbo:parent ?childOfGrandfather .

  # The child of the grandfather who is royalty and related to Philip I
  ?childOfGrandfather a dbo:Person ;
                     foaf:name ?childName ;
                     dbo:child ?philip1 .
}
```

This query attempts to navigate through the family tree as described, ensuring that each step adheres to the historical and relational context provided. Adjustments may be needed based on actual DBpedia data availability and structure.",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
198,71,test,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v7 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v8 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Quincy Adams Gillmore's details
  dbr:Quincy_Adam_Gillmore a dbo:MilitaryPerson ;
    dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
    dbo:awardReceived ?congressAward .

  # Awardee of the same award by U.S. Congress
  ?person dbo:awardReceived ?congressAward ;
          dbo:militaryService ?gillmoreForce .

  # Gillmore's military force
  dbr:Quincy_Adam_Gillmore dbo:militaryService ?gillmoreForce .

  # Person's birthplace details
  ?person dbo:birthPlace ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States .

  # War associated with the person
  ?person dbo:participatedInMilitaryConflict ?war .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
871,67,test,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Victor Stanley (Royal Navy officer)
  ?victor a dbr:Victor_Stanley_(Royal_Navy_officer) .
  
  # Parent of Victor Stanley
  ?victor dbo:child ?child1 .
  ?child1 dbo:parent ?parent .

  # Child of Victor Stanley who is a politician
  ?child1 dbo:occupation dbr:Politician .

  # Alumnus of Eton College
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  # Child of the alumnus whose parent is a politician and office holder
  ?alumnus dbo:child ?child2 .
  ?child2 dbo:parent ?politicianParent .

  # Politician and office holder
  ?politicianParent dbo:occupation dbr:Politician ;
                   dbo:officeHolder true .

  # Edward Stanley, 17th Earl of Derby
  ?edward a dbr:Edward_Stanley,_17th_Earl_of_Derby .
  
  # Parent who is a politician and office holder
  ?edward dbo:parent ?politicianParent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
158,27,test,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Alexander II, Grand Duke of Finland
  dbr:Aleksandr_II,_Grand_Duke_of_Finland dbo:nativePlace ?nativePlaceAlexanderII .

  # Nicholas II of Russia's administration (country)
  dbr:Nicholas_II_of_Russia dbo:country ?countryNicholasII .

  # Person deceased in Switzerland
  ?person dbo:deathPlace dbr:Switzerland ;
          dbo:nativePlace ?nativePlacePerson .

  # Conditions for the person
  FILTER (?nativePlacePerson = ?countryNicholasII) .
  
  # The person must be a descendant of Alexander II
  ?descendant dbo:parent ?person ;
              dbo:parent dbr:Aleksandr_II,_Grand_Duke_of_Finland .

}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
159,69,test,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v7 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  ?tvShow dbo:title ""Always the Love Songs""@en .
  ?tvShow dbo:creator ?writer .

  # Find a commander in a war related to the Battle of Vienna
  ?war dbo:name ?battleName .
  FILTER(CONTAINS(LCASE(?battleName), ""vienna"")).
  ?commander dbo:role ""Commander"" ;
             dbo:participatedIn ?war .

  # Find the successor who is also a politician and office holder
  ?successor dbo:succeededBy ?commander ;
             dbo:occupation ""Politician""@en, ""Office Holder""@en .
  
  # Connect Michał Kazimierz Pac to these roles
  ?pacz dbr:Micha%C5%82_Kazimierz_Pac .
  OPTIONAL { ?pacz dbo:successor ?successor . }
  OPTIONAL { ?pacz dbo:commanderInWar ?commander . }
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,70,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?residenceCountry WHERE {
  # Find the leader of PSOE during the 2009 Galician regional election
  ?party dbo:leader ?leader .
  ?leader dbo:nationality dbr:Spain .
  
  # Ensure the party is Spanish Socialist Workers' Party
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  # Find the residence country of this leader
  ?leader dbo:residenceCountry ?residenceCountry .
}
```

This query assumes that DBpedia has structured data about political parties, their leaders, and the residences of these individuals. It selects the leader of the Spanish Socialist Workers' Party who was active around the time of the 2009 Galician regional election and identifies their country of residence.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
353,68,test,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Alfonso VI of León and Castile's great-grandchild
  ?alfonso_vi a dbo:Monarch ;
              foaf:name ""Alfonso VI of León and Castile""@en .
  
  ?alfonso_vi_child dbo:spouseOrPartner ?alfonso_vi_spouse ;
                    dbo:child ?alfonso_vi_child1 .

  ?alfonso_vi_child1 dbo:child ?alfonso_vi_greatgrandchild .

  # Roger II of Sicily's child through his parent
  ?roger_ii a dbo:Monarch ;
            foaf:name ""Roger II of Sicily""@en .
  
  ?roger_ii_parent dbo:spouseOrPartner ?roger_ii_spouse ;
                   dbo:child ?roger_ii .

  ?roger_ii_child dbo:child ?roger_ii_parent .

  # Reference to William I
  ?william_i a dbo:Monarch ;
             foaf:name ""William I""@en .
  
  ?office_holder dbo:spouseOrPartner ?william_i_spouse ;
                 dbo:child ?william_i_child ;
                 rdf:type dbo:OfficeHolder, dbo:Monarch .

  ?father_of_office_holder dbo:child ?office_holder .

  # Find the individual who fits all criteria
  ?alfonso_vi_greatgrandchild = ?roger_ii_child .
  ?alfonso_vi_greatgrandchild = ?father_of_office_holder .
  
  FILTER (?alfonso_vi_greatgrandchild != ?roger_ii && 
          ?alfonso_vi_greatgrandchild != ?william_i)
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
246,19,test,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonParent WHERE {
  # Prince Faisal bin Hussein's child who is royalty
  ?child1 dbo:parent dbr:Prince_Faisal_bin_Hussein ;
          a dbo:RoyalFamilyMember .
  
  # Parent of that child
  ?parent1 dbo:child ?child1 .

  # Princess Muna al-Hussein's grandchild who is royalty
  ?grandChild2 dbo:parent ?child2 ;
               a dbo:RoyalFamilyMember .
  
  # Child of Princess Muna al-Hussein
  ?child2 dbo:parent dbr:Princess_Muna_al-Hussein .

  # Parent of that grandchild
  ?parent2 dbo:child ?grandChild2 .

  # Find common parent
  FILTER (?parent1 = ?parent2)
  BIND(?parent1 AS ?commonParent)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
531,68,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfCommander ?militaryConflict ?residenceTenant ?partyLeaderOffice
WHERE {
  # Manuel Pinto da Costa's office in a military conflict
  ?manuelPinto daCosta dbo:office ?officeOfCommander .
  ?officeOfCommander dbo:field dbr:Military_conflict .

  # 2003 Madrid City Council election leader's residence tenant
  ?election dbr:2003_Madrid_City_Council_election .
  ?leaderOfficeHolder dbo:office ?residenceTenant .
  ?residenceTenant dbo:location ?election .

  # Conservative Republican Party (Spain) leader
  ?partyLeaderOffice dbo:office ""Leader of the Conservative Republican Party (Spain)""@en .
  ?partyLeaderOffice dbo:field dbr:Conservative_Republican_Party_(Spain) .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,71,test,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v4 <http://dbpedia.org/property/alterEgo> ?v5 . ?v4 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Bob Thompson (musician) birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # The Shadow character by Walter B. Gibson
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .
  
  # Producer of Coke Studio Philippines
  ?producer dbp:profession dbr:Coke_Studio_Philippines .
  
  # Linking the birth name to a band
  ?birthName dbo:band ?band .

  # Ensure the person is associated with all roles
  FILTER (?birthName = ?producer)
}
```",9,12,10,3,3,3,3,71,0,0,4,0,0.0,0
687,71,test,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v8 . ?v8 <http://dbpedia.org/ontology/birthDate> ?v7 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Actor in the film who is a soccer player and athlete
  ?film dbo:starring ?actor .
  ?actor dbo:sport dbr:Soccer ;
         dbo:occupation dbr:Athlete .

  # Person born on Marty Pollio's birthday who played in these films
  ?person dbp:birthday ?birthdayPollio ;
          dbo:birthPlace ?placePollio .
  FILTER (STR(?birthdayPollio) = ""1975-10-23"") # Assuming Marty Pollio's birthday is October 23, 1975
  ?film dbo:starring ?person .

  # Team of the person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  ?manager dbp:birthday ?birthdaySarmiento ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Soccer_Manager .
  FILTER (STR(?birthdaySarmiento) = ""1975-10-23"") # Assuming Marcelo Sarmiento's birthday is October 23, 1975
  ?team dbo:member ?manager .

}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
531,70,test,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfCommander WHERE {
  # Manuel Pinto da Costa's office as a commander in a military conflict
  ?manuelPinto daCosta dbo:office ?officeOfCommander .
  ?officeOfCommander dbo:type dbr:Military_Commander .

  # Alberto Ruiz-Gallardón's residence
  ?albertoRuizGallardon dbo:residence ?residence .
  
  # Miguel Maura's political party and its leader
  ?miguelMaura dbo:partyLeaderOf ?politicalParty .
  ?politicalPartyLeader dbo:office ?leaderOffice .
  ?politicalPartyLeader dbo:type dbr:Politician .

  FILTER(?manuelPinto = dbr:Manuel_Pinto_da_Costa)
  FILTER(?albertoRuizGallardon = dbr:Alberto_Ruiz-Gallardón)
  FILTER(?miguelMaura = dbr:Miguel_Maura)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
723,20,test,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/producer> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Find Nate Newton's associated musical artist (band)
  dbr:Nate_Newton dbo:musicalArtist ?associatedBand .
  
  # Step 2: Identify the producer of ""Nothing to Gein"" that is an organization and a group
  dbr:Nothing_to_Gein dbo:producer ?producer .
  ?producer rdf:type dbo:MusicalGroup ;
            rdf:type dbo:Organization .

  # Step 3: Find band members of this producer
  ?producer dbo:bandMember ?bandMember .
  
  # Ensure the associated band is related to the producer in some way (e.g., collaboration)
  OPTIONAL { ?associatedBand dbo:collaboration ?producer }
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
203,68,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # World War I and its commander
  ?war dbo:wikiPageRedirects dbr:World_War_I .
  ?war dbo:commander ?commander .

  # Triple Alliance or Entente
  ?alliance dbo:partOf ?war .
  FILTER (
    ?alliance IN (dbr:Treaty_of_the_Triple_Alliance, dbr:Triple_Entente)
  )

  # Robert Calder's military force
  ?calderEvent dbo:wikiPageRedirects dbr:Napoleonic_Wars .
  ?calderEvent dbo:militaryForce ?force1 .

  # William Bayne's reference
  ?bayneEvent dbo:wikiPageRedirects ?reference .
  ?bayneEvent dbo:militaryConflict ?war2 .
  ?bayneEvent dbo:militaryForce ?force2 .

  FILTER (?force1 = ?force2)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,71,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v8 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v7 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v8 <http://dbpedia.org/property/leaderParty> ?v7 . ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/residence> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantCountry
WHERE {
  # Anxo Quintana's role in an administration
  dbr:Anxo_Quintana dbo:officeOf ?administration .
  
  # Administration related to the Spanish Socialist Workers' Party
  ?administration dbo:memberParty dbr:Spanish_Socialist_Workers'_Party .

  # Find a Spanish citizen from Spain associated with this administration
  ?citizen dbo:nationality dbr:Spain ;
           dbo:country dbr:Spain ;
           dbo:officeOf ?administration .

  # Residence of the citizen
  ?residence dbo:tenant ?citizen .
  
  # Tenant (country) of the residence
  ?residence dbo:locationCountry ?tenantCountry .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
468,20,test,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon and child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Alfonso IV of Aragon and his children who are royalty
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch . }

  # Martin of Aragon's parent (who is a royalty)
  dbr:Martin_of_Aragon dbo:parent ?martinParent .
  FILTER EXISTS { ?martinParent a dbo:Monarch . }

  # Find the child who is common between Alfonso IV and Martin's parent
  ?child dbo:parent ?martinParent .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
103,69,test,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Shadow's alter ego in comics
  VALUES (?shadowAlterEgo) { dbr:Lamont_Cranston }

  # Brett Ratner (Richard Grant Esterhuysen)
  VALUES (?brettRatner) { dbr:Brett_Ratner }
  
  # Shatrughan Sinha's profession
  ?sinha dbo:profession dbr:Actor .

  # Find a professional who matches the criteria
  ?professional dbo:alterEgo ?shadowAlterEgo .
  ?professional dbo:actorInMovie ?movie .
  ?movie dbo:adaptationOf ?tvShow .
  
  # Ensure the professional is also an actor in a movie adapted into a TV show
  ?professional dbo:profession dbr:Actor .

  # Check if Brett Ratner directed or produced the movie
  ?movie dbo:director ?brettRatner ;
         dbo:producer ?brettRatner .
  
  # Ensure the professional's profession matches Shatrughan Sinha's
  ?professional dbo:profession dbr:Actor .
}
```",8,10,9,3,3,3,3,71,0,0,13,0,0.0,0
782,68,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOfPerson1 ?associatedArtist1 ?bandOfNicholasCurran ?associatedArtist2 ?realNameBandKimWilson
WHERE {
  # Person born on 1945-03-30 who is a musical artist
  ?person dbo:birthday ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .

  # Band of the person
  ?bandOfPerson1 dbo:member ?person .
  
  # Associated musical artists with the band
  ?associatedArtist1 dbo:associatedBand ?bandOfPerson1 .

  # Nicholas Michael Curran as a musical artist
  dbr:Nicholas_Michael_Curran dbo:birthday ?curranBirthday ;
                               a dbo:MusicalArtist .

  # Band of Nicholas Michael Curran
  ?bandOfNicholasCurran dbo:member dbr:Nicholas_Michael_Curran .
  
  # Associated musical artists with Nicholas's band
  ?associatedArtist2 dbo:associatedBand ?bandOfNicholasCurran .

  # Kim Wilson as a musical artist
  dbr:Kim_Wilson a dbo:MusicalArtist ;
                 dbo:member ?bandKimWilson .

  # Real name of the band associated with Kim Wilson
  ?realNameBandKimWilson rdfs:label ?bandLabel .
  FILTER (CONTAINS(LCASE(?bandLabel), ""reality""))
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,20,test,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for , and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/postalCode> "","" . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/property/starring> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Artist ;
          dbo:genre ""Musical Artist"" ;
          dbo:dateOfDeath ?deathDate .
  
  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)

  ?work dbo:author ?person ;
        a dbo:Film ;
        a dbo:TelevisionShow .

  ?location dbo:nativePlace ?person ;
            a dbo:Settlement ;
            dbp:country ""England"" .
  
  ?person dbo:parent ?parent .
}
```",6,14,7,3,2,3,2,20,0,0,1,0,0.0,0
58,19,test,Give me the spouse of the person born as Linda Sue Cobb and producer of the movie with the award of Ian Gregson (poet).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Step 1: Identify Linda Sue Cobb
  ?person a dbo:Person ;
          foaf:name ""Linda Sue Cobb""@en ;
          dbo:birthName ""Linda Sue Cobb"" .
  
  # Step 2: Find the movie she produced
  ?movie dbo:producer ?person .

  # Step 3: Determine the award associated with Ian Gregson (poet)
  ?award dbo:recipient dbr:Ian_Gregson ;
         dbo:awardedFor ?movie .

  # Step 4: Find her spouse
  ?person foaf:mbox ?spouse .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
756,70,test,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v7 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager ;
          dbo:nationality dbr:Germany .

  ?player dbo:teamSeason dbr:2007–08_VfL_Bochum_season ;
          dbo:club dbr:VfL_Bochum ;
          dbo:manager ?person .

  ?dbr:West_Germany_leader dbo:nationality dbr:Germany .
  
  FILTER (?person = ?dbr:West_Germany_leader)
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
859,20,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find a member of Khlyst who is also a musical artist
  ?member dbo:bandMember dbr:Khlyst_(band) .
  ?member rdf:type dbo:MusicalArtist .

  # Step 2: Find the associated musical artist of this member
  ?associatedArtist dbo:associatedBandOrMusicalArtist ?member .

  # Step 3: Determine the band that is an organization and a group related to this second musical artist
  ?band dbo:associatedBandOrMusicalArtist ?associatedArtist .
  ?band rdf:type dbo:Band ;
        rdf:type dbo:Organization ;
        rdf:type dbo:Group .

  # Step 4: Identify the reference group for ""Burnt by the Sun""
  dbr:Burnt_by_the_Sun dbo:reference dbr:ReferenceGroup .

  # Step 5: Find a band member of this third band who is also a musical artist
  ?finalArtist dbo:bandMember ?band .
  ?finalArtist rdf:type dbo:MusicalArtist .
}
```",6,11,7,3,2,3,2,20,0,0,5,0,0.0,0
628,69,test,"Give me the person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v7 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Identify Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Step 2: Find the award associated with a region that is also an American state and settlement
  ?award dbo:recipient ?band .
  ?band dbo:member ?artist .
  ?artist dbo:associatedBand dbr:GS9 .
  ?region dbo:state ?state .
  ?region dbo:settlement ?settlement .
  ?state rdf:type <http://dbpedia.org/ontology/State> .
  ?settlement rdf:type <http://dbpedia.org/ontology/Settlement> .
  ?award dbo:location ?region .

  # Step 3: Ensure the band is from New York (state)
  ?band dbo:origin dbr:New_York_(state) .

  # Step 4: Find the person born with Bobby Shmurda's birth name
  ?person dbo:birthName ?birthName .
}
```",8,16,9,3,3,3,3,71,0,0,1,0,0.0,0
687,67,test,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInTeam ?teamName ?personName ?filmTitle
WHERE {
  # Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:playsFor ?team .
  ?team rdfs:label ?teamName .

  # Person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  SELECT DISTINCT ?person WHERE {
    ?person dbo:birthDate ?date .
    ?marceloSarmiento dbo:birthDate ?date .
    FILTER (STRSTARTS(STR(?marceloSarmiento), ""Marcelo_Sarmiento""))
    ?person dbo:occupation dbr:Soccer_player ;
            dbo:occupation dbr:Soccer_manager .
  }
  
  # Actor who is a soccer player and athlete, in a film by Manuel Huerga
  SELECT DISTINCT ?actor WHERE {
    ?actor dbo:occupation dbr:Soccer_player ;
           dbo:occupation dbr:Athlete .
    ?film dbo:director dbr:Manuel_Huerga ;
          dbo:starring ?actor .
  }
  
  # Get the film title
  ?film rdfs:label ?filmTitle .

  # Linking all together
  BIND(?person AS ?playerInTeam)
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
628,70,test,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember
WHERE {
  # Step 1: Find a band member of an artist associated with Bobby Shmurda
  ?artist dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
  ?bandMember dbo:memberOf ?artist .

  # Step 2: Identify a musical artist from Florida and their birth name
  ?floridaArtist dbo:nativePlace dbr:Florida ;
                rdf:type dbo:MusicalArtist ;
                dbp:birthday ?birthDate .
  ?floridaArtist foaf:name ?birthName .

  # Step 3: Find an award associated with a band from New York
  ?band dbo:nativePlace dbr:New_York_(state) ;
        dbo:award ?award .
  ?award dbo:region ?region ;
         dbo:country dbc:United_States_of_America ;
         dbo:state ?state ;
         dbo:settlement ?settlement .

  # Ensure the band member is also a musical artist
  ?bandMember rdf:type dbo:MusicalArtist .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
198,69,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  ?person dbo:honoraryAward dbr:Gillmore_Medal .
  
  ?award dbp:awardingBody dbr:United_States_Congress ;
         dbp:relatedWar ?war .
  
  ?person dbo:receivedAward ?award .

  ?person dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  ?entity dbo:location ?birthplace .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
731,19,test,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse and force of the awardee of Commander of the Order of the British Empire.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?force WHERE {
  # Find the war that is both a societal event and a military conflict
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent .

  # Identify the commander involved in the Sinking of Prince of Wales and Repulse
  ?sinking dbr:Sinking_of_the_Prince_of_Wales_and_HMS_Repulse .
  ?sinking dbo:commander ?commander .

  # Find the force associated with an awardee of Commander of the Order of the British Empire
  ?awardee dbo:awardReceived dbr:Commander_of_the_Order_of_the_British_Empire ;
          dbo:militaryForce ?force .
  
  # Link the commander to the war and the force
  ?commander dbo:participatedIn ?war .
  ?force dbo:participatedIn ?war .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
816,71,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v8 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v7 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .
  
  # Child of the spouse
  ?child dbo:parent ?spouse ;
         foaf:name ?childName .

  # Professional in Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?profession .
  ?professional dbo:profession ?profession ;
                dbo:parent ?spouse .

  # Person decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles ;
            foaf:name ?decedentName .

  # Work associated with the actor of the movie
  ?work dbo:actor ?actor .
  ?movie dbo:starring ?actor ;
         dbo:subject ?decedent .
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
159,67,test,"Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # George Ducas and his role
  dbr:George_Ducas dbo:successorOf ?yuriiKhmelnytsky .
  
  # Yurii Khmelnytsky's role
  ?yuriiKhmelnytsky a dbo:Person ;
                   dbo:commanderIn ?battleOfVienna .

  # Battle of Vienna as a military event
  dbr:Battle_of_Vienna a dbo:MilitaryConflict .

  # The writer who is connected to these figures and events
  ?writer dbo:workOf ?georgeDucas .
  ?writer dbo:successorOf ?yuriiKhmelnytsky .
  ?writer dbo:commanderIn ?battleOfVienna .
  
  # Additional condition for the television show and societal event
  ?writer dbo:relatedTo dbr:Television_Show ;
          dbo:relatedTo dbr:Societal_Event .
}
```

This query attempts to find a writer who is connected to George Ducas, Yurii Khmelnytsky, and the Battle of Vienna, while also being related to a television show and societal event. Adjustments may be needed based on actual DBpedia data availability.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
941,20,test,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v4 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalChild
WHERE {
  # Step 1: Find a child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?childFerdinand dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  
  # Step 2: Find the spouse of this child
  ?spouse1 dbp:spouse ?childFerdinand .

  # Step 3: Find a royal child of Princess Antoinette of Brunswick-Wolfenbüttel
  ?royalChildAntoinette dbo:parent dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel .
  FILTER EXISTS { ?royalChildAntoinette dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }

  # Step 4: Find the spouse of this royal child
  ?spouse2 dbp:spouse ?royalChildAntoinette .

  # Step 5: Find the parent of the spouse from step 2
  ?parentSpouse1 dbo:child ?spouse1 .

  # Step 6: Identify a royal child of this parent
  ?finalRoyalChild dbo:parent ?parentSpouse1 .
  FILTER EXISTS { ?finalRoyalChild dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
119,19,test,"Give me the war of the commander in French Revolutionary Wars and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?country ?athlete WHERE {
  # Find a commander in the French Revolutionary Wars
  ?commander dbo:nationality dbr:Poland ;
             dbo:occupation dbr:Military_person ;
             dbo:participatedIn ?war .
  
  FILTER regex(str(?war), ""French Revolutionary Wars"", ""i"")

  # Find the residence of this commander, which is a country
  ?commander dbo:residence ?residence .
  ?residence rdf:type dbo:Country ;
             rdfs:label ?country .

  # Find a Polish athlete native to Łódź
  ?athlete dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź ;
           dbo:occupation dbr:Athlete .
  
  # Bind the results
  BIND(?war AS ?war)
  BIND(?country AS ?country)
  BIND(?athlete AS ?athlete)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
628,71,test,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/awards> ?v8 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: GS9 Member who is an artist and a musical artist
  ?gs9Member dbo:type dbr:GS9 ;
             dbo:memberOf ?associatedArtist .
  
  FILTER EXISTS { ?gs9Member dbo:type dbr:MusicalArtist . }
  FILTER EXISTS { ?gs9Member dbo:type dbr:Artist . }

  # Step 2: Associated Musical Artist
  ?associatedArtist dbo:type dbr:MusicalArtist .

  # Step 3: Band Member of the associated musical artist
  ?bandMember dbo:memberOf ?associatedArtist .
  
  FILTER EXISTS { ?bandMember dbo:type dbr:MusicalArtist . }

  # Step 4: Awardee that is a band, awarded in New York (state)
  ?awardRegion dbo:type dbr:New_York_(state) ;
               dbo:country dbr:United_States .
  
  ?awardee dbo:recipientOfAward ?awardRegion ;
           dbo:type dbr:Band .

  # Step 5: Native of the award region
  ?native dbp:nativePlace ?awardRegion .

  # Step 6: Birth name of this native
  ?birthName dbp:birthName ?native .

  # Step 7: Person born as birth name who is a musical artist
  ?person dbp:birthName ?birthName ;
          dbo:type dbr:MusicalArtist .
  
  # Step 8: Native of Florida
  ?person dbp:nativePlace dbr:Florida .
}",9,18,10,3,3,3,3,71,0,0,1,0,0.0,0
140,20,test,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist) and commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/party> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Find John McDermott's death place
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Step 2: Identify Pickett's Charge and its commander
  dbr:Picketts_Charge dbo:commander ?commander .

  # Step 3: Find the ruling party of the death place
  ?deathPlace dbp:rulingParty ?rulingParty .

  # Ensure the ruling party is a political party and an organization
  ?rulingParty rdf:type dbo:PoliticalParty ;
               rdf:type dbo:Organization .

  # Step 4: Identify a member of this ruling party who is also a commander in Pickett's Charge
  ?partyMember dbo:memberOf ?rulingParty .
  ?partyMember = ?commander .
}
```",6,10,7,3,2,3,2,20,0,0,4,0,0.0,0
347,71,test,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Algerian War military force and commander
  ?algerianWar dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .

  # Commander is also a societal event and television show
  ?societalEvent dbo:relatedPerson ?commander .
  ?tvShow dbo:actor ?commander .

  # Maria Anna of Bavaria's child who is royalty
  dbr:Maria_Anna_of_Bavaria_(1574-1616) dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch .

  # Archduke Charles Joseph of Austria's parent
  ?charlesJosephParent dbo:parentOf ?archdukeCharlesJoseph .
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?charlesJosephParent .

  # Linking the commander to the royalty child and parent chain
  ?royaltyChild dbo:child ?commander .
  ?charlesJosephParent dbo:child ?royaltyChild .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
203,69,test,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify the war associated with William Bayne
  ?war dbo:militaryConflictOf dbr:William_Bayne_(Royal_Navy_officer) .
  
  # Step 2: Find the military force related to this war, which is also an event and societal event
  ?militaryForce dbo:eventRelatedTo ?war ;
                a dbo:MilitaryUnit ;
                dbo:societalEventOf ?event .

  # Step 3: Identify the awardee of Knight Commander of the Order of the Bath linked to this military force
  ?awardee dbo:militaryForce ?militaryForce ;
          dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .

  # Step 4: Find ""The Triple X's"" and their commander in this context
  ?tripleXs dbo:commander ?commander .
  
  FILTER (str(?tripleXs) = ""The_Triple_X's"") .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
737,67,test,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalty WHERE {
  # Step 1: Find Archduchess Margarete Sophie of Austria's father
  ?margareteSophie a dbo:Person ;
                  foaf:surname ""Habsburg-Lorraine"" ;
                  dbp:father ?father .

  # Step 2: Find the predecessor of Carl, Duke of Württemberg
  ?carl a dbo:Person ;
        dbp:title ""Duke of Württemberg"" ;
        dbp:predecessor ?predecessor .

  # Step 3: Trace back three generations from Alexander of Württemberg (1804-1881)
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en ;
             dbo:birthDate ?birthDate ;
             FILTER(YEAR(?birthDate) = 1804 && MONTH(?birthDate) <= 12 && DAY(?birthDate) <= 31) .

  ?alexander dbp:child ?grandChild1 .
  ?grandChild1 dbp:child ?greatGrandChild .
  ?greatGrandChild dbp:child ?greatGreatGrandChild .

  # Step 4: Combine to find the royalty
  ?father dbp:child ?predecessor .
  ?greatGreatGrandChild a dbo:Person ;
                       foaf:name ?royaltyName ;
                       dbo:parent ?predecessor ;
                       dbo:isRoyalMemberOf ?royalHouse .

  FILTER(?royaltyName != """")
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
87,28,test,"Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find awards associated with Janusz Kamiński
  ?award dbo:recipient dbr:Janusz_Kamiński .

  # Step 2: Find movies featuring Audrey Hepburn and another actor
  ?movieAudrey dbo:starring dbr:Audrey_Hepburn .
  ?movieAudrey dbo:starring ?actor1 .

  # Step 3: Find movies featuring Iliza Shlesinger and the same actor
  ?movieIliza dbo:starring dbr:Iliza_Shlesinger .
  ?movieIliza dbo:starring ?actor2 .

  # Ensure it's the same actor in both sets of movies
  FILTER (?actor1 = ?actor2)

  # Step 4: Find the spouse of this common actor
  ?actor1 dbo:spouse ?spouse .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
905,70,test,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result WHERE {
  # Step 1: Predecessor of Stephen V of Hungary
  ?stephenV dbo:predecessor ?predecessor .
  FILTER(STR(?stephenV) = ""Stephen_V_of_Hungary"")

  # Step 2: Child of the predecessor (likely his son)
  ?childOfPredecessor dbo:spouseOrPartner ?predecessor .

  # Step 3: Parent of the father, that is a royalty, of the spouse of Maria of Bytom
  ?maria dbp:spouseOrPartner ?spouseMaria .
  FILTER(STR(?maria) = ""Maria_of_Bytom"")
  
  ?fatherOfSpouse dbo:child ?spouseMaria .
  ?parentOfFather dbo:child ?fatherOfSpouse .

  # Step 4: Spouse of the father of Philip I, Prince of Taranto
  ?philipI dbp:father ?fatherPhilipI .
  FILTER(STR(?philipI) = ""Philip_I,_Prince_of_Taranto"")
  
  ?spouseFatherPhilip dbo:spouseOrPartner ?fatherPhilipI .

  # Find the common link that is royalty
  ?result dbo:child ?childOfPredecessor ;
          dbo:parent ?parentOfFather ;
          dbo:spouseOrPartner ?spouseFatherPhilip .
  FILTER(STR(?result) != """")
}",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
311,19,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M. and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # R.E.M. is a band
  dbr:R._.M. dbo:bandMember ?member1 .
  
  # Find an associated musical artist of R.E.M.
  ?member1 dbo:associatedMusicalArtist ?associatedArtist .

  # Sappy is an album (musical work, work, and album)
  dbr:Sappy a dbo:Album ;
           dbo:composer ?writer .

  # The associated artist should be a band member of the writer of ""Sappy""
  ?associatedArtist dbo:bandMember ?member2 .
  FILTER (?member2 = ?writer)
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
80,69,test,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v7 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # The Golden Master Series alter ego
  ?goldenMasterSeries dbo:characterName ?alterEgo .
  ?alterEgo dbo:profession ?professional .

  # What You Know (T.I. song) album actor
  ?album dbr:What_You_Know_(song) dbo:actor ?person .

  # Smartbomb book author and movie
  ?smartbombBook dbo:author ?author .
  ?movie dbo:starring ?author ;
         dbo:starring ?person .
}
```

This query attempts to find a person who is linked through these three distinct connections. Note that the exact properties and resources might need adjustment based on DBpedia's current schema and available data.",8,8,9,3,3,3,3,71,0,0,4,0,0.0,0
159,68,test,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInWar ?successor ?force ?writerOfGeorgeDucas
WHERE {
  # Find Jean Baptist, Comte d'Arco's role in a war that is both a TV show and societal event
  ?war dbo:type/dbo:subClassOf* (dbr:Television_show ; dbr:Societal_event) .
  ?commanderInWar dbo:role ?war ;
                  rdfs:label ""Jean Baptist, Comte d'Arco""@en .

  # Find the successor who is a politician and office holder
  ?successor dbo:type/dbo:subClassOf* (dbr:Politician ; dbr:Office_holder) .
  ?commanderInWar dbo:successor ?successor .

  # Find the force associated with Michał Kazimierz Pac
  ?force dbo:type/dbo:subClassOf* (dbr:Event ; dbr:Military_conflict) ;
         dbo:commander ?paczCommander .
  ?paczCommander rdfs:label ""Michał Kazimierz Pac""@en .

  # Find the writer of George Ducas's work
  ?georgeDucasWork dbo:author ?writerOfGeorgeDucas .
  ?georgeDucasWork dbo:subject dbr:George_Ducas .
}",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
119,69,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of the administration, that is an event, of Anxo Quintana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v7 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationTenant ?countryResidence ?eventLeader 
WHERE {
  # Find the administration of the Spanish Socialist Workers' Party
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:hasMember ?party ;
                  dbo:member ?tenant .

  # Find Álvaro Quirós's country of residence
  dbr:Álvaro_Quirós dbo:nationality ?countryResidence .

  # Find the event where Anxo Quintana is a leader
  ?event dbo:leader ?anxo ;
         dbo:leaderPosition ""Leader""@en .
  
  ?anxo rdfs:label ""Anxo Quintana""@en .
  
  # Bind the results to variables
  BIND(?tenant AS ?administrationTenant)
  BIND(?countryResidence AS ?countryResidence)
  BIND(?event AS ?eventLeader)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
782,69,test,"Give me the reference to the real name of the band of Kim Wilson and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v7 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?kimWilsonBand ?ericClaptonBandMember ?nickCurranArtist
WHERE {
  # Kim Wilson and his band
  dbr:Kim_Wilson dbo:band dbr:?kimWilsonBand .
  
  # Eric Clapton's band member
  dbr:Eric_Clapton dbo:memberOf dbr:?ericClaptonBandMember .

  # Nick Curran's associated musical artist persona
  dbr:Nick_Curran dbo:associatedMusicalArtist dbr:?nickCurranArtist .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
361,27,test,"Give me the professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?album dbo:genre dbr:Lasso_the_Moon ;
         dbo:workExample ?film .
  
  ?actor dbo:profession dbr:Actor ;
         dbo:actedIn ?album .

  ?alterEgo dbo:alterEgoOf dbr:The_Shadow ;
            dbo:professionalIn ?actor .
}
```

This query does the following:
- Selects an actor who is a professional in ""Actor"" and has acted in an album related to ""Lasso the Moon.""
- Ensures that this album is also associated with a film.
- Checks if the same actor is professionally linked to the alter ego of ""The Shadow.""",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
39,69,test,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v7 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalIn1 ?band ?professionalIn2
WHERE {
  # Producer of Coke Studio Philippines
  ?producer a dbo:Producer ;
            dbo:profession ?professionalIn1 .
  
  FILTER(STRSTARTS(STR(?producer), ""Coke_Studio_Philippines""))

  # Bob Thompson (musician)
  ?bob dbr:Bob_Thompson_(musician) ;
       dbo:birthName ""Bob Thompson""^^xsd:string ;
       dbo:band ?band .

  # The Shadow
  ?shadow a dbo:The_Shadow ;
          dbo:alterEgo ?professionalIn2 .
}",8,9,9,3,3,3,3,71,0,0,4,0,0.0,0
23,27,test,Give me the entity in the country of Daniel Elahi Galán and party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  OPTIONAL { 
    ?galan dbr:Daniel_El%C3%A1i_Gal%C3%A1n .
    ?galan dbo:nationality dbr:Colombia .
  }
  
  OPTIONAL { 
    ?barreras dbr:Roy_Barreras .
    ?barreras dbo:nationality dbr:Colombia .
  }

  OPTIONAL { 
    ?petro dbr:Gustavo_Petro .
    ?petro dbo:nationality dbr:Colombia .
  }
  
  ?entity dbo:nationality dbr:Colombia .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,68,test,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://dbpedia.org/property/father> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .

  ?parent dbo:child ?philip ;
          a dbo:Monarch .

  ?grandparent dbo:child ?parent ;
               a dbo:Monarch .

  ?spouse dbo:spouseOrPartner ?grandparent .

  ?belavChild dbo:child dbr:Béla_IV_of_Hungary ;
              a dbo:Monarch .

  ?mariaSpouse dbo:spouseOrPartner dbr:Maria_of_Bytom .

  ?father dbo:child ?mariaSpouse ;
          a dbo:Monarch .

  ?grandparentMaria dbo:child ?father ;
                   a dbo:Monarch .

  FILTER(?grandparent = ?grandparentMaria)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
595,71,test,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?author rdf:type dbo:Author .
  ?author foaf:name ""Hillary Rodham Clinton"" .
  ?author dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician .
  ?spouse dbo:officeHolder true .
}
```

This query assumes that DBpedia has structured data about Hillary Clinton's spouse, Bill Clinton, as a politician and office holder.",9,20,10,3,3,3,3,71,0,0,1,0,0.0,0
609,70,test,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v7 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find Paulus Powell's birthplace
SELECT ?paulusBirthPlace WHERE {
    dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
}

# Step 2: Find the governor of Paulus Powell's birthplace
SELECT ?governor WHERE {
    ?paulusBirthPlace a dbo:AdministrativeRegion ;
                      dbo:governmentHead ?governor .
    FILTER (?governor rdf:type dbo:Politician)
}

# Step 3: Find Vince Gilligan's awardees' birthplaces
SELECT DISTINCT ?awardeeBirthPlace WHERE {
    ?award dbr:Vince_Gilligan dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
}

# Step 4: Find the American author of El Deafo reference
SELECT ?authorBirthPlace WHERE {
    ?reference dbo:subject dbr:El_Deafo ;
               dbo:author ?author .
    FILTER (?author rdf:type dbo:American)
    ?author dbo:birthPlace ?authorBirthPlace .
}

# Step 5: Collect all relevant birthplaces
SELECT DISTINCT ?birthPlace WHERE {
    VALUES ?birthPlace { ?governor ?paulusBirthPlace ?awardeeBirthPlace ?authorBirthPlace }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
89,70,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> ?v7 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
    # Step 1: Find the spouse of Saw Min Phyu
    ?spouse a dbo:Spouse ;
            dbo:spouse dbr:Saw_Min_Phyu .

    # Step 2: Find their child who is royalty
    ?child dbo:parent ?spouse ;
           a dbo:RoyalFamilyMember .

    # Step 3: Identify Min Hla Htut of Pyakaung and find the parent
    ?minHlaHtut dbr:Min_Hla_Htut_of_Pyakaung .
    ?parent dbo:child ?minHlaHtut .

    # Step 4: Find the child of that parent
    ?anotherChild dbo:parent ?parent .

    # Step 5: Identify the father who is royalty and find his spouse
    ?royalFather a dbo:RoyalFamilyMember ;
                 dbo:spouse ?anotherChild .

    # Step 6: Find their child who is royalty
    ?royalChild dbo:parent ?royalFather ;
                a dbo:RoyalFamilyMember .

    # Step 7: Identify Saw Shwe Khet and find the child who is royalty
    ?sawShweKhet dbr:Saw_Shwe_Khet .
    ?childOfSawShweKhet dbo:parent ?sawShweKhet ;
                       a dbo:RoyalFamilyMember .

    # Step 8: Find the predecessor of the initial identified person from step 2
    ?predecessor dbo:successor ?child .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
263,27,test,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent1 ?parent2 WHERE {
  # Parent of Hon. Mary Frances Bowes-Lyon (Queen Elizabeth The Queen Mother)
  dbr:Elizabeth_The_Queen_Mother dbo:spouse dbr:George_VI .
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child dbr:Elizabeth_The_Queen_Mother .

  # Parent of the child of Claude Bowes-Lyon (Queen Elizabeth II)
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child dbr:Elizabeth_II .
  dbr:Elizabeth_The_Queen_Mother dbo:spouse dbr:George_VI .

  BIND(dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne AS ?parent1)
  BIND(dbr:Elizabeth_The_Queen_Mother AS ?parent2)
}",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
557,69,test,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Find Kent Allard's alter ego
  ?kentAllard dbo:alterEgo ?fictionalCharacter .
  
  # Step 2: Find the actor of ""High Society Blues"" and their claim to fame
  dbr:High_Society_Blues dbo:actor ?actor .
  ?actor dbo:claimToFame ?work1 .

  # Step 3: Find Cora Sue Collins' work and its producer
  ?coraSueCollinsWork dbo:producer ?professional .
  ?coraSueCollinsWork dbo:claimToFame ?work2 .

  # Link the fictional character to the professional through works
  ?fictionalCharacter dbo:claimToFame ?work1 .
  ?fictionalCharacter dbo:claimToFame ?work2 .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
769,20,test,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v4 <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?manager WHERE {
  # Find Tony Hollings' birthday
  dbr:Tony_Hollings dbo:birthday ?birthday .

  # Find players born on the same day as Tony Hollings who are athletes, soccer players, sports managers, and soccer managers
  ?player dbo:birthDate ?sameBirthday .
  FILTER (YEAR(?sameBirthday) = YEAR(?birthday) && MONTH(?sameBirthday) = MONTH(?birthday) && DAY(?sameBirthday) = DAY(?birthday))
  
  ?player a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .

  # Find managers who are sports managers and soccer managers of an organization that is a sports club, sports team, and soccer club
  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager .
  
  ?organization a dbo:Organization ;
                a dbo:SportsClub ;
                a dbo:SportsTeam ;
                a dbo:SoccerClub .

  # Relate the manager to Hong Kong C
  ?organization dbr:Hong_Kong_C .
  ?manager dbo:worksFor ?organization .

}
```",6,16,7,3,2,3,2,20,0,0,2,0,0.0,0
859,19,test,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band) and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find a member of ""Khlyst (band)"" who is also a musical artist.
  ?member dbo:memberOf dbr:Khlyst_(band) .
  ?member dbo:occupation dbr:Musical_artist .

  # Step 2: Find the associated musical artist of that member.
  ?associatedArtist dbo:associatedMusicalArtist ?member .
  
  # Step 3: Determine the band or group associated with ""Burnt by the Sun (band).""
  ?burntBySunAssociatedGroup dbo:associatedBand dbr:Burnt_by_the_Sun_(band) .

  # Ensure it's a band, group, and organization.
  ?burntBySunAssociatedGroup rdf:type/(dbo:Band|dbo:MusicalGroup|dbo:Organization) .

  # Step 4: Find a band member of this associated musical artist.
  ?finalArtist dbo:memberOf ?associatedArtist .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
557,68,test,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor of Johnny Doughboy
  ?actor dbo:character dbr:Johnny_Doughboy .
  
  # Find the work associated with this actor
  ?work dbo:starring ?actor .
  
  # Find the producer of this work
  ?work dbo:director ?producer .

  # Find the reference to Kent Allard (print)
  ?reference dbo:character dbr:Kent_Allard_(print) .
  
  # Find the work associated with this reference
  ?work2 dbo:starring ?reference .
  
  # Ensure it's produced by the same producer
  ?work2 dbo:director ?producer .

  # Find Janet Gaynor's claim to fame (a movie)
  ?movie dbo:starring dbr:Janet_Gaynor .
  
  # Ensure it's produced by the same producer
  ?movie dbo:director ?producer .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
203,70,test,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Step 1: Identify the 30th (Cambridgeshire) Regiment of Foot
  VALUES ?regiment { dbr:30th_(Cambridgeshire)_Regiment_of_Foot }

  # Step 2: Find wars involving this regiment
  ?war dbo:militaryUnit ?regiment .

  # Step 3: Determine the commander in that war
  ?commander dbo:commandedMilitaryForce ?militaryForce .
  ?commander dbo:commandedMilitaryConflict ?war .

  # Step 4: Identify William Bayne's reference and role
  VALUES ?bayne { dbr:William_Bayne }
  OPTIONAL {
    ?bayne dbo:commandedMilitaryConflict ?war .
  }

  # Step 5: Find the awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:awardReceived dbr:Knight_Commander_of_the_Order_of_the_Bath .

  # Step 6: Ensure this person is linked to societal events and military forces
  ?societalEvent dbo:participant ?awardee .
  ?militaryForce dbo:militaryCommander ?awardee .

  FILTER(?commander = ?bayne || ?commander != ?bayne)
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
39,70,test,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalInSamConcepcion ?bandOfBobThompson ?fictionalCharacterByWalterBGibson
WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?professionalInSamConcepcion .

  # Band of Bob Thompson (musician)
  ?person rdfs:label ""Bob Thompson""@en .
  ?person dbo:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), ""bob thompson""))
  ?person dbo:band ?bandOfBobThompson .
  
  # Fictional character created by Walter B. Gibson
  dbr:Walter_B._Gibson dbo:creation ?fictionalCharacterByWalterBGibson .
  ?fictionalCharacterByWalterBGibson a dbo:FictionalCharacter ;
                                   dbo:wikiPageWikiLink dbr:Comics .
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
737,68,test,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria and child of the child of the child of Alexander of Württemberg (1804-1881).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find Archduchess Helena of Austria's spouse and their royal child
  ?helena a dbo:Archduchess ;
          dbo:spouse ?spouse .
  
  ?child1 dbo:parent ?spouse ;
          a dbo:Royal .

  # Step 2: Find the predecessor (parent) of this royal child
  ?predecessor dbo:parent ?child1 .

  # Step 3: Find Archduke Charles Louis of Austria's royal child, their child, and that child's child
  ?charles a dbo:Archduke ;
           dbo:child ?royalChild2 .
  
  FILTER (EXISTS { ?royalChild2 a dbo:Royal }).
  
  ?grandchild1 dbo:parent ?royalChild2 ;
              a dbo:Royal .

  ?greatGrandchild dbo:parent ?grandchild1 ;
                   a dbo:Royal .

  # Step 4: Find Alexander of Württemberg's great-grandchild
  ?alexander a dbo:Alexander_of_Württemberg ;
             dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear .
  
  ?grandchild2 dbo:parent ?alexander ;
               a dbo:Royal .

  ?greatGrandchild2 dbo:parent ?grandchild2 ;
                    a dbo:Royal .

  ?greatGreatGrandchild dbo:parent ?greatGrandchild2 ;
                        a dbo:Royal .

  # Ensure the predecessor matches the great-great-grandchild
  FILTER (?predecessor = ?greatGreatGrandchild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
557,70,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer1 ?producer2 WHERE {
  # Step 1: Find actor of ""High Society Blues"" who is also The Shadow
  ?actor a dbo:Actor ;
         dbo:filmRole dbr:High_Society_Blues ;
         foaf:name ""The Shadow""@en .

  # Step 2: Find their claim to fame that is a movie and a work
  ?fame1 dbo:workExample ?movieWork ;
        dbo:actor ?actor .

  # Step 3: Determine the producer of this movie/work
  ?movieWork dbo:producer ?producer1 .

  # Step 4: Identify actor of ""Johnny Doughboy""
  ?actor2 a dbo:Actor ;
          dbo:filmRole dbr:Johnny_Doughboy .

  # Step 5: Find their claim to fame that is a work
  ?fame2 dbo:workExample ?work ;
         dbo:actor ?actor2 .

  # Step 6: Determine the producer of this work
  ?work dbo:producer ?producer2 .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
386,27,test,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war1 ?war2 WHERE {
  # Find individuals awarded the Golden Sword for Bravery in the Russian Empire
  ?award dbo:recipient ?person .
  ?award dbo:name ""Golden Sword for Bravery""@en .
  ?person dbo:nationality dbr:Russian_Empire .

  # Ensure these individuals participated in a war (war1)
  ?person dbo:militaryConflict ?war1 .

  # Find another award of number 25 in a different war (war2)
  ?award2 dbo:recipient ?person .
  ?award2 dbo:name ?awardName .
  FILTER regex(?awardName, ""Award 25"", ""i"") .
  ?person dbo:militaryConflict ?war2 .
  
  # Ensure the wars are distinct
  FILTER (?war1 != ?war2)
}
```

This query does the following:
- Selects individuals (`?person`) who received the ""Golden Sword for Bravery"" and were part of the Russian Empire.
- Ensures these individuals participated in at least one military conflict (`?war1`).
- Checks if they also received an award with a name containing ""Award 25"" in another distinct war (`?war2`).",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
103,67,test,"Give me the actor of Dispatches from Elsewhere and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorDispatches ?professionActorDispatches 
       ?politicianActorAbKyaHoga ?alterEgoShadowGame
WHERE {
  # Actor of ""Dispatches from Elsewhere""
  ?dispatchesSeries dbo:title ""Dispatches from Elsewhere""@en .
  ?dispatchesSeries dbo:starring ?actorDispatches .

  # Profession of the actor from Dispatches from Elsewhere
  ?actorDispatches dbo:profession ?professionActorDispatches .

  # Actor who is a politician and acted in ""Ab Kya Hoga""
  ?abKyaHogaSeries dbo:title ""Ab Kya Hoga""@en .
  ?abKyaHogaSeries dbo:starring ?politicianActorAbKyaHoga .
  ?politicianActorAbKyaHoga dbo:profession dbr:Politician .

  # Comics character alter ego in ""The Shadow (video game)""
  ?shadowGame dbo:title ""The Shadow (video game)""@en .
  ?shadowGame dbo:alterEgo ?comicsCharacter .
  ?comicsCharacter rdf:type dbo:ComicsCharacter .
  BIND(?comicsCharacter AS ?alterEgoShadowGame)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
628,67,test,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of the native, that is a musical artist, of Florida and band member of Uncle Murda.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardNative ?bandName ?artistBirthName WHERE {
  # Find the award that is a region, American state, and settlement
  ?award dbo:type dbr:Region .
  ?award dbo:type dbr:American_state .
  ?award dbo:type dbr:Settlement .

  # Find a band from New York (state)
  ?band dbo:location dbr_New_York_(state) ;
        dbo:member ?person1 .

  # Find the person born as the birth name of a musical artist native to Florida
  ?person1 dbp:birthday ?birthDate .
  ?artist dbo:nativePlace dbr_Florida ;
          dbp:birthName ?birthName ;
          dbo:member dbr_Uncle_Murda .

  # Link the person's birth name with the artist's birth name
  FILTER (?birthName = ?person1)

  # Get the award native of the band member
  ?awardNative dbo:type ?award .
  
  # Bind variables for output
  BIND(?band AS ?bandName)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,68,test,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v7 <http://dbpedia.org/property/author> ?v0 . ?v5 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v7 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
    # Hillary Clinton and her book ""Living History""
    dbr:Hillary_Clinton dbo:author dbr:Living_History .
    
    # Bill Clinton as spouse of Hillary Clinton
    dbr:Bill_Clinton dbo:spouse dbr:Hillary_Clinton ;
                    dbo:residence dbr:Chappaqua, New York ;
                    a dbo:Politician ;
                    dbo:officeHolder dbr:President_of_the_United_States .
    
    # War of 1812 involving the United States Navy
    dbr:War_of_1812 dbo:participatedInMilitaryConflicts ?navyEvent .
    ?navyEvent dbo:commander ?commander .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
89,67,test,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Saw Shwe Khet's child who is royalty
  ?childShweKhet dbo:parent dbr:Saw_Shwe_Khet;
                a dbo:Monarch.

  # This child's father who is royalty
  ?father dbo:child ?childShweKhet;
           a dbo:Monarch.

  # The spouse of this father
  ?spouse dbo:spouse ?father.

  # Saw Min Phyu's spouse who is royalty
  ?minPhyuChild dbp:parent dbr:Saw_Min_Phyu;
                a dbo:Monarch.
  
  ?minPhyuSpouse dbo:child ?minPhyuChild;
                 a dbo:Monarch.

  # The father must be a predecessor of the child of Saw Min Phyu's spouse
  ?father dbo:predecessor ?minPhyuChild.
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
293,70,test,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Find the ruling party in Central, Louisiana
  ?location a dbo:PopulatedPlace ;
            dbo:country dbr:United_States ;
            rdfs:label ""Central, Louisiana""@en .
  
  ?rulingParty dbo:hasRulingParty ?partyMember ;
               dbo:locatedIn ?location .

  # Step 2: Find films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .

  # Step 3: Find actors of those films
  ?film dbo:starring ?actor .

  # Step 4: Find the spouse of that actor
  ?actor dbp:spouse ?spouse .

  # Step 5: Find Tisha Sterling's parent and their birth name
  ?tisha dbr:Tisha_Sterling ;
         dbo:parent ?parent .
  
  ?parent rdfs:label ?birthName .

  FILTER(?spouse = ?partyMember)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
80,70,test,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I. and professional in the alter ego of the series of The Golden Master.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieActor ?albumActor WHERE {
  # Find a movie and its actor
  ?movie dbo:starring ?actor .
  ?actor rdfs:label ?movieActor .

  # Find T.I.'s song and musical work
  ?song dbo:artist dbr:T.I. ;
        rdf:type dbo:Songs .

  # Find an album associated with the song
  ?album dbo:song ?song ;
         dbo:performer ?albumPerformer .
  
  # Find the alter ego of T.I. in ""The Golden Master"" series
  ?series dbo:character dbr:T.I. ;
          dbo:alternateName ?alterEgo .

  # Ensure the album performer is related to the alter ego
  ?albumPerformer rdfs:label ?albumActor .
  
  FILTER regex(?movieActor, "".*"", ""i"") # Adjust filter as needed for specific movie
  FILTER regex(?albumActor, "".*"", ""i"") # Adjust filter as needed for specific album/alter ego
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
143,20,test,"Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist ?actor
WHERE {
  # Find Cynthia Morgan by her birth name
  ?cynthia a dbo:MusicalArtist ;
           foaf:name ""Cynthia Morgan"" ;
           dbo:birthName ""Oghenekevwe Elizabeth Ikechukwu"" .

  # Find the associated musical artist of Cynthia Morgan
  ?cynthia dbo:associatedMusicalArtist ?musicalArtist .

  # Find Afeez Oyetoro and his role in The Wedding Party
  ?afeez a dbo:Actor ;
         foaf:name ""Afeez Oyetoro"" .
  
  ?movie dbo:title ""The Wedding Party""@en ;
         dbo:actor ?afeez .

  # Get the actor from The Wedding Party
  ?movie dbo:actor ?actor .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
258,20,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMaterEleonora ?foundingDateEleonora ?almaMaterLuiza ?foundingDateLuiza
WHERE {
  # Eleonora Menicucci's alma mater and its founding date
  dbr:Eleonora_Menicucci dbo:almaMater ?almaMaterEleonora .
  ?almaMaterEleonora a dbo:EducationalInstitution ;
                    dbp:foundingDate ?foundingDateEleonora .

  # Luiza Erundina's alma mater and its founding date
  dbr:Luiza_Erundina dbo:almaMater ?almaMaterLuiza .
  ?almaMaterLuiza a dbo:EducationalInstitution ;
                  dbp:foundingDate ?foundingDateLuiza .
}
```",6,10,7,3,2,3,2,20,0,0,1,0,0.0,0
78,27,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerArtist ?stuartAssociatedArtist ?davidBandMember WHERE {
  # Step 1: Find the writer of ""Wizards of Waverly Place (soundtrack)"" who is also a musical artist and an artist
  ?soundtrack dbo:composer ?writer .
  ?writer dbo:occupation dbr:Songwriter ;
          dbo:genre dbr:Pop_music ;
          dbo:genre dbr:Rock_music .

  # Step 2: Find the associated musical artist of Stuart Tosh
  ?stuartTosh dbo:associatedMusicalArtist ?stuartAssociatedArtist .
  FILTER (str(?stuartTosh) = ""Stuart_Tosh"")

  # Step 3: Determine the band member of the associated musical artist of David Paton
  ?davidPaton dbo:associatedMusicalArtist ?artist .
  ?artist dbo:bandMember ?davidBandMember .
  FILTER (str(?davidPaton) = ""David_Paton"")
  
  # Linking all parts together
  BIND(?writer AS ?writerArtist)
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
258,19,test,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterLabel ?federalUniversityFoundingDate
WHERE {
  # Find Eleonora Menicucci's resource using her birth name
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci""@en ;
          dbo:almaMater ?almaMater .

  # Get the label for the alma mater
  ?almaMater rdfs:label ?almaMaterLabel .
  
  # Find Federal University of Paraíba's resource and its founding date
  dbr:Federal_University_of_Para%C3%ADba dbo:foundingDate ?federalUniversityFoundingDate .

  FILTER (lang(?almaMaterLabel) = 'en')
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
78,28,test,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Find Stuart Mcbeath Tosh's associated musical artist
  ?stuart a dbo:MusicalArtist ;
          foaf:name ""Stuart Mcbeath Tosh"" .
  
  ?stuart dbo:associatedBand ?band1 .
  ?band1 dbo:associatedMusicalArtist ?artist .

  # Step 2: Find David Paton's band and its associated musical artist
  ?david a dbo:MusicalArtist ;
         foaf:name ""David Paton"" .
  
  ?david dbo:associatedBand ?band2 .
  ?band2 dbo:associatedMusicalArtist ?artist .

  # Step 3: Find the writer of Wizards of Waverly Place soundtrack
  ?soundtrack a dbo:Soundtrack ;
              dbo:title ""Wizards of Waverly Place"" .
  
  ?soundtrack dbo:writer ?writer .
  ?writer a dbo:MusicalArtist, dbo:Artist .

  # Ensure all paths lead to the same artist
  FILTER(?artist = ?artist1 && ?artist = ?artist2)
}
```",6,9,7,2,3,2,3,28,0,0,2,0,0.0,0
345,9,test,"Give me the reference to the name of Mitaka, Tokyo and region of the time zone of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v3 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaName ?region ?timeZoneReference WHERE {
  # Mitaka in Tokyo
  dbr:Mitaka_Mitaka dbr:Mitaka ;
    rdfs:label ?mitakaName ;
    dbo:partOf dbr:Tokyo ;
    dbo:locatedIn dbr:Kantō .

  # Region of Tokyo
  dbr:Tokyo dbo:region dbr:Kantō .
  
  # Time zone reference for Japan
  dbr:Japan dbo:timeZone ?timeZoneReference .
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
353,70,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v7 <http://dbpedia.org/property/father> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
    # Step 1: Find Constance of Burgundy's spouse
    ?consSpouse dbo:spouse dbr:Constance_of_Burgundy .
    
    # Step 2: Find the child of that spouse
    ?child1 dbo:parent ?consSpouse .
    
    # Step 3: Find the child of this child
    ?child2 dbo:parent ?child1 .
    
    # Step 4: Check if this person is royalty
    ?child2 a dbo:Monarch .

    # Step 5: Identify William I's reference who is royalty and an office holder
    ?williamRef dbo:officeHolder ?office .
    ?williamRef dbo:parent dbr:William_I .
    ?williamRef a dbo:Monarch .

    # Step 6: Find the parent of Roger III, Duke of Apulia
    ?rogerParent dbo:child dbr:Roger_III,_Duke_of_Apulia .
    
    # Step 7: Find the child of this parent
    ?willChild dbo:parent ?rogerParent .

    # Step 8: Find the father of this child
    ?fatherOfWillChild dbo:child ?willChild .

    # Match the second-level descendant with the father found in step 8
    FILTER (?child2 = ?fatherOfWillChild)
    
    # Return the result
    BIND(?child2 AS ?result)
}",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
492,28,test,Give me the death place of the actor of Aladdin (1958 film) and death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?deathPlace WHERE {
  # Aladdin (1958 film)
  VALUES (?film) { dbr:Aladdin_(1958_film) }
  
  OPTIONAL {
    ?film dbo:starring ?actor .
    ?actor foaf:name ?actorName ;
           dbo:deathPlace ?deathPlace .
  }

  UNION

  # Color Me Dead
  VALUES (?film) { dbr:Color_Me_Dead_(film) }
  
  OPTIONAL {
    ?film dbo:starring ?actor .
    ?actor foaf:name ?actorName ;
           dbo:deathPlace ?deathPlace .
  }

  UNION

  # The Sky Ranger (1928 film)
  VALUES (?film) { dbr:The_Sky_Ranger_(1928_film) }
  
  OPTIONAL {
    ?film dbo:starring ?actor .
    ?actor foaf:name ?actorName ;
           dbo:deathPlace ?deathPlace .
  }
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
737,71,test,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v7 . ?v8 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?result WHERE {
  # Step 1: Alexander of Württemberg's great-grandchild
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en .
  ?alexanderChild dbo:child ?firstChild .
  ?firstChild dbo:child ?secondChild .
  ?secondChild dbo:child ?greatGrandchild .

  # Step 2: Archduchess Margarete Sophie's grandparent's child who is royalty
  ?margareteSophie a dbo:Person ;
                   foaf:name ""Archduchess Margarete Sophie of Austria""@en .
  ?margareteSophieParent dbo:child ?margareteSophie .
  ?margareteSophieGrandparent dbo:child ?margareteSophieParent .
  ?grandchild dbr:parent ?margareteSophieGrandparent ;
              a dbo:RoyalFamily .

  # Step 3: Predecessor of the child of Archduchess Helena's royal spouse
  ?helena a dbo:Person ;
          foaf:name ""Archduchess Helena of Austria""@en .
  ?spouse dbr:spouse ?helena ;
          a dbo:RoyalFamily .
  ?child dbr:parent ?spouse .

  # Find predecessor (assuming temporal or hierarchical order)
  ?predecessor dbo:succeeds ?child .

  # Final condition to find the intersection
  FILTER (?greatGrandchild = ?grandchild && ?grandchild = ?predecessor)

  BIND(?greatGrandchild AS ?result)
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
375,27,test,Give me the war of the child of Toyotomi Hideyoshi and war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Toyotomi Hideyori
  OPTIONAL { 
    dbr:Toyotomi_Hideyori dbo:spouseOrPartner ?person1 .
    ?person1 dbo:child ?hideyori .
    ?hideyori dbo:participatedIn ?war .
  }

  # Wars involving Ishida Mitsunari (born Koichirō)
  OPTIONAL {
    dbr:Ishida_Mitsunari dbo:birthName ""Koichirō""^^xsd:string ;
                         dbo:participatedIn ?war .
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
19,9,test,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in the birth name of John Boxer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Boxer""@en .
  OPTIONAL { ?person dbo:birthName ""Caroline Louise Bevan Symonds""@en . }
  ?person dbo:spouse ?spouse .
}
```

This query does the following:
- It looks for a person with the professional name ""John Boxer"" and optionally checks if their birth name is ""Caroline Louise Bevan Symonds"".
- It retrieves the spouse of this person.",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
198,70,test,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v7 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplaceEntity WHERE {
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  ?person dbo:nationality dbr:United_States .
  ?person dbo:militaryService ?militaryService .

  ?awardRecipient dbp:recipient ?person .
  ?awardRecipient dbp:awardee ?gillmoreAward .
  ?gillmoreAward rdfs:label ""Quincy Adams Gillmore""@en .

  ?medalOfHonorRecipient dbp:recipient ?person .
  ?medalOfHonorRecipient dbo:war ?war .

  ?person dbo:birthPlace ?birthplace .
  
  ?birthplace a dbo:Settlement ;
              rdfs:label ?birthplaceEntity .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
270,9,test,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at the birth place, that is a settlement, of Mark Tournier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Mark Tournier's birthplace
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .

  # Find Ada Jane Low who is a politician and born at the same place
  ?adaJaneLow a dbo:Politician ;
              dbp:name ""Ada Jane Low"" ;
              dbo:birthPlace ?birthPlace .

  # Find the predecessor of Ada Jane Low
  ?predecessor dbo:successor ?adaJaneLow .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
742,20,test,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/property/residence> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace WHERE {
  # Find people associated with Plovdiv University
  ?person dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  
  # Ensure the person is a resident of a settlement in Bulgaria (EET region)
  ?person dbo:nationality dbr:Bulgaria .
  ?settlement dbo:country dbr:Bulgaria ;
              dbo:timeZone dbr:Eastern_European_Time .

  # Find the birthplace of such individuals
  ?person dbo:birthPlace ?birthPlace .
}
```",6,7,7,3,2,3,2,20,0,0,2,0,0.0,0
687,69,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v7 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Find Marcelo Sarmiento's birthday and a soccer player/manager born on that date
SELECT ?marceloBirthday (SAMPLE(?soccerPlayerManager) AS ?playerManager)
WHERE {
    dbr:Marcelo_Sarmiento dbo:birthday ?marceloBirthday .
    ?person dbp:sport ""Football"" ;
            dbo:birthDate ?marceloBirthday ;
            (dbo:occupation|dbp:role) ?soccerPlayerManager .
}

# Step 2: Find Marty Pollio's birthday and an athlete born on that date who is a player in the team from step 1
SELECT ?martyBirthday (SAMPLE(?athleteInTeam) AS ?athlete)
WHERE {
    dbr:Marty_Polio dbo:birthday ?martyBirthday .
    ?person dbp:sport ""Athletics"" ;
            dbo:birthDate ?martyBirthday ;
            dbo:team ?team .
    FILTER EXISTS { ?playerManager dbo:member ?team }
}

# Step 3: Find the actor from ""All or Nothing: Manchester City"" who is a soccer player and athlete, and their team
SELECT (SAMPLE(?actor) AS ?actorName) (SAMPLE(?actorTeam) AS ?actorTeam)
WHERE {
    ?actor dbo:film dbr:All_or_Nothing:_Manchester_City ;
           dbp:sport ""Football"" ;
           dbp:sport2 ""Athletics"" .
    ?actor dbo:team ?actorTeam .
}",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
668,71,test,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v8 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 WHERE {
  # Lesane Parish Crooks (Tupac Shakur)
  dbr:Lesane_Parish_Crooks dbo:musicalArtist ?artist1 .

  # Neil Young
  dbr:Neil_Young dbo:musicalArtist ?artist2 .

  # Native of Central Region, Ghana who is a musical artist
  ?person dbo:nationality dbr:Ghana ;
          dbo:birthPlace dbr:Central_Region_(Ghana) ;
          dbo:musicalArtist ?artist1 .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
159,70,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v7 . ?v4 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor WHERE {
  # Commander in the Battle of Vienna
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Vienna""))

  # Television show and societal event association
  OPTIONAL { ?commander dbo:wikiPageRedirects ?tvShow . }
  OPTIONAL { ?commander dbo:socialEvent ?event . }

  # Reference to George Ducas's work
  ?ducas dbo:author ?writer .
  FILTER(STRSTARTS(STR(?ducas), ""George_Ducas""))

  # Successor in Russo-Polish War
  ?war dbo:successor ?successor .
  FILTER(STRSTARTS(STR(?war), ""Russo-Polish_War_(1654–1667)""))
  
  # Successor as politician and office holder
  ?successor a dbo:Politician ;
             dbo:officeHolder ?office .

}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
513,20,test,"Give me the entity in the award of the reference to George Hamilton Cameron and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/ontology/leader> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/residence> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find an award associated with George Hamilton Cameron
  ?award dbo:recipient dbr:George_Hamilton_Cameron .
  
  # Identify the political party of George Savage
  ?party dbo:member dbr:George_Savage_(politician) .
  
  # Find the leader of that party
  ?leader dbo:position ""Leader""@en ;
          dbo:memberOf ?party .
  
  # Determine the residence of the leader
  ?leader dbo:residence ?residence .

  # Find an entity that is both an organisation and a political party related to the award and residence
  ?entity rdf:type dbo:Organization, dbo:PoliticalParty ;
          dbo:award ?award ;
          dbo:location ?residence .
}
```",6,8,7,3,2,3,2,20,0,0,2,0,0.0,0
347,70,test,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v7 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Maria Anna of Bavaria and her children
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria"" ;
             dbo:spouse ?husband .
  
  ?mariaAnna dbo:child ?child1 .

  # Find the child that is royalty
  ?child1 dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Archduke Charles Joseph of Austria and his parent
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parentOfCharles .
  
  # Find the child of this parent
  ?parentOfCharles dbo:child ?child2 .

  # Commander in a war (abstract, assuming we have such data)
  ?commander a dbo:MilitaryPerson ;
             dbo:commanded ?war .

  # Societal event related to 2nd Dragoon Regiment (France) (abstract)
  ?event a dbo:SocietalEvent ;
         dbo:relatedTo dbr:2nd_Dragoon_Regiment_(France) .
  
  # Linking all parts together
  FILTER(?royalChild = ?child2 && ?commander = ?child2 && ?event = ?child2)
}
```

This query is a conceptual framework and may need adjustments based on the actual data available in DBpedia. The abstract parts related to societal events and television shows might not be directly queryable without specific identifiers or relationships.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
816,69,test,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Mariclare Costello's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Mariclare_Costello .

  # Child of the spouse
  ?child dbo:parent ?spouse .

  # Photographer who is child of the spouse
  ?photographer dbo:profession dbr:Photographer ;
               dbo:parent ?spouse .

  # Person decedent at Los Angeles related to the chain
  ?decedent dbo:deathPlace dbr:Los_Angeles ;
            dbo:child ?child ;
            dbo:parent ?spouse .

  # Movie involving the decedent as an actor
  ?movie dbo:actor ?decedent ;
         a dbo:Film .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
871,70,test,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Step 1: Edward Stanley, 17th Earl of Derby's parent
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent.

  # Step 2: Parent's child who is a politician and office holder
  ?child dbo:parent ?parent .
  ?child dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""politician"") && CONTAINS(LCASE(?occupation), ""office holder""))

  # Step 3: Child's parent
  ?grandParent dbo:child ?child .

  # Step 4: Awardee of Commander of the Royal Victorian Order related to this grandparent
  ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .
  ?awardee dbo:parent ?grandParent .

  # Step 5: Father of a politician alumnus of Eton College
  ?politicianAlumnus dbo:almaMater dbr:Eton_College .
  FILTER (CONTAINS(LCASE(?politicianAlumnus), ""politician""))
  ?father dbo:child ?politicianAlumnus .

  # Final result: Parent of the child from step 2
  ?result dbo:parent ?child .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
472,27,test,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?mayor ?territoryAdministeredFromCopenhagen
WHERE {
  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck's administration
  OPTIONAL {
    ?person a dbo:Monarch ;
            foaf:name ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"" .
    ?person dbo:positionHeld ?administration .
  }

  # Mayor of the Duchy of Schleswig
  OPTIONAL {
    ?mayorPosition a dbo:Mayor ;
                   dbo:city dbr:Duchy_of_Schleswig .
    ?mayorPosition dbo:administrator ?mayor .
  }

  # Territories administered from Copenhagen
  OPTIONAL {
    ?territory dbo:administeredBy ?copenhagenAdmin ;
               dbo:administrativeTerritory dbr:Copenhagen .
    ?copenhagenAdmin foaf:name ?administration .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
295,19,test,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of the producer of Storm in a Teacup (film).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find Apache Indian as a musical artist
  dbr:Apache_Indian dbo:musicalArtistOf ?work .

  # Find the producer of ""Storm in a Teacup"" and their birthplace
  dbr:Storm_in_a_Teacup dbo:producer ?producer .
  ?producer dbo:birthPlace ?birthPlace .

  # Find the native of the birthplace of the producer
  ?native dbo:birthPlace ?birthPlace ;
          dbo:occupation ?occupation .

  FILTER(?occupation = ""Writer"" || ?occupation = ""Songwriter"")

  # Link the writer to the work associated with Apache Indian
  ?work dbo:writer ?writer .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
687,68,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v3 . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v5 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v5 . ?v7 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Step 1: Find person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_Manager .

  # Step 2: Find actor in a film by Manuel Huerga who is also a soccer player and athlete
  ?actor dbo:sport dbr:Soccer ;
         dbo:profession dbr/Actor ;
         dbo:film ?film .
  
  ?film dbo:director dbr:Manuel_Huerga .

  # Ensure the person from step 1 is the same as the actor from step 2
  FILTER (?person = ?actor)

  # Step 3: Find team of this person if they are a soccer player
  OPTIONAL { ?person dbo:team ?team }

  # Step 4: Identify Marty Pollio's birthday and find an athlete born on that day
  ?martyPollio dbo:birthday ?birthday .
  FILTER (?martyPollio = dbr:Marty_Polio)

  ?athlete dbo:birthday ?birthday ;
           dbo:sport ?sport .

  FILTER(?sport != dbr:Soccer) # Ensure it's a different athlete

}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
59,9,test,"Give me the native of the residence of David Luckman and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  # Find the residence of David Luckman
  ?davidLuckman a dbo:Person ;
                foaf:name ""David Luckman"" ;
                dbo:residence ?residence .

  # Find the sports club and soccer club managed by David Luckman where Jamie McCunnie is a player
  ?club a dbo:SoccerClub, dbo:SportsTeam ;
        dbo:manager ?davidLuckman ;
        dbo:player ?jamieMcCunnie .
  
  ?jamieMcCunnie a dbo:Person ;
                 foaf:name ""Jamie McCunnie"" .

  # Find the native place of the residence
  ?residence dbo:nativePlace ?nativePlace .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
263,28,test,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ancestor WHERE {
  # Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne's child
  ?child dbo:parent dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne .
  
  # William Gayner's birthplace as a region and country
  dbr:William_Gayner dbo:birthPlace ?region .
  ?region dbo:country ?country .

  # Parent of Hon. Mary Frances Bowes-Lyon
  ?maryFrances dbo:parent ?ancestor .
  FILTER (str(?maryFrances) = ""Hon._Mary_Frances_Bowes-Lyon"")

  # Linking the child to William Gayner's birthplace region and country
  ?child dbo:birthPlace ?region .

  # Ensuring the ancestor is a region and country
  ?ancestor rdf:type dbo:Region .
  ?ancestor dbo:country ?country .
}
```",6,8,7,2,3,2,3,28,0,0,2,0,0.0,0
557,67,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Actor of ""High Society Blues""
  ?actor1 dbo:actedIn dbr:High_Society_Blues .
  
  # Producer of the actor's claim to fame (a movie and a work)
  ?movie dbo:starring ?actor1 ;
         dbo:producedBy ?producer1 .
  
  # Actor of ""Johnny Doughboy""
  ?actor2 dbo:actedIn dbr:Johnny_Doughboy .
  
  # Producer of the actor's claim to fame (a work)
  ?work dbo:author ?actor2 ;
        dbo:producer ?producer2 .
  
  # Common professional link
  FILTER (?producer1 = ?producer2)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
668,70,test,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer ?musicalArtist ?ghanaianArtist WHERE {
  # Step 1: Identify the writer of ""The Live Anthology""
  ?anthology dbo:author ?writer .
  FILTER(STR(?anthology) = ""The_Live_Anthology"")

  # Step 2: Find a musical artist who is also a writer
  ?musicalArtist dbo:profession dbr:Writer ;
                dbo:profession dbr:Musical_Artist .

  # Step 3: Locate an artist from Central Region, Ghana with the birth name Elorm Kabu Amenyah
  ?ghanaianArtist foaf:name ""Elorm Kabu Amenyah""@en ;
                  dbo:nationality dbr:Ghana ;
                  dbo:birthPlace dbr:Central_Region,_Ghana .

  # Step 4: Connect these entities through their professions and associations
  ?writer dbo:profession dbr:Musical_Artist .
  ?musicalArtist foaf:name ?name .
  ?ghanaianArtist foaf:name ?name .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
375,19,test,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Vera_Lynn ;
         dbo:workExample ?tvShow .
  
  ?artist dbo:nationality dbr:England ;
          dbo:birthPlace ?location ;
          rdf:type (dbo:Artist dbo:MusicalArtist) .

  ?parent dbo:child ?artist .

  ?location a dbo:Settlement ;
            dbo:country dbr:United_Kingdom .

  ?movie dbo:author ?author .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
557,71,test,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v7 <http://dbpedia.org/ontology/knownFor> ?v8 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Step 1: Find actor of ""High Society Blues""
  ?actor dbo:actedIn dbr:High_Society_Blues .
  
  # Step 2: Find producer of a work by this actor
  ?work dbo:producer ?producer ;
        dbo:creator ?actor .

  # Step 3: Find actor of ""Johnny Doughboy"" and their claim to fame
  ?otherActor dbo:actedIn dbr:Johnny_Doughboy .
  ?fameWork dbo:creator ?otherActor .

  # Step 4: Identify the alter ego of Kent Allard (Clark Kent)
  ?fictionalCharacter dbo:fictionalAlterEgo dbr:Clark_Kent ;
                     dbo:reference ?alterEgo .
  
  # Ensure all conditions are met
  FILTER(?actor = ?otherActor && ?fameWork = ?work)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
756,69,test,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v7 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?place .
  ?place dbo:country ?nativeCountry .

  # Sports manager born on 1968-08-26
  ?manager a dbo:SportsManager ;
           dbp:birthday ""1968-08-26""^^xsd:date ;
           dbo:managesTeam ?team .

  # Team managed by the sports manager in a specific season
  ?teamSeason a dbo:SoccerClubSeason ;
              dbo:seasonStartYear ?startYear ;
              dbo:seasonEndYear ?endYear ;
              dbo:manager ?manager .

  # Successor of 2006–07 VfL Bochum Season
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:succeededBy ?successorSeason .
  ?successorSeason a dbo:SoccerClubSeason ;
                   dbo:team ?playerTeam .

  # Player managed by the sports manager in the successor season
  ?playerTeam dbo:manager ?manager .
}
```",8,19,9,3,3,3,3,71,0,0,1,0,0.0,0
723,19,test,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician) and band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Nate Newton's band that is both an organization and a musical artist
  dbr:Nate_Newton dbo:musicalArtist dbr:BandX .
  FILTER (dbo:BandX rdf:type dbo:MusicalArtist && dbo:BandX rdf:type dbo:Organization) .

  # Producer of ""Nothing to Gein"" which is also an organization and a group
  dbr:Nothing_to_Gein dbo:producer ?producer .
  FILTER (dbo:producer rdf:type dbo:Organization && dbo:producer rdf:type dbo:Group) .

  # Find the band member who is part of Nate Newton's band and works with this producer
  ?bandMember dbo:musicalArtist dbr:BandX .
  ?bandMember dbo:worksWith ?producer .
}
```

Please note:
- Replace `dbr:BandX` with the actual DBpedia resource for Nate Newton's band.
- The query assumes that the relationships and types are correctly modeled in DBpedia.",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
585,20,test,"Give me the child of the professional in the profession of Shirley Stoler and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v5 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childProfession WHERE {
  # Shirley Stoler's profession
  dbr:Shirley_Stoler dbo:profession ?shirleyProfession .
  
  # Find an award associated with Shirley Stoler
  ?award dbo:recipient dbr:Shirley_Stoler .

  # Awardee's native place, which is a settlement in New York (state)
  ?awardee dbo:nativePlace ?nativePlace .
  ?nativePlace rdf:type dbo:Settlement ;
               dbo:country dbr:United_States_of_America ;
               dbo:stateOrProvince dbr:New_York_(state) .

  # Ensure the awardee is related to the award
  ?award dbo:recipient ?awardee .

  # Find a child or related profession of Shirley Stoler's profession
  ?shirleyProfession dbo:subClassOf+ ?childProfession .
}
```",6,8,7,3,2,3,2,20,0,0,10,0,0.0,0
159,71,test,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInWar ?tvShow ?successorCommander ?politician ?event ?writer 
WHERE {
  # John III Sobieski as commander in the Battle of Vienna
  dbr:John_III_Sobieski dbo:commanderOf dbr:Battle_of_Vienna .

  # Television show or societal event related to John III Sobieski
  OPTIONAL { dbr:John_III_Sobieski dbo:wikiPageRedirects ?tvShow . }

  # Successor commander, Stanisław August Poniatowski
  dbr:Stanisław_August_Poniatowski dbo:successorOf dbr:John_III_Sobieski .

  # Stanisław August Poniatowski as a politician and office holder
  dbr:Stanisław_August_Poniatowski a dbo:Politician ;
                                  dbo:officeHolder dbr:King_of_Poland .

  # Event involving Michał Kazimierz Pac, likely the Great Northern War
  dbr:Mikołaj_Kazimierz_Raczyński dbo:participatedIn dbr:Great_Northern_War .

  # Writer of work by George Ducas related to these figures
  OPTIONAL { ?writer dbo:wikiPageRedirects dbr:George_Ducas . }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
585,19,test,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in the profession of Shirley Stoler.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .

  # Find an award associated with the coro that is linked to an American settlement
  ?award dbo:recipient ?coro .
  ?settlement dbo:country dbr:United_States_of_America ;
              dbo:isPartOf ?state .
  ?award dbo:location ?settlement .

  # Find Shirley Stoler's profession and its child
  ?shirley dbo:profession ?profession .
  ?child dbo:parentClassOf ?profession .

  # Link the award to the child of Shirley Stoler's profession
  ?award dbo:relatedField ?child .

  # Get the native of the award
  ?native dbo:nativePlace ?settlement .
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
198,67,test,"Give me the war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?force ?award ?settlement WHERE {
  # Amasa Tracy's war involvement
  dbr:Amasa_Tracy dbo:militaryConflict ?war .

  # Quincy Adams Gillmore's force and awards
  dbr:Quincy_Adams_Gillmore dbo:commanded ?force .
  OPTIONAL { dbr:Quincy_Adams_Gillmore dbo:award ?award . }

  # Person deceased on 1850-08-05
  ?person dbp:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbp:birthPlace ?settlement .
  
  FILTER (dbo:type(?settlement, dbr:Settlement) && dbo:nationality(?person, dbr:United_States))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
706,19,test,"Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeBirthplace ?actorBirthplace WHERE {
  # Part 1: Find the birthplace of Sangeet Natak Akademi Fellowship awardees
  ?awardee dbo:award ""Sangeet_Natak_Akademi_Fellowship"" .
  ?awardee dbo:birthPlace ?awardeeBirthplace .

  # Part 2: Find Indian movies featuring Dipankar De and their actors' birthplaces
  ?movie dbo:starring dbr:Dipankar_De ;
         a dbo:Film ;
         dbo:country dbr:India .
  
  ?actor dbo:starring ?movie .
  ?actor dbo:birthPlace ?actorBirthplace .
}
```",5,7,6,3,2,3,2,20,0,0,2,0,0.0,0
398,19,test,Give me the figure known as the nickname of Russia national football team and player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?playerName WHERE {
  # Find the nickname of the Russia national football team
  dbr:Russia_national_football_team dbo:nickname ?nickname .

  # Find players in the Russia national football team
  ?teamMember dbo:memberOfTeam dbr:Russia_national_football_team .
  
  # Check if any player is also a writer of a work by Aleksandr Filimonov
  ?player dbp:name ?playerName ;
          dbo:author ?work .
  ?work dbo:author dbr:Aleksandr_Filimonov .

  FILTER(?teamMember = ?player)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
943,70,test,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v6 . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Lamont Cranston's alter ego
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Yeshaq I's child who is a royalty and an office holder
  dbr:Yeshaq_I dbo:child dbr:Zara_Yaqob ;
               rdf:type dbo:Monarch .

  # Baeda Maryam I's child
  dbr:Baeda_Maryam_I dbo:child ?eskender .
  
  # Eskender is a royalty
  ?eskender rdf:type dbo:Monarch .

  # Find the alter ego of The Shadow
  dbr:The_Shadow dbo:alias ?alterEgo .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
119,67,test,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfAdministration ?officeOfFeijoo
WHERE {
  # Find the administration related to the Spanish Socialist Workers' Party
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?administration dbo:hasLeader ?leader ;
                  dbo:affiliatedWith ?party .

  # Find the office of Alberto Núñez Feijóo
  dbr:Alberto_Núñez_Feijóo dbo:office ?officeOfFeijoo .

  # Bind the leader as tenantOfAdministration
  BIND(?leader AS ?tenantOfAdministration)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
468,19,test,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon and reference to the real name of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent ?realName
WHERE {
  dbr:Martin_of_Aragon dbo:parent dbr:Some_Parent .

  dbr:Some_Parent dbo:child ?childOfParent .
  ?childOfParent a dbo:Monarch .

  dbr:Peter_IV_of_Aragon dbo:realName ?realName .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
119,20,test,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?tvShow ?commander ?countryOfResidence ?athlete
WHERE {
  # Maria I of Portugal and the war associated with her
  dbr:Maria_I_of_Portugal dbo:associatedWith ?war .
  
  # The war should have a namesake television show
  ?war rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""war""))
  OPTIONAL { ?tvShow dbo:title ?warLabel . }
  
  # Commander in the force related to the war
  ?commander dbo:associatedWith ?war .

  # Entity in the residence, which is a country
  ?countryOfResidence a dbo:Country .
  
  # Native Polish athlete from Łódź
  ?athlete dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź ;
           dbo:residence ?countryOfResidence .

}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
472,28,test,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/property/leader> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?mayorAdmin ?birthPlace ?royaltyAdmin
WHERE {
  # Christian Ditlev Ammentorp Hansen's death place
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:placeOfBirth ?deathPlace .
  FILTER (isLiteral(?deathPlace) && contains(str(?deathPlace), ""settlement""))

  # Mayor of Duchy of Schleswig administration
  ?mayorAdmin dbo:administrativeRegion dbr:Duchy_of_Schleswig .

  # Prince Christian's birthplace and royalty status
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && contains(str(?birthPlace), ""settlement""))
  
  # Ensure he was royalty
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck a dbo:Royalty .

  # Link the administrations
  ?deathPlace dbo:administrativeRegion ?mayorAdmin .
  ?birthPlace dbo:administrativeRegion ?royaltyAdmin .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
531,67,test,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOffice ?commanderOffice WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Politician ;
               dbo:partyAffiliation ?politicalParty .

  FILTER (str(?miguelMaura) = ""Miguel_Maura"")

  # Find the leader of this political party
  ?leader a dbo:Politician ;
          dbo:officeHolderOf ?partyLeaderOffice ;
          dbo:affiliation ?politicalParty .
  
  # Leader's office in Madrid
  ?partyLeaderOffice dbo:location dbr:Madrid .

  # Manuel Pinto da Costa's military conflict as a commander
  ?manuelPintoDaCosta a dbo:Politician, dbo:Commander ;
                      dbo:officeHolderOf ?commanderOffice ;
                      dbo:affiliation ?militaryConflict .
  
  FILTER (str(?manuelPintoDaCosta) = ""Manuel_Pinto_da_Costa"")

  # Ensure the military conflict is both a military conflict and societal event
  ?militaryConflict a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Return the offices
  BIND(dbo:officeHolderOf(?leader) AS ?leaderOffice)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
225,19,test,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?award dbo:recipient ?person .
  
  ?person dbo:nationality dbr:Japan .
  ?person dbo:birthPlace ?place .
  
  ?show dbo:awards ?award .
  ?show a dbo:TelevisionShow .

  FILTER (regex(str(?place), ""Japan Standard Time"", ""i""))
}
```

This query does the following:
- Identifies awards related to the Anita Borg Institute Women of Vision Awards.
- Filters recipients who are Japanese nationals.
- Ensures the recipient's birthplace is in a region observing Japan Standard Time.
- Links these recipients to television shows that have won the award.",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
58,20,test,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find an award associated with Ian Gregson (poet)
  ?award dbo:recipient dbr:Ian_Gregson_(poet) .

  # Find Linda Bruckheimer's birth name
  dbr:Linda_Bruckheimer dbo:birthName ?birthName .

  # Find her spouse
  ?spouse dbo:spouse dbr:Linda_Bruckheimer .
  
  # Connect the award to a movie and find its producer
  ?movie dbo:award ?award ;
         dbo:producer ?producer .

}
```

This query assumes:
- There is an award associated with Ian Gregson that can be linked to a movie.
- Linda Bruckheimer's birth name and spouse are available in DBpedia.
- The movie related to the award has a producer.",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
39,68,test,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v7 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Robert Lamar Thompson, known as Prince
  ?person rdfs:label ""Prince""@en .
  ?person dbo:birthName ""Robert Lamar Thompson"" .

  # The Shadow is a fictional character created by Walter B. Gibson
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:creator dbr:Walter_B._Gibson .

  # Prince's alter ego related to The Shadow
  ?person dbo:alias ?character .

  # Band associated with Prince
  ?band dbo:leadArtist ?person .

  # Producer of Coke Studio Philippines (assuming Alex Gonzaga for this example)
  ?producer rdfs:label ""Alex Gonzaga""@en .
  ?producer dbo:profession dbr:Coke_Studio_Philippines_producer .

  # Connect the producer to the band
  ?band dbo:member ?producer .
}
```",8,11,9,3,3,3,3,71,0,0,4,0,0.0,0
782,67,test,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?band WHERE {
  # Find the person born on March 30, 1945
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .

  # Find band members of this person
  ?memberOfBand dbo:bandMember ?bandMember .
  
  # Ensure the band member is also a musical artist
  ?bandMember a dbo:MusicalArtist .

  # Get bands associated with these band members
  ?bandMember dbo:associatedBand ?band .

  # Filter for The Fabulous Thunderbirds and Nick Curran
  FILTER (
    EXISTS { ?band dbr:The_Fabulous_Thunderbirds }
    || EXISTS { ?bandMember dbr:Nick_Curran }
  )
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
311,20,test,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/property/writer> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find producer of Lotus (R.E.M. song)
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Step 2: Ensure the producer is an organization, band, and group
  ?producer a dbo:Organization ;
           a dbo:Band ;
           a dbo:MusicalGroup .

  # Step 3: Find associated musical artist of the producer
  ?producer dbo:associatedMusicalArtist ?artist1 .

  # Step 4: Identify writer of the album ""Sappy""
  dbr:Sappy_(album) dbo:writer ?writer .

  # Step 5: Ensure the writer is a band member
  ?writer dbo:bandMemberOf ?band .

  # Step 6: Find associated musical artist of this band member
  ?band dbo:associatedMusicalArtist ?finalArtist .
}
```",6,13,7,3,2,3,2,20,0,0,1,0,0.0,0
386,28,test,Give me the war of the awardee of Golden Sword for Bravery and war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 WHERE {
  # Find Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Find wars associated with the Golden Sword for Bravery award
  ?award1 rdfs:label ""Golden Sword for Bravery""@en .
  ?award1 dbo:awardedFor ?war1 .
  
  # Find wars associated with the 25th Anniversary of Restoration of Independence of Lithuania Medal
  ?award2 rdfs:label ""25th Anniversary of Restoration of Independence of Lithuania Medal""@en .
  ?award2 dbo:awardedFor ?war2 .

  FILTER(?birthPlace = dbr:EntityInBirthPlace) # Replace with actual entity if known
}
```

**Notes:**
- Replace `dbr:EntityInBirthPlace` with the actual DBpedia resource for Elena Žalinkevičaitė-Petrauskienė's birthplace once identified.
- Ensure that the labels and properties used in the query match those available in DBpedia.",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
80,68,test,"Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Lamont Cranston (The Shadow)
  VALUES ?shadowAlterEgo { ""Lamont Cranston"" }

  # Douglas Coupland
  VALUES ?couplandAuthor { ""Douglas Coupland"" }
  
  # Find movies where both are connected through an actor
  ?movie dbo:starring ?actor .
  ?movie dbo:writer dbr:Douglas_Coupland .

  # T.I.'s song and album ""Whatever You Like""
  VALUES ?tiSongAlbum { ""Whatever You Like"" }
  
  # Find actors associated with the album or its production
  ?album dbo:title ?tiSongAlbum .
  ?album dbo:performer ?actor .

  FILTER(?actor != dbr:Lamont_Cranston && ?actor != dbr:Douglas_Coupland)
}
```",8,10,9,3,3,3,3,71,0,0,4,0,0.0,0
871,71,test,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v8 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v8 <http://dbpedia.org/property/father> ?v7 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfAwardee WHERE {
  # Step 1: Find Rodney Lees' award and its awardee
  ?award dbo:recipient ?awardee .
  ?award dbo:name ""Rodney Lees"" .

  # Step 2: Find the parent of the awardee who is a politician
  ?parentOfAwardee dbo:child ?awardee ;
                  a dbo:Politician .

  # Step 3: Find an Eton College alumnus whose child's parent is a politician and office holder
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?childOfAlumnus dbo:parent ?politicianParent ;
                  dbo:child ?alumnusChild .
  ?alumnusChild dbo:parent ?politicianParent .

  # Step 4: Ensure the politician parent is also an office holder
  ?politicianParent a dbo:Politician ;
                   dbo:officeHolder true .

  # Step 5: Find Edward Stanley, 17th Earl of Derby's parent who is a politician and office holder
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?derbyParent .
  ?derbyParent a dbo:Politician ;
               dbo:officeHolder true .

  # Ensure the same person satisfies both conditions
  FILTER(?politicianParent = ?derbyParent)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
531,69,test,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . ?v7 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant1 ?tenant2 ?tenant3 WHERE {
  # Leader of the 2003 Madrid City Council Election
  ?mayor a dbo:Mayor ;
         dbo:electedAsMayorOf dbr:Madrid .
  FILTER(YEAR(?mayorElectionDate) = 2003)
  
  OPTIONAL { ?mayor dbo:residence ?office1 . }
  BIND(IF(BOUND(?office1), ?office1, ""Unknown"") AS ?tenant1)

  # Commander in Central African Republic Civil War
  ?commander a dbo:MilitaryPerson ;
             dbo:occupation dbr:Politician ;
             dbo:heldOffice ?civilWarCommand .
  OPTIONAL { ?civilWarCommand dbo:residence ?office2 . }
  BIND(IF(BOUND(?office2), ?office2, ""Unknown"") AS ?tenant2)

  # Leader of the Party of Miguel Maura
  ?miguelMaura a dbo:Politician ;
               dbo:memberOfParty ?party .
  ?leader a dbo:Leader ;
          dbo:memberOfParty ?party .
  
  OPTIONAL { ?leader dbo:residence ?office3 . }
  BIND(IF(BOUND(?office3), ?office3, ""Unknown"") AS ?tenant3)
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
353,71,test,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v8 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Step 1: Constance of Burgundy and her spouse
  ?constance dbo:spouse ?spouse .
  FILTER(STR(?constance) = ""Constance_of_Burgundy"")

  # Step 2: Child of the spouse who is royalty
  ?childOfSpouse dbo:parent ?spouse ;
                a dbo:Monarch .

  # Step 3: Reference (royalty and office holder related to William I)
  ?reference dbo:officeHolder ?office ;
             dbo:parent ?relatedToWilliamI ;
             a dbo:Monarch .
  ?relatedToWilliamI dbo:child dbr:William_I_of_Wales .

  # Step 4: Parent of Roger II of Sicily's royal child
  ?rogerChild dbo:parent ?parentOfRogerChild ;
              a dbo:Monarch .
  FILTER(STR(?rogerChild) = ""Roger_II_of_Sicily"")

  # Step 5: Father of the reference's royal child
  ?childOfReference dbo:parent ?reference ;
                    a dbo:Monarch .

  # Final step: Find the result based on the relationships
  ?result dbo:father ?childOfReference .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
119,68,test,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?v7 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v4 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v7 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantCountry
WHERE {
  # Anxo Quintana's leadership role in an administration
  dbr:Anxo_Quintana dbo:positionHeld ?administrationRole .
  
  # The event related to his leadership position
  ?administrationRole dbo:event ?event .

  # Spanish Socialist Workers' Party and its administration
  ?party dbo:member ?administration .
  ?administration dbo:leader ?administrationRole .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  # Find a Spanish citizen from Spain associated with this event
  ?citizen dbo:nationality dbr:Spain ;
           dbo:birthPlace dbr:Spain ;
           dbo:event ?event .

  # The residence of the citizen that is a country
  ?citizen dbo:residence ?tenantCountry .
  ?tenantCountry rdf:type dbo:Country .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
668,63,val,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 WHERE {
  # Tupac Shakur (Lesane Parish Crooks)
  dbr:Tupac_Shakur dbo:birthName ""Lesane Parish Crooks"" .
  dbr:Tupac_Shakur dbo:musicalArtist ?artist1 .

  # Joey Bada$$ (Joseph Anthony Cartagena)
  dbr:Joey_Badass dbo:birthName ""Joseph Anthony Cartagena"" .
  dbr:Joey_Badass dbo:musicalArtist ?artist2 .

  # Rod Argent
  dbr:Rod_Argent dbo:profession dbr:Musician .
  OPTIONAL { dbr:Rod_Argent dbo:musicalArtist ?artist3 . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
628,63,val,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Step 1: Find an award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?award dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  # Step 2: Identify the region/state/settlement that is native to this award
  ?award dbo:nativeRegion ?native .
  FILTER (isLiteral(?native) && regex(str(?native), ""region|state|settlement"", ""i""))

  # Step 3: Find Bobby Shmurda's birth name
  ?bobby dbr:Bobby_Shmurda ;
         foaf:name ?birthName .

  # Step 4: Identify the person born with this birth name
  ?person dbo:birthName ?birthName .
  
  # Step 5: Find a band member who is also a musical artist
  ?bandMember dbo:memberOfBand ?musicalArtist ;
              rdf:type dbo:MusicalArtist .

  # Step 6: Identify the GS9 member who is both an artist and a musical artist
  ?gs9Member dbo:memberOf dbr:GS9 ;
             rdf:type dbo:Artist, dbo:MusicalArtist .
  
  # Connect the band member to the GS9 member
  ?bandMember dbo:associatedWith ?gs9Member .
}",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
103,65,val,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?movieShow WHERE {
  # Step 1: Identify the actor of ""Ab Kya Hoga""
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:film dbr:Ab_Kya_Hoga .

  # Step 2: Check if this actor is also a politician
  ?actor dbo:occupation dbr:Politician .

  # Step 3: Find the movie/show with both Actor A and Richard E. Grant
  ?movieShow dbo:starring ?actor .
  ?movieShow dbo:starring dbr:Richard_E._Grant .

  # Step 4: Identify the professional alter ego of The Shadow
  OPTIONAL {
    ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
    ?shadowAlterEgo dbo:profession ?professionalRole .
  }
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
585,18,val,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state) and child of the professional in Actress.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  ?award a dbo:Award ;
         dbo:country dbr:United_States_of_America ;
         dbo:settlement ?settlement .
  
  ?awardee dbo:recipientOf ?award ;
           dbo:nationality dbr:American ;
           dbo:birthPlace dbr:New_York_(state) .

  ?child dbo:parent ?awardee ;
         dbo:occupation dbr:Actress .

  FILTER EXISTS { ?settlement a dbo:Settlement }
}
```",5,7,6,3,2,3,2,20,0,0,10,0,0.0,0
412,25,val,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris and war of the leader of National Party of Greece.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?result <http://dbpedia.org/ontology/place> ?v4 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Antonios Varthalitis
  OPTIONAL { 
    VALUES ?person1 { dbr:Athanasios_Varvalis }
    ?person1 dbo:deathPlace ?place1 .
    FILTER (dbo:Settlement ?place1)
    ?entity dbo:location ?place1 .
  }

  # Konstantinos Ventiris
  OPTIONAL {
    VALUES ?person2 { dbr:Konstantinos_Ventiris }
    ?person2 dbo:deathPlace ?place2 .
    FILTER (dbo:Settlement ?place2)
    ?entity dbo:location ?place2 .
  }

  # Leader of the National Party of Greece
  OPTIONAL {
    VALUES ?partyLeader { dbr:Nikolaos_Platis } # Assuming Nikolaos Platis as an example leader
    ?person3 dbo:deathPlace ?place3 .
    FILTER (dbo:Settlement ?place3)
    ?entity dbo:location ?place3 .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
198,66,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  ?person dbo:award ?medalOfHonor .
  ?medalOfHonor rdf:type dbr:Medal_of_Honor .

  ?person dbo:award ?gillmoreMedal .
  ?gillmoreMedal rdf:type dbr:Gillmore_Medal .

  ?person dbp:birthPlace ?birthplace .
  
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,64,val,Give me the spouse of Roger Pryor (actor) and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of the parent of Tisha Sterling.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse ?partyMember ?personWithBirthName
WHERE {
  # Spouse of Roger Pryor (actor)
  OPTIONAL {
    dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .
  }

  # Party member of the ruling party in the landmark at elevation 20.116800000000001347
  OPTIONAL {
    ?landmark dbo:elevation ""20.1168""^^xsd:float ;
              dbo:rulingParty ?rulingParty .
    ?partyMember foaf:name ?memberName ;
                 dbo:memberOf ?rulingParty .
  }

  # Person born as the birth name of the parent of Tisha Sterling
  OPTIONAL {
    dbr:Tisha_Sterling dbo:parent ?parent .
    ?parent foaf:name ?birthName .
    ?personWithBirthName foaf:name ?birthName ;
                         dbo:birthName ?birthName .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
78,25,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.","SELECT ?result WHERE { <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 ?bandMember WHERE {
  # Part 1: Stuart Mcbeath Tosh
  OPTIONAL {
    dbr:Stuart_Mcbeath_Tosh dbo:musicalArtist ?artist1 .
  }

  # Part 2: Wizards of Waverly Place (soundtrack)
  OPTIONAL {
    dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:writer ?writer .
    ?writer a dbo:MusicalArtist ;
            a dbo:Artist ;
            rdfs:label ?artist2 .
  }

  # Part 3: The Alan Parsons Project
  OPTIONAL {
    ?bandMember dbo:memberOf dbr:The_Alan_Parsons_Project .
    ?bandMember rdfs:label ?bandLabel .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
37,9,val,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?laurynHillBirthplace ?ethanIversonBirthplace WHERE {
  # Lauryn Hill's birthplace
  dbr:Lauryn_Hill a dbo:Artist ;
                  dbo:album dbr:The_Miseducation_of_Lauryn_Hill ;
                  dbo:birthPlace ?laurynHillBirthplace .

  # Ethan Iverson's birthplace
  dbr:Ethan_Iverson a dbo:Artist, dbo:MusicalArtist ;
                    dbo:birthPlace ?ethanIversonBirthplace .
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
103,64,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?person dbo:name ""Richie Campbell""@en .
  ?person dbo:birthName ""Richard Grant Esterhuysen""@en .
  ?person dbo:profession dbr:Actor .

  ?character dbo:alterEgo dbr:The_Gray_Man .
  ?character dbo:media dbr:The_Shadow_(video_game) .

  ?show dbo:genre dbr:Television_show ;
        dbo:genre dbr:Film .
  
  ?show dbo:starring ?actor .
  FILTER(?actor != ?person)
}
```",7,9,8,3,3,3,3,71,0,0,9,0,0.0,0
472,25,val,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v4 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?administeredTerritory1 ?administeredTerritory2 ?administration3
WHERE {
  # Christian Ditlev Ammentorp Hansen's death place
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:placeOfBirth ?birthPlace .
  ?birthPlace dbo:location ?deathPlace .

  # Olaf I of Denmark's administered territory
  dbr:Olaf_I_of_Denmark dbo:administeredTerritory ?administeredTerritory1 .

  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck's birthplace and administration
  dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck dbo:birthPlace ?birthPlace3 .
  ?birthPlace3 dbo:location ?administration3 .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
557,62,val,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerAStarIsBorn ?actorJohnnyDoughboy ?workClaimToFame ?fictionalCharacterKentAllard
WHERE {
  # Producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerAStarIsBorn .

  # Actor of Johnny Doughboy and their claim to fame
  ?actorJohnnyDoughboy dbo:role ?roleJohnnyDoughboy .
  ?roleJohnnyDoughboy dbp:title ""Johnny Doughboy""@en .
  ?actorJohnnyDoughboy dbo:claimToFame ?workClaimToFame .

  # Fictional character associated with Kent Allard
  ?fictionalCharacterKentAllard dbo:alterEgo dbr:Kent_Allard .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,66,val,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyLeaderOffice ?commanderOffice ?residenceTenant
WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Politician ;
               dbo:memberOfParty ?politicalParty .

  # Find the leader of that political party
  ?politicalParty dbo:leader ?partyLeader .
  ?partyLeader dbo:office ?partyLeaderOffice .

  # Find Alberto Ruiz-Gallardón's residence
  ?albertoRuizGallardon a dbo:Politician ;
                        dbo:residence ?residence .
  ?residence dbo:tenant ?residenceTenant .

  # Find the commander in the Central African Republic Civil War
  ?commander a dbo:OfficeHolder, dbo:Politician ;
             dbo:office ?commanderOffice .
  FILTER(CONTAINS(LCASE(?commanderOffice), ""central african republic civil war""))
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
756,64,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Find the sports manager born on 1968-08-26 and native of West Germany
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .

  # Step 2: Identify the player managed by this person in the successor season of 2006–07 VfL Bochum
  ?player a dbo:SoccerClub, dbo:Organization, dbo:SoccerTeam ;
          dbo:manager ?person ;
          dbo:season dbr:2007%E2%80%9308_VfL_Bochum_season .

  # Step 3: Find the team associated with that player
  ?team a dbo:SoccerClub, dbo:Organization, dbo:SoccerTeam ;
        dbo:player ?player .

  # Step 4: Identify the manager of that soccer club for the relevant season
  ?manager a dbo:SportsManager ;
           dbo:manages ?team ;
           dbo:season dbr:2007%E2%80%9308_VfL_Bochum_season .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
557,66,val,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Lamont Cranston as The Shadow
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Cora Sue Collins' claim to fame is ""The Shadow""
  dbr:Cora_Sue_Collins dbo:claimToFame dbr:The_Shadow .

  # Frank Sinatra's movie ""High Society Blues""
  dbr:High_Society_Blues dbo:actor dbr:Frank_Sinatra .
  
  # Find the producer of ""The Shadow"" and ""High Society Blues""
  ?producer dbo:produced dbr:The_Shadow ;
            dbo:produced dbr:High_Society_Blues .

  # Get the professional identity (occupation) of the producer
  ?producer a dbo:Producer ;
            dbo:profession ?professional .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
361,26,val,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in  and professional in the profession of Frédéric Bouraly.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the album ""Lasso the Moon""
  ?album a dbo:Album ;
         rdfs:label ""Lasso the Moon""@en .
  
  # The album should be related to a film
  ?film a dbo:Film ;
        dbo:relatedWork ?album .

  # The album should also be related to a work (e.g., book, play)
  ?work a dbo:CreativeWork ;
        dbo:relatedWork ?album .

  # Find the actor associated with this film
  ?actor a dbo:Actor ;
         dbo:profession dbr:Film_actor ; # Assuming Frédéric Bouraly is known for acting in films
         dbo:actedIn ?film .
  
  # Ensure the actor has another profession (e.g., voice acting, if applicable)
  ?actor dbo:profession ?otherProfession .

  FILTER(lang(?album) = 'en')
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
203,63,val,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryConflict ?militaryForce ?event ?societalEvent
WHERE {
  # The Triple X's (The Three Musketeers) and their commander
  VALUES (?tripleX) { dbr:The_Three_Musketeers }
  ?tripleX dbo:character dbr:D'Artagnan .
  ?dArtagnan dbo:occupation dbo:Military_Officer ;
            dbo:commanderOf ?militaryConflict .

  # William Bayne's military conflict and force
  ?bayne dbr:William_Bayne_(Royal_Navy_officer) ;
         dbo:militaryConflict ?militaryConflict2 ;
         dbo:militaryForce ?militaryForce .
  
  # Robert Calder's event and societal event
  ?calder dbr:Robert_Calder ;
          dbo:event ?event ;
          dbo:societalEvent ?societalEvent .

  # Linking military forces
  ?militaryConflict2 dbo:commanderOf ?forceCommander .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
297,9,val,"Give me the entity in the birth place, that is a country, of Little Hat Jones and institution in the administration of Brian Kemp.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?institution 
WHERE {
  # Find Little Hat Jones' birthplace and check if it's a country
  OPTIONAL {
    ?person dbo:birthPlace ?birthPlace .
    FILTER (strstarts(str(?birthPlace), ""http://dbpedia.org/resource/""))
    ?birthPlace rdf:type dbo:Country .
    BIND (?birthPlace AS ?country)
  }
  
  # Find Brian Kemp's administrative institutions
  OPTIONAL {
    ?kemp dbo:positionHeld ?position .
    ?position dbo:organization ?institution .
    FILTER (strstarts(str(?institution), ""http://dbpedia.org/resource/""))
  }

  VALUES ?person { dbr:Little_Hat_Jones }
  VALUES ?kemp { dbr:Brian_Kemp }
}
```",4,5,5,2,2,2,2,9,0,1,346,0.0,0.0,0
78,26,val,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify Stuart McBeath Tosh as a musical artist
  dbr:Stuart_McBeath_Tosh dbo:musicalArtistOf ?band1 .
  
  # Find the band associated with David Paton where Stuart is also a member
  dbr:David_Paton dbo:musicalArtistOf ?band2 .
  FILTER (?band1 = ?band2)
  
  # Identify Billy Lyall's associated musical artist and find any connection through Stuart McBeath Tosh
  dbr:Billy_Lyall dbo:musicalArtistOf ?band3 .
  ?artist dbo:musicalArtistOf ?band3 .
}
```",5,6,6,2,3,2,3,28,0,0,2,0,0.0,0
119,18,val,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal and entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?country 
WHERE {
  # Maria I of Portugal and her commander
  dbr:Maria_I_of_Portugal dbo:commander ?commander .
  
  # Wars associated with the commander that are also TV shows
  ?commander dbo:militaryConflict ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:wikiPageRedirects ?tvShow .
  
  # Dawid Olejniczak's country of residence
  dbr:Dawid_Olejniczak dbo:residence ?country .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
905,65,val,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Béla IV of Hungary and his child
  ?belaviv dbo:spouse ?spouse .
  ?belaviv dbp:child ?child .

  # Child's child (grandchild) who is royalty
  ?child dbo:child ?childOfChild .
  ?childOfChild a dbo:Monarch ; 
                dbo:country ?country .

  # Philip I, Prince of Taranto and his father
  ?philipI dbp:father ?fatherOfPhilipI .

  # Father's spouse
  ?fatherOfPhilipI dbo:spouse ?spouseOfFather .

  # Parent of the father (great-grandparent) who is royalty
  ?spouseOfFather dbo:child ?parentOfFather .
  ?parentOfFather a dbo:Monarch ; 
                  dbo:country ?country2 .

  # Spouse of Maria of Bytom
  ?maria dbp:spouse ?spouseMaria .
  ?spouseMaria dbo:father ?parentOfSpouseMaria .

  FILTER (?childOfChild = ?parentOfSpouseMaria)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
89,66,val,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Saw Min Phyu's spouse and their royal child
  ?spouse dbo:spouse dbr:Saw_Min_Phyu .
  ?royalChild dbo:childOf ?spouse ;
              a dbo:Monarch .

  # Min Hla Htut of Pyakaung's parent and their child
  ?parent dbo:parent dbr:Min_Hla_Htut_of_Pyakaung .
  ?child dbo:childOf ?parent .

  # Myat Hpone Pyo's royal father and his spouse
  ?royalFather dbo:father dbr:Myat_Hpone_Pyo ;
               a dbo:Monarch .
  ?spouse2 dbo:spouse ?royalFather .

  # Find the predecessor of each identified individual
  OPTIONAL { ?royalChild dbo:predecessor ?predecessor1 . }
  OPTIONAL { ?child dbo:predecessor ?predecessor2 . }
  OPTIONAL { ?spouse2 dbo:predecessor ?predecessor3 . }

  # Return the predecessor of the royal child
  VALUES (?result) {
    (?predecessor1)
    (?predecessor2)
    (?predecessor3)
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
288,9,val,"Give me the theme of the show with Anumta Qureshi and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v1 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . ?v3 <http://dbpedia.org/ontology/openingTheme> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?showTheme WHERE {
  # Find the city with the given nicknames
  VALUES ?city {
    dbr:Lahore
  }
  
  # Check if the city has these nicknames
  OPTIONAL { ?city dbo:commonName ""The Heart of Pakistan"" . }
  OPTIONAL { ?city dbo:commonName ""Paris of the East"" . }
  OPTIONAL { ?city dbo:commonName ""City of Gardens"" . }
  OPTIONAL { ?city dbo:commonName ""City of Literature"" . }

  # Find shows featuring Anumta Qureshi and the city
  ?show dbo:location ?city .
  ?show dbo:performer dbr:Anumta_Qureshi .

  # Retrieve the theme of the show
  ?show dbo:theme ?showTheme .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
68,25,val,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark and her parent
  ?dorothea dbr:Dorothea_of_Denmark ;
           dbo:parent ?parent .

  # Parent's father (Dorothea's grandfather)
  ?parent dbo:parent ?grandfather .

  # Commander in Siege of Padua is William II, Duke of Bavaria
  ?commander dbr:William_II,_Duke_of_Bavaria ;
             dbo:child ?dorothea .

  # Catherine of Austria and her father
  ?catherine dbr:Catherine_of_Austria ;
             dbo:parent ?father .

  # The grandfather is also the father of Catherine's parent
  ?grandfather dbo:child ?catherinesParent .
  ?catherinesParent dbo:parent ?catherine .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
737,66,val,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Duke Philipp of Württemberg and his child
  ?dukePhilipp a dbo:Duke ;
               foaf:name ""Philipp of Württemberg""@en .
  ?child1 dbo:childOf ?dukePhilipp .

  # Child of Duke Philipp's child
  ?grandChild1 dbo:childOf ?child1 .

  # Philipp Albrecht, Duke of Württemberg and his child
  ?philippAlbrecht a dbo:Duke ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
  ?child2 dbo:childOf ?philippAlbrecht .

  # Predecessor of Philipp Albrecht's child
  ?predecessor dbo:successor ?child2 .

  # Archduchess Margarete Sophie of Austria and her parent
  ?margareteSophie a dbo:Archduchess ;
                   foaf:name ""Margarete Sophie of Austria""@en .
  ?parent dbr:Margarete_Sophie_of_Austria dbo:childOf ?parent .

  # Child of the parent of Archduchette Margarete Sophie
  ?grandChild2 dbo:childOf ?parent .

  # Find a person who is royalty and fits all criteria
  ?person rdf:type dbo:Royal ;
          foaf:name ?name .
  
  FILTER (?grandChild1 = ?predecessor && ?grandChild1 = ?grandChild2)
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
158,26,val,"Give me the native of Grand Duchy of Finland and person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Native of Grand Duchy of Finland
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .

  # Person deceased at the birthplace of Sandro Bertaggia
  ?sandroBertaggia dbo:birthPlace ?birthPlace .
  ?deathEvent dbo:agent ?person ;
              dbo:location ?birthPlace .

  # Native of the administration of Nicholas II of Russia
  ?nicholasII dbo:nationality dbr:Russia .
  ?person dbo:nationality dbr:Russia .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
468,18,val,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfPeterIV ?realNameOfChildOfAlfonsoIV
WHERE {
  # Find children of Peter IV of Aragon who are royalty
  dbr:Peter_IV_of_Aragon dbo:spouse ?spouse .
  ?spouse dbo:child ?childOfPeterIV .
  FILTER EXISTS { ?childOfPeterIV a dbo?Monarch } # Assuming Monarch as a class for royalty

  # Find the real name of children of Alfonso IV of Aragon who are royalty
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse2 .
  ?spouse2 dbo:child ?childOfAlfonsoIV .
  FILTER EXISTS { ?childOfAlfonsoIV a dbo?Monarch } # Assuming Monarch as a class for royalty
  BIND (STR(?childOfAlfonsoIV) AS ?realNameOfChildOfAlfonsoIV)
}
```",5,7,6,3,2,3,2,20,0,0,3,0,0.0,0
353,65,val,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Alfonso VI of León and Castile
  ?alfonso vi:dynastyMemberOf dbr:Alfonso_VI_of_Le%C3%B3n_and_Castile .
  
  # Child of Alfonso VI
  ?child1 dbo:parent ?alfonso ;
         a dbo:Monarch .

  # Grandchild of Alfonso VI (Child of the child)
  ?grandchild dbo:parent ?child1 ;
              a dbo:Monarch .

  # Father of the grandchild, who is royalty
  ?father dbo:parent ?grandchild ;
          a dbo:Monarch .

  # Reference person related to William I and parent of Roger III
  ?reference dbo:officeHolder ?office ;
             dbo:parentOf dbr:Roger_III,_Duke_of_Apulia ;
             dbo:spouseOrPartner ?william1 .
  
  ?william1 rdfs:label ""William I""@en .

  # Ensure the father is also this reference person
  FILTER (?father = ?reference)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,63,val,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?band ?producer
WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:aliasName ""Lamont Cranston""@en .
  
  # Robert Lamar Thompson (Bobby Caldwell) and his band
  dbr:Bobby_Caldwell dbo:birthName ""Robert Lamar Thompson""@en ;
                     dbo:memberOf ?band .

  # Producer of Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  # Assuming Jonathan Manalo is the producer
  ?producer rdfs:label ""Jonathan Manalo""@en .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
782,66,val,"Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfEricClapton ?realNameFabulousThunderbirds ?associatedArtistNickCurran
WHERE {
  # Eric Clapton's band
  dbr:Eric_Clapton dbo:memberOf ?bandOfEricClapton .

  # The Fabulous Thunderbirds' real name
  dbr:The_Fabulous_Thunderbirds rdfs:label ?realNameFabulousThunderbirds .
  
  # Nick Curran's associated musical artist
  dbr:Nick_Curran dbo:associatedMusicalArtist ?associatedArtistNickCurran .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
119,63,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?event dbo:leader dbr:Anxo_Quintana .
  ?event dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?administration dbo:head ?person .
  ?administration dbo:country dbr:Spain .
  ?person dbp:nationality ""Spanish""@en .
  
  ?resident dbo:residence ?country .
  ?resident rdfs:label ""Álvaro Quirós""@en .
  ?country rdf:type dbo:Country .

  FILTER(?office = ?event)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
38,18,val,"Give me the author of the work, that is a written work and a work, of Joe Biden and author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author1 ?work1 ?author2 ?book
WHERE {
  # Joe Biden's written work
  ?work1 dbo:author dbr:Joe_Biden ;
         a dbo:CreativeWork .

  # American book by a commander in North Carolina Air National Guard
  ?person dbo:officeHolderOf dbr:North_Carolina_Air_National_Guard_Commander ;
          dbo:positionTitle ""Commander"" ;
          dbo:nationality dbr:United_States ;
          dbo:author ?book .
  
  ?book a dbo:Book .

  # Ensure the book is American
  ?book dbo:country dbr:United_States .

  # Bind authors to variables for output
  BIND(dbo:author ?work1 AS ?author1)
  BIND(dbo:author ?book AS ?author2)
}
```",5,13,6,3,2,3,2,20,0,0,1,0,0.0,0
412,26,val,Give me the entity in Athens and war of the leader of National Party of Greece and war of the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?leader ?warLeader ?awardee ?warAwardee WHERE {
  # Find the leader of National Party of Greece
  ?party dbo:leader ?leader .
  FILTER (str(?party) = ""National_Party_of_Greece"") .

  # Wars associated with this leader
  OPTIONAL { ?leader dbo:participatedInWar ?warLeader . }

  # Find an awardee who received a Nobel Prize around 1931
  ?awardee dbo:nobelPrize ?prize .
  FILTER (YEAR(?prize) = 1931 && STRSTARTS(STR(?prize), ""Nobel Peace Prize"")) .

  # Wars associated with this awardee
  OPTIONAL { ?awardee dbo:participatedInWar ?warAwardee . }

  # Ensure the leader is in Athens (assuming a location property)
  OPTIONAL { ?leader dbo:location dbr:Athens . }
}
```

This query assumes:
- The `dbo:leader` property links to the leader of a political party.
- The `dbo:nobelPrize` property links an entity to their Nobel Prize, with the year available as part of the resource URI or description.
- The `dbo:participatedInWar` property links entities to wars they participated in.
- The location of the leader is checked against Athens.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
89,65,val,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet's child
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  
  # Step 2: Identify Min Hla Htut's parent
  ?minHlaHtutParent dbo:child dbr:Min_Hla_Htut_of_Pyakaung .

  # Step 3: Find the father of Saw Shwe Khet's child who is royalty
  ?father dbo:spouse ?mother .
  ?father dbo:parent ?child .
  ?father a dbo:Monarch .  # Assuming 'Monarch' represents royalty

  # Step 4: Find the spouse of that father
  ?father dbo:spouse ?spouse .

  # Step 5: Identify predecessor relationship
  ?predecessor dbo:successor ?child .
  
  # Ensure all entities are royalty
  FILTER (?child a dbo:Monarch && ?minHlaHtutParent a dbo:Monarch)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
361,25,val,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of ""Rustlers' Rhapsody""
  ?movie dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?movie), STR(dbr:Rustlers'_Rhapsody)))

  # Ensure the actor is associated with ""The Shadow"" alter ego
  OPTIONAL { ?actor dbo:alias dbr:The_Shadow . }

  # Ensure the actor shares the profession of Frédéric Bouraly (Actor)
  ?actor dbo:profession dbr:Actor .
  FILTER EXISTS {
    ?frédéric dbo:profession dbr:Actor .
    BIND(dbr:Frédéric_Bouraly AS ?frédéric)
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
159,66,val,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander ?tvShow ?societalEvent ?militaryForce ?successor ?politician
WHERE {
  # Writer of ""Always the Love Songs""
  ?writer dbo:work dbr:Always_the_Love_Songs .

  # Commander in the Battle of Vienna
  ?battle dbr:Battle_of_Vienna .
  ?commander dbo:commanded ?battle .

  # Television show and societal event
  ?tvShow a dbo:TelevisionSeries .
  ?societalEvent a dbo:SocietalEvent .

  # Military force in the Battle of Vienna
  ?militaryForce dbo:participatedIn ?battle .

  # Successor of the commander
  ?successor dbo:succeededBy ?commander .

  # Politician and office holder in Russo-Polish War (1654–1667)
  ?war dbr:Russo-Polish_War_(1654%E2%80%931667) .
  ?politician dbo:officeHolder ?war ;
              a dbo:Politician .
}
```

This query attempts to link the various entities and roles mentioned in your question. Note that some assumptions are made about the structure of DBpedia data, and you may need to adjust property paths based on actual data availability.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
119,62,val,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantSantiago ?countryResidence ?eventOffice
WHERE {
  # Santiago de Compostela tenant
  dbr:Santiago_de_Compostela dbo:location dbr:Galicia .
  dbr:Galicia dbo:administrativeRegionOf dbr:Spain .
  dbr:Galicia dbo:mayor ?tenantSantiago .

  # Residence of a Spanish citizen from Spain
  ?citizen dbo:nationality dbr:Spanish_people .
  ?residence dbo:location ?countryResidence .
  ?citizen dbo:placeOfBirth ?residence .

  # Office of the leader of the administration (event) of Anxo Quintana
  dbr:Anxo_Quintana dbo:office ?eventOffice .
  ?eventOffice a dbo:Event .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
89,62,val,"Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/spouse> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Myat Hpone Pyo's predecessor
    ?myatHponePyo a dbo:Monarch ;
                  dbo:succession ?succession .
    
    ?succession dbo:predecessor ?predecessor .

    # Minye Kyawswa's child
    ?minyeKyawswa a dbo:Monarch ;
                  dbo:child ?childMinyeKyawswa .

    # Saw Shwe Khet's royal child
    ?sawShweKhet a dbo:Monarch ;
                 dbo:child ?royalChildSawShweKhet .
    
    ?royalChildSawShweKhet a dbo:RoyalPerson .

    # Spouse of the father of Saw Shwe Khet's royal child
    ?father dbr:Saw_Shwe_Khet#parent_of ?royalChildSawShweKhet ;
            dbo:spouse ?spouse .
    
    # The predecessor must be the spouse found above
    ?predecessor = ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,64,val,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?commander ?disease ?event ?owner ?spouse ?book
WHERE {
  # Step 1: Find the author of ""Back to Work"" (book)
  dbr:Back_to_Work_(book) dbo:author ?author .

  # Step 2: Identify the commander related to a disease and societal event
  ?commander dbo:relatedToDisease ?disease .
  ?commander dbo:relatedToEvent ?event .

  # Step 3: Connect this commander to the owner of USS Arcadia (ID-1605)
  ?owner dbo:ownsUSSArcadia dbr:USS_Arcadia_(ID-1605) .
  ?commander dbo:commandedBy ?owner .

  # Step 4: Identify the spouse of the author, who is a politician and office holder
  ?author dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Step 5: Find the book written by Hillary Clinton
  dbr:Hillary_Clinton dbo:writtenWork ?book .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
353,64,val,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?sibling WHERE {
  # Constance of Burgundy and her spouse's child (William II of England)
  dbr:Constance_of_Burgundy dbo:spouse dbr:Henry_I_of_England .
  dbr:Henry_I_of_England dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .

  # Roger II of Sicily and his child (William I of Sicily)
  dbr:Roger_II_of_Sicily dbo:child dbr:William_I_of_Sicily .
  dbr:Adelaide_del_Vasto dbo:child dbr:William_I_of_Sicily .

  # William II of Sicily's father
  dbr:William_II_of_Sicily dbo:father dbr:William_I_of_Sicily .

  # Ensure both are royalty
  ?grandchild a dbo:Monarch .
  ?sibling a dbo:Monarch .

  # Find sibling of William I of Sicily
  dbr:Adelaide_del_Vasto dbo:child ?sibling .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
419,9,val,"Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?scientist ?birthplace ?almaMater WHERE {
  # Step 1: Find Yandamuri Veerendranath's birthplace
  dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthplace .

  # Step 2: Find Australian Laureate Fellowship awardees who are scientists and studied at the birthplace
  ?scientist a dbo:Scientist ;
             dbp:nationality ""Australian"" ;
             dbo:almaMater ?almaMater ;
             dbo:awardReceived dbr:Australian_Laureate_Fellowship .

  # Step 3: Ensure the alma mater matches Yandamuri Veerendranath's birthplace
  FILTER (?birthplace = ?almaMater)
}",4,6,5,2,2,2,2,9,0,0,2,0,0.0,0
492,25,val,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?salMineoDeathPlace ?johnWayneDeathPlace ?georgeRaftDeathPlace WHERE {
  # Sal Mineo
  dbpedia:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  
  # John Wayne (The Sky Ranger)
  dbpedia:John_Wayne dbo:birthName ""Marion Robert Morrison""@en ;
                     dbo:deathPlace ?johnWayneDeathPlace .

  # George Raft (Color Me Dead)
  dbpedia:George_Raft dbo:deathPlace ?georgeRaftDeathPlace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
816,62,val,"Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentDoonArbus ?parentProfession ?actorMovie
WHERE {
  # Parent of Doon Arbus
  OPTIONAL { 
    dbr:Doon_Arbus dbo:parent ?parentDoonArbus .
  }

  # Profession of Eugène Cattin and a professional in that profession
  OPTIONAL {
    dbr:Eugène_Cattin dbo:profession ?eugeneProfession .
    ?professional dbo:profession ?eugeneProfession .
    ?professional dbo:parent ?parentProfession .
  }

  # Actor of a movie with a person decedent at Los Angeles
  OPTIONAL {
    ?movie dbo:actor ?actor .
    ?person dbo:deathPlace dbr:Los_Angeles .
    ?person dbo:film ?movie .
    ?actorMovie ?p ?movie .
  }
}
```",7,8,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
871,66,val,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v3 <http://dbpedia.org/property/father> ?v6 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
    ?alumnus dbo:almaMater dbr:Eton_College .
    
    ?child1 dbo:parent ?alumnus ;
            a dbo:Politician .

    ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order ;
             dbo:parent ?alumnus .

    ?child2 dbo:parent ?alumnus ;
            dbo:parent dbr:Fredrick_Stanley_16th_Earl_of_Derby .

    ?father dbo:child ?child1 .
}
```

This query does the following:
- Selects an alumnus of Eton College.
- Finds a child of this alumnus who is a politician.
- Ensures that the same alumnus has another child who received the Commander of the Royal Victorian Order and is also a child of Frederick Stanley, 16th Earl of Derby.
- Retrieves the father of the politician.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
941,18,val,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentD WHERE {
  # Duchess Luise of Brunswick-Wolfenbüttel and her spouse
  ?luise a dbo:Duchess ;
         dbp:spouse ?personA .
  
  # Spouse of PersonA (PersonB)
  ?personA dbp:spouse ?personB .

  # Child of PersonB (ChildC) and their royal parent (ParentD)
  ?personB dbo:child ?childC .
  ?parentD dbo:child ?childC ;
           a dbo:RoyalFamilyMember .

  # Ferdinand Albert II, Duke of Brunswick-Lüneburg's child
  ?ferdinand dbp:child ?ferdinandChild .
  
  # Check if ParentD is related to FerdinandChild
  FILTER(?parentD = ?ferdinandChild)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,64,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent WHERE {
  # Step 1: Identify the commander in Siege of Mukha
  ?commander dbo:event dbr:Siege_of_Mukha .
  
  # Step 2: Find the parent who is royalty
  ?parent dbo:spouseOrPartner ?commander ;
          a dbo:Monarch .

  # Step 3: Determine the child of this royal parent
  ?childOfParent dbo:parent ?parent .

  # Step 4: Identify the father of this child, ensuring he is royalty and an office holder
  ?father dbo:spouseOrPartner ?childOfParent ;
          a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Step 5: Find the child of Baeda Maryam I
  ?baedaChild dbo:parent dbr:Baeda_Maryam_I .
  
  # Assuming we need to relate this somehow, but it's unclear how from the question
  # This part might be a placeholder or require additional context
}
```

This query assumes certain relationships and classes based on typical DBpedia ontology. Adjustments may be necessary depending on the exact data available in DBpedia.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
816,65,val,"Give me the parent of the child of Allan Arbus and parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v6 <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?parentOfProfessional WHERE {
  # Step 1: Find Allan Arbus' child
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  ?child dbo:parent ?allanArbus .

  # Step 2: Identify Eugène Cattin's profession and find a professional in that field
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  ?eugeneCattin dbo:occupation ?profession .
  ?professional dbo:occupation ?profession .

  # Step 3: Find the movie with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi ;
         dbo:starring ?actor .
  
  # Step 4: Combine to find the parents
  ?child dbo:parent ?parentOfChild .
  ?professional dbo:parent ?parentOfProfessional .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,65,val,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find the author of ""An Invitation to the White House""
  ?author dbo:title ""An Invitation to the White House""@en .
  
  # Step 2: Identify the spouse who is a politician and office holder
  ?author dbo:spouse ?spouse .
  ?spouse a dbo:Politician ;
          dbo:officeHolder true .

  # Step 3: Commander in the war, that is a disease and societal event
  ?commander dbo:commandedMilitaryUnit ?unit .
  ?unit dbo:name ""United States Navy""@en .
  ?war dbo:name ?diseaseEvent .
  FILTER (CONTAINS(LCASE(?diseaseEvent), ""flu"") || CONTAINS(LCASE(?diseaseEvent), ""pandemic"")) .

  # Step 4: Author of work related to the resident of Chappaqua, New York
  ?resident dbo:residence dbr:Chappaqua,_New_York .
  ?work dbo:author ?author .
  ?work a dbo:Book ;
       dbo:title ?title .
  
  FILTER (CONTAINS(LCASE(?title), ""invitation"") || CONTAINS(LCASE(?title), ""white house""))
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
557,65,val,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerJanetGaynor ?producerTheShadow ?producerJohnnyDoughboyActor
WHERE {
  # Janet Gaynor's claim to fame
  dbr:7th_Heaven (dbo:director|dbo:producer) ?producerJanetGaynor .
  
  # The Shadow's claim to fame
  dbr:The_Shadow (dbo:creator|dbo:producer) ?producerTheShadow .

  # Johnny Doughboy actor and his claim to fame
  dbr:Yankee_Doodle_Dandy dbo:actor dbr:James_Cagney ;
                          (dbo:director|dbo:producer) ?producerJohnnyDoughboyActor .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
492,26,val,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor1DeathPlace ?actor2DeathPlace ?actor3DeathPlace WHERE {
  # Actor of ""The Sky Ranger"" (1928 film)
  ?film1 a dbo:Film ;
         dbo:title ""The Sky Ranger""@en .
  ?film1 dbo:starring ?actor1 .
  OPTIONAL { ?actor1 dbo:deathPlace ?actor1DeathPlace . }

  # Carolyn Jones
  dbr:Caryn_Jones dbo:birthName ?actor2BirthName ;
                   dbo:deathPlace ?actor2DeathPlace .

  # Actor of ""Aladdin"" (1958 film)
  ?film3 a dbo:Film ;
         dbo:title ""Aladdin""@en .
  ?film3 dbo:starring ?actor3 .
  OPTIONAL { ?actor3 dbo:deathPlace ?actor3DeathPlace . }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
905,64,val,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find Stephen V of Hungary and his predecessor
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?predecessor dbo:successor ?stephenV .

  # Step 2: Identify Philip, Despot of Romania's parent who is royalty
  ?philip a dbo:Person ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  ?parent dbr:Philip,_Despot_of_Romania dbo:child ?philip ;
          a dbo:Monarch .

  # Step 3: Find the spouse of the father of this parent
  ?father dbo:spouse ?spouse .
  ?parent dbo:parent ?father .

  # Step 4: Identify the child of this royalty who is also royalty
  ?royaltyChild dbo:childOf ?spouse ;
                a dbo:Monarch .

  # Step 5: Find the child of that child
  ?childOfChild dbo:childOf ?royaltyChild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
595,66,val,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?spouse ?commander WHERE {
  # Step 1: Identify the author of ""An Invitation to the White House""
  ?work dbo:title ""An Invitation to the White House""@en .
  ?work dbo:author ?author .

  # Step 2: Find the spouse of the author who is a politician and office holder
  ?author dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Step 3: Determine the commander related to USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .
  ?owner dbo:commanderInWar ?war .
  ?war rdf:type dbo:Disease ;
       dbo:societalEvent true .

  # Link the commander to the owner of USS Arcadia
  ?owner dbo:commander ?commander .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
472,26,val,"Give me the administration of Christian IX of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationChristianIX ?deathPlaceHansen ?mayorSchleswig
WHERE {
  # Administration of Christian IX of Denmark
  dbr:Christian_IX_of_Denmark dbo:positionHeld ?administrationChristianIX .

  # Death place of Christian Ditlev Ammentorp Hansen, which is a settlement
  dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlace .
  FILTER (isLiteral(?deathPlace) && contains(str(?deathPlace), ""Settlement""))
  BIND(?deathPlace AS ?deathPlaceHansen)

  # Administration of the mayor of Duchy of Schleswig
  dbr:Duchy_of_Schleswig dbo:mayor ?mayor .
  ?mayor dbo:positionHeld ?administrationSchleswig .
  BIND(?administrationSchleswig AS ?mayorSchleswig)
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
905,62,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip's parent who is royalty
  ?philip dbo:parent ?parent .
  FILTER (STRSTARTS(STR(?parent), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?parent dbo:occupation dbp:Monarch }).

  # Step 2: Identify the grandparent and their spouse
  ?parent dbo:parent ?grandparent .
  ?grandparent dbo:spouse ?spouse .

  # Step 3: Identify Maria of Bytom's spouse
  ?maria dbp:surname ""Bytom"" .
  ?maria dbo:spouse ?mariaspouse .

  # Step 4: Identify the grandparent of Maria's spouse and their child
  ?mariaspouse dbo:parent ?mspgrandparent .
  ?mspgrandparent dbo:child ?child .

  # Step 5: Ensure the child is Stephen V of Hungary
  ?child rdfs:label ""Stephen V of Hungary""@en .

  # Filter to ensure all entities are royalty
  FILTER (EXISTS { ?spouse dbo:occupation dbp:Monarch } &&
          EXISTS { ?mspgrandparent dbo:occupation dbp:Monarch })
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
557,63,val,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalAlias ?coraSueWork ?janetGaynorMovie
WHERE {
  # Kent Taylor's professional alias ""Kent Allard""
  dbr:Kent_Taylor dbo:aliasName ?professionalAlias .
  
  FILTER regex(?professionalAlias, ""Kent Allard"", ""i"")

  # Cora Sue Collins' work produced by Kent Taylor
  ?coraSueWork dbo:starring dbr:Cora_Sue_Collins ;
               dbo:producer ?kentTaylor .

  # Janet Gaynor's movie produced by Kent Taylor
  ?janetGaynorMovie dbo:starring dbr:Janet_Gaynor ;
                    dbo:producer ?kentTaylor .
  
  # Ensure the producer is Kent Taylor
  ?kentTaylor rdfs:label ""Kent Taylor""@en .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
769,18,val,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Tony Hollings' birthdate
  dbr:Tony_Hollings dbo:birthday ?birthday .

  # Find players who are athletes, soccer players, sports managers, and soccer managers
  ?player a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .

  # Ensure they are associated with the Hong Kong C Team as a manager
  ?managerTeam dbr:Hong_Kong_C_Team dbo:manager ?player .

  # Match their birthdate to Tony Hollings' birthdate
  ?player dbo:birthday ?birthday .
}
```",5,11,6,3,2,3,2,20,0,0,2,0,0.0,0
39,64,val,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?band ?birthName ?professional
WHERE {
  # Find the producer of Coke Studio Philippines
  ?cokeStudio dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  # Check if the producer is a musical artist and find their band
  OPTIONAL { 
    ?producer dbo:profession dbr:Musical_artist .
    ?producer dbo:musicBand ?band .
  }
  
  # Find Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # Find the professional in the profession of the producer and band
  OPTIONAL {
    ?professional dbo:profession ?producerProf .
    FILTER(?producerProf = ?producer || ?producerProf = ?band)
  }
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
905,63,val,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Step 1: Identify Philip, Despot of Romania
    ?philip a dbo:Person ;
            foaf:name ""Philip, Despot of Romania"" .

    # Step 2: Find his parent who is royalty
    ?parent dbo:child ?philip .
    ?parent dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""royalty""))

    # Step 3: Find the spouse of Philip's royal parent (grandparent)
    ?spouse dbo:spouse ?parent .

    # Additional condition involving Béla IV of Hungary
    ?belav child ?child .
    ?belav a dbo:Person ;
           foaf:name ""Béla IV of Hungary"" .

    FILTER(CONTAINS(LCASE(?title), ""royalty""))

    ?grandparent dbo:child ?child .
    ?grandparent dbo:title ?title2 .
    FILTER(CONTAINS(LCASE(?title2), ""royalty""))

    # Step 4: Ensure this grandparent is the same as the spouse found
    ?charlesParent dbo:child ?grandparent .
    ?charlesParent a dbo:Person ;
                   foaf:name ""Charles I of Hungary"" .

    FILTER(CONTAINS(LCASE(?title2), ""royalty""))
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
414,18,val,"Give me the award of the awardee of Nobel Prize in Physics and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?hostInstitution WHERE {
  ?person a dbo:AwardWinner ;
          dbo:honorificTitle ""Rainer Weiss"" .
  
  ?person dbo:award ?award .
  ?award a dbo:NobelPrizeInPhysics .

  OPTIONAL { 
    ?award dbo:hostingOrganization ?hostInstitution .
    FILTER (isLiteral(?hostInstitution) && regex(str(?hostInstitution), ""educational institution""))
  }
}
```

This query does the following:
- Identifies `?person` as an instance of `dbo:AwardWinner` with the honorific title ""Rainer Weiss"".
- Retrieves the award (`?award`) associated with this person, ensuring it is a Nobel Prize in Physics.
- Optionally retrieves the hosting organization (`?hostInstitution`) for the award and filters to include only those that are educational institutions.",5,6,6,3,2,3,2,20,0,0,3,0,0.0,0
198,63,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Henry Clay Lewis' birthplace
  VALUES (?henryClayLewis) { dbr:Henry_Clay_Lewis }
  ?henryClayLewis dbo:birthPlace ?birthPlace .
  FILTER (dbo:Settlement IN (rdf:type/rdf:first) && dbp:countryName ""United States""@en)

  # United States Congress Award Show
  VALUES (?congressAward) { dbr:Congressional_Medal_of_Honor }
  ?congressAward dbo:recipient ?recipient .
  ?recipient dbo:nationality dbr:United_States .
  ?recipient dbo:militaryConflict ?war .

  # Gillmore Medal
  VALUES (?gillmoreMedal) { dbr:Gillmore_Medal }
  ?gillmoreMedal dbo:recipient ?gillmoreRecipient .
  ?gillmoreRecipient dbo:militaryForce ?force .

  # Find the common entity
  FILTER (?birthPlace = ?war || ?birthPlace = ?force)
  BIND(?birthPlace AS ?entity)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
159,62,val,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor ?work WHERE {
  # Find the commander in the Great Turkish War
  ?event dbo:wikiPageRedirects dbr:Great_Turkish_War .
  ?event dbo:commander ?commander .

  # Ensure the successor is a politician and an office holder
  ?commander dbo:succeededBy ?successor .
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder true .

  # Michał Kazimierz Pac's involvement in the event
  ?event dbo:participant dbr:Michał_Kazimierz_Pac .

  # Reference to George Ducas' work
  ?work dbo:author dbr:George_Ducas .
  ?commander dbo:mentionedIn ?work .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
513,18,val,Give me the residence of the leader of Ulster Unionist Party and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v3 <http://dbpedia.org/ontology/residence> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?awardEntity WHERE {
  # Find the leader of the Ulster Unionist Party and their residence
  ?leader a dbo:Leader ;
          dbo:party dbr:Ulster_Unionist_Party ;
          dbo:residence ?residence .

  # Find an entity related to George Hamilton Cameron in an award context
  ?awardEntity dbo:recipient dbr:George_Hamilton_Cameron .
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
39,65,val,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samProfession ?samBand ?robertArtist ?alterEgo
WHERE {
  # Sam Concepcion's profession and band
  dbr:Sam_Concepcion dbo:profession ?samProfession .
  OPTIONAL { dbr:Sam_Concepcion dbo:band ?samBand . }

  # Robert Lamar Thompson as a musical artist
  ?robertArtist dbo:birthName ""Robert Lamar Thompson"" ;
               rdf:type dbo:MusicalArtist .

  # Walter B. Gibson's fictional character and alter ego
  ?fictionalCharacter dbo:creator dbr:Walter_B._Gibson ;
                     dbo:alterEgo ?alterEgo .
  FILTER (rdf:type(?fictionalCharacter) = dbo:FictionalCharacter &&
          rdf:type(?alterEgo) = dbo:ComicsCharacter)
}
```",7,10,8,3,3,3,3,71,0,0,4,0,0.0,0
353,66,val,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?result WHERE {
  # Step 1: Find Roger III, Duke of Apulia and his parent
  ?rogerIII a dbo:Duke ;
            foaf:name ""Roger III"" ;
            dbo:parent ?parentOfRogerIII .

  # Step 2: Find the child of Roger III's parent
  ?childOfParent a dbo:Person ;
                 dbo:parent ?parentOfRogerIII .

  # Step 3: Identify Constance of Burgundy and her spouse
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy"" .
  ?spouse a dbo:Person ;
          dbo:spouse ?constance ;
          dbo:child ?royalChildOfSpouse .

  # Step 4: Identify William I of Sicily and his royal child
  ?williamI a dbo:King ;
            foaf:name ""William I of Sicily"" .
  ?royalChildOfWilliamI a dbo:Person ;
                        dbo:parent ?williamI ;
                        dbo:royalty ?royalty .

  # Step 5: Find the intersection of these relationships
  ?result = ?childOfParent ;
           = ?royalChildOfSpouse ;
           = ?royalChildOfWilliamI .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
119,66,val,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant
WHERE {
  # Find the administration associated with PSOE
  ?psoe dbo:member ?administration .
  FILTER (str(?psoe) = ""Spanish_Socialist_Workers'_Party"")

  # Identify the leader of the 2009 Galician regional election
  ?election dbo:winner ?leader .
  FILTER (str(?election) = ""2009_Galician_regional_election"")
  
  # Determine Álvaro Quirós's country of residence
  dbr:Álvaro_Quirós dbo:nationality ?country .

  # Find the tenant who is associated with all these entities
  ?tenant dbo:office ?administration .
  ?tenant dbo:leaderOfElection ?leader .
  ?tenant dbo:residenceCountry ?country .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
943,66,val,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfYeshaqI ?grandChildParent ?parentOfBaedaMaryamChild ?alterEgo

WHERE {
  # Yeshaq I's child who is royalty
  ?yeshaqI a dbo:Monarch ;
           foaf:name ""Yeshaq I""@en .
  
  ?childOfYeshaqI dbo:spouseOrPartner ?yeshaqI ;
                  a dbo:Monarch .

  # Father of the father (grandchild's parent)
  ?grandChild dbr:parent ?grandChildParent ;
              a dbo:Monarch .
  ?grandChildParent dbo:spouseOrPartner ?childOfYeshaqI .

  # Child of Baeda Maryam I
  ?baedaMaryamI a dbo:Monarch ;
                foaf:name ""Baeda Maryam I""@en .
  
  ?childOfBaedaMaryam dbr:parent ?baedaMaryamI ;
                      a dbo:Monarch .

  # Parent who is royalty and an office holder
  ?parentOfBaedaMaryamChild dbo:spouseOrPartner ?childOfBaedaMaryam ;
                           a dbo:Monarch, dbo:OfficeHolder .

  # Alter ego of The Shadow (fictional reference)
  # Assuming a symbolic link to a character or concept
  ?alterEgo foaf:name ""The Shadow""@en .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
39,62,val,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Walter B. Gibson created ""The Shadow""
  dbr:The_Shadow dbo:creator dbr:Walter_B._Gibson .

  # Find the alter ego or creation of Walter B. Gibson
  ?creation dbo:creator dbr:Walter_B._Gibson .
  
  # The professional is linked to this creation
  ?professional dbo:alterEgo ?creation .

  # Professional involved in Coke Studio Philippines
  ?csProducer dbo:profession dbr:Coke_Studio_Philippines_Producer .
  ?professional dbo:colleague ?csProducer .

  # Professional associated with Bob Thompson's band
  ?band dbo:musicalArtist dbr:Bob_Thompson_(musician) .
  ?professional dbo:memberOfBand ?band .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
293,66,val,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the ruling party in Central, Louisiana
  ?location a dbo:City ;
            dbo:country dbr:United_States ;
            rdfs:label ""Central, Louisiana""@en .
  
  ?office dbo:city ?location ;
          dbo:positionTitle ?position ;
          dbo:party ?rulingParty .

  # Find the party member of the ruling party
  ?person dbo:memberOf ?rulingParty ;
          dbo:occupation dbo:Politician ;
          rdfs:label ?partyMemberLabel .
  
  FILTER(CONTAINS(LCASE(?partyMemberLabel), ""central, louisiana""))

  # Find Tisha Sterling's parent and their birth name
  ?tisha dbr:Tisha_Sterling ;
         dbo:parent ?parent .

  ?parent dbo:birthName ?birthName .

  # Find the actor from ""1,000 Dollars a Minute"" and their spouse
  ?film dbo:title ""1,000 Dollars a Minute""@en .
  
  ?actor dbo:starringIn ?film ;
         dbo:spouse ?spouse .

  # Match the person with the birth name of Tisha Sterling's parent
  FILTER(?person = ?spouse)
  FILTER(LCASE(?birthName) = LCASE(?partyMemberLabel))
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
80,65,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with  and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Find T.I.'s album that is a song and musical work
  ?album dbo:type dbr:Song ;
         dbo:musicalWork dbr:Musical_Work ;
         dbo:artist dbr:T.I. .

  # Step 2: Find the actor associated with this album
  ?album dbo:actor ?actor .

  # Step 3: Identify the movie featuring this actor who has an alter ego ""The Shadow""
  ?movie dbo:starring ?actor .
  ?actor dbo:alterEgo dbr:The_Shadow .
}
```",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
119,65,val,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v6 . ?v4 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v6 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person ?residenceCountry WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:Spain .
  
  # Tenant of the administration of PSOE
  ?office dbo:positionTitle ""Leader""@en ;
          dbo:party dbr:Spanish_Socialist_Workers'_Party ;
          dbo:holder ?person .

  # Office of the leader in the 2009 Galician regional election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  
  ?office dbo:election ?election ;
          dbo:positionTitle ""Leader""@en .

  # Residence country of the person
  OPTIONAL { ?person dbo:residenceCountry ?residenceCountry }
}
ORDER BY ?person",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
756,65,val,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v4 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?player ?country
WHERE {
  # Thomas Letsch as manager of VfL Bochum in the 2007-08 season
  dbr:Thomas_Letsch dbo:position ""Manager""@en .
  dbr:VfL_Bochum dbo:sportTeamSeason dbr:2007–08_VfL_Bochum_season .
  
  # Manager of a player associated with VfL Bochum
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:manager dbr:Thomas_Letsch .
  
  # Player is part of a sports club, organization, and soccer club
  ?player rdf:type dbo:SportsClub ;
          rdf:type dbo:Organization ;
          rdf:type dbo:SoccerClub .

  # Leader of West Germany's administration country
  dbr:Konrad_Adenauer dbo:nationality ?country .
}",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
159,63,val,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writer
WHERE {
  # Find Jean Baptiste d'Arco and his role in the War of the Polish Succession
  dbr:Jean_Baptiste_d%27Arco dbo:militaryCommanderOf dbr:War_of_the_Polish_Succession .
  
  # Find Michał Kazimierz Pac's involvement in the same war
  dbr:M%C4%85dry_Micha%C5%82_Kazimierz_Pac dbo:militaryCommanderOf dbr:War_of_the_Polish_Succession .

  # Identify the successor of Jean Baptiste d'Arco as a commander
  ?successor dbo:militaryCommanderOf dbr:War_of_the_Polish_Succession .
  ?successor dbo:succeededBy dbr:Jean_Baptiste_d%27Arco .
  
  # Ensure the successor is also a politician and office holder
  ?successor dbo:occupation dbr:Politician ;
             dbo:officeHolderOf ?office .

  # Reference the writer of ""Always the Love Songs""
  dbr:Always_the_Love_Songs dbo:author dbr:David_Levithan .
  
  BIND(dbr:David_Levithan AS ?writer)
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
737,65,val,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Philipp Albrecht, Duke of Württemberg and his lineage
  ?philippAlbrecht a dbo:Person ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg"" .
  
  ?child1 dbo:parent ?philippAlbrecht .
  ?grandchild1 dbo:parent ?child1 .
  ?greatGrandchild1 dbo:parent ?grandchild1 .

  # Alexander of Württemberg (1804-1881) and his lineage
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1804 && MONTH(?birthDate) <= 12)

  ?child2 dbo:parent ?alexander .
  ?grandchild2 dbo:parent ?child2 .

  # Archduke Charles Louis of Austria and his lineage
  ?charlesLouis a dbo:Person ;
                foaf:name ""Archduke Charles Louis of Austria"" .
  
  ?child3 dbo:parent ?charlesLouis .
  ?grandchild3 dbo:parent ?child3 .
  FILTER EXISTS { ?grandchild3 a dbo:Royalty } .

  # Find the common descendant
  ?commonDescendant dbo:parent ?greatGrandchild1 ;
                   dbo:parent ?grandchild2 ;
                   dbo:parent ?grandchild3 .

  # Find the predecessor in the royal lineage
  ?predecessor dbo:successor ?commonDescendant .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,64,val,"Give me the birth place of Glenn Youngkin and birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceGlennYoungkin ?birthPlaceAwardee ?birthPlaceAuthor WHERE {
  # Birthplace of Glenn Youngkin
  dbr:Glenn_Youngkin dbo:birthPlace ?birthPlaceGlennYoungkin .

  # Awardee's birthplace related to Vince Gilligan
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?birthPlaceAwardee .
  }

  # Author of ""El Deafo"" and their birthplace
  OPTIONAL {
    dbr:El_Deafo dbo:author ?author .
    FILTER (lang(?authorLabel) = 'en' && contains(lcase(str(?authorLabel)), 'american'))
    ?author dbo:birthPlace ?birthPlaceAuthor .
  }
}
```",7,8,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
871,65,val,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Find children of Frederick Stanley, 16th Earl of Derby who are politicians
  ?child dbo:parent dbr:Frederick_Stanley,_16th_Earl_of_Derby ;
         a dbo:Politician .

  # Step 2: Find the father of this child
  ?father dbo:spouse ?mother .
  ?child dbo:parent ?father .

  # Step 3: Identify the awardee of Commander of the Royal Victorian Order and their parent
  ?awardee dbo:award dbr:Commander_of_the_Royal_Victorian_Order ;
           dbo:parent ?parentOfAwardee .

  # Step 4: Find the child of the parent who is a politician and office holder of Edward Stanley, 17th Earl of Derby
  ?officeHolderParent dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby ;
                     a dbo:Politician ;
                     dbo:officeHolder ?office .

  ?officeHolderChild dbo:parent ?officeHolderParent .
  
  # Step 5: Link the parent of the awardee to the child of the office holder
  ?parentOfAwardee = ?officeHolderChild .

  FILTER(?father = ?parentOfAwardee)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,63,val,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sharedWork WHERE {
  # Shatrughan Sinha's profession as an actor
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor .

  # Richard Grant Esterhuysen (The Shadow) and his alter ego
  dbr:The_Shadow dbo:alterEgoOf dbr:Richard_Grant_Esterhuysen .
  
  # Find a shared work between Shatrughan Sinha and The Shadow
  ?sharedWork dbo:starring dbr:Shatrughan_Sinha ;
             dbo:starring dbr:The_Shadow .
}
```",7,8,8,3,3,3,3,71,0,0,13,0,0.0,0
80,63,val,Give me the professional in the alter ego of The Shadow and actor of the movie with the author of Smartbomb (book) and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Orson Welles as Lamont Cranston (The Shadow)
  VALUES (?shadowActor) { dbr:Orson_Welles }
  
  # Idris Elba's connection to The Shadow
  ?elba dbo:profession dbr:Actor .
  ?elba dbo:actedIn dbr:Penny_Dreadful_(TV_series) .
  
  # Douglas Coupland and his works
  ?coupland dbo:authorOf dbr:Smartbomb .
  
  # Idris Elba's connection to Urban Legend (T.I. album)
  ?elba dbo:actedIn ?urbanLegendWork .
  ?urbanLegendWork dbo:title ""Urban Legend""^^xsd:string .
  
  FILTER (?actor = ?elba)
}
```",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
706,18,val,Give me the birthplace of the actor of Akaler Shandhaney and birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorBirthplace ?awardeeBirthplace WHERE {
  # Birthplace of Soumitra Chatterjee (Actor in ""Akaler Shandhaney"")
  dbr:Soumitra_Chatterjee dbo:birthPlace ?actorBirthplace .

  # Birthplace of Ustad Bismillah Khan (Sangeet Natak Akademi Fellowship awardee)
  dbr:Bismillah_Khan dbo:birthPlace ?awardeeBirthplace .
}
```",5,5,6,3,2,3,2,20,1,5,1,0.16666666666666666,0.5,0.25
198,65,val,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor and force of the awardee of the award of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Henry Clay Lewis' birthplace
  VALUES (?henryClayLewis) { dbr:Henry_Clay_Lewis }
  
  ?henryClayLewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Medal of Honor awardee related to Quincy Adams Gillmore
  VALUES (?quincyAdamsGillmore) { dbr:Quincy_Adams_Gillmore }
  
  ?gillmoreForce dbp:commandedBy ?quincyAdamsGillmore .
  ?medalAwardee dbo:award ?medalOfHonor ;
                dbo:servedIn ?gillmoreForce .
  ?medalOfHonor rdfs:label ""Medal of Honor""@en .

  # War associated with the Medal of Honor awardee
  ?medalAwardee dbo:participatedInWar ?war .

  # Find the entity that matches both conditions
  FILTER (?birthPlace = ?entity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
68,26,val,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maximilian I and his children
  dbr:Maximilian_I,_Holy_Roman_Emperor dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # Dorothea of Denmark's parent (father)
  dbr:Dorothea_of_Cleves dbo:parent ?dorotheasParent .
  
  # Philip I of Castile and his child
  dbr:Philip_I,_King_of_Castile dbo:child ?philipChild .

  # Conditions to match the relationships
  FILTER(?child = dbr:Philip_the_Handsome)
  OPTIONAL { ?dorotheasParent rdfs:label ""John III, Duke of Cleves""@en }
  OPTIONAL { ?philipChild rdfs:label ""Charles V, Holy Roman Emperor""@en }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
687,62,val,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Marty Pollio's birthday
  dbr:Marty_Polio dbo:birthday ?birthday .

  # Find a person born on the same day as Marty Pollio who is an athlete and a player
  ?person dbo:birthdayYear ?year .
  ?person dbo:birthDate ?date .
  FILTER (YEAR(?date) = YEAR(LANG(?birthday)) && MONTH(?date) = MONTH(LANG(?birthday)) && DAY(?date) = DAY(LANG(?birthday)))
  ?person a dbo:Athlete .
  ?person dbo:plays ?sport .

  # Find an actor of a film by Manuel Huerga who is also a soccer player and athlete
  ?film dbo:director dbr:Manuel_Huerga .
  ?actor dbo:actedIn ?film .
  ?actor a dbo:SoccerPlayer .
  ?actor a dbo:Athlete .

  # Find the team of Pablo Aimar
  dbr:Pablo_Aimar dbo:team ?team .

  # Ensure the person, actor, and team are related as per the question's logic
  FILTER (?person = ?actor)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
531,62,val,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?militaryConflict ?residenceTenant ?miguelMauraOffice
WHERE {
  # Manuel Pinto da Costa's office as a commander in a military conflict
  ?pinto dbo:office ?commanderOffice .
  ?commanderOffice dbo:fieldOfActivity dbr:Military_conflict .
  
  # Leader of the 2003 Madrid City Council election and their residence tenant
  ?electionEvent dbo:leader ?madridLeader .
  ?madridLeader dbo:residence ?residence .
  ?residenceTenant dbo:tenant ?madridLeader .

  # Miguel Maura's office
  dbr:Miguel_Maura dbo:office ?miguelMauraOffice .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
347,66,val,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maria Anna of Bavaria and her children
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:spouse ?husband .

  ?husband dbo:child ?child .
  
  # Child is royalty
  ?child dbo:royalTitle ?title .

  # Child was a commander in a war involving the 2nd Dragoon Regiment (France)
  ?war dbo:commander ?child ;
       dbo:participatingUnit dbr:2nd_Dragoon_Regiment_(France) .
  
  # War is a societal event and depicted as an event and television show
  ?war rdf:type dbo:SocietalEvent, dbo:Event, dbo:TelevisionShow .

  # Father of the child of Ferdinand III, Holy Roman Emperor
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?grandChild .
  ?father dbo:child ?grandChild .
  
  # The commander is also the father of the grandchild's parent
  FILTER(?child = ?father)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
58,18,val,Give me the producer of the movie with  and spouse of the person born as the birth name of Linda Bruckheimer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  # Step 1: Find Linda Bruckheimer's birth name
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer"" .
  
  ?linda dbo:birthName ?birthName .

  # Step 2: Find the person born with that birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName ;
          dbo:spouse ?spouse .

  # Step 3: Get the spouse's details
  OPTIONAL { ?spouse foaf:name ?spouseName . }

  # Step 4: Find movies produced by that spouse and their producer
  ?movie dbo:producer ?spouse .
  
  ?movie dbo:productionCompany ?company .
  
  ?company dbo:founder ?producer .

}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
198,64,val,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  ?person dbo:force dbr:Quincy_Adams_Gillmore .
  ?person dbo:award ?award .
  ?award dbo:awardingBody dbr:United_States_Congress .

  ?person dbp:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
103,66,val,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?profession ?show
WHERE {
    # The Shadow's alter ego
    dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
    
    # Shatrughan Sinha's profession
    dbr:Shatrughan_Sinha dbo:occupation ?profession .
    
    # Richard E. Grant and a common project (TV show)
    OPTIONAL {
        ?show dbo:starring dbr:Richard_E._Grant ;
              dbo:starring dbr:Helena_Bonham_Carter .
    }
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
628,65,val,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v6 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find a person born in Florida
  ?person dbo:birthPlace dbr:Florida .
  
  # Ensure the person is a musical artist
  ?person dbo:occupation dbr:Musical_artist .

  # Find a connection to Puerto Rico (region and state)
  ?puertoRico dbo:country dbr:Puerto_Rico ;
              rdf:type dbo:Region ;
              dbo:state dbr:Puerto_Rico .
  
  # Coro de la Pontificia Universidad Católica de Puerto Rico is associated with Puerto Rico
  ?coro dbo:associatedWith ?puertoRico .

  # Find a band member of an artist associated with Bobby Shmurda
  ?artist dbo:associatedBandMember ?person ;
          dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
80,66,val,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v6 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movieActor ?albumActor ?seriesProfessional
WHERE {
  # Actor of the movie with a placeholder title
  ?movie rdfs:label ""MovieTitle""@en .
  ?movie dbo:starring ?movieActor .

  # Album associated with ""What You Know (T.I. song)""
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  
  # Actor related to the album
  ?album dbo:performer ?albumArtist .
  OPTIONAL { ?albumArtist dbo:starring ?albumActor . }

  # Professional in the alter ego of a series with a placeholder title
  ?series rdfs:label ""SeriesTitle""@en .
  ?series dbo:character ?alterEgo .
  ?alterEgo dbo:profession ?professional .
  BIND(?professional AS ?seriesProfessional)
}
```

This query assumes placeholders for movie and series titles. You would replace `MovieTitle` and `SeriesTitle` with actual titles to get meaningful results.",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
295,18,val,"Give me the native of the birth place of Victor Saville and writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  # Victor Saville's birthplace
  dbr:Victor_Saville dbo:nativePlace ?birthplace .

  # Native of the birthplace
  ?person dbo:nativePlace ?birthplace .
  
  # Writer of ""The True Self""
  ?writer dbo:work ?musicalWork .
  ?musicalWork rdfs:label ""The True Self""@en .
  
  # Artist Steven Kapur's true self
  dbr:Steven_Kapur dbo:trueSelf ?writer .

  # Ensure the person is the writer of the musical work
  FILTER (?person = ?writer)

  # Return the native
  BIND(?person AS ?native)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
258,18,val,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?university ?establishmentDate WHERE {
  # Luiza Erundina's alma mater
  OPTIONAL {
    ?luiza dbo:almaMater ?university .
    FILTER (str(?luiza) = ""Luiza_Erundina"")
  }
  
  # Eleonora Menicucci de Oliveira's alma mater
  OPTIONAL {
    ?eleonora dbo:almaMater ?university .
    FILTER (str(?eleonora) = ""Eleonora_Menicucci_de_Oliveira"")
  }

  # Ensure the university is an organization and educational institution
  ?university a dbo:EducationalInstitution ;
              a dbo:Organization .

  # Get the establishment date of the university
  OPTIONAL { ?university dbo:foundingDate ?establishmentDate . }
}
ORDER BY ?university",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
737,63,val,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChildOfDukePhilipp ?royalChildOfArchdukeCharlesLouis ?predecessor

WHERE {
  # Duke Philipp of Württemberg's child's child
  ?philipp a dbo:Person ;
           dbo:spouse ?spouse1 .
  ?child1 dbo:parent ?philipp ;
          dbo:spouse ?spouse2 .
  ?childOfChildOfDukePhilipp dbo:parent ?child1 .

  # Archduke Charles Louis of Austria's child's child who is royalty
  ?charlesLouis a dbo:Person ;
                dbo:spouse ?spouse3 .
  ?child3 dbo:parent ?charlesLouis ;
          dbo:spouse ?spouse4 .
  ?royalChildOfArchdukeCharlesLouis dbo:parent ?child3 ;
                                     a dbo:Royalty .

  # Archduchess Helena of Austria's spouse and their child who is royalty
  ?helena a dbo:Person ;
           dbo:spouse ?spouse5 .
  ?child5 dbo:parent ?spouse5 ;
          dbo:spouse ?spouse6 .
  ?royalChildOfSpouseHelena dbo:parent ?child5 ;
                            a dbo:Royalty .

  # Predecessor of the royal child of Archduchess Helena's spouse
  ?predecessor dbo:successor ?royalChildOfSpouseHelena .
}
```",7,9,8,3,3,3,3,71,1,7430,0,0.00013457139012245997,1.0,0.0002691065662002153
89,64,val,"Give me the child of the parent of the child of Minye Kyawswa and spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?result WHERE {
  # Step 1: Find Minye Kyawswa's child
  ?minyeKyawswaChild dbo:childOf ?minyeKyawswa .
  VALUES ?minyeKyawswa { <http://dbpedia.org/resource/Minye_Kyawswa> } .

  # Step 2: Find the parent of Minye Kyawswa's child
  ?parent dbo:child ?minyeKyawswaChild .

  # Step 3: Find Saw Shwe Khet's spouse
  ?sawShweKhet dbo:spouse ?spouse .
  VALUES ?sawShweKhet { <http://dbpedia.org/resource/Saw_Shwe_Khet> } .

  # Step 4: Find the predecessor of Saw Min Phyu's child
  ?sawMinPhyu dbo:child ?sawMinPhyuChild .
  ?predecessor dbo:successor ?sawMinPhyuChild .
  VALUES ?sawMinPhyu { <http://dbpedia.org/resource/Saw_Min_Phu> } .

  # Step 5: Find the spouse of Saw Min Phyu's child
  ?spouseOfSawMinPhyuChild dbo:spouse ?sawMinPhyuChild .

  # Final step: Combine conditions to find the result
  ?result dbo:child ?parent .
  ?result dbo:spouse ?spouse .
  ?result rdfs:label ?label .
  FILTER (CONTAINS(LCASE(?label), ""royalty""))
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,64,val,"Give me the father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Eleonore of Austria and her father
  dbr:Eleonore_of_Austria_queen_of_Poland dbo:parent ?father .

  # Father's child who is royalty and related to Maria Anna of Bavaria (born 1574)
  ?child dbo:parent ?father .
  ?child dbo:spouse|dbo:partner* dbr:Maria_Anna_of_Bavaria_(1574-1616) .
  
  # Connect to societal event, event, and television show related to the Algerian War
  OPTIONAL {
    ?event dbo:relatedEvent ?algerianWar .
    ?televisionShow dbo:subject ?algerianWar .
    FILTER EXISTS { ?societyEvent dbo:relatedEvent ?algerianWar }
  }

  # Ensure the child is royalty
  ?child a dbo:Monarch .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
782,62,val,"Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurranArtist ?kimWilsonBandName ?personBorn1945Band
WHERE {
  # Find the associated musical artist of Nick Curran
  OPTIONAL {
    dbr:Nick_Curran dbo:musicalArtist ?nickCurranArtist .
  }

  # Identify the real name of the band of Kim Wilson
  OPTIONAL {
    dbr:Kim_Wilson dbo:band ?kimWilsonBand .
    ?kimWilsonBand rdfs:label ?kimWilsonBandName .
  }

  # Determine the band of a person born on 1945-03-30 who is also a musical artist
  OPTIONAL {
    ?person dbp:birthday ""1945-03-30""^^xsd:date ;
            dbo:musicalArtist ?band .
    ?band rdfs:label ?personBorn1945Band .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
816,63,val,"Give me the parent of the professional in Photographer and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentPhotographer ?childAllanArbusParent ?actorMovie ?decedentLA
WHERE {
  # Parent of the professional in Photographer
  ?photographer dbo:occupation dbr:Photography.
  ?photographer dbo:parent ?parentPhotographer.

  # Child of Allan Arbus and their parent
  dbr:Allan_Arbus dbo:child ?childAllanArbus.
  ?childAllanArbus dbo:parent ?childAllanArbusParent.

  # Actor of the movie that is a work
  ?actor dbo:profession dbr:Actor.
  ?actor dbo:actedIn ?movie.
  ?movie rdf:type dbo:Film.

  # Person decedent at Los Angeles
  ?decedent dbp:deathPlace dbr:Los_Angeles.
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,63,val,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfPolitician ?parentOfAwardee WHERE {
  # Step 1: Find children of Frederick Stanley, 16th Earl of Derby
  ?child dbo:spouse* <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  
  # Step 2: Identify the child who is a politician
  ?politician dbp:occupation ""Politician""@en .
  FILTER(?child = ?politician)
  
  # Parent of the politician (Frederick Stanley, 16th Earl of Derby)
  ?parentOfPolitician dbo:spouse* ?politician .

  # Step 3: Find the award associated with Rodney Lees
  ?award dbo:recipient <http://dbpedia.org/resource/Rodney_Lees> .
  
  # Awardee of the award
  ?awardee dbo:awardReceived ?award .
  
  # Parent of the awardee
  ?parentOfAwardee dbo:spouse* ?awardee .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,62,val,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Identify Suggs by his birth name and profession
  ?suggs a dbo:Writer ;
         foaf:name ""Suggs"" ;
         dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  
  # Find the work ""The Live Anthology""
  ?work dbo:title ""The Live Anthology"" ;
        dbo:artist ?suggs .

  # Identify Tupac Shakur by his birth name
  ?tupac a dbo:MusicArtist ;
         foaf:name ""Tupac Shakur"" ;
         dbo:birthName ""Tupac Amaru Shakur"" .
  
  # Find associated artists of the work related to Suggs and Tupac
  ?work dbo:associatedMusicalArtist ?associatedArtist .

  FILTER (?associatedArtist != ?suggs && ?associatedArtist != ?tupac)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
595,62,val,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://dbpedia.org/property/author> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Identify Bill Clinton as Hillary Clinton's spouse and a politician
  ?billClinton a dbo:Politician ;
               dbo:spouse dbr:Hillary_Clinton ;
               dbo:officeHolderOf dbr:United_States_President .

  # Find books authored by Bill Clinton
  ?book dbo:author ?billClinton ;
        a dbo:Book .

  # Identify Hillary Clinton as an author of a book
  ?hclinton a dbo:Author ;
            dbo:writtenWork ?work ;
            rdfs:label ""Hillary Clinton""@en .

  # Ensure the work is a book and written work
  ?work a dbo:Book, dbo:WrittenWork .

  # Bill Clinton's role in Third Taiwan Strait Crisis
  ?billClinton dbo:commanderIn dbr:Third_Taiwan_Strait_Crisis .
  
  # Return the author of the book
  BIND(?billClinton AS ?author)
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
943,63,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Step 1: Identify Na'od's father
  ?naod dbo:parent ?naodsFather .
  
  # Step 2: Find the grandfather of Na'od who is a royalty and an office holder
  ?naodsFather dbo:parent ?grandfather .
  ?grandfather rdf:type dbo:Monarch ;
               dbo:officeHolder ?office .

  # Step 3: Identify the commander in Siege of Mukha and their parent
  ?commander dbp:participatedIn <http://dbpedia.org/resource/Siege_of_Mukha> .
  ?commander dbo:parent ?royalParent .
  ?royalParent rdf:type dbo:Monarch .

  # Step 4: Reference to the alter ego of The Shadow
  OPTIONAL {
    ?shadowAlterEgo dbp:alterEgo ""The Shadow"" .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
39,66,val,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Find Bob Thompson's birth name
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson"" ;
       dbp:birthName ?birthName .

  # Find Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion"" ;
       dbo:profession ?profession .

  # Find The Shadow's alter ego
  ?shadow a dbo:Person ;
          foaf:name ""The Shadow"" ;
          dbp:alterEgo ?alterEgo .

  # Find the person who matches all criteria
  ?person a dbo:MusicalArtist ;
          foaf:birthday ?birthday ;
          foaf:name ?name ;
          dbp:birthName ?birthName ;
          dbo:profession ?profession ;
          dbp:alterEgo ?alterEgo .

  # Get the band of this person
  ?person dbo:bandMemberOf ?band .
}
```",7,8,8,3,3,3,3,71,0,0,4,0,0.0,0
23,25,val,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.","SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v4 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES (?person ?label) {
    (dbr:Roy_Leonardo_Barreras_Montealegre ""Roy Leonardo Barreras Montealegre"")
    (dbr:Daniel_Elahi_Galán ""Daniel Elahi Galán"")
    (dbr:Gustavo_Petro ""Gustavo Petro"")
  }
  
  ?person dbo:birthPlace ?place .
  OPTIONAL { ?person dbo:party ?party . }
}
```",5,6,6,2,3,2,3,28,1,7,0,0.125,1.0,0.2222222222222222
159,64,val,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?event WHERE {
  # George Ducas as a commander in an event involving Michał Kazimierz Pac
  ?ducas dbo:positionHeld ?commanderRole .
  ?ducas dbr:George_Ducas .

  # Event involving Michał Kazimierz Pac
  ?event dbo:participant ?ducas ;
         dbo:participant dbr:Michał_Kazimierz_Pac .

  # Successor of George Ducas in the same role or event
  ?successor dbo:succeededBy ?ducas .
  
  # The successor is a politician and office holder
  ?successor dbo:occupation dbr:Politician ;
             dbo:officeHolder true .

  # Event related to Battle of Vienna
  ?event rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""battle of vienna""))
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
375,18,val,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find the first person
  ?person a dbo:Artist ;
          a dbo:MusicalArtist ;
          dbo:nationality dbr:London ;
          dbo:author ?work .
  
  ?work a dbo:Film ;
        a dbo:TelevisionShow .

  # Find the second person who is deceased on 2020-06-18
  ?deceasedPerson a dbo:Artist ;
                  a dbo:MusicalArtist ;
                  dbp:dateOfDeath ""2020-06-18""^^xsd:date .
  
  # Get the parent of the first person
  ?person dbo:parent ?parent .
}
```",5,11,6,3,2,3,2,20,0,0,1,0,0.0,0
246,18,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfCommonParent WHERE {
  # Princess Aisha bint Faisal's royal parent
  ?aisha a dbo:Person ;
         dbp:spouse|dbp:child ?royalAishaParent .
  
  # Prince Faisal bin Hussein's royal child
  ?faisal a dbo:Person ;
          dbp:child ?royalFaisalChild .

  # Common parent of the two royals identified above
  ?commonParent a dbo:Person ;
                (dbp:spouse|dbp:parent) ?royalAishaParent, 
                (dbp:spouse|dbp:parent) ?royalFaisalChild .

  # Parent of this common parent
  ?commonParent (dbp:spouse|dbp:child) ?parentOfCommonParent .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
103,62,val,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v3 <http://dbpedia.org/property/starring> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Richard E. Grant and his acting roles
  dbr:Richard_E._Grant a dbo:Actor .
  
  # Find movies that are also television shows featuring Richard E. Grant
  ?movie dbo:starring dbr:Richard_E._Grant ;
         a dbo:Film, dbo:TelevisionShow .

  # Actor who is also a politician and acted in ""Ab Kya Hoga""
  ?actor a dbo:Actor ;
         dbo:profession dbr:Politician ;
         dbo:actedIn dbr:Ab_Kya_Hoga .
  
  # The actor we are looking for should be in the same movie/TV show as Richard E. Grant
  ?movie dbo:starring ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,13,0,0.0,0
557,64,val,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerTomSawyer ?actorHighSocietyBlues ?claimToFame ?fictionalCharacter

WHERE {
  # Producer of The Adventures of Tom Sawyer (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Actor in High Society Blues and their claim to fame
  ?actorHighSocietyBlues dbo:actedIn dbr:High_Society_Blues ;
                        dbo:claimToFame ?claimToFame .
  
  # Fictional character associated with Kent Allard
  ?fictionalCharacter dbo:reference dbr:Kent_Allard .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,65,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist ?band ?realName WHERE {
  # Find the person born as Nicholas Michael Curran who is a musical artist
  ?person dbo:birthName ""Nicholas Michael Curran""@en .
  ?person dbo:occupation dbr:Musical_artist .

  # Get the associated band of this person
  ?person dbo:bandMember ?band .

  # Find the band member of The Fabulous Thunderbirds born on 1945-03-30
  ?member dbo:birthDate ""1945-03-30""^^xsd:date .
  ?member dbo:bandMember dbr:The_Fabulous_Thunderbirds .
  
  # Get the real name of this band member
  ?member foaf:name ?realName .

  # Link the two parts by ensuring they refer to the same person
  FILTER (?person = ?member)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
87,26,val,"Give me the spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn and actor of the movie, that is a work and a film, with Iliza Shlesinger.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor1 ?actor2 WHERE {
  # Movie with Ellen Kuras and Audrey Hepburn
  ?movie1 dbo:starring dbr:Audrey_Hepburn ;
          dbo:starring dbr:Ellen_Kuras .
  
  # Actor from the movie with Ellen Kuras and Audrey Hepburn
  ?movie1 dbo:starring ?actor1 .

  FILTER(?actor1 != dbr:Audrey_Hepburn && ?actor1 != dbr:Ellen_Kuras)

  # Movie with Iliza Shlesinger
  ?movie2 dbo:starring dbr:Iliza_Shlesinger .
  
  # Actor from the movie with Iliza Shlesinger
  ?movie2 dbo:starring ?actor2 .

  FILTER(?actor2 != dbr:Iliza_Shlesinger)
}
```",5,9,6,2,3,2,3,28,0,0,1,0,0.0,0
225,18,val,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards and entity in the region of the time zone in Kiyosu.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:birthPlace ?birthPlace .

  # Ensure the person is associated with a region in Kiyosu's time zone
  OPTIONAL { 
    ?region dbp:timeZone ""Asia/Tokyo"" .
    ?person dbo:location ?region .
  }
}
```

This query does the following:
- Filters individuals (`?person`) who are Japanese and have received the Anita Borg Institute Women of Vision Award.
- Retrieves their birthplace (`?birthPlace`).
- Optionally checks if they are associated with a region in the ""Asia/Tokyo"" time zone, which includes Kiyosu.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
943,62,val,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Commander in Siege of Mukha
  ?commander dbo:wikiPageRedirects dbr:Amda_Seyon_I .
  
  # Parent that is Royalty
  ?parent dbo:spouse ?commander ;
          a dbo:Monarch .

  # Child of the Parent (Royalty)
  ?child dbo:father ?parent ;
         dbo:mother ?mother .

  # Father of Baeda Maryam I
  ?child dbo:son dbr:Baeda_Maryam_I .

  # Alter Ego of Lamont Cranston is The Shadow
  FILTER(?child = dbr:The_Shadow)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
756,63,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor season of 2006–07 VfL Bochum
  ?successorSeason a dbo:SoccerClubSeason ;
                   dbo:succeeds dbr:2006%E2%80%9307_VfL_Bochum_season .

  # Thomas Letsch's team and seasons
  ?letschTeam a dbo:SoccerClub ;
              dbo:manager dbr:Thomas_Letsch .
  ?letschSeason a dbo:SoccerClubSeason ;
                dbo:sportsTeam ?letschTeam .

  # Theodor Heuss's native country
  ?heussCountry dbo:nativeCitizenship dbr:Theodor_Heuss .

  # Manager of the player who is associated with these criteria
  ?player a dbo:SportsClub ;
          dbo:memberOf ?successorSeason .
  ?manager a dbo:SoccerManager ;
           dbo:managedTeam ?letschTeam ;
           dbo:nativeCountry ?heussCountry .
}
```",7,17,8,3,3,3,3,71,0,0,1,0,0.0,0
816,64,val,"Give me the parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentAmyArbus ?childSpouseMariclareCostello ?actorMovie

WHERE {
  # Parent of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?parentAmyArbus .
  }

  # Spouse and child of Mariclare Costello
  OPTIONAL {
    dbr:Mariclare_Costello dbo:spouse ?spouseMariclareCostello .
    ?spouseMariclareCostello dbo:child ?childSpouseMariclareCostello .
  }

  # Actor of a movie with a decedent at Los Angeles
  OPTIONAL {
    ?movie dbo:actor ?actorMovie ;
           a dbo:Film .
    ?decedent dbo:deathPlace dbr:Los_Angeles ;
              dbo:film ?movie .
  }
}
```",7,8,8,3,3,3,3,71,1,3,0,0.25,1.0,0.4
687,64,val,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInTeam WHERE {
  # Step 1: Find Sergio Agüero's team
  ?sergioAgüero a dbo:SoccerPlayer ;
                foaf:name ""Sergio Agüero"" ;
                dbo:team ?agüeroTeam .

  # Step 2: Find the person born on Marcelo Sarmiento's birthday who is both a soccer player and manager
  ?marceloSarmientoBirthDate dbp:birthday ?birthdayMarceloSarmiento .
  ?person1 dbp:birthday ?birthdayMarceloSarmiento ;
           dbo:soccerPlayer true ;
           dbo:manager true .

  # Step 3: Determine the team of this person
  ?person1 dbo:team ?personTeam .

  # Step 4: Identify the athlete born on Marty Pollio's birthday
  ?martyPollioBirthDate dbp:birthday ?birthdayMartyPollio .
  ?athlete dbp:birthday ?birthdayMartyPollio ;
           a dbo:Athlete .

  # Step 5: Find the player in the team identified in step 3 that matches the athlete from step 4
  ?playerInTeam dbo:team ?personTeam ;
                foaf:name ?athleteName .
  
  FILTER (?athleteName = ?athlete)
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
737,64,val,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:childOf dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Grandchild who is royalty
  ?grandchild dbo:parent ?albrechtChild ;
              a dbo:Monarch .

  # Parent of Archduchess Margarete Sophie of Austria
  ?margareteParent dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Predecessor in lineage or title
  ?predecessor dbo:succeededBy ?grandchild ;
               dbo:parent ?margareteParent .

  # Spouse of Archduchess Helena of Austria and their child who is royalty
  ?helenaSpouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?helenaChild dbo:parent ?helenaSpouse ;
               a dbo:Monarch .

  # Find the individual that matches all conditions
  ?individual rdf:type dbo:Person ;
              rdfs:label ?predecessorLabel ;
              rdfs:label ?grandchildLabel ;
              rdfs:label ?helenaChildLabel .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,63,val,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v6 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v4 <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v6 <http://dbpedia.org/property/office> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?leaderOffice ?tenantResidence
WHERE {
  # Office of the Commander in Central African Republic Civil War
  ?war dbr:Central_African_Republic_Civil_War .
  ?war dbo:commander ?commander .
  ?commander dbo:office ?commanderOffice .

  # Office of the Leader of Conservative Republican Party (Spain)
  ?party dbr:Conservative_and_Royalist_Party_of_Spain .
  ?party dbo:leader ?leader .
  ?leader dbo:office ?leaderOffice .

  # Tenant of the Residence of the leader from the 2003 Madrid City Council election
  ?election dbr:Madrid_City_Council_election,_2003 .
  ?election dbo:mayor ?mayor .
  ?mayor dbo:residence ?residence .
  ?residence dbo:tenant ?tenantResidence .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
668,66,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Find Shatta Wale (Elorm Kabu Amenyah)
  VALUES ?shattaWale { dbr:Shatta_Wale }
  
  # Get the musical artist associated with Shatta Wale
  ?shattaWale dbo:musicalArtist ?artist1 .
  
  # Find an artist from Central Region, Ghana
  ?centralRegionArtist dbo:nationality dbr:Ghana ;
                      dbo:birthPlace ?place .
  
  FILTER(CONTAINS(LCASE(?place), ""central region""))
  
  # Get the musical artist associated with this person
  ?centralRegionArtist dbo:musicalArtist ?artist2 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
398,18,val,"Give me the player in the writer of The First Glove and figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?nickname WHERE {
  # Find Denis Kolodin and his work ""The First Glove""
  ?kolodin a dbo:Writer ;
           foaf:name ""Denis Kolodin"" .
  
  ?work dbo:author ?kolodin ;
        rdfs:label ""The First Glove""@en .

  # Find the player who wrote ""The First Glove""
  ?player dbo:worksFor ?work ;
          foaf:name ?name .

  # Find the nickname of the player that is a soccer club
  ?nickname dbo:nickname ?player ;
            dbo:sportTeam dbr:Soccer_Club .
  
  FILTER (lang(?name) = ""en"")
}
```",5,6,6,3,2,3,2,20,0,0,2,0,0.0,0
668,65,val,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Elorm Kabu Amenyah (Joey B)
  VALUES ?joeyB { dbr:Elorm_Kabu_Amenyah }
  
  # Ensure Joey B is a musical artist
  ?joeyB dbo:profession dbr:Musical_artist .

  # Find the writer of ""The Live Anthology""
  ?anthology dbo:author ?writer .
  FILTER (str(?anthology) = ""The_Live_Anthology"")

  # Ensure the writer is also a musical artist
  ?writer dbo:profession dbr:Musical_artist .

  # Get associated musical artists for Joey B
  ?joeyB dbo:associatedMusicalArtist ?artist1 .
  
  # Get associated musical artists for the writer of ""The Live Anthology""
  ?writer dbo:associatedMusicalArtist ?artist2 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
386,26,val,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeWar ?baggovutWar ?birthPlaceEntity
WHERE {
  # Awardee of the Golden Sword for Bravery and their war
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:participatedInMilitaryConflict ?awardeeWar .

  # Karl Gustav von Baggovut and his war
  dbr:Karl_Gustav_von_Baggovut dbo:participatedInMilitaryConflict ?baggovutWar .

  # Birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  # Entity in the birth place
  ?birthPlaceEntity dbo:location ?birthPlace .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
80,62,val,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book) and professional in .","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/album> ?v6 . ?v3 <http://dbpedia.org/property/starring> ?v4 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?profession WHERE {
  # Find T.I.'s album that includes a song and musical work
  ?album dbo:artist dbr:T.I. ;
         dbo:genre ?genre .
  
  # Identify the actor associated with this album
  ?album dbo:performer ?actor .

  # Find a movie featuring this actor and the author of ""Smartbomb""
  ?movie dbo:starring ?actor, ?author .
  
  # Ensure the author is the writer of ""Smartbomb""
  ?author dbo:wikiPageWikiLink dbr:Smartbomb ;
          rdf:type dbo:Writer .

  # Get the profession of the author
  ?author dbo:profession ?profession .
}",7,9,8,3,3,3,3,71,0,0,4,0,0.0,0
203,62,val,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v4 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?war1 ?commander1 ?war2 ?figureTripleX ?war3
WHERE {
  # Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryConflicts ?battleMilitaryForce .

  # Military conflict/event involving William Bayne
  ?bayneEvent dbo:reference ?williamBayne .
  ?williamBayne rdfs:label ""William Bayne""@en .
  ?bayneEvent dbo:commander ?commander1 .
  ?bayneEvent dbo:militaryConflicts ?war1 .

  # War involving ""The Triple X's""
  ?tripleXEvent dbo:reference ?figureTripleX .
  ?figureTripleX rdfs:label ""The Triple X""@en .
  ?tripleXEvent dbo:militaryConflicts ?war3 .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
89,63,val,"Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Step 1: Saw Shwe Khet's child
    ?sawShweKhet a dbo:Monarch ;
                 dbo:child ?childOfSawShweKhet .

    # Step 2: Minye Kyawswa's grandchild
    ?minyeKyawswa a dbo:Monarch ;
                  dbo:child ?parentOfGrandchild .
    ?parentOfGrandchild dbo:child ?grandchildOfMinyeKyawswa .

    # Step 3: Myat Hpone Pyo's spouse of the father
    ?myatHponePyo a dbo:Person ;
                  dbo:father ?fatherOfMyatHponePyo .
    ?fatherOfMyatHponePyo dbo:spouse ?spouseOfFather .

    # Find the royalty from step 1 and step 3
    FILTER (?childOfSawShweKhet = ?grandchildOfMinyeKyawswa && ?grandchildOfMinyeKyawswa = ?spouseOfFather)

    # Step 4: Predecessor of the royalty
    ?predecessor a dbo:Monarch ;
                 dbo:successor ?royalty .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
140,18,val,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Pickett's Charge was part of the Battle of Gettysburg, which is an event in the American Civil War
  dbr:Picketts_Charge dbo:partOf dbr:Battle_of_Gettysburg .
  dbr:Battle_of_Gettysburg dbo:war dbr:American_Civil_War .

  # Find commanders involved in the American Civil War
  ?commander dbo:commandedMilitaryForce ?militaryForce ;
             dbo:occupation ""Commander"" ;
             dbo:participatedInEvent dbr:American_Civil_War .

  # Find political parties and their members in Westport, Connecticut
  ?party a dbo:PoliticalParty ;
         dbo:location dbr:Westport,_Connecticut .
  
  ?member dbo:memberOf ?party ;
          dbo:residence dbr:Westport,_Connecticut .

  # Link the commander to a party member
  ?commander dbo:isMemberOf ?party .
  ?commander = ?member .
}
```",5,8,6,3,2,3,2,20,0,0,4,0,0.0,0
353,62,val,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?father
WHERE {
    # Step 1: Roger II of Sicily and his children who are royalty
    dbr:Roger_II_of_Sicily dbo:spouse ?parent .
    
    ?child dbo:spouse|dbo:childOf ?parent ;
           a dbo:Monarch .

    # Step 2: Parent of Roger II's child (who is royalty)
    ?grandparent dbo:child ?child .

    # Step 3: Child of this parent (who is royalty)
    ?grandchild dbo:spouse|dbo:childOf ?child ;
               a dbo:Monarch .

    # Step 4: Reference to William I and Elvira of Castile
    dbr:William_I_of_Sicily dbo:spouse dbr:Elvira_of_Castile .
    
    ?referenceChild dbo:spouse|dbo:childOf dbr:William_I_of_Sicily ;
                    a dbo:Monarch .

    # Step 5: Father of the grandchild identified in step 3
    ?father dbo:child ?grandchild .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
293,62,val,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Nat Levine's films
  ?film dbo:producer dbr:Nat_Levine .
  
  # Harriette Arlene Lake's birth name and connections
  ?person rdfs:label ""Harriette Arlene Lake""@en ;
          foaf:birthName ?birthName .

  # Landmark at elevation 20.1168
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
            dbo:rulingParty ?party .
  
  # Actor of the film
  ?film dbo:actor ?actor .
  
  # Spouse of the actor
  ?actor foaf:mbox ?email ; # Assuming actors have an email for identification
         dbo:spouse ?spouse .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
756,66,val,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find VfL Bochum player in the 2007-08 season
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:sportTeamSeason dbr:2007%E2%80%9308_VfL_Bochum_season .

  # Identify manager of that player who is also a sports club and organization
  ?manager dbo:manages ?player ;
           a dbo:SoccerClub, dbo:Organization .

  # Find the country where Theodor Heuss was native
  dbr:Theodor_Heuss dbo:nativeCountry ?country .

  # Identify team managed by this person during a specific season
  ?teamSeason dbo:manager ?manager ;
              a dbo:SoccerClubSeason, dbo:SportsTeamSeason, dbo:SportsSeason .
  
  # Find the sports manager born on 1968-08-26
  ?person dbo:dateOfBirth ""1968-08-26""^^xsd:date ;
          a dbo:SportsManager .

  FILTER (?manager = ?person)
}
```",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
293,65,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?result <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Nat Levine's films and actors
  ?film dbo:producer dbr:Nat_Levine .
  ?film dbo:actor ?actor .

  # Actor's spouse
  ?actor dbp:spouse ?spouse .

  # Ruling party member in Central, Louisiana
  ?partyMember a dbo:Person ;
              dbo:residence dbr:Central,_Louisiana ;
              dbo:memberOfParty ?rulingParty .
  
  # Assuming the ruling party is the Democratic Party for this example
  ?rulingParty rdfs:label ""Democratic Party""@en .

  # Matching conditions
  ?spouse dbp:name ?birthName .
  ?person = ?partyMember .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
668,64,val,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 WHERE {
  # Lesane Parish Crooks (Tupac Shakur)
  dbr:Tupac_Shakur dbo:birthName ""Lesane Parish Crooks"" .
  dbr:Tupac_Shakur dbo:musicalArtist ?artist1 .

  # Amakye Dede
  dbr:Amakye_Dede dbo:nativeCountry dbr:Ghana ;
                  dbo:regionOfBirth dbr:Central_Region_(Ghana) ;
                  dbo:profession dbr:Musician .
  dbr:Amakye_Dede dbo:musicalArtist ?artist2 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
871,62,val,"Give me the father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father
WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Politician ;
          foaf:name ""Arthur Stanley"" ;
          dbo:parent ?father .

  # Rodney Lees' award awardee
  ?award dbo:recipient ?awardee .
  ?lees dbr:Rodney_Lees ;
        dbo:associatedWith ?award .

  # Edward Stanley, 17th Earl of Derby's child who is a politician and office holder
  ?edward a dbo:Politician ;
          foaf:name ""Edward Stanley, 17th Earl of Derby"" .
  ?child dbo:parent ?edward ;
         a dbo:Politician ;
         dbo:officeHolder true .

  # Linking the father to the awardee and child's parent
  ?father = ?awardee .
  ?father = ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
392,9,val,Give me the member of the figure known as Der Blau and reference to the designer of Aston Martin AMR1.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?designer WHERE {
  # Query for members of ""Der Blau""
  OPTIONAL {
    ?derBlau dbo:member ?member .
    FILTER(STRSTARTS(STR(?derBlau), STR(dbr:Der_Blau)))
  }
  
  # Query for the designer of Aston Martin AMR1
  OPTIONAL {
    dbr:Aston_Martin_AMR1 dbo:designer ?designer .
  }
}
```",4,4,5,2,2,2,2,9,0,0,6,0,0.0,0
628,66,val,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v6 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Find a band member who is also a musical artist associated with Bobby Shmurda
  ?bandMember dbo:associatedBandMemberOf dbr:Bobby_Shmurda ;
              a dbo:MusicalArtist ;
              dbp:nativePlace ?nativePlace .

  # The native place should be an award-winning region, which is both a state and a settlement in America
  ?nativePlace a dbo:State , dbo:Settlement ;
               dbo:awardWon ?award .
  
  # Ensure the person is American
  ?bandMember dbp:nationality dbr:United_States .

  # Return the band member who fits all criteria
  BIND(?bandMember AS ?person)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
687,63,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_manager .

  # Find athlete born on Marty Pollio's birthday
  ?athlete dbo:birthday ?martyBirthday .
  ?athlete dbo:sport dbr:Athletics .
  
  # Get Marty Pollio's birthday
  ?martyPollio dbp:name ""Marty Pollio"" ;
               dbo:birthday ?martyBirthday .

  # Find actor from ""All or Nothing: Manchester City"" who is a soccer player and athlete
  ?actor dbo:birthDate ?actorBirthDate ;
         dbo:sport dbr:Soccer ;
         dbo:sport dbr:Athletics .
  
  ?show dbo:title ""All or Nothing: Manchester City""@en ;
        dbo:castMember ?actor .

  # Ensure the person is linked to both the athlete and actor
  ?person dbp:playerIn ?athlete .
  ?person dbp:playerIn ?actor .

  # Get the team of this person
  ?person dbo:team ?team .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
687,66,val,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v3 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v6 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?person1955 ?teamSarmiento
WHERE {
  # Find Marcelo Sarmiento's birthday
  VALUES ?marceloSarmiento (dbr:Marcelo_Sarmiento) .
  
  # Get the team of a person born on Marcelo Sarmiento's birthday who is both a soccer player and manager
  ?personSarmiento dbo:birthday ?birthdaySarmiento ;
                  rdf:type dbo:SoccerPlayer, dbo:SoccerManager .
  FILTER (?birthdaySarmiento = ?marceloSarmientoBirthday)
  
  # Get the team of this person
  ?personSarmiento dbo:team ?teamSarmiento .

  # Find the actor from ""All or Nothing: Manchester City"" who is a soccer player and athlete
  ?actor dbo:role ?role ;
         rdf:type dbo:SoccerPlayer, dbo:Athlete .
  ?role dbp:name ""All or Nothing: Manchester City""@en .

  # Find the person born on February 22, 1955, who is an athlete
  ?person1955 dbo:birthday ?birthday1955 ;
              rdf:type dbo:Athlete .
  FILTER (YEAR(?birthday1955) = 1955 && MONTH(?birthday1955) = 2 && DAY(?birthday1955) = 22)

  # Get Marcelo Sarmiento's birthday
  ?marceloSarmiento dbo:birthday ?marceloSarmientoBirthday .
}",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
731,18,val,Give me the war of the commander in Sinking of Prince of Wales and Repulse and force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander ?force ?award WHERE {
  # Identify the event and its associated war
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:partOf ?war .
  
  # Find the commander of the force involved in this event
  ?event dbo:commandedBy ?commander .
  ?commander dbp:rank ?force .

  # Identify Edmund Hakewill-Smith and his award
  dbr:Edmund_Hakewill-Smith dbo:awardReceived ?award .
  
  # Link the commander to the war
  ?commander dbo:participatedIn ?war .
}
```

This query attempts to:

- Find the war associated with the ""Sinking of Prince of Wales and Repulse.""
- Identify the commander involved in this event.
- Determine the military force or rank under which the commander served.
- Retrieve the award received by Edmund Hakewill-Smith.

Please note that the exact structure and availability of data might require adjustments based on DBpedia's current schema and data entries. You may need to refine property paths if they differ from what is assumed here.",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
628,62,val,"Give me the native of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/property/birthName> ?v6 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeOfFlorida ?associatedArtist ?memberOfGS9
WHERE {
  ?person dbo:nativePlace dbr:Florida .
  ?person dbo:bandMember ?associatedArtist .
  ?associatedArtist a dbo:MusicalArtist .

  ?person a dbo:MusicalArtist .
  
  ?associatedArtist dbo:bandMember ?artistAndMusician .
  ?artistAndMusician a dbo:Artist ;
                    a dbo:MusicalArtist .
  
  ?artistAndMusician dbo:memberOfGS9 true .
  
  ?person dbp:birthdayName ?birthName .
  ?artistAndMusician dbp:birthdayName ?birthName .

}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
159,65,val,"Give me the reference to the writer of the work of George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?work dbo:author ?writer .
  ?work dbo:title ?title .
  
  OPTIONAL { ?work dbo:wikiPageRedirects ?redirect . }
  
  ?ducas dbo:works ?work .
  FILTER(CONTAINS(LCASE(?title), ""george ducas""))

  ?arco dbo:wikiPageDisambiguates ?event .
  ?event dbp:title ?eventName .
  FILTER(CONTAINS(LCASE(?eventName), ""jean baptist comte d'arco""))

  ?war dbo:commander ?commander .
  ?war dbo:date ?date .
  FILTER(STRSTARTS(STR(?date), ""1654"") && STRENDS(STR(?date), ""1667""))
  
  ?successor dbo:succeededBy ?commander .
  ?successor a dbo:Politician ;
             dbo:officeHolder ?office .

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
375,26,val,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?war WHERE {
  # Toyotomi Hideyoshi's children
  ?hideyoshiChild dbo:parent dbr:Toyotomi_Hideyoshi .
  
  # Wars involving Toyotomi Hidenaga (Hideyoshi's son)
  ?hidenaga dbo:parent dbr:Toyotomi_Hideyoshi ;
           dbo:spouse ?child .

  # Yamaza Enjirō's birthplace
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # Wars involving the child of Toyotomi Hideyoshi and entity in Yamaza Enjirō's birthplace
  ?war dbo:location ?birthPlace ;
       dbo:participant ?child .
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
198,62,val,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/awards> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?award dbo:awardee ?person .
  ?award dbo:givenBy dbr:United_States_Congress .
  ?entity dbo:location dbr:Charleston,_South_Carolina .
  ?person dbo:force dbr:Union_Army .
  ?gillmoreAward dbo:awardee ?person .
  ?gillmoreAward dbo:givenBy dbr:Quincy_Adams_Gillmore .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
213,18,val,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of the work of Lao She.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?workCountry WHERE {
  # Find the person who died in Taipei
  ?person dbo:deathPlace dbr:Taipei .
  
  # Find a child of this person who is a politician
  ?child dbo:parent ?person ;
         dbo:occupation dbr:Politician .

  # Get the birthplace of this child
  ?child dbp:birthPlace ?birthPlace .

  # Find Lao She's work and its associated country
  ?work dbo:author dbr:Lao_She .
  ?work dbo:country ?workCountry .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
737,62,val,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v4 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v6 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?greatGrandchild ?predecessorSibling ?olderSibling
WHERE {
  # Step 1: Find Alexander of Württemberg's great-grandchild
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en .
  ?child1 dbo:parent ?alexander ;
          dbo:spouse ?spouse1 .
  ?grandchild dbo:parent ?child1 ;
              dbo:spouse ?spouse2 .
  ?greatGrandchild dbo:parent ?grandchild .

  # Step 2: Find Archduchess Margarete Sophie's child and predecessor
  ?margarete a dbo:Person ;
             foaf:name ""Archduchess Margarete Sophie of Austria""@en .
  ?child2 dbo:parent ?margarete .
  OPTIONAL {
    ?predecessorSibling dbo:parent ?margarete ;
                        dbo:spouse ?spouse3 .
    FILTER(?predecessorSibling != ?child2)
  }

  # Step 3: Find Archduchess Helena's spouse's child and predecessor
  ?helena a dbo:Person ;
          foaf:name ""Archduchess Helena of Austria""@en .
  ?spouseHelena dbo:spouse ?helena .
  ?child3 dbo:parent ?spouseHelena .
  OPTIONAL {
    ?olderSibling dbo:parent ?spouseHelena ;
                  dbo:spouse ?spouse4 .
    FILTER(?olderSibling != ?child3)
  }

  # Step 4: Ensure the predecessor is royalty
  VALUES (?greatGrandchild ?predecessorSibling ?olderSibling) {
    (dbr:GreatGrandchild dbr:PredecessorSibling dbr:OlderSibling)
  }
}
ORDER BY ?greatGrandchild ?predecessorSibling ?olderSibling",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
609,66,val,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?authorBirthPlace ?awardeeBirthPlace WHERE {
  # Governor of Virginia
  ?governor a dbo:Governor ;
            dbo:stateOrTerritory dbr:Virginia ;
            dbo:birthPlace ?governorBirthPlace .

  # Author of ""El Deafo""
  ?author a dbo:Writer ;
          foaf:name ""Cece Bell"" ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace ?authorBirthPlace .

  # Awardee related to Vince Gilligan
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
  ?gilligan a dbo:Person ;
            foaf:name ""Vince Gilligan"" ;
            dbo:awardReceived ?award .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
871,64,val,"Give me the parent of Edward Stanley, 17th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent WHERE {
  # Edward Stanley, 17th Earl of Derby's parent
  ?derby a dbo:Person ;
         foaf:name ""Edward Stanley, 17th Earl of Derby"" .
  ?derby dbo:childOf ?parent .

  UNION

  # Awardee of Rodney Lees Award's parent
  ?awardee a dbo:Person ;
           dbo:awardReceived ?rodneyLeesAward .
  ?rodneyLeesAward foaf:name ""Rodney Lees Award"" .
  ?awardee dbo:childOf ?parent .

  UNION

  # Politician child of an Eton College alumnus's father
  ?alumnus a dbo:Person ;
           dbo:almaMater ?etonCollege .
  ?etonCollege foaf:name ""Eton College"" .
  ?politician a dbo:Politician ;
              dbo:childOf ?alumnus .
  ?alumnus dbo:father ?parent .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
203,65,val,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryConflict ?force1 ?force2 WHERE {
  # Find the military conflict involving the 30th Regiment of Foot
  ?conflict dbo:militaryUnit dbr:30th_Regiment_of_Foot .
  
  # Find the commander of this regiment in that conflict
  ?conflict dbo:commander ?commander .

  # Find the military force associated with William Bayne
  ?bayneEvent dbo:agent dbr:William_Bayne .
  ?bayneEvent dbo:militaryConflict ?militaryConflict .
  
  # Ensure the commander is also involved in a conflict with Robert Calder's force
  ?calderEvent dbo:agent dbr:Robert_Calder .
  ?calderEvent dbo:militaryConflict ?conflict .

  # Bind forces to their respective events
  ?bayneEvent dbo:militaryForce ?force1 .
  ?calderEvent dbo:militaryForce ?force2 .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
595,63,val,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v6 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v6 <http://dbpedia.org/property/author> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Hillary Clinton and her spouse who is an author
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  # Spouse must be a politician or office holder
  ?spouse dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""office""))

  # Spouse is an author of a book
  ?spouse dbo:author ?book .
  ?book rdf:type dbr:Book .

  # Book related to Bill Clinton and United States Navy
  ?book dbo:subject dbr:Bill_Clinton ;
        dbo:subject dbr:United_States_Navy .
}
```",7,16,8,3,3,3,3,71,0,0,1,0,0.0,0
782,64,val,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandNameKimWilson ?bandNameNickCurran WHERE {
  # Kim Wilson's band
  OPTIONAL {
    dbr:Kim_Wilson dbo:musicalArtist dbr:Double Trouble (band) .
    dbr:Double Trouble_(band) rdfs:label ?bandNameKimWilson .
    FILTER(LANG(?bandNameKimWilson) = 'en')
  }

  # Nick Curran's band
  OPTIONAL {
    dbr:Nick_Curran dbo:musicalArtist dbr:The_Nick_Curran_Band .
    dbr:The_Nick_Curran_Band rdfs:label ?bandNameNickCurran .
    FILTER(LANG(?bandNameNickCurran) = 'en')
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
263,25,val,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find William Gayner's birthplace
  ?williamGayner a dbo:Person ;
                 foaf:name ""William Gayner""@en ;
                 dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is both a region and a country
  ?birthPlace a dbo:Region, dbo:Country .

  # Find the native of the birthplace
  ?native dbo:nativeOf ?birthPlace .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
353,63,val,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v4 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Find William I of Sicily's royal child
  ?child a dbo:Monarch ;
         dbo:parent dbr:William_I_of_Sicily .

  # Step 2: Find the grandchild of Alfonso VI who is also a descendant of William I's royal child
  ?grandchild dbo:parent ?child .
  ?ancestor dbo:parent* ?grandchild .
  ?ancestor dbo:parent dbr:Alfonso_VI_of_León_and_Castile .

  # Step 3: Find Roger II's parent and their royal child
  ?rogerParent dbo:parent dbr:Roger_II_of_Sicily ;
               dbo:child ?royalChild .
  
  # Final step: Identify the father of the grandchild from step 2 who is also a descendant of Roger II's parent's royal child
  ?grandchild dbo:parent ?father .
  ?royalChild dbo:parent* ?grandchild .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
723,18,val,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?v2 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Cavalera Conspiracy and its band members
  dbr:Cavalera_Conspiracy a dbo:Band ;
    dbo:member ?cavaleraMember .

  # Producer of ""Nothing to Gein"" as an organization and group
  ?producer a dbo:MusicalArtist, dbo:Organization, dbo:Group ;
            dbo:producedAlbum dbr:Nothing_to_Gein .

  # Band member of both Cavalera Conspiracy and the producer
  ?cavaleraMember rdfs:label ?bandMemberLabel .
  ?producer dbo:member ?commonBandMember .
  
  FILTER (lang(?bandMemberLabel) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?bandMemberLabel), "" "", ""_""))) AS ?cavaleraMemberIRI)
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?commonBandMember), "" "", ""_""))) AS ?producerMemberIRI)

  FILTER (?cavaleraMemberIRI = ?producerMemberIRI)
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
609,62,val,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Cece Bell.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardeeBirthPlace ?governorBirthPlace ?ceceBellBirthPlace
WHERE {
  # Vince Gilligan's award and awardee's birthplace
  dbr:Vince_Gilligan dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Original_Main_Title_Theme_Music_Composition .
  ?awardee dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Original_Main_Title_Theme_Music_Composition ;
           dbp:birthPlace ?awardeeBirthPlace .

  # Paulus Powell's birthplace and governor
  dbr:Paulus_Powell dbp:birthPlace ?region .
  ?region a dbo:AdministrativeRegion .
  ?governor dbo:governmentRole dbr:Governor ;
           dbp:birthPlace ?governorBirthPlace .

  # Cece Bell's birthplace
  dbr:Cecil_CeCe_Bell dbp:birthPlace ?ceceBellBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
23,26,val,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?partyRoy ?fatherName ?partyFather
WHERE {
  # Roy Leonardo Barreras Montealegre
  OPTIONAL {
    dbr:Roy_Leonardo_Barreras_Montealegre dbo:nationality dbr:Colombia .
    dbr:Roy_Leonardo_Barreras_Montealegre dbo:birthPlace ?birthPlace .
    dbr:Roy_Leonardo_Barreras_Montealegre dbp:politicalParty ?partyRoy .
  }

  # Sofía Petro's father
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?father .
    ?father rdfs:label ?fatherName .
    FILTER (lang(?fatherName) = 'en')
    ?father dbp:politicalParty ?partyFather .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
203,66,val,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?militaryForce3
WHERE {
  # Step 1: Find the military force of William Bayne
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryBranch ?militaryForce1 .

  # Step 2: Find the war in which the 30th (Cambridgeshire) Regiment of Foot participated and their commander
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:commander ?commander .
  ?commander dbo:militaryBranch ?militaryForce2 .

  # Step 3: Find an awardee of Knight Commander of the Order of the Bath and their military force
  ?awardee dbo:title ""Knight Commander of the Order of the Bath""@en ;
           dbo:militaryBranch ?militaryForce3 .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
87,25,val,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v4 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Iliza Shlesinger's movies
  ?movie dbo:starring dbr:Iliza_Shlesinger .
  
  # Actor from ""Always"" (1989 film)
  ?alwaysMovie dbr:Always_(film) ;
              dbo:starring ?alwaysActor .

  # Spouse of an awardee from Janusz Kamiński's list
  ?awardee dbo:award dbr:List_of_awards_and_nominations_received_by_Janusz_Kamiński .
  ?spouse dbo:spouse ?awardee ;
          dbo:starring ?movie .

  # Common movie involving all these individuals
  ?movie dbo:starring ?alwaysActor .
  
  # Retrieve actors from this common movie
  ?movie dbo:starring ?actor .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
347,63,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Leopold I as child of Ferdinand III and commander in war
  dbr:Leopold_I_Holy_Roman_Emperor dbo:father dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # Find events related to Algerian War
  ?algerianWarEvent dbo:relatedMilitaryForce dbr:Military_force_of_the_Algerian_War .

  # Find societal event, event, and television show
  ?event a dbo:SocietalEvent ;
         a dbo:Event ;
         a dbo:TelevisionShow .
  
  # Link the event to Algerian War
  ?event dbo:relatedTo ?algerianWarEvent .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
249,9,val,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?shobhnaNative ?jamsetjiNative
WHERE {
  # Shobhna Samarth's birthplace country and its native language
  dbr:Shobhna_Samarth dbo:birthPlace ?shobhnaBirthPlace .
  ?shobhnaBirthPlace a dbo:Country ;
                    dbp:officialLanguage ?shobhnaNative .

  # Jamsetji Tata's Indian work and its native language
  dbr:Jamsetji_Tata dbo:work ?jamsetjiWork .
  ?jamsetjiWork dbo:country dbr:India .
  ?jamsetjiWork dbp:language ?jamsetjiLanguage .
  
  # Assuming the language of the work is the same as the native language
  OPTIONAL { 
    ?jamsetjiLanguage rdfs:label ?jamsetjiNative .
    FILTER (lang(?jamsetjiNative) = ""en"")
  }
}
```",4,6,5,2,2,2,2,9,0,0,22,0,0.0,0
687,65,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v6 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthday ""1979-11-03""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Soccer_Manager .

  # Person born on 1955-02-22 who is an athlete
  ?person2 dbo:birthday ""1955-02-22""^^xsd:date ;
           dbo:sport dbr:Athletics .

  # The person from 1979 played with the person from 1955
  ?team1 dbo:member ?person1 .
  ?team1 dbo:member ?person2 .

  # Actor who is a soccer player and athlete, part of a film by Manuel Huerga
  ?actor dbo:sport dbr:Soccer ;
         dbo:sport dbr:Athletics ;
         dbo:film ?film .

  ?film dbo:director dbr:Manuel_Huerga .

  # The person from 1955 played with the actor
  ?team2 dbo:member ?person2 .
  ?team2 dbo:member ?actor .

  FILTER(?team1 = ?team2)
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
609,65,val,"Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/governor> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?vinceBirthplace ?governorBirthplace ?authorBirthplace WHERE {
  # Vince Gilligan's birthplace
  dbr:Vince_Gilligan dbo:nationality dbr:United_States ;
                     dbo:birthPlace ?vinceBirthplace .

  # Paulus Powell's birthplace and its governor
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthplace .
  ?paulusBirthplace a dbo:AdministrativeRegion .
  
  OPTIONAL {
    ?governor dbp:governmentRole ""Governor""@en ;
             dbp:residence ?paulusBirthplace .
    ?governor dbo:birthPlace ?governorBirthplace .
  }

  # Cece Bell's birthplace
  dbr:Cecily_Patrick_Bell dbp:birthPlace ?authorBirthplace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
375,25,val,Give me the war of Hashiba Hidekatsu and entity in the birth place of Yamaza Enjirō and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warHashiba ?entityBirthplaceYamaza ?warKoichiro
WHERE {
  # Wars involving Hashiba Hidekatsu
  OPTIONAL {
    ?hashiba a dbr:Hidekatsu;
             dbo:participatedInWar ?warHashiba.
  }

  # Yamaza Enjirō's birthplace and related entities/wars
  ?yamaza a dbr:Yamaza_Enjirō;
          dbo:birthPlace ?birthPlaceYamaza.
  
  OPTIONAL {
    ?entityBirthplaceYamaza dbo:location ?birthPlaceYamaza;
                            dbo:participatedInWar ?warEntityBirthplaceYamaza.
  }

  # Person born as Koichirō and their wars
  ?koichiro a ?personKoichiro;
            rdfs:label ""Koichirō""@en;
            dbo:birthName ?nameKoichiro.

  OPTIONAL {
    ?koichiro dbo:participatedInWar ?warKoichiro.
  }
}
```",5,5,6,2,3,2,3,28,0,0,2,0,0.0,0
119,64,val,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person rdfs:label ""Anxo Quintana""@en .
  ?event dbo:agent ?person ;
         dbo:place dbr:Spain ;
         dbo:politicalParty dbr:Spanish_Socialist_Workers'_Party .
  ?event dbo:positionHeld ?office .
  FILTER (lang(?office) = 'en')
}
```

This query does the following:
- Identifies Anxo Quintana as a person.
- Finds events where he is an agent, associated with Spain and the Spanish Socialist Workers' Party.
- Retrieves the office or position held in these events.",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
293,63,val,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v3 . ?v4 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Actor of ""1,000 Dollars a Minute""
  ?actor dbo:title ""1,000 Dollars a Minute""@en .
  
  # Spouse of that actor
  ?actor dbp:spouse ?spouse .
  
  # Landmark at elevation 20.1168
  ?landmark dbo:elevation ?elevation ;
            dbo:locationCountry ?country .

  FILTER(?elevation = ""20.116800000000001347""^^xsd:float)

  # Ruling party in that country
  ?party dbo:country ?country .
  ?party dbo:isRulingParty true .

  # Match the spouse with the person we are looking for
  ?spouse rdfs:label ?personLabel .
  FILTER(CONTAINS(LCASE(?personLabel), LCASE(STR(?birthName))))
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
311,18,val,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Producer of ""Lotus"" (R.E.M. song)
  dbr:Lotus_(song) dbo:producer ?producer .

  # Step 2 & 3: Associated musical artists that are organizations, bands, or groups
  ?producer dbo:musicArtist ?associatedArtist .
  FILTER EXISTS { ?associatedArtist a ?type . 
                 VALUES ?type { dbo:MusicalGroup dbo:Band dbo:Organization } }

  # Step 4: Writer of ""No Alternative""
  dbr:No_Alternative dbo:writer ?writer .

  # Step 5: Band members of the writer
  ?writer dbo:member ?bandMember .

  # Step 6: Associated musical artists of these band members
  ?bandMember dbo:musicArtist ?finalArtist .

  # Step 7: Ensure final result is an artist
  FILTER EXISTS { ?finalArtist a dbo:MusicalArtist }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
609,63,val,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v6 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Birth place of Cece Bell, author of ""El Deafo""
  dbr:Cece_Bell dbo:birthPlace ?authorBirthPlace .

  # Birth place of Glenn Youngkin, Governor of Virginia
  dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace .

  # Birth place of Vince Gilligan, awardee associated with the Peabody Award
  dbr:Vince_Gilligan dbo:birthPlace ?awardeeBirthPlace .
}
```",7,8,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
943,65,val,"Give me the father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Na'od and his father
  ?na'od dbo:parent ?na'odFather .
  FILTER (str(?na'od) = ""Na'od"")

  # Father of Na'od's father (Na'od's grandfather)
  ?na'odFather dbo:parent ?grandfather .

  # Ensure the grandfather is royalty or an office holder
  OPTIONAL { ?grandfather dbo:title ?title . FILTER regex(?title, ""King|Emperor|Prince"", ""i"") }
  OPTIONAL { ?grandfather dbo:officeHolderOf ?office . }

  # Yeshaq I's parent who is royalty
  ?yeshaq1 dbo:parent ?yeshaqParent .
  FILTER (str(?yeshaq1) = ""Yeshaq_I"")
  OPTIONAL { ?yeshaqParent dbo:title ?title2 . FILTER regex(?title2, ""King|Emperor|Prince"", ""i"") }

  # Lamont Cranston is an alter ego of The Shadow
  ?shadow dbr:Lamont_Cranston rdfs:label ""The_Shadow""@en .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
905,66,val,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfFather
WHERE {
  # Charles I of Hungary
  ?charlesI dbr:Charles_I_of_Hungary .
  
  # Father of Charles I
  ?father dbo:child ?charlesI ;
          dbo:spouse ?mother .

  # Mother's parent who is royalty
  ?parentOfFather dbo:child ?mother ;
                  a dbo:Monarch .

  # Philip I, Prince of Taranto
  ?philipI dbr:Philip_I,_Prince_of_Taranto .
  
  # Father of Philip I
  ?fatherOfPhilip dbo:child ?philipI .

  # Child of the father of Philip I
  ?childOfFather dbp:parent ?fatherOfPhilip ;
                 a dbo:Monarch .

  # Predecessor of Stephen V of Hungary
  ?stephenV dbr:Stephen_V_of_Hungary .
  ?predecessor dbo:succeededBy ?stephenV ;
               a dbo:Monarch .

  # Child of the predecessor who is royalty
  ?royalChild dbp:parent ?predecessor ;
              a dbo:Monarch .

  FILTER (?childOfFather = ?royalChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
531,65,val,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?leaderOffice ?residence ?commanderOffice ?conflict
WHERE {
  # Conservative Republican Party (Spain) leader's office
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
  
  ?leader dbo:positionHeld ?office ;
          dbo:affiliation ?party .

  ?office dbo:officeName ?leaderOffice .

  # Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .

  # Manuel Pinto da Costa as a commander in a military conflict
  ?pinto dbo:positionHeld ?commander ;
         rdfs:label ""Manuel Pinto da Costa""@en .
  
  ?commander dbo:officeName ?commanderOffice ;
             dbo:participatedIn ?conflict .

  ?conflict a dbo:MilitaryConflict ;
            dbo:participant ?pinto .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
158,25,val,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace that is a country
  dbr:Sandro_Bertaggia dbo:birthPlace ?country .
  
  # Ensure the birthplace is indeed a country
  ?country rdf:type dbo:Country .

  # Find Alexander II of Finland's native place and administration
  dbr:Alexander_II_of_Finland dbo:nativePlace ?nativePlace ;
                              dbo:country dbr:Russian_Empire .

  # Find a person who died in the same country as Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?country .
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
628,64,val,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Ackquille Jean Pollard is a member of GS9
  dbr:Ackquille_Jean_Pollard dbo:memberOf dbr:GS9 .

  # GS9 is associated with an artist who is also a musical artist
  dbr:GS9 dbo:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:MusicalArtist .

  # This artist has a band member who is themselves a musical artist
  ?artist dbo:bandMember ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .

  # The award is related to New York (state) and involves a region, American state, and settlement
  dbr:New_York_(state) dbo:region dbr:Region_Name ; # Replace Region_Name with the specific region if known
    dbo:country dbr:United_States ;
    dbo:settlement dbr:Settlement_Name . # Replace Settlement_Name with the specific settlement if known

  # The awardee of this award is a band
  ?award dbo:awardee ?band .
  ?band rdf:type dbo:Band .
}
```

Note:
- You may need to replace `Region_Name` and `Settlement_Name` with actual DBpedia resources for the specific region and settlement related to New York.
- This query assumes that the relationships are directly available in DBpedia. Adjustments might be necessary based on the exact structure of DBpedia data.",7,15,8,3,3,3,3,71,0,0,1,0,0.0,0
386,25,val,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceWar ?davydovWar WHERE {
  # Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # War associated with the birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?birthPlace dbo:locationOf ?birthPlaceWar .

  # Alexander Lvovich Davydov's war
  dbr:Aleksandr_Davydov dbo:associatedWith ?davydovWar .

  FILTER (isLiteral(?davydovWar))
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
756,62,val,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://dbpedia.org/ontology/team> ?v3 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v6 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Find the leader of West Germany who was also a football manager
  ?person dbo:nationality dbr:Germany ;
          dbo:occupation dbr:Football_manager ;
          dbo:leaderOf dbr:West_Germany .

  # Manager of SBV Vitesse in 2020–21 season
  ?vitesseSeason dbp:manager ?person ;
                 dbp:team dbr:SBV_Vitesse ;
                 dbp:season ""2020–21""^^xsd:string .

  # Find the successor of the 2006–07 VfL Bochum season
  ?bochumSeason dbp:team dbr:VfL_Bochum ;
                dbp:season ""2006–07""^^xsd:string .
  
  ?successorSeason dbo:succeededBy ?bochumSeason .

  # Manager of the player in the successor season
  ?successorSeason dbp:manager ?person .

  # Get the native country of this person
  ?person dbo:nationality ?nativeCountry .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
742,18,val,Give me the birthplace of the resident of Sofia and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?v2 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceSofia ?birthPlaceAlumnus
WHERE {
  # Find people associated with Sofia
  ?person dbo:residence dbr:Sofia .
  ?person dbo:birthPlace ?birthPlaceSofia .

  # Find alumni of Пловдивски университет „Паисий Хилендарски“
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Пловдивски_университет_„Паисий_Хилендарски“ .
    ?alumnus dbo:birthPlace ?birthPlaceAlumnus .
    
    # Ensure the person is the same as the alumnus
    FILTER(?person = ?alumnus)
  }
}
```

This query does the following:
- Selects individuals who have a residence in Sofia and retrieves their birthplace.
- Optionally matches these individuals if they are also alumni of Пловдивски университет „Паисий Хилендарски“ and retrieves their birthplace.",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
203,64,val,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?warMilitaryConflict ?figureMilitaryConflict
WHERE {
  # Battle of Fort Royal military forces
  dbr:Battle_of_Fort_Royal dbo:militaryConflicts [
    ?conflict1 .
    ?conflict1 dbo:participatingMilitaryUnit ?militaryUnit1 ;
              dbo:opposingMilitaryUnit ?militaryUnit2
  ].
  
  BIND(CONCAT(?militaryUnit1, "" vs "", ?militaryUnit2) AS ?battleMilitaryForce)

  # Awardee of Knight Commander of the Order of the Bath and commander in a war
  ?person dbo:knightCommanderOfTheOrderOfTheBath true ;
          dbo:commandedInWar ?war .
  
  ?war dbo:militaryConflicts [
    ?conflict2 .
    ?conflict2 dbo:participatingMilitaryUnit ?militaryUnit3 ;
               dbo:opposingMilitaryUnit ?militaryUnit4
  ].
  
  BIND(CONCAT(?militaryUnit3, "" vs "", ?militaryUnit4) AS ?warMilitaryConflict)

  # The Triple X's figure and their military conflict
  ?figure rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""triple x"")).
  
  ?figure dbo:commandedInWar ?conflict3 .
  ?conflict3 dbo:militaryConflicts [
    ?conflict4 .
    ?conflict4 dbo:participatingMilitaryUnit ?militaryUnit5 ;
               dbo:opposingMilitaryUnit ?militaryUnit6
  ].
  
  BIND(CONCAT(?militaryUnit5, "" vs "", ?militaryUnit6) AS ?figureMilitaryConflict)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
143,18,val,"Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan and actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES (?ciara) { dbr:Ciara }
  VALUES (?fiftyCent) { dbr:50_Cent }

  ?movie dbo:starring ?ciara .
  ?movie dbo:starring ?fiftyCent .

  ?artist dbo:associatedMusicalArtist ?ciara .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
80,64,val,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # The Golden Master Series alter ego
  VALUES (?alterEgo) { dbr:The_Golden_Master_Alter_Ego }

  # Smartbomb author and their acting roles
  ?smartbombAuthor dbo:author dbr:Smartbomb .
  ?smartbombAuthor dbo:actorIn ?movie .

  # ATL film actors
  ?atlActor dbo:actorIn dbr:ATL .

  # Find the professional who connects these entities
  ?professional dbo:alterEgo ?alterEgo ;
                dbo:actorIn ?movie ;
                dbo:actorIn dbr:ATL .
}
```

This query assumes:
- The alter ego of ""The Golden Master"" series is represented by `dbr:The_Golden_Master_Alter_Ego`.
- The author of ""Smartbomb"" and their acting roles are linked.
- Actors in the film ""ATL"" are identified.

Adjust the resource identifiers (`dbr:...`) based on actual DBpedia entries for precise results.",7,7,8,3,3,3,3,71,0,0,4,0,0.0,0
816,66,val,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer and parent of the child of the spouse of Mariclare Costello.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies Herschel Bernardi acted in
  ?movie dbo:starring dbr:Herschel_Bernardi .

  # Step 2: Find actors of those movies who are parents of photographers
  ?movie dbo:starring ?actor .
  ?parent a dbo:Photographer ;
          dbo:spouse ?actor .

  # Step 3: Filter these actors to find whose spouse's child is Mariclare Costello
  ?child dbo:parent ?parent ;
         rdfs:label ""Mariclare Costello""@en .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
347,62,val,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v4 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v6 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:spouse ?parent .
  ?parent foaf:name ""Ferdinand II, Holy Roman Emperor""@en .

  ?commander dbo:child ?grandchild .
  ?grandchild dbo:parent ?archdukeParent .
  ?archdukeParent foaf:name ""Archduke Charles Joseph of Austria""@en .

  ?commander dbo:militaryConflict dbr:Algerian_War .
  
  OPTIONAL { 
    ?event dbo:relatedEvent ?societalEvent .
    ?societalEvent dbo:hasParticipant ?commander .
  }
  
  OPTIONAL {
    ?tvShow dbo:actor ?commander .
  }
}
```

This query attempts to find a person who:
- Is the child of Ferdinand II.
- Has a grandchild whose parent is Archduke Charles Joseph of Austria.
- Was involved in the Algerian War.
- Participated in a societal event and acted in a television show.

Note: This query assumes certain relationships and properties that may not be directly available or accurate in DBpedia, so it might need adjustments based on actual data availability.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
782,63,val,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v6 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?band2 ?realNameBand3 WHERE {
  # Nicholas Michael Curran (aka Nick Curran)
  OPTIONAL {
    ?curran a dbo:MusicalArtist ;
            foaf:name ""Nick Curran"" .
    ?curran dbo:associatedBand ?artist1 .
  }

  # Eric Clapton's band member
  OPTIONAL {
    ?claptonMember dbo:memberOf dbr:The_Yardbirds ;
                   dbo:memberOf dbr:Bluesbreakers ;
                   dbo:memberOf dbr:Derek_and_the_Dominos ;
                   dbo:memberOf dbr:Cream .
    ?claptonMember dbo:associatedBand ?band2 .
  }

  # Kim Wilson's band real name
  OPTIONAL {
    ?wilson a dbo:MusicalArtist ;
            foaf:name ""Kim Wilson"" .
    ?wilson dbo:memberOf ?band3 .
    ?band3 rdfs:label ?realNameBand3 .
    FILTER (lang(?realNameBand3) = 'en')
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
859,18,val,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun and associated musical artist of the associated musical artist of James Plotkin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find the associated musical artist of James Plotkin
  ?artist1 dbo:associatedMusicalArtist dbr:James_Plotkin .
  
  # Step 2: Find the associated musical artist of that artist
  ?artist2 dbo:associatedMusicalArtist ?artist1 .

  # Step 3: Find the reference to ""Burnt by the Sun"" related to this second artist
  ?reference dbo:associatedMusicalArtist ?artist2 .
  ?reference rdfs:label ""Burnt by the Sun""@en .

  # Step 4: Ensure the reference is a group, band, and organization
  ?reference rdf:type dbo:Band ;
             rdf:type dbo:Group ;
             rdf:type dbo:Organization .

  # Step 5: Find the band members of this entity
  ?reference dbo:bandMember ?bandMember .
}
```",5,9,6,3,2,3,2,20,0,0,5,0,0.0,0
531,64,val,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?marianoRajoyOffice 
             ?partyLeaderOffice 
             ?councilLeaderResidenceTenant

WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .

  # Miguel Maura's political party and its leader's office
  dbr:Miguel_Maura dbo:partyAffiliation ?miguelMauraParty .
  ?miguelMauraParty dbo:leader ?partyLeader .
  ?partyLeader dbo:office ?partyLeaderOffice .

  # Leader of the 2003 Madrid City Council election and their residence tenant
  dbr:Madrid_City_Council_Election_2003 dbo:electedOfficial ?councilLeader .
  ?councilLeader dbo:residence ?councilResidence .
  ?councilResidence dbo:tenant ?councilLeaderResidenceTenant .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
263,26,val,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne's child
  ?child1 dbo:parent dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne .
  
  # Mary Elphinstone, Lady Elphinstone's parent
  ?commonParent dbo:child ?eldestChild2 .
  ?eldestChild2 dbo:parent dbr:Mary_Elphinstone_Lady_Elphinstone .

  # William Gayner's birthplace (region and country)
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Region ;
              dbo:country ?country .

  # Common parent is native to the region/country of William Gayner
  ?commonParent dbo:nativePlace ?birthPlace .
  
  # Ensure the child1 and eldestChild2 are related through commonParent
  ?child1 dbo:parent ?commonParent .
}
```",5,7,6,2,3,2,3,28,0,0,2,0,0.0,0
347,65,val,"Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Cecilia Renata of Austria's father
  ?ceciliaRenata dbo:father ?father1 .
  FILTER(STRSTARTS(STR(?ceciliaRenata), ""Cecilia_Renata_of_Austria""))

  # Archduke Charles Joseph's parent (likely his father)
  ?charlesJoseph dbo:parent ?parent2 .
  FILTER(STRSTARTS(STR(?charlesJoseph), ""Archduke_Charles_Joseph_of_Austria""))

  # The child of Cecilia Renata's father
  ?father1 dbo:child ?child1 .

  # The father of the child of Archduke Charles Joseph's parent
  ?parent2 dbo:child ?child2 .
  ?child2 dbo:father ?father2 .

  # The person we are looking for is both ?child1 and ?father2
  FILTER(?child1 = ?father2)

  # This person must be linked to the 2nd Dragoon Regiment (France)
  ?person dbo:memberOf ?regiment .
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)""@en .

  # The person is also a societal event, an event, and a television show
  ?person rdf:type ?type1 .
  ?person rdf:type ?type2 .
  ?person rdf:type ?type3 .
  
  VALUES (?type1 ?type2 ?type3) {
    (dbo:SocietalEvent dbo:Event dbo:TelevisionShow)
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
633,18,val,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of the father of Dorothea of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?antoine dbo:child ?child .
  ?child dbo:parent ?father .
  ?father dbp:mother ?dorothea .
  ?dorothea rdfs:label ""Dorothea of Lorraine""@en .

  ?antoine dbo:spouse ?spouse .
  ?spouse a dbo:Monarch ;
          a dbo:NoblePerson .
}
```

This query assumes:
- `dbo:child`, `dbo:parent`, and `dbp:mother` are the correct properties for these relationships.
- The labels are in English (`@en`).
- The spouse is both a monarch (`dbo:Monarch`) and a noble person (`dbo:NoblePerson`).",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
557,8,train,"Give me the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie ?work WHERE {
  VALUES ?janetGaynor { dbr:Janet_Gaynor }
  
  # Find movies associated with Janet Gaynor
  OPTIONAL {
    ?movie dbo:starring ?janetGaynor .
    ?movie a dbo:Film .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Find other works (e.g., books, plays) associated with Janet Gaynor
  OPTIONAL {
    ?work dbo:author ?janetGaynor .
    ?work a ?type .
    FILTER(?type != dbo:Film)
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
ORDER BY ?movie ?work
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
23,18,train,Give me the party of the father of Sofía Petro and entity in Colombia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?party ?colombianEntity
WHERE {
  # Sofia Petro as a person
  dbr:Sofía_Petro dbo:parent ?father .

  # Father's political party affiliation
  ?father dbo:politicalParty ?party .

  # An entity in Colombia (example: Bogotá)
  OPTIONAL { 
    ?colombianEntity a dbo:City ;
                     dbo:country dbr:Colombia .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,45,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Find Nick Curran
  ?nickCurran a dbo:Musician ;
              foaf:name ""Nick Curran""@en .

  # Find associated artists or bands
  ?nickCurran dbo:bandMemberOrCollaborator ?association .
  
  # Ensure the association is relevant to The Fabulous Thunderbirds and Kim Wilson
  OPTIONAL { ?association dbr:The_Fabulous_Thunderbirds . }
  OPTIONAL { ?association dbr:Kim_Wilson . }

  # Filter out non-musical associations
  ?association a dbo:MusicalArtist .

  # Return the associated artist
  BIND(?association AS ?associatedArtist)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,9,train,Give me the professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession 
WHERE {
  VALUES ?film { dbr:Rustlers'_Rhapsody }
  
  ?film dbo:starring ?actor .
  OPTIONAL {
    ?actor dbo:occupation ?profession .
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
668,42,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify the DBpedia resource for Joey B
  VALUES ?joeyb { 
    dbr:Joey_B_(musician) 
  }
  
  # Find associated musical artists or bands
  ?joeyb dbo:musicArtist ?artist .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
87,3,train,"Give me the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?movie WHERE {
  ?work dcterms:isPartOf ?film .
  ?work dbo:starring ?person .
  ?film a dbo:Film .
  ?person foaf:name ""Iliza Shlesinger"" .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
628,23,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find members of GS9 who are both artists and musical artists
  ?gs9Member a dbo:MusicalArtist ;
             dbo:memberOf dbr:GS9 ;
             dbo:associatedBandOrMusicalArtist ?associatedArtist .

  # Step 2: Ensure the associated artist is also a musical artist
  ?associatedArtist a dbo:MusicalArtist .

  # Step 3: Find band members of these associated artists
  ?bandMember dbo:memberOf ?associatedArtist .
}
```",3,6,4,3,1,3,3,71,0,0,10,0,0.0,0
782,39,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and band of Kim Wilson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?musicalArtist WHERE {
  # Find Nick Curran and his associated musical artist
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .
  
  OPTIONAL { 
    ?nickCurran dbo:associatedBand ?band .
    ?band dbo:member ?kimWilson .
    ?kimWilson foaf:name ""Kim Wilson"" .
    
    # Find the musical artist associated with Nick Curran
    ?nickCurran dbo:associatedMusicalArtist ?musicalArtist .
  }
  
  UNION
  
  {
    # Alternatively, find any direct association of Nick Curran to a band member of Kim Wilson's band
    ?band dbo:member ?kimWilson ;
          dbo:associatedBandMember ?curranAsMember .
    
    ?curranAsMember foaf:name ""Nick Curran"" .
    
    ?band dbo:associatedMusicalArtist ?musicalArtist .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,35,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Spanish Socialist Workers' Party (PSOE)
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalParty ;
    dbo:country dbr:Spain .

  # Galician Regional Election 2009
  OPTIONAL { 
    ?election dbo:region dbr:Galicia ;
              dbo:date ""2009-05-22""^^xsd:date .
  }

  # Leader of the PSOE in Galicia during the election period
  ?leader dbo:party dbr:Spanish_Socialist_Workers'_Party ;
          dbo:officeTitle ?office ;
          dbo:region dbr:Galicia .

  # Tenant of the administration (the party or leader in power)
  OPTIONAL {
    ?tenant dbo:country dbr:Spain ;
            dbo:leader ?leader .
  }

  FILTER EXISTS { ?election dbo:winner ?tenant }
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
80,52,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
    # Step 1: Find the album of ""What You Know"" by T.I.
    dbr:What_You_Know_(T.I._song) dbo:songAlbum ?album .
    
    # Step 2: Find the actor associated with that album
    ?album dbo:performer ?actor .

    # Step 3: Determine the author of ""Smartbomb""
    dbr:Smartbomb dbo:author ?author .

    # Step 4: Identify the movie in which both the actor and the author have acted
    ?movie dbo:starring ?actor ;
           dbo:starring ?author .
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
89,29,train,"Give me the predecessor of Myat Hpone Pyo and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the predecessor of Myat Hpone Pyo
  ?predecessor dbo:successor dbp:Myat_Hpone_Pyo .
  
  # Ensure this person is a child of Saw Min Hla
  ?predecessor dbo:childOf dbp:Saw_Min_Hla .

  # Ensure this person is the spouse of Myat Hpone Pyo's father
  ?father dbo:spouse ?predecessor .
  ?father dbo:child dbp:Myat_Hpone_Pyo .
  
  # Ensure the person is royalty
  ?predecessor a dbo:Monarch .

  BIND(?predecessor AS ?person)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
39,44,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?singer ?batmanAlterEgo ?band
WHERE {
  # Lil Wayne's professional career
  dbr:Lil_Wayne dbo:profession ?singer .
  
  # Batman's alter ego (Bruce Wayne)
  dbr:Bruce_Wayne dbo:alterEgo ?batmanAlterEgo .

  # Band associated with Lil Wayne
  dbr:Lil_Wayne dbo:memberOfBand ?band .
}
```",5,6,6,2,3,3,3,71,0,0,3,0,0.0,0
628,16,train,"Give me the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person dbp:birthday ?birthday . }
  ?person foaf:name ?name .
  ?person dbp:birthName ?birthName .
}
ORDER BY ?name
LIMIT 10",2,3,3,2,1,3,3,71,10,0,49,1.0,0.1694915254237288,0.2898550724637681
687,36,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerTeam ?personTeam WHERE {
  # Get Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:team ?juanCarlosTeam .
  
  # Get Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbp:birthday ?marceloSarmientoBirthday .

  # Find a person who is both a soccer player and manager, born on the same day as Marcelo Sarmiento
  ?person dbo:birthDate ?birthDate .
  FILTER (YEAR(?birthDate) = YEAR(LANG(?marceloSarmientoBirthday)) && 
          MONTH(?birthDate) = MONTH(LANG(?marceloSarmientoBirthday)) &&
          DAY(?birthDate) = DAY(LANG(?marceloSarmientoBirthday)))
  
  ?person dbo:occupation dbr:Soccer_player .
  ?person dbo:occupation dbr:Soccer_manager .

  # Get the team of this person
  ?person dbo:team ?personTeam .

  # Return Juan Carlos Molina's team and the found person's team
  BIND(?juanCarlosTeam AS ?playerTeam)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
293,52,train,"Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation = ""20.1168""^^xsd:float)

  # Find the actor of ""1,000 Dollars a Minute""
  ?film dbp:title ""1,000 Dollars a Minute""@en ;
        dbo:starring ?actor .

  # Find the person born as Harriette Arlene Lake
  ?person foaf:name ""Harriette Arlene Lake"" ;
          dbo:birthName ?birthName .
  
  FILTER(?birthName = ""Harriette Arlene Lake"")

  # Connect the actor and the person
  ?actor foaf:name ?nameActor .
  ?person foaf:name ?namePerson .

  # Find the spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Ensure the spouse is the same as the person born Harriette Arlene Lake
  FILTER(?spouse = ?person)

  # Find the party member related to the landmark and the actor
  ?partyMember dbo:memberOf ?rulingParty ;
               dbo:relatedTo ?landmark, ?actor .
  
  # Ensure the ruling party is currently in power (this might require additional context or assumptions)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
585,9,train,"Give me the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award WHERE {
  ?award a dbo:Award ;
        dbo:country dbr:United_States_of_America ;
        rdf:type dbo:Settlement .
  
  ?recipient dbo:placeOfBirth dbr:New_York_(state) ;
             dbo:awardsReceived ?award .
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
  
- **SELECT DISTINCT ?award**: We are interested in distinct awards that meet our criteria.

- **?award a dbo:Award**: This ensures we are selecting entities classified as awards.

- **dbo:country dbr:United_States_of_America**: Filters awards to those associated with the United States.

- **rdf:type dbo:Settlement**: Ensures the award is also categorized as a settlement.

- **?recipient dbo:placeOfBirth dbr:New_York_(state)**: Selects recipients born in New York state.

- **dbo:awardsReceived ?award**: Links the recipient to the award they received.

This query assumes that DBpedia has structured data for awards, settlements, and geographical connections as described. Adjustments may be necessary based on actual data availability and structure.",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
816,37,train,Give me the parent of Doon Arbus and parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?doonParent ?professionParent WHERE {
  # Find Doon Arbus' parents
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  
  OPTIONAL { 
    ?doonArbus dbo:parent ?doonParent .
  }
  
  # Find Eugène Cattin's profession and its parent
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  
  OPTIONAL {
    ?eugeneCattin dbo:profession ?profession .
    ?profession dbo:parent ?professionParent .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
39,40,train,Give me the professional in  and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobThompsonBand ?bobThompsonProfession ?cokeStudioProducer ?producerProfession
WHERE {
  # Part 1: Bob Thompson (musician)
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:band ?bobThompsonBand .
    dbr:Bob_Thompson_(musician) dbo:profession ?bobThompsonProfession .
  }

  # Part 2: Producer of Coke Studio Philippines
  OPTIONAL {
    dbr:Coke_Studio_Philippines dbo:producer ?cokeStudioProducer .
    ?cokeStudioProducer dbo:profession ?producerProfession .
  }
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
80,36,train,Give me the actor of Shelby Oaks and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?alterEgoName WHERE {
  # Find the actor for Shelby Oaks in ""Beverly Hills, 90210""
  ?character dbo:portrayedBy ?actor .
  ?actor foaf:name ?actorName .
  FILTER (?character = dbr:Shelby_Oaks)

  # Assuming ""The Golden Master"" refers to ""The Golden Girls""
  OPTIONAL {
    ?role dbo:portrayedBy ?alterEgoActor .
    ?alterEgoActor foaf:name ?alterEgoName .
    FILTER EXISTS { ?role dbo:inSeries dbr:The_Golden_Girls }
    # Assuming we need a professional alter ego, filter by profession
    OPTIONAL { ?role dbo:profession ?profession . FILTER(?profession != """") }
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
782,8,train,"Give me the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Nicholas Michael Curran"" .
  ?person rdf:type dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
816,7,train,Give me the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234567 foaf:spouse ?spouse .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Mariclare Costello. You can find this by searching for her on DBpedia or using a SPARQL query to identify her unique resource.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
941,7,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Duke Anthony Ulrich of Brunswick
  VALUES ?duke { dbr:Duke_Anthony_Ulrich_of_Brunswick }

  # Find his parents
  ?duke dbo:parent ?parent .

  # Ensure the parent is a royalty figure
  ?parent rdf:type ?type .
  FILTER (
    ?type = dbo:Monarch || 
    ?type = dbo:RoyalFamilyMember ||
    ?type = dbo:Prince ||
    ?type = dbo:Duke ||
    ?type = dbo:King ||
    ?type = dbo:Queen
  )

  # Find children of the royal parent
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
737,11,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Identify Philipp Albrecht, Duke of Württemberg
  dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg dbo:child ?child .

  # Find the predecessor for each child
  ?child dbo:predecessor ?predecessor .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
737,14,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Archduke Charles Louis of Austria
  VALUES ?archduke { dbr:Archduke_Charles_Louis_of_Austria }

  # Step 2: Find his children
  ?archduke dbo:child ?child .

  # Step 3: For each child, find their children (grandchildren)
  ?child dbo:child ?grandchild .

  # Step 4: Filter grandchildren who are royalty
  ?grandchild a ?royaltyClass .
  VALUES ?royaltyClass { 
    dbo:Monarch 
    dbo:Princess 
    dbo:Prince 
    dbo:Duke 
    dbo:Archduke 
    dbo:King 
    dbo:Queen 
    dbo:Emperor 
    dbo:Empress
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
347,4,train,"Give me the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find wars associated with the 2nd Dragoon Regiment (France)
  ?regiment dbo:participatedIn ?war .
  
  FILTER(STRSTARTS(STR(?regiment), ""http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)""))

  # Ensure the war is categorized as a societal event
  ?war rdf:type dbo:SocietalEvent .

  # Ensure the war is also an event
  ?war rdf:type dbo:Event .

  # Ensure there's a television show related to this war
  ?tvShow dbo:subject ?war .
  ?tvShow rdf:type dbo:TelevisionSeries .
}
```

This query does the following:
- It looks for wars (`?war`) that the 2nd Dragoon Regiment (France) participated in.
- Filters results to ensure the regiment is specifically the ""2nd Dragoon Regiment (France)"".
- Ensures the war is categorized as both a `SocietalEvent` and an `Event`.
- Checks if there exists a television show (`?tvShow`) that has this war as its subject.",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
38,11,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of Promise Me, Dad.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","```sparql
SELECT ?author WHERE {
  ?work dcterms:creator ?author .
  ?work rdf:type dbo:Work ;
        dbo:genre ""Book"" ;
        dbo:country dbc:United_States .
  FILTER EXISTS { ?work dbo:author ""Joe Biden"" }
  OPTIONAL { ?work rdfs:label ""Promise Me, Dad""@en . }
}
```",3,7,4,2,2,3,2,20,0,0,1,0,0.0,0
756,29,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeCountryLabel
WHERE {
  # Theodor Heuss's native country (Germany)
  OPTIONAL { 
    dbr:Theodor_Heuss dbo:nationality dbr:Germany .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Manager of 2020–21 SBV Vitesse
  OPTIONAL {
    ?vitesseManager dbp:team dbr:SBV_Vitesse ;
                   dbo:nationality ?nativeCountry .
    FILTER(year(now()) = 2021) # Assuming the query is run around 2021
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Manager of VfL Bochum
  OPTIONAL {
    ?bochumManager dbp:team dbr:VfL_Bochum ;
                   dbo:nationality ?nativeCountry .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Bind the labels for native countries
  OPTIONAL {
    ?nativeCountry rdfs:label ?nativeCountryLabel .
    FILTER(lang(?nativeCountryLabel) = 'en')
  }
}
ORDER BY ?nativeCountryLabel",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
492,11,train,Give me the death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?actor dbo:birthName ""Gene Raymond"" .
  ?actor dbo:film dbr:Aladdin_(1958_film) .
  ?actor dbo:deathPlace ?deathPlace .
}
```",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
557,14,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?film dbo:starring dbr:Janet_Gaynor .
  ?film dbo:productionCompany ?company .
  ?company dbo:president ?producer .
  
  FILTER (
    str(?film) IN (""7th Heaven"", ""Street Angel"", ""Sunrise"")
  )
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
668,53,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # For Tupac Shakur
  {
    ?tupac a dbo:MusicalArtist ;
           foaf:name ""Tupac Shakur"" .
    ?tupac dbo:associatedBandOrMusicalGroup ?artist .
  }
  
  UNION
  
  # For Joey B
  {
    ?joeyb a dbo:MusicalArtist ;
           foaf:name ""Joey B"" .
    ?joeyb dbo:associatedBandOrMusicalGroup ?artist .
  }
}
```

This query does the following:
- It searches for entities in DBpedia that are of type `dbo:MusicalArtist` and have a name matching ""Tupac Shakur"" or ""Joey B"".
- It then retrieves any associated bands or musical groups linked to these artists using the property `dbo:associatedBandOrMusicalGroup`.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
143,6,train,Give me the actor of The Campus Queen and associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?actor ?associatedMusicalArtist WHERE {
  # Find the actor of ""The Campus Queen""
  ?film rdfs:label ""The Campus Queen""@en .
  FILTER NOT EXISTS { ?film dbo:abstract ?a . FILTER(CONTAINS(LCASE(?a), ""fiction"")) } # Ensure it's a film
  ?film dbo:actor ?actor .

  # Find the associated musical artist of Cynthia Morgan
  ?person rdfs:label ""Cynthia Morgan""@en .
  ?person dbo:associatedMusicalArtist ?associatedMusicalArtist .
}
```

This query does the following:
- Uses `rdfs:label` to identify entities by their English labels.
- Ensures that ""The Campus Queen"" is a film and not fiction by checking its abstract (this step might need adjustment based on actual data).
- Retrieves the actor of ""The Campus Queen"".
- Finds Cynthia Morgan's associated musical artist.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
472,18,train,Give me the administration of the mayor of Duchy of Schleswig and administration of Christian IX of Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorAdministration ?christianIXAdministration WHERE {
  # Find information about the mayor of Duchy of Schleswig
  OPTIONAL {
    ?mayor a dbo:Mayor ;
           dbo:officeLocation dbr:Duchy_of_Schleswig .
    ?mayor dbo:administration ?mayorAdministration .
  }

  # Find information about Christian IX of Denmark
  OPTIONAL {
    ?christianIX a dbo:Monarch ;
                 foaf:name ""Christian IX""@en .
    ?christianIX dbo:administration ?christianIXAdministration .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,15,train,"Give me the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person rdfs:label ""The Triple X""@en .
  ?person dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         a dbo:Event .
  ?event dbo:name ?war .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
19,7,train,Give me the spouse of Carrie Johnson and professional in the birth name of John Boxer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?profession 
WHERE {
  ?carrie a dbo:Person ;
          foaf:name ""Carrie Johnson""@en .
  
  ?carrie dbo:spouse ?spouse .

  ?john a dbo:Person ;
        foaf:name ""John Boxer""@en ;
        dbo:birthName ?birthName .

  ?john dbo:profession ?profession .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
386,24,train,Give me the war of the awardee of 25 and war of the awardee of Golden Sword for Bravery.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  VALUES ?award { 
    dbr:Award_of_25 
    dbr:Golden_Sword_for_Bravery 
  }
  
  ?recipient dbo:awardedBy ?award .
  ?recipient dbo:participatedIn ?war .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
557,25,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerTomSawyer ?producerJanetGaynorClaimToFame
WHERE {
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Janet Gaynor's claim to fame, which is both a movie and a work
  OPTIONAL {
    dbr:Janet_Gaynor dbo:famousFor ?claimToFame .
    ?claimToFame rdf:type dbo:Film .
    ?claimToFame dbo:producer ?producerJanetGaynorClaimToFame .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
386,14,train,Give me the entity in Russian Empire and war of the awardee of 25.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?awardName WHERE {
  ?entity dbo:country dbr:Russian_Empire .
  ?entity dbo:awards ?award .
  ?award dbo:name ?awardName .
  FILTER CONTAINS(LCASE(?awardName), ""war"") .
  ?award dbo:number ""25""^^xsd:int .
}
```

This query does the following:
- Selects entities (`?entity`) and their award names (`?awardName`).
- Filters entities that are associated with the Russian Empire.
- Ensures the awards are related to war by checking if the award name contains the word ""war"".
- Specifically looks for an award number 25.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,2,train,Give me the father of Baeda Maryam I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Baeda Maryam I. You can find this identifier by searching for Baeda Maryam I in DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,22,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace
WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
  }
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
557,7,train,Give me the actor of High Society Blues.,SELECT ?result WHERE { <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dct:subject dbr:High_Society_Blues .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
347,29,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Ferdinand II who were commanders in the Thirty Years' War
  ?person dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?person dbo:occupation dbr:Thirty_Years'_War .

  # Ensure this person is also a parent of someone who is a child of Ferdinand III
  ?child dbo:parent ?person .
  ?grandchild dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  ?grandchild dbo:parent ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,58,train,"Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Gillmore Medal Awardee
  ?gillmoreAward dbr:Gillmore_Medal_Recipient .
  
  # Amasa Tracy's War
  ?tracy dbo:nationality dbr:United_States ;
         dbo:occupation dbr:Military_person ;
         dbo:conflict ?war .
  
  # Person Deceased on 1850-08-05
  ?person dbp:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace ?settlement .

  # Settlement is a settlement and American
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_States .
  
  # Find the force related to the war Amasa Tracy was involved in
  ?war dbo:militaryForce ?force .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
198,34,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award ?entityInCharleston WHERE {
  ?award dbo:givenBy dbr:United_States_Congress .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:location dbr:Charleston,_South_Carolina ;
           dbo:wikiPageRedirects ?entityInCharleston .
}
```

This query does the following:
- Selects the awardee, award, and entity in Charleston.
- Filters awards given by the U.S. Congress.
- Ensures the awardee is associated with Charleston, SC.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
347,52,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:commandedMilitaryForce dbr:Algerian_War .
  
  # Commander is associated with a societal event
  ?societalEvent dbo:relatedPerson ?commander .
  
  # Commander is associated with a television show
  ?tvShow dbo:actor ?commander .

  # Commander is a child of Ferdinand II, Holy Roman Emperor
  ?commander dbo:child dbr:Ferdinand_II,_Holy_Roman_Emperor .

  # Commander is a father to someone who is a child of Ferdinand III, Holy Roman Emperor
  ?descendant dbo:parent ?commander .
  ?descendant dbo:child dbr:Ferdinand_III,_Holy_Roman_Emperor .
}",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
159,54,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas and commander in Great Turkish War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor ?writer ?greatTurkishWarCommander WHERE {
  # Step 1: Identify the commander in the Russo-Polish War (1654–1667)
  ?commander dbo:wikiPageWikiLink dbr:Russo%E2%80%93Polish_War_(1654%E2%80%931667) .
  
  # Step 2: Find his successor who is a politician and an office holder
  ?successor dbo:predecessor ?commander ;
            a dbo:Politician, dbo:OfficeHolder .

  # Step 3: Reference the writer of the work of George Ducas
  ?work dbo:author dbr:George_Ducas .
  ?writer dbo:wikiPageDisambiguates ?work .

  # Step 4: Identify the commander in the Great Turkish War
  ?greatTurkishWarCommander dbo:wikiPageWikiLink dbr:Great_Turkish_War ;
                           a dbo:MilitaryPersonnel .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,16,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?force WHERE {
  ?person dbo:award [ 
    a dbo:Award ; 
    rdfs:label ""Commander of the Order of the British Empire""@en .
  ].
  
  ?person dbo:militaryConflict [
    a dbo:MilitaryConflict ;
    rdfs:label ""Sinking of Prince of Wales and Repulse""@en .
  ].

  OPTIONAL { ?person dbo:memberOf ?force . }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
103,45,train,"Give me the professional in Actor and actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?professionalName ?alterEgo
WHERE {
  # Find the actor of ""Dispatches from Elsewhere""
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .
  
  # Get the professional name of the actor
  ?actor dbo:profession dbr:Actor .

  OPTIONAL {
    ?actor dbo:name ?professionalName .
  }

  # Find the alter ego in ""The Shadow"" video game, which is a comic character
  ?videoGame dbo:title ""The Shadow""@en ;
             dbo:character ?alterEgo .
  
  ?alterEgo dbo:wikiPageRedirects dbr:The_Shadow_(comics) .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
905,5,train,Give me the spouse of Maria of Bytom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?marriage dbo:spouse1 dbr:Maria_of_Bytom .
  ?marriage dbo:spouse2 ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,59,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of the person born as the birth name of $pacely.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?writer ?associatedArtist WHERE {
  # Find the writer associated with ""The Live Anthology""
  ?album dbo:artist ?writer .
  ?album rdfs:label ""The Live Anthology""@en .

  # Ensure the writer is also a musical artist
  ?writer dbo:occupation dbr:Musician .

  # Find the person born as ""$pacely""
  ?person foaf:name ""$pacely"" .
  
  # Find associated musical artists of this person
  ?person dbo:associatedMusicalArtist ?associatedArtist .

  # Link the writer to the person with the birth name ""$pacely""
  ?writer dbr:Pacely .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
756,1,train,Give me the native of West Germany.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:Germany .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""west germany"") || CONTAINS(LCASE(?name), ""w. germany""))
  FILTER(LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 100
```",1,1,2,1,1,3,3,71,0,0,5170,0,0.0,0
472,17,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of Olaf I of Denmark.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/property/leader> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration
WHERE {
  VALUES ?person { 
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck 
    dbr:Olaf_I_of_Denmark 
  }
  
  OPTIONAL {
    ?person dbo:positionHeld ?position .
    ?position dbo:administration ?administration .
  }
}
```

This query does the following:
- It specifies two individuals using their DBpedia resource identifiers.
- It uses `dbo:positionHeld` to find any positions they held.
- It then attempts to link these positions to an administration via `dbo:administration`.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,11,train,"Give me the player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/team> ?result . }","```sparql
SELECT ?player WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date ;
          rdf:type dbo:Athlete .
  ?person foaf:name ?player .
}
```",2,3,3,2,1,3,3,71,0,9,18,0.0,0.0,0
943,60,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v4 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfParent
WHERE {
  # Step 1: Identify the commander in Siege of Mukha
  ?commander dbo:event dbr:Siege_of_Mukha .
  
  # Step 2: Find the parent who is royalty
  ?parent dbo:spouseOrChild ?commander ;
          a dbo:Monarch .

  # Step 3: Determine the child of this royal parent
  ?childOfParent dbo:spouseOrChild ?parent .

  # Step 4: Identify the father of this child, who is royalty and an office holder
  ?father dbo:spouseOrChild ?childOfParent ;
          a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Step 5: Find the child of Baeda Maryam I
  dbr:Baeda_Maryam_I dbo:spouseOrChild ?grandchild .
  
  # Ensure the father is related to this grandchild
  ?father dbo:spouseOrChild ?grandchild .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,31,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Identify Ackquille Jean Pollard (2 Chainz)
  ?person a dbo:MusicalArtist ;
          foaf:name ""Ackquille Jean Pollard""@en ;
          foaf:name ""2 Chainz""@en .

  # Step 2: Find the musical artists he is associated with
  ?bandMemberRelation dbo:member ?associatedArtist .
  ?person ?bandMemberRelation ?associatedArtist .

  # Step 3: Check if any of those artists are members of GS9
  ?gs9Relation dbo:member ?artist .
  ?associatedArtist ?gs9Relation ?artist .

  FILTER(?artist != ?associatedArtist) # Ensure we get the associated artist, not Ackquille himself
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
225,13,train,Give me the entity in the region of the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the time zone of Kiyosu
  dbr:Kiyosu dbo:timeZone ?timezone .

  # Find regions associated with this time zone
  ?region dbo:timeZone ?timezone .
  
  # Retrieve entities within this region
  ?entity dbo:location ?region .
}
```",3,3,4,3,1,3,2,20,684,4296,8232,0.13734939759036144,0.07671601615074024,0.09844559585492228
816,31,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/property/starring> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?person dbo:placeOfDeath dbr:Los_Angeles ;
          dbo:parent dbr:Amy_Arbus .
  
  ?work dbo:performer ?actor ;
        dbo:starring dbr:Amy_Arbus .

}
```

This query assumes:
- The person who died in Los Angeles has a parent relationship with Amy Arbus.
- There is a work (movie) where Amy Arbus starred, and we want to find the actors of that movie.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,34,train,"Give me the commander in Great Turkish War and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor WHERE {
  # Identify the event (Great Turkish War)
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Great Turkish War""@en .

  # Find Michał Kazimierz Pac's involvement
  ?pacsInvolvement dbo:conflict ?event ;
                   dbo:agent dbr:Michał_Kazimierz_Pac .

  # Identify the commander of this event
  ?commander a dbo:MilitaryPerson ;
             dbo:commanded ?event .

  # Find the successor who is also a politician and office holder
  ?successor a dbo:MilitaryPerson, dbo:Politician ;
             dbo:succeededBy ?commander ;
             dbo:officeHolder true .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
492,15,train,Give me the death place of Sal Mineo and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?actorName ?actorDeathPlace WHERE {
  # Sal Mineo's death place
  dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .

  # The Sky Ranger (1928) cast
  OPTIONAL {
    dbr:The_Sky_Ranger_(film) dbo:starring ?actor .
    
    # Get actor details
    ?actor rdfs:label ?actorName ;
           dbo:deathPlace ?actorDeathPlace .
    
    FILTER(LANG(?actorName) = 'en')
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,0,train,Give me the reference to Mitaka.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ""Mitaka""@en.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
492,24,train,Give me the death place of the actor of Color Me Dead and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?movie ?deathPlace WHERE {
  # For ""Color Me Dead""
  {
    ?movie dbr:Color_Me_Dead .
    ?movie dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace }
  }

  UNION

  # For ""Aladdin (1958 film)""
  {
    ?movie dbr:Aladdin_(1958_film) .
    ?movie dbo:starring ?actor .
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace }
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
293,41,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party ?spouse WHERE {
  # Find Harriette Arlene Lake
  VALUES ?harriette { dbr:Harriette_Arlene_Lake }
  
  # Get her party affiliation in Central, Louisiana
  ?harriette dbo:memberOf ?party .
  ?party dbp:country dbr:United_States ;
         dbp:stateOrProvince dbr:Louisiana ;
         dbp:city dbr:Central,_Louisiana .

  # Find the actor from ""1,000 Dollars a Minute""
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""1,000 Dollars a Minute""@en .
  
  # Get the spouse of that actor
  ?actor dbo:spouse ?spouse .
  
  # Ensure Harriette is the spouse of the actor
  FILTER(?harriette = ?spouse)
}
```

This query attempts to:

- Identify Harriette Arlene Lake and her party membership in Central, Louisiana.
- Find the actor from ""1,000 Dollars a Minute"" and their spouse.
- Ensure that Harriette is indeed the spouse of this actor.

Please note that the success of this query depends on the availability and accuracy of data in DBpedia. If certain information is not available or structured differently, adjustments may be necessary.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
706,0,train,Give me the birthplace of Ebrahim Alkazi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Ebrahim Alkazi. You can find this by searching for his page on DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
557,20,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?collins a dbo:Person ;
           foaf:name ""Cora Sue Collins""@en .
  
  ?work dbo:performer ?collins ;
        a dbo:Work .

  OPTIONAL { 
    ?work dbo:producer ?producer .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,51,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  ?person dbo:honoraryTitle dbr:Gillmore_Medal .

  ?person dbp:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  ?entity rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
68,1,train,"Give me the child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?partner .
  OPTIONAL { ?person dbo:child ?child . }
  FILTER (?person = dbr:Maximilian_I,_Holy_Roman_Emperor)
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
398,3,train,Give me the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  wd:Q159 ""national football team"" schema:aboutCountry wd:Q159 .
  OPTIONAL { wd:Q159 schema:nickName ?nickname . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
585,10,train,Give me the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Shirley Stoler's profession
  dbp:profession dbp:Shirley_Stoler ?shirleysProfession .
  
  # Find other professionals with the same profession
  ?individual dbo:occupation ?shirleysProfession .
  ?individual rdfs:label ?professional .
  
  FILTER(?individual != dbp:Shirley_Stoler)
}
ORDER BY ?professional",2,2,3,2,1,3,2,20,0,0,19241,0,0.0,0
472,12,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration WHERE {
  VALUES ?person { 
    dbr:Christian_IX_of_Denmark 
    dbr:Olaf_I_of_Denmark
  }
  
  OPTIONAL {
    ?person dbo:positionHeld ?position.
    ?position dbo:office ?administration.
    FILTER(?administration != """")
  }

  UNION

  SELECT DISTINCT ?territory WHERE {
    dbr:Copenhagen dbo:administrativeUnitOf ?territory.
  }
}
```

This query does the following:
- It selects resources for Christian IX and Olaf I of Denmark.
- It attempts to find any positions they held (`dbo:positionHeld`) and the offices associated with those positions (`dbo:office`).
- It also retrieves territories administered from Copenhagen using `dbo:administrativeUnitOf`.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
905,22,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child WHERE {
  # Find Charles II of Naples
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .

  # Find the children of the spouse
  ?spouse dbo:child ?child .

  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Check if the child has any connection to Béla IV of Hungary
  OPTIONAL { 
    ?child dbo:parent dbr:Béla_IV_of_Hungary .
  }
}
```

This query does the following:
- Identifies Charles II of Naples and his spouse.
- Finds the children of this spouse.
- Filters these children to ensure they are royalty (i.e., a Monarch).
- Checks if any of these royal children have Béla IV of Hungary as a parent.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
595,30,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:author dbr:Back_to_Work_(2011_book) .
  ?person dbo:militaryCommanderFor ?war .
  
  ?war a dbo:Disease ;
      a dbo:SocietalEvent .

  ?person dbo:nationality dbr:United_States_Navy .
}
```

This query assumes:
- The person is linked to Hillary Clinton as a spouse.
- They authored ""Back to Work"".
- They commanded in a war that is classified both as a disease and a societal event.
- They have an association with the United States Navy.",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
103,4,train,"Give me the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie WHERE {
  ?movie dbo:starring dbr:Richard_E._Grant .
  ?movie rdf:type dbo:TelevisionShow .
}
```",1,2,2,1,1,3,3,71,10,3,0,0.7692307692307693,1.0,0.8695652173913044
595,38,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bookTitle WHERE {
  ?author dbo:birthName ""William Jefferson Blythe III""@en .
  ?author dbo:wikiPageID ?id .
  FILTER(?id = 1234) # ID for Bill Clinton
  ?work dbo:author ?author ;
        a dbo:Book ;
        dbo:title ?bookTitle .
  ?war dbo:name ?warName .
  FILTER(CONTAINS(LCASE(STR(?warName)), ""gulf war"")) .
  ?commander dbo:rank ?rank ;
             dbo:serviceInMilitaryOrganization dbr:United_States_Navy ;
             dbo:participatedInWar ?war .
  FILTER(?rank = ""Commander""@en) .
  ?work dbo:about ?war .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
737,59,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Alexander of Württemberg (1804-1881)
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en ;
             dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear .

  # Child of Alexander
  ?child1 dbo:parent ?alexander .
  
  # Grandchild of Alexander
  ?grandchild1 dbo:parent ?child1 .
  
  # Great-grandchild of Alexander
  ?greatGrandchild dbo:parent ?grandchild1 .

  # Archduchess Helena of Austria
  ?helena a dbo:Person ;
          foaf:name ""Archduchess Helena of Austria""@en .

  # Spouse of Archduchess Helena
  ?spouse dbo:spouse ?helena .
  
  # Child of the spouse
  ?child2 dbo:parent ?spouse .

  # Predecessor of the child of the spouse
  ?predecessor dbo:successor ?child2 .

  # Ensure result is royalty
  ?result a dbo:Monarch ;
          dbo:parent ?greatGrandchild ;
          dbo:parent ?predecessor .
}",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,33,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalParent WHERE {
  # Step 1: Find Edward Stanley's parent
  ?edward dbo:parent ?parent1 .
  
  FILTER(STR(?edward) = ""Edward Stanley, 17th Earl of Derby"")

  # Step 2: Find the child of this parent (Victor Stanley)
  ?parent1 dbo:child ?victorStanley .

  FILTER(STR(?victorStanley) = ""Victor Stanley (Royal Navy officer)"")

  # Step 3: Find the parent of Victor Stanley
  ?victorStanley dbo:parent ?parent2 .

  # Step 4: Find the child of this new parent
  ?parent2 dbo:child ?childOfParent2 .

  # Step 5: Find the final parent and ensure they are a politician and office holder
  ?childOfParent2 dbo:parent ?finalParent .
  
  FILTER EXISTS { ?finalParent dbo:occupation dbp:Politician }
  FILTER EXISTS { ?finalParent dbo:officeHolder true }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,10,train,Give me the spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?charles2 dbo:spouse ?spouse .
  ?stephen5 dbo:child ?spouse .
  
  VALUES ?charles2 { dbr:Charles_II_of_Naples }
  VALUES ?stephen5 { dbr:Stephen_V_of_Hungary }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
414,10,train,Who is the awardee of the reference to Nobel Prize in Physics?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?year ?awardee WHERE {
  ?prize dbo:category dbr:Nobel_Prizes_in_Physics .
  ?prize dbo:year ?year .
  ?prize dbo:laureate ?awardee .
  FILTER(?year >= 2020) # Adjust the year as needed for more recent data
}
ORDER BY DESC(?year)
LIMIT 10
```",2,2,3,2,1,3,2,20,0,0,31,0,0.0,0
414,1,train,Give me the award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  wd:Q1234 dbo:award ?award .
}
```

Note: In this query, `wd:Q1234` should be replaced with the actual DBpedia identifier for Max Born. You can find this by searching for Max Born on DBpedia or using a SPARQL endpoint to retrieve his unique identifier.",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
361,13,train,Give me the professional in the profession of Frédéric Bouraly and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel WHERE {
  # Find Frédéric Bouraly's profession
  ?frédéricBouraly dbo:profession ?profession .
  FILTER (str(?frédéricBouraly) = ""Frédéric_Bouraly"")

  # Find other individuals with the same profession
  ?person dbo:profession ?sameProfession .
  FILTER (?person != ?frédéricBouraly)
  
  # Ensure the professions match
  FILTER (?sameProfession = ?profession)

  # Get labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?personLabel",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
943,13,train,Give me the reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
SELECT ?alterEgo WHERE {
  wd:Q1234568 wdt:P1700 ?alterEgo .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"". You can find this by searching DBpedia or using a SPARQL endpoint to look up the entity.",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
89,37,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Find the child of Saw Shwe Khet who is royalty and predecessor of Myat Hpone Pyo
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch ;
         dbo:predecessor dbr:Myat_Hpone_Pyo .

  # Identify the father of this child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .

  # Find the spouse of the father
  ?spouse dbo:spouse ?father .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
557,29,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Resource for A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
  
  # Filter to find producers associated with Cora Sue Collins
  OPTIONAL { 
    ?producer dbo:profession dbr:Film_producer .
    ?collins dbo:birthName ""Cora Sue Collins""@en ;
             dbo:profession dbr:Actress .
    FILTER(?producer = ?collins)
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
23,7,train,Give me the party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyName WHERE {
  VALUES ?person { 
    dbr:Gustavo_Petro 
    dbr:Roy_Barreras 
  }
  
  ?person dbo:politicalParty ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
249,1,train,Give me the native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:India .
  OPTIONAL { ?person foaf:name ?name . }
}
LIMIT 10
```",1,1,2,1,1,2,2,9,3,17,8974,0.15,0.0003341873677175003,0.0006668889629876625
353,2,train,"Give me the child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile"" ;
          dbo:spouse ?husband .
  
  ?elvira dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
816,11,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring dbr:Herschel_Bernardi .
  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Herschel_Bernardi)
}
```",2,3,3,2,1,3,3,71,66,4,1,0.9428571428571428,0.9850746268656716,0.9635036496350364
737,54,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Step 1: Find a child of Archduchess Margarete Sophie of Austria
    ?child1 dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .

    # Step 2: Find a child of Philipp Albrecht, Duke of Württemberg
    ?child2 dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .

    # Step 3: Trace back three generations from Alexander of Württemberg (1804-1881)
    ?grandchild dbo:parent ?parent1 .
    ?parent1 dbo:parent ?parent2 .
    ?parent2 dbo:parent dbr:Aleksander_W%C3%BCrttemberg .

    # Step 4: Find the predecessor of the grandchild
    ?predecessor dbo:succ ?grandchild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
119,33,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country
WHERE {
  # Identify Alberto Núñez Feijóo
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .
  
  # Find the country of citizenship and residence
  OPTIONAL { 
    dbr:Alberto_Núñez_Feijóo dbo:nationality dbr:Spain .
    dbr:Spain a dbo:Country .
    ?country dbo:officialName ?name .
    FILTER (CONTAINS(LCASE(?name), ""spain""))
  }
}
```

This query does the following:
- Uses `dbo:positionHeld` to find offices held by Alberto Núñez Feijóo.
- Checks his nationality as Spanish and identifies Spain as a country.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
213,12,train,Give me the country of the work of Lao She and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v0 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryLaoShe ?birthPlaceWinstonChang
WHERE {
  # Lao She's work and its country
  dbr:Camel_Xiangzi dbo:location dbr:China .
  dbr:China rdfs:label ?countryLaoShe .

  # Winston Chang's birthplace
  OPTIONAL { 
    dbr:Winston_Chang dbo:birthPlace ?birthPlaceWinstonChang .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,4,train,"Give me the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Find the resource for the Sinking of Prince of Wales and Repulse
  VALUES ?sinkingEvent { dbr:Sinking_of_Prince_of_Wales_and_Repulse }

  # Look for societal events related to this event
  ?sinkingEvent dbo:wikiPageWikiLink ?event .
  
  FILTER (
    # Ensure the event is a military conflict or societal event
    (VALUES ?type { 
      dbr:Military_conflict 
      dbr:Societal_event 
    })
    ?event rdf:type ?type
  )
}
```

This query does the following:
- It identifies the DBpedia resource for the ""Sinking of Prince of Wales and Repulse.""
- It searches for linked events that are categorized as either military conflicts or societal events.
- The `FILTER` clause ensures that only relevant types of events are returned.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
742,11,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of Reneta Kamberova.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusBirthplace ?renetaKamberovaBirthplace WHERE {
  # Assuming Georgi Parvanov as a notable alumnus
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski ;
           foaf:name ""Georgi Parvanov"" .
  
  ?alumnus dbo:birthPlace ?alumnusBirthplace .

  # Reneta Kamberova's birthplace
  dbr:Reneta_Kamberova dbo:birthPlace ?renetaKamberovaBirthplace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
68,4,train,"Who is the commander, that is a royalty, in Siege of Padua?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:eventType dbr:Siege_of_Padua .
  ?event dbo:agent ?commander .
  ?commander a dbo:Monarch ;
             dbo:positionHeld ?position .
}
```

This query does the following:
- It looks for an event of type ""Siege of Padua"".
- It identifies agents (commanders) involved in this event.
- It filters these commanders to those who are also monarchs, indicating royalty.",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
59,5,train,Give me the native of the residence of David Luckman.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find David Luckman's residence
  ?person dbo:name ""David Luckman""@en.
  ?person dbo:residence ?residence.

  # Get the native place of that residence
  ?residence dbo:nativeName ?nativePlace.
}
```",2,2,3,2,1,2,2,9,0,0,971,0,0.0,0
347,42,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:type dbr:Societal_event .
  ?event dbo:relatedEvent dbr:2nd_Dragoon_Regiment_(France) .
  
  ?person dbo:childOf ?father .
  ?father dbo:spouse ?mother .
  ?mother dbr:Cecilia_Renata_of_Austria .

  ?person dbo:parent ?eleonoreFather .
  ?eleonoreFather dbr:Eleonore_of_Austria,_Queen_of_Poland .

  ?commander dbo:commanded ?event .
  ?commander owl:sameAs ?person .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
103,49,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?tvShow dbo:starring dbr:Richard_E._Grant .
  ?tvShow a dbo:TelevisionSeries .
  
  ?character dbo:alterEgoOf ?comicsCharacter .
  ?comicsCharacter rdfs:label ""The Shadow""@en .

  ?tvShow dbo:hasThemeSong ?themeSong .
  ?themeSong dbo:lyrics ?lyrics .
  FILTER(CONTAINS(LCASE(?lyrics), ""shadow""))

  ?actor dbo:starring ?tvShow .
}
```

This query attempts to find a television series starring Richard E. Grant, which has an alter ego related to the comics character ""The Shadow"". It also checks for thematic connections through lyrics or titles.",5,7,6,3,2,3,3,71,0,0,13,0,0.0,0
103,9,train,Give me the actor of Dispatches from Elsewhere and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?series dbo:genre dbc:American_television_dramas .
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .
  ?actor a dbo:Actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
731,14,train,"Give me the war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?event dbo:partOf ?war .
  ?event rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""sinking of prince of wales and repulse""))
}
```",3,5,4,3,1,3,2,20,0,0,12,0,0.0,0
39,0,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
SELECT ?singer WHERE {
  ?singer a dbo:Singer .
}
```",1,1,2,1,1,3,3,71,0,0,10364,0,0.0,0
89,42,train,Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?result WHERE {
  # Min Hla Htut of Pyakaung and his parent
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en .
  
  ?parent dbo:child ?minHlaHtut .

  # Saw Shwe Khet, her spouse, and child
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?spouse dbo:spouse ?sawShweKhet ;
          dbo:child ?child .

  # Predecessor of the child of Saw Shwe Khet
  ?predecessor dbo:successor ?child .

  # Find the child of the parent of Min Hla Htut (i.e., sibling)
  ?parentSibling dbo:child ?sibling .
  
  FILTER(?sibling != ?minHlaHtut)

  # The result is the predecessor of Saw Shwe Khet's child
  BIND(?predecessor AS ?result)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
668,54,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Elorm Kabu Amenyah (Shaggy)
  VALUES (?shaggy) { 
    dbr:Shaggy_(musician) 
  }
  
  # Darryl Paa Kwesi Bannerman-Martin (Cutty Ranks)
  VALUES (?cuttyRanks) {
    dbr:Cutty_Ranks
  }

  # The Live Anthology is associated with Shaggy
  ?theLiveAnthology dbo:artist ?shaggy .
  
  # Find the musical artist who is both a writer of ""The Live Anthology"" and associated with Cutty Ranks
  ?theLiveAnthology dbo:writer ?artist .
  ?collaboration dbo:artist1 ?cuttyRanks ;
                dbo:artist2 ?artist .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,5,train,"Give me the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?person dbo:occupation dbo:Politician ;
          dbo:officeHolder true .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 10",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
943,47,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Find The Shadow as the alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Find a child of Yeshaq I who is royalty
  ?child dbo:parent dbr:Yeshaq_I ;
         a dbo:Monarch .

  # Link the alter ego to the royal child
  ?alterEgo dbo:reference ?child .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
706,7,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?birthPlace WHERE {
  ?person dbo:honoraryTitle dbr:Sangeet_Natak_Akademi_Fellowship .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
782,55,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?realNameThunderbirds ?bandMember ?bandOfMember 
WHERE {
  # Nicholas Michael Curran is known as Nick Curran, a musician
  dbr:Nick_Curran dbo:birthName dbr:Nicholas_Michael_Curran ;
                  dbo:musicalArtist ?artist1 .

  # The Fabulous Thunderbirds' main reference or real name
  dbr:The_Fabulous_Thunderbirds dbo:bandMember ?realNameThunderbirds .

  # Eric Clapton's band member and their associated band
  {
    SELECT DISTINCT ?member WHERE {
      dbr:Eric_Clapton dbo:bandMember ?member .
    }
  } UNION {
    SELECT DISTINCT ?member WHERE {
      dbr:John_Mayall dbo:bandMember ?member . # Example of a band Eric Clapton was part of
    }
  }

  OPTIONAL { ?member dbo:musicalArtist ?bandOfMember . }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
198,59,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force ?war WHERE {
  # Find awards associated with Quincy Adams Gillmore
  ?award dbo:recipient dbr:Quincy_Adam_Gillmore .
  
  # Find the force of the awardee
  OPTIONAL { ?award dbo:recipient ?awardee . }
  OPTIONAL { ?awardee dbo:militaryUnit ?force . }

  # Find wars associated with the awardee
  OPTIONAL {
    ?awardee dbo:participatedInWar ?war .
  }

  # Find awards given by United States Congress
  UNION {
    ?congressAward dbo:issuer dbr:United_States_Congress ;
                   dbo:recipient ?awardee .
    
    # Find the force of the awardee
    OPTIONAL { ?awardee dbo:militaryUnit ?force . }

    # Find wars associated with the awardee
    OPTIONAL {
      ?awardee dbo:participatedInWar ?war .
    }
  }
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
119,41,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find Álvaro Quirós in DBpedia
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  
  # Link to his place of residence, which is also Santiago de Compostela
  ?person dbo:residence dbr:Santiago_de_Compostela .

  # Get the country associated with this residence
  dbr:Santiago_de_Compostela dbo:country ?country .
}
```

This query does the following:
- Identifies Álvaro Quirós as a person in DBpedia.
- Links him to his place of residence, which is Santiago de Compostela.
- Retrieves the country associated with Santiago de Compostela.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,56,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?person dbo:militaryCommandedInWar ?war .
  
  ?war dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot ;
       dbo:partOfEvent dbr:Battle_of_Fort_Royal .

  ?event dbo:relatedMilitaryForce ?militaryForce .
  ?person dbo:militaryCommandedInWar ?event .
  
  FILTER (isLiteral(?militaryForce))
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
38,17,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author1 ?author2 WHERE {
  # Find the author of ""Promises to Keep"" by Joe Biden
  dbr:Promises_to_Keep_(book) dbo:author ?author1 .
  
  # Find the commander in the Korean conflict who authored a written work
  ?commander dbo:officeHolderOf ?office ;
            dbo:positionHeld ?koreanConflict ;
            dbo:writtenWork ?work .
  ?work dbo:author ?author2 .

  FILTER(?koreanConflict = dbr:Korean_War)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
731,9,train,Who is the awardee of the award of Edmund Hakewill-Smith?,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?award dbo:recipient ?person .
  ?award rdfs:label ""Edmund H. W. (Bill) Smith Award""@en .
}
```

This query does the following:
- It uses the `dbo:recipient` property to find individuals who have received an award.
- It filters awards by their label, specifically looking for the ""Edmund H. W. (Bill) Smith Award"" in English.",2,2,3,2,1,3,2,20,0,0,3570,0,0.0,0
203,17,train,"Give me the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?event WHERE {
  ?person dbo:title ""Knight Commander of the Order of the Bath""@en .
  ?person dbo:award ?order .
  ?order dbo:recipient ?person .

  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?force .

  ?force dbo:event ?event .
  ?event a dbo:Event ;
         dbo:socialEvent true .
}
```

This query does the following:

- Selects individuals (`?person`) who have been awarded the title ""Knight Commander of the Order of the Bath.""
- Identifies any force (`?force`) associated with these awardees through their membership in an organization.
- Retrieves events (`?event`) related to this force, ensuring that these events are both general events and societal events.",2,4,3,2,1,3,3,71,0,0,298,0,0.0,0
859,17,train,"Give me the band member of Human Remains (band) and associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find a band member of Human Remains
  ?humanRemainsBand dbo:musicalArtist ?bandMember .
  FILTER(STRSTARTS(LCASE(?humanRemainsBand), ""http://dbpedia.org/resource/human_remains_(band)""))

  # Step 2: Find an associated musical artist of the band member
  ?bandMember dbp:associatedMusicalArtist ?associatedArtist .

  # Step 3: Ensure this associated artist is a musical artist
  ?associatedArtist dbo:type dbc:Musicians .

  # Step 4: Check if they are associated with Khlyst
  OPTIONAL { 
    ?khlystBand dbo:musicalArtist ?associatedArtist .
    FILTER(STRSTARTS(LCASE(?khlystBand), ""http://dbpedia.org/resource/khlyst_(band)""))
  }
  
  # Ensure the associated artist is indeed linked to Khlyst
  FILTER(EXISTS { ?khlystBand dbo:musicalArtist ?associatedArtist })
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
258,3,train,Give me the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate
WHERE {
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
203,59,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Step 1: Identify ""The Triple X's""
  ?tripleX a dbo:MilitaryConflict ;
           dbo:commander ?commander .

  # Step 2: Find the war associated with ""The Triple X's"" and its commander
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?commander .

  # Step 3: Determine the commander in that war
  ?commander dbr:William_Bayne .

  # Step 4: Identify William Bayne as a reference
  ?bayneCommander a dbo:MilitaryConflict ;
                  dbo:commander ?bayneCommander .

  # Step 5: Find the military force of the war associated with William Bayne
  ?bayneCommander dbo:militaryForce ?militaryForce .
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
386,13,train,Give me the war of Karl Gustav von Baggovut and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInBirthPlace
WHERE {
  # Find wars involving Karl Gustav von Baggovut
  ?baggovut dbo:wikiPageID ""Karl_Gustav_von_Baggovut"" .
  ?baggovut dbo:participatedIn ?war .

  # Find birthplace of Elena Žalinkevičaitė-Petrauskienė
  ?elena dbo:birthPlace ?birthPlace .

  # Find an entity in the birthplace
  ?entityInBirthPlace dbo:location ?birthPlace .
  
  FILTER(?baggovut != ?elena) # Ensure they are distinct entities
}
```

This query does the following:
- Identifies wars that Karl Gustav von Baggovut participated in.
- Determines the birthplace of Elena Žalinkevičaitė-Petrauskienė.
- Finds an entity located in her birthplace.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,5,train,"Give me the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1945-03-30""^^xsd:date .
  ?person a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
103,1,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor WHERE {
  ?actor a dbo:Actor .
}
```",1,1,2,1,1,3,3,71,850,4079,20730,0.17244877257050112,0.03938832252085264,0.06412916368025953
871,11,train,Give me the parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?parent WHERE {
  ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
  OPTIONAL { 
    ?awardee dbo:positionHeld ?position .
    ?position dbo:employer ?parent .
  }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
246,1,train,Give me the parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbp:name ""Prince Omar bin Faisal""@en .
  ?person dbo:child ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
468,4,train,Give me the parent of Martin of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?martin { dbr:Martín_of_Aragon }
  ?martin dbo:father ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
347,58,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in Thirty Years' War and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Ferdinand III and his child
  VALUES (?ferdinandIII) { dbr:Ferdinand_III,_Holy_Roman_Emperor }
  ?child dbo:parent ?ferdinandIII .
  
  # Child of Maria Anna of Bavaria (born 1574)
  VALUES (?mariaAnna) { dbr:Maria_Anna_of_Bavaria_(1574-1616) }
  ?grandChild dbo:parent ?mariaAnna .
  ?child2 dbo:parent ?grandChild .

  # Find the father of the child of Ferdinand III
  ?father dbo:spouse ?mother .
  ?mother dbo:parent ?ferdinandIII .
  
  # Ensure the person is royalty
  ?father a dbo:Monarch ;
         rdfs:label ?label .
  
  FILTER(CONTAINS(LCASE(?label), ""royalty""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
59,0,train,Give me the native of Bristol.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"```sparql
SELECT ?native WHERE {
  ?native dbo:birthPlace dbr:Bristol .
}
```",1,1,2,1,1,2,2,9,971,0,0,1.0,1.0,1.0
119,48,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant ?officeEvent
WHERE {
  # Spanish Socialist Workers' Party
  dbr:Spanish_Socialist_Workers'_Party a dbo:PoliticalParty ;
    dbo:leader ?anxoQuintana .

  # Anxo Quintana's role in the administration
  ?anxoQuintana a dbo:Person ;
    foaf:name ""Anxo Quintana""@en ;
    dbo:memberOf ?administration .

  # Administration led by Spanish Socialist Workers' Party
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party ;
    dbo:head ?tenant .

  # Office event related to the leader of the administration
  ?officeEvent a dbo:Event ;
    dbo:agent ?tenant ;
    dbo:subject ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
119,17,train,"Give me the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?party dbo:head ?leader .
  ?leader dbo:positionHeld ?administration .
  FILTER (lang(?partyLabel) = 'en')
}
```

This query does the following:
- It selects administrations (`?administration`) related to the PSOE.
- It identifies the party using its label ""Spanish Socialist Workers' Party"" in English.
- It uses `dbo:head` to find leaders of the party and `dbo:positionHeld` to link those leaders to their administrative roles.",2,3,3,2,1,3,3,71,0,0,320,0,0.0,0
871,23,train,Give me the parent of the awardee of the award of Rodney Lees.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find awards associated with Rodney Lees
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Find the awardee of that award
  ?award dbo:recipient ?awardee .

  # Get the parents of the awardee
  ?awardee dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
225,5,train,"Give me the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?person .
  ?person dbo:nationality dbr:Japan .
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""anita borg institute women of vision award""))
}
```

This query does the following:

- It selects individuals (`?awardee`) who are recipients (`dbo:recipient`) of an award.
- Filters these awards to those related to the Anita Borg Institute Women of Vision Award by checking if the label contains this phrase.
- Ensures that the awardees have Japanese nationality.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
737,28,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the child of Philipp Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Ensure this child is also a child of Archduchess Margarete Sophie of Austria and Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  ?child dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Find the predecessor of this child
  ?predecessor dbo:successor ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
737,2,train,Give me the child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent dbo:spouse ?partner .
  OPTIONAL { ?parent dbo:child ?child . }
  FILTER (?parent = dbr:Margarete_Sophie_of_Austria)
}
```

This query assumes that the `dbo:child` property is used to denote parent-child relationships in DBpedia. It selects individuals who are listed as children of Archduchess Margarete Sophie of Austria.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,8,train,Who is the author of El Deafo?,SELECT ?result WHERE { <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dct:subject dbc:""American children's novels"" .
  ?book dbo:wikiPageRedirects dbpedia:El_Deafo .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
203,60,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Eddie Chapman (Triple Cross) was involved in World War II
  dbr:Eddie_Chapman dbo:spouse ?person .
  
  # Find the military conflict and event, which is World War II
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""World War II""@en .

  # The commander of forces during World War II
  ?commander dbo:rank ?rank ;
             dbo:award ?orderOfBath ;
             dbo:participatedInMilitaryOperation ?operation .
  
  # Ensure the operation is part of World War II
  ?operation dbo:conflict ?event .

  # The commander must have been awarded Knight Commander of the Order of the Bath
  ?orderOfBath rdfs:label ""Knight Commander of the Order of the Bath""@en ;
               dbo:recipient ?commander .
  
  FILTER (lang(?rank) = 'en' && lang(?operation) = 'en')
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
706,9,train,Who is the awardee of the reference to Sangeet Natak Akademi Fellowship?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects dbr:Sangeet_Natak_Akademi_Fellowship .
  ?award dbo:recipient ?person .
  ?person rdfs:label ?awardee .
  FILTER (lang(?awardee) = 'en')
}
ORDER BY ?awardee
LIMIT 100",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
557,9,train,Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?director WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:director ?director .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,25,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?grandfatherURI WHERE {
  # Find Na'od
  ?na'od dbp:name ""Na'od""@en .
  
  # Find his father
  ?father dbo:father ?na'od .

  # Find his grandfather
  ?grandfather dbo:father ?father .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather dbo:royalTitle ?title .
  ?grandfather dbo:positionHeld ?office .
  
  # Return the URI of the grandfather
  BIND(<http://dbpedia.org/resource/Na'od> AS ?na'odURI)
  BIND(?grandfather AS ?grandfatherName)
  BIND(STR(?grandfather) AS ?grandfatherURI)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
158,10,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeLanguage
WHERE {
  # Resource for Alexander II as Grand Duke of Finland
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:positionHeld dbr:Grand_Duke_of_Finland .

  # Find the administration or governance related to his position
  OPTIONAL { 
    ?administration dbo:head dbr:Alexander_II,_Grand_Duke_of_Finland .
    
    # Look for native language information in the administration context
    ?administration dbo:nativeLanguage ?nativeLanguage .
  }
}
```",2,2,3,2,1,2,3,28,0,0,355,0,0.0,0
311,4,train,"Give me the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"```sparql
SELECT ?album WHERE {
  ?album dcterms:creator ""Sappy"" .
  ?album a dbo:Album ;
         rdf:type dbo:MusicalWork, dbo:CreativeWork .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
859,1,train,Give me the associated musical artist of Phantomsmasher.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234567 wdt:P175 ?artist .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Phantomsmasher. You can find this by searching for ""Phantomsmasher"" on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
816,27,train,Give me the parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Find Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  # Find children of the spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Find parents of these children (excluding the spouse)
  ?child dbo:parent ?parent .
  FILTER (?parent != ?spouse)
}
```",3,3,4,3,1,3,3,71,1,0,1,1.0,0.5,0.6666666666666666
737,13,train,Give me the child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Duke Philipp of Württemberg
  ?duke a dbo:Person ;
        foaf:name ""Philipp, Duke of Württemberg""@en .
  
  # Find his children
  ?duke dbo:child ?child .

  # For each child, find their children (grandchildren)
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
295,5,train,Give me the birth place of Victor Saville.,SELECT ?result WHERE { <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q12345 foaf:bornIn ?birthPlace .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Victor Saville. You can find this by searching for Victor Saville on DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,25,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?rogerSpouse ?annSothernBirthName WHERE {
  # Find Roger Pryor (actor) and his spouse
  ?roger a dbo:Actor ;
         foaf:name ""Roger Pryor"" ;
         dbo:spouse ?rogerSpouse .

  # Find Ann Sothern's birth name
  ?annSothern a dbo:Person ;
              foaf:name ""Ann Sothern"" .
  OPTIONAL {
    ?annSothernBirthName a dbo:Person ;
                         foaf:name ?birthName .
    FILTER(?birthName = ""Anne Sothern"") # Assuming her birth name is Anne Sothern
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
258,1,train,Give me the alma mater of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  wd:Q1234568 dbo:almaMater ?almaMater .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Eleonora Menicucci. You can find this by searching her name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
414,14,train,Give me the award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?award
WHERE {
  ?noblePrize a dbo:NobelPrizeInPhysics ;
              dbo:laureate ?awardee .
  
  OPTIONAL {
    ?awardee dbo:award ?award .
  }
}
ORDER BY ?awardee",3,3,4,3,1,3,2,20,0,0,87,0,0.0,0
39,60,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Identify Bob Thompson (musician) by his birth name
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson"" ;
       dbo:birthName ?birthName .

  # Step 2: Find the producer of Coke Studio Philippines
  ?producer a dbo:Producer ;
            dbo:producedWork dbr:Coke_Studio_Philippines .

  # Step 3: Determine if the producer is also a musical artist and find their band
  OPTIONAL {
    ?producer a dbo:MusicalArtist .
    ?band dbo:member ?producer .
  }

  # Step 4: Retrieve the professional in the profession of both the producer and the band
  ?professional a dbo:Professional ;
                dbo:profession ?producer ;
                dbo:profession ?band .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
609,1,train,Give me the birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q1115180 dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,7,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorParadise ?actorAlways WHERE {
  # Find actors for Paradise (2013 film)
  ?paradiseFilm a dbo:Film ;
                rdfs:label ""Paradise""@en .
  ?paradiseFilm dbo:starring ?actorParadise .

  # Find actors for Always (1989 film)
  ?alwaysFilm a dbo:Film ;
              rdfs:label ""Always""@en .
  ?alwaysFilm dbo:starring ?actorAlways .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
943,55,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Bruce Wayne is the alter ego of Batman
  dbr:Bruce_Wayne dbo:alterEgoOf dbr:The_Shadow .
  
  # Find Bruce Wayne's father (Thomas Wayne)
  dbr:Bruce_Wayne dbo:parent dbr:Thomas_Wayne .

  # Find Thomas Wayne's father (Bruce Wayne's grandfather)
  dbr:Thomas_Wayne dbo:parent ?grandfather .

  # The grandfather is a royalty and office holder, related to Na'od
  ?grandfather dbo:childOf dbr:Yeshaq_I .
  ?grandfather dbo:royaltyOrOfficeHolder true .
  
  # Ensure the grandfather is related to Na'od
  ?grandfather dbo:parent dbr:Na'od .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
816,42,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentAmy ?parentChildAllan WHERE {
  # Parent of Amy Arbus
  OPTIONAL {
    ?amyArbus a dbo:Person ;
              foaf:name ""Amy Arbus""@en .
    ?amyParentOfRelation dbo:child ?amyArbus ;
                         dbo:parent ?parentAmy .
  }

  # Child of Allan Arbus and actor in a movie with Herschel Bernardi
  OPTIONAL {
    ?allanArbus a dbo:Person ;
                foaf:name ""Allan Arbus""@en .
    ?childOfAllanRelation dbo:child ?childOfAllan ;
                          dbo:parent ?allanArbus .
    
    ?movie dbo:starring ?childOfAllan, dbr:Herschel_Bernardi .

    # Find the parent of this child
    ?childParentRelation dbo:child ?childOfAllan ;
                        dbo:parent ?parentChildAllan .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,50,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?politicianParent
WHERE {
  # Edward Stanley, 17th Earl of Derby
  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby .
  
  # Children of Edward Stanley
  ?child dbo:parent ?edward .
  
  # Child who is a politician
  ?politicianChild dbp:occupation ""Politician""@en .
  FILTER (?politicianChild = ?child) .

  # Parent of this child (Edward Stanley)
  ?politicianParent dbo:officeHolder ?office .
  FILTER (?politicianParent = ?edward) .

  # Frederick Stanley, 16th Earl of Derby
  ?frederick dbr:Fredrick_Stanley,_16th_Earl_of_Derby .
  
  # Children of Frederick Stanley
  ?childFrederick dbo:parent ?frederick .
  
  # Child who is a politician
  ?politicianChildFrederick dbp:occupation ""Politician""@en .
  FILTER (?politicianChildFrederick = ?childFrederick) .

  # Parent of this child (Frederick Stanley)
  ?fatherFrederick dbo:parent ?politicianChildFrederick .
  
  # Check if the parent is a politician and office holder
  ?fatherFrederick dbp:occupation ""Politician""@en .
  OPTIONAL { ?fatherFrederick dbo:officeHolder ?office2 . }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,23,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person rdfs:label ""Anxo Quintana""@en .
  ?event dbo:agent ?person ;
         a dbo:GovernmentAdministration .
  ?event dbo:positionHeldByAgent ?office .
}
```",3,4,4,3,1,3,3,71,0,0,34,0,0.0,0
347,45,train,"Give me the commander in Thirty Years' War and father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?commander dbo:role ""Commander in the Thirty Years' War""@en .
  
  ?eleonore dbo:father ?commander ;
            a dbo:Queen ;
            foaf:name ""Eleonore of Austria""@en .

  ?mariaAnna dbr:Maria_Anna_of_Bavary_(1574-1616) ;
             dbo:child ?royalty .

  ?royalty dbo:parent ?eleonore .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
293,17,train,Give me the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parentBirthName WHERE {
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling""@en .
  
  OPTIONAL { ?tisha dbo:mother ?mother . }
  OPTIONAL { ?tisha dbo:father ?father . }

  BIND(COALESCE(?mother, ?father) AS ?parent)

  ?parent foaf:name ?birthName .
}
LIMIT 1",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
531,10,train,Give me the office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?tenant WHERE {
  VALUES ?miguelMaura { dbr:Miguel_Maura }
  
  ?miguelMaura dbo:office ?office .
  OPTIONAL { ?office dbo:location ?tenant . FILTER (CONTAINS(LCASE(?tenant), ""madrid"")) }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,1,train,Give me the parent of Kate Dimbleby.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?person dbp:name ""Kate Dimbleby""@en .
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
  OPTIONAL { ?person dbo:child ?child . }
  ?child dbo:parent ?parent .
  ?parent dbp:name ?parentName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
263,2,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne }
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,51,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Tisha Sterling's parent
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling"" .
  
  ?parent dbo:child ?tishaSterling ;
          foaf:name ?parentName .

  # Get the birth name of that parent
  OPTIONAL { ?parent foaf:nick ?birthName . }

  # Find the actor from ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute"" .
  ?actor dbo:starringIn ?movie ;
         foaf:name ?actorName .

  # Find the spouse of that actor
  ?spouse dbo:spouse ?actor .

  # Match the birth name with the parent's birth name
  FILTER (?birthName = ?spouseBirthName)
  
  OPTIONAL { ?spouse foaf:nick ?spouseBirthName . }

  # Return the person whose birth name matches
  ?person foaf:nick ?birthName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
943,49,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandfather WHERE {
  # Baeda Maryam I's child
  ?child1 dbo:parent dbr:Baeda_Maryam_I .
  
  # Yeshaq I's grandchild through a royal parent
  ?royalParent dbo:parent dbr:Yeshaq_I ;
               a dbo:Monarch .
  ?grandchild dbo:parent ?royalParent .

  # Common child between Baeda Maryam I's child and Yeshaq I's grandchild
  FILTER (?child1 = ?grandchild)

  # Father of the common child
  ?father dbo:spouse ?mother ;
          dbo:child ?commonChild .
  
  # The father of this father (the grandfather)
  ?grandfather dbo:parent ?father .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch ;
              dbo:officeHolder ?office .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
89,53,train,Give me the child of the parent of the child of Minye Kyawswa and predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
    # Minye Kyawswa and his child
    ?minyeKyawswa dbo:spouse ?parent1 .
    ?minyeKyawswa dbp:children ?childMinye .

    # Parent of Minye Kyawswa's child
    ?childMinye dbo:parent ?parent2 .

    # Saw Shwe Khet and his child
    ?sawShweKhet dbo:spouse ?spouseSaw .
    ?sawShweKhet dbp:children ?childSaw .

    # Predecessor of Saw Shwe Khet's child
    ?predecessor dbo:succeededBy ?childSaw .

    # The person who is the child of the parent of Minye Kyawswa's child,
    # predecessor of Saw Shwe Khet's child, and spouse of Saw Shwe Khet
    FILTER (?parent2 = ?spouseSaw && ?predecessor = ?spouseSaw)
    
    # The final person we are interested in is the child of parent2 (which is also spouseSaw)
    ?parent2 dbp:children ?child .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
723,1,train,Give me the band member of Stone Sour.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . },"```sparql
SELECT ?member WHERE {
  wd:Q152063 memberOf: wd:Q1348490 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
159,56,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?commander WHERE {
  # Find George Ducas and his successor in the Russo-Polish War context
  ?ducas a dbo:Person ;
         foaf:name ""George Ducas"" ;
         dbo:officeHolderOf ?office .
  
  ?successor a dbo:Politician ;
             dbo:succeededBy ?ducas ;
             dbo:officeHolderOf ?office .

  # Find the commander in the Russo-Polish War
  ?commander a dbo:MilitaryPerson ;
             dbo:participatedInWar dbr:Russo-Polish_War_(1654%E2%80%931667) .
  
  # Connect to the Battle of Vienna context
  ?militaryForce dbo:commandedBy ?commander ;
                 dbo:involvedInBattle dbr:Battle_of_Vienna .

}
```

This query attempts to find:
- A successor to George Ducas who is a politician and office holder in the context of the Russo-Polish War.
- A commander involved in the Russo-Polish War and connected to the Battle of Vienna.

Note: The metaphorical or incorrect parts (television show, societal event) are not directly addressed as they don't fit historical data models. Adjustments might be needed based on actual DBpedia schema availability.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
89,57,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Saw Shwe Khet and their child
  ?sawShweKhet a dbo:Person ;
               dbp:child ?child1 .

  # Spouse of Saw Shwe Khet's father who is royalty
  ?father a dbo:Person ;
          dbp:spouse ?royalSpouse .
  ?sawShweKhet dbp:parent ?father .
  ?royalSpouse a dbo:Monarch .

  # Child of the royal spouse (who is royalty)
  ?royalSpouse dbp:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Predecessor of this royal child
  ?royalChild dbp:parent ?predecessor .

  # Child of Saw Min Hla
  ?sawMinHla a dbo:Person ;
             dbp:child ?child2 .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,10,train,Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en .
  OPTIONAL { ?person dbo:politicalParty dbr:Republican_Party_(United_States) . }
}
```

This query does the following:
- It selects individuals (`?person`) who are of type `dbo:Person`.
- It matches those whose name is ""Harriette Arlene Lake.""
- It optionally checks if they have a political party affiliation with the Republican Party in the United States.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
119,46,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country
WHERE {
  # Find an event where Anxo Quintana was a leader of an administration
  ?event dbo:leader dbr:Anxo_Quintana .
  ?event dbo:positionHeld ?office .

  # Find a country where Álvaro Quirós is a tenant of the residence
  ?country dbo:headOfState ?resident .
  ?resident foaf:name ""Álvaro Quirós"" .
}
```

This query assumes that:
- `dbo:leader` links an event to its leader.
- `dbo:positionHeld` gives the office held by the leader in that event.
- `dbo:headOfState` links a country to its head of state, and we assume Álvaro Quirós is listed as such.

Please note that this query might need adjustments based on the actual structure and data available in DBpedia. The properties used (`leader`, `positionHeld`, `headOfState`) are common but may not perfectly match the exact schema for these individuals.",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
384,1,train,Give me the party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q2074790 dbo:politicalParty ?party .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
246,2,train,"Give me the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?parentLabel WHERE {
  ?person dbo:givenName ""Aisha"" .
  ?person dbo:familyName ""bint Faisal"" .
  ?person dbo:spouse ?spouse . # Assuming spouse information might help in identifying the person
  OPTIONAL { ?person dbp:royalHouse ?house } # To ensure she is related to royalty

  ?parent dbo:child ?person .
  ?parent a dbo:Person .
  ?parent dbo:title ?title .

  FILTER EXISTS {
    ?parent dbo:title ?title .
    ?title rdfs:label ?titleLabel .
    FILTER(CONTAINS(LCASE(?titleLabel), ""king"") || CONTAINS(LCASE(?titleLabel), ""queen"") || 
           CONTAINS(LCASE(?titleLabel), ""prince"") || CONTAINS(LCASE(?titleLabel), ""princess""))
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?parent rdfs:label ?parentLabel .
    FILTER (LANG(?parentLabel) = 'en')
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
295,4,train,Who is the producer of Storm in a Teacup (film)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  dbr:Storm_in_a_Tea_Cup (dbp:filmProducer) ?producer .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
159,48,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find the military conflict associated with Michał Kazimierz Pac
  ?militaryConflict dbo:commander ?paczCommander .
  
  # Ensure Michał Kazimierz Pac is a politician and office holder
  ?paczCommander rdf:type ?type1 .
  FILTER (?type1 IN (dbr:Politician, dbr:OfficeHolder)) .

  # Find the successor of Michał Kazimierz Pac in this military conflict
  ?militaryConflict dbo:successorOf ?successorRole .
  
  # Ensure the successor is a politician and office holder
  ?successorRole rdf:type ?type2 .
  FILTER (?type2 IN (dbr:Politician, dbr:OfficeHolder)) .

  # Find Jean Baptiste d'Arco's role in a television show and societal event
  ?tvShow dbo:commander ?arcoCommander .
  ?societalEvent dbo:commander ?arcoCommander .
  
  # Ensure Jean Baptiste d'Arco is the commander in both contexts
  ?arcoCommander rdfs:label ""Jean Baptiste d'Arco""@en .

  # Link the successor to Jean Baptiste d'Arco's role
  ?successorRole dbo:commander ?arcoCommander .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
80,49,train,Give me the actor of the movie with  and professional in the alter ego of the series of The Golden Master.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> """"@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Assuming ""The Golden Master"" series has an alter ego similar to Batman
  dbr:The_Golden_Master_Alter_Ego dbo:characterName ?alterEgo .
  
  # Find the movie associated with this alter ego
  ?movie dbo:starring ?alterEgo .
  
  # Retrieve the actor who played this role
  ?actor dbo:role ?alterEgo .
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
756,40,train,"Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Manager of SBV Vitesse in the 2020–21 season
  ?vitesseSeason dbo:team dbr:SBV_Vitesse ;
                dbo:season ""2020–21""^^xsd:string .
  
  ?vitesseSeason dbo:manager ?manager .

  # Manager is a native of West Germany
  ?manager dbo:nationality dbr:West_Germany .

  # Manager has managed a player from a club that is a sports club, organisation, and soccer club
  ?player dbo:playsFor ?club .
  ?club rdf:type [ 
    rdf:type dbo:SportsClub ;
            rdfs:subClassOf* dbo:Organisation ;
            rdfs:subClassOf* dbo:SoccerClub ] .

  # Manager has managed this player
  ?manager dbp:managedPlayer ?player .

  # Successor of the 2006–07 VfL Bochum season
  ?bochumSeason dbo:team dbr:VfL_Bochum ;
                dbo:season ""2006–07""^^xsd:string .
  
  ?successorSeason dbo:succeeds ?bochumSeason .

  # The manager is involved in the successor season
  ?successorSeason dbo:manager ?manager .
}",5,11,6,3,3,3,3,71,0,0,1,0,0.0,0
943,19,train,"Give me the reference to  and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentUri ?childName WHERE {
  # Find Yeshaq I and his parents
  VALUES ?yeshaqI { dbr:Yeshaq_I }
  
  ?yeshaqI dbo:father|dbo:mother ?parent .
  
  # Check if the parent is royalty
  OPTIONAL { 
    ?parent dbo:royalHouse ?royalHouse .
  }

  FILTER EXISTS { ?parent dbo:royalHouse ?royalHouse } .

  # Find children of that royal parent
  ?parent dbo:child ?child .
  
  BIND (STR(?parent) AS ?parentUri)
  BIND (STR(?child) AS ?childName)
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
668,35,train,Give me the person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?joeyBBirthName ?stonebwoyArtist WHERE {
  # Find Joey B's birth name
  dbr:Joey_B dbo:birthName ?joeyBBirthName .

  # Find Stonebwoy (Elorm Kabu Amenyah) and his associated musical artist
  dbr:Stonebwoy dbo:birthName ""Elorm Kabu Amenyah""@en ;
                 dbo:musicalArtist ?stonebwoyArtist .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
361,10,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
SELECT ?professional WHERE {
  wd:Q1234568 wdt:P136 ?professional .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"" if it is different. You can find this by searching DBpedia or using a SPARQL endpoint to look up the correct QID.",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
103,36,train,"Give me the actor of Dispatches from Elsewhere and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?character ?profession WHERE {
  # Find the actor in ""Dispatches from Elsewhere""
  ?series dbo:starring ?actor .
  ?actor foaf:name ""Joshua Malina"" .

  # Identify the character's alter ego as a comic book character
  ?series dbo:title ""Dispatches from Elsewhere"" .
  ?character dbo:alterEgo dbr:The_Shadow .
  
  # Find The Shadow's professional role in the video game
  dbr:The_Shadow dbo:profession ?profession .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,5,train,"Give me the reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v1 . }","```sparql
SELECT ?reference WHERE {
  wd:Q1119 rdfs:label ""Mitaka, Tokyo""@en .
  OPTIONAL { 
    ?reference schema:name ""Mitaka, Tokyo"" ;
               schema:about wd:Q1119 .
  }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
295,14,train,Give me the native of the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeLanguage WHERE {
  # Step 1: Identify the film ""Storm in a Teacup""
  ?film dbo:title ""Storm in a Teacup""@en .
  
  # Step 2: Find the producer(s) of that film
  ?film dbo:producer ?producer .

  # Step 3: Determine the birthplace of each producer
  ?producer dbp:birthPlace ?birthPlace .

  # Step 4: Retrieve the native language or nationality associated with each birthplace
  ?birthPlace dbo:nativeLanguage ?nativeLanguage .
}
```",3,3,4,3,1,3,2,20,0,0,4250,0,0.0,0
398,9,train,"Give me the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club ?nickname 
WHERE {
  ?person dbo:nationality dbr:Russia .
  ?person foaf:name ""Denis Kolodin""@en .
  ?person dbo:playsFor ?club .
  OPTIONAL { ?club dbo:nickname ?nickname . }
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
89,56,train,"Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result WHERE {
  # Find Saw Shwe Khet's spouse
  ?sawShweKhet dbo:spouse ?spouse1 .
  
  # Find Min Hla Htut of Pyakaung and their parent
  ?minHlaHtut dbp:birthPlace ""Pyakaung"" ;
              dbo:parent ?parentMinHlaHtut .

  # Find Saw Min Phyu's spouse and the child of that spouse
  ?sawMinPhyu dbo:spouse ?spouse2 .
  ?childOfSpouse dbo:parent ?spouse2 .

  # Find predecessor (likely sibling) of the child
  ?predecessor dbo:sibling ?childOfSpouse .

  # Ensure the result is royalty
  ?result a dbo:Monarch ;
          dbo:spouse ?spouse1 ;
          dbo:parent ?parentMinHlaHtut ;
          dbo:predecessor ?predecessor .
}
```

This query assumes certain relationships and properties are available in DBpedia. Adjustments may be necessary based on the actual data structure and availability of specific properties.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,9,train,Give me the native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:Germany .
  ?person dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(STR(?place)), ""west germany"") || CONTAINS(LCASE(STR(?place)), ""w. germany""))
  OPTIONAL { ?person dbo:managerialCareer ?career . }
  ?career dbo:team dbr:VfL_Bochum .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
293,26,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Find films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Find actors in those films
  ?film dbo:starring ?actor .

  # Get the spouse of each actor
  OPTIONAL { 
    ?actor dbo:spouse ?spouse .
  }
}
```",3,4,4,3,1,3,3,71,62,7,0,0.8985507246376812,1.0,0.9465648854961832
89,50,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Find the child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch .

  # Determine the predecessor of this child
  ?predecessor dbo:successor ?child .

  # Identify the father of this predecessor
  ?father dbo:child ?predecessor .

  # Find the spouse of this father
  ?spouse dbo:spouse ?father .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,4,train,Give me the party of Guillaume Peltier and party of Bruno Retailleau.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Guillaume_Peltier 
    dbr:Bruno_Retailleau
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?person",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
39,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  wd:Q1234568 wdt:P1700 ?alterEgo .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"". You can find this by searching DBpedia or using a SPARQL endpoint to look up the correct QID.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
513,3,train,Give me the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""George H. Cameron""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
39,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?name WHERE {
  ?professional a dbo:Person .
  ?professional dbo:birthPlace dbr:{City} .
  ?professional dbo:occupation dbr:{Industry} .
  ?professional foaf:name ?name .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
419,8,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship and entity in Andhra Pradesh.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?scientist ?almaMater WHERE {
  ?scientist a dbo:Scientist ;
             dbo:nationality dbr:Australia ;
             dbo:award dbr:Australian_Laureate_Fellowship .
  
  ?scientist dbo:affiliation ?entity .
  ?entity dbp:location dbr:Andhra_Pradesh .

  ?scientist dbo:almaMater ?almaMater .
}
```

This query does the following:
- Filters scientists (`dbo:Scientist`) who are Australian nationals and have received the `Australian Laureate Fellowship`.
- Ensures these scientists have an affiliation with an entity located in Andhra Pradesh.
- Retrieves their alma mater.",3,5,4,2,2,2,2,9,0,0,2,0,0.0,0
203,46,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # William Bayne's military involvement
  ?bayne dbo:militaryConflict ?conflict1 .
  ?bayne a dbr:William_Bayne_(Royal_Navy_officer) .

  # The Triple X's military involvement
  ?tripleX dbo:militaryConflict ?conflict2 .
  ?tripleX rdfs:label ""The Triple X""@en .  # Assuming ""The Triple X"" is the label

  # Find common military force or conflict
  FILTER (?conflict1 = ?conflict2)
  
  # Get the military force involved in the conflict
  ?conflict1 dbo:militaryForce ?militaryForce .
}
```

This query assumes:
- William Bayne's involvement can be found under his DBpedia resource.
- ""The Triple X"" is a known figure with a label that matches this description.
- The conflicts they were involved in are linked to a military force.",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
158,16,train,"Give me the person decedent at Switzerland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Russia .
  ?person dbo:deathPlace dbr:Switzerland .
}
```

This query selects individuals (`?person`) who have a nationality of Russia and died in Switzerland.",3,4,4,2,2,2,3,28,0,0,36,0,0.0,0
943,21,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Yeshaq I is a parent of the child we are looking for
  ?yeshaq dbo:spouse ?parent .
  ?parent dbo:child ?child .

  # The child must be royalty
  ?child rdf:type dbo:Monarch .

  # The child is also the father of Baeda Maryam I
  ?child dbo:child dbr:Baeda_Maryam_I .
  
  # Ensure Yeshaq I is correctly identified
  ?yeshaq rdfs:label ""Yeshaq I""@en .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
943,22,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?dawitI dbo:spouse ?parentNa'od .
  ?dawitI rdf:type dbo:Monarch .

  ?childOfDawitI dbo:spouse ?na'odParent .
  ?childOfDawitI rdf:type dbo:Monarch .
  ?childOfDawitI dbp:officeHolder ""true""^^xsd:boolean .

  ?parentNa'od dbo:child ?na'od .
  
  FILTER (?dawitI = <http://dbpedia.org/resource/Dawit_I_of_Ethiopia>)
}
```

This query assumes:
- Dawit I is linked to Na'od's parent through a spouse relationship.
- The child of Dawit I is also the father of Na'od's father.
- The person in question holds both royalty and office holder roles.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
159,36,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?commander WHERE {
  # Find the successor of Yurii Khmelnytsky
  dbr:Yuri_Khmelnytskyy dbo:succeededBy ?successor .

  # Find the commander of the Battle of Vienna, which is also a TV show and societal event
  dbr:Battle_of_Vienna dbo:commander ?commander .
  
  FILTER EXISTS {
    ?commander dbo:wikiPageDisambiguates dbr:John_Sobieski .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
531,45,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy and tenant of Madrid.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?miguelPartyLeaderOffice ?marianoRajoyOffice ?tenantOfMadrid
WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura dbo:party dbr:Miguel_Maura .
  
  # Find the leader of that party and their office
  ?miguelPartyLeader dbo:leaderOf ?miguelMaura ;
                    dbo:office ?miguelPartyLeaderOffice .

  # Find Mariano Rajoy's office
  ?marianoRajoy dbo:office ?marianoRajoyOffice .
  
  # Find the tenant of Madrid (assuming this refers to a political leader or entity)
  ?tenantOfMadrid dbo:location dbr:Madrid ;
                  dbo:office ?tenantOffice .

}
```

This query assumes:
- Miguel Maura's party can be found through his DBpedia resource.
- The leader of that party and their office are linked via `dbo:leaderOf` and `dbo:office`.
- Mariano Rajoy's office is directly accessible from his DBpedia resource.
- The tenant of Madrid refers to a political entity or person with an office in Madrid.

Please note that the exact structure and availability of these properties might vary, so adjustments may be necessary based on actual DBpedia data. Additionally, ensure that the resources like `dbr:Miguel_Maura` are correctly linked in DBpedia for accurate results.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
119,16,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of the commander in French Revolutionary Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find Dawid Olejniczak and his residence
  ?olejniczak a dbo:Person ;
              foaf:name ""Dawid Olejniczak""@en .
  
  OPTIONAL { 
    ?olejniczak dbo:nationality ?nationality . 
    ?nationality rdfs:label ?countryLabel .
    FILTER (lang(?countryLabel) = 'en')
  }
  
  # Check if he was a commander in the French Revolutionary Wars
  OPTIONAL {
    ?olejniczak dbo:occupation ?occupation .
    ?occupation rdfs:label ?occupationLabel .
    FILTER (CONTAINS(LCASE(?occupationLabel), ""commander"") && CONTAINS(LCASE(?occupationLabel), ""french revolutionary wars""))
  }
  
  # Ensure the country is a recognized entity
  OPTIONAL {
    ?country dbr:Category:Countries .
  }

  FILTER EXISTS { ?olejniczak dbo:nationality ?nationality } 
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
89,12,train,Give me the spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?predecessor
WHERE {
  # Assuming we have specific DBpedia resources for these individuals
  VALUES (?sawShweKhet) { <http://dbpedia.org/resource/Saw_Shwe_Khet> }
  VALUES (?myatHponePyo) { <http://dbpedia.org/resource/Myat_Hpone_Pyo> }

  # Find the spouse of Saw Shwe Khet
  ?sawShweKhet dbo:spouse ?spouse .

  # Find the predecessor of Myat Hpone Pyo
  ?myatHponePyo dbo:predecessor ?predecessor .
}
```

This query assumes that `Saw Shwe Khet` and `Myat Hpone Pyo` have specific DBpedia resources. You may need to adjust the resource URIs based on actual data in DBpedia.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,16,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Find children of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?person dbo:spouse|dbo:partner dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne .
  ?child dbo:parent ?person .

  # Find parents of each child
  ?child dbo:parent ?parent .
  
  # Filter children who are native to Middlesex
  ?child dbo:nativePlace dbr:Middlesex .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
943,4,train,"Who is the parent, that is a royalty, of Yeshaq I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?child dbo:spouse|dbo:partner ?yeshaq1 .
  ?yeshaq1 rdfs:label ""Yeshaq I""@en .
  FILTER NOT EXISTS { ?yeshaq1 dbo:spouse|dbo:partner ?child } # Ensure Yeshaq I is the child, not spouse/partner
  ?child dbo:parent ?parent .
  ?parent dbp:title ?title .
  FILTER regex(?title, ""King|Queen|Emperor|Empress"", ""i"") # Filter for royalty titles
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,54,train,"Give me the person born as Harriette Arlene Lake and spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake"" .
  
  ?spouse dbo:spouse ?actor .
  ?actor dbo:actedIn ?film .
  ?film dbo:producer dbr:Nat_Levine .

  ?person dbo:spouse ?spouse .

  ?partyMember dbo:memberOf ?rulingParty .
  ?rulingParty dbp:location dbr:Caddo_Parish,_Louisiana .
  ?person dbo:memberOf ?partyMember .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,7,train,"Give me the region of Japan Standard Time and reference to the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?region ?mitakaReference WHERE {
  ?timeZone dcterms:isPartOf ?region .
  FILTER(STR(?timeZone) = ""Japan Standard Time"")
  
  OPTIONAL { 
    ?place rdfs:label ?mitakaLabel .
    FILTER (LANG(?mitakaLabel) = 'en' && STR(?mitakaLabel) = ""Mitaka, Tokyo"") 
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?place), "" "", ""_""))) AS ?mitakaReference)
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
414,15,train,"Give me the award of Max Born and show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?maxBornAward ?rainerWeissHostInstitution
WHERE {
  # Max Born and his award
  dbr:Max_Born a dbo:Person .
  OPTIONAL { 
    ?maxBornAward dbo:recipient dbr:Max_Born ;
                  dbo:name ?awardName .
  }

  # Rainer Weiss and the host institution of his award
  dbr:Rainer_Weiss a dbo:Person .
  OPTIONAL {
    ?rainerWeissAward dbo:recipient dbr:Rainer_Weiss ;
                      dbo:hostInstitution ?hostInstitution ;
                      dbo:name ?awardName .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
756,44,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?teamName ?countryName
WHERE {
  # Thomas Letsch's management roles
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  ?letsch dbo:managerOfTeam ?team .

  # VfL Bochum as one of the teams
  ?bochum dbr:VfL_Bochum ;
          rdfs:label ?teamName .

  FILTER(?team = ?bochum)

  # Theodor Heuss's native country
  ?heuss a dbo:Person ;
         foaf:name ""Theodor Heuss""@en .
  
  ?heuss dbo:nationality ?country .

  ?country dbo:administrativeRegion ?adminRegion .

  ?adminRegion rdfs:label ?countryName .

  # Linking manager to the team
  ?letsch dbo:managerOfTeam ?bochum ;
          foaf:name ?managerName .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
361,5,train,"Give me the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?album a dbo:Album .
  ?album dbo:artist dbr:Lasso_the_Moon .
  ?film a dbo:Film .
  ?film dbo:basedOnWork ?album .
  ?work a dbo:CreativeWork .
  ?work dbo:isVersionOf ?album .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
198,55,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInBirthplace ?gillmoreAwardeeWar ?medalOfHonorAwardeeWar
WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:nationality dbr:United_States ;
                       dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .

  # Find an American entity related to this place
  ?entityInBirthplace dbo:nationality dbr:United_States ;
                     dbo:location ?birthPlace .

  # Gillmore Medal awardee and their war
  ?gillmoreAwardee dbp:award ""Gillmore Medal"" ;
                   dbo:participatedInWar ?gillmoreAwardeeWar .

  # Medal of Honor awardee and their war
  ?medalOfHonorAwardee dbp:award ""Medal of Honor"" ;
                      dbo:participatedInWar ?medalOfHonorAwardeeWar .
}",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,23,train,Give me the associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person dbo:birthName ""Pacely""@en .
  ?person dbo:musicalArtist ?artist .
}
```

This query assumes that the person with the birth name ""Pacely"" has a `dbo:musicalArtist` property in DBpedia. If ""Pacely"" is not directly associated with a musical artist, you might need to adjust the properties or explore related resources.",3,3,4,3,1,3,3,71,0,0,7,0,0.0,0
119,26,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  ?person dbo:nationality dbr:Spain .
  ?person dbo:country dbr:Spain .
  ?person dbo:residence ?residence .
  
  FILTER (isLiteral(?residence) && regex(str(?residence), ""Country"", ""i""))
  
  OPTIONAL { 
    ?residence dbo:tenant ?tenant .
  }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT DISTINCT ?tenant**: We want to find distinct tenants.
- **?person dbo:nationality dbr:Spain .**: This line filters individuals who are citizens of Spain.
- **?person dbo:country dbr:Spain .**: Ensures the person is from Spain.
- **?person dbo:residence ?residence .**: Retrieves the residence information for these individuals.
- **FILTER (isLiteral(?residence) && regex(str(?residence), ""Country"", ""i""))**: Filters residences that are countries. This uses a simple regex to check if the residence is labeled as a country.
- **OPTIONAL { ?residence dbo:tenant ?tenant . }**: Attempts to find tenant information for these residences.

This query assumes that the data model in DBpedia includes properties like `dbo:nationality`, `dbo:country`, `dbo:residence`, and `dbo:tenant`. Adjustments might be necessary based on actual schema details.",3,5,4,3,1,3,3,71,0,0,1184,0,0.0,0
87,19,train,"Give me the spouse of Janusz Kamiński and actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbo:spouse ?spouse .

  # Spouse is an actor in ""Always"" (1989)
  ?spouse dbo:film ?alwaysFilm .
  ?alwaysFilm rdfs:label ?alwaysLabel .
  FILTER(CONTAINS(LCASE(?alwaysLabel), ""always 1989""))

  # Spouse is an actor with Iliza Shlesinger
  ?ilizaShlesingerMovie dbo:starring ?spouse ;
                       dbo:starring dbr:Iliza_Shlesinger .

  # Ensure the movie is both a work and a film
  ?ilizaShlesingerMovie rdf:type dbo:Film .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
80,26,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find songs by T.I.
  ?song dbo:artist dbr:T.I. ;
        a dbo:Song .

  # Find albums these songs belong to
  ?album dbo:song ?song ;
         a dbo:Album .

  # Find actors associated with these albums
  ?album dbp:actor ?actor .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
375,12,train,Give me the entity in Japan and war of Hashiba Hidekatsu and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?war WHERE {
  VALUES ?person { 
    dbr:Hashiba_Hidekatsu 
    dbr:Toyotomi_Hidenaga
  }
  
  ?person dbo:nationality dbr:Japan .
  ?event dbo:participant ?person ;
         a dbo:MilitaryConflict .

  BIND(?event AS ?war)
  BIND(?person AS ?entity)
}
```

This query does the following:
- It selects entities (people) and wars they participated in.
- It specifically looks for Hashiba Hidekatsu and Toyotomi Hidenaga, ensuring they are Japanese nationals.
- It filters events to those classified as military conflicts where these individuals were participants.",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
628,39,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award ?band
WHERE {
  # Ackquille Jean Pollard
  VALUES ?person { dbr:Ackquille_Jean_Pollard }
  
  # Award associated with a region and American state that is also a settlement
  ?award dbo:recipient ?person .
  ?award dbo:placeAwarded ?location .
  ?location rdf:type dbo:Place ;
            dbo:country dbr:United_States_of_America ;
            dbo:stateOrProvince dbr:New_York_(state) .

  # Awardee as a band from New York (state)
  ?award dbo:recipient ?band .
  ?band dbo:location dbr:New_York_City ; # Assuming the band is from New York City
        rdf:type dbo:Band .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,50,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/property/birthName> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:birthPlace dbr:Florida .
  ?person foaf:name ?name .
  
  OPTIONAL { ?coro dbo:awardRecipient ?recipient . }
  FILTER EXISTS {
    ?recipient dbo:nativeCountry dbr:Puerto_Rico ;
               dbo:nativeRegion dbr:Puerto_Rico .
  }

  ?coro rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
}
```",5,10,6,3,2,3,3,71,0,0,59,0,0.0,0
311,9,train,"Who is the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song)?",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Identify ""Lotus (R.E.M. song)""
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Step 2 & 3: Find producers that are organizations and also bands or groups
  ?producer a dbo:Band ;
           a dbo:MusicalGroup ;
           a dbo:Organization .

  # Step 4: Find associated musical artists of these producers
  ?producer dbo:associatedMusicalArtist ?artist .
}
```",2,6,3,2,1,3,2,20,0,0,2,0,0.0,0
595,23,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/author> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Identify Hillary Clinton's works
  ?work dbo:author dbr:Hillary_Clinton ;
        a dbo:Book .

  # Ensure the author is a politician and an office holder
  OPTIONAL { dbr:Hillary_Clinton dbo:officeHolderOf ?office . }
  FILTER EXISTS { dbr:Hillary_Clinton dbo:politicalParty ?party } 

  # Find spouse information
  OPTIONAL { dbr:Hillary_Clinton foaf:mbox ?email . }
  OPTIONAL { dbr:Hillary_Clinton foaf:name ""Hillary Clinton""@en . }
  
  # Assuming the spouse is linked via a relationship in DBpedia
  OPTIONAL { dbr:Hillary_Clinton dbo:spouse ?spouse . }

}
```

This query does the following:
- Selects works authored by Hillary Clinton that are classified as books.
- Checks if she holds an office and is associated with a political party, confirming her status as a politician and office holder.
- Attempts to find information about her spouse using DBpedia's structured data.",3,7,4,3,1,3,3,71,0,0,1,0,0.0,0
943,56,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I's child
  ?baedaChild dbo:parent dbr:Baeda_Maryam_I ;
              dbo:childOf ?baedaParent .

  # Yeshaq I's parent who is royalty and their child
  ?yeshaqParent dbo:royalty true ;
                dbo:parent dbr:Yeshaq_I ;
                dbo:childOf ?yeshaqGrandparent .
  
  ?yeshaqChild dbo:parent ?yeshaqParent .

  # Find the grandfather (father of the father) who is royalty and an office holder
  ?baedaParent dbo:parent ?grandfather .
  ?yeshaqGrandparent dbo:parent ?grandfather .

  FILTER (?grandfather != dbr:Baeda_Maryam_I && ?grandfather != dbr:Yeshaq_I)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
78,5,train,Give me the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # David Paton is a musician (P106)
    wdt:P175 ?artist. # associated with musical artist (P175)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for David Paton.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
143,15,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro and associated musical artist of Cynthia Morgan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?show WHERE {
  ?show dbo:starring dbr:Afeez_Oyetoro .
  ?show dbo:musicalArtist dbr:Cynthia_Morgan .
  ?show a dbo:Film .
  ?show a dbo:TelevisionShow .
  ?show dbo:starring ?actor .
}
```

This query attempts to find a show that is both a film and a television show, starring Afeez Oyetoro, with Cynthia Morgan as the musical artist. It then retrieves the actors associated with this show.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
263,12,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Mary Elphinstone, Lady Elphinstone details
  ?maryElphinstone a dbo:Person ;
                  foaf:name ""Mary Elphinstone"" ;
                  dbo:nationality dbr:United_Kingdom ;
                  dbo:birthPlace dbr:Middlesex .

  # Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne details
  ?patrickBowesLyon a dbo:Person ;
                    foaf:name ""Patrick Bowes-Lyon"" ;
                    dbo:title dbr:15th_Earl_of_Strathmore_and_Kinghorne .

  # Finding the parent of Mary Elphinstone, Lady Elphinstone
  ?maryElphinstone dbo:parent ?parent .

  # Ensuring this person is also a parent of Patrick Bowes-Lyon
  ?patrickBowesLyon dbo:parent ?parent .
}
```",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
293,53,train,Give me the person born as the birth name of Ann Sothern and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Ann Sothern's birth name
  VALUES (?annSothern) { dbr:Ann_Sothern }
  ?annSothern dbo:birthName ?birthName .

  # Find the landmark with elevation 20.1168
  ?landmark a dbo:Lighthouse ;
            dbp:elevation ""20.116800000000001347""^^xsd:float .
  
  # Determine the country of this landmark and its ruling party
  ?landmark dbo:locationCountry ?country .
  ?country dbo:rulingParty ?rulingParty .

  # Find Roger Pryor's spouse
  VALUES (?rogerPryor) { dbr:Roger_Pryor_(actor) }
  ?rogerPryor dbp:spouse ?spouse .

  # Match the person who is both Ann Sothern's birth name and Roger Pryor's spouse
  FILTER(?birthName = ?spouse)
  
  # Ensure this person is a member of the ruling party
  ?person dbo:memberOf ?rulingParty .
  FILTER(?person = ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
198,27,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplaceEntity WHERE {
  ?person a dbo:Person ;
          dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:United_States_of_America .
  
  ?birthPlace rdfs:label ?birthplaceEntity .
}
```

This query does the following:
- Selects entities (`?birthplaceEntity`) that are settlements in America.
- Filters for persons who died on August 5, 1850.
- Retrieves their birthplaces and ensures these places are settlements within the United States.",3,5,4,3,1,3,3,71,0,0,12,0,0.0,0
270,7,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low and person decedent at Melbourne.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ada Jane Low""@en ;
          dbo:birthName ""Ada Jane Low"" ;
          dbo:deathPlace dbr:Melbourne, Victoria .

  OPTIONAL { 
    ?person dbo:politicalParty ?party .
    FILTER EXISTS { ?party a dbo:PoliticalParty }
  }

  ?predecessor dbo:successor ?person .
}
```

This query does the following:
- Identifies the person with the birth name ""Ada Jane Low"" who died in Melbourne.
- Checks if they were involved in politics by looking for an association with a political party.
- Finds their predecessor using the `dbo:successor` property.",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
737,44,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Archduke Charles Louis of Austria's children
  ?parent1 dbo:spouse ?archduke .
  ?archduke foaf:name ""Charles Louis, Archduke of Austria"" ;
            dbo:child ?child .

  # Child of the child (grandchild) who is royalty
  ?child dbo:child ?grandchild .
  ?grandchild a dbo:Monarch .

  # Predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor dbr:Claude,_Duke_of_W%C3%BCrttemberg ;
               a dbo:Monarch .
  FILTER (?grandchild = ?predecessor)

  # Child of the child of Duke Philipp of Württemberg
  ?parent2 dbo:spouse ?dukePhilipp .
  ?dukePhilipp foaf:name ""Philip, Duke of Württemberg"" ;
               dbo:child ?childOfDuke .
  ?childOfDuke dbo:child ?grandchild .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
595,29,train,"Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?commander ?book WHERE {
  # Spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse dbr:Bill_Clinton .
  
  # Commander in Third Taiwan Strait Crisis (U.S. President)
  FILTER EXISTS { 
    dbr:Third_Taiwan_Strait_Crisis dbo:commander dbr:Bill_Clinton .
  }
  
  # Book authored by Bill Clinton
  OPTIONAL {
    ?book a dbo:Book ;
          dbo:author dbr:Bill_Clinton .
    FILTER (CONTAINS(LCASE(str(?book)), ""my_life"") || CONTAINS(LCASE(str(?book)), ""back_to_work""))
  }
}
```",4,7,5,2,3,3,3,71,0,2,1,0.0,0.0,0
557,60,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?producer WHERE {
  # Find Kent Allard's fictional character
  ?character dbo:creator dbr:Kent_Allard ;
             rdfs:label ?characterLabel .
  
  FILTER(CONTAINS(LCASE(?characterLabel), ""print"")) .

  # Find the actor of High Society Blues
  ?work dbo:actor ?actor ;
        rdfs:label ?workLabel .
  
  FILTER(CONTAINS(LCASE(?workLabel), ""high society blues"")) .

  # Find the producer related to the work or movie involving this actor
  OPTIONAL {
    ?work dbo:producer ?producer .
  }

  # Get Kent Allard's professional identity
  dbr:Kent_Allard dbo:profession ?professional .
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
905,15,train,"Give me the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          dbp:name ""Philip, Despot of Romania""@en .
  
  # Step 2: Find his parent who is royalty
  ?parent dbo:child ?philip ;
          a dbo:RoyalFamilyMember .

  # Step 3: Determine that parent's father
  ?grandfather dbo:spouse ?parent ;
               dbo:child ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
782,28,train,Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName WHERE {
  # The Fabulous Thunderbirds
  OPTIONAL { 
    dbr:The_Fabulous_Thunderbirds dbo:bandMember ?member .
    ?member foaf:name ?realName .
  }
  
  # Nick Curran
  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedBand ?band .
    ?band foaf:name ""The Fabulous Thunderbirds"" .
    ?band dbo:bandMember ?curranMember .
    ?curranMember foaf:name ?realName .
  }
  
  # Kim Wilson's band
  OPTIONAL { 
    dbr:Kim_Wilson dbo:associatedBand ?wilsonBand .
    ?wilsonBand foaf:name ""The Fabulous Thunderbirds"" .
    ?wilsonBand dbo:bandMember ?wilsonMember .
    ?wilsonMember foaf:name ?realName .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
871,45,train,"Give me the parent of Victor Stanley (Royal Navy officer) and father of the child, that is a politician, of the alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentVictorStanley ?fatherPolitician WHERE {
  # Victor Stanley (Royal Navy officer)
  ?victorStanley a dbo:Person ;
                 foaf:name ""Victor Stanley"" ;
                 dbo:spouse ?spouseVictor .
  
  # Parent of Victor Stanley
  OPTIONAL { ?spouseVictor dbo:child ?parentVictorStanley . }
  OPTIONAL { ?victorStanley dbo:child ?parentVictorStanley . }

  # Alumnus of Eton College and parent of Edward Stanley, 17th Earl of Derby
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Eton_College ;
           dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .
  
  # Child that is a politician
  ?politicianChild a dbo:Politician ;
                  dbo:parent ?alumnus .

  # Father of the politician child
  OPTIONAL { ?politicianChild dbo:father ?fatherPolitician . }
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,31,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?parent ?child 
WHERE {
  # Find commanders in the Siege of Mukha who are royalty
  ?event dbo:eventType dbr:Siege_of_Mukha .
  ?event dbo:commander ?commander .
  ?commander a dbo:Monarch .

  OPTIONAL {
    # Find parent of the commander if they have one
    ?commander dbo:parent ?parent .
  }

  OPTIONAL {
    # Find children of the parent
    ?parent dbo:child ?child .
  }
}",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
419,5,train,Give me the entity in the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplaceEntity WHERE {
  VALUES ?person { dbr:Yandamuri_Veerendranath }
  ?person dbo:birthPlace ?birthplace.
  ?birthplace a ?birthplaceEntity.
}
```",2,2,3,2,1,2,2,9,0,10,166,0.0,0.0,0
103,23,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find Richard Grant Esterhuysen
  dbr:Richard_Grant_Esterhuysen dbo:birthName ""Richard Grant Esterhuysen"" .
  
  # Find movies or TV shows he acted in
  dbr:Richard_Grant_Esterhuysen dbo:actedIn ?work .

  # Ensure the work is a television show
  ?work rdf:type dbo:TelevisionShow .

  # Get other actors from these works
  ?work dbo:starring ?actor .
  
  FILTER(?actor != dbr:Richard_Grant_Esterhuysen)
}
```",3,4,4,3,1,3,3,71,0,0,53,0,0.0,0
816,41,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?actor ?movie WHERE {
  # Find Doon Arbus and her parent
  dbr:Doon_Arbus dbo:parent ?parent .

  # Find movies where Herschel Bernardi acted
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Find the actor in those movies who is also a parent of Doon Arbus
  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Doon_Arbus) .

  # Ensure this actor is also a parent of a professional photographer
  ?photographer dbo:parent ?actor ;
               rdf:type dbo:Photographer .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,0,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
SELECT ?person WHERE {
  ?party dcterms:isPartOf <http://dbpedia.org/resource/United_States>;
         dbo:member ?person.
  FILTER EXISTS { ?party skos:prefLabel ""Republican Party""@en }
}
```",1,1,2,1,1,3,3,71,0,0,21486,0,0.0,0
198,19,train,Give me the war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:award ""Medal of Honor""@en .
  ?person rdfs:label ""Quincy Adams Gillmore""@en .
  ?person dbo:servedInMilitaryOrganization ?organization .
  ?organization dbo:participatedInWar ?war .
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
585,14,train,Give me the child of the professional in the profession of Shirley Stoler.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Shirley Stoler's profession
  ?shirley a dbo:Person ;
           foaf:name ""Shirley Stoler""@en .
  
  ?shirley dbo:profession ?profession .

  # Find entities with the same profession
  ?person a dbo:Person ;
          dbo:profession ?profession .

  # Ensure it's not Shirley herself
  FILTER (?person != ?shirley)

  # Get children of these persons
  ?person dbp:child ?child .
}
```",3,3,4,3,1,3,2,20,0,0,935,0,0.0,0
353,54,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of the parent of Roger III, Duke of Apulia and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Elvira of Castile and her child
  ?elvira dbr:Elvira_of_Castile .
  ?elvira dbo:child ?child .

  # Roger III, Duke of Apulia's parent and their child who is royalty
  ?roger dbr:Roger_III,_Duke_of_Apulia .
  ?parent dbo:child ?roger .
  ?parent dbo:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch .

  # Reference to William I, finding a person who is both royalty and an office holder
  ?william dbr:William_I_of_Sicily .
  ?officeHolder dbo:monarch ?william ;
                a dbo:OfficeHolder ;
                a dbo:Monarch .
  
  # Find the intersection of these relationships
  FILTER (?child = ?royaltyChild && ?child = ?officeHolder)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,22,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?administeredTerritory1 ?administeredTerritory2
WHERE {
  # Step 1: Find Christian Ditlev Ammentorp Hansen's death place
  ?hansen dbr:Christian_Ditlev_Ammertorp_Hansen .
  ?hansen dbo:deathPlace ?deathPlace .

  # Step 2: Check if the death place is a settlement and find its administered territory
  OPTIONAL {
    ?deathPlace rdf:type dbo:Settlement .
    ?deathPlace dbo:administrativeTerritory ?administeredTerritory1 .
  }

  # Step 3: Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck's birth place
  ?prince dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck .
  ?prince dbo:birthPlace ?birthPlace .

  # Step 4: Check if the birth place is a settlement and find its administered territory
  OPTIONAL {
    ?birthPlace rdf:type dbo:Settlement .
    ?birthPlace dbo:administrativeTerritory ?administeredTerritory2 .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
472,4,train,"Who is the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  ?person dbo:title ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```

This query does the following:
- It uses `dbo:Person` to ensure we are querying about a person.
- It looks for an individual with the title ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck"".
- It optionally retrieves the birth date if available.",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
119,61,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://dbpedia.org/property/leaderParty> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?party dbo:member ?administration .
  ?administration dbo:leader ?tenant .
  
  FILTER (str(?party) = ""Spanish_Socialist_Workers'_Party"")
  
  ?tenant dbo:nationality dbr:Spain .
  ?tenant dbo:residence ?country .
  FILTER EXISTS { ?country a dbo:Country }
}
```

This query does the following:
- Identifies an administration (`?administration`) that is associated with the Spanish Socialist Workers' Party.
- Finds the leader (`?tenant`) of this administration.
- Ensures the tenant's nationality is Spain.
- Checks if the tenant's residence is a country.",6,9,7,3,2,3,3,71,0,0,23,0,0.0,0
941,5,train,Who is the spouse of Duchess Luise of Brunswick-Wolfenbüttel?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Luise_of_Brunswick-Wolfenb__t_tel dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,18,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceCarolynJones ?deathPlaceAladdinActor
WHERE {
  # Carolyn Jones
  dbr:Caryn_Jones dbo:deathPlace ?deathPlaceCarolynJones .

  # Actor from the 1958 film ""Aladdin""
  OPTIONAL {
    dbr:Aladdin_(film) dbo:starring ?actor .
    ?actor dbo:birthName ?name .
    FILTER(CONTAINS(LCASE(?name), ""donald"") || CONTAINS(LCASE(?name), ""kenneth"")) # Assuming Donald Pleasence or Kenneth Mars
    ?actor dbo:deathPlace ?deathPlaceAladdinActor .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
297,8,train,Give me the institution in the administration of Brian Kemp and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . ?result <http://dbpedia.org/ontology/state> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution ?entity
WHERE {
  ?administration dbo:head dbr:Brian_Kemp .
  ?administration dbo:member ?institution .
  ?institution dbo:country dbr:United_States .
  
  OPTIONAL { 
    ?institution dbo:location ?entity .
    FILTER (isLiteral(?entity) && langMatches(lang(?entity), ""en""))
  }
}
```",3,3,4,2,2,2,2,9,0,0,346,0,0.0,0
756,7,train,"Give me the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1968-08-26""^^xsd:date .
  ?person rdf:type dbo:SportsManager .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
89,10,train,Give me the child of Saw Min Hla and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  # Find the child of Saw Min Hla
  ?child dbo:parent dbr:Saw_Min_Hla .
  
  # Find the predecessor of Myat Hpone Pyo
  ?predecessor dbo:succeededBy dbr:Myat_Hpone_Pyo .

  # Check if they are the same person
  FILTER (?child = ?predecessor)
}
```

This query does the following:
- It looks for a resource (`?child`) that is a child of `Saw Min Hla` using the `dbo:parent` property.
- It also searches for a resource (`?predecessor`) that precedes `Myat Hpone Pyo` using the `dbo:succeededBy` property.
- Finally, it checks if these two resources are the same person by using a filter.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,5,train,Give me the work of Lao She.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"```sparql
SELECT ?work WHERE {
  wd:Q12345 dbo:literaryWork ?work .
}
```

Note: In this query, `wd:Q12345` should be replaced with the actual DBpedia identifier for Lao She. You can find this by searching for Lao She on DBpedia to get his specific Q-number.",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
531,54,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?commanderOffice ?force ?residence
WHERE {
  # Miguel Maura's office
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Commander's office (office holder and politician)
  ?commander a dbo:Politician ;
             dbo:office ?commanderOffice .
  
  # Force involving Manuel Pinto da Costa
  dbr:Manuel_Pinto_da_Costa dbo:participatedInMilitaryConflict ?force .
  ?force a dbo:MilitaryConflict .

  # Residence of Alberto Ruiz-Gallardón
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?residence .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
943,26,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alterEgo WHERE {
  ?person rdfs:label ""Lamont Cranston""@en .
  ?person dbo:pseudonym ?alterEgo .
}
```",3,3,4,3,1,3,3,71,0,0,98447,0,0.0,0
492,7,train,Give me the death place of Reed Howes and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Sal_Mineo 
  }
  
  ?person dbo:placeOfBirth ?birthPlace .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```

This query uses the `dbo:deathPlace` property to find where each person died. It checks for both Reed Howes and Sal Mineo, returning their names along with any available death place information.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,42,train,"Give me the tenant of Spain and office of the leader of 2009 Galician regional election and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capitalCity ?presidentOffice ?partyHeadquarters
WHERE {
  # Madrid as the capital city of Spain
  dbr:Madrid dbo:country dbr:Spain .
  
  # President of Xunta de Galicia in 2009
  OPTIONAL { 
    ?galicianElection dbo:office dbr:President_of_the_Xunta_de_Galicia ;
                      dbo:electedOfficeHolder ?president ;
                      dbo:date ""2009""^^xsd:gYear .
    ?president dbo:title ?presidentTitle .
    FILTER(CONTAINS(LCASE(?presidentTitle), ""president of the xunta de galicia""))
  }
  
  # Headquarters of PSOE
  dbr:Spanish_Socialist_Workers'_Party dbo:headquarters dbr:Madrid .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
609,17,train,"Who is the author of the reference, that is American, to El Deafo?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?author dbo:nationality dbr:United_States .
  FILTER(CONTAINS(LCASE(STR(?book)), ""el deafo""))
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
347,17,train,"Give me the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Maria Anna of Bavaria (born 1574)
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavary_(1574) }

  # Find her children
  ?child dbo:mother ?mariaAnna .
  
  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Get the father of this royal child
  ?child dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
585,12,train,Give me the child of the professional in Actress and native of New York (state).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?actress a dbo:Actor ;
           dbo:nationality dbr:United_States ;
           dbo:birthPlace dbr:New_York_(state) .
  
  ?parentChildRelation dbo:child ?child .
  ?parentChildRelation dbo:parent ?actress .
}
```",3,3,4,2,2,3,2,20,0,0,9,0,0.0,0
414,0,train,Give me the show of Royal Swedish Academy of Sciences.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"```sparql
SELECT ?show WHERE {
  ?academy dcterms:subject ?show .
  FILTER (lang(?show) = ""en"")
  ?academy rdfs:label ""Royal Swedish Academy of Sciences""@sv .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
398,17,train,Give me the player in the writer of the work of Aleksandr Filimonov and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . ?v0 <http://dbpedia.org/property/writer> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the resource for Aleksandr Filimonov
  ?filimonov dbr:Aleksandr_Filimonov .
  
  # Find works associated with him
  ?work dbo:author ?filimonov .

  # Identify the work titled ""Наши парни"" or ""Nashi parni""
  VALUES ?title { 
    ""Наши парни""@ru 
    ""Nashi parni""@en 
  }
  
  ?work rdfs:label ?title .
  
  # Find players involved in this work
  OPTIONAL {
    ?player dbo:role ?work .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
39,19,train,Give me the professional in the profession of Sam Concepcion and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?profession WHERE {
  # Find Sam Concepcion's professions
  { 
    ?sam a dbo:Person ;
         foaf:name ""Sam Concepcion""@en .
    ?sam dbo:occupation ?concepcionProfession .
  }
  
  # Find other professionals in the same professions
  {
    ?person a dbo:Person ;
            foaf:name ?name ;
            dbo:occupation ?profession .
    
    FILTER(?person != ?sam)
    FILTER(?profession = ?concepcionProfession)
  }
}
ORDER BY ?profession ?person",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
347,21,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?role WHERE {
  # Ferdinand II, Holy Roman Emperor
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:spouse ?spouse .
  
  # His children
  ?spouse dbo:child ?child .

  # Check if the child was a commander in any war
  OPTIONAL { 
    ?child dbo:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""general""))
  }

  # Example of linking to societal events or television shows (metaphorical)
  OPTIONAL {
    ?child dbo:wikiPageRedirects ?relatedEntity .
    ?relatedEntity rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""event"") || CONTAINS(LCASE(?label), ""television show""))
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
628,60,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # GS9 member who is an artist and a musical artist
  ?gs9Member dbo:memberOf dbr:GS9 .
  ?gs9Member rdf:type dbo:Artist .
  ?gs9Member rdf:type dbo:MusicalArtist .

  # Associated musical artist of the GS9 member
  ?associatedArtist dbo:associatedBandMember ?gs9Member .
  
  # Award that is a region, American, state, and settlement in New York (state)
  ?award dbo:location dbr:New_York_(state) ;
         rdf:type dbo:Region ;
         rdf:type dbo:American ;
         rdf:type dbo:State ;
         rdf:type dbo:Settlement .

  # Awardee that is a band
  ?awardee dbo:recipientOf ?award .
  ?awardee rdf:type dbo:Band .

  # The associated musical artist of the GS9 member must be the awardee
  ?associatedArtist dbr:AwardRecipient .
}
```",6,14,7,3,2,3,3,71,0,0,1,0,0.0,0
557,26,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?actor rdfs:label ""Johnny Doughboy""@en .
  ?actor dbo:profession dbr:Actor .

  ?work dbo:starring ?actor ;
        dbo:productionCompany ?company ;
        dbo:producer ?producer .

  FILTER(LANG(?actorLabel) = 'en')
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
58,10,train,Give me the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?award dbo:recipient dbr:Ian_Gregson .
  ?award dbo:relatedWork ?movie .
}
```",2,2,3,2,1,3,2,20,0,0,39790,0,0.0,0
59,7,train,Give me the native of the residence of David Luckman and manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find David Luckman as manager of Hartlepool United F.C.
  ?person dbo:position ""manager""@en .
  ?person dbo:team dbr:Hartlepool_United_F.C. .

  # Ensure the person is David Luckman
  ?person foaf:name ""David Luckman""@en .

  # Find his residence
  OPTIONAL { ?person dbo:residence ?residence . }

  # Get native place from the residence
  ?residence dbo:nativePlace ?nativePlace .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
38,1,train,"Give me the author of Promise Me, Dad.","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . }","```sparql
SELECT ?author WHERE {
  ?book dcterms:title ""Promise Me, Dad"" .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,12,train,Give me the war of Alexander Lvovich Davydov and war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?davydovWar ?baggovutWar WHERE {
  # Find wars involving Alexander Lvovich Davydov
  OPTIONAL {
    ?davydovWar dbo:participatedIn ?person .
    ?person rdfs:label ""Alexander Lvovich Davydov""@en .
    FILTER (lang(?person) = 'en')
  }
  
  # Find wars involving Karl Gustav von Baggovut
  OPTIONAL {
    ?baggovutWar dbo:participatedIn ?person .
    ?person rdfs:label ""Karl Gustav von Baggovut""@en .
    FILTER (lang(?person) = 'en')
  }
  
  # Find wars related to the Russian Empire
  ?war dbo:country dbr:Russian_Empire .

  # Linking wars of Davydov and Baggovut with general wars involving Russia
  OPTIONAL { ?davydovWar ?p ?o . FILTER(?p = dbo:participatedIn) }
  OPTIONAL { ?baggovutWar ?p ?o . FILTER(?p = dbo:participatedIn) }

  # Ensure the war is related to both individuals if possible
  VALUES ?person {
    dbr:Alexander_Lvovich_Davydov
    dbr:Karl_Gustav_von_Baggovut
  }
  
  OPTIONAL { ?war dbo:participatedIn ?person . FILTER(?person IN (dbr:Alexander_Lvovich_Davydov, dbr:Karl_Gustav_von_Baggovut)) }

}
ORDER BY ?war",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
398,4,train,Give me the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
SELECT ?work WHERE {
  wd:Q1234568 dbo:work ?work .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Aleksandr Filimonov. You can find this by searching for his name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
198,24,train,"Give me the force of the awardee of Gillmore Medal and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  # Find the Gillmore Medal resource
  VALUES ?gillmoreMedal { dbr:Gillmore_Medal }

  # Identify awardees of the Gillmore Medal
  ?award dbo:recipient ?awardee .
  ?award rdf:type ?gillmoreMedal .

  # Check if the awardee is associated with Charleston, South Carolina
  ?awardee dbo:location dbr:Charleston,_South_Carolina .

  # Find any force association with the awardee
  OPTIONAL { ?awardee dbo:militaryForce ?force . }
}
```

This query does the following:
- It identifies the Gillmore Medal using its DBpedia resource.
- It finds individuals or entities (`?awardee`) who have received this medal.
- It checks if these awardees are associated with Charleston, South Carolina.
- It optionally retrieves any military force association with the awardee.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
288,5,train,"Give me the native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeName WHERE {
  VALUES ?city { dbr:Lahore }
  ?city dbo:nativeName ?nativeName .
}
```

This query uses the DBpedia ontology to find the native name of Lahore, which is identified by its resource URI `dbr:Lahore`.",2,4,3,2,1,2,2,9,0,0,881,0,0.0,0
89,3,train,Give me the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?minyeKyawswa a dbo:Person ;
                 foaf:name ""Minye Kyawswa""@en .
  OPTIONAL { ?minyeKyawswa dbo:child ?child . }
  OPTIONAL { ?child foaf:parent ?minyeKyawswa . }
}
```

This query looks for individuals (`?child`) who are listed as children of Minye Kyawswa, either directly through the `dbo:child` property or indirectly via the `foaf:parent` relationship.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
871,21,train,Give me the father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName WHERE {
  # Find Arthur Stanley who is a politician
  ?arthur dbr:Arthur_Stanley_(politician) .
  
  # Get his father's name or identifier
  ?arthur dbo:father ?father .

  # Ensure the father has a child who received the Commander of the Royal Victorian Order
  ?child dbo:parent ?father ;
         dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Return the father's name
  ?father rdfs:label ?fatherName .
}
```

This query does the following:
- Identifies Arthur Stanley as a politician.
- Retrieves his father using the `dbo:father` property.
- Checks if this father has a child who is an awardee of the Commander of the Royal Victorian Order.
- Returns the name of the father.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,39,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the owner of USS Arcadia (ID-1605)
  ?ship dbo:owner ?owner .
  FILTER(STR(?ship) = ""USS_Arcadia_(ID-1605)"")

  # Find the author of ""Back to Work""
  ?book dbo:author ?author .
  FILTER(STR(?book) = ""Back_to_Work_(book)"")

  # Ensure the owner and author are the same person
  ?owner foaf:name ?name1 .
  ?author foaf:name ?name2 .
  FILTER(?name1 = ?name2)

  # Find a commander involved in a war that is also a disease and societal event
  ?war dbo:commander ?commander ;
       rdf:type dbo:Disease, dbo:SocietalEvent .

  # Link the commander to both individuals
  ?owner dbo:relatedCommander ?commander .
  ?author dbo:relatedCommander ?commander .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,Give me the war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  ?child rdfs:label ""Hideyori""@en .
  
  ?war dbo:participant ?child .
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
198,16,train,Give me the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  dbr:Quincy_Adams_Gillmore dbo:award ?award .
  ?award dbo:recipient ?awardee .
}
```

This query does the following:
- It selects awards associated with Quincy Adams Gillmore.
- For each award, it finds the recipient (or awardee).",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
295,15,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur and native of Birmingham.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v1 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?work dbo:type dbr:Musical_work .
  ?work rdfs:label ""True Self""@en .
  ?work dbo:composer ?artist .
  ?artist foaf:name ""Steven Kapur"" .
  ?artist dbo:nationality dbr:United_Kingdom .
  ?artist dbo:birthPlace dbr:Birmingham .
}
```

This query does the following:
- Selects works that are of type ""Musical work.""
- Filters for a specific work labeled ""True Self.""
- Identifies the composer (writer) of this work.
- Ensures the artist is Steven Kapur, who is from Birmingham.",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
399,6,train,Give me the professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Jamie T""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,2,1,2,2,9,0,0,44694,0,0.0,0
782,33,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date ;
          dbo:memberOfBand ?bandMember .
  
  ?bandMember dbo:band dbr:The_Fabulous_Thunderbirds ;
              dbo:member ?person .

  OPTIONAL { ?band dbo:reference dbr:The_Fabulous_Thunderbirds }
}
```

This query does the following:
- Selects individuals who are musical artists born on March 30, 1945.
- Checks if they have been a member of any band that has The Fabulous Thunderbirds as a reference or connection.
- Retrieves the bands associated with these members.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
68,3,train,"Who is the parent of Dorothea of Denmark, Electress Palatine?","SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?dorothea { dbr:Dorothea_of_Denmark_(1574-1639) }
  ?dorothea dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
531,15,train,"Give me the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  # Find the mayor of Madrid in 2003
  ?mayor a dbo:Mayor ;
         dbo:officeHolderOf dbr:Madrid_City_Council_Election,_2003 .

  # Get the residence of that mayor
  ?mayor dbo:residence ?residence .
}
```

This query assumes:
- The office holder for the Madrid City Council election in 2003 is categorized under `dbo:Mayor`.
- The relationship between the mayor and their office is captured by `dbo:officeHolderOf`.
- The residence of the mayor is stored using `dbo:residence`.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
353,59,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find children of Roger II who are royalty
  ?child a dbo:Monarch ;
         dbo:parent dbr:Roger_II_of_Sicily .

  # Step 2: Identify the reference related to William I
  ?reference a dbo:Monarch, dbo:OfficeHolder ;
             dbo:monarch dbr:William_I_of_Sicily .

  # Step 3: Find children of the reference who are royalty
  ?childOfReference a dbo:Monarch ;
                    dbo:parent ?reference .

  # Step 4: Identify the father of this child (who is also royalty)
  ?father a dbo:Monarch ;
          dbo:child ?childOfReference .

  # Step 5: Find children of this father who are royalty
  ?childOfChild a dbo:Monarch ;
                dbo:parent ?father .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
628,49,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberArtist WHERE {
  # Find Bobby Shmurda's associated band
  ?bobby dbo:musicalArtist dbr:Bobby_Shmurda .
  ?bobby dbo:associatedBand ?band .

  # Find a member of that band who is also an artist
  ?member dbo:memberOf ?band ;
          dbo:occupation dbr:Musical_artist .

  # Identify the award related to the band and its native region in New York State
  ?award dbo:recipient ?band .
  ?region dbo:location dbr:New_York_(state) ;
          rdf:type dbo:Region ;
          dbo:country dbr:United_States_of_America .

  # Ensure the award's native region is a state and settlement in New York
  ?region dbo:state dbr:New_York .
  
  BIND(?member AS ?bandMemberArtist)
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
159,30,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to George Ducas.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?war ?tvShow ?societalEvent WHERE {
  ?person rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?person dbo:role ?commanderRole .
  ?commanderRole dbo:associatedWith ?war .
  
  OPTIONAL { ?war dbp:relatedTVShow ?tvShow . }
  OPTIONAL { ?war dbp:societalEvent ?societalEvent . }

  ?yurii rdfs:label ""Yurii Khmelnytsky""@en .
  ?yurii dbo:successor ?commander .

  ?george rdfs:label ""George Ducas""@en .
  OPTIONAL { ?war dbp:relatedPerson ?george }
}
```

This query attempts to find:

- The role of Jean Baptist, Comte d'Arco as a commander in a war.
- Any television show or societal event related to that war.
- Yurii Khmelnytsky's connection as a predecessor.
- A reference to George Ducas.

Please note that the exact properties and relationships might need adjustment based on DBpedia's schema and available data.",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
311,5,train,Who is the writer of No Alternative?,SELECT ?result WHERE { <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?album dcterms:title ""No Alternative""@en .
  ?album dbo:artist ?person .
  ?person foaf:name ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
297,4,train,Give me the institution in Georgia (U.S. state) and entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution WHERE {
  ?institution a dbo:EducationalInstitution ; # You can add more subclasses like GovernmentalOrganization, etc.
               dbo:location dbr:Georgia_(U.S._state) .
  
  OPTIONAL { 
    ?institution dbo:country dbr:United_States . 
  }
}
```",2,2,3,1,2,2,2,9,0,0,346,0,0.0,0
80,11,train,Give me the actor of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Movie Name""@en .
}
```

Replace `""Movie Name""` with the actual name of the movie you are interested in. This query will return actors who starred in that particular movie.",2,2,3,2,1,3,3,71,0,0,55786,0,0.0,0
531,12,train,Give me the office of Mariano Rajoy and office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office
WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura 
  }
  
  ?person dbo:positionHeld ?position.
  ?position dbo:title ?office.
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
38,12,train,"Give me the author of Promises to Keep (Biden book) and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?author WHERE {
  # Find the author of ""Promises to Keep"" by Joe Biden
  ?book dcterms:title ""Promises to Keep""@en .
  ?book dbo:author ?person1 .
  ?person1 foaf:name ""Joe Biden""@en .

  # Find other written works by Joe Biden
  OPTIONAL {
    ?work dbo:author ?person2 .
    ?person2 foaf:name ""Joe Biden""@en .
    FILTER(?work != ?book)
  }

  # Return the author of ""Promises to Keep"" and any other work by Joe Biden
  BIND(CONCAT(""Author of 'Promises to Keep': "", STR(?person1), ""; Other works: "", IF(BOUND(?person2), STR(?person2), ""None"")) AS ?author)
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
203,2,train,Give me the military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
SELECT ?militaryForce WHERE {
  ?battle dbo:wikiPageID ""123456789"" ; # Replace this ID with the actual DBpedia ID of the Battle of Cape Finisterre (1805)
         dbo:militaryConflictParticipant ?participant .
  ?participant dbo:militaryForce ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
80,28,train,Give me the actor of the movie with  and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie1 dbo:title ?title1 .
  FILTER(CONTAINS(LCASE(?title1), ""and"")) .
  
  ?movie2 dbo:title dbr:ATL_(film) .

  ?actor dbo:starring ?movie1 ;
         dbo:starring ?movie2 .
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
198,4,train,Give me the awardee of Medal of Honor.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
SELECT ?awardee WHERE {
  ?medal a dbo:MedalOfHonor .
  ?medal dbo:recipient ?person .
  ?person foaf:name ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,2190,0,0.0,0
89,59,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Saw Shwe Khet has a child who is royalty
  ?sawChild dbo:childOf dbr:Saw_Shwe_Khet .
  ?sawChild dbo:royalty true .

  # This child (of Saw Shwe Khet) has another child, Minye Kyawswa
  ?minyeKyawswa dbo:parent ?sawChild .
  ?minyeKyawswa rdfs:label ""Minye Kyawswa""@en .

  # Find the spouse of the father of Minye Kyawswa's child
  ?minyeKyawswaChild dbo:childOf ?father .
  ?father dbo:spouse ?spouse .
  
  # Ensure the spouse is royalty
  ?spouse dbo:royalty true .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,8,train,"Give me the parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  ?person a dbo:Artist ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:London .
  ?person dbo:musicalArtist true .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```

This query does the following:
- Filters individuals (`?person`) who are both artists and musical artists.
- Ensures they have a nationality of the United Kingdom and were born in London.
- Attempts to retrieve their parent information if available.",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
347,1,train,"Give me the father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Eleonore_of_Austria,_Queen_of_Poland dbo:father ?father .
}
```

This query uses the `dbo:father` property to find the father of Eleonore of Austria, Queen of Poland.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
158,9,train,Give me the native of Russian Empire and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person dbo:nationality dbr:Russian_Empire .
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
}
```",2,2,3,1,2,2,3,28,0,0,126,0,0.0,0
80,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName WHERE {
  dbr:The_Shadow dbo:alterEgoOf ?character .
  ?character dbo:profession ?profession .
  OPTIONAL { ?character foaf:name ?realName . }
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
140,16,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut and commander in the war, that is a societal event, of George Pickett.","SELECT ?result WHERE { <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?warCommanded
WHERE {
  # Find the ruling party in Westport, Connecticut
  ?westport dbo:locatedIn dbr:Connecticut .
  ?rulingParty dbo:location ?westport ;
               a dbo:PoliticalParty .

  # Identify a member of this political party who is also an organization and a political party
  ?partyMember dbo:memberOf ?rulingParty ;
              a dbo:Organization, dbo:PoliticalParty .

  # Find the war commanded by George Pickett
  dbr:George_Pickett dbo:commanderIn ?warCommanded .
  ?warCommanded a dbo:SocietalEvent .
}
```",4,7,5,2,2,3,2,20,0,0,4,0,0.0,0
668,24,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find Rod Argent's profession
  ?rod dbo:occupation ?profession1 .
  VALUES ?rod { <http://dbpedia.org/resource/Rod_Argent> }

  # Find Darryl Paa Kwesi Bannerman-Martin's profession
  ?darryl dbo:occupation ?profession2 .
  VALUES ?darryl { <http://dbpedia.org/resource/Daryl_Paakwaai_Brennan> }

  # Find other professionals in the same professions
  ?person dbo:occupation ?profession1 ;
          a dbo:Person .

  UNION

  ?person dbo:occupation ?profession2 ;
          a dbo:Person .

  FILTER(?person != ?rod && ?person != ?darryl)
}
ORDER BY ?person
LIMIT 10",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
225,14,train,"Give me the birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/awards> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?person dbo:fieldOfAward dbr:Television_Show .
  ?person dbp:birthPlace ?birthPlace .
}
```

This query does the following:
- Filters individuals (`?person`) who have Japanese nationality.
- Checks if they received an award from the Anita Borg Institute Women of Vision Awards.
- Ensures their field of award is related to a television show.
- Retrieves their birthplace.",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
203,21,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  VALUES ?regiment { dbr:30th_(Cambridgeshire)_Regiment_of_Foot }
  ?regiment dbo:participatedIn ?war .

  # Find wars involving the Battle of Cape Finisterre (1805)
  VALUES ?battle { dbr:Battle_of_Cape_Finisterre_(1805) }
  ?battle dbo:participatedIn ?war .

  # Find commanders involved in those wars
  ?war dbo:commander ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,22,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT DISTINCT ?actor WHERE {
  ?movie dcterms:title ""Judgment: The Trial of Julius and Ethel Rosenberg"" .
  ?movie dbo:starring ?actor .

  ?person foaf:name ""Allan Arbus""@en .
  ?person dbo:child ?child .

  ?child dbo:parent ?parent .

  FILTER(?actor = ?parent)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,24,train,Give me the child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child1 ?grandchild2 WHERE {
  # Find the child of Archduchess Margarete Sophie of Austria
  ?margareteSophie a dbo:Person ;
                  foaf:name ""Margarete Sophie, Archduchess of Austria""@en .
  ?margareteSophie dbo:child ?child1 .

  # Find Duke Philipp of Württemberg and his grandchild
  ?philipp a dbo:Person ;
           foaf:name ""Philipp, Duke of Württemberg""@en .
  ?philipp dbo:child ?child2 .
  ?child2 dbo:child ?grandchild2 .

}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
203,40,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Battle of Cape Finisterre (1805)
  VALUES (?battle1) { 
    dbr:Battle_of_Cape_Finisterre_(1805) 
  }
  
  # Battle of Fort Royal
  VALUES (?battle2) { 
    dbr:Battle_of_Fort_Royal 
  }

  ?battle1 dbo:commander ?commander1 .
  ?battle2 dbo:commander ?commander2 .

  FILTER(?commander1 = ?commander2)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
756,47,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Find the manager of VfL Bochum in the 2007-08 season
  ?manager dbo:position ""Manager"" .
  ?manager dbo:managedTeam dbr:VfL_Bochum .
  ?season dbp:team dbr:VfL_Bochum ;
          dbp:season ""2007–08"" .
  ?season dbp:manager ?manager .

  # Find the leader of West Germany
  ?leader dbo:position ""Chancellor"" ;
           dbo:nationality dbr:Germany ;
           dbo:country dbr:West_Germany .

  # Check if the manager is the same person as the leader
  FILTER (?manager = ?leader)

  # Get the native country of the leader
  ?leader dbp:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?nativeCountry .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,33,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician WHERE {
  # Find the actor who acted in ""Ab Kya Hoga"" and ""Dispatches from Elsewhere""
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:film dbr:Ab_Kya_Hoga .
  ?actor dbo:film dbr:Dispatches_from_Elsewhere .

  # Find the politician who is also an actor
  ?politician dbo:profession dbr:Politician .
  ?politician dbo:profession dbr:Actor .
  
  # Ensure it's the same person
  FILTER(?actor = ?politician)
}
```

This query assumes that DBpedia has entries for ""Ab Kya Hoga"" and ""Dispatches from Elsewhere"" as films, and that John Cho is listed with these works. It looks for a person who is both an actor and a politician.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
419,0,train,Give me the entity in Andhra Pradesh.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity dbo:location dbr:Andhra_Pradesh .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,2,2,9,0,0,166,0,0.0,0
158,7,train,Give me the person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:nationality dbr:Russian_Empire .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
```",2,2,3,1,2,2,3,28,0,2,36,0.0,0.0,0
375,24,train,Give me the war of the person born as Koichirō and war of the child of Toyotomi Hideyoshi.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war
WHERE {
  # Wars related to Koichiro Matsuura
  {
    VALUES ?koichiro { dbr:Koichirō_Matsuura }
    ?koichiro dbo:nationality dbr:Japan .
    OPTIONAL { ?koichiro dbo:occupation dbr:Diplomat . }
    ?event dbo:agent ?koichiro ;
           a dbo:MilitaryConflict .
    BIND(?event AS ?war)
  }

  UNION

  # Wars related to Toyotomi Hideyori
  {
    VALUES ?hideyori { dbr:Toyotomi_Hideyori }
    ?hideyori dbo:father dbr:Toyotomi_Hideyoshi ;
             dbo:nationality dbr:Japan .
    OPTIONAL { ?hideyori dbo:occupation dbr:Noble . }
    ?event dbo:agent ?hideyori ;
           a dbo:MilitaryConflict .
    BIND(?event AS ?war)
  }

  # Return the person and their associated war
  {
    SELECT DISTINCT ?person ?war WHERE {
      VALUES ?koichiro { dbr:Koichirō_Matsuura }
      OPTIONAL { ?koichiro dbo:nationality dbr:Japan . }
      OPTIONAL { ?koichiro dbo:occupation dbr:Diplomat . }
      ?event dbo:agent ?koichiro ;
             a dbo:MilitaryConflict .
      BIND(?koichiro AS ?person)
    }

    UNION

    SELECT DISTINCT ?person ?war WHERE {
      VALUES ?hideyori { dbr:Toyotomi_Hideyori }
      OPTIONAL { ?hideyori dbo:nationality dbr:Japan . }
      OPTIONAL { ?hideyori dbo:occupation dbr:Noble . }
      ?event dbo:agent ?hideyori ;
             a dbo:MilitaryConflict .
      BIND(?hideyori AS ?person)
    }
  }
}
ORDER BY ?person
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,53,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeRegion WHERE {
  # Ackquille Jean Pollard (French Montana)
  ?frenchMontana a dbo:Artist ;
                foaf:name ""French Montana""@en ;
                dbo:memberOfGroup ?gs9 .

  # GS9
  ?gs9 a dbo:MusicalArtist .

  # Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
        dbo:award ?award .

  # Award's native region
  ?award dbo:nativeRegion ?nativeRegion .

  # Native region conditions
  FILTER EXISTS { ?nativeRegion a dbo:State . }
  FILTER EXISTS { ?nativeRegion a dbo:Settlement . }
  FILTER EXISTS { ?nativeRegion dbo:country dbr:United_States_of_America . }

  # Band member of the associated musical artist
  ?bandMember dbo:memberOfGroup ?associatedArtist .
  ?associatedArtist dbo:award ?award .

  # Linking band member to French Montana's group
  ?bandMember dbo:memberOfGroup ?gs9 .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
347,34,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?societalEvent ?tvShow WHERE {
  VALUES ?child { dbr:Maximilian_I,_Holy_Roman_Emperor }
  
  ?event dbo:relatedTo dbr:Franco-Algerian_War ;
         dbo:associatedWith dbr:Military_of_France .
  
  ?tvShow dbo:subject ?event .
  
  ?child dbo:relatedTo ?event .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
628,15,train,"Give me the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?associatedArtist
WHERE {
  # Identify GS9
  VALUES ?gs9 { dbr:GS9 }

  # Find members of GS9 who are both artists and musical artists
  ?member dbo:memberOf ?gs9 .
  ?member a dbo:MusicalArtist .
  ?member a dbo:Artist .

  # Get the associated musical artist for these members
  ?member dbo:associatedBandOrMusicalArtist ?associatedArtist .
}
```",2,5,3,2,1,3,3,71,0,0,4,0,0.0,0
103,37,train,"Give me the professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?actorName ?profession
WHERE {
  # Find the TV show ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga dbo:starring ?actor .
  
  # Get the actor's name
  ?actor rdfs:label ?actorName .

  # Check if the actor is also a politician
  OPTIONAL { 
    ?actor dbo:occupation dbr:Politician .
  }

  # Retrieve professions of the actor
  OPTIONAL {
    ?actor dbo:profession ?profession .
  }
  
  FILTER (lang(?actorName) = 'en')
}
ORDER BY ?actorName
```",4,5,5,3,2,3,3,71,1,5,39639,0.16666666666666666,2.5227043390514632e-05,5.0446451092165673e-05
943,27,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?greatGrandfather WHERE {
  # Step 1: Identify Baeda Maryam I.
  ?baedaMaryamI dbp:fullName ""Baeda Maryam I""@en .
  
  # Step 2: Find his child.
  ?child dbo:parent ?baedaMaryamI .

  # Step 3: Determine the father of that child (who is royalty and an office holder).
  ?father dbo:spouse ?mother . 
  ?child dbo:parent ?father .
  
  # Ensure this person is royalty and an office holder.
  ?father dbp:title ?title .
  FILTER EXISTS { ?title rdfs:label ?officeLabel }
  FILTER CONTAINS(LCASE(?officeLabel), ""king"" || ""queen"" || ""emperor"" || ""prince"" || ""duke"" || ""officer"") .

  # Step 4: Find the father of this person.
  ?greatGrandfather dbo:spouse ?grandmother .
  ?father dbo:parent ?greatGrandfather .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
23,9,train,Give me the entity in Colombia and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
SELECT ?entity ?party WHERE {
  wd:Q1116988 dbo:nationality dbr:Colombia .
  wd:Q1116988 dbo:politicalParty ?party .
  ?party rdfs:label ?partyLabel .
  FILTER (LANG(?partyLabel) = ""en"")
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
353,45,train,"Give me the child of Roger II of Sicily and father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?person WHERE {
  # Roger II of Sicily and his children
  ?roger2 dbo:spouse ?constance .
  ?roger2 foaf:surname ""Roger II of Sicily""@en .

  # William I of Sicily as a child of Roger II and father of William II
  ?william1 dbo:childOf ?roger2 ;
           dbo:parentOf ?william2 ;
           rdf:type dbo:Monarch .

  # Constance of Burgundy and her children
  ?constance foaf:surname ""Constance of Burgundy""@en .
  ?constance dbo:child ?william1 .

  # William II of Sicily as a child of William I
  ?william2 dbo:parent ?william1 ;
           foaf:name ""William II of Sicily""@en .

  # Ensure the person is royalty
  ?person rdf:type dbo:Monarch .
  
  FILTER (?person = ?william1)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
198,3,train,"Give me the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?show dbo:awardedBy dbr:United_States_Congress .
  ?show rdf:type dbo:TelevisionShow .
}
```",1,2,2,1,1,3,3,71,0,0,8,0,0.0,0
723,15,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein and band member of Stone Sour.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  ?producer a dbo:Organization ;
            a dbo:MusicalGroup .
  
  ?album dbo:artist ?producer ;
         rdfs:label ""Nothing to Gein""@en .

  ?member dbo:memberOf ?stoneSour ;
          dbo:associatedBandMemberOf ?producer .

  ?stoneSour rdfs:label ""Stone Sour""@en .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
531,40,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residence WHERE {
  # Leader of the Madrid City Council in 2003
  ?person dbo:officeHolderOf dbr:Madrid_City_Council_Election,_2003 .
  ?person dbo:residence ?residence .

  UNION

  # Miguel Maura's residence
  dbr:Miguel_Maura dbo:residence ?residence .

  UNION

  # Mariano Rajoy's residence
  dbr:Mariano_Rajoy dbo:residence ?residence .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
119,55,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?residenceCountry ?partyAdministration
WHERE {
  # Find Álvaro Quirós and his role in the 2009 Galician regional election
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós"" ;
          dbo:politicalParty dbr:Spanish_Socialist_Workers'_Party .

  ?electionEvent dbo:electionYear ""2009"" ;
                 dbo:region dbr:Galicia ;
                 dbo:candidate ?person ;
                 dbo:office ?office .

  # Find the residence associated with the office
  ?office dbo:residence ?residence .
  
  # Check if the residence is a country
  ?residence rdf:type dbo:Country .

  BIND(?residence AS ?residenceCountry)

  # Confirm the administration of the Spanish Socialist Workers' Party
  ?partyAdministration dbo:country dbr:Spain ;
                       dbo:politicalParty dbr:Spanish_Socialist_Workers'_Party .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
386,19,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 ?birthPlaceEntity
WHERE {
  # Wars involving Karl Gustav von Baggovut
  ?baggovut dbo:wikiPageID ""12345678"" . # Replace with actual WikiPage ID for Karl Gustav von Baggovut
  ?baggovut dbo:participatedIn ?war1 .
  
  # Wars involving Alexander Lvovich Davydov
  ?davydov dbo:wikiPageID ""87654321"" . # Replace with actual WikiPage ID for Alexander Lvovich Davydov
  ?davydov dbo:participatedIn ?war2 .

  # Birthplace of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .
  
  # Find an entity in the birth place
  ?birthPlaceEntity a dbo:Place ;
                   dbo:wikiPageRedirects ?birthPlace .
}
```

Please note:
- Replace `""12345678""` and `""87654321""` with the actual WikiPage IDs for Karl Gustav von Baggovut and Alexander Lvovich Davydov, respectively. You can find these IDs by searching their DBpedia pages.
- The query assumes that `dbo:participatedIn` is used to link individuals to wars they participated in. Adjust this if a different property is used in the actual data.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
213,6,train,Give me the country of Cat Country (novel) and birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?birthPlace WHERE {
  # Query for the country associated with ""Cat Country"" (novel)
  OPTIONAL {
    dbr:Cat_Country_(novel) dbo:country ?country .
  }
  
  # Query for the birthplace of Winston Chang
  OPTIONAL {
    dbr:Winston_Chang dbo:birthPlace ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
68,19,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the parent of Dorothea of Denmark, Electress Palatine and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
    # Maximilian I, Holy Roman Emperor and his children
    dbr:Maximilian_I,_Holy_Roman_Emperor dbo:child ?child .

    # Dorothea of Denmark's parent
    dbr:Dorothea_of_Denmark_Electress_Palatine dbo:parent ?dorotheasParent .

    # Catherine of Austria's father
    dbr:Catherine_of_Austria_Queen_of_Portugal dbo:father ?catherinesFather .

    # The child must be the parent of Dorothea's parent and the father of Catherine's father
    ?child = ?dorotheasParent .
    ?child = ?catherinesFather .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
198,39,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?birthplaceEntity WHERE {
  # Identify Quincy Adams Gillmore
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore"" ;
            dbo:dateOfBirth ?dob ;
            dbo:deathDate ?dd .

  FILTER (YEAR(?dd) = 1850 && MONTH(?dd) = 8 && DAY(?dd) = 5)

  # Get his military force or rank
  OPTIONAL { ?gillmore dbo:militaryRank ?force . }

  # Find his birthplace that is an American settlement
  ?gillmore dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement ;
              dbp:country ""United States"" .

  # Get the entity in the birthplace
  OPTIONAL { ?birthplaceEntity dbo:location ?birthplace . }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
468,6,train,Give me the reference to Peter IV and child of Alfonso IV of Aragon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Peter IV (Peter the Ceremonious) as a child of Alfonso IV
  dbr:Peter_IV_of_Aragon dbo:parent dbr:Alfonso_IV_of_Aragon .
  
  # Find children of Peter IV
  dbr:Peter_IV_of_Aragon dbo:child ?child .
}
```

This query does the following:
- It identifies Peter IV (Peter the Ceremonious) as a child of Alfonso IV.
- It then retrieves any children (`?child`) of Peter IV.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
39,39,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" ;
          dbp:birthName ?birthName .
  
  OPTIONAL { ?person dbo:associatedBand ?band . }
}
```

This query does the following:
- It selects individuals (`?person`) who are of type `dbo:MusicalArtist` and have a name ""Bob Thompson"".
- It retrieves their birth name using `dbp:birthName`.
- It optionally finds any associated band with `dbo:associatedBand`.

Note: The actual resource for Bob Thompson might need to be specified if there are multiple individuals with the same name. You may need to refine the query by adding more specific filters or identifiers if available.",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
782,32,train,Give me the band of the band member of Eric Clapton and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?realName WHERE {
  # Find bands associated with Eric Clapton as a member
  ?claptonMember dbo:memberOfBand ?band .
  
  # Filter to ensure the person is Eric Clapton
  ?claptonMember foaf:name ""Eric Clapton""@en .

  OPTIONAL {
    # Get real name of The Fabulous Thunderbirds band members
    ?fabulousThunderbird dbo:memberOfBand dbr:The_Fabulous_Thunderbirds .
    ?fabulousThunderbird foaf:name ?realName .
  }
}
```

This query does the following:
- It looks for bands (`?band`) that Eric Clapton is a member of.
- It uses an optional clause to find real names of members from The Fabulous Thunderbirds.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
943,50,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?grandfather WHERE {
  ?naod dbo:parent ?father .
  ?father dbo:parent ?grandfather .
  ?grandfather rdf:type dbo:Monarch .
  ?grandfather dbo:officeHolder true .
  
  OPTIONAL { 
    ?shadow dbo:alterEgo ""The Shadow""@en .
    ?shadow rdfs:label ""Lamont Cranston""@en .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
263,21,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of Middlesex and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Mary Elphinstone, Lady Elphinstone's parent
  ?maryElphinstone a dbo:Person ;
                  foaf:nativePlace dbr:Middlesex ;
                  dbo:spouse ?ladyElphinstone .
  
  ?ladyElphinstone dbo:child ?parent .

  # Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne's child
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
  
  ?child dbo:parent ?parent .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
119,10,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person dbo:birthName ""Alberto Núñez Feijóo""@en .
  ?person dbo:officeHolder ?office .
  ?office dbo:location dbr:Santiago_de_Compostela .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
531,17,train,"Give me the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:memberOfParty ?party .
  
  # Ensure the entity is a political party
  ?party rdf:type dbo:PoliticalParty .

  # Find the leader of that political party
  ?party dbo:leader ?leader .

  # Ensure the leader is categorized as a politician
  ?leader rdf:type dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
140,17,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the commander in Pickett's Charge
  ?charge dbo:commander ?commander .
  FILTER (str(?charge) = ""Pickett's_Charge"") .

  # Ensure the commander is a member of a ruling party that is also an organization
  ?commander dbo:memberOf ?party .
  ?party rdf:type dbo:PoliticalParty ;
         dbo:isOrganisation ?organisation .
  FILTER EXISTS { ?organisation rdf:type dbo:Organization } .

  # Find the death place of John McDermott (American artist)
  dbr:John_McDermott_(artist) dbo:deathPlace ?deathPlace .
  FILTER (dbo:ClassOf ?deathPlace = dbo:Settlement) .

  # Ensure the commander's association with the ruling party is in the same settlement
  ?party dbp:country ?country .
  ?deathPlace dbo:country ?country .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
737,36,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find the parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:spouse ?margareteSophie .
  ?margareteSophie foaf:name ""Margarete Sophie of Austria""@en .

  # Find a child of this parent
  ?child dbo:parent ?parent .

  # Find the grandchild who is royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Monarch .

  # Ensure this grandchild is a predecessor to Carl, Duke of Württemberg
  ?carl dbo:predecessor ?grandchild .
  ?carl foaf:name ""Carl, Duke of Württemberg""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,40,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Elvira of Castile and Roger II of Sicily's child
  ?elviraChild dbo:spouse dbr:Roger_II_of_Sicily .
  ?elviraChild dbo:spouse dbr:Elvira_of_Castile .
  
  # This child is the parent of William II of Sicily
  ?elviraChild dbo:child dbr:William_II_of_Sicily .

  # Ensure this person is royalty
  ?elviraChild a dbo:Monarch .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
353,28,train,"Give me the father of William II of Sicily and child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # William II of Sicily's father
  ?william2 dbo:father ?father .
  dbr:William_II_of_Sicily ?william2 .

  # Roger III, Duke of Apulia's parent (father)
  ?roger3 dbo:father ?parent .
  dbr:Roger_III,_Duke_of_Apulia ?roger3 .

  # Elvira of Castile's child
  ?elvira dbo:child ?child .
  dbr:Elvira_of_Castile_Queen_of_Sicily ?elvira .

  # The person we are looking for is the father of William II and also a child of Roger III's parent
  FILTER (?father = ?parent)
  
  # This person should also be a child of Elvira
  FILTER (?child = ?father)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
361,16,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the album that is also a film and a work
  ?album rdf:type dbo:Album ;
         rdfs:label ""Lasso the Moon""@en .
  
  # Ensure it's categorized as both a film and a work
  ?film rdf:type dbo:Film ;
        dbr:Lasso_the_Moon ?album .
  ?work rdf:type dbo:Work ;
        dbr:Lasso_the_Moon ?album .

  # Find the actor associated with this album/film/work
  ?actor rdf:type dbo:Actor ;
         dbo:profession ""Actor""@en ;
         dbo:associatedBandOrMusicalArtist ?album .
}
```",3,5,4,2,2,2,3,28,0,0,4,0,0.0,0
89,8,train,Give me the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?child WHERE {
  ?person dbo:givenName ""Saw Shwe Khet"" .
  OPTIONAL { ?person dbo:child ?child . }
}
```

This query assumes that the given name ""Saw Shwe Khet"" is used in DBpedia to identify the person and that there might be a `dbo:child` property linking to their children.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,2,train,Give me the child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Stephen V of Hungary""@en .
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
258,5,train,"Who is the person born, that is a politician, as Eleonora Menicucci de Oliveira?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthDate WHERE {
  dbr:Eleonora_Menicucci_de_Oliveira dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
668,51,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of Rod Argent.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Artist .
  ?person dbo:nationality dbr:Ghana .
  ?person dbo:birthPlace dbr:Central_Region,_Ghana .
  ?person dbo:profession dbr:Musician .
  ?person dbp:birthday ?birthday .
  FILTER EXISTS { ?person dbp:birthName ?birthName }
}
```

This query selects artists who are from Ghana, specifically born in the Central Region, and have a profession related to music. It also ensures that they have a birth name listed.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,13,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalName WHERE {
  ?person a dbo:Agent .
  ?person dbo:alterEgo dbr:The_Shadow .
  ?person foaf:name ?realName .
  OPTIONAL { ?person dbo:profession ?professional }
  
  FILTER (lang(?realName) = 'en')
}
```

This query does the following:
- It looks for a person (`?person`) who has an alter ego of ""The Shadow.""
- It retrieves the real name and optionally the profession associated with this person.
- The `FILTER` ensures that we're looking at English language entries.",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
557,3,train,"Give me the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  ?entity rdfs:label ""Kent Allard (print)""@en .
  ?entity dbo:fictionalCharacter ?character .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,44,train,"Give me the professional in  and producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?collinsProducer ?gaynorProducer WHERE {
  # Find Cora Sue Collins' notable work and its producer
  ?collinsWork dbo:starring dbr:Cora_Sue_Collins .
  ?collinsWork dbo:producer ?collinsProducer .

  # Find Janet Gaynor's notable movie and its producer
  ?gaynorMovie dbo:starring dbr:Janet_Gaynor ;
              a dbo:Film .
  ?gaynorMovie dbo:producer ?gaynorProducer .
}
```",5,8,6,2,3,3,3,71,1,14,0,0.06666666666666667,1.0,0.125
119,7,train,Give me the reference to Spanish Socialist Workers' Party.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . }","```sparql
SELECT ?reference WHERE {
  ?party rdf:type dbo:PoliticalParty .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  ?party dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,3,71,0,356,1,0.0,0.0,0
198,61,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Identify Quincy Adams Gillmore
  ?gillmore a dbo:Person ;
            foaf:name ""Quincy Adams Gillmore"" ;
            dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
            dbp:birthPlace ?birthplace .

  # Ensure birthplace is an American settlement
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Find the award associated with Quincy Adams Gillmore
  ?gillmore dbo:awardReceived ?award .

  # Determine the force related to that award
  ?award dbo:associatedForce ?force .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
756,50,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?team ?country
WHERE {
  # Thomas Letsch managed teams
  ?management dbo:agent dbr:Thomas_Letsch ;
              dbo:directlyOperates ?team .
  
  # The team is associated with a sports season
  ?team dbo:sportSeason ?season .
  FILTER EXISTS { ?season rdf:type/(dbo:SoccerClubSeason|dbo:SportsSeason|dbo:SportsTeamSeason) }

  # Find the leader of West Germany (Chancellor)
  dbr:West_Germany dbo:headOfGovernment ?chancellor .

  # Get the native place of the Chancellor
  ?chancellor dbo:nativePlace ?nativePlace .
  
  # The administration is a country
  ?nativePlace dbo:country ?country .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
119,31,train,"Give me the tenant of Spain and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?office WHERE {
  # Anxo Quintana as an individual in DBpedia
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  # Find the country (tenant) of Spain
  ?country a dbo:Country ;
           rdfs:label ""Spain""@en .

  # Find the office held by Anxo Quintana
  ?office a dbo:PoliticalOffice ;
          dbo:incumbent ?person ;
          dbo:country ?country .
  
  FILTER(lang(?officeLabel) = 'en')
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
119,3,train,"Give me the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  ?positionHeld dbo:agent ?person ;
                a dbo:PositionHeld ;
                dbo:startDate ?startDate .

  ?positionHeld dbo:positionTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""administration""))

  BIND(STR(?positionHeld) AS ?administration)
}
```

This query does the following:
- Identifies `?person` as Anxo Quintana.
- Finds positions held by this person (`dbo:agent`) that are of type `PositionHeld`.
- Filters these positions to include only those with titles containing ""administration"".
- Returns the administration event.",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
905,34,train,"Give me the child of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Stephen V of Hungary and his child
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?stephenV dbo:spouse ?spouse ;
           dbo:child ?child .

  # Spouse's father (father of the parent)
  ?spouse dbo:parent ?grandParent .
  ?grandParent dbo:spouse ?grandParentSpouse .

  # Ensure the child is a royalty related to Philip, Despot of Romania
  ?philip a dbo:Monarch ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  ?child dbo:parent ?relatedToPhilip .
  FILTER (?relatedToPhilip = ?grandParentSpouse)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
742,9,train,Give me the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . ?result <http://dbpedia.org/ontology/almaMater> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus WHERE {
  ?university rdf:type dbo:University .
  ?university rdfs:label ""Пловдивски университет „Паисий Хилендарски“""@bg .
  ?university dbo:alumnus ?alumnus .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
19,8,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carrie Symonds""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```

This query assumes that Carrie Symonds is the professional name associated with Caroline Louise Bevan Symonds in DBpedia. It searches for her resource using the `foaf:name` property and retrieves any spouse information available.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
89,58,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of Saw Min Hla.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
    # Saw Min Phyu's spouse
    ?spouse1 dbo:spouse ?sawMinPhyu .
    
    # Child of Saw Min Phyu's spouse who is royalty
    ?child1 dbo:parent ?spouse1 ;
           a dbo:Monarch .

    # Predecessor of this child
    ?predecessor dbo:successor ?child1 .

    # Myat Hpone Pyo's father who is royalty
    ?father dbp:child ?myatHponePyo .
    
    # Spouse of this royal father
    ?spouse2 dbo:spouse ?father ;
             a dbo:Monarch .

    # Child of Saw Min Hla
    ?sawMinHlaChild dbo:parent ?sawMinHla .

    # Ensure the two children are the same person
    FILTER (?child1 = ?sawMinHlaChild)

    # Bind Myat Hpone Pyo and Saw Min Phyu to their respective DBpedia resources
    VALUES (?myatHponePyo) { <http://dbpedia.org/resource/Myat_Hpone_Pyo> }
    VALUES (?sawMinPhyu) { <http://dbpedia.org/resource/Saw_Min_Phyu> }
    VALUES (?sawMinHla) { <http://dbpedia.org/resource/Saw_Min_Hla> }
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,13,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?force WHERE {
  # Find the award named after Edmund Hakewill-Smith
  ?award dbo:name ""Edmund Hakewill-Smith Award""@en .
  
  # Find individuals who have received this award
  ?recipient dbo:recipientOf ?award .
  
  # Get the name of the awardee
  ?awardee rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), LCASE(STR(?recipient)))) .

  OPTIONAL {
    # Find any known force associated with the awardee
    ?awardee dbo:fieldOfStudy ?force .
  }
}
```

This query assumes that:
- The award is named ""Edmund Hakewill-Smith Award"".
- Awardees have a `dbo:recipientOf` relationship to the award.
- The field of study or related concept (like a force) can be found under `dbo:fieldOfStudy`.",3,3,4,3,1,3,2,20,0,0,734,0,0.0,0
89,2,train,Give me the predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?myatHponePyo dbo:position ?position .
  ?myatHponePyo dbp:name ""Myat Hpone Pyo""@en .

  OPTIONAL { 
    ?succession dbo:precededBy ?predecessor .
    ?succession dbo:succeededBy ?myatHponePyo .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,17,train,"Give me the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?game dbo:basedOn dbr:The_Shadow_(character) .
  ?comic dbo:basedOn dbr:The_Shadow_(character) .
  ?comic dbo:protagonist ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
557,38,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producerCollins ?producerGaynor WHERE {
  # Cora Sue Collins' works and their producers
  ?collinsFilm dbo:starring dbr:Cora_Sue_Collins .
  ?collinsFilm dbo:director ?producerCollins .

  # Janet Gaynor's works and their producers
  ?gaynorFilm dbo:starring dbr:Janet_Gaynor .
  ?gaynorFilm dbo:director ?producerGaynor .
}
```",4,7,5,2,2,3,3,71,0,25,1,0.0,0.0,0
263,1,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Mary_Elphinstone_Lady_Elphinstone }
  ?person dbo:property:parent ?parent .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
80,23,train,Give me the actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Get the author of the book ""Smartbomb""
  ?book dct:title ""Smartbomb""@en .
  ?book dbo:author ?author .

  # Step 2: Find movies related to this author
  ?movie dbo:starring ?actor ;
         dbo:director|dbo:writer ?author .

  # Filter out non-person entities for actors
  ?actor a dbo:Actor .
}
```",3,3,4,3,1,3,3,71,0,0,55786,0,0.0,0
103,15,train,"Give me the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/starring> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?movie WHERE {
  # Find the DBpedia resource for John Cleese
  VALUES ?cleese { dbr:John_Cleese }
  
  # Get all works (movies or TV shows) where he acted
  ?work dbo:starring ?cleese .
  
  # Ensure the work is both a movie and a television show
  ?work rdf:type/rdfs:subClassOf*+ dbo:Film ;
        rdf:type/rdfs:subClassOf*+ dbo:TelevisionShow .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
39,37,train,"Give me the band of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?character 
WHERE {
  # Find Bob Thompson (musician) and his band
  ?bob a dbo:MusicArtist ;
       foaf:name ""Bob Thompson"" ;
       dbo:memberOfBand ?band .

  # Find Walter B. Gibson's fictional character creation that is an alter ego and appears in comics
  ?walterson a dbo:Writer ;
             foaf:name ""Walter B. Gibson"" .
  
  ?character dbo:creator ?walterson ;
             dbo:genre dbr:Comics ;
             dbo:isFictional dbr:true ;
             dbo:hasAlterEgo dbr:true .

}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
513,7,train,Give me the entity in the award of George H. Cameron.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:name ""George H. Cameron""@en .
  ?person dbo:awardsReceived ?award .
}
```",2,2,3,2,1,3,2,20,0,0,87241,0,0.0,0
159,6,train,Give me the writer of Always the Love Songs.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?album dcterms:title ""Always the Love Songs""@en .
  ?album dbo:artist ?artist .
  ?artist dbo:worksForCreativeWork ?work .
  ?work dbo:author ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
492,6,train,Give me the death place of Reed Howes and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Carolyn_Jones_(actress)
  }
  
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
468,5,train,"Give me the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person dbo:father ?father .
  ?person rdfs:label ""Peter IV of Aragon""@en .
  FILTER NOT EXISTS { ?father rdf:type dbo:Person . }
  OPTIONAL { ?father dbo:royalty ?royalty . }
  FILTER (?royalty != NULL)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
78,14,train,"Give me the associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?stuartArtist ?wizardsArtist WHERE {
  # Find Stuart Tosh and his associated musical artist
  OPTIONAL {
    dbr:Stuart_Tosh dbo:musicalArtist ?stuartArtist .
  }

  # Find the ""Wizards of Waverly Place"" soundtrack and its associated artists
  OPTIONAL {
    dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:musicalArtist ?wizardsArtist .

    # Ensure the artist is also an artist (in a broader sense)
    ?wizardsArtist rdf:type dbo:Artist .
  }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
531,20,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant ?officeHolder ?politician WHERE {
  # Find entities related to Madrid that are tenants or offices
  ?tenant a dbo:Tenant ;
          dbo:location dbr:Madrid .
  
  # Find office holders and politicians involved in the Central African Republic Civil War
  ?officeHolder a dbo:OfficeHolder ;
               dbo:politicalAffiliation ?politician ;
               dbo:memberOf ?warEvent .

  ?politician a dbo:Politician .

  # Link to the Central African Republic Civil War event
  ?warEvent rdfs:label ""Central African Republic Civil War""@en .
  
  # Ensure the office holder is also a politician
  FILTER (?officeHolder = ?politician)
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
159,32,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # Find the writer of ""Always the Love Songs""
  ?book dbo:title ""Always the Love Songs""@en .
  ?book dbo:author ?writer .

  # Ensure the writer is a politician and office holder
  ?writer dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Find the successor of the commander in the Russo-Polish War (1654–1667)
  OPTIONAL {
    ?war dbo:title ""Russo-Polish War (1654–1667)""@en .
    ?commander dbo:successor ?writer ;
               dbo:participatedIn ?war .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
531,53,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office2003 ?partyOffice WHERE {
  # Find Mariano Rajoy
  VALUES ?marianoRajoy { dbr:Mariano_Rajoy }

  # Office held in the 2003 Madrid City Council election
  OPTIONAL {
    ?marianoRajoy dbo:office ?office2003 .
    ?office2003 dbo:electionDate ?date .
    FILTER (YEAR(?date) = 2003 && CONTAINS(LCASE(str(?office2003)), ""madrid city council""))
  }

  # Office held as a leader of the Conservative Republican Party (Spain)
  OPTIONAL {
    ?marianoRajoy dbo:partyLeaderOf ?party .
    ?party rdfs:label ""Conservative Republican Party (Spain)""@en .
    ?marianoRajoy dbo:office ?partyOffice .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
311,8,train,Give me the band member of the writer of No Alternative.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the album ""No Alternative""
  ?album dbo:title ""No Alternative""@en .
  
  # Identify Pearl Jam as a contributor to this album
  ?album dbo:contributor dbr:Pearl_Jam .

  # Get band members of Pearl Jam
  dbr:Pearl_Jam dbo:bandMember ?bandMember .
}
```",2,2,3,2,1,3,2,20,0,0,123,0,0.0,0
941,17,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel and child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalSpouse WHERE {
  # Step 1: Identify Princess Antoinette of Brunswick-Wolfenbüttel
  ?antoinette a dbo:Person ;
              foaf:name ""Antoinette, Princess of Brunswick-Wolfenbüttel""@en ;
              dbo:spouse ?husband .

  # Step 2: Find her children who are royalty and child of Ferdinand Albert II
  ?child dbo:parent ?antoinette ;
         dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel ;
         a dbo:Royalty .

  # Step 3: Determine the spouse of that child
  ?child dbo:spouse ?firstSpouse .

  # Step 4: Find the spouse of this spouse
  ?firstSpouse dbo:spouse ?finalSpouse .
}
```",4,5,5,3,2,3,2,20,0,0,3,0,0.0,0
609,47,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birthplace
  ?paulusPowell dbo:birthPlace ?region .
  FILTER (str(?paulusPowell) = ""Paulus_Powell"")

  # Ensure the region is both a region and an administrative region
  ?region rdf:type dbo:Region ;
          rdf:type dbo:AdministrativeRegion .

  # Step 2: Find the governor of that region
  ?governor dbo:governmentRole ?role .
  ?role dbo:officeHolder ?person .
  ?person dbo:birthPlace ?governorBirthPlace .
  FILTER (str(?role) = ""Governor_of_"" + str(?region))

  # Step 3: Find Vince Gilligan's award-winning work
  ?vinceGilligan dbo:award ?award .
  FILTER (str(?vinceGilligan) = ""Vince_Gilligan"")

  # Identify the awardee of that award
  ?award dbo:recipient ?awardee .

  # Step 4: Find the birthplace of the awardee
  ?awardee dbo:birthPlace ?awardeeBirthPlace .
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,18,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor) and party member of Republican Party (United States).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouseName ?party
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake""@en ;
          dbo:birthName ""Harriette Arlene Lake"" .
  
  ?person dbo:spouse dbr:Roger_Pryor_(actor) .

  OPTIONAL { 
    ?person dbp:party dbr:Republican_Party_(United_States) .
  }

  BIND (dbr:Roger_Pryor_(actor) AS ?spouse)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
419,6,train,"Give me the alma mater of the awardee, that is australian and a scientist, of Australian Laureate Fellowship.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?almaMater WHERE {
  ?awardee dbo:award dbr:Australian_Laureate_Fellowship .
  ?awardee dbo:nationality dbr:Australia .
  ?awardee dbo:occupation dbp:scientist .
  ?awardee dbp:almaMater ?almaMater .
}
```

This query does the following:
- Uses `dbo:award` to find individuals who have received the Australian Laureate Fellowship.
- Filters by nationality using `dbo:nationality`.
- Ensures the person is a scientist with `dbo:occupation`.
- Retrieves the alma mater using `dbp:almaMater`.",2,4,3,2,1,2,2,9,0,0,8,0,0.0,0
412,9,train,Give me the entity in Athens and war of Konstantinos Ventiris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?ventiris dbo:placeOfBirth dbr:Athens .
  ?ventiris dbo:occupation dbr:Military_person .
  ?event dbo:participant ?ventiris .
  ?event dbo:location dbr:Athens .
  ?event a ?type .
  FILTER(?type = dbo:Battle || ?type = dbo:War)
  
  ?entity rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""konstantinos ventiris"") && CONTAINS(LCASE(?label), ""athens""))
}
```

This query attempts to find an event (like a battle or war) where Konstantinos Ventiris was a participant and that took place in Athens. It then looks for entities related to this context.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
225,16,train,"Give me the entity in the region of Japan Standard Time and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  # Find awardees of the Anita Borg Institute Women of Vision Awards
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  
  # Filter by nationality to be Japanese
  ?awardee dbo:nationality dbr:Japan .

  # Get birthplace of the awardee
  ?awardee dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is in a region observing Japan Standard Time
  ?birthPlace dbo:timeZone dbr:Asia/Tokyo .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
37,0,train,Give me the birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q12345 foaf:bornIn ?birthPlace .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Bob Crewe. You can find this by searching for his DBpedia page or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
39,46,train,Give me the professional in the profession of the producer of Coke Studio Philippines and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?profession WHERE {
  # For Noel Cabangon, the producer of Coke Studio Philippines
  { 
    ?person dbp:name ""Noel Cabangon""@en .
    ?person dbo:occupation ?occupation1 .
    ?occupation1 rdfs:label ?profession .
    FILTER (lang(?profession) = 'en')
  }
  
  UNION
  
  # For Lamont Cranston, the alter ego of The Shadow
  { 
    ?person dbp:name ""Lamont Cranston""@en .
    ?person dbo:occupation ?occupation2 .
    ?occupation2 rdfs:label ?profession .
    FILTER (lang(?profession) = 'en')
  }
}
```",5,5,6,3,2,3,3,71,0,0,39640,0,0.0,0
723,3,train,"Give me the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?producer WHERE {
  ?movie dcterms:title ""Nothing to Gein""@en .
  ?movie dbo:productionCompany ?producer .
  FILTER EXISTS { ?producer a dbo:Organization . }
  FILTER EXISTS { ?producer a dbo:MusicalGroup . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
756,60,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find VfL Bochum for the 2006-07 season
  ?team a dbo:SoccerClub ;
        dbo:sportTeamInLeague ?league1 ;
        rdfs:label ""VfL Bochum""@en .
  
  ?season1 a dbo:SoccerSeason ;
           dbo:club ?team ;
           dbo:startDate ?start2006 .

  # Find the manager of VfL Bochum in that season
  ?manager a dbo:SportsManager, dbo:Organization, dbo:SportsClub ;
           dbo:managesTeam ?team ;
           dbo:birthDate ""1968-08-26""^^xsd:date .
  
  # Determine the successor season
  ?season2 dbo:succeeds ?season1 ;
           dbo:club ?team ;
           dbo:startDate ?start2007 .

  # Find the manager of the team in the successor season
  ?manager2 a dbo:SportsManager, dbo:Organization, dbo:SportsClub ;
            dbo:managesTeam ?team ;
            dbo:worksFor ?season2 .
  
  FILTER(?start2006 < ""2007-07-01""^^xsd:date && ?start2007 > ""2007-06-30""^^xsd:date)
}
LIMIT 1",6,16,7,3,2,3,3,71,0,0,1,0,0.0,0
472,20,train,"Give me the administration of Olaf I of Denmark and territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v3 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?territory WHERE {
  # Olaf I of Denmark
  VALUES ?olafI (dbr:Olaf_I_of_Denmark) .
  
  OPTIONAL {
    ?olafI dbo:administrativePost ?administration .
    ?administration dbp:country dbr:Copenhagen .
  }
  
  OPTIONAL {
    ?olafI dbo:territory ?territory .
  }

  # Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  VALUES ?princeChristian (dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck) .
  
  OPTIONAL {
    ?princeChristian dbo:administrativePost ?administration2 .
    ?administration2 dbp:country dbr:Copenhagen .
  }
  
  OPTIONAL {
    ?princeChristian dbo:territory ?territory2 .
  }

  # Filter for royalty
  FILTER (?olafI = dbr:Olaf_I_of_Denmark || ?princeChristian = dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
557,42,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Janet Gaynor's claim to fame
  dbr:Seventh_Heaven_(film) dbo:director ?director .
  
  # The Adventures of Tom Sawyer (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .

  # Find the common producer
  FILTER(?director = ?producer)

  # Ensure the producer is Hal Roach
  OPTIONAL { ?producer rdfs:label ""Hal Roach""@en }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
119,45,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?feijooOffice ?monarch
WHERE {
  # Find the administration led by PSOE
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  # Find Alberto Núñez Feijóo's office
  ?feijoo dbo:office ?feijooOffice ;
         foaf:name ""Alberto Núñez Feijóo""@en .

  # Find the current monarch of Spain
  ?monarch dbo:country dbr:Spain ;
           rdf:type dbo:Monarch .
  
  FILTER (lang(?feijooOffice) = 'en')
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
756,56,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find VfL Bochum's manager in the 2007-08 season
  ?team a dbo:SoccerClub ;
        dbo:sportTeamSeason ?season .
  
  ?season dbo:club dbr:VfL_Bochum ;
          dbo:season ""2007–08""^^xsd:string .

  ?manager dbo:managesSportTeam ?team ;
           dbo:nationality dbr:West_Germany ;
           dbo:dateOfBirth ?dob .

  # Find the manager born on August 26, 1968
  FILTER (YEAR(?dob) = 1968 && MONTH(?dob) = 8 && DAY(?dob) = 26)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
225,9,train,Give me the region of the time zone in Kiyosu.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  # Find Kiyosu's location (latitude and longitude)
  dbr:Kiyosu dbo:location dbr:Aichi_Prefecture .
  
  # Determine the time zone from Aichi Prefecture
  dbr:Aichi_Prefecture dbp:timeZone ?timeZone .

  # Get the region of the time zone
  ?timeZone dbo:region ?region .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
119,11,train,Give me the entity in Poland and war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?name WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:nationality dbr:Poland ;
             dbo:occupation dbo:Commander ;
             dbo:participatedIn dbr:French_Revolutionary_Wars .
  
  OPTIONAL { ?commander rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
  
- **SELECT DISTINCT**: We select distinct commanders and their names.

- **?commander a dbo:MilitaryPerson**: Ensures that the entity is a military person.

- **dbo:nationality dbr:Poland**: Filters entities by nationality, specifically those from Poland.

- **dbo:occupation dbo:Commander**: Ensures the occupation of the individual was as a commander.

- **dbo:participatedIn dbr:French_Revolutionary_Wars**: Links the entity to participation in the French Revolutionary Wars.

- **OPTIONAL { ?commander rdfs:label ?name FILTER (lang(?name) = 'en') }**: Retrieves the English label for each commander, if available.

- **ORDER BY ?name**: Orders the results alphabetically by name.

This query should return a list of Polish commanders who participated in the French Revolutionary Wars. Adjustments might be needed based on the exact structure and availability of data in DBpedia.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
731,6,train,Give me the war of Tom Phillips (Royal Navy officer) and force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force 
WHERE {
  # Find Tom Phillips and his related war
  ?tomPhillips a dbo:Person ;
              foaf:name ""Tom Phillips"" ;
              dbo:rank ?rank .
  
  OPTIONAL { ?tomPhillips dbo:memberOf ?navyUnit . }
  
  ?navyUnit dbo:participatedIn ?war .

  # Find William Tennant and his related force
  ?williamTennant a dbo:Person ;
                  foaf:name ""William Tennant"" ;
                  dbo:rank ?rank .
  
  OPTIONAL { ?williamTennant dbo:commanded ?force . }
}
```

This query attempts to find the war associated with Tom Phillips and the force commanded by William Tennant. It uses DBpedia's ontology classes and properties, such as `dbo:Person`, `foaf:name`, `dbo:rank`, `dbo:memberOf`, `dbo:participatedIn`, and `dbo:commanded`.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
595,15,train,"Give me the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"```sparql
SELECT ?author WHERE {
  ?work dcterms:creator ?author .
  ?work rdf:type dbo:Book .
  ?author rdf:type dbo:Politician ;
          dbo:officeHolder ?office .
  FILTER(CONTAINS(LCASE(STR(?author)), ""hillary clinton""))
}
```",2,6,3,2,1,3,3,71,0,0,1,0,0.0,0
295,17,train,Give me the native of the birth place of the producer of Storm in a Teacup (film) and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native 
WHERE {
  # Step 1: Find producer of ""Storm in a Teacup""
  ?film dbr:Storm_in_a_Teacup_(film) .
  ?film dbo:producer ?person .

  # Step 2: Find writer of ""Boom Shack-A-Lak""
  ?song dbr:Boom_Shack-a-Lak .
  ?song dbo:lyricist ?person .

  # Ensure the person is the same for both roles
  FILTER (?person = ?person)

  # Step 3: Get birthplace of this person
  ?person dbo:birthPlace ?birthPlace .

  # Step 4: Find native of that birthplace
  ?native dbo:nativeOf ?birthPlace .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
769,5,train,"Give me the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerTeam ;
        dbo:country dbr:Hong_Kong ;
        dbo:manager ?manager .
  
  ?manager a dbo:SportsManager ;
           dbo:sport dbr:Soccer .

  FILTER (str(?team) = ""Hong Kong C Team"")
}",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
871,7,train,Who is the alumnus of Eton College?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College.
}
```",1,1,2,1,1,3,3,71,211,0,0,1.0,1.0,1.0
58,5,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# This is a placeholder query; please specify the criteria for the movie.
SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  # Add conditions here based on your specific request, e.g., director, actor, year, etc.
}
```",1,1,2,1,1,3,2,20,28769,147953,11021,0.16279240841547743,0.7230208595124403,0.2657497044043748
628,24,train,Give me the person born as the birth name of Bobby Shmurda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person foaf:name ""Bobby Shmurda"" .
  OPTIONAL { ?person dbo:birthPlace ?place . }
  FILTER (CONTAINS(LCASE(str(?place)), ""florida""))
}
```

This query does the following:
- Uses `foaf:name` to match the full name ""Bobby Shmurda"".
- Checks for a birth place (`dbo:birthPlace`) and filters results where the place contains ""Florida"" in its description.

Note that this is a basic approach, and depending on how data is structured in DBpedia, you might need to adjust property paths or use additional properties like `foaf:givenName` and `foaf:familyName` if `foaf:name` doesn't directly match the full name format.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,43,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Charles II of Naples' spouse
  ?charles2 dbo:spouse ?spouse .
  FILTER(STR(?charles2) = ""Charles_II_of_Naples"")

  # Step 2: Parent of the father of that spouse (grandparent)
  ?father dbo:child ?spouse .
  ?grandparent dbo:child ?father .
  
  # Ensure grandparent is royalty
  ?grandparent a dbo:Monarch .

  # Step 4: Maria of Bytom's spouse
  ?maria dbp:spouse ?mariaSpouse .

  FILTER(STR(?maria) = ""Maria_of_Bytom"")

  # Step 5: Child of Stephen V of Hungary who is parent of that spouse
  ?stephenV dbo:child ?parent .
  FILTER(STR(?stephenV) = ""Stephen_V_of_Hungary"")
  
  ?parent dbo:spouseOrPartner ?mariaSpouse .

  # Ensure this person is royalty
  ?parent a dbo:Monarch .

  # Step 7: Match the two individuals
  FILTER(?grandparent = ?parent)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
347,49,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Maria Anna of Bavaria and her children
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1574)

  ?mariaAnna dbo:child ?child .

  # Father of the child (husband/partner)
  ?child dbo:spouseOrPartner ?father .

  # Child of the father (grandchildren)
  ?father dbo:child ?grandchild .

  # Filter for royalty
  ?grandchild a dbo:Monarch ;
              dbo:memberOf ?royaltyGroup .

  # Further filter for commanders in war
  ?grandchild dbo:commanderOf ?war .
  
  # Link to the societal event, event, and television show (2nd Dragoon Regiment)
  ?war dbo:associatedWith dbr:2nd_Dragoon_Regiment_(France) ;
       a dbo:SocietalEvent ;
       a dbo:Event ;
       dbo:depictedIn ?tvShow .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
399,1,train,Give me the professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
SELECT ?singer WHERE {
  ?singer a dbo:Singer .
}
```",1,1,2,1,1,2,2,9,0,0,10364,0,0.0,0
87,24,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies that are both works and films
  ?movie a dbo:Film ;
         dbo:starring dbr:Audrey_Hepburn .

  # Get the spouse of Janusz Kamiński
  ?janusz dbo:spouse ?spouse .
  
  FILTER (str(?janusz) = ""Janusz_Kamiński"") .

  # Find actors in these movies who are spouses of Janusz Kamiński
  ?movie dbo:starring ?actor .
  ?actor dbo:spouse ?spouse .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
595,13,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?work dcterms:creator ?author .
  ?work a dbo:Book .
  FILTER(CONTAINS(LCASE(STR(?work)), ""bill clinton""))
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
737,12,train,"Give me the child of Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?parent1 { dbr:Albrecht,_Duke_of_Württemberg }
  VALUES ?parent2 { dbr:Margarete_Sophie_of_Austria }
  
  ?child dbo:parent ?parent1 .
  ?child dbo:parent ?parent2 .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
198,17,train,"Give me the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          dbo:deathDate ""1850-08-05""^^xsd:date ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement .
}
```

This query does the following:
- Selects individuals (`?person`) who are of type `dbo:Person`.
- Filters those with a death date on August 5, 1850.
- Ensures they have American nationality.
- Retrieves their birthplace (`?birthPlace`).
- Confirms that the birthplace is classified as a settlement.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
119,32,train,"Give me the office of the leader of 2009 Galician regional election and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country WHERE {
  # Find Álvaro Quirós in DBpedia
  ?person rdfs:label ""Álvaro Quirós""@en .
  
  # Get the office held during the 2009 Galician regional election
  OPTIONAL { 
    ?person dbo:politicalParty dbr:Partido_Nacionalista_Galego ;
            dbo:office ?office .
    FILTER (YEAR(?startDate) <= 2009 && (?endDate > 2009 || NOT EXISTS { ?person dbo:endDate ?endDate }))
  }
  
  # Get the country of residence
  OPTIONAL {
    ?person dbo:residence ?location .
    ?location dbo:country ?country .
  }
}
```

This query does the following:
- Searches for Álvaro Quirós in DBpedia.
- Attempts to find any political office he held, specifically related to the Partido Nacionalista Galego (a relevant party during the Galician elections).
- Checks if there is a start date before or during 2009 and an end date after 2009 or no end date specified.
- Retrieves his country of residence.

Note: The query assumes that Álvaro Quirós's political affiliation and office are linked in DBpedia, which may require adjustments based on actual data availability. Additionally, the `YEAR` function is used to filter dates, assuming such functions are supported by your SPARQL endpoint.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
80,43,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find a song by T.I. that is also a musical work
  ?song dbo:artist dbr:T.I. ;
        a dbo:SongsByArtist ;
        dbo:album ?album .

  # Step 2: Identify actors in ""Shelby Oaks""
  ?actor dbo:actedIn dbr:Shelby_Oaks ;

  # Step 3: Find professional connection to the album
  OPTIONAL { 
    ?album dbo:artist ?relatedArtist .
    FILTER (?relatedArtist != dbr:T.I.)
    ?relatedArtist dbo:spouseOrPartner ?actor .
  }
}
```

This query attempts to find an actor who has acted in ""Shelby Oaks"" and is professionally connected (e.g., as a spouse or partner) to another artist on the same album as T.I.'s song.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
668,44,train,Give me the person born as the birth name of Joey B and professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Joey B's birth name
  VALUES (?joeyBBirthName) { ""Joseph Benson"" }

  # Rod Argent's profession
  SELECT DISTINCT ?rodArgentProfession WHERE {
    dbr:Rod_Argent dbo:profession ?rodArgentProfession .
  } LIMIT 1

  # $pacely's associated musical artist
  VALUES (?pacelyArtist) { ""Pacely"" }

  # Find the person matching all criteria
  ?person dbo:birthName ?joeyBBirthName ;
          dbo:occupation ?rodArgentProfession ;
          dbo:associatedBandOrMusicalArtist ?pacelyArtist .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
311,10,train,"Who is the writer of the album, that is a musical work and a work and an album, of Sappy?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:genre ""Album"" .
  ?album rdfs:label ""Sappy""@en .
  ?album dbo:artist ?artist .
  ?artist dbo:worksFor ?band .
  ?band dbo:member ?person .
  ?person dbo:occupation ""Musician""@en .
  ?person dbo:work ?writtenWork .
  ?writtenWork dbo:isWrittenBy ?writer .
}
```",2,5,3,2,1,3,2,20,0,0,26,0,0.0,0
871,48,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Rodney Lees' award
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Awardee's parent
  ?awardee dbo:parent ?parent .
  FILTER(?awardee = ?award) .

  # Frederick Stanley, 16th Earl of Derby's child who is a politician
  ?child dbo:parent dbr:Fredrick_Stanley_16th_Earl_of_Derby ;
         a dbo:Politician .

  # Politician's father
  FILTER(?parent = ?child)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
375,11,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn and parent of Kate Dimbleby.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Vera_Lynn ;
         dbo:workExample ?televisionShow .
  
  ?televisionShow a dbo:TelevisionSeries .

  ?author dbo:parentOf dbr:Kate_Dimbleby ;
          dbo:filmAuthor ?movie .

}
```

This query does the following:
- Selects movies that are both films and have a television series example.
- Ensures Vera Lynn is starring in the movie.
- Finds an author who is the parent of Kate Dimbleby and has authored this particular film.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
557,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName WHERE {
  dbr:The_Shadow dbo:alterEgoOf ?character .
  ?character dbo:profession ?profession .
  OPTIONAL { ?character foaf:name ?realName . }
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
58,7,train,Give me the spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person dbo:birthName ""Linda Sue Cobb"" .
  ?person foaf:name ?name .
  ?person dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
384,0,train,Give me the party of Guillaume Peltier.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q1234568 dbo:politicalParty ?party .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Guillaume Peltier. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,2,2,9,0,0,6,0,0.0,0
213,15,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei and country of Cat Country (novel).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Find a person who died in Taipei
  ?decedent dbo:deathPlace dbr:Taipei .
  
  # Identify the country associated with ""Cat Country"" novel
  dbr:Cat_Country dbo:setInCountry ?country .

  # Ensure the decedent is related to this country (e.g., nationality or residence)
  ?decedent dbo:nationality ?country ;
           dbo:residence ?country .
  
  # Find a child of the decedent who is a politician
  ?child dbo:parent ?decedent ;
         dbo:occupation dbr:Politician .

  # Get the birthplace of this child
  ?child dbp:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
78,8,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Identify Stuart McBeath Tosh as a person and musician
  dbr:Stuart_McBeath_Tosh 
    a dbo:Musician ;
    dbo:birthName ""Stuart McBeath Tosh"" .

  # Find associated musical artists
  OPTIONAL { dbr:Stuart_McBeath_Tosh dbo:associatedBand ?band . }
  OPTIONAL { dbr:Stuart_McBeath_Tosh dbo:associatedMusicalArtist ?artist . }

  # Filter to ensure the result is a musician
  ?artist 
    a dbo:Musician ;
    rdfs:label ?label .
  
  FILTER (lang(?label) = 'en')
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
557,2,train,Give me the producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
756,30,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?teamManaged WHERE {
  # Find Thomas Letsch
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en ;
          dbo:nationality ?nationality .

  # Check if his nationality is West Germany
  ?nationality rdfs:label ""West Germany""@en .
  
  # Get the native country of Thomas Letsch
  ?letsch dbo:nativeCountry ?nativeCountry .

  # Find teams managed by Thomas Letsch
  ?letsch dbo:managerOfSportsTeam ?teamManaged .

  # Filter for VfL Bochum
  FILTER(?teamManaged = dbr:VfL_Bochum)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
737,15,train,"Give me the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Archduchess Helena of Austria
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .

  # Step 2: Check if the spouse is royalty
  OPTIONAL { ?spouse dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""royalty"")) }

  # Step 3: Find children of this spouse
  ?spouse dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,1,2,1,0.3333333333333333,0.5,0.4
609,51,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?governorBirthPlace ?authorBirthPlace WHERE {
  # Find the birthplace of the governor of Virginia
  ?governor dbo:officeHolderOf dbr:Governor_of_Virginia .
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Find the birthplace of Cece Bell, author of El Deafo
  dbr:Cecily_Ann_Bell dbp:nationality dbr:United_States .
  dbr:Cecily_Ann_Bell dbo:birthPlace ?authorBirthPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
943,58,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v0 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?greatGrandfather WHERE {
  # Susenyos I is a descendant of both Baeda Maryam I and Dawit I
  ?susenyos dbo:childOf ?baedaMaryamChild .
  ?susenyos dbo:childOf ?dawitChild .

  # Find the common child (Susenyos I)
  ?baedaMaryamChild dbo:parent dbr:Baeda_Maryam_I .
  ?dawitChild dbo:parent dbr:Dawit_I .

  # Susenyos I's father
  ?susenyosFATHER dbo:childOf ?commonParent .

  # Great-grandfather of Susenyos I
  ?greatGrandfather dbo:childOf ?susenyosFather .
  
  # Ensure the great-grandfather is a royalty and office holder
  ?greatGrandfather a dbo:Monarch ;
                   dbo:officeHolder true .

  # Reference to Lamont Cranston (The Shadow's alter ego)
  FILTER(?greatGrandfather = dbr:Lamont_Cranston) .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,24,train,Give me the professional in the profession of Shatrughan Sinha and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel WHERE {
  # Find Shatrughan Sinha's profession
  ?sinha dbo:occupation ?profession .
  FILTER(?sinha = dbpedia:Shatrughan_Sinha) .

  # Find other individuals with the same profession
  ?person dbo:occupation ?sameProfession .
  FILTER(?person != dbpedia:Shatrughan_Sinha)
  
  # Ensure the professions match
  FILTER(?profession = ?sameProfession)

  # Get labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?personLabel",3,3,4,2,2,3,3,71,0,0,39640,0,0.0,0
353,27,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Constance of Burgundy
  ?constance a dbo:Person ;
             rdfs:label ""Constance of Burgundy""@en .

  # Step 2: Find her spouse(s)
  ?constance dbo:spouse ?spouse .

  # Step 3: Determine their children
  ?spouse dbo:child ?child .

  # Step 4: Identify which of those children are royalty
  ?child a dbo:Monarch ;
         rdfs:label ?royalChildLabel .

  # Step 5: Find the grandchildren (children of the royal child)
  ?child dbo:child ?grandchild .
}
```

This query assumes that Constance of Burgundy is uniquely identified by her label in English. It finds her spouse, their children who are royalty, and then those children's offspring.",3,4,4,3,1,3,3,71,0,0,8,0,0.0,0
58,2,train,Give me the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q1234568 foaf:name ""Linda Bruckheimer""@en .
  OPTIONAL { wd:Q1234568 schema:birthName ?birthName . }
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for Linda Bruckheimer if it is known. If not, you may need to search for her DBpedia page first.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
609,6,train,"Who is the governor, that is a politician, of Virginia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?governor WHERE {
  ?governor dbo:position ""Governor of Virginia""@en .
  ?governor rdf:type dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
293,34,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)

  # Find Harriette Arlene Lake
  ?person dbp:birthName ""Harriette Arlene Lake""@en .

  # Determine the ruling party in the location of the landmark
  ?landmark dbo:location ?location .
  ?location dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .

  # Find a member of that ruling party
  ?partyMember dbo:memberOf ?rulingParty .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
668,21,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  VALUES (?person) { 
    (dbo:Stonebwoy) 
    (dbo:Shatta_Wale)
  }
  
  ?person dbo:musicalArtist ?artist .
}
```

This query assumes that the DBpedia resources for Stonebwoy and Shatta Wale are `dbo:Stonebwoy` and `dbo:Shatta_Wale`, respectively. It retrieves any musical artists associated with these individuals.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,37,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandparent WHERE {
  # Stephen V of Hungary and his child
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?child dbo:childOf ?stephenV .

  # Child's father (which is Stephen V)
  ?father dbo:child ?child .
  
  # Father's father (grandparent)
  ?grandparent dbo:child ?father .

  # Maria of Bytom and her spouse
  ?maria a dbo:Monarch ;
         foaf:name ""Maria of Bytom""@en .
  
  ?spouse dbp:spouseOf ?maria .

  # Spouse's royalty parent
  ?royaltyParent dbo:child ?spouse .
  
  FILTER(?grandparent = ?royaltyParent)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,50,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?intermediaryParent WHERE {
  # Alfonso VI's children
  ?childAlfonsoVI dbo:spouse|dbo:child dbr:Alfonso_VI_of_León_and_Castile .
  
  # Child of one of Alfonso VI's children (grandchild)
  ?grandChild dbo:parent ?childAlfonsoVI .

  # Intermediary parent is a child of Alfonso VI
  ?intermediaryParent dbo:spouse|dbo:child dbr:Alfonso_VI_of_León_and_Castile .
  
  # This intermediary parent must be the parent of the grandchild
  ?grandChild dbo:parent ?intermediaryParent .

  # Intermediary parent is a royalty and an office holder
  ?intermediaryParent a dbo:Monarch ;
                     dbo:officeHolder ?office .

  # Connection to William I
  ?intermediaryParent dbo:spouse|dbo:child dbr:William_I_of_Aquitaine .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
816,52,train,"Give me the parent of the professional in Photographer and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentPhotographer ?parentDoonArbus ?actor ?movie ?decedent
WHERE {
  # Parent of a professional photographer
  ?photographer dbo:occupation dbr:Photography.
  ?photographer dbo:parent ?parentPhotographer.

  # Parent of Doon Arbus
  dbr:Doon_Arbus dbo:parent ?parentDoonArbus.

  # Actor of a movie that is a work
  ?actor dbo:profession dbr:Actor.
  ?actor dbo:film ?movie.
  ?movie rdf:type dbo:Film.

  # Person decedent at Los Angeles
  ?decedent dbo:deathPlace dbr:Los_Angeles.
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
80,50,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:starring dbr:Alec_Baldwin .
  OPTIONAL { ?film dbo:title ""The Shadow"" . }
  OPTIONAL { ?album dbo:artist dbr:T.I. ;
              dbo:song dbr:Live_Your_Life_(T.I._song) . }
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
151,2,train,Give me the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Burhan Belge. You can find this by searching for his page on DBpedia or using a SPARQL endpoint to query for his name.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
361,2,train,Give me the actor of Rustlers' Rhapsody.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  dbr:Rustlers'_Rhapsody dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
472,0,train,Give me the territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?territory dbo:governmentSeat dbr:Copenhagen .
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
119,19,train,Give me the office of the leader of 2009 Galician regional election and tenant of Spain.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office WHERE {
  # Find the leader of the Galician regional election in 2009
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  
  ?election dbo:winner ?leader .
  
  # Get the office held by this leader
  ?leader dbo:officeHeld ?office .

  # Ensure the leader is associated with Spain
  OPTIONAL { ?leader dbo:nationality dbr:Spain . }
}
ORDER BY ?leader",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
311,11,train,"Give me the band member of Mark Eitzel and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Mark Eitzel and his band
  ?markEitzel dbo:memberOfBand ?band .
  
  # Band member of the same band as Mark Eitzel
  ?bandMember dbo:memberOf ?band .
  
  # Associated artist with this band member
  ?bandMember dbp:associatedMusicalArtist ?associatedArtist .

  # Check if associated artist is also linked to R.E.M.
  ?rem dbo:member ?artist .
  FILTER (?artist = ?associatedArtist)
}
```

This query assumes that the relationships are directly available in DBpedia. Adjustments might be necessary based on actual data availability and structure.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
37,1,train,Give me the birthplace of Scott LaFaro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q12345 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia resource identifier for Scott LaFaro. You can find this by searching for ""Scott LaFaro"" in DBpedia or using a SPARQL endpoint to query for his unique identifier.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
859,9,train,"Give me the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the reference group related to ""Burnt by the Sun""
  ?film dbo:associatedMusicalArtist ?group .
  
  FILTER (str(?film) = str(dbr:Burnt_by_the_Sun_(2009_film)))

  # Ensure the group is a band, organization, or group
  ?group rdf:type ?type .
  VALUES ?type { 
    dbo:Band 
    dbo:MusicalGroup 
    dbo:Organization 
  }

  # Find the associated artist of this group
  ?group dbo:associatedMusicalArtist ?artist .

  # Ensure the artist is a band, organization, or group
  ?artist rdf:type ?artistType .
  VALUES ?artistType { 
    dbo:Band 
    dbo:MusicalGroup 
    dbo:Organization 
  }
}
```",2,6,3,2,1,3,2,20,0,0,5,0,0.0,0
347,38,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Ferdinand III's child
  ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # Cecilia Renata's father
  ?cecilia dbp:father ?father .

  # Cecilia Renata of Austria
  ?cecilia rdf:type dbo:Person ;
           rdfs:label ""Cecilia Renata of Austria""@en .

  # Check if the child is also a child of the same person (i.e., father)
  ?child dbp:father ?father .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
472,15,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Olaf I of Denmark.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?territory WHERE {
  # Christian Ditlev Ammentorp Hansen
  OPTIONAL {
    ?hansen a dbo:Person ;
            foaf:name ""Christian Ditlev Ammentorp Hansen"" .
    ?hansen dbo:deathPlace ?placeHansen .
    FILTER (isBlank(?placeHansen) || ?placeHansen != dbr:Unknown)
    ?placeHansen a dbo:Settlement .
    ?adminHansen dbo:administrativeUnit ?territory .
  }

  # Olaf I of Denmark
  OPTIONAL {
    ?olaf a dbo:Person ;
          foaf:name ""Olaf I of Denmark"" .
    ?olaf dbo:deathPlace ?placeOlaf .
    FILTER (isBlank(?placeOlaf) || ?placeOlaf != dbr:Unknown)
    ?placeOlaf a dbo:Settlement .
    ?adminOlaf dbo:administrativeUnit ?territory .
  }
}
```

This query does the following:

- It searches for resources representing Christian Ditlev Ammentorp Hansen and Olaf I of Denmark.
- It retrieves their death places, ensuring these are settlements.
- It finds territories administered from these death places.

Note: The actual DBpedia entries might not exist or be structured differently, so this query assumes the presence of such data. Adjustments may be necessary based on available data in DBpedia.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,7,train,Give me the figure known as the nickname of Russia national football team.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  VALUES ?team { dbr:Russia_national_football_team }
  ?team dbo:nickname ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
293,9,train,Give me the party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:Roger_Pryor_(actor) .
  ?person dbo:partyAffiliation dbr:Republican_Party_(United_States) .
}
```

This query does the following:
- Uses `dbo:spouse` to find individuals who are spouses of Roger Pryor (actor).
- Uses `dbo:partyAffiliation` to filter those individuals by their affiliation with the Republican Party in the United States.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,8,train,Give me the country of the work of Lao She.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?work dbo:author dbr:Lao_She .
  ?work dbo:country ?country .
  FILTER (str(?work) = ""Rickshaw_Boy"")
}
```

This query selects the country associated with the work ""Rickshaw Boy"" by Lao She.",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
119,40,train,"Give me the tenant of Spain and tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?primeMinister ?mayorOfSantiagoDeCompostela ?event
WHERE {
  # Find the current Prime Minister of Spain
  ?primeMinister a dbo:PrimeMinister ;
                dbo:country dbr:Spain .

  # Find the current Mayor of Santiago de Compostela
  ?mayorOfSantiagoDeCompostela a dbo:Mayor ;
                              dbo:city dbr:Santiago_de_Compostela .

  # Find events related to Anxo Quintana's leadership roles
  ?event dbo:agent dbr:Anxo_Quintana .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
531,34,train,"Give me the office of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Identify Miguel Maura
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura""@en .

  # Find his office related to the Madrid City Council election in 2003
  ?office dbo:positionHeldBy ?miguelMaura ;
          dbo:election dbr:Madrid_City_Council_election,_2003 .

  # Ensure the office is associated with being a tenant of the residence of an office holder
  ?office dbo:residenceOfLeader ?leaderResidence .
  ?leaderResidence dbo:tenant ?miguelMaura ;
                   dbo:leader dbr:Office_holder .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,56,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Stonebwoy (Elorm Kabu Amenyah)
  VALUES ?stonebwoy { dbr:Stonebwoy }
  
  # Find artists associated with Stonebwoy
  ?stonebwoy dbo:associatedMusicalArtist ?artist .

  UNION

  # Native musician from Central Region, Ghana
  ?centralMusician a dbo:Musician ;
                  dbo:nationality dbr:Ghana ;
                  dbo:birthPlace ?place .
  
  FILTER(CONTAINS(LCASE(str(?place)), ""central region""))

  # Find artists associated with the native musician
  ?centralMusician dbo:associatedMusicalArtist ?artist .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,8,train,Give me the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?allanArbus .
  ?allanArbus foaf:name ""Allan Arbus""@en.
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
513,5,train,Give me the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  wd:Q1699 wdt:P6 ?leader .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
353,43,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William I (William of Hauteville)
  ?williamI a dbo:Person ;
            foaf:name ""William Iron Arm""@en ;
            dbo:childOf ?tancred .

  # Roger II and Elvira's child
  ?rogerII a dbo:Person ;
           foaf:name ""Roger II of Sicily""@en ;
           dbo:spouse ?elvira ;
           dbo:child ?child .
  
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile""@en .

  # The child we are interested in
  ?child a dbo:Person ;
         dbo:parent ?rogerII, ?elvira ;
         dbo:royalty true ;
         dbo:officeHolder true .

  # Find the father of this child
  ?father a dbo:Person ;
          dbo:spouse ?mother ;
          dbo:child ?child .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
723,11,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of Stone Sour.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the producer organization/group of ""Nothing to Gein""
  ?nothingToGein dbr:Nothing_to_Gein .
  ?nothingToGein dbo:producer ?producer .

  # Ensure the producer is an organization or group
  ?producer a ?type .
  FILTER (?type IN (dbo:Band, dbo:MusicalGroup))

  # Find band members of this producer
  ?member dbo:bandMemberOf ?producer .

  # Ensure these members are also part of ""Stone Sour""
  ?stoneSour dbr:Stone_Sour .
  ?member dbo:bandMemberOf ?stoneSour .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
816,0,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,59,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?famousWork WHERE {
  # Find the fictional character created by Kent Allard
  ?character dbo:creator dbr:Kent_Allard ;
             a dbo:FictionalCharacter .

  # Get the professional role of this character
  ?character dbo:profession ?professionalRole .

  # Find Johnny Doughboy and his famous work
  ?actor foaf:name ""Johnny Doughboy"" ;
         dbo:famousWork ?famousWork .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,59,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of the movie with the author of Smartbomb (book).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor
WHERE {
  # Step 1: Find the song by T.I.
  ?song dbo:artist dbr:T.I._(rapper) .
  
  # Step 2: Ensure it's a musical work and a song
  ?song rdf:type dbo:Song ;
        rdf:type dbo:MusicalWork .

  # Step 3: Get the album of this song
  ?album dbo:song ?song .

  # Step 4: Find the actor associated with this album
  ?actor foaf:name ?name .
  ?album dbo:performer ?actor .

  # Step 5: Identify the author of ""Smartbomb""
  dbr:Smartbomb dbo:author ?author .

  # Step 6: Find a movie where this author acted
  ?movie dbo:starring ?author ;
         dbo:starring ?commonActor .

  # Step 7: Ensure the actor from the album is also in this movie
  FILTER(?actor = ?commonActor)
}
```",6,8,7,3,2,3,3,71,0,0,10,0,0.0,0
384,2,train,"Give me the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?result . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor WHERE {
  # Identify Patrice Martin-Lalande's resource
  dbr:Patrice_Martin-Lalande dbo:office ?office .
  
  # Find the successor of this office
  ?office dbo:successor ?successor .

  # Ensure the successor is a politician
  ?successor rdf:type dbo:Politician .

  # Ensure the successor is French
  ?successor dbp:nationality dbr:France .
}
```

This query assumes that there's an `office` property linking Patrice Martin-Lalande to his political role and a `successor` property indicating who succeeded him. It also filters successors by their type (politician) and nationality (French).",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
472,21,train,Give me the administration of Christian IX of Denmark and administration of the mayor of Duchy of Schleswig and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?mayor ?territory
WHERE {
  # Administration of Christian IX of Denmark
  OPTIONAL {
    dbr:Christian_IX_of_Denmark dbo:positionHeld ?administration .
  }
  
  # Mayor of the Duchy of Schleswig (historical context)
  OPTIONAL {
    dbr:Duchy_of_Schleswig dbo:mayor ?mayor .
  }

  # Territories administered from Copenhagen
  OPTIONAL {
    ?territory dbo:administrativeCapital dbr:Copenhagen .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
633,1,train,"Give me the parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?francisI (dbr:François_Ier,_Duke_of_Lorraine)
  
  ?francisI dbo:childOf ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
293,36,train,Give me the party member of Republican Party (United States) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember ?personWithSameBirthName
WHERE {
  # Find a party member of the Republican Party (United States)
  ?partyMember dbo:politicalParty dbr:Republican_Party_(United_States) .

  # Get Tisha Sterling's parent
  ?tishaSterling dbo:parent ?parent .
  FILTER(STR(?tishaSterling) = ""Tisha_Sterling"") .

  # Find the birth name of the parent
  ?parent dbo:birthName ?birthName .

  # Find a person with the same birth name
  ?personWithSameBirthName dbo:birthName ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
595,24,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?bookTitle WHERE {
  # Find the commander of the PLA during the Third Taiwan Strait Crisis
  ?person dbo:position ?position .
  ?position dbo:organization dbr:People's_Liberation_Army ;
            dbo:startDate ?startDate ;
            dbo:endDate ?endDate .
  
  FILTER (
    EXISTS { ?crisis dbo:name ""Third Taiwan Strait Crisis"" . }
    && ?crisis dbo:date ?crisisDate
    && (?startDate <= ?crisisDate && ?endDate >= ?crisisDate)
  )
  
  # Find a book authored by Bill Clinton
  dbr:My_Life dbo:author dbr:Bill_Clinton .
  dbr:My_Life dbo:title ?bookTitle .

  BIND(?person AS ?commander)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
68,9,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?maximilian dbo:spouse ?spouse .
  ?maximilian dbo:child ?child .
  
  FILTER (STRSTARTS(STR(?maximilian), ""http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor""))
  
  ?catherine dbo:mother ?child .
  ?catherine dbr:Catherine_of_Austria .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
39,31,train,Give me the professional in  and professional in the profession of the producer of Coke Studio Philippines.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?profession
WHERE {
  # Find the producer(s) of Coke Studio Philippines
  ?show dbo:producer ?producer .
  
  FILTER (str(?show) = ""Coke_Studio_Philippines"")

  # Get the professions of these producers
  OPTIONAL { ?producer dbo:occupation ?profession . }
}
```",4,4,5,3,2,3,3,71,0,0,39640,0,0.0,0
258,13,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?universityName ?establishmentDate WHERE {
  ?person dbo:almaMater dbr:University_of_São_Paulo .
  FILTER(?person = dbr:Luiza_Erundina) .
  
  OPTIONAL { 
    dbr:University_of_São_Paulo dbo:foundingDate ?establishmentDate .
  }
  
  BIND(dbr:University_of_São_Paulo AS ?university)
  SERVICE <http://dbpedia.org/sparql> {
    ?university rdfs:label ?universityName .
    FILTER(LANG(?universityName) = 'en')
  }
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
816,59,train,"Give me the parent of the professional in the profession of Eugène Cattin and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:profession ?profession .
  
  # Movies he acted in
  ?movie dbo:starring dbr:Eugène_Cattin .

  # People who died in Los Angeles
  ?person dbo:deathPlace dbr:Los_Angeles .
  
  # Link the movie to a person who died in Los Angeles
  ?movie dbo:starring ?person .

  # Find the parent of his profession or the genre of the movie
  ?profession dbo:parentCategory ?parent .
  OPTIONAL { ?movie dbo:genre ?parent . }
}
```",6,7,7,3,2,3,3,71,0,0,3,0,0.0,0
871,52,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Frederick Stanley, 16th Earl of Derby and his child
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child1 .
  
  # Child's parent (should be Frederick Stanley)
  ?child1 dbo:parent ?frederickStanley .

  # Awardee of Rodney Lees' award
  ?awardee dbo:awardReceived dbr:Award_by_Rodney_Lees .
  
  # Father of Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:father ?parent .

  # The parent should be the same individual in all cases
  FILTER (?frederickStanley = ?awardee && ?parent = ?frederickStanley)
}
```

This query assumes that:
- `dbo:child` and `dbo:parent` are used to denote child-parent relationships.
- `dbo:awardReceived` is used for award relationships.
- The resources like `dbr:Frederick_Stanley,_16th_Earl_of_Derby`, `dbr:Award_by_Rodney_Lees`, and `dbr:Arthur_Stanley_(politician)` are correctly named in DBpedia.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
258,9,train,"Give me the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate WHERE {
  dbr:Luiza_Erundina dbo:almaMater ?university .
  
  ?university rdf:type dbo:University ;
              rdf:type dbo:Organisation ;
              rdf:type dbo:EducationalInstitution .

  ?university dbo:foundingDate ?foundingDate .
}
```",2,5,3,2,1,3,2,20,1,0,0,1.0,1.0,1.0
492,19,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName ?deathPlace WHERE {
  # Actor of ""The Sky Ranger"" (1928)
  OPTIONAL {
    ?film dbr:The_Sky_Ranger_(1928_film) .
    ?film dbo:starring ?actor .
    ?actor rdfs:label ?actorName .
    FILTER(CONTAINS(LCASE(?actorName), ""actor""))
    ?actor dbo:deathPlace ?deathPlace1 .
  }

  # Sal Mineo
  OPTIONAL {
    dbr:Sal_Mineo dbo:deathPlace ?deathPlace2 .
    BIND(""Sal Mineo"" AS ?actorName)
  }

  # Carolyn Jones
  OPTIONAL {
    dbr:Carolyn_Jones dbo:deathPlace ?deathPlace3 .
    BIND(""Carolyn Jones"" AS ?actorName)
  }
  
  FILTER(?deathPlace1 || ?deathPlace2 || ?deathPlace3)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
737,46,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result WHERE {
  # Duke Philipp of Württemberg's child
  ?dukeChild dbo:childOf dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # Grandchild of Duke Philipp (child of his child)
  ?grandchild dbo:childOf ?dukeChild .

  # Archduchess Helena of Austria's spouse
  ?spouse dbp:spouse dbr:Archduchess_Helena_of_Austria .

  # Child of Archduchess Helena's spouse
  ?child dbo:childOf ?spouse .

  # Predecessor in line (assuming a simple predecessor relationship)
  ?predecessor dbo:predecessorOf ?child .

  # Ensure the result is royalty
  ?result rdf:type dbo:Monarch .
  
  # Linking the grandchild and predecessor
  FILTER(?grandchild = ?predecessor)

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,15,train,"Who is the parent of the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?child .
  
  # Find children who are royalty
  ?child a dbo:Monarch ;
         dbo:country ?country .

  # Get the parent of this royal child
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
905,18,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples and child of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Charles Martel of Anjou
  ?charlesMartel dbr:Charles_Martel_of_Anjou .
  
  # Parent of Charles Martel of Anjou
  ?charlesMartel dbo:father ?parent .

  # Spouse of Charles II of Naples
  ?parent dbo:spouse dbr:Charles_II_of_Naples .

  # Child of Stephen V of Hungary
  ?parent dbo:child dbr:Stephen_V_of_Hungary .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
158,13,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia
  dbr:Sandro_Bertaggia a dbo:Person ;
    dbo:nationality dbr:Grand_Duchy_of_Finland ;
    dbo:birthPlace ?birthplace .

  # Ensure birthplace is a country
  ?birthplace a dbo:Country .

  # Find decedents at the same birthplace
  ?decedent a dbo:Person ;
    dbo:deathPlace ?birthplace .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
297,1,train,Give me the institution in Georgia (U.S. state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution WHERE {
  ?institution a dbo:EducationalInstitution .
  ?institution dbo:location dbr:Georgia_(U.S._state) .
}
```",1,1,2,1,1,2,2,9,0,0,941,0,0.0,0
293,49,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember ?personWithSameBirthName
WHERE {
  # Part 1: Find the ruling party in Central, Louisiana
  ?central dbo:isPartOf ?state .
  ?state dbo:name ""Louisiana"" .
  ?central dbp:city ""Central"" .
  ?rulingParty dbo:hasMember ?partyMember .
  ?rulingParty dbo:country dbr:Louisiana .

  # Part 2: Find Tisha Sterling's parent and their birth name
  ?tisha dbo:parent ?parent .
  ?parent dbp:name ?birthName .

  # Find a person with the same birth name as Tisha Sterling's parent
  ?personWithSameBirthName dbp:birthday ?anyDate ;
                          dbp:name ?birthName .
}
```

This query assumes that DBpedia has structured data for political parties, their members, and personal details like names and relationships. Adjustments might be necessary based on the actual schema and available data in DBpedia.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
531,27,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Step 1: Find the political party associated with Miguel Maura
  ?party dbo:member dbr:Miguel_Maura .
  
  # Step 2: Identify the leader of that political party
  ?leader dbo:positionHeld ?partyLeaderPosition .
  ?partyLeaderPosition dbo:positionTitle ""Leader""@en .
  
  # Step 3: Determine the office held by this leader
  ?leader dbo:office ?office .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
585,6,train,Give me the native of New York (state) and child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Linda Miller, the actress
  ?linda a dbo:Actor ;
         foaf:name ""Linda Miller""@en .
  
  # Find her children
  ?linda dbo:child ?child .

  # Ensure the child is native to New York (state)
  ?child dbo:nativePlace dbr:New_York_(state) .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
353,3,train,"Who is the child, that is a royalty, of Roger II of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  # Find Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?child .
  
  # Check if the child has a royal title
  OPTIONAL { ?child dbo:title ?title . FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"") }
}
```",1,2,2,1,1,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
375,17,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?artist WHERE {
  # Find the author of ""A Picture of Britain""
  dbr:A_Picture_of_Britain dbo:author ?author .

  # Find an English settlement
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom ;
              rdfs:label ?locationLabel .
  
  FILTER (lang(?locationLabel) = 'en' && regex(str(?locationLabel), ""England""))

  # Find the native of this settlement who is an artist and musical artist
  ?native dbo:nativePlace ?settlement ;
          a dbo:Artist, dbo:MusicalArtist .

  # Get the parent of this native (artist)
  ?parent dbo:child ?native .
  
  # Bind the author and artist to variables
  BIND(?author AS ?bookAuthor)
  BIND(?parent AS ?artist)
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
39,48,train,"Give me the professional in the profession of the producer of Coke Studio Philippines and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?band
WHERE {
  # Step 1: Identify Robert Lamar Thompson as a musical artist
  dbr:Robert_Lamar_Thompson dbo:profession dbr:Musical_artist .

  # Step 2: Find the producer of Coke Studio Philippines associated with him
  ?cokeStudio dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  # Assuming Robert Lamar Thompson is linked to Coke Studio Philippines in some way
  ?cokeStudio dbo:performer dbr:Robert_Lamar_Thompson .

  # Step 3: Determine the band of this producer if they are also a musical artist
  OPTIONAL {
    ?producer dbo:profession dbr:Musical_artist .
    ?producer dbo:band ?band .
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
871,42,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child1 .
  
  # Child who is a politician
  ?child1 rdf:type dbo:Politician ;
          dbo:parent ?father .

  OPTIONAL {
    # Awardee of Commander of the Royal Victorian Order
    ?awardee dbo:title dbr:Commander_of_the_Royal_Victorian_Order ;
            dbo:parent ?child2 .
    
    # Ensure this child is the same as the politician child
    FILTER(?child1 = ?child2)
  }

  OPTIONAL {
    # Edward Stanley, 17th Earl of Derby
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?child3 .
    
    # Ensure this child is the same as the politician child
    FILTER(?child1 = ?child3)
  }
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,5,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Prince Faisal bin Hussein
  dbr:Faisal_bin_Hussein dbo:parent ?parent .
  
  # Find children of Prince Faisal bin Hussein who are royalty
  ?parent dbo:child ?child .
  ?child a ?royaltyClass .

  FILTER (
    ?royaltyClass IN (
      dbr:Monarch, 
      dbr:Princess, 
      dbr:Prince, 
      dbr:RoyalFamilyMember,
      # Add more classes if needed
    )
  )
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
737,58,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Find Archduchess Margarete Sophie of Austria's parent
  ?parent a dbo:Person ;
          dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .

  # Find the child of this parent (grandchild of Archduchess)
  ?grandchild a dbo:Person ;
              dbo:child ?parent .

  # Find Carl, Duke of Württemberg's predecessor
  ?predecessor a dbo:Person ;
               dbo:successor dbr:Claude,_Duke_of_W%C3%BCrttemberg .

  # Find Duke Philipp of Württemberg's child and then the grandchild (great-grandchild)
  ?philippChild a dbo:Person ;
                dbo:child dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  ?philippGrandchild a dbo:Person ;
                     dbo:child ?philippChild .

  # Find the individual who is both the grandchild of Archduchess's parent and predecessor of Carl
  ?individual a dbo:Person ;
              rdfs:label ?name ;
              dbo:child ?parent ; # Grandchild of Archduchess's parent
              dbo:successor dbr:Claude,_Duke_of_W%C3%BCrttemberg . # Predecessor of Carl

  # Ensure the individual is also a great-grandchild of Duke Philipp
  ?individual dbo:child ?philippGrandchild .

  FILTER (CONTAINS(LCASE(?name), ""royalty"")) # Ensure they are royalty
}
ORDER BY ?name
LIMIT 1",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,57,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorOfMadrid ?militaryConflict ?leaderOfCPR
WHERE {
  # Find the Mayor of Madrid
  ?mayorOfMadrid a dbo:Mayor ;
                 dbo:city dbr:Madrid .

  # Find military conflicts involving Manuel Pinto da Costa
  ?conflict a dbo:MilitaryConflict ;
           dbo:participant dbr:Manuel_Pinto_da_Costa .

  # Find the leader of the Conservative Republican Party (Spain)
  ?leaderOfCPR a dbo:Politician ;
               dbo:party dbr:Conservative_Republican_Party_(Spain) .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
756,5,train,Give me the leader of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?role WHERE {
  ?leader a dbo:Person .
  ?leader dbo:officeHolderOf dbr:Federal_Republic_of_Germany .
  OPTIONAL { ?leader dbo:positionHeld ?role . }
  FILTER (CONTAINS(LCASE(?leader), ""chancellor"") || CONTAINS(LCASE(?leader), ""president""))
}
ORDER BY ?leader
LIMIT 10",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,12,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?eleonore dbo:childOf dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?eleonore a dbr:Eleonora_of_Austria_(1577-1626) .
  ?eleonore dbo:spouse ?spouse .
  ?spouse dbo:title ""Queen of Poland""@en .
  ?eleonore dbo:father ?father .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
258,6,train,Give me the establishment of 1955-12-02 and alma mater of Eleonora Menicucci.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?establishmentDateLabel ?almaMaterLabel
WHERE {
  # Find the establishment date entity for December 2, 1955
  dbr:December_2,_1955 dbo:dateAccepted ?establishmentDate.
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Get Eleonora Menicucci's alma mater
  OPTIONAL {
    dbr:Eleonora_Menicucci dbo:almaMater ?almaMater.
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }
}
```

This query does the following:
- It looks for an entity representing December 2, 1955, and retrieves its label using `dbo:dateAccepted`.
- It attempts to find Eleonora Menicucci's alma mater using `dbo:almaMater` and retrieves its label.

Note: The exact resource identifiers (like `dbr:December_2,_1955`) might need adjustment based on the actual DBpedia schema and available resources. If these specific entities do not exist, you may need to adjust the query or use alternative methods to represent the date.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,48,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent
WHERE {
  # Step 1: Identify the commander in Siege of Mukha
  ?commander dbo:event dbr:Siege_of_Mukha .
  
  # Step 2: Find the parent who is royalty
  ?parent dbo:spouseOrPartner ?commander ;
          a dbo:Monarch .

  # Step 3: Determine the child of this royal parent
  ?childOfParent dbo:parent ?parent .

  # Step 4: Identify the father of the father (royalty and office holder) of Na'od
  ?fatherNaod dbo:parent dbr:Na'od ;
              a dbo:Monarch, dbo:OfficeHolder .
  
  ?grandFatherNaod dbo:parent ?fatherNaod .

  # Linking the child from step 3 to the grand father from step 4
  FILTER(?childOfParent = ?grandFatherNaod)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
38,4,train,"Give me the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?name WHERE {
  # Find commanders involved in the Korean War
  ?commander dbo:officeHolderOf ?office .
  ?commander dbo:spouseOrPartner ?war .
  ?war rdfs:label ""Korean War""@en .

  # Ensure they are office holders
  ?commander dbo:positionHeld ?position .
  
  # Get the name of the commander
  ?commander foaf:name ?name .

  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
```",1,2,2,1,1,3,2,20,0,0,42,0,0.0,0
103,22,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  ?episode dbo:starring ?actor .
  ?episode dbp:title ""Dispatches from Elsewhere"" .

  UNION

  # Find actors associated with ""The Shadow""
  ?shadowCharacter dbo:portrayedBy ?actor .
  ?shadowCharacter rdfs:label ""The Shadow""@en .

  FILTER(?actor = ?actor) # Ensure the same actor satisfies both conditions
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
39,9,train,Give me the professional in Singer and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Singer .
  ?person a dbo:Actor .
}
```

This query assumes you want to find individuals who are both singers and actors. You can replace `dbo:Actor` with any other profession by changing the class in the second line of the `WHERE` clause.",2,2,3,1,2,3,3,71,0,0,5422,0,0.0,0
386,21,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war1 ?war2 WHERE {
  # Find individuals who received the Golden Sword for Bravery in the Russian Empire
  ?awardee dbo:award dbr:Golden_Sword_for_Bravery .
  ?awardee dbo:nationality dbr:Russian_Empire .

  OPTIONAL { 
    ?awardee dbo:participatedIn ?war1 .
    FILTER (strstarts(str(?war1), ""http://dbpedia.org/resource/Category:Wars_involving_the_Russian_Empire""))
  }

  # Find information about Karl Gustav von Baggovut
  OPTIONAL {
    dbr:Karl_Gustav_von_Baggovut dbo:participatedIn ?war2 .
    FILTER (strstarts(str(?war2), ""http://dbpedia.org/resource/Category:Wars_involving_the_Russian_Empire""))
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,17,train,Give me the actor of Rustlers' Rhapsody and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  ?film dbo:title ""Rustlers' Rhapsody""@en .
  ?film dbo:starring ?actor .

  OPTIONAL { 
    ?actor foaf:name ""The Shadow""@en .
  }
}
```

This query looks for films with the title ""Rustlers' Rhapsody"" and finds actors starring in them. It then checks if any of these actors have an associated name ""The Shadow.""",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
103,10,train,Give me the actor of Dispatches from Elsewhere and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession 
WHERE {
  # Find the DBpedia resource for ""Dispatches from Elsewhere""
  dbr:Dispatches_from_Elsewhere dbo:starring ?actor .
  
  # Get the profession of each actor
  OPTIONAL { ?actor dbo:occupation ?profession . }
}
```",2,2,3,1,2,3,3,71,2,6,0,0.25,1.0,0.4
295,12,train,Give me the native of the birth place of Victor Saville and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeLanguageVictorSaville ?nativeLanguageJimmyCliff
WHERE {
  # Victor Saville's birthplace
  dbr:Victor_Saville dbo:birthPlace ?birthPlaceVictorSaville .
  
  # Jimmy Cliff's birthplace
  dbr:Jimmy_Cliff dbo:birthPlace ?birthPlaceJimmyCliff .

  # Native language of Victor Saville's birthplace
  ?birthPlaceVictorSaville dbp:nativeLanguage ?nativeLanguageVictorSaville .

  # Native language of Jimmy Cliff's birthplace
  ?birthPlaceJimmyCliff dbp:nativeLanguage ?nativeLanguageJimmyCliff .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
58,9,train,Give me the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Linda Bruckheimer""@en .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
353,30,train,Give me the father of William II of Sicily and child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # William II of Sicily and his father
  ?william2 dbo:parent ?father .
  
  # Ensure the person is William II of Sicily
  ?william2 rdfs:label ""William II of Sicily""@en .

  # The father must be a child of Roger II of Sicily
  ?father dbo:childOf ?rogerII .
  ?rogerII rdfs:label ""Roger II of Sicily""@en .

  # Further, the father should have a grandchild who is a child of Alfonso VI
  ?grandChild dbo:parent ?father .
  ?alfonsoVIChild dbo:parent ?grandChild .
  ?alfonsoVIChild rdfs:label ""Alfonso VI of León and Castile""@en .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
19,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:fieldOfExpertise dbr:YourFieldOfInterest .
  OPTIONAL { ?professional dbo:location dbr:YourLocation . }
}
```",1,1,2,1,1,2,2,9,0,0,39640,0,0.0,0
628,34,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find GS9 members who are artists and musical artists, native to Florida
  ?gs9Member a dbo:MusicalArtist ;
             dbo:nationality dbr:United_States_of_America ;
             dbo:birthPlace ?floridaLocation .
  
  FILTER EXISTS { ?floridaLocation dbo:stateOrProvinceName ""Florida"" }
  
  # Step 2: Ensure they are also artists
  ?gs9Member a dbo:Artist .

  # Step 3: Find associated musical artists with these GS9 members
  ?associatedArtist dbo:member ?gs9Member ;
                   a dbo:MusicalArtist .
  
  # Step 4: Retrieve band members of those associated musical artists
  ?bandMember dbo:member ?associatedArtist ;
              a dbo:MusicalArtist .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
347,53,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:spouse ?eleonore .
  ?eleonore rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
  
  ?commander dbo:father ?charlesII .
  ?charlesII rdfs:label ""Charles II, Archduke of Austria""@en .

  ?ferdinandII dbo:child ?ceciliaRenata .
  ?ceciliaRenata rdfs:label ""Cecilia Renata of Austria""@en .
  ?ferdinandII rdfs:label ""Ferdinand II, Holy Roman Emperor""@en .

  ?commander dbo:spouse ?ferdinandII .

  ?event dbo:subject ?commander .
  ?event rdf:type/(dbo:SocietalEvent|dbo:Event|dbo:TelevisionShow) .

  ?militaryForce dbo:commander ?commander .
  ?militaryForce rdfs:label ""Algerian War""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
103,34,train,"Give me the professional in  and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?profession ?movie WHERE {
  # Find the person Richard Grant Esterhuysen
  ?person a dbo:Person ;
          foaf:name ""Richard Grant Esterhuysen""@en ;
          dbp:birthday ?birthday .

  # Check if he has any profession
  OPTIONAL { ?person dbo:occupation ?profession . }

  # Find movies that are also television shows where he acted
  ?movie a dbo:Film ;
         dbo:starring ?person ;
         dbo:genre ?genre .
  
  FILTER EXISTS {
    ?tv dbr:Category:Television_films ;
       dbo:film ?movie .
  }
}
```",4,5,5,3,2,3,3,71,0,0,13,0,0.0,0
263,23,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Find William Gayner's birthplace
  ?williamGayner a dbo:Person ;
                 foaf:birthPlace ?birthPlaceWilliam .

  FILTER (str(?williamGayner) = ""William_Gayner"") .

  # Step 2: Identify Claude Bowes-Lyon's child
  ?claudeBowesLyon a dbo:Person ;
                   foaf:child ?childClaude .

  FILTER (str(?claudeBowesLyon) = ""Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne"") .

  # Step 3: Find the parent of Claude's child
  ?parent a dbo:Person ;
          foaf:child ?childClaude .

  # Step 4: Check if the birthplace is both a region and a country
  ?birthPlaceParent dbo:type dbr:Region ;
                   dbo:type dbr:Country ;
                   foaf:birthPlace ?parent .

  # Step 5: Get the native of this birthplace
  ?native dbo:nativeOf ?birthPlaceParent .
}",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
39,28,train,Give me the professional in  and professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalInSameProfession ?bandOfBobThompson
WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .

  # Find other professionals in the same profession as Sam Concepcion
  ?person dbo:profession ?samProfession .
  FILTER(?person != dbr:Sam_Concepcion)
  BIND(?person AS ?professionalInSameProfession)

  # Find Bob Thompson's band
  dbr:Bob_Thompson_Musician dbo:band ?bobBand .
  BIND(?bobBand AS ?bandOfBobThompson)
}
```",4,4,5,2,3,3,3,71,0,0,4,0,0.0,0
345,2,train,"Give me the name of Mitaka, Tokyo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Mitaka,_Tokyo> <http://xmlns.com/foaf/0.1/name> ?result . }","```sparql
SELECT ?name WHERE {
  wd:Q1119 rdfs:label ?name .
  FILTER (LANG(?name) = ""en"")
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
687,25,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:managerOf ?team .
  
  ?player dbr:Sergio_Agüero ;
          dbo:playsFor ?team .

  FILTER EXISTS { ?person dbo:spouseOrPartner ?player }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`).
  
- **SELECT Clause**: We are interested in the team (`?team`) where this person is a manager.

- **Person Identification**:
  - `a dbo:SoccerPlayer`: Ensures the person is a soccer player.
  - `dbo:birthDate ""1979-11-03""^^xsd:date`: Filters by birthdate.
  - `dbo:managerOf ?team`: Identifies teams where the person is a manager.

- **Connection to Sergio Agüero**:
  - `dbr:Sergio_Agüero` identifies the resource for Sergio Agüero.
  - `dbo:playsFor ?team`: Finds teams where Sergio Agüero has played.
  
- **Filter**: Ensures that there is a connection (e.g., spouse or partner) between the person and Sergio Agüero, indicating they have been on the same team.

This query assumes that the relationship between players can be identified through properties like `dbo:spouseOrPartner`, which might need adjustment based on actual DBpedia data availability.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
941,16,train,"Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel and child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://dbpedia.org/ontology/parent> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Duchess Luise of Brunswick-Wolfenbüttel and her spouse
  dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?luiseSpouse .

  # Spouse of the spouse (which is Duchess Luise herself)
  ?luiseSpouse dbo:spouse ?spouseOfSpouse .

  # Duke Anthony Ulrich of Brunswick and his parent
  dbr:Duke_Anthony_Ulrich_of_Brunswick dbo:parent ?dukeParent .

  # Find a royal child of the parent
  ?royalChild dbo:childOf ?dukeParent .
  ?royalChild rdf:type dbo:Monarch .

  # Ensure the spouse is related to this royal child
  ?spouseOfSpouse dbo:spouse ?royalChild .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
609,4,train,Who is the awardee of List of awards and nominations received by Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?year WHERE {
  VALUES ?person { dbr:Vince_Gilligan }
  
  ?award dbo:recipient ?person .
  OPTIONAL { ?award dbo:dateReceived ?year . }
}
ORDER BY ?year
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
557,27,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the actor of ""High Society Blues""
  ?actor dbo:actedIn dbr:High_Society_Blues .
  
  # Identify a movie or work that is their claim to fame
  ?fameWork (dbo:starring|dbo:work) ?actor ;
            rdf:type dbo:Film .

  # Find the producer(s) of that movie or work
  ?fameWork dbo:producer ?producer .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
492,8,train,Give me the death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?film dbo:starring dbr:Douglas_Fairbanks_Jr. .
  ?film rdfs:label ""The Sky Ranger""@en .
  FILTER(CONTAINS(LCASE(?film), ""the sky ranger""))
  
  OPTIONAL { 
    ?actor dbo:birthName ""Douglas Fairbanks Jr.""@en .
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
39,34,train,Give me the professional in the profession of the producer of Coke Studio Philippines and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?profession ?band ?musician
WHERE {
  # Find the producer of Coke Studio Philippines
  ?cokeStudio dbr:Coke_Studio_Philippines dbo:producer ?producer .
  
  # Get the profession of this producer
  ?producer dbo:occupation ?profession .

  # Find Bob Thompson's band
  ?bobThompson dbr:Bob_Thompson_(musician) dbo:musicalBand ?band .

  # Retrieve professionals in these roles
  ?person1 dbo:occupation ?profession .
  ?person2 dbo:musicalBand ?band .
  
  FILTER(?producer != ?person1 && ?band != ?person2)
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
386,11,train,Give me the war of the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Golden Sword for Bravery""@en .
  OPTIONAL { ?awardee dbo:participatedInWar ?war . }
}
```

This query does the following:
- Uses `dbo:recipient` to find individuals who received an award.
- Filters awards with the label ""Golden Sword for Bravery"".
- Optionally retrieves wars in which these awardees participated.",2,2,3,2,1,2,3,28,0,0,15,0,0.0,0
668,4,train,Who is the person born as Elorm Kabu Amenyah?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?person dbo:birthName ?birthName . FILTER (str(?birthName) = ""Elorm Kabu Amenyah"") }
}
```",1,1,2,1,1,3,3,71,1,2087818,0,4.789687228634283e-07,1.0,9.579369869050012e-07
386,0,train,Give me the entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Russian_Empire .
}
```",1,1,2,1,1,2,3,28,0,776,87,0.0,0.0,0
386,1,train,Give me the war of Karl Gustav von Baggovut.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson .
  ?person foaf:name ""Karl Gustav von Baggovut""@en .
  ?person dbo:servedIn ?army .
  ?army dbo:participatedIn ?war .
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
816,35,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies Herschel Bernardi acted in
  ?movieHerschel dbo:starring dbr:Herschel_Bernardi .
  
  # Find Allan Arbus's child
  ?allanArbus dbp:child ?childAllan .

  # Find works (movies) associated with Allan Arbus's child
  ?movieChild dbo:starring ?childAllan .

  # Ensure the movie is common between Herschel Bernardi and Allan Arbus's child
  FILTER (?movieHerschel = ?movieChild)

  # Get actors from these movies
  ?movieHerschel dbo:starring ?actor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,9,train,Give me the actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  # Find actor in ""Always"" (1989 film)
  ?film a dbo:Film ;
        dbo:title ""Always""@en ;
        dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1989)
  
  ?film dbo:starring ?actor .

  # Find spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
531,30,train,"Give me the office of Mariano Rajoy and tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  # Identify Mariano Rajoy
  ?person a dbo:Politician ;
          foaf:name ""Mariano Rajoy""@en .
  
  # Find offices held by him in Madrid
  ?office dbo:heldBy ?person ;
          dbo:location dbr:Madrid ;
          rdf:type dbo:Office .

  # Ensure he is the leader of the Conservative Republican Party (Spain)
  ?party a dbo:PoliticalParty ;
         dbp:name ""Conservative Republican Party (Spain)""@en .
  
  ?office dbo:positionHeldBy ?person ;
          dbo:politicalParty ?party .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,33,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find an album by T.I. that is a song and a musical work
  ?album dbo:artist dbr:T.I. ;
         dbo:genre dbr:Songs ;
         dbo:workType dbr:Musical_work .

  # Get the actor associated with this album
  ?album dbp:actor ?actor .

  # Check if this actor acted in ""Shelby Oaks""
  ?shelbyOaks dbo:starring ?actor .
  FILTER (strstarts(str(?shelbyOaks), str(dbr:Shelby_Oaks)))

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,56,train,"Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceGlennYoungkin ?birthPlaceAwardee ?birthPlaceAuthor WHERE {
  # Birthplace of Glenn Youngkin
  OPTIONAL { 
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlaceGlennYoungkin .
  }

  # Awardee related to Vince Gilligan's awards
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?birthPlaceAwardee .
  }
  
  # Author of ""El Deafo"" who is American
  OPTIONAL {
    dbr:El_Deafo dbo:author ?author .
    ?author dbo:nationality dbr:United_States .
    ?author dbo:birthPlace ?birthPlaceAuthor .
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
198,15,train,"Give me the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  ?award a dbo:Award ;
        dbo:givenBy dbr:United_States_Congress .
  ?award dbo:recipient ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,2196,0,0.0,0
158,20,train,"Give me the person decedent at Switzerland and native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?deathPlace WHERE {
  ?person dbo:placeOfBirth ?birthPlace .
  ?person dbo:deathPlace ?deathPlace .

  FILTER (CONTAINS(LCASE(STR(?deathPlace)), ""switzerland""))

  # Check if the person was native of Alexander II's administration
  OPTIONAL { 
    ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
  }

  # Check if the person was native of the Russian Empire
  OPTIONAL {
    ?person dbo:nationality dbr:Russian_Empire .
  }
  
  FILTER EXISTS { ?person dbo:nationality dbr:Grand_Duchy_of_Finland . }
  FILTER EXISTS { ?person dbo:nationality dbr:Russian_Empire . }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
68,7,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father .
  FILTER (
    EXISTS { ?father wdt:P31 wd:Q5 . } # Ensure the father is a human
    && EXISTS { ?father wdt:P26 wd:Q123456 . } # Catherine of Austria, Queen of Portugal
    && EXISTS { ?father wdt:P26 wd:Q654321 . } # Isabella of Austria
  )
}
```

In this query:
- Replace `wd:Q123456` with the DBpedia item for Catherine of Austria, Queen of Portugal.
- Replace `wd:Q654321` with the DBpedia item for Isabella of Austria.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
198,26,train,Give me the force of the awardee of the award of Quincy Adams Gillmore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Quincy Adams Gillmore""@en .
  
  ?award dbo:recipient ?person ;
         rdf:type dbo:Award ;
         rdfs:label ""Medal of Honor""@en .

  OPTIONAL { 
    ?person dbo:militaryUnit ?force .
  }
}
```

This query does the following:
- Identifies Quincy Adams Gillmore as a `MilitaryPerson`.
- Finds an award (`Medal of Honor`) associated with him.
- Optionally retrieves any military unit (`?force`) linked to him.",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
159,55,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?successor WHERE {
  # Find the writer of ""Always the Love Songs""
  ?work dbo:title ""Always the Love Songs""@en .
  ?work dbo:author ?writer .

  # Identify Jean Baptist, Comte d'Arco
  ?person rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  
  # Find the successor of a commander in the Russo-Polish War (1654–1667)
  ?war dbo:title ""Russo-Polish War (1654–1667)""@en .
  ?commander dbo:participatedIn ?war ;
             dbo:succeededBy ?successor .

  # Ensure the successor is a politician and office holder
  ?successor rdf:type dbo:Politician ;
             dbo:officeHolder true .

  # Link Jean Baptist, Comte d'Arco to the war as a commander
  ?person dbo:commanderOf ?war .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
213,11,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo and country of Cat Country (novel).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find Chen Shui-bian, child of Chiang Ching-kuo
  ?person dbo:childOf dbr:Chiang_Ching-kuo .
  ?person rdfs:label ""Chen Shui-bian""@en .
  
  # Get the birthplace of Chen Shui-bian
  ?person dbo:birthPlace ?birthPlace .

  # Confirm ""Cat Country"" is associated with China
  OPTIONAL {
    dbr:Cat_Country dbo:setInCountry dbr:China .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
871,29,train,"Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley"" ;
          dbo:parent ?father .

  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley"" ;
          dbo:parent ?father .

  # Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley, 16th Earl of Derby"" .
  
  ?child a dbo:Person ;
         dbo:parent ?frederick ;
         dbo:parent ?father .

}
```

This query assumes that the individuals are uniquely identified by their names in DBpedia. It retrieves the father who is common to Arthur Stanley and Victor Stanley, and also the parent of Frederick Stanley's child.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,26,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find William Bayne and associated wars
  ?bayne a dbo:Person ;
         foaf:name ""William Bayne""@en .
  
  ?bayne dbo:associatedWith ?war .
  
  # Ensure the war is both a military conflict and an event
  ?war a dbo:MilitaryConflict, dbo:Event .

  # Find military forces involved in the war
  ?war dbo:militaryForce ?militaryForce .
}
```

This query does the following:
- Identifies William Bayne as a person.
- Finds wars associated with him that are both military conflicts and events.
- Retrieves distinct military forces involved in those wars.",3,5,4,3,1,3,3,71,0,0,529,0,0.0,0
293,57,train,"Give me the party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?spouse WHERE {
  # Find a member of the Republican Party (United States)
  ?partyMember dbo:memberOfParty dbr:Republican_Party_(United_States) .

  # Find films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Find actors in those films
  ?actor dbo:actedIn ?film .
  
  # Find the spouse of that actor
  ?actor dbp:spouse ?spouse .

  # Ann Sothern's birth name
  ?annSothern dbo:birthName ""Ann Sothern""@en .

  # Find people born with Ann Sothern's birth name
  ?person dbo:birthName ?annSothern .
  
  # Ensure the spouse is the person born as Ann Sothern's birth name
  FILTER(?spouse = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
158,14,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and person decedent at Switzerland.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOf ?decedentAt
WHERE {
  VALUES ?person { dbr:Alexander_II,_Grand_Duke_of_Finland }
  
  ?person dbo:birthPlace ?nativeOf .
  ?person dbo:deathPlace ?decedentAt .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
513,10,train,"Give me the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  # Find George Savage (politician) and his associated political party
  ?savage a dbo:Politician ;
          foaf:name ""George Savage"" ;
          dbo:party ?party .

  # Ensure the party is both an organization and a political party
  ?party a dbo:Organization, dbo:PoliticalParty .

  # Find the leader of that party
  ?party dbo:leader ?leader .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
668,8,train,Give me the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 foaf:name ""Joey B""@en .
  OPTIONAL { wd:Q123456 schema:givenName ?birthName . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Joey B. You can find this by searching for Joey B on DBpedia or using a SPARQL endpoint to query for his resource.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
628,1,train,Give me the person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?person dbo:birthName ?birthName . FILTER (lang(?birthName) = 'en') }
  FILTER regex(?birthName, ""Ackquille Jean Pollard"", ""i"")
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,17,train,"Give me the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?birthName WHERE {
  ?artist a dbo:Artist .
  ?artist dbo:nationality dbr:Ghana .
  ?artist dbo:birthPlace dbr:Central_Region_(Ghana) .
  OPTIONAL { ?artist foaf:name ?birthName . }
}
ORDER BY ?artist
LIMIT 10",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
159,0,train,Give me the successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?yuriiKhmelnytsky dbo:officeTitle ""Hetman of Ukraine""@en .
  ?yuriiKhmelnytsky dbo:succeededBy ?successor .
  FILTER (str(?yuriiKhmelnytsky) = str(dbr:Yuri_Khmelnytsky))
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
943,57,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?alterEgo WHERE {
  # Na'od's father
  ?na'od dbo:father ?father .
  
  # Father is royalty and an office holder, and child of Dawit I
  ?father a dbo:Monarch ;
          dbo:officeHolder ?office ;
          dbp:childOf ?dawitI .

  ?dawitI rdfs:label ""Dawit I""@en .
  
  # Lamont Cranston's alter ego
  ?cranston dbo:alterEgo ?alterEgo .
  ?cranston rdfs:label ""Lamont Cranston""@en .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
731,12,train,Give me the force of William Tennant (Royal Navy officer) and war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?event WHERE {
  # Find information about William Tennant
  ?tennant a dbo:MilitaryPerson ;
           foaf:name ""William Tennant"" ;
           dbo:rank ?position .

  # Find the event of the sinking of HMS Prince of Wales and HMS Repulse
  ?event dbo:eventType dbr:Sinking_of_HMS_Prince_of_Wales_and_HMS_Repulse ;
         dbo:participant ?tennant .
}
```

This query attempts to find:
- The rank or position (`?position`) held by William Tennant in the Royal Navy.
- His involvement (`?event`) in the specific event of the sinking of HMS Prince of Wales and HMS Repulse.

Please note that this query assumes the availability of relevant data in DBpedia. If the exact details are not present, you might need to refine or adjust the query based on available properties and relationships in the dataset.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,19,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  ?war dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  
  # Find battles involving forces in the Battle of Fort Royal
  ?battle dbo:participatedInBattle dbr:Battle_of_Fort_Royal .

  # Ensure the same war or battle is considered for both entities
  FILTER (?war = ?battle)

  # Get commanders involved in these wars/battles
  ?commander dbo:commanded ?unit .
  
  # Ensure the commander is linked to either of the units involved
  VALUES ?unit {
    dbr:30th_(Cambridgeshire)_Regiment_of_Foot
    dbr:Military_force_involved_in_the_Battle_of_Fort_Royal
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
628,3,train,"Give me the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?group dbo:member ?member .
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .
  
  FILTER(CONTAINS(LCASE(?group), ""gs9""))
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
756,46,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor season of 2006–07 VfL Bochum
  ?successorSeason a dbo:FootballLeagueSeason ;
                   dbo:succeeds dbr:2006%E2%80%9307_VfL_Bochum_season .

  # The manager is also a sports club, organization, and soccer club
  ?manager a dbo:SoccerClub, dbo:Organization, dbo:SportsTeam ;

           # Manager of the player in the successor season
           dbo:manages ?player ;
           dbo:memberOf ?successorSeason .

  # Player's association with the successor season
  ?player dbo:playsFor ?successorSeason .

  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativeCountry ?country .

  # Manager is associated with this country
  ?manager dbo:location ?country .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
39,21,train,Give me the professional in the profession of Sam Concepcion and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .
  
  # Bob Thompson's band
  dbr:Bob_Thompson_(musician) dbo:bandMemberOf ?bobBand .

  # Find other individuals with the same profession and band membership
  ?person dbo:profession ?samProfession ;
          dbo:bandMemberOf ?bobBand .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
628,19,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Bobby Shmurda's associated musical artist(s)
  {
    SELECT ?artist WHERE {
      VALUES ?bobbyShmurda (dbr:Bobby_Shmurda) .
      ?bobbyShmurda dbo:associatedMusicalArtist ?artist .
    }
  }

  UNION

  # Find 21 Savage's associated musical artist(s)
  {
    SELECT ?artist WHERE {
      VALUES ?ackquilleJeanPollard (dbr:Aké_Bloodz) . # 21 Savage's birth name
      ?ackquilleJeanPollard dbo:associatedMusicalArtist ?artist .
    }
  }

  # Retrieve band members who are also musical artists
  ?artist dbo:bandMember ?bandMember .
  FILTER EXISTS { ?bandMember a dbo:MusicalArtist . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,38,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?tvShow ?event ?writer
WHERE {
  # Find Jean Baptiste, Comte d'Arco and his role in a war
  ?person rdfs:label ""Jean Baptiste, Comte d'Arco""@en .
  ?person dbo:role ?commanderRole .
  ?war dbo:commander ?commanderRole .

  # Find the TV show or societal event related to this war
  OPTIONAL {
    ?tvShow dbo:subject ?war .
    ?event dbo:relatedTo ?war .
  }

  # Find the writer of ""Always the Love Songs""
  ?book rdfs:label ""Always the Love Songs""@en .
  ?book dbo:author ?writer .

}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
23,11,train,Give me the party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?partyLabel WHERE {
  ?sofiaPetro dbo:mother dbr:Sofía_Petro#Sofía_Petro .
  ?sofiaPetro dbo:father ?father .
  ?father dbp:party ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,2,3,28,0,0,6,0,0.0,0
293,13,train,"Give me the spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the movie ""1,000 Dollars a Minute""
  ?movie dbo:title ""The Italian Job""@en .
  
  # Identify Michael Caine as an actor in this movie
  ?actor dbo:birthName ""Michael John Caine"" ;
         dbo:actedIn ?movie .

  # Get the spouse of Michael Caine
  ?actor dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
263,18,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Find Mary Elphinstone, Lady Elphinstone's parent
  ?maryElphinstone a dbo:Person ;
                   foaf:name ""Mary Elphinstone"" ;
                   dbo:spouse ?husband .
  
  ?husband dbo:child ?child1 .
  ?child1 dbo:parent ?parent1 .

  # Find Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne's child
  ?claudeBowesLyon a dbo:Person ;
                   foaf:name ""Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne"" .
  
  ?claudeBowesLyon dbo:child ?child2 .
  ?child2 dbo:parent ?grandParent .

  # Find the parent of Claude's child
  ?grandParent dbo:child ?child3 .
  ?child3 dbo:parent ?parent2 .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
756,58,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of Theodor Heuss.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerOfVfLBochum ?managerOfTeam
WHERE {
  # Find the manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?managerOfVfLBochum .

  # Find a sports team associated with a person born on 1968-08-26, who is a sports manager and native of Germany
  ?person dbp:dateOfBirth ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager ;
          dbo:nationality dbr:Germany .
  
  # Find the team managed by this person
  ?team dbo:manager ?person ;
        rdf:type dbo:SoccerClubSeason .

  # Find the manager of that team
  ?team dbo:manager ?managerOfTeam .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
159,33,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find George Ducas and his role
  OPTIONAL { 
    dbr:George_Ducas dbo:occupation dbr:Writer .
    ?ducasRole dbo:succeededBy ?successor1 .
  }
  
  # Find Yurii Khmelnytsky and his role
  OPTIONAL { 
    dbr:Yurii_Khmelnytsky dbo:occupation dbr:Writer .
    ?khmelnytskyRole dbo:succeededBy ?successor2 .
  }

  # Combine successors if they are the same person
  FILTER (?successor1 = ?successor2)
  BIND(?successor1 AS ?successor)
}
```

This query assumes that there is a `succeededBy` property linking roles to their successors. Adjustments may be needed based on actual DBpedia schema and available data.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
39,45,train,"Give me the professional in Singer and professional in  and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName ?singerProfession ?band
WHERE {
  # Find the resource for Bob Thompson (musician)
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" ;
          foaf:nick ""Bob Thompson (musician)"" .

  # Get his birth name
  ?person foaf:name ?birthName .

  # Check if he has a profession in singing
  OPTIONAL { ?person dbo:profession dbr:Singer . }
  
  # Find the band associated with him
  OPTIONAL { ?person dbo:band ?bandResource .
             ?bandResource foaf:name ?band .
           }

}
```",5,6,6,3,3,3,3,71,0,0,3,0,0.0,0
905,25,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?grandchild ?royaltyChild
WHERE {
    # Charles Martel of Anjou's parent
    dbr:Charles_Martel_of_Anjou dbo:parent ?parent .

    # Béla IV of Hungary's grandchildren who are royalty
    dbr:Béla_IV_of_Hungary dbo:child ?child .
    ?child dbo:child ?grandchild .
    FILTER EXISTS { ?grandchild a dbo:Monarch }  # Ensuring the grandchild is royalty

    # The child of the grandchild should be the parent of Charles Martel
    ?grandchild dbo:child ?royaltyChild .
    FILTER (?parent = ?royaltyChild)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Give me the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dawid Olejniczak""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
595,53,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and author of Back to Work (book) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:type dbr:Disease .
  ?war dbo:type dbr:Societal_event .
  
  ?commander dbo:nationality dbr:United_States .
  ?commander dbo:militaryBranch dbr:United_States_Navy .
  ?commander dbo:author dbr:Back_to_Work_(book) .

  ?book dbr:Back_to_Work_(book) .
  ?book dbo:author ?commander .

  ?spouse dbo:spouse ?commander .
  ?spouse dbo:occupation dbr:Politician .
  ?spouse dbo:officeHolder true .

  ?work dbr:What_Happened_(book) .
  ?work dbo:author dbr:Hillary_Clinton .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
263,20,train,"Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Mary Frances Bowes-Lyon's parent
  ?mary a dbo:Person ;
        dbo:mother ?parent .

  # Patrick Bowes-Lyon's parent
  ?patrick a dbo:Person ;
           dbo:mother ?parent .

  # Native of Middlesex
  ?parent dbo:nativePlace dbr:Middlesex .

  # Identifying Mary Frances Bowes-Lyon and Patrick Bowes-Lyon
  ?mary rdfs:label ""Mary Frances Bowes-Lyon""@en .
  ?patrick rdfs:label ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne""@en .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,36,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and band member of Uncle Murda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  # Find Uncle Murda as a band member and their awards
  ?bandMember dbo:memberOfBand dbr:Uncle_Murda .
  ?award dbo:recipient ?bandMember .

  # Ensure the award is associated with a region, state, and settlement
  ?award dbo:place dbr:?region .
  ?region rdf:type/(dbo:state|dbo:settlement) .
  
  # Filter for American states
  ?region dbo:country dbr:United_States_of_America .

  # Get the native place of the award
  ?award dbo:nativePlace ?nativePlace .
}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
119,9,train,"Who is the commander in the force, that is a television show and a military conflict, of Maria I of Portugal?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Maria I of Portugal
  dbr:Maria_I_of_Portugal a dbo:Person .

  # Find television shows related to Maria I of Portugal
  OPTIONAL {
    ?tvShow dbo:subject dbr:Maria_I_of_Portugal .
    ?tvShow dbo:director ?commander .
  }

  # Find military conflicts related to Maria I of Portugal
  OPTIONAL {
    ?conflict dbo:participatedIn dbr:Maria_I_of_Portugal .
    ?conflict dbo:commander ?commander .
  }
}
```

This query attempts to find any common commanders between television shows and military conflicts associated with Maria I of Portugal. Note that the exact properties (`dbo:subject`, `dbo:director`, `dbo:participatedIn`, `dbo:commander`) might need adjustment based on DBpedia's schema at the time of querying.",2,4,3,2,1,3,2,20,0,0,75,0,0.0,0
158,15,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Russian Empire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find individuals who were natives of the Russian Empire
  ?decedent dbp:nationality dbr:Russian_Empire .

  # Check if they died at Sandro Bertaggia's birthplace
  ?decedent dbo:deathPlace ?deathPlace .
  FILTER (?birthPlace = ?deathPlace)
}
```",3,4,4,2,2,2,3,28,0,1,36,0.0,0.0,0
119,50,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/property/residence> ?v4 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party dbo:country dbr:Spain .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  ?administration dbo:headOfGovernment ?leader ;
                  dbo:politicalParty ?party .

  ?leader dbo:nationality dbr:Spain .
}
```",5,8,6,3,2,3,3,71,0,0,23,0,0.0,0
513,15,train,Give me the residence of Doug Beattie and entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence ?awardEntity WHERE {
  # Doug Beattie's residence
  dbr:Doug_Beattie dbo:residenceLocation ?residence .

  # Awards related to George Hamilton Cameron
  OPTIONAL {
    ?award dbo:recipient dbr:George_Hamilton_Cameron .
    ?award dbo:name ?awardEntity .
  }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
39,2,train,Give me the band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q1234567 dbo:musicArtist ?band .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Bob Thompson (musician). You can find this by searching for his DBpedia page or using a SPARQL query to identify him based on other known properties.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
492,20,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  # Sal Mineo
  VALUES ?person { 
    dbr:Sal_Mineo 
    ?actorOfColorMeDead 
    dbr:Reed_Howes 
  }
  
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }

  # Find the actor of ""Color Me Dead""
  {
    SELECT DISTINCT ?actorOfColorMeDead WHERE {
      ?film dbo:starring ?actor .
      ?film rdfs:label ""Color Me Dead""@en .
      FILTER (lang(?film) = 'en')
    }
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
38,6,train,"Give me the author of Promise Me, Dad and author of Promises to Keep (Biden book).","SELECT ?result WHERE { <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . }","```sparql
SELECT ?author WHERE {
  VALUES ?bookTitle { ""Promise Me, Dad"" ""Promises to Keep (Biden book)"" }
  ?book dbo:author ?author .
  ?book rdfs:label ?bookLabel .
  FILTER(CONTAINS(LCASE(?bookLabel), LCASE(?bookTitle)))
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
38,5,train,"Give me the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?person { dbr:Joe_Biden }
  ?work dbo:author ?person .
  ?work a dbo:CreativeWork .
  FILTER NOT EXISTS { ?work dbo:isPartOf ?largerWork . } # Ensures it's not part of another work
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
293,28,train,"Give me the party member of the ruling party in Central, Louisiana and person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?result <http://dbpedia.org/ontology/party> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?party WHERE {
  # Find Harriette Arlene Lake
  ?harriette a dbo:Person ;
             rdfs:label ""Harriette Arlene Lake""@en .
  
  # Check if she is the spouse of Roger Pryor
  ?harriette dbo:spouse dbr:Roger_Pryor .

  # Find her political party affiliation
  OPTIONAL {
    ?harriette dbo:partyAffiliation ?party .
  }

  # Filter for ruling party in Central, Louisiana (assuming we have a way to identify this)
  FILTER EXISTS { 
    ?centralLocation dbo:isPartOf dbr:Louisiana ;
                    dbo:rulingParty ?rulingParty .
    ?rulingParty dbp:name ?party .
  }
  
  BIND(?harriette AS ?partyMember)
}
```

This query assumes:
- There is a DBpedia resource for Harriette Arlene Lake.
- The relationship between her and Roger Pryor as spouses is correctly modeled in DBpedia.
- Political party information is available and linked to specific locations.

Please note that the exact structure of DBpedia data might require adjustments based on how these entities are represented. If certain relationships or properties do not exist, additional research into DBpedia's schema might be necessary.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
78,9,train,Give me the band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find band members of The Alan Parsons Project
  ?project rdfs:label ""The Alan Parsons Project""@en .
  ?project dbo:member ?bandMember .

  # Find associated musical artists of Billy Lyall
  ?lyall rdfs:label ""Billy Lyall""@en .
  ?lyall dbo:associatedBand ?artistBand .
  ?artistBand dbo:member ?associatedArtist .
}
```

This query assumes:
- The band members are linked via the `dbo:member` property.
- Billy Lyall's associations with other artists are through bands he was part of, using properties like `dbo:associatedBand`.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
687,20,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Juan Carlos Molina
  ?molina a dbo:FootballPlayer ;
          foaf:name ""Juan Carlos Molina""@en .
  
  # Find players in ""All or Nothing: Manchester City""
  ?series dbo:title ""All or Nothing: Manchester City""@en ;
          dbo:subject ?player .

  # Ensure the player is both a footballer and an athlete
  ?player a dbo:Athlete, dbo:FootballPlayer ;
          foaf:name ?name .
  
  # Match the player with Juan Carlos Molina
  FILTER(?molina = ?player)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,38,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderOffice ?leaderOffice
WHERE {
  # Find office of commander in Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:officeHolderOf ?commanderOffice .
  FILTER EXISTS { 
    ?commander dbo:memberOf dbr:Civil_War_in_the_Central_African_Republic .
  }

  # Find office of leader of Conservative Republican Party (Spain)
  ?leader a dbo:Politician ;
          dbo:officeHolderOf ?leaderOffice .
  FILTER EXISTS {
    ?leader dbo:memberParty dbr:Conservative_and_Renaissance_Party_(Spain) .
    ?leader dbo:positionTitle ""Leader""@en .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
68,18,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?father WHERE {
  # Maximilian I and his children
  ?maximilian dbo:spouse ?partner .
  ?maximilian dbo:child ?child .

  # Philip I of Castile and his father
  db:Philip_I_of_Castile dbo:parent ?father .

  # Match the child of Maximilian I with the father of Philip I of Castile
  FILTER (?child = ?father)
  
  # Ensure Maximilian I is the correct person
  VALUES ?maximilian { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,21,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of Pablo Aimar.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date .
  
  ?pabloAimarTeam dbo:member dbr:Pablo_Aimar .
  ?pabloAimarTeam dbo:member ?athlete .
}
```

This query does the following:
- Selects entities that are of type `Athlete`.
- Filters athletes by their birth date.
- Finds teams where both Pablo Aimar and another athlete (the one we're interested in) are members.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
412,2,train,Give me the war of Konstantinos Ventiris.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?person a dbo:Person ;
          foaf:name ""Konstantinos Ventiris""@en .
  
  OPTIONAL { 
    ?event dbo:agent ?person ;
           rdfs:label ?eventName ;
           dbo:description ?description .
    
    FILTER (lang(?eventName) = 'en' && lang(?description) = 'en')
  }
}
```

This query does the following:
- Searches for a person with the name ""Konstantinos Ventiris.""
- Attempts to find events (`?event`) where this person is an agent.
- Retrieves the event's label and description, filtering for English language content.",1,1,2,1,1,2,3,28,0,0,10,0,0.0,0
103,54,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find a movie that is also a television show with Richard E. Grant
  ?movie dbo:type/dbo:subClassOf* dbr:Television_show .
  ?movie dbo:starring dbr:Richard_E._Grant .

  # Find actors in this movie
  ?movie dbo:starring ?actor .

  # Ensure the actor is also an actor in ""Ab Kya Hoga""
  ?abKyaHogaMovie dbo:title ""Ab Kya Hoga""@en .
  ?abKyaHogaMovie dbo:starring ?actor .

  # Find professions of this actor
  ?actor dbo:profession ?profession .

  # Ensure the profession is shared with a politician
  ?politician dbo:occupation dbr:Politician ;
              dbo:profession ?profession .
}
```",6,8,7,3,3,3,3,71,0,0,13,0,0.0,0
723,2,train,Give me the reference to Nothing to Gein.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . }","```sparql
SELECT ?reference WHERE {
  ?film foaf:name ""Nothing to Gein""@en .
  ?film dbo:wikiPageWikiLink ?reference .
}
```",1,1,2,1,1,3,2,20,0,27,1,0.0,0.0,0
103,27,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?professional WHERE {
  ?character rdfs:label ""The Shadow (video game character)""@en .
  ?character dbo:alterEgo ?professional .
  FILTER NOT EXISTS { ?professional dbo:wikiPageRedirects ?redirect }
}
```",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
628,48,train,"Give me the band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Step 1: Find GS9 member who is both an artist and a musical artist
  ?gs9Member dbo:type dbr:GS9 ;
             dbo:memberOf ?associatedArtist .
  
  FILTER EXISTS { ?gs9Member dbo:type dbr:MusicalArtist . }
  FILTER EXISTS { ?gs9Member dbo:type dbr:Artist . }

  # Step 2: Find band members of the associated musical artist
  ?associatedArtist dbo:bandMember ?bandMember .

  # Step 3: Identify the award's native region (Puerto Rico)
  ?award dbo:nativeRegion dbr:Puerto_Rico ;
         dbo:type dbr:Award .
  
  FILTER EXISTS { ?award dbo:region dbr:American . }
  FILTER EXISTS { ?award dbo:state dbr:Puerto_Rico . }
  FILTER EXISTS { ?award dbo:settlement dbr:Puerto_Rico . }

  # Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
        dbo:associatedAward ?award .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
213,3,train,"Who is the child, that is a politician, of Chiang Ching-kuo?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Chiang Ching-kuo"") .

  ?person dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:occupation dbp:Politician .
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,41,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  # Cora Sue Collins' claim to fame: The Canary Murder Case (1929)
  ?work dcterms:title ""The Canary Murder Case""@en .
  ?work dbo:starringCorporation <http://dbpedia.org/resource/Cora_Sue_Collins> .
  
  # A Star Is Born (1937 film) producer
  ?starborn dbo:producer <http://dbpedia.org/resource/David_O._Selznick> .

  # The Shadow radio drama series and related works
  OPTIONAL {
    ?shadow dbo:producer <http://dbpedia.org/resource/David_O._Selznick> .
  }

  # Find the common producer
  FILTER EXISTS { 
    VALUES ?work { ?work ?starborn ?shadow }
  }
  
  BIND(?starborn AS ?producer)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,45,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?georgeDucas ?commanderRole ?tvShow ?societalEvent ?successor
WHERE {
  # George Ducas information
  dbr:George_Ducas a dbo:Person ;
                   foaf:name ""George Ducas"" .

  # Commander role in the war (Battle of Vienna)
  OPTIONAL { 
    ?georgeDucas dbo:role ?commanderRole .
    FILTER(CONTAINS(LCASE(?commanderRole), ""battle of vienna""))
  }

  # Television show and societal event related to the military force
  OPTIONAL {
    ?tvShow a dbo:TelevisionSeries ;
            dbo:subject dbr:Battle_of_Vienna .
    ?societalEvent a dbo:SocietalEvent ;
                   dbo:relatedWork ?tvShow .
  }

  # Successor of Yurii Khmelnytsky
  OPTIONAL {
    dbr:Yurii_Khmelnytsky dbo:succeededBy ?successor .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,27,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify USS Arcadia (ID-1605)
  ?ship a dbo:Ship ;
        rdfs:label ""USS Arcadia (ID-1605)""@en .
  
  # Step 2: Determine its owner
  ?ship dbo:owner ?owner .

  # Step 3: Find wars involving a disease and societal event
  ?war dbo:hasParticipant ?participant ;
       dbo:relatedDisease ?disease ;
       dbo:societalEvent ?event .

  # Ensure the war is related to the owner
  ?participant dbo:operator ?owner .

  # Step 4: Identify the commander in those wars
  ?war dbo:commander ?commander .
}
```",3,5,4,3,1,3,3,71,0,0,18,0,0.0,0
737,26,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?greatGrandChild WHERE {
  # Step 1: Find Alexander of Württemberg
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en ;
             dbo:birthYear ?birthYear .
  
  FILTER(?birthYear = 1804)

  # Step 2: Find his children (children)
  ?child dbo:parent ?alexander .

  # Step 3: For each child, find their children (grandchildren of Alexander)
  ?grandChild dbo:parent ?child .

  # Step 4: For each grandchild, find their children (great-grandchildren of Alexander)
  ?greatGrandChild dbo:parent ?grandChild .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
472,16,train,Give me the territory administered from Copenhagen and administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?mayor WHERE {
  # Find territories administered from Copenhagen
  ?territory dbo:administrativeRegion dbr:Copenhagen .
  
  # Find the mayor of Duchy of Schleswig
  OPTIONAL { 
    ?schleswig dbo:mayor ?mayor .
    FILTER (strstarts(str(?schleswig), ""Duchy of Schleswig""))
  }
}
```

This query does the following:
- It selects territories that are administratively linked to Copenhagen.
- It optionally retrieves information about the mayor associated with the Duchy of Schleswig.

Note: The exact structure and availability of data in DBpedia might require adjustments, such as using different properties or resources if they exist differently in the dataset.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,11,train,Give me the reference to the real name of Peter IV of Aragon and child of Alfonso IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?realName WHERE {
  ?person dbo:childOf dbr:Alfonso_IV_of_Aragon .
  ?person foaf:name ""Peter IV of Aragon""@en .
  ?person foaf:name ?realName .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
297,2,train,"Give me the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Little Hat Jones"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && datatype(?birthPlace) = xsd:string)
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
782,60,train,"Give me the reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName ?nickCurranRealName WHERE {
  # Find Kim Wilson and his band
  ?kimWilson a dbo:MusicArtist ;
             foaf:name ""Kim Wilson"" .
  
  ?band dbo:member ?kimWilson ;
        dbo:name ?bandName .

  FILTER(?bandName = ""Double Trouble (band)"")

  # Find Nick Curran
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" ;
              dbo:birthPlace ?birthPlace .
  
  OPTIONAL { ?nickCurran dbo:realName ?nickCurranRealName }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
89,23,train,Give me the child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandchild
WHERE {
  ?minye_kyawswa dbo:spouse ?partner .
  ?minye_kyawswa dbo:child ?child1 .

  OPTIONAL { ?child1 dbo:parent ?parent . }
  
  OPTIONAL { ?parent dbo:child ?grandchild . }

  FILTER(?minye_kyawswa = <http://dbpedia.org/resource/Minye_Kyawswa>)
}
```

This query assumes that Minye Kyawswa's children are directly linked via the `dbo:child` property and that parent-child relationships can be navigated using `dbo:parent`. The use of `OPTIONAL` allows for cases where some data might not be explicitly defined.",3,3,4,3,1,3,3,71,0,0,5,0,0.0,0
905,26,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfFather WHERE {
  # Step 1: Find Maria of Bytom's spouse
  ?spouse a dbo:Spouse ;
          dbp:spouse ?maria .

  FILTER(?maria = dbpedia:Maria_of_Bytom)

  # Step 2: Determine the father of that spouse
  ?father dbo:child ?spouse .

  # Step 3: Find the parent of this father who is royalty
  ?parentOfFather dbo:child ?father .
  ?parentOfFather a dbo:Monarch ; # Assuming 'Monarch' represents royalty

  FILTER NOT EXISTS { ?parentOfFather dbo:child ?otherChild . FILTER(?otherChild != ?father) }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
375,15,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18 and parent of Kate Dimbleby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:TelevisionShow ;
         dbo:workExample ?work .
  
  ?person dbo:dateOfDeath ?deathDate ;
          dbo:parent ?parent ;
          dbo:occupation dbr:Artist ;
          dbo:occupation dbr:Musical_artist .

  ?parent rdfs:label ""Kate Dimbleby""@en .

  FILTER (YEAR(?deathDate) = 1965 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)

  ?movie dbo:author ?person .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
816,32,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Get actors of those movies
  ?movie dbo:starring ?actor .

  # Ensure the actor has a parent related to Photographer
  ?actor dbo:parent ?parent .
  ?parent rdfs:label ""Photographer""@en .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
468,2,train,"Give me the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Resource for Alfonso IV of Aragon
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?parent .

  # Find children who are royalty
  ?parent dbo:child ?child .
  ?child a ?royaltyClass .
  
  FILTER (
    ?royaltyClass IN (dbo:Monarch, dbo:Princess, dbo:Prince) 
  )
}
```

This query does the following:
- It starts by identifying Alfonso IV of Aragon's spouse(s), assuming that children are related through spouses.
- It then looks for children (`?child`) of these parents.
- The `FILTER` clause ensures that only those children who have a class indicating royalty (like Monarch, Princess, or Prince) are selected.",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
353,8,train,Who is the child of Alfonso VI of León and Castile?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""Alfonso_VI_of_León_and_Castile"")
  
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
399,7,train,Give me the professional in Singer and band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  VALUES ?person { dbr:Emilia_Yancheva_Valeva }
  
  ?person a dbo:Singer .
  OPTIONAL { ?person dbo:bandMemberOf ?band . }

  ?person dbo:occupation ?profession .
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
492,2,train,Give me the death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q11150 dbo:placeOfBirth ?birthPlace .
  wd:Q11150 dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
198,8,train,"Give me the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Henry Clay Lewis""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?birthPlace dbo:settlementType ?settlementType .
    FILTER (?settlementType IN (dbo:City, dbo:Town, dbo:Village)) # Assuming these are types of settlements
  }

  OPTIONAL {
    ?birthPlace geo:country ?country .
    FILTER (str(?country) = ""United States"")
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
706,5,train,Who is the actor of Akaler Shandhaney?,SELECT ?result WHERE { <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""Akaler Shandhaney""@en .
}
```",1,1,2,1,1,3,2,20,4,0,5,1.0,0.4444444444444444,0.6153846153846153
595,10,train,Give me the spouse of Hillary Clinton and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?commander
WHERE {
  # Find the spouse of Hillary Clinton
  OPTIONAL {
    ?hillary dbo:spouse ?spouse .
    FILTER (str(?hillian) = ""Hillary_Clinton"")
  }
  
  # Find the commander during the Third Taiwan Strait Crisis
  OPTIONAL {
    ?crisis dbo:commander ?commander .
    FILTER (str(?crisis) = ""Third_Taiwan_Strait_Crisis"")
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
295,13,train,"Give me the writer of the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?artist rdf:type dbo:Artist .
  ?artist foaf:name ""Steven Kapur"" .
  
  ?work dbo:title ""The True Self""@en ;
        dbo:composer ?artist .

  OPTIONAL { 
    ?work dbo:lyricist ?writer .
  }
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
353,56,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of William II of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Constance of Burgundy and her spouse
  ?constance a dbo:Person ;
             foaf:name ""Constance of Burgundy""@en .
  
  ?spouse dbo:spouseOf ?constance ;
          dbo:spouseOf ?constance2 .

  # Spouse's child (Roger I)
  ?child dbo:parent ?spouse ;
         dbo:parent ?constance ;
         foaf:name ""Roger I of Sicily""@en .
  
  # Child's child (grandchild) who is royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Royalty .

  # Grandchild is the father of William II of Sicily
  ?william2 dbo:father ?grandchild ;
            foaf:name ""William II of Sicily""@en .
  
  # Grandchild is child of Roger III's parent (Roger I)
  ?roger3 a dbo:Person ;
          foaf:name ""Roger III, Duke of Apulia""@en .

  ?parentOfRoger3 dbo:parent ?roger3 .
  FILTER (?grandchild = ?parentOfRoger3)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
816,44,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in Photographer and parent of the child of Allan Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?parent WHERE {
  # Find the actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .

  # Find the parent who is a professional in Photography
  ?parent dbo:spouseOrPartner ?actor ;
          dbo:profession dbr:Photographer .

  # Check if this parent has a child named Allan Arbus
  ?parent dbo:child ?allan .
  ?allan rdfs:label ""Allan Arbus""@en .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
38,7,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work dbo:author dbr:Joe_Biden .
  ?work rdf:type dbo:CreativeWork .
  ?work rdf:type dbo:WrittenWork .
  ?work dbo:country dbr:United_States .
  ?work rdf:type dbo:Book .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
731,3,train,Who is the awardee of Commander of the Order of the British Empire?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:honoraryTitle dbr:Commander_of_the_Order_of_the_British_Empire .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,853,0,0.0,0
159,8,train,"Give me the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tvShow ?event WHERE {
  ?tvShow a dbo:TelevisionSeries .
  ?tvShow dbo:subject dbr:Jean_Baptiste_Comte_d'Arco ; # Assuming this is the correct resource
          dbo:relatedEvent ?event .
  
  OPTIONAL { ?event a dbo:SocietalEvent . }
}
```

This query assumes that there is a DBpedia resource for ""Jean Baptiste Comte d'Arco"" and that it might be related to a television series and an event. The `dbo:subject` property links the TV show to its subject, while `dbo:relatedEvent` connects it to any societal events.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  
  OPTIONAL { ?person dbo:residence ?location . }
  OPTIONAL { ?person foaf:based_near ?location . }

  ?location a dbo:Country .
  BIND(STR(?location) AS ?country)
}
```",2,3,3,2,1,3,3,71,0,0,216,0,0.0,0
311,6,train,Give me the associated musical artist of Filthy Friends and band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?band dbo:member ?person .
  FILTER (
    EXISTS { ?band rdfs:label ""Filthy Friends""@en }
    && EXISTS { ?person dbo:associatedBandMember ?eitzel . 
                ?eitzel rdfs:label ""Mark Eitzel""@en }
  )
}
```

This query does the following:
- It looks for a band (`?band`) that has a member (`?person`).
- Filters to ensure this band is labeled as ""Filthy Friends"".
- Checks if the person (`?person`) is associated with Mark Eitzel through some band membership or collaboration.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,39,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?birthPlace WHERE {
  # Cece Bell, author of ""El Deafo""
  VALUES ?author { 
    dbr:Cece_Bell
  }
  
  OPTIONAL {
    ?author dbo:birthPlace ?birthPlace .
  }

  UNION

  # Glenn Youngkin
  VALUES ?author { 
    dbr:Glenn_Youngkin
  }
  
  OPTIONAL {
    ?author dbo:birthPlace ?birthPlace .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,8,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?child dbo:spouse|dbo:partner ?faisal .
  ?faisal foaf:name ""Faisal bin Hussein""@en ;
          dbo:spouse|dbo:partner ?child .

  OPTIONAL { ?child dbp:royalHouse ?house . }
  FILTER EXISTS { ?child dbp:royalHouse ?house }

  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
39,42,train,"Give me the professional in  and professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?samProfession ?otherProfessional ?robertBand
WHERE {
  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?samProfession .
  
  # Another professional in the same field as Sam Concepcion
  ?otherProfessional dbo:profession ?samProfession .
  FILTER(?otherProfessional != dbr:Sam_Concepcion)
  
  # Robert Lamar Thompson's band and confirmation he is a musical artist
  dbr:Robert_Lamar_Thompson dbo:band ?robertBand ;
                            rdf:type dbo:MusicalArtist .
}
```",5,6,6,2,3,3,3,71,0,0,4,0,0.0,0
213,13,train,"Give me the birth place of the child, that is a politician, of the person decedent at Taipei.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childBirthPlace WHERE {
  ?person dbo:deathPlace dbr:Taipei .
  ?person dbo:child ?child .
  ?child dbo:occupation dbr:Politician .
  ?child dbo:birthPlace ?childBirthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,5,0,0.0,0
258,4,train,Give me the birth name of Eleonora Menicucci.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q1234568 foaf:name ""Eleonora Menicucci""@en .
  OPTIONAL { wd:Q1234568 schema:birthName ?birthName . }
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for Eleonora Menicucci.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
59,1,train,Give me the manager of Hartlepool United F.C..,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  wd:Q2105180 dbo:manager ?manager .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
375,21,train,Give me the entity in Japan and war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?hidenagaWar ?hideyoshiWar WHERE {
  # Toyotomi Hidenaga's involvement in wars
  OPTIONAL {
    ?hidenagaWar dbo:participant dbr:Toyotomi_Hidenaga .
    ?hidenagaWar a dbo:MilitaryConflict .
  }
  
  # Toyotomi Hideyoshi's involvement in wars
  OPTIONAL {
    ?hideyoshiWar dbo:participant dbr:Toyotomi_Hideyoshi .
    ?hideyoshiWar a dbo:MilitaryConflict .
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
756,18,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Manager of SBV Vitesse for the 2020-21 season
  ?vitesseTeam dbo:manager ?manager .
  ?vitesseTeam dbp:sportSeason ""2020–21"" .

  # Native of West Germany
  ?manager dbo:nationality dbr:Germany_West .

  # Managed VfL Bochum
  ?bochumTeam dbo:manager ?manager .
  ?bochumTeam rdf:type dbo:SoccerClub .
  ?bochumTeam rdfs:label ""VfL Bochum""@en .
}
```

This query does the following:
- It selects individuals who were managers of SBV Vitesse during the specified season.
- It checks if these individuals are natives of West Germany.
- It verifies if they have managed VfL Bochum.

Please note that this query assumes the availability and correctness of data in DBpedia regarding team management, nationality, and club history. Adjustments might be necessary based on actual data structure and available properties.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
159,53,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInWar ?successorCommander WHERE {
  # Find Jean Baptist, Comte d'Arco's role in a war that is both a TV show and societal event
  ?war dbo:type dbr:Television_show .
  ?war dbo:type dbr:Societal_event .
  ?role dbo:agent dbr:Jean_Baptist_Comte_d%27Arco ;
        dbo:position ?commanderInWar .

  # Find Michał Kazimierz Pac's role in a military conflict that is an event
  ?conflict dbo:type dbr:Military_conflict ;
            dbo:type dbr:Event .
  ?role2 dbo:agent dbr:Micha%C5%82_Kazimierz_Pac ;
         dbo:position ?successorCommander .

  # Reference George Ducas in relation to the above entities
  OPTIONAL { ?commanderInWar dbo:related dbr:George_Ducas . }
  OPTIONAL { ?successorCommander dbo:related dbr:George_Ducas . }
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
419,3,train,"Who is the awardee, that is australian and a scientist, of Australian Laureate Fellowship?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Australia>. ?result <http://dbpedia.org/property/awards> ""Australian Laureate Fellowship""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?name WHERE {
  ?awardee a dbo:AustralianLaureateFellowshipAwardee .
  ?awardee dbo:nationality dbr:Australia .
  ?awardee dbo:occupation dbo:Scientist .
  ?awardee rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
LIMIT 10",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
557,57,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?janetProducer ?doughboyActor ?doughboyWork ?doughboyProducer WHERE {
  # Janet Gaynor's claim to fame (a movie)
  ?movie dbo:starring dbr:Janet_Gaynor .
  
  # Producer of the movie
  ?movie dbo:producer ?janetProducer .

  # Actor of Johnny Doughboy
  ?johnnyDoughboy dbo:starring ?doughboyActor .
  
  # Claim to fame (a work) of the actor
  ?work dbo:starring ?doughboyActor .
  
  # Producer of that work
  ?work dbo:producer ?doughboyProducer .

  FILTER(?movie != ?work)
}
```",6,9,7,3,3,3,3,71,1,93363,0,1.0710766462448052e-05,1.0,2.1421303486317142e-05
353,1,train,Give me the father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father .
  FILTER (lang(?fatherLabel) = ""en"")
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for William II of Sicily. You can find this by searching for his DBpedia page or using a SPARQL query to identify it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
87,1,train,Give me the spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q12345 foaf:spouse ?spouse .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia resource identifier for Janusz Kamiński. You can find this by searching for his DBpedia page or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
756,53,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry ?managerClub ?successorLeague
WHERE {
  # Thomas Letsch's native country and managerial roles
  dbr:Thomas_Letsch dbo:nationality dbr:West_Germany .
  
  OPTIONAL {
    ?letschManagerialRole dbo:agent dbr:Thomas_Letsch ;
                          dbo:team dbr:VfL_Bochum .
    ?letschManagerialRole dbo:club ?managerClub .
  }
  
  # VfL Bochum 2006–07 season and its successor
  dbr:2006%E2%80%9307_VfL_Bochum_season dbo:sportsTeamSeason dbr:VfL_Bochum ;
                                         dbo:league ?vflLeague .
  
  OPTIONAL {
    ?successorLeague dbo:predecessor dbr:2006%E2%80%9307_VfL_Bochum_season ;
                      a dbo:SoccerClubSeason ;
                      a dbo:SportsTeamSeason ;
                      a dbo:SportsSeason .
  }
}",6,15,7,3,3,3,3,71,0,0,1,0,0.0,0
80,34,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professionalIn ?actor WHERE {
  # Step 1: Identify the author of ""Smartbomb""
  ?author dbo:title ""Smartbomb""@en .
  
  # Step 2: Find movies where this author has acted
  ?movie dbo:starring ?author ;
         dbo:actor ?actor .

  # Step 3: Retrieve professionals involved in those movies
  ?professionalIn dbo:profession ""Actor""@en ;
                 dbo:actedIn ?movie .
}
```",4,4,5,3,2,3,3,71,0,0,7802,0,0.0,0
737,45,train,"Give me the predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Carl, Duke of Württemberg and his predecessor
  dbr:Claude_Wilhelm,_Duke_of_W%C3%BCrttemberg dbo:successorOf ?predecessor .
  
  # Albrecht, Duke of Württemberg (Carl's father)
  dbr:Albrecht_I,_Duke_of_W%C3%BCrttemberg dbo:child dbr:Claude_Wilhelm,_Duke_of_W%C3%BCrttemberg .

  # Parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:child dbr:Margarete_Sophie_Archduchess_of_Austria .
  
  # Child of the parent who is royalty
  ?royaltyChild dbo:childOf ?parent ;
                a dbo:Monarch .

  # Ensure the predecessor is related to Albrecht's lineage
  ?predecessor dbo:child dbr:Albrecht_I,_Duke_of_W%C3%BCrttemberg .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
68,12,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  ?catherine dbo:mother ?philip .
  ?isabella dbo:mother ?philip .
  ?philip dbo:childOf dbr:Maximilian_I,_Holy_Roman_Emperor .
  FILTER (str(?catherine) = ""Catherine_of_Austria_(1507-1578)"" && str(?isabella) = ""Isabella_of_Austria_(1501-1526)"")
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
941,0,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?person { dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel }
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
737,33,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of the child of Alexander of Württemberg (1804-1881).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Carl, Duke of Württemberg
  VALUES ?carl { dbr:Carl_of_W%C3%BCrttemberg_(1833-1906) }
  
  # Identify his predecessor (assuming a title or position)
  ?predecessor dbo:successorOf ?carl .
  
  # Find Alexander of Württemberg
  VALUES ?alexander { dbr:Aleksandr_of_W%C3%BCrttemberg_(1804-1881) }
  
  # Trace the lineage from Alexander to Carl's predecessor
  ?child dbo:parent ?grandparent .
  ?grandchild dbo:parent ?child .
  ?greatGrandChild dbo:parent ?grandchild .
  ?greatGreatGrandChild dbo:parent ?greatGrandChild .

  # Ensure the great-great-grandchild is the predecessor of Carl
  FILTER (?predecessor = ?greatGreatGrandChild)

  # Link back to Alexander as an ancestor
  ?alexander dbo:child ?child ;
             (dbo:child|dbo:spouse)* ?grandparent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
941,15,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalty WHERE {
  # Step 1: Identify the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?child dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .

  # Step 2: Determine the spouse of this child (Prince Augustus William of Prussia)
  ?spouse dbo:spouse ?child .
  FILTER (?spouse = dbr:Prince_Augustus_William_of_Prussia) .

  # Step 3: Find the parent of this spouse
  ?parent dbo:child ?spouse .

  # Step 4: Identify a royalty among the children of this parent
  ?royalty dbo:parent ?parent .
  FILTER EXISTS { ?royalty a dbo:Monarch } .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
737,10,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Archduchess Margarete Sophie of Austria
  ?person dbo:parent dbr:Margarete_Sophie_of_Austria .
  
  # Ensure the person is a child (has a parent)
  ?person dbo:parent ?parent .

  # Check if this person is also a predecessor to Carl, Duke of Württemberg
  ?child dbo:predecessor dbr:Carl,_Duke_of_W%C3%BCrttemberg .
  
  # Ensure the child is the same as the person found above
  FILTER (?person = ?child)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,34,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Tupac Shakur (Lesane Parish Crooks)
  { 
    ?tupac a dbo:MusicalArtist ;
           dbp:birthName ""Lesane Parish Crooks"" .
    ?tupac dbo:associatedBandOrMusicalArtist ?artist .
  }
  
  UNION
  
  # Darryl Paa Kwesi Bannerman-Martin
  { 
    ?darryl a dbo:MusicalArtist ;
            dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
    ?darryl dbo:associatedBandOrMusicalArtist ?artist .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
756,16,train,"Give me the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?chancellor a dbo:Chancellor ;
              dbo:country dbr:West_Germany .
  ?chancellor dbo:officeLocation ?administration .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,0,train,Give me the player in Juan Carlos Molina (footballer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?player a dbo:FootballPlayer ;
          foaf:name ""Juan Carlos Molina""@en .
  ?player dbo:playsForTeam ?team .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
816,56,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies with Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Find actors in those movies who are parents of Amy Arbus
  ?movie dbo:starring ?actor .
  ?parent dbo:child dbr:Amy_Arbus ;
          dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?parent rdf:type dbo:Person .

  # Find actors in those movies who are parents of the child of Mariclare Costello's spouse
  ?mariclareSpouse dbo:spouse ?costello ;
                   dbo:child ?mariclareChild .
  ?actor dbo:child ?mariclareChild .
  
  FILTER(?parent = ?actor)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,6,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of Prince Augustus William of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:childOf <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> .
  ?person dbo:spouse <http://dbpedia.org/resource/Augustus_William_of_Prussia> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
386,6,train,Give me the war of Karl Gustav von Baggovut and entity in Russian Empire.,SELECT ?result WHERE { <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Karl Gustav von Baggovut""@en .
  
  OPTIONAL { 
    ?person dbo:nationality dbr:Russian_Empire . 
  }
  
  ?person dbo:participatedInWar ?war .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
203,0,train,Give me the commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?campaign dbo:place dbpedia-fr:Egypte .
  ?campaign dbo:place dbpedia-fr:Syrie .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,48,0,0.0,0
80,42,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the alter ego of The Shadow
  ?character dbo:alterEgoOf dbr:The_Shadow .
  
  # Ensure this character is associated with an actor
  ?character dbo:portrayedBy ?actor .

  # Check if the actor has a role in ""ATL""
  ?film dbo:title ""ATL""@en .
  ?film dbo:starring ?actor .

  # Placeholder for another film (replace `?anotherFilm` with actual film title)
  OPTIONAL {
    ?anotherFilm dbo:title ?otherTitle .
    ?anotherFilm dbo:starring ?actor .
  }
  
  FILTER(?otherTitle != ""ATL"")
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
609,48,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel
WHERE {
  {
    # Vince Gilligan, creator of Breaking Bad
    dbr:Vince_Gilligan dbo:birthPlace ?vGilliganBirthPlace .
    ?vGilliganBirthPlace rdfs:label ?vGilliganBirthPlaceLabel .
    BIND(dbr:Vince_Gilligan AS ?person)
  }
  UNION
  {
    # Cece Bell, author of El Deafo
    dbr:C._E._Bell dbo:birthPlace ?cBellBirthPlace .
    ?cBellBirthPlace rdfs:label ?cBellBirthPlaceLabel .
    BIND(dbr:C._E._Bell AS ?person)
  }
}
ORDER BY ?person
```",5,5,6,3,2,3,3,71,0,1,1,0.0,0.0,0
225,2,train,Give me the time zone in Kiyosu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  VALUES ?kiyosu { dbr:Kiyosu }
  ?kiyosu dbo:timezone ?timeZone .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
80,54,train,"Give me the professional in  and actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v3 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/album> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?song ?album ?actor ?movie ?professionalRole
WHERE {
  # T.I.'s songs
  ?song dbo:artist dbr:T.I. ;
        dbo:album ?album .

  # Actor associated with the album
  ?album dbo:producerOrPerformer ?actor .

  # Movie in which the actor has acted
  ?movie dbo:starring ?actor .

  # Professional role of the actor in the movie
  ?movie dbo:profession ?professionalRole .
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
557,10,train,Give me the professional in  and producer of A Star Is Born (1937 film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?director WHERE {
  dbr:A_Star_Is_Born_(1937_film) dbo:director ?director .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
263,22,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Step 1: Find William Gayner's birthplace
  ?gayner dbo:birthPlace ?birthPlace .

  FILTER(?gayner = dbr:William_Gayner)

  # Step 2: Check if the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Region .
  ?birthPlace rdf:type dbo:Country .

  # Step 3: Find Hon. Mary Frances Bowes-Lyon's parent
  ?bowesLyon dbp:parent ?parent .

  FILTER(?bowesLyon = dbr:Hon._Mary_Frances_Bowes-Lyon)

  # Ensure the birthplace is related to the parent
  ?parent dbo:birthPlace ?birthPlace .

  # Step 4: Get the native language of the birthplace
  ?birthPlace dbp:nativeLanguage ?nativeLanguage .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
203,36,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:nationality dbr:French ;
          dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath ;
          dbo:commandedMilitaryUnit ?unit .
  
  ?unit dbo:militaryConflict dbr:Egyptian_Campaign_(1798–1801) ;
        dbo:militaryForce ?militaryForce .

  FILTER(?person = dbr:Napoleon_Bonaparte)
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
557,33,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in .","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?actor dbo:film dbr:Johnny_Doughboy .
  ?actor dbo:notableWorks ?work .
  
  OPTIONAL { 
    ?work dbo:producer ?producer .
  }
}
```

This query does the following:
- Finds an actor who played in ""Johnny Doughboy"".
- Retrieves a notable work by this actor.
- Attempts to find the producer of that work.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
246,3,train,"Give me the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Prince Faisal bin Hussein
  dbr:Faisal_bin_Hussein dbo:parent ?parent .
  
  # Find children of Prince Faisal bin Hussein who are royalty
  ?parent dbo:child ?child .
  ?child a ?royalClass .

  FILTER (
    ?royalClass IN (
      dbr:Monarch, 
      dbr:Prince, 
      dbr:Princess,
      dbr:RoyalFamilyMember
    )
  )
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
609,11,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  VALUES ?person { dbr:Vince_Gilligan }
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
159,11,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Jan II Kazimierz Waza was a commander, politician, and office holder during the Russo-Polish War
  dbr:Jan_II_Kazimierz_Waza dbo:officeHolderOf dbr:Kingdom_of_Poland ;
                             dbo:politicalPartyMember ?party ;
                             dbo:commanderOf dbr:Russo-Polish_War_(1654–1667) .

  # Find the successor of Jan II Kazimierz Waza
  OPTIONAL { 
    dbr:Jan_II_Kazimierz_Waza dbo:successor ?successor .
  }

  FILTER EXISTS {
    ?successor dbo:officeHolderOf ?office ;
              dbo:politicalPartyMember ?party .
  }
}",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
103,18,train,Give me the professional in Actor and professional in  and actor of Dispatches from Elsewhere.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?actorName WHERE {
  # Find the TV series resource for ""Dispatches from Elsewhere""
  dbr:Dispatches_from_Elsewhere dbo:starring ?actor .
  
  # Ensure the actor has a profession of ""Actor""
  ?actor dbo:occupation dbr:Actor .

  # Get the name of the actor
  ?actor rdfs:label ?actorName .
  
  FILTER (LANG(?actorName) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
375,10,train,Give me the war of the person born as Koichirō.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person { dbr:Koichirō_Matsuura }
  ?person dbo:participatedInWar ?war .
}
```

This query assumes that the person ""Koichirō"" refers to Koichiro Matsuura. If you have a different individual in mind, replace `dbr:Koichirō_Matsuura` with the appropriate DBpedia resource identifier.",2,2,3,2,1,2,3,28,0,0,4,0,0.0,0
782,17,train,"Give me the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nick Curran""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```

This query does the following:
- Uses `dbo:MusicalArtist` to ensure the person is recognized as a musical artist.
- Filters by name using `foaf:name`.
- Optionally retrieves the birth date with `dbo:birthDate`.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
609,60,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeBirthPlace ?authorBirthPlace WHERE {
  # Vince Gilligan's award
  dbr:Vince_Gilligan dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Directing_for_a_Single_Camera_Reality_Program .

  # Awardee of the same award
  ?awardee dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Directing_for_a_Single_Camera_Reality_Program .
  
  # Birthplace of the awardee
  ?awardee dbo:birthPlace ?awardeeBirthPlace .

  # Reference to ""El Deafo""
  ?reference dbo:wikiPageRedirects dbr:El_Deafo .

  # Author of the reference
  ?reference dbo:author ?author .
  
  # Birthplace of the author, ensuring they are American
  ?author dbo:nationality dbr:United_States ;
          dbo:birthPlace ?authorBirthPlace .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
293,19,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?party WHERE {
  # Find Roger Pryor who is an actor
  ?actor a dbo:Actor ;
         foaf:name ""Roger Pryor"" .
  
  # Get his spouse
  ?actor dbo:spouse ?spouse .

  OPTIONAL {
    # Check if the spouse has any political affiliation
    ?spouse dbo:partyMemberOf ?party .
    
    # Filter for ruling party in Central, Louisiana (assuming we have a way to identify this)
    FILTER(CONTAINS(LCASE(?party), ""ruling party central louisiana""))
  }
}
```

This query assumes:
- The DBpedia ontology includes properties like `dbo:spouse` and `dbo:partyMemberOf`.
- There is a way to identify the ruling party in Central, Louisiana within the dataset.

Please note that the exact identification of the ""ruling party"" might require additional context or data not directly available in DBpedia. Adjustments may be necessary based on the actual structure and availability of data in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,13,train,Give me the person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?bobbyShmurda dbo:birthName ""Bobby Shmurda""@en .
  ?bobbyShmurda a dbo:MusicalArtist .
  ?person dbo:birthName ?name .
  FILTER(?name = ""Bobby Shmurda""@en)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
38,9,train,"Give me the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?work a dbo:Book ;
        dbo:author ?person .
  
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolderOf dbr:North_Carolina_Air_National_Guard ;
          rdf:type dbo:Commander .

  FILTER (LANG(?work->rdfs:label) = ""en"")
}
```

This query does the following:
- Selects works that are books.
- Ensures the author of the book is a person who holds the office of Commander in the North Carolina Air National Guard and is also a politician.
- Filters results to ensure they are labeled in English.",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
756,20,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeCountryLabel
WHERE {
  # Find Theodor Heuss's DBpedia resource
  dbr:Theodor_Heuss dbo:nationality ?nationalityResource .
  
  # Get the native country from his nationality information
  ?nationalityResource dbp:countryName ?nativeCountry .

  # Ensure the native country is a recognized administration (country)
  OPTIONAL { ?nativeCountry dbo:type dbr:Country . }

  # Get the label for the native country in English
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
140,14,train,"Give me the party member of the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Step 1: Identify John McDermott and his death place
  ?johnMcDermott dbo:deathPlace ?deathPlace .
  
  FILTER (str(?johnMcDermott) = ""John McDermott_(artist)"")

  # Ensure the death place is a settlement
  ?deathPlace a dbo:Settlement .

  # Step 2: Determine the ruling party in that settlement at the time of his death
  ?rulingParty dbp:country ?country .
  ?rulingParty dbo:headquarters ?deathPlace .
  
  # Step 3: Find a member of this ruling party who is both a political party and an organization
  ?partyMember dbo:memberOfPoliticalParty ?rulingParty .
  ?partyMember a dbo:Organization ;
               a dbo:PoliticalParty .
}
```",3,6,4,3,1,3,2,20,0,0,21486,0,0.0,0
943,45,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and child of Dawit I.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Zara Yaqob is the child of Baeda Maryam I and Dawit I
  VALUES (?zaraYaqob) { dbr:Zara_Yaqob }
  
  # Baeda Maryam I (also known as Emperor Baeda Maryam)
  VALUES (?baedaMaryamI) { dbr:Baeda_Maryam_I }

  # Dawit I (also known as Dawit the Great)
  VALUES (?dawitI) { dbr:Dawit_I }
  
  # Zara Yaqob's parents
  ?zaraYaqob dbo:parent ?baedaMaryamI .
  ?zaraYaqob dbo:parent ?dawitI .

  # Baeda Maryam I's father (Amda Seyon I)
  ?baedaMaryamI dbo:father ?grandfather .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch .
  OPTIONAL { ?grandfather dbo:officeHolderOf ?office . }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,10,train,Give me the player in Juan Carlos Molina (footballer) and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?playerInMolina ?aimarTeam
WHERE {
  ?molina a dbo:FootballPlayer ;
          foaf:name ""Juan Carlos Molina"" .
  
  ?team1 dbp:player ?molina ;
         dbp:teamName ?playerInMolina .

  ?aimar a dbo:FootballPlayer ;
         foaf:name ""Pablo Aimar"" .
  
  ?team2 dbp:player ?aimar ;
         dbp:teamName ?aimarTeam .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
419,2,train,Give me the birthplace of Yandamuri Veerendranath.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Yandamuri Veerendranath""@en.
  ?person dbo:birthPlace ?birthPlace.
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
905,51,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?royalChild
WHERE {
  # Charles I of Hungary and his father
  dbr:Charles_I_of_Hungary dbo:father dbr:Robert_King_of_Naples .
  
  # Robert's parent (grandfather of Charles I)
  dbr:Robert_King_of_Naples dbo:parent ?grandfather .
  
  # Ensure the grandfather is royalty
  ?grandfather a dbo:Monarch .

  # Predecessor of Stephen V of Hungary
  dbr:Ladislaus_IV_of_Hungary dbo:predecessor ?predecessor .

  # Child of predecessor's child
  ?childOfChild dbo:parent ?predecessor .
  ?royalChild dbo:parent ?childOfChild .

  # Ensure the royal child is royalty
  ?royalChild a dbo:Monarch .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
297,3,train,Give me the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
SELECT ?administration WHERE {
  wd:Q2156980 wdt:P39 ?administration .
}
```",1,1,2,1,1,2,2,9,0,0,19,0,0.0,0
68,21,train,"Give me the child of Maximilian I, Holy Roman Emperor and father of Isabella of Austria and father of the child, that is a royalty, of Philip I of Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maximilian I, Holy Roman Emperor
  ?maximilian a dbo:Monarch ;
              foaf:name ""Maximilian I"" .

  # Find children of Maximilian I who are royalty
  ?maximilian dbo:spouse ?parent ; 
              dbo:child ?child .
  ?child a dbo:RoyalFamilyMember ;
         foaf:name ?name .

  # Check if the child is a parent of Isabella of Austria
  ?child dbo:child dbr:Isabella_of_Austria .

  # Verify that the child is also the father of Philip I of Castile
  ?child dbo:spouse ?spouse .
  ?spouse dbo:child dbr:Philip_I_of_Castile .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
39,22,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson""@en .
  
  OPTIONAL { ?person dbo:birthName ?name . FILTER(CONTAINS(LCASE(?name), LCASE(""Robert Lamar Thompson""))) }
  
  ?person dbo:occupation ?profession .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
203,25,train,"Give me the military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?battleForce1 ?battleForce2 ?calderEvent ?calderForce 
WHERE {
  # Battle of Fort Royal forces
  ?battle a dbo:Battle ;
          dbp:name ""Battle of Fort Royal"" ;
          dbp:combatant1 ?battleForce1 ;
          dbp:combatant2 ?battleForce2 .

  # Robert Calder's societal events and military force
  ?calderEvent dbo:agent <http://dbpedia.org/resource/Robert_Calder> .
  OPTIONAL {
    ?calderEvent dbo:militaryCommanderForUnit ?calderForce .
  }
}
```

This query attempts to:
- Retrieve the combatants involved in the Battle of Fort Royal.
- Identify events associated with Robert Calder and any military forces he commanded.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,20,train,"Give me the predecessor of Carl, Duke of Württemberg and child of the child of Duke Philipp of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Carl, Duke of Württemberg
  ?carl a dbo:Duke ;
        foaf:name ""Carl, Duke of Württemberg"" ;
        dbo:father ?father .

  # Find the predecessor (likely his father)
  ?predecessor a dbo:Duke ;
               foaf:name ?name ;
               dbo:father ?father .

  # Find Duke Philipp of Württemberg
  ?philipp a dbo:Duke ;
           foaf:name ""Duke Philipp of Württemberg"" ;
           dbo:child ?child1 .

  # Find the child of Duke Philipp (grandchild)
  ?child1 dbo:child ?child2 .

  # Ensure the predecessor is related to the grandchild
  ?predecessor dbo:father ?child2 .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
80,12,train,Give me the actor of ATL (film) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession 
WHERE {
  # Find the film ""ATL""
  dbr:ATL (dbo:starring) ?actor .
  
  # Get professions of each actor
  OPTIONAL { ?actor dbo:occupation ?profession . }
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
595,25,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find the book ""Back to Work""
  ?book dbo:title ""Back to Work""@en .
  
  # Identify its author
  ?book dbo:author ?author .

  # Ensure the author is Andrew Yang
  ?author rdfs:label ""Andrew Yang""@en .

  # Check if Andrew Yang was a commander in the context of COVID-19
  OPTIONAL {
    ?commanderRole dbo:agent ?author ;
                   dbo:subject dbr:COVID-19 .
    
    FILTER EXISTS { 
      ?commanderRole dbo:positionLabel ""Commander""@en .
    }
  }

  # Ensure Andrew Yang served in the United States Navy Reserve
  OPTIONAL {
    ?militaryService dbo:agent ?author ;
                     dbo:militaryBranch dbr:United_States_Navy_Reserve .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
39,43,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?alterEgo ?creator WHERE {
  # Find the character created by Walter B. Gibson
  ?character dbo:creator dbr:Walter_B._Gibson .
  
  # Ensure it's a fictional/comics character
  ?character rdf:type dbo:FictionalCharacter ;
             dbo:wikiPageRedirects ?redirect .
  
  OPTIONAL { ?character dbo:alterEgo ?alterEgo . }
  
  # Find any connection to Bob Thompson (musician)
  ?alterEgo dbo:profession dbr:Singer ;
            dbo:associatedBand ?band .
  ?band dbo:member dbr:Bob_Thompson_(musician) .

  # Return the character, its alter ego, and creator
}
```",5,7,6,3,3,3,3,71,0,0,3,0,0.0,0
361,11,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the resource for ""Lasso the Moon""
  ?lassoMoon a dbo:Album ;
             a dbo:Film ;
             a dbo:Work ;
             rdfs:label ""Lasso the Moon""@en .

  # Get actors associated with this film
  ?lassoMoon dbo:starring ?actor .
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
347,33,train,Give me the commander in Thirty Years' War and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
    ?archduke dbr:Charles_Joseph,_Archduke_of_Austria .
    ?archduke dbo:parent ?parent .

    ?child dbr:Charles_Joseph,_Archduke_of_Austria .
    
    ?parent dbo:spouse ?mother .
    ?parent dbo:child ?child .

    ?commander dbo:occupation dbr:Thirty_Years'_War_commander .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
595,16,train,"Give me the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?result <http://dbpedia.org/property/author> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work WHERE {
  ?person dbo:residence dbr:Chappaqua,_New_York ;
          a dbo:Politician ;
          dbo:officeHolderOf ?office .
  
  ?work dbo:author ?person ;
        a dbo:Book .

}
```

This query does the following:
- Selects individuals (`?person`) who reside in Chappaqua, New York.
- Ensures these individuals are politicians and hold an office.
- Finds works authored by these individuals that are categorized as books.",2,7,3,2,1,3,3,71,0,0,10,0,0.0,0
80,58,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorShelbyOaks ?albumActor ?goldenMasterProfessional
WHERE {
  # Actor of ""Shelby Oaks""
  ?film dbr:Shelby_Oaks .
  ?film dbo:starring ?actorShelbyOaks .

  # Actor of the album of ""What You Know (T.I. song)""
  ?song dbr:What_You_Know_(T.I._song) .
  ?song dbo:fromAlbum ?album .
  ?album dbo:performer ?albumActor .

  # Professional in the alter ego of the series ""The Golden Master""
  ?series dbr:The_Golden_Master .
  ?series dbo:character ?alterEgo .
  ?alterEgo dbo:profession ?goldenMasterProfessional .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
731,10,train,"Who is the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse?","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Resource for the event
  dbr:Sinking_of_Prince_of_Wales_and_Repulse dbo:commandedBy ?commander .
  
  # Ensure the commander is a person or military role
  ?commander rdf:type dbo:MilitaryPerson .
}
```",2,4,3,2,1,3,2,20,0,0,6,0,0.0,0
414,13,train,"Give me the show of the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v1 . ?v0 <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show WHERE {
  # Step 1: Identify Rainer Weiss
  ?rainer a dbo:Person ;
          foaf:name ""Rainer Weiss""@en .

  # Step 2: Find awards received by Rainer Weiss
  ?award dbo:recipient ?rainer .

  # Step 3: Identify the awarding institution
  ?award dbo:awardingBody ?institution .

  # Step 4: Check if the institution is educational
  ?institution a dbo:EducationalOrganization .

  # Step 5: Find shows hosted by the institution
  ?show dbo:hostedBy ?institution .
}
```

This query assumes that:
- Rainer Weiss is represented in DBpedia with the name ""Rainer Weiss"".
- The awards have properties `dbo:recipient` and `dbo:awardingBody`.
- Educational institutions are of type `dbo:EducationalOrganization`.
- Shows have a property `dbo:hostedBy`.",3,4,4,3,1,3,2,20,0,0,12,0,0.0,0
89,34,train,Give me the predecessor of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?result WHERE {
  # Step 1: Find Myat Hpone Pyo's predecessor
  ?myatHponePyo dbo:predecessor ?predecessor .
  
  FILTER(STR(?myatHponePyo) = ""Myat_Hpone_Pyo"")

  # Step 2: Find a child of Minye Kyawswa
  ?minyeKyawswa dbo:child ?childOfMinyeKyawswa .

  FILTER(STR(?minyeKyawswa) = ""Minye_Kyawswa"")

  # Step 3: Find the parent of that child
  ?childOfMinyeKyawswa dbo:parent ?parentOfChild .

  # Step 4: Find the child of that parent
  ?parentOfChild dbo:child ?result .
  
  FILTER(?predecessor = ?result)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
293,6,train,"Give me the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:title ""1,000 Dollars a Minute""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
143,9,train,"Give me the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?result <http://dbpedia.org/ontology/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?show rdf:type dbo:Film .
  ?show rdf:type dbo:TelevisionShow .
  ?show dbo:starring dbr:Afeez_Oyetoro .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
668,32,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionRodArgent ?associatedArtistStonebwoy
WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent"" ;
             dbo:occupation ?professionRodArgent .

  # Find Stonebwoy's associated musical artist
  ?stonebwoy a dbo:Person ;
             foaf:name ""Stonebwoy"" ;
             dbp:birthName ""Elorm Kabu Amenyah"" ;
             dbo:associatedMusicalArtist ?associatedArtistStonebwoy .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
633,5,train,Give me the father of Dorothea of Lorraine.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1234567 wdt:P22 ?father .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Dorothea of Lorraine. You can find this identifier by searching for her on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
782,6,train,Give me the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
SELECT ?member WHERE {
  wd:Q1114 dbo:musicalArtist ?band .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
668,36,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?artist WHERE {
  # Find an artist from Central Region, Ghana
  ?person a dbo:Artist ;
          dbo:birthPlace dbr:Central_Region,_Ghana ;
          foaf:name ?name .
  
  # Get the birth name of this person
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  # Find the associated musical artist of Pacely using their birth name
  ?pacely a dbo:Artist ;
           foaf:name ""Pacely""^^xsd:string .
  
  # Assuming there's a relationship or association between artists
  ?association dbo:associatedWith ?pacely ;
               dbo:associatedWith ?person .
  
  FILTER(?birthName = ?name)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
87,17,train,Give me the actor of Always (1989 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor ?spouse WHERE {
  # Part 1: Find the actor in the film ""Always"" (1989)
  ?film dbo:title ""Always""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1989) .
  ?film dbo:starring ?actor .

  # Part 2: Find awards associated with Janusz Kamiński
  dbr:Janusz_Kamiński dbo:awardReceivedOrNominatedFor ?award .

  # Find the awardee of that award and their spouse
  ?award dbo:recipient ?awardee .
  OPTIONAL { ?awardee foaf:mbox ?email } # To ensure we have a person, not an organization
  OPTIONAL {
    ?awardee dbo:spouse ?spouse .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
87,14,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński and actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Janusz Kamiński as an award recipient and actor in ""Paradise""
  ?person a dbo:FilmDirector ;
          foaf:name ""Janusz Kamiński"" ;
          dbo:awardReceived ?award .
  
  # Ensure he is also an actor in the film ""Paradise""
  ?film dbo:director ?person ;
        rdfs:label ""Paradise (2013 film)""@en .

  # Retrieve spouse information
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
198,41,train,"Give me the entity in Charleston, South Carolina and war of the awardee of Medal of Honor and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?medalOfHonor ?gillmoreMedal WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:birthPlace dbr:Charleston,_South_Carolina ;
          dbo:awardReceived ?medalOfHonor ;
          dbo:awardReceived ?gillmoreMedal .

  FILTER (?medalOfHonor = dbr:Medal_of_Honor_(United_States) &&
          ?gillmoreMedal = dbr:Gillmore_Medal)

}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
731,15,train,Give me the force of the awardee of the award of Edmund Hakewill-Smith and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force WHERE {
  # Identify Edmund Hakewill-Smith and Tom Phillips (Royal Navy officer)
  ?edmund a dbo:Person ;
          foaf:name ""Edmund Hakewill-Smith""@en .
  
  ?tom a dbo:Person ;
       foaf:name ""Tom Phillips (Royal Navy officer)""@en .

  # Find the award given by them
  ?award dbo:giver ?edmund ;
         dbo:giver ?tom .

  # Identify the awardee of this award
  ?awardee dbo:recipient ?award .

  # Determine if the awardee is associated with a military force
  ?awardee dbo:militaryForce ?force .
}",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
419,1,train,Give me the alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  wd:Q1234568 dbo:almaMater ?almaMater .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Chennupati Jagadish. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
375,3,train,Give me the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Yamaza Enjirō. You can find this identifier by searching for Yamaza Enjirō on DBpedia or using a SPARQL endpoint to query for his unique identifier.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
687,4,train,"Give me the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthDate ""1955-02-22""^^xsd:date .
  ?person rdf:type dbo:Athlete .
}
```",1,2,2,1,1,3,3,71,10,0,0,1.0,1.0,1.0
58,8,train,Give me the producer of the movie with .,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?movie a dbo:Film .
  ?movie dbo:title ""Movie Title""@en . # Replace ""Movie Title"" with the actual movie name
  ?movie dbo:productionCompany ?company .
  ?company dbo:founder ?producer .
}
```

Replace `""Movie Title""` in the query with the title of the movie you are interested in. This query assumes that the producer is linked through a production company's founder, which might not always be accurate depending on how data is structured in DBpedia.",2,2,3,2,1,3,2,20,0,0,10672,0,0.0,0
943,9,train,Give me the reference to  and child of Dawit I.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?dawitI ?child
WHERE {
  ?dawitI a dbo:Monarch ;
          rdfs:label ""Dawit I""@en .
  
  OPTIONAL { 
    ?dawitI dbo:child ?child .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
769,14,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v2 <http://dbpedia.org/ontology/manager> ?v0 . }","```sparql
SELECT ?playerInManager WHERE {
  ?reference a dbo:SportsClub ;
             a dbo:SportsTeam ;
             a dbo:SoccerClub ;
             rdfs:label ""Hong Kong C""@en .
  
  ?manager a dbo:SportsManager ;
           a dbo:SoccerManager .

  ?reference dbo:manager ?manager .

  ?manager dbo:playerInManager ?playerInManager .
}
```",3,9,4,3,1,3,2,20,0,0,4,0,0.0,0
80,15,train,Give me the movie with the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?book dbo:author ?author .
  ?author foaf:name ""John Scalzi""@en .
  ?book rdfs:label ""Smartbomb""@en .

  OPTIONAL { ?author dbo:film ?movie . }
}
```",2,2,3,2,1,3,3,71,0,0,39790,0,0.0,0
468,3,train,Give me the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?realName WHERE {
  wd:Q12345 rdfs:label ""Peter IV of Aragon""@en .
  OPTIONAL { wd:Q12345 foaf:name ?realName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,"Give me the author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie ?author WHERE {
  ?movie a dbo:Film .
  ?movie dbo:genre/dbo:subClassOf* dbo:TelevisionShow .
  ?movie dbo:starring dbr:Vera_Lynn .
  
  OPTIONAL { ?movie dbo:writer ?author . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
- **SELECT**: We are selecting the movie and its author.
- **?movie a dbo:Film**: Ensures that we are dealing with films (movies).
- **?movie dbo:genre/dbo:subClassOf* dbo:TelevisionShow**: Checks if the film is also classified under television shows, using subclass relationships to cover broader categories.
- **?movie dbo:starring dbr:Vera_Lynn**: Ensures Vera Lynn is involved in the movie.
- **OPTIONAL { ?movie dbo:writer ?author . }**: Retrieves the author (or writer) of the movie if available.

This query will return movies that meet all specified criteria along with their authors, if such information is available in DBpedia.",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
737,52,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Find Archduchess Helena of Austria's spouse
  ?helena dbo:spouse ?spouse .

  # Step 2: Find the child of this spouse who is royalty
  ?child dbo:parent ?spouse .
  ?child dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royalty""))

  # Step 3: Find the predecessor of this royal child
  ?predecessor dbo:succession ?child .

  # Step 4: Find Archduchess Margarete Sophie of Austria's child
  ?margarete dbp:child ?margareteChild .

  # Step 5: Find Duke Philipp of Württemberg's grandchild and their child
  ?philipp dbo:child ?philippChild .
  ?philippChild dbo:child ?grandchild .
  ?grandchild dbo:child ?greatGrandchild .

  FILTER(?margareteChild = ?greatGrandchild)
}
```

This query assumes the existence of certain properties and relationships in DBpedia, such as `dbo:succession` for finding predecessors. Adjustments may be necessary based on actual data availability and structure.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
78,21,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?stuartArtist ?billyArtist ?davidBandMember WHERE {
  # Find Stuart Tosh's associated musical artist
  ?stuartTosh dbo:associatedMusicalArtist ?stuartArtist .
  FILTER (str(?stuartTosh) = ""Stuart_Tosh"")

  # Find Billy Lyall's associated musical artist
  ?billyLyall dbo:associatedMusicalArtist ?billyArtist .
  FILTER (str(?billyLyall) = ""Billy_Lyall"")

  # Find David Paton's associated musical artist and its band members
  ?davidPaton dbo:associatedMusicalArtist ?davidArtist .
  FILTER (str(?davidPaton) = ""David_Paton"")
  
  ?davidArtist dbo:bandMember ?davidBandMember .
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
731,11,train,Give me the force of the awardee of Commander of the Order of the British Empire and war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Identify Tom Phillips, the Royal Navy officer
  ?tomPhillips a dbo:MilitaryPerson ;
              foaf:name ""Tom Phillips"" ;
              dbo:nationality dbr:United_Kingdom ;
              dbo:militaryBranch dbr:Royal_Navy .

  # Check if he was awarded Commander of the Order of the British Empire
  ?awards dbo:recipient ?tomPhillips .
  ?awards dbo:title dbr:Commander_of_the_Order_of_the_British_Empire .

  # Identify wars he was involved in
  ?war dbo:participant ?tomPhillips .

  # Determine the military force associated with him
  ?force dbo:militaryPerson ?tomPhillips .
  
  FILTER EXISTS { ?awards dbo:title dbr:Commander_of_the_Order_of_the_British_Empire }
  FILTER EXISTS { ?war a dbo:MilitaryConflict }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
288,2,train,"Give me the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement .
  ?settlement dbo:country dbr:Pakistan .
  OPTIONAL { ?settlement rdfs:label ""Lahore""@en . }
  FILTER (
    EXISTS { ?settlement dbo:commonName ""The Heart of Pakistan""@en } ||
    EXISTS { ?settlement dbo:commonName ""Paris of the East""@en } ||
    EXISTS { ?settlement dbo:commonName ""City of Gardens""@en } ||
    EXISTS { ?settlement dbo:commonName ""City of Literature""@en }
  )
}
```

This query searches for a settlement in Pakistan that matches any of the given nicknames. It uses optional labels and filters to ensure it captures the correct entity.",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
668,41,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of Rod Argent.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shaggyArtist ?rodArgentProfession WHERE {
  # Find Shaggy by birth name and get his associated musical artist
  ?shaggy a dbo:MusicalArtist ;
          foaf:name ""Shaggy"" ;
          dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .
  
  OPTIONAL { 
    ?shaggy dbo:associatedBandOrMusicalArtist ?shaggyArtist .
  }
  
  # Find Akon by birth name
  ?akon a dbo:MusicalArtist ;
        foaf:name ""Akon"" ;
        dbo:birthName ""Elorm Kabu Amenyah""@en .

  # Find Rod Argent and his profession
  ?rodArgent a dbo:Musician ;
             foaf:name ""Rod Argent"" .
  
  OPTIONAL {
    ?rodArgent dbo:profession ?rodArgentProfession .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
468,17,train,"Give me the reference to Peter IV and child of the father, that is a royalty, of the parent of Martin of Aragon.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peterIV ?royalChild WHERE {
  # Step 1: Identify Martin of Aragon
  ?martin a dbo:Person ;
          foaf:name ""Martin of Aragon""@en .

  # Step 2: Find his father
  ?father dbo:child ?martin .
  
  # Step 3: Determine the child of this father who is royalty
  ?royalChild dbo:parent ?father ;
              a dbo:Monarch .

  # Step 4: Identify Peter IV and find his reference
  ?peterIV a dbo:Person ;
           foaf:name ""Peter IV""@en .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
871,27,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbpedia:Eton_College .
  ?alumnus a dbo:Politician .
  ?child dbo:parent ?alumnus .
  ?child dbo:parent ?father .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
68,24,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Philip I of Castile and his children who are royalty
  dbr:Philip_I_of_Castile dbo:child ?child1 .
  ?child1 a dbo:Monarch .

  # Commander in Siege of Padua who is royalty
  ?commander dbo:event dbr:Siege_of_Padua .
  ?commander a dbo:Monarch .
  ?commander dbo:child ?child2 .

  # Find the common child
  FILTER (?child1 = ?child2)

  # Determine the father of this child
  ?father dbo:spouse ?mother .
  ?mother dbo:child ?commonChild .
  FILTER (?commonChild = ?child1)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
119,27,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Partido Socialista Obrero Español""@es .
  
  OPTIONAL { 
    ?party dbo:headLeader ?leader .
  }
}
```

This query does the following:
- It looks for an entity that is of type `dbo:PoliticalParty` and has a label in Spanish as ""Partido Socialista Obrero Español"".
- It then attempts to find the head leader (`dbo:headLeader`) associated with this political party.",3,4,4,3,1,3,3,71,0,0,100,0,0.0,0
347,57,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Archduke Charles Joseph of Austria's parent and child
  ?charlesJoseph a dbo:Person ;
                 dbp:parent ?parent1 .
  
  ?childOfParent1 a dbo:Person ;
                  dbp:parent ?parent1 .

  # Cecilia Renata of Austria's father and child
  ?ceciliaRenata a dbo:Person ;
                 dbp:father ?fatherCeciliaRenata .

  ?childOfFatherCeciliaRenata a dbo:Person ;
                              dbp:father ?fatherCeciliaRenata .
  
  # Ensure the person was a commander in the Thirty Years' War
  ?childOfFatherCeciliaRenata dbo:occupation ?commanderRole .
  FILTER(CONTAINS(LCASE(?commanderRole), ""thirty years war"") || CONTAINS(LCASE(?commanderRole), ""commander""))

  # Find common individual
  VALUES ?commonIndividual { ?childOfParent1 ?childOfFatherCeciliaRenata }
  
  # Determine the father of this common individual
  ?commonIndividual dbp:father ?father .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,5,train,"Give me the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?creation WHERE {
  ?work dbo:creator dbr:Walter_B._Gibson .
  ?work dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect dbo:type dbr:Fictional_character . }
  OPTIONAL { ?redirect dbo:type dbr:Comics_character . }
  FILTER((BOUND(?redirect) && ?redirect = ?redirect))
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
37,5,train,"Give me the birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo occupation dbr_Singer-songwriter .
  ?person dbo occupation dbr_Writer .
  ?person foaf name ""Lauryn Hill"" .
  ?album dbo artist ?person .
  ?album rdfs:label ""The Miseducation of Lauryn Hill""@en .
  ?person dbo birthPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
756,4,train,"Give me the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find VfL Bochum resource
  VALUES ?club { dbr:VfL_Bochum }

  # Identify players associated with the club during the 2007-08 season
  ?player dbo:memberOfTeam ?team .
  ?team dbo:season ?season .
  ?season dbo:startDate ?start .
  ?season dbo:endDate ?end .

  FILTER (
    ?club = ?team &&
    ?start <= ""2007-07-01""^^xsd:date &&
    ?end >= ""2008-06-30""^^xsd:date
  )

  # Ensure the player is categorized as a sports club, organization, and soccer club
  ?player dbo:wikiPageWikiLink dbr:Soccer_club .
  ?player dbo:wikiPageWikiLink dbr:Sports_organization .
  ?player dbo:wikiPageWikiLink dbr:Sports_club .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
78,18,train,Give me the band member of the associated musical artist of David Paton and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find David Paton's associated musical artist
  OPTIONAL {
    ?davidPaton dbo:associatedBand dbr:Pilot_(band) .
    ?pilotArtist dbo:musicalArtist ?bandMember .
  }
  
  # Find Billy Lyall's associated musical artist
  OPTIONAL {
    ?billyLyall dbo:associatedBand dbr:Pilot_(band) .
    ?pilotArtist dbo:musicalArtist ?bandMember .
  }

  # Bind David Paton and Billy Lyall to their respective resources
  VALUES (?davidPaton ?billyLyall) {
    (dbr:David_Paton (dbr:Billy_Lyall))
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
687,47,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # The actor must be in the film and also a soccer player and athlete
  ?film dbo:starring ?actor .
  ?actor dbo:sport dbr:Soccer ;
         dbo:occupation dbr:Athlete .

  # Find person born on 1955-02-22 who is an athlete
  ?person dbp:birthday ""1955-02-22""^^xsd:date ;
          dbo:occupation dbr:Athlete .
  
  # The actor must also be the player in this person
  ?actor dbo:playerIn ?person .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,1,train,Give me the birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Reneta Kamberova. You can find this by searching for her on DBpedia or using a SPARQL endpoint to query for her name.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
39,12,train,Give me the professional in  and band of Bob Thompson (musician).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?band
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Bob Thompson"" .
  
  OPTIONAL { ?person dbo:occupation ?profession . }
  OPTIONAL { ?person dbo:bandMember ?band . }

  FILTER (lang(?profession) = 'en' || lang(?band) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
159,22,train,"Give me the successor of Yurii Khmelnytsky and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?war ?tvShow ?societalEvent WHERE {
  # Find Yurii Khmelnytsky's successor
  ?yuriikhmelnytsky dbo:succeededBy ?successor .
  FILTER(STRSTARTS(LCASE(?yuriikhmelnytsky), ""yurii khmelnytsky""))

  # Identify Jean Baptist, Comte d'Arco as a commander in a war
  ?jeanbaptist dbo:commanderOf ?war .
  FILTER(STRSTARTS(LCASE(?jeanbaptist), ""jean baptist comte d'arco""))

  # Find connections between the war and a television show
  ?war dbo:depicts ?tvShow .
  ?tvShow rdf:type dbo:TelevisionSeries .

  # Find connections between the war and a societal event
  ?war dbo:relatedTo ?societalEvent .
  ?societalEvent rdf:type dbo:SocietalEvent .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,60,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Maria Anna of Bavaria and her children
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1574)

  ?mariaAnna dbo:child ?child .

  # Father of the child (husband/partner)
  ?child dbo:spouseOrPartner ?father .

  # Child of the father (grandchildren)
  ?father dbo:child ?grandchild .

  # Filter for royalty
  ?grandchild a dbo:Monarch ;
              dbo:commanderInWar ?warCommand .

  # Algerian War as societal event and television show
  ?algerianWar a dbo:MilitaryConflict ;
               foaf:name ""Algerian War""@en .
  
  ?warCommand dbo:participatedInMilitaryForce ?militaryForce .
  ?militaryForce dbo:conflict ?algerianWar .

  # Ensure the grandchild is linked to the Algerian War
  ?grandchild dbo:commanderInWar ?algerianWar .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
905,36,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalChild WHERE {
  # Step 1: Find Stephen V of Hungary and his father
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?father dbo:spouse ?mother ;
          dbo:child ?stephenV .

  # Step 2: Identify the spouse of Charles II of Naples among the children of Stephen V's father
  ?charlesII a dbo:Monarch ;
             foaf:name ""Charles II of Naples""@en .
  
  ?spouse dbp:spouseOf ?charlesII ;
          dbo:child ?stephenV .

  # Step 3: Find a royal child from this spouse
  ?royalChild dbo:parent ?spouse ;
              dbo:parent ?motherOrFather ; # Assuming the other parent is either mother or father
              a dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
295,10,train,Give me the birth place of the producer of Storm in a Teacup (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Storm_in_a_Teacup_(film)> <http://dbpedia.org/ontology/producer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerName ?birthPlaceLabel WHERE {
  # Find the film ""Storm in a Teacup""
  dbr:Storm_in_a_Teacup dbo:director ?director .
  
  # Find producers of the film
  OPTIONAL { 
    ?film dbo:producer ?producer .
    FILTER(?film = dbr:Storm_in_a_Teacup)
  }
  
  # Get producer's name and birthplace
  ?producer a dbo:FilmProducer ;
           foaf:name ?producerName .
  OPTIONAL {
    ?producer dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
  }
}
ORDER BY ?producerName
LIMIT 10",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
353,21,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Roger III, Duke of Apulia
  ?rogerIII a dbo:Person ;
            foaf:name ""Roger III"" ;
            dbo:title dbr:Duke_of_Apulia .

  # Find his parent (likely father)
  ?parent dbo:spouse ?elvira .
  ?parent dbo:child ?rogerIII .

  # Find children of this parent
  ?parent dbo:child ?child .

  # Ensure the child is also a child of Elvira of Castile
  ?elvira a dbo:Person ;
          foaf:name ""Elvira of Castile"" ;
          dbo:title dbr:Queen_of_Sicily .
  ?elvira dbo:spouse ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
38,2,train,"Give me the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:positionTitle ?title .
  ?person dbo:officeHolderOf ?office .
  ?person dbo:politicalPartyMemberOf ?party .
  
  FILTER(CONTAINS(LCASE(?title), ""commander"") && CONTAINS(LCASE(?office), ""north carolina air national guard""))
  
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
769,8,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:SoccerTeam ;
        dbo:country dbr:Hong_Kong ;
        rdfs:label ""Hong Kong C Team""@en .
  
  ?manager dbo:position dbr:Sports_Manager ;
           dbo:sport dbr:Soccer ;
           dbo:managedTeam ?team .

  OPTIONAL { 
    ?manager dbo:formerPlayerOf ?playerRole .
  }

  FILTER (LANG(?team->rdfs:label) = ""en"")
}
```

This query does the following:
- Identifies a team that is labeled as ""Hong Kong C Team"" and is associated with Hong Kong.
- Finds managers who are linked to this team, specifically those categorized under sports management and soccer.
- Checks if these managers have any former player roles.",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
531,47,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  # Find Alberto Ruiz-Gallardón's residence and office
  ?alberto a dbo:Person ;
           foaf:name ""Alberto Ruiz-Gallardón""@en .
  
  OPTIONAL { ?alberto dbo:residence ?residence . }
  OPTIONAL { ?alberto dbo:officeHolder ?office . }

  # Find Manuel Pinto da Costa's military conflict and societal event
  ?manuel a dbo:Person ;
          foaf:name ""Manuel Pinto da Costa""@en .
  
  OPTIONAL { ?manuel dbo:militaryConflict ?conflict . }
  OPTIONAL { ?manuel dbo:societalEvent ?event . }

  # Find the tenant of the residence or office
  ?tenant dbo:residence ?residence ;
          dbo:officeHolder ?office .

}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
203,47,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  ?war dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  
  # Identify William Bayne as a commander in these wars
  ?commander dbo:name ""William Bayne""@en ;
             dbo:commanded ?war .

  # Retrieve the military force associated with the war
  ?war dbo:militaryForce ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
119,54,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v5 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Spain ;
          dbo:country dbr:Spain ;
          dbo:birthPlace dbr:Santiago_de_Compostela ;
          dbo:officeHolderOf dbr:2009_Galician_regional_election .
  
  ?person dbo:residence ?residence .
  
  FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
- **SELECT ?residence**: We are interested in finding the residence of the person.
- **?person a dbo:Person**: Ensures we are querying about a person.
- **dbo:nationality dbr:Spain; dbo:country dbr:Spain**: The person must be Spanish and from Spain.
- **dbo:birthPlace dbr:Santiago_de_Compostela**: The person has a connection to Santiago de Compostela, assumed here as birthplace for simplicity.
- **dbo:officeHolderOf dbr:2009_Galician_regional_election**: The person held an office during the 2009 Galician regional election.
- **?person dbo:residence ?residence**: Retrieves the residence of the person.
- **FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)**: Ensures that the residence is a literal string, which can be interpreted as a country name.

This query assumes that DBpedia has structured data for these specific relationships and entities. Adjustments might be necessary based on actual data availability and structure in DBpedia.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
246,4,train,"Give me the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Princess Muna al-Hussein
  dbr:Princess_Muna_al-Hussein a dbo:Person .
  
  # Find her children who are royalty
  ?princess dbo:spouse ?husband . 
  ?husband dbo:spouse ?princess .
  ?child dbo:parent ?princess ;
         dbo:parent ?husband .
  ?child a dbo:RoyalFamilyMember ; # Assuming this class represents royalty
         rdfs:label ?name .
  
  FILTER (lang(?name) = 'en') # Ensure the label is in English
}
ORDER BY ?name",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
159,10,train,Give me the commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?commander WHERE {
  # Find Yurii Khmelnytsky and his successor
  dbr:Yuri_Khmelnytskyy dbo:officeHolderOf ?position .
  
  OPTIONAL { 
    ?position dbo:succeededBy ?successor .
  }
  
  # Find the commander in the Great Turkish War
  ?commander dbo:role ?warRole .
  FILTER(CONTAINS(LCASE(?warRole), ""great turkish war"")).
  
  # Link successor to the commander role if applicable
  OPTIONAL {
    ?successor dbo:role ?warRole .
    FILTER(CONTAINS(LCASE(?warRole), ""great turkish war"")).
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,7,train,"Give me the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?party WHERE {
  wd:Q1234568 dbo:politicalParty ?party .
  FILTER (rdf:type(?party, dbo:PoliticalParty))
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Miguel Maura.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
119,1,train,Give me the entity in Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:country dbr:Poland . }
  FILTER NOT EXISTS { ?entity dbo:country ?otherCountry . FILTER (?otherCountry != dbr:Poland) }
}
ORDER BY ?entity
LIMIT 100",1,1,2,1,1,3,2,20,0,100,108,0.0,0.0,0
158,12,train,Give me the native of Grand Duchy of Finland and person decedent at Switzerland and native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Native of Grand Duchy of Finland
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .

  # Decedent at Switzerland
  ?person dbo:deathPlace dbr:Switzerland .

  # Native of Russian Empire
  ?person dbo:nationality dbr:Russian_Empire .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
386,8,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?birthPlaceEntity WHERE {
  dbpedia:Žalinkevičaitė-Petrauskienė-Elena dbo:birthPlace ?birthPlace.
  ?birthPlace rdfs:label ?birthPlaceEntity.
  FILTER(LANG(?birthPlaceEntity) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,87,0,0.0,0
143,16,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?musicalArtist WHERE {
  # Find the movie/show featuring Afeez Oyetoro
  ?movie dbo:starring dbr:Afeez_Oyetoro .
  
  # Get the actor of this movie/show
  ?movie dbo:starring ?actor .

  # Find Tiwa Savage (Cynthia Ikponmwenosa Morgan)
  ?tiwa foaf:name ""Tiwa Savage""@en ;
       foaf:based_near ?location .

  # Get the associated musical artist of Tiwa Savage
  ?musicalArtist dbo:associatedMusicalArtist ?tiwa .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
943,6,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  wd:Q1234568 wdt:P136 ?alterEgo .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"". You can find this by searching DBpedia or using a SPARQL endpoint to look up the entity.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
392,5,train,Give me the member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?group a dbo:MusicalGroup ;
         foaf:name ""Der Blau""@en .
  ?group dbo:member ?member .
}
```",2,2,3,2,1,2,2,9,0,0,2569,0,0.0,0
347,39,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?eleonoreFather ?royalChildFather WHERE {
  # Eleonore of Austria's father
  ?eleonore dbo:spouse ?queenOfPoland .
  ?queenOfPoland foaf:name ""Eleonore of Austria""@en .
  ?eleonore foaf:parent ?eleonoreFather .

  # Maria Anna of Bavaria's royal child
  ?mariaAnna dbo:child ?royalChild .
  ?mariaAnna foaf:birthday ?bday .
  FILTER (YEAR(?bday) = 1574)
  ?royalChild dbo:title ?title .
  FILTER EXISTS { ?title dbo:isClassOf ?royalty }

  # Royal child's father
  ?royalChild foaf:parent ?royalChildFather .

  # The father of the royal child is also Eleonore's father
  ?eleonoreFather = ?royalChildFather
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
38,0,train,Give me the author of Promises to Keep (Biden book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Promises_to_Keep_(Biden_book)> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dcterms:title ""Promises to Keep""@en .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
103,57,train,"Give me the professional in the alter ego of The Shadow and professional in the profession of the actor, that is a politician, of Ab Kya Hoga and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Get Lamont Cranston's profession
SELECT ?profession WHERE {
    dbr:Lamont_Cranston dbo:occupation ?profession .
}

# Step 2: Find actor from ""Ab Kya Hoga"" who is also a politician
SELECT DISTINCT ?actor WHERE {
    ?actor dbo:film ?abKyaHoga .
    ?abKyaHoga rdfs:label ""Ab Kya Hoga""@en .
    FILTER(CONTAINS(LCASE(?abKyaHoga), ""ab kya hoga""))
    
    OPTIONAL { ?actor dbo:occupation dbr:Politician . }
    FILTER EXISTS { ?actor dbo:occupation dbr:Actor . }
}

# Step 3: Find actors from ""Dispatches from Elsewhere""
SELECT DISTINCT ?dispatchActor WHERE {
    ?dispatchActor dbo:film ?dispatchesFromElsewhere .
    ?dispatchesFromElsewhere rdfs:label ""Dispatches from Elsewhere""@en .
    FILTER(CONTAINS(LCASE(?dispatchesFromElsewhere), ""dispatches from elsewhere""))
    
    ?dispatchActor dbo:occupation dbr:Actor .
}

# Step 4: Find common profession
SELECT DISTINCT ?commonProfession WHERE {
    VALUES (?actor) { 
        # Replace with actual actor URIs found in step 2
    }
    ?actor dbo:occupation ?commonProfession .

    VALUES (?dispatchActor) { 
        # Replace with actual actor URIs found in step 3
    }
    ?dispatchActor dbo:occupation ?commonProfession .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
756,57,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v3 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Thomas Letsch as manager of VfL Bochum
  dbr:Thomas_Letsch dbo:managerOf dbr:VfL_Bochum .

  # VfL Bochum is a soccer club in Germany
  dbr:VfL_Bochum dbo:sport dbr:Soccer .
  
  # Leader of West Germany (Chancellor)
  ?chancellor dbo:country dbr:West_Germany ;
              dbo:position dbr:Federal_Canzler_of_Germany .

  # Native country of the Chancellor
  ?chancellor dbo:nationality ?nativeCountry .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
361,0,train,Give me the professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?profession WHERE {
  ?actor rdf:type dbo:Actor .
  ?actor dbo:occupation ?profession .
}
```",1,1,2,1,1,2,3,28,0,2472,21580,0.0,0.0,0
78,24,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find David Paton's associated musical artist
  ?davidPaton a dbo:Person ;
              foaf:name ""David Paton""@en .
  
  ?musicalArtist1 dbo:member ?davidPaton .

  # Step 2: Find the writer of Wizards of Waverly Place soundtrack who is both a musical artist and an artist
  ?soundtrack dbr:Wizards_of_Waverly_Place_(soundtrack) ;
             dbo:composer ?writer .
  
  ?writer a dbo:Person, dbo:MusicalArtist, dbo:Artist .

  # Step 3: Find the band member of both identified musical artists
  ?musicalArtist2 dbo:member ?bandMember .
  
  FILTER (?musicalArtist1 != ?musicalArtist2)
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
742,16,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"" and birthplace of the resident of Sofia.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnusBirthPlace ?residentBirthPlace WHERE {
  # Find alumni of Plovdiv University ""Paisii Hilendarski""
  ?person dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  ?person dbo:birthPlace ?alumnusBirthPlace .

  # Find residents of Sofia
  ?resident dbo:residenceLocation dbr:Sofia .
  ?resident dbo:birthPlace ?residentBirthPlace .
}
```

This query assumes:
- `dbo:almaMater` is used to link a person to their university.
- `dbo:residenceLocation` (or an equivalent property) links a person to their place of residence.
- Both properties are available and correctly linked in DBpedia.",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
295,2,train,"Who is the true self, that is an artist, of Steven Kapur?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?realName WHERE {
  ?person a dbo:Artist ;
          rdfs:label ""Steven Kapur""@en .
  OPTIONAL { 
    ?person dbo:alternativeName ?realName .
  }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
203,41,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 ?commander WHERE {
  # Military force of William Bayne's war/event
  ?bayneEvent a dbo:MilitaryConflict ;
              dbo:militaryForce ?militaryForce1 .
  
  # Instance of William Bayne
  dbr:William_Bayne_(Royal_Navy_officer) dbo:participatedIn ?bayneEvent .

  # Military force of Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) a dbo:MilitaryConflict ;
                                      dbo:militaryForce ?militaryForce2 .

  # Commander in the war/event of 30th (Cambridgeshire) Regiment of Foot
  ?regimentEvent a dbo:MilitaryConflict ;
                 dbo:commander ?commander .
  
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedIn ?regimentEvent .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
89,7,train,"Give me the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Min Phyu""@en .
  
  ?person dbo:spouse ?spouse .

  ?spouse a dbo:RoyalFamilyMember ;
          dbo:royalty true .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
871,16,train,"Who is the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parent .

  # Step 2: Find parents who are politicians and office holders
  ?parent a dbo:Politician ;
         dbo:officeHolderOf ?office .

  # Step 3: Retrieve children of that parent
  ?parent dbo:child ?child .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
756,13,train,"Give me the native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage
WHERE {
  # Theodor Heuss as an individual in DBpedia
  dbr:Theodor_Heuss a dbo:Person .

  # Find the country he was associated with (Germany)
  dbr:Theodor_Heuss dbo:nationality dbr:Germany .

  # Get the native language of Germany
  dbr:Germany dbp:language ?nativeLanguage .
}
```",2,3,3,2,1,3,3,71,0,0,5170,0,0.0,0
782,10,train,Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?reference ?associatedArtist WHERE {
  wd:Q1234567 wdt:P463 wd:Q7890123 . # The Fabulous Thunderbirds reference to Nick Curran
  wd:Q1234567 wdt:P170 ?associatedArtist . # Associated musical artist of Nick Curran
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
213,14,train,"Give me the country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/country> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find Hu Jieqing's spouse
  ?huJieqing a dbo:Person ;
             foaf:name ""Hu Jieqing""@en .
  
  ?huJieqing dbo:spouse ?spouse .

  # Check if the spouse is a writer
  ?spouse a dbo:Writer ;
          foaf:name ?name .

  # Find works associated with this writer
  ?work dbo:author ?spouse ;
        dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
668,20,train,Give me the professional in the profession of Rod Argent and associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist WHERE {
  # Find Rod Argent's profession
  dbr:Rod_Argent dbo:profession ?profession .

  # Find other professionals with the same profession
  ?professional dbo:profession ?profession .
  
  FILTER(?professional != dbr:Rod_Argent)

  # Check if these professionals are associated with $pacely
  ?associatedArtist dbo:member ?professional .
  ?associatedArtist rdfs:label ""$pacely""@en .

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
158,6,train,Give me the person decedent at Switzerland and native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:countryOfBirth dbr:Grand_Duchy_of_Finland .
  OPTIONAL { ?person foaf:name ?name . }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
687,30,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in Juan Carlos Molina (footballer) and player in Sergio Agüero.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:managerOf ?team .
  
  ?player1 dbo:playsFor ?team ;
           dbr:Juan_Carlos_Molina .
  
  ?player2 dbo:playsFor ?team ;
           dbr:Sergio_Agüero .

  FILTER EXISTS { ?person dbo:spouse ?player1 . }
  FILTER EXISTS { ?person dbo:spouse ?player2 . }
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and properties.
- **SELECT**: We are interested in the team (`?team`) where this person is a manager.
- **FILTER by Birthdate**: The person must have a birth date of 1979-11-03.
- **Roles**: The person should be both a soccer player and a manager (`dbo:managerOf`).
- **Connections**: The person has played in the same team as Juan Carlos Molina and Sergio Agüero. This is represented by `?player1` and `?player2`.
- **FILTER EXISTS**: Ensures that the person has some connection (e.g., spouse) with both players, which might be a proxy for having played together.

This query assumes that the relationships between players can be inferred through shared teams or other connections like being spouses, which is a simplification. Adjustments may be needed based on actual data availability and structure in DBpedia.",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
246,6,train,Give me the parent of Princess Sara bint Faisal and parent of Prince Omar bin Faisal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?parentName WHERE {
  VALUES ?person { 
    dbr:Sara_bint_Faisal_of_Saudi_Arabia 
    dbr:Omar_bin_Faisal
  }
  
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (lang(?parentName) = 'en')
}
ORDER BY ?person",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,20,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
    dbr:Charles_I_of_Hungary dbo:father ?father .
    
    ?father dbo:parent ?grandfather .
    ?grandfather a dbo:Monarch .

    ?grandfather dbo:spouse dbr:Charles_II_of_Naples .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
531,8,train,"Give me the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party dbo:wikiPageRedirects dbr:Partido_Popular_(Spain) .
  ?party dbo:leader ?leader .
  ?leader a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
140,1,train,Give me the party member of Republican Party (United States).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:partyAffiliation dbr:Republican_Party_(United_States) .
}
```",1,1,2,1,1,3,2,20,0,0,21486,0,0.0,0
905,35,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Step 2: Find his father
  ?father dbo:child ?philip .

  # Step 3: Determine the spouse of that father
  ?spouse dbo:spouse ?father .

  # Ensure the spouse is a royalty and related to Béla IV of Hungary
  ?belavI a dbo:Person ;
          foaf:name ""Béla IV of Hungary""@en .
  
  ?child dbo:parent ?belavI ;
         a dbo:RoyalFamilyMember .
  
  ?spouse dbo:child ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
905,19,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Step 2: Find his father
  ?father dbo:child ?philip .

  # Step 3: Determine the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,19,train,Give me the band of Kim Wilson and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Kim Wilson""@en .
  ?person dbo:memberOfBand ?band .
  ?band dbo:name ?bandName .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
816,9,train,Give me the parent of Amy Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?actor
WHERE {
  # Find the parent of Amy Arbus
  OPTIONAL {
    ?amyArbus dbo:spouse|dbo:child ?person .
    ?person dbo:parent ?parent .
    FILTER(?amyArbus = dbr:Amy_Arbus)
  }

  # Find an actor from the film ""Judgment: The Trial of Julius and Ethel Rosenberg""
  OPTIONAL {
    ?film dbo:starring ?actor .
    FILTER(?film = dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg)
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
687,23,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Polloi dbo:birthday ?birthdate .

  # Find athletes with the same birthdate
  ?athlete a dbo:Athlete ;
           dbo:birthday ?sameBirthdate .
  
  FILTER (?birthdate = ?sameBirthdate)
}
```",3,4,4,3,1,3,3,71,0,0,18,0,0.0,0
737,57,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v5 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Alexander of Württemberg (1804-1881)
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg"" ;
             dbo:birthYear ""1804""^^xsd:gYear ;
             dbo:deathYear ""1881""^^xsd:gYear .

  # His child
  ?child1 dbo:parent ?alexander .
  
  # Child's child
  ?child2 dbo:parent ?child1 .
  
  # Child's child's child (predecessor of Carl, Duke of Württemberg)
  ?child3 dbo:parent ?child2 ;
          foaf:name ?name .

  # Carl, Duke of Württemberg
  ?carl a dbo:Person ;
        foaf:name ""Carl, Duke of Württemberg"" .
  
  FILTER(?child3 != ?carl) # Ensure it's the predecessor

  # Archduke Charles Louis of Austria
  ?archduke a dbo:Person ;
            foaf:name ""Archduke Charles Louis of Austria"" .

  # His child
  ?archdukeChild1 dbo:parent ?archduke .
  
  # Child's child (who is royalty)
  ?archdukeChild2 dbo:parent ?archdukeChild1 ;
                  a dbo:Royalty .

  # Find the intersection
  FILTER(?child3 = ?archdukeChild2)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
89,15,train,Give me the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find Minye Kyawswa
  ?minyeKyawswa a dbo:Person ;
                foaf:name ""Minye Kyawswa""@en .

  # Find his children
  ?child dbo:parent ?minyeKyawswa .

  # Find the parents of those children
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
203,55,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?militaryConflict
WHERE {
  # William Bayne's military force
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryService ?militaryForce1 .
  
  # 30th (Cambridgeshire) Regiment of Foot's military conflict
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedIn ?militaryConflict .
  
  # Robert Calder's military force
  dbr:Robert_Calder dbo:militaryService ?militaryForce2 .

  # Ensure the military conflicts are related to the forces
  ?militaryConflict dbo:hasParticipant ?militaryForce1 .
  ?militaryConflict dbo:hasParticipant ?militaryForce2 .
}
```",6,12,7,2,3,3,3,71,0,0,1,0,0.0,0
225,7,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  ?entity dbo:timeZone dbr:Japan_Standard_Time .
}
```",2,2,3,2,1,3,2,20,2080,175,6836,0.9223946784922394,0.23328847016599372,0.37239280279294606
140,4,train,"Give me the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?deathPlace WHERE {
  VALUES ?johnMcDermott { dbr:John_McDermott_(artist) }
  
  ?johnMcDermott dbo:deathPlace ?deathPlace .
  ?deathPlace rdf:type dbo:Settlement .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,12,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel and spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Wolfenbüttel> . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel
  ?parent a dbo:Duke ;
          foaf:name ""Ferdinand Albert II, Duke of Brunswick-Wolfenbüttel""@en .
  
  ?parent dbo:child ?child .

  OPTIONAL {
    # Find spouse of Duchess Luise of Brunswick-Wolfenbüttel
    dbr:Duchess_Luise_of_Brunswick-Wolfenbüttel dbo:spouse ?luisesSpouse .
    
    # Find the spouse of that spouse (which could be a sibling or another relation)
    ?luisesSpouse dbo:spouse ?siblingOrRelation .

    # Check if this sibling or relation is the same as the child
    FILTER(?child = ?siblingOrRelation)
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
23,1,train,Give me the entity in Colombia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Colombia .
}
```",1,1,2,1,1,2,3,28,2141,0,0,1.0,1.0,1.0
386,22,train,Give me the war of the awardee of 25 and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entity WHERE {
  # Find Elena Žalinkevičaitė-Petrauskienė's birthplace
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlace .

  # Find the entity in her birthplace
  ?entity dbo:location ?birthPlace .

  # Find the war related to the Nobel Peace Prize awarded in 1925
  dbr:Nobel_Prize_in_Peace_1925 dbo:awardFor ?war .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
633,7,train,"Give me the spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine dbo:parent ?parent .

  # Step 2: Find parents and check for royalty or nobility
  ?parent a ?parentType .
  
  FILTER (
    ?parentType = dbo:Monarch OR 
    ?parentType = dbo:Noble OR 
    ?parentType = dbo:RoyalFamilyMember
  )

  # Step 3: Get the spouse of that parent
  ?parent dbo:spouse ?spouse .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,18,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and spouse of Janusz Kamiński.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Audrey_Hepburn .
  
  ?director dbo:spouse dbr:Janusz_Kamiński .
  ?movie dbo:director ?director .

  ?movie dbo:starring ?actor .
}
```

This query does the following:
- Selects movies that are of type `Film` and feature Audrey Hepburn.
- Identifies directors whose spouse is Janusz Kamiński.
- Retrieves actors from those films.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
23,5,train,Who is the father of Sofía Petro?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?s dbp:mother ?sofia .
  ?sofia a dbo:SofiaPetro ;
         dbp:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,14,train,Give me the child of the father of Cecilia Renata of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?ceciliaRenata a dbo:Person ;
                 foaf:name ""Cecilia Renata of Austria""@en .
  
  ?ceciliaRenata dbo:father ?father .

  ?father dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
159,31,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find George Ducas and his role in a military force or conflict
  ?ducas a dbo:MilitaryPerson ;
         foaf:name ""George Ducas"" ;
         dbo:commanderOf ?force .

  # Identify the successor who is also a politician and office holder
  ?successor dbo:succeededBy ?ducas ;
             a dbo:Politician, dbo:OfficeHolder ;
             dbo:commanderOf ?force .

  # Ensure the force or conflict involves Michał Kazimierz Pac
  ?force dbo:participatedIn ?conflict .
  ?pacz a dbo:MilitaryPerson ;
        foaf:name ""Michał Kazimierz Pac"" ;
        dbo:participatedIn ?conflict .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
19,4,train,Give me the professional in  and spouse of Carrie Johnson.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carrie Johnson""@en .
  
  OPTIONAL { ?person dbo:occupation ?profession . }
  OPTIONAL { ?person dbp:spouse ?spouse . }

  FILTER (lang(?profession) = 'en' || lang(?spouse) = 'en')
}
```",2,2,3,1,2,2,2,9,0,3,1,0.0,0.0,0
347,56,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of Eleonore of Austria, Queen of Poland and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Maria Anna of Bavaria and her child Eleonore
  dbr:Maria_Anna_of_Bavaria (dbo:spouse|dbo:child) ?eleonore .
  
  # Eleonore's father
  ?eleonore dbo:father ?father .

  # Father is a commander in the war
  ?father dbo:occupation dbr:Commander_in_the_War .

  # Child of this father who is royalty
  ?father (dbo:child) ?royalChild .
  
  # Check if this child is related to societal event, event, and television show with 2nd Dragoon Regiment
  ?royalChild dbo:societalEvent dbr:Second_Dragoon_Regiment_(France) ;
              dbo:event dbr:Second_Dragoon_Regiment_(France) ;
              dbo:televisionShow dbr:Second_Dragoon_Regiment_(France) .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
585,4,train,Give me the profession of Shirley Stoler.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  OPTIONAL { ?occupation rdfs:label ?profession . FILTER (lang(?profession) = ""en"") }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Shirley Stoler. You can find this by searching for her on DBpedia or using a SPARQL query to identify her unique identifier.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
943,0,train,Give me the child of Dawit I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?dawitI a dbo:Monarch ;
          dbp:name ""Dawit I""@en .
  
  ?dawitI dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
375,1,train,Give me the war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?person dbo:birthName ""Toyotomi Hidenaga""@en .
  ?person dbo:spouse ?spouse .
  ?spouse dbo:spouse ?otherSpouse .
  ?otherSpouse dbo:spouse ?relatedPerson .
  ?relatedPerson dbo:occupation ""warrior""@en ;
                 dbo:wikiPageRedirects ?redirect .
  ?redirect dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation rdfs:label ?warLabel .
  FILTER (CONTAINS(LCASE(?warLabel), ""war""))
}
```",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
249,5,train,"Give me the native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?nativeLanguage
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jamsetji Tata""@en .
  
  ?person dbo:worksFor ?organization .
  ?organization dbo:country dbr:India .

  ?work dbo:creator ?person ;
        dbo:nativeLanguage ?nativeLanguage .
}
```

This query assumes:
- Jamsetji Tata is linked to an organization in India.
- Works have a `dbo:creator` property linking them to their creator and a `dbo:nativeLanguage` property.",2,3,3,2,1,2,2,9,0,0,68,0,0.0,0
609,44,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
# Query to find the birthplace of Cece Bell, author of El Deafo
SELECT ?birthPlace WHERE {
  dbpedia:Cece_Bell dbo:birthPlace ?birthPlace .
}

UNION

# Query to find the birthplace of Glenn Youngkin, Governor of Virginia
SELECT ?birthPlace WHERE {
  dbpedia:Glenn_Youngkin dbo:birthPlace ?birthPlace .
}

UNION

# Query to find the birthplace of Vince Gilligan
SELECT ?birthPlace WHERE {
  dbpedia:Vince_Gilligan dbo:birthPlace ?birthPlace .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,15,train,Give me the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person dbo:name ""Kim Wilson""@en .
  ?person dbo:associatedBand ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
468,14,train,"Give me the child of the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify Martin of Aragon's parent
  dbpedia:Martin_of_Aragon dbo:parent ?parent .

  # Step 2: Find the father of that parent (grandfather)
  ?parent dbo:parent ?grandfather .
  
  # Ensure the grandfather is male (father)
  ?grandfather rdf:type dbo:Man .

  # Step 3: Determine the children who are royalty
  ?grandfather dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .
}
```",3,4,4,3,1,3,2,20,0,0,7,0,0.0,0
737,48,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor1 ?predecessor2 WHERE {
  # Archduchess Helena of Austria's spouse and their royal child
  ?spouse dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?child dbo:parent ?spouse ;
         a dbo:Monarch .

  # Predecessor of the royal child of Helena's spouse
  ?predecessor1 dbo:successor ?child .

  # Archduke Charles Louis of Austria's royal children and their royal grandchildren
  ?royalChild dbo:parent dbr:Archduke_Charles_Louis_of_Austria ;
              a dbo:Monarch .
  ?grandchild dbo:parent ?royalChild ;
              a dbo:Monarch .

  # Predecessor of the royal grandchild of Charles Louis's child
  ?predecessor2 dbo:successor ?grandchild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
668,31,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professionalRole ?associatedArtist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Pacely""@en .
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER(?birthName = ""Pacely"") .

  ?person dbo:profession ?professionalRole .
  ?person dbo:associatedBandOrMusicalArtist ?associatedArtist .
}
```

This query assumes that Pacely is listed as a musical artist in DBpedia and has a birth name entry. It retrieves the professional role and any associated musical artists.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
557,40,train,"Give me the producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerAStarIsBorn ?producerTomSawyer ?fictionalCharacter
WHERE {
  # Producer of A Star Is Born (1937)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerAStarIsBorn .
  
  # Producer of The Adventures of Tom Sawyer (1938)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Fictional character associated with Kent Allard
  dbr:Kent_Allard dbo:fictionalAlterEgo ?fictionalCharacter .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
80,37,train,"Give me the actor of the album of the work, that is a song and a musical work, of T.I. and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?song a dbo:Song ;
        dbo:artist dbr:T.I. ;
        dbo:album ?album .
  
  ?album dbo:performer ?actor .
}
```

This query does the following:
- Selects songs where T.I. is the artist.
- Finds albums associated with these songs.
- Retrieves performers (actors) of these albums.",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
668,7,train,"Who is the native, that is an artist, of Central Region, Ghana?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist ?name WHERE {
  ?artist a dbo:Artist .
  ?artist dbo:birthPlace dbr:Central_Region_(Ghana) .
  OPTIONAL { ?artist rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
706,15,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthplace ?smitaPatilBirthplace WHERE {
  # Find the birthplace of Ustad Bismillah Khan, a notable Sangeet Natak Akademi Fellowship awardee
  OPTIONAL { 
    dbr:Ustad_Bismillah_Khan dbo:birthPlace ?awardeeBirthplace .
  }
  
  # Find the birthplace of Smita Patil
  OPTIONAL {
    dbr:Smita_Patil dbo:birthPlace ?smitaPatilBirthplace .
  }
}
```",4,4,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
723,5,train,"Give me the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234567 wdt:P175 ?artist .
  FILTER EXISTS { ?artist wdt:P31 wd:Q43229 } # P31 is ""instance of"", Q43229 is the DBpedia class for organizations
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Cavalera Conspiracy. You can find this by searching for Cavalera Conspiracy on DBpedia or using a SPARQL query to retrieve its identifier.",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
756,0,train,Give me the manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  wd:Q1234568 wdt:P127 ?organization.
  ?organization wdt:P112 ?person.
  ?person rdfs:label ?managerLabel.
  FILTER (lang(?managerLabel) = ""en"")
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for VfL Bochum. You can find this by searching for VfL Bochum on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
270,3,train,"Give me the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Mark Tournier"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER (isLiteral(?birthPlace) && datatype(?birthPlace) = xsd:string)
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
905,45,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Charles Martel of Anjou's parent
  ?charlesMartel a dbr:Charles_Martel_of_Anjou ;
                 dbo:parent ?parent .

  # Stephen V of Hungary's predecessor and their child's child who is royalty
  ?stephenV a dbr:Stephen_V_of_Hungary ;
            dbo:predecessor ?predecessor .
  
  ?child1 dbo:childOf ?predecessor ;
          dbo:child ?child2 .

  ?child2 a dbo:RoyalPerson .

  # Spouse of Charles II of Naples
  ?charlesII a dbr:Charles_II_of_Naples ;
             dbo:spouse ?spouse .

  # Find the common entity
  FILTER (?parent = ?child2 && ?child2 = ?spouse)
  
  BIND(?child2 AS ?entity)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
943,61,train,"Give me the father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Baeda Maryam I and his child
  ?child dbo:parent dbr:Baeda_Maryam_I .
  
  # Father of the child
  ?father dbo:child ?child .
  
  # Check if father is royalty and an office holder
  ?father a dbo:Monarch ;
          dbo:officeHolderOf ?office .

  # Grandfather (father of the father)
  ?grandfather dbo:child ?father .

  # Reference to The Shadow as Lamont Cranston's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
375,20,train,Give me the war of Hashiba Hidekatsu and entity in Japan and war of the person born as Koichirō.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?person WHERE {
  # Hashiba Hidekatsu's participation in wars
  OPTIONAL {
    dbr:Hideyoshi_Tokugawa (dbo:participatedIn) ?war .
    BIND(dbr:Hideyoshi_Tokugawa AS ?person)
  }
  
  # Koichirō's involvement in wars
  OPTIONAL {
    ?koichiro dbo:birthName ""Koichirō"" ;
              dbo:participatedIn ?war .
    BIND(?koichiro AS ?person)
  }
}
```

This query does the following:
- Searches for wars that Hashiba Hidekatsu (known as Hideyoshi Tokugawa in DBpedia) participated in.
- Searches for a person with the birth name ""Koichirō"" and their participation in wars.

Please note that the exact resource identifiers might need adjustment based on the actual DBpedia entries available. If Koichirō refers to a specific historical figure, you may need to replace `?koichiro` with the correct DBpedia resource identifier.",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
23,8,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Roy Leonardo Barreras Montealegre""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```

This query does the following:
- Uses `dbo:Politician` to ensure we are querying about politicians.
- Searches for an individual with the name ""Roy Leonardo Barreras Montealegre"".
- Attempts to retrieve the political party associated with this person using the property `dbo:politicalParty`.",2,3,3,2,1,2,3,28,0,0,5,0,0.0,0
412,10,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceEntity WHERE {
  # Antonios Varthalitis resource
  dbr:Antonios_Varthalitis dbo:placeOfBirth ?birthPlace .
  
  # Get the death place of Antonios Varthalitis
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .

  # Ensure that the death place is a settlement
  ?deathPlaceEntity a dbo:Settlement ;
                   rdfs:label ?placeLabel ;
                   owl:sameAs ?deathPlace .
  
  FILTER (lang(?placeLabel) = 'en')
}
```",2,3,3,2,1,2,3,28,0,0,12,0,0.0,0
941,1,train,Give me the spouse of Prince Augustus William of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: In this query, `wd:Q123456` should be replaced with the actual DBpedia identifier for Prince Augustus William of Prussia. You can find this identifier by searching for him on DBpedia or using a SPARQL endpoint to look up his resource.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
668,60,train,"Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 WHERE {
  # Tupac Shakur's birth name and associated artist
  dbr:Tupac_Shakur dbo:birthName ?birthNameTupac .
  ?person1 dbo:birthName ?birthNameTupac .
  ?person1 dbo:associatedMusicalArtist ?artist1 .

  # Rocky Dawuni's birth name and associated artist
  dbr:Rocky_Dawuni dbo:birthName ?birthNameRocky .
  ?person2 dbo:birthName ?birthNameRocky .
  ?person2 dbo:associatedMusicalArtist ?artist2 .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
595,37,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in Third Taiwan Strait Crisis.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/property/author> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Identify the person who is a politician and office holder from Chappaqua, New York
  ?person dbo:residence dbr:Chappaqua,_New_York ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolderOf dbr:United_States_Secretary_of_State .

  # Identify the person who was a commander during the Third Taiwan Strait Crisis
  ?person dbo:commanderDuring dbr:Third_Taiwan_Strait_Crisis .

  # Ensure it's the same person
  FILTER (?person = ?politician)

  # Find works authored by this person
  ?work dbo:author ?author .
  ?work a dbo:Book ;
        a dbo:WrittenWork ;
        a dbo:CreativeWork .

  # Link the work to the identified person
  ?work dbo:creator ?politician .

}
```",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
756,45,train,"Give me the manager of VfL Bochum and native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?manager a dbo:SoccerManager ;
           dbo:nationality dbr:West_Germany ;
           dbo:birthDate ""1968-08-26""^^xsd:date .
  
  ?team dbo:currentManager ?manager ;
        a dbo:SoccerClub ;
        rdfs:label ""VfL Bochum""@en .

}
```

This query does the following:
- Selects individuals who are of type `SoccerManager`.
- Filters those with nationality as West Germany.
- Ensures they have a birth date of August 26, 1968.
- Checks if they manage a team labeled ""VfL Bochum"".",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,38,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?award dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?person dbo:birthName ""Robert Shaw""@en .
  ?person dbo:nativePlace ?nativePlace .
  ?nativePlace a dbo:Region ;
               a dbo:American ;
               a dbo:State ;
               a dbo:Settlement .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
392,7,train,Give me the reference to  and member of the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v2 <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference ?member WHERE {
  VALUES ?group { dbr:The_Blue_Rider }
  
  ?group dbo:wikiPageRedirects ?reference .
  ?group dbo:member ?member .
}
```

This query does the following:
- It uses `PREFIX` to define common namespaces for DBpedia.
- The `SELECT` statement specifies that we want to retrieve the reference (`?reference`) and members (`?member`) of ""The Blue Rider"".
- The `VALUES` clause restricts the group to ""The Blue Rider"" using its DBpedia resource identifier.
- It queries for any redirects associated with ""The Blue Rider"" under `dbo:wikiPageRedirects`.
- It also retrieves all members of the group using `dbo:member`.",3,3,4,2,2,2,2,9,0,0,6,0,0.0,0
628,47,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Identify Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .

  # Step 2: Find a band member of that artist who is also a native of Florida and has a birth name
  ?bandMember dbo:memberOfBand ?artist ;
              dbo:nativePlace dbr:Florida ;
              dbp:birthName ?birthName .
  
  # Ensure the person found is a musical artist
  ?bandMember rdf:type dbo:MusicalArtist .

  # Return the person with their birth name
  BIND(?bandMember AS ?person)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
103,21,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find a TV show that Richard E. Grant acted in
  ?tvShow dbo:starring dbr:Richard_E._Grant .
  
  # Ensure the TV show is categorized as a television series
  ?tvShow rdf:type dbo:TelevisionSeries .

  # Get all actors involved in this TV show
  ?tvShow dbo:starring ?actor .
  
  FILTER(?actor != dbr:Richard_E._Grant) # Exclude Richard E. Grant himself from the results
}
```",3,4,4,2,2,3,3,71,0,0,13,0,0.0,0
943,30,train,"Give me the child of Dawit I and reference to  and father of the father, that is a royalty and an office holder, of Na'od.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?grandfather WHERE {
  # Dawit I's child
  ?dawitI a dbo:Monarch ;
          foaf:name ""Dawit I""@en .
  
  ?dawitI dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # Na'od's father and grandfather
  ?na'od a dbo:Monarch ;
         foaf:name ""Na'od""@en .
  
  ?na'od dbo:father ?father .
  ?father dbo:father ?grandfather .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather a dbo:Monarch ;
               dbo:officeHolder true .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
80,40,train,Give me the professional in  and actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the author of ""Smartbomb""
  ?author dbo:book dbr:Smartbomb .
  
  # Find an actor from ""ATL""
  ?atlActor dbo:film dbr:ATL .

  # Find a movie that features both
  ?movie dbo:starring ?author ;
         dbo:starring ?atlActor .

  # Get the professional role of this person in the movie
  ?professional dbo:profession ?role .
  
  FILTER(?role IN (dbo:Actor, dbo:Director)) # Assuming we're interested in actors or directors
}
```",5,5,6,3,3,3,3,71,0,0,4,0,0.0,0
943,59,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the commander in Siege of Mukha who is royalty
  ?commander dbo:wikiPageRedirects dbr:Siege_of_Mukha .
  ?commander a dbo:RoyalPerson .

  # Identify the parent of this commander who is also royalty
  ?parent dbo:child ?commander .
  ?parent a dbo:RoyalPerson .

  # Find the alter ego of Lamont Cranston
  dbr:Lamont_Cranston dbo:alterEgo ?alterEgo .

  # Ensure the child of the parent matches the alter ego
  ?parent dbo:child ?child .
  FILTER (?child = ?alterEgo)
}
```",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
353,55,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v5 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Alfonso VI's child
  ?alfonso_vi_child dbo:child dbr:Alfonso_VI_of_León_and_Castile .
  
  # Grandchild of Alfonso VI
  ?grandchild dbo:parent ?alfonso_vi_child .

  # William I of Sicily's royal child
  ?william_i_child dbo:royalty dbr:William_I_of_Sicily ;
                   dbo:parent ?person .

  # Roger III's parent
  ?roger_iii_parent dbo:parent dbr:Roger_III,_Duke_of_Apulia .
  
  # Intersection of the conditions
  FILTER (?grandchild = ?william_i_child && ?person = ?roger_iii_parent)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
78,15,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find members of The Alan Parsons Project
  ?member dbo:musicalBand dbr:The_Alan_Parsons_Project .
  
  # Check if Stuart McBeath Tosh is a musical artist
  OPTIONAL { 
    dbr:Stuart_McBeath_Tosh dbo:occupation dbr:Musical_artist .
    
    # Find associated artists of Stuart McBeath Tosh
    ?associatedArtist dbo:collaboratedWith dbr:Stuart_McBeath_Tosh .
  }
  
  # Return the band member and any associated artist
  BIND(?member AS ?bandMember)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
151,7,train,Give me the entity in the birthplace of Burhan Belge and reference to Order of the Medjidie.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?reference
WHERE {
  # Find Burhan Belge's birthplace
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace .

  # Find entities related to the birthplace
  ?entity a dbo:Place ;
          rdfs:label ?label .
  
  FILTER (CONTAINS(LCASE(?label), LCASE(str(?birthPlace)))).

  OPTIONAL {
    # Check for references to Order of the Medjidie
    ?reference dbo:award ?order .
    ?order rdfs:label ""Order of the Medjidie""@en .
    ?entity dbo:wikiPageRedirects ?reference .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
353,42,train,"Give me the father of William II of Sicily and child of the child of Alfonso VI of León and Castile and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # William II of Sicily's father
  ?william2 dbo:father ?father .
  FILTER(STR(?william2) = ""William_II_of_Sicily"")

  # Alfonso VI's grandchild
  ?alfonso6 dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  FILTER(STR(?alfonso6) = ""Alfonso_VI_of_León_and_Castile"")

  # Roger III's parent
  ?roger3 dbo:parent ?parent .
  FILTER(STR(?roger3) = ""Roger_III,_Duke_of_Apulia"")

  # The person must satisfy all conditions
  VALUES ?person { ?father ?grandchild }
  FILTER(?person = ?parent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
609,35,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:C._E._Bell
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
ORDER BY ?person",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
68,22,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  ?dorothea a dbo:Person ;
           foaf:name ""Dorothea of Denmark"" ;
           dbp:spouse ?parent .

  # Parent of Dorothea (likely her father)
  ?parent a dbo:Person ;
          foaf:name ?parentName ;
          dbp:father ?grandfather .

  # Ensure the grandfather is royalty
  ?grandfather a dbo:Monarch .
}
```

This query assumes:
- `?dorothea` represents Dorothea of Denmark.
- `?parent` is her father, and `?grandfather` is his father (Dorothea's grandfather).
- The grandfather must be a monarch (`dbo:Monarch`).",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
782,12,train,Give me the associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurranArtist ?kimWilsonBand
WHERE {
  ?nickCurran a dbo:Musician ;
              foaf:name ""Nick Curran""@en .
  ?nickCurran dbo:associatedBand ?nickCurranArtist .

  ?kimWilson a dbo:Musician ;
             foaf:name ""Kim Wilson""@en .
  ?kimWilson dbo:band ?kimWilsonBand .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
414,11,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of Max Born.",SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/presenter> ?v2 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?show WHERE {
  # Max Born as a Nobel Prize in Physics laureate
  dbr:Max_Born dbo:nobelPrizeInPhysicsYear ?year .
  
  # Educational institutions related to Max Born
  OPTIONAL { 
    ?institution dbo:alumni dbr:Max_Born .
    ?institution dbo:location ?location .
    
    # Shows hosted by the institution
    ?show dbo:hostedBy ?institution ;
          a dbo:TVSeries .
  }
  
  FILTER EXISTS {
    ?show dbp:title ?title .
  }
}
```

This query does the following:
- Identifies Max Born as a Nobel Prize in Physics laureate.
- Finds educational institutions related to Max Born (e.g., where he studied or worked).
- Looks for shows hosted by these institutions.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
263,4,train,Give me the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""hon. mary frances bowes-lyon"")) .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
ORDER BY ?name
LIMIT 10",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
871,36,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of Victor Stanley (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  ?child dbo:parent ?alumnus ;
         a dbo:Politician ;
         dbo:child ?victorStanley .
  ?victorStanley foaf:name ""Victor Stanley""@en ;
                 dbo:occupation dbr:Royal_Navy_officer .
  ?politician dbo:father ?father .
  FILTER (?child = ?politician)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
782,14,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify Nicki Minaj by her birth name Nicholas Michael Curran
  dbr:Nicki_Minaj dbo:birthName ""Nicholas Michael Curran"" .
  
  # Find associated musical artists
  dbr:Nicki_Minaj dbo:associatedMusicalArtist ?artist .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
398,16,train,Give me the figure known as the nickname of Russia national football team and player in the writer of The First Glove.,SELECT ?result WHERE { <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    {
        SELECT ?nickname WHERE {
            dbr:Russia_national_football_team dbo:nickname ?nickname .
        }
    }
    ?team dbo:nickname ?nickname .
    ?team dbo:member ?player .
    ?player rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""the first glove""))
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
203,11,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the regiment
  VALUES ?regiment { dbr:30th_(Cambridgeshire)_Regiment_of_Foot }

  # Find wars involving this regiment
  ?war dbo:participatingUnit ?regiment .

  # Find commanders of these wars
  ?war dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,113,0,0.0,0
19,5,train,Give me the professional in the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?profession 
WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""John Boxer"" .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,2,1,2,2,9,0,0,39640,0,0.0,0
769,3,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Athlete ;
          dbo:sport dbp:Soccer ;
          dbo:birthDate ""1981-12-01""^^xsd:date ;
          (dbo:occupation dbr:Soccer_Manager OR dbo:occupation dbr:Sports_Manager) .
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
782,53,train,"Give me the band of Kim Wilson and reference to the real name of the band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?realName ?associatedArtist WHERE {
  # Find Kim Wilson's band
  ?person rdfs:label ""Kim Wilson""@en .
  ?person dbo:musicGroup ?band .

  OPTIONAL {
    ?band rdfs:label ?realName .
  }

  # Find associated musical artist for Nicholas Michael Curran
  ?curranPerson rdfs:label ""Nicholas Michael Curran""@en .
  ?curranPerson dbo:associatedMusicalArtist ?associatedArtist .
}
```

This query does the following:
- Retrieves the band associated with Kim Wilson.
- Optionally retrieves any real name or alias for that band.
- Finds an associated musical artist linked to Nicholas Michael Curran.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
585,11,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Linda Miller (actress)
  ?lindaMiller a dbo:Actor ;
              foaf:name ""Linda Miller"" ;
              dbo:spouse ?partner .

  # Her child
  ?partner dbo:child ?child .
  
  # The child is American and a settlement
  ?child dbo:nationality dbr:United_States ;
         a dbo:Settlement .

  # Coro de la Pontificia Universidad Católica de Puerto Rico related award
  OPTIONAL {
    ?award dbo:recipient ?child .
    ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico ;
          dbo:award ?award .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
119,2,train,Give me the tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?city dbo:mayor ?mayor .
  FILTER (str(?city) = ""http://dbpedia.org/resource/Santiago_de_Compostela"")
}
```",1,1,2,1,1,3,3,71,0,0,27,0,0.0,0
361,7,train,Give me the actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  ?movie dcterms:title ""Rustlers' Rhapsody""@en .
  ?movie dbo:starring ?actor .
  ?actor rdf:type dbo:Actor .
}
```",2,2,3,1,2,2,3,28,0,0,4,0,0.0,0
782,4,train,Give me the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?realName WHERE {
  ?band dbr:subject/foaf:name ""The Fabulous Thunderbirds""@en.
  ?band dbo:member ?member.
  ?member foaf:name ?realName.
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
39,15,train,Give me the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerName ?professionLabel WHERE {
  # Find the entity for Coke Studio Philippines
  dbr:Coke_Studio_Philippines dbo:producer ?producer .

  # Get the name of the producer
  ?producer rdfs:label ?producerName .
  
  # Get the profession of the producer
  OPTIONAL { ?producer dbo:occupation ?profession . }
  OPTIONAL { ?profession rdfs:label ?professionLabel . FILTER (lang(?professionLabel) = 'en') }

  # Filter to ensure we get human producers
  ?producer a dbo:Person .
}
```",2,2,3,2,1,3,3,71,0,4,12,0.0,0.0,0
531,61,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?conflictName ?leaderOffice ?partyName
WHERE {
  # Find Manuel Pinto da Costa's role as a commander in a military conflict
  dbr:Manuel_Pinto_da_Costa dbo:office ?commanderOffice .
  ?commanderOffice dbo:partOf ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .

  # Find Miguel Maura's leadership position within a political party
  dbr:Miguel_Maura dbo:office ?leaderOffice .
  ?leaderOffice dbo:party ?party .
  ?party rdf:type dbo:PoliticalParty .
  
  BIND(?conflict AS ?conflictName)
  BIND(?party AS ?partyName)
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
816,49,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 2: Find the child of the spouse
  ?child dbo:parent ?spouse .
  
  # Step 3: Ensure Herschel Bernardi is in a work with this parent (the spouse)
  ?work dbo:starringHerschelBernardi true ;
        dbo:starring ?spouse .

  # Step 4: Find actors of the movie
  ?work dbo:starring ?actor .
}
```

This query assumes that:
- `dbo:spouse` is used to find spouses.
- `dbo:parent` and `dbo:child` are used for parent-child relationships.
- `dbo:starringHerschelBernardi` is a hypothetical property indicating Herschel Bernardi's involvement in the work. You might need to adjust this based on actual DBpedia properties.
- `dbo:starring` is used to find actors involved in the work.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
756,42,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?team WHERE {
  # Find VfL Bochum's manager in the 2007-08 season
  ?bochumSeason dbo:season ""2007–08"" ;
                dbo:club dbr:VfL_Bochum ;
                dbo:manager ?manager .
  
  # Ensure the manager is a sports club, organization, and soccer club
  ?manager rdf:type dbo:SportsClub ;
           rdf:type dbo:Organization ;
           rdf:type dbo:FootballClub .

  # Find Thomas Letsch's managerial role
  ?letschSeason dbo:season ?year ;
                dbo:club ?team ;
                dbo:manager dbr:Thomas_Letsch .
  
  # Ensure the team is a soccer club, sports season, and sports team season
  ?team rdf:type dbo:FootballClub ;
        rdf:type dbo:SportsSeason ;
        rdf:type dbo:SportsTeamSeason .

  # Filter managers who are native to West Germany
  ?manager dbp:nationality dbr:West_Germany .
}
```",5,11,6,2,3,3,3,71,0,0,1,0,0.0,0
737,8,train,"Give me the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person dbo:parent dbr:Archduke_Charles_Louis_of_Austria .
  ?person dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
737,55,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
    # Step 1: Find child of Philipp Albrecht, Duke of Württemberg
    ?philippAlbrecht dbo:child ?child1 .
    FILTER(STRSTARTS(LCASE(?philippAlbrecht), ""philipp albrecht duke of württemberg""))

    # Step 2: Find child of the child of Duke Philipp of Württemberg
    ?dukePhilipp dbo:child ?grandChild1 .
    ?grandChild1 dbo:child ?child2 .
    FILTER(STRSTARTS(LCASE(?dukePhilipp), ""duke philipp of württemberg""))

    # Step 3: Find child of the child of Archduke Charles Louis of Austria who is royalty
    ?archdukeCharlesLouis dbo:child ?grandChild2 .
    ?grandChild2 dbo:child ?royalty .
    FILTER(STRSTARTS(LCASE(?archdukeCharlesLouis), ""archduke charles louis of austria""))
    
    # Assuming the child from step 1 is the same as the royalty identified in step 3
    FILTER(?child1 = ?royalty)

    # Find predecessor (parent) of the individual found in step 1
    ?predecessor dbo:child ?child1 .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
492,3,train,Give me the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film dcterms:title ""The Sky Ranger""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1928)
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
361,15,train,Give me the actor of Rustlers' Rhapsody and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Frédéric Bouraly and his profession
  ?frédéricBouraly a dbo:Person ;
                  foaf:name ""Frédéric Bouraly""@en ;
                  dbo:profession ?profession .

  # Find the actor of Rustlers' Rhapsody with the same profession
  ?rustlersRhapsody dbo:actor ?actor .
  ?rustlersRhapsody dbp:title ""Rustlers' Rhapsody""@en .
  
  ?actor a dbo:Person ;
         dbo:profession ?sameProfession .

  # Ensure the professions match
  FILTER(?profession = ?sameProfession)
}
```",3,3,4,2,2,2,3,28,0,0,4,0,0.0,0
816,13,train,Give me the parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parentClass WHERE {
  ?class rdfs:subClassOf* dbo:Photographer .
  FILTER(?class != dbo:Photographer)
  ?class rdfs:subClassOf+ ?parentClass .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
628,5,train,"Give me the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
SELECT ?native WHERE {
  ?person dbo:birthPlace dbr:Florida .
  ?person dbo:occupation dbr:Musical_artist .
  ?person foaf:nativeName ?native .
}
```",1,2,2,1,1,3,3,71,0,0,97,0,0.0,0
159,51,train,"Give me the reference to the writer of Always the Love Songs and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander WHERE {
  # Find the writer of ""Always the Love Songs""
  ?tvshow dbo:creator ?writer .
  ?tvshow rdfs:label ""Always the Love Songs""@en .

  # Find the commander in the Battle of Vienna
  ?battle dbo:commander ?commander .
  ?battle rdfs:label ""Battle of Vienna (1683)""@en .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
513,8,train,Give me the residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?leaderName ?residence WHERE {
  ?party dbo:leader ?person .
  ?party rdfs:label ""Ulster Unionist Party""@en .
  
  OPTIONAL { 
    ?person foaf:based_near ?residence .
  }
  
  SERVICE <http://dbpedia.org/sparql> {
    ?person rdfs:label ?leaderName .
    FILTER(LANG(?leaderName) = 'en')
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
347,59,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of the parent of Archduke Charles Joseph of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Identify the Algerian War military force and its commander
  ?algerianWar dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .

  # Step 2: Ensure the commander is associated with a societal event and a television show
  ?societalEvent dbo:relatedPerson ?commander .
  ?tvShow dbo:actor ?commander .

  # Step 3: Family connection to Archduke Charles Joseph of Austria
  ?archduke dbr:Charles_Joseph,_Archduke_of_Austria-|Tuscany> dbo:parent ?parent .
  ?child dbo:parent ?parent .
  ?child dbo:father ?commander .

}
```

This query attempts to find a commander involved in the Algerian War who is linked to both a societal event and a television show, and has a familial connection through Archduke Charles Joseph of Austria.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
39,36,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in Singer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Bob Thompson"" ;
          dbo:birthName ?birthName .
  
  OPTIONAL { ?person dbo:profession dbr:Singer . }
  
  OPTIONAL { ?person dbo:associatedBand ?band . }

  FILTER EXISTS { ?person dbo:birthName ?birthName } # Ensure birth name is present
}
```

This query does the following:
- Selects individuals who are a `MusicalArtist` and have the name ""Bob Thompson.""
- Checks if they have a profession of ""Singer.""
- Retrieves any associated band information.
- Ensures that the person has a recorded birth name.",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
943,38,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather ?alterEgo WHERE {
  # Step 1: Identify Na'od and his father
  ?naod a dbo:Person ;
        foaf:name ""Na'od""@en .
  
  ?naod dbo:parent ?father .

  # Step 2: Find the father of Na'od's father (grandfather)
  ?father dbo:parent ?grandfather .

  # Step 3: Ensure the grandfather is a royalty and an office holder
  ?grandfather dbo:occupation dbr:Monarch ;
               dbo:officeHolder true .

  # Step 4: Reference The Shadow's alter ego
  ?shadowAlterEgo a dbo:FictionalCharacter ;
                  foaf:name ""Lamont Cranston""@en .
  
  BIND(""Lamont Cranston"" AS ?alterEgo)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
203,5,train,Who is the reference to William Bayne?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?birthDate ?deathDate WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""William Bayne""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
  OPTIONAL { ?person dbo:deathDate ?deathDate . }
  SERVICE <http://dbpedia.org/sparql> {
    ?person rdfs:label ?name FILTER (lang(?name) = 'en')
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
361,23,train,"Give me the professional in the profession of Frédéric Bouraly and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:profession ?profession .
  
  # Identify works related to ""Lasso the Moon""
  OPTIONAL { 
    ?work foaf:name ""Lasso the Moon""@en .
    ?work a dbo:Film ; dbo:actor ?actor .
  }
  
  # Ensure the work is both a film and a work
  FILTER EXISTS {
    ?work a dbo:Film .
  }

  # Check if the actor has the same profession as Frédéric Bouraly
  ?actor dbo:profession ?sameProfession .
  FILTER (?sameProfession = ?profession)
}
```",4,6,5,2,2,2,3,28,0,0,4,0,0.0,0
58,4,train,Give me the award of Ian Gregson (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  wd:Q1234567 dbo:award ?award .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Ian Gregson. You can find this by searching for Ian Gregson on DBpedia or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
295,11,train,"Give me the native of Birmingham and writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCity ?workTitle WHERE {
  # Find Apache Indian's resource
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Apache Indian"" .

  # Identify musical works by Apache Indian
  ?work dbo:creator ?artist ;
        a dbo:MusicAlbum ; # Assuming the work is an album, adjust if it's a song or other type

  # Check for native city of Birmingham
  OPTIONAL { ?artist dbp:nativePlace dbr:Birmingham . }

  # Get the title of the musical work
  ?work rdfs:label ?workTitle .

  FILTER (lang(?workTitle) = 'en')
}
```

This query does the following:
- Identifies Apache Indian as a `MusicalArtist`.
- Finds works created by him that are classified under `dbo:MusicAlbum` or similar.
- Checks if there is any information about his native place being Birmingham.
- Retrieves the title of these musical works.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
557,23,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo ?profession WHERE {
  ?character rdfs:label ""Kent Allard""@en .
  ?character dbo:alias ?alterEgo .
  ?alterEgo a dbo:FictionalCharacter .
  ?alterEgo dbo:profession ?profession .
}
```

This query does the following:
- It selects entities labeled as ""Kent Allard"" in English.
- It looks for aliases of this character, assuming they are fictional characters (`dbo:FictionalCharacter`).
- It retrieves the profession associated with these alter egos.

Note: The exact properties and classes might vary depending on how DBpedia represents specific data. Adjustments may be necessary if ""Kent Allard"" or his alter ego is not directly available in DBpedia.",3,4,4,3,1,3,3,71,0,0,39640,0,0.0,0
103,7,train,"Give me the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?series WHERE {
  ?character dbo:wikiPageRedirects dbr:The_Shadow_(comics) .
  ?character dbo:videoGame dbr:The_Shadow_(video_game) .
  ?character dbo:partOfSeries ?series .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
468,9,train,"Give me the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Alfonso IV of Aragon resource
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse .
  
  # Find children of Alfonso IV
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Alfonso_IV_of_Aragon .

  # Ensure the child is royalty
  ?child a dbo:Monarch ;
         rdfs:label ?childName .
  
  FILTER (lang(?childName) = 'en')
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
80,46,train,Give me the actor of the album of What You Know (T.I. song) and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?albumArtist ?movieActor WHERE {
  # Find the album of ""What You Know"" by T.I.
  ?song dbo:title ""What You Know (T.I. song)""@en .
  ?song dbo:artist dbr:T.I._(rapper) .
  ?song dbo:fromAlbum ?album .

  # Get artists involved in that album
  ?album dbo:artist ?albumArtist .

  # Find the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en ;
        dbo:author ?author .

  # Find a movie where this author acted
  ?movie dbo:starring ?author .
  
  # Get actors involved in that movie
  ?movie dbo:starring ?movieActor .
}
```",5,5,6,3,2,3,3,71,0,0,10,0,0.0,0
353,32,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
    # Step 1: Identify William I of Sicily and his royal children
    ?child dbo:parent dbr:William_I_of_Sicily .
    ?child a dbo:Monarch .

    # Step 2: Identify Roger III, Duke of Apulia and his parent(s)
    ?rogerParent dbo:child dbr:Roger_III,_Duke_of_Apulia .

    # Step 3: Find the father of the royal child
    ?father dbo:spouse ?mother .
    ?mother dbo:parent ?rogerParent .
    ?child dbo:parent ?father .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
941,8,train,Give me the spouse of the spouse of Duchess Luise of Brunswick-Wolfenbüttel.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Duchess_Luise_of_Brunswick-Wolfenbüttel> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseOfSpouse WHERE {
  # Step 1: Find Duchess Luise of Brunswick-Wolfenbüttel's spouse
  ?luise a dbo:Duchess ;
        foaf:name ""Luise of Brunswick-Wolfenbüttel"" .
  
  ?luise dbo:spouse ?firstSpouse .

  # Step 2: Find the spouse of that person
  ?firstSpouse dbo:spouse ?spouseOfSpouse .
}
```

This query assumes that Duchess Luise of Brunswick-Wolfenbüttel is represented in DBpedia with a specific resource and name. The `foaf:name` property is used to identify her, and the `dbo:spouse` property is used to find spouses.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
103,46,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Shatrughan Sinha's profession and works
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor .
  
  # Find movies or TV shows he acted in
  ?work dbo:actor dbr:Shatrughan_Sinha .

  # John Matshikiza (Richard Grant Esterhuysen) and his works
  dbr:John_Matshikiza dbo:birthName ""Richard Grant Esterhuysen""@en .
  
  # Find movies or TV shows he acted in
  ?work dbo:actor dbr:John_Matshikiza .

  # Find the professional who acted in both works
  ?professional dbo:profession dbr:Actor .
  ?professional dbo:actor ?work .
}
```",5,6,6,3,2,3,3,71,0,0,28,0,0.0,0
39,8,train,"Who is the person born, that is a musical artist, as Robert Lamar Thompson?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  OPTIONAL { ?person foaf:givenName ""Robert"" . }
  OPTIONAL { ?person foaf:familyName ""Thompson"" . }
  OPTIONAL { ?person dbo:birthName ?birthName .
             FILTER(CONTAINS(LCASE(?birthName), LCASE(""Robert Lamar Thompson"")))
           }
}
```

This query does the following:
- Selects individuals who are classified as `dbo:MusicalArtist`.
- Optionally matches those with a given name ""Robert"" and family name ""Thompson"".
- Additionally, checks if there is a `dbo:birthName` property that contains ""Robert Lamar Thompson"", using case-insensitive matching.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
203,9,train,Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?militaryForce ?commander
WHERE {
  # Battle of Fort Royal
  VALUES ?battle { 
    dbr:Battle_of_Fort_Royal_(1778) 
  }
  
  OPTIONAL {
    ?battle dbo:militaryUnit ?militaryForce .
  }

  # French campaign in Egypt and Syria
  VALUES ?campaign { 
    dbr:French_campaign_in_Egypt_and_Syria 
  }
  
  OPTIONAL {
    ?campaign dbo:commander ?commander .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
816,43,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:starring ?actor .
  
  FILTER (str(?movie) = str(dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg))
  
  # Check if this actor is a parent of Eugène Cattin
  ?actor dbo:child dbr:Eugène_Cattin .

  # Check if this actor is also a parent of Doon Arbus
  ?actor dbo:child dbr:Doon_Arbus .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
159,15,train,"Give me the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Michał Kazimierz Pac as a person
  dbr:Mikołaj_Kazimierz_Pas_(general) dbo:spouse ?person .
  
  # Find the military conflict (event)
  ?militaryConflict dbo:participant ?person ;
                   a dbo:MilitaryConflict .

  # Check if he was a commander in that event
  ?commanderRole dbo:agent ?person ;
                 a dbo:CommanderRole ;
                 dbo:participatedIn ?militaryConflict .
  
  # Verify if the person is also a politician and office holder
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
905,49,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalDescendant WHERE {
  # Find Ladislaus IV of Hungary (predecessor)
  ?ladislaus dbo:successor dbr:Stephen_V_of_Hungary .
  
  # Find Charles II of Naples (father of Philip I, Prince of Taranto)
  ?charles dbo:child dbr:Philip_I,_Prince_of_Taranto .
  
  # Find Maria of Hungary (spouse of Charles II)
  ?maria dbo:spouse ?charles .
  
  # Ensure Maria is a child of Ladislaus IV
  ?ladislaus dbo:child ?maria .
  
  # Find a royal descendant of Maria
  ?mariaChild dbo:parent ?maria ;
              a dbo:Monarch .
  
  # Find the child of that royal descendant who is also royalty
  ?royalDescendant dbo:parent ?mariaChild ;
                   a dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
472,7,train,Give me the territory administered from Copenhagen and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  # Olaf I of Denmark
  VALUES ?olafI { dbr:Olaf_I_of_Denmark }

  # Territories administered from Copenhagen during his reign
  ?territory dbo:capital dbr:Copenhagen .
  ?territory dbo:ruledBy ?olafI .

  FILTER (?olafI dbo:reignStartYear >= ""1095""^^xsd:gYear && 
          ?olafI dbo:reignEndYear <= ""1103""^^xsd:gYear)
}
```

This query assumes that DBpedia has structured data about Olaf I's reign and the territories he administered, with Copenhagen as their capital. The `FILTER` clause ensures we only consider his reign period.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
119,12,train,Give me the tenant of Spain and tenant of Santiago de Compostela.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?monarch WHERE {
  VALUES ?country { 
    dbr:Spain 
    dbr:Santiago_de_Compostela 
  }
  
  OPTIONAL {
    ?country dbo:monarch ?monarch .
  }
}
```

This query does the following:
- Defines prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- Selects the country/resource and its monarch.
- Uses `VALUES` to specify Spain and Santiago de Compostela as the subjects of interest.
- Utilizes an `OPTIONAL` clause to account for cases where a monarch might not be explicitly listed.",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
386,10,train,Give me the war of the awardee of 25.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?laureate ?war
WHERE {
    ?laureate dbo:awardYear ""1925"" .
    ?laureate dbo:nobelPrizeCategory ?category .
    
    OPTIONAL { 
        ?laureate dbo:birthPlace ?place .
        ?place dbo:participatedInWar ?war .
    }
}
```

This query selects Nobel Prize laureates from 1925 and checks if they have any association with wars through their birthplace.",2,2,3,2,1,2,3,28,0,0,182,0,0.0,0
89,51,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Saw Min Phyu's spouse
  ?spouse a dbo:Spouse; 
          dbo:spouse dbr:Saw_Min_Phyu.
  
  # Child of Saw Min Phyu's spouse
  ?child dbo:parent ?spouse;
         a dbo:Royalty.

  # Predecessor of that child (if royalty)
  ?predecessor dbo:successor ?child.

  # Myat Hpone Pyo's father
  ?father dbo:child dbr:Myat_Hpone_Pyo.
  
  # Spouse of Myat Hpone Pyo's father (if royalty)
  ?spouseFather a dbo:Spouse; 
                dbo:spouse ?father;
                a dbo:Royalty.

  FILTER(?predecessor != ?spouseFather) # Ensure they are distinct
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
347,40,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?queen dbo:spouse ?husband .
  ?queen rdfs:label ""Eleonore of Austria""@en .
  ?queen dbo:parent ?father .
  ?father rdfs:label ?fatherLabel .

  OPTIONAL { 
    ?event dbo:relatedEvent ?algerianWar .
    ?tvShow dbo:genre dbr:Military_television_series .
    FILTER(CONTAINS(LCASE(?event), ""algerian war"") && CONTAINS(LCASE(?tvShow), ""military""))
  }
  
  FILTER(?fatherLabel = ""Ferdinand II, Holy Roman Emperor""@en)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
668,43,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology and associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the writer of ""The Live Anthology""
  ?anthology dbo:author ?writer .
  FILTER (str(?anthology) = ""The_Live_Anthology"")

  # Find the musical artist associated with $pacely
  ?pacely dbo:associatedMusicalArtist ?artist .

  # Identify Darryl Paa Kwesi Bannerman-Martin
  ?person foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  FILTER (str(?person) = ""Darryl_Paa_Kwesi_Bannerman-Martin"")

  # Ensure the professional is both a writer and a musical artist
  VALUES ?professional { ?writer ?artist }

  # Link all these entities to find the common professional
  OPTIONAL { ?professional dbo:birthName ?person }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
89,54,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Step 2: Find the child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch .

  # Step 3: Ensure this child is a predecessor of Myat Hpone Pyo
  ?myatHponePyo dbo:predecessor ?child .

  # Step 4: Identify the parent of Min Hla Htut and ensure relation to the child
  ?minHlaHtut dbo:parent ?parent ;
              foaf:name ""Min Hla Htut""@en .
  ?parent dbo:child ?child .

  # Step 5: Find the spouse of this father who is royalty
  ?father dbo:child ?child .
  ?spouse dbo:spouse ?father ;
          a dbo:Monarch .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
585,0,train,Give me the native of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
SELECT ?native WHERE {
  ?native dbo:nativePlace dbr:New_York_(state) .
}
```",1,1,2,1,1,3,2,20,0,0,7189,0,0.0,0
943,29,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow and child of Dawit I.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Baeda_Maryam_I dbo:father ?father .
}

PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?alterEgo rdfs:label ""The Shadow""@en .
  ?alterEgo dbo:alias ?fictionalCharacter .
  ?fictionalCharacter dbo:parent dbr:Dawit_I .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,43,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName WHERE {
  # Step 1: Find Archduke Charles Joseph's parent
  ?charlesJoseph a dbo:Person ;
                dbp:parent ?parent .

  FILTER(STR(?charlesJoseph) = ""Archduke_Charles_Joseph_of_Austria"")

  # Step 2: Find the child of this parent who was a commander in the Thirty Years' War and also a child of Ferdinand II
  ?commander a dbo:Person ;
             dbp:parent ?parent ;
             dbo:occupation ?occupation .
  
  FILTER(STR(?occupation) = ""Commander_in_the_Thirty_Years'_War"")
  ?ferdinandII a dbo:Person ;
               dbp:child ?commander .

  FILTER(STR(?ferdinandII) = ""Ferdinand_II,_Holy_Roman_Emperor"")

  # Step 3: Find the father of this commander
  ?commander dbp:parent ?father .
  
  BIND(STRAFTER(STR(?father), ""http://dbpedia.org/resource/"") AS ?fatherName)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,4,train,Give me the reference to Mitaka and region of Japan Standard Time.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitaka ?region ?timezone
WHERE {
  VALUES ?mitaka { dbr:Mitaka }
  
  OPTIONAL { 
    ?mitaka dbo:timeZone ?timezone .
  }

  OPTIONAL {
    ?mitaka dbo:partOfRegion ?region .
  }
}
```",2,2,3,1,2,2,2,9,0,1,1,0.0,0.0,0
297,7,train,"Give me the institution in Georgia (U.S. state) and entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Georgia_(U.S._state)> . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institutionInGeorgia ?birthPlaceCountry WHERE {
  # Find Little Hat Jones
  ?person a dbo:Person ;
          foaf:name ""Little Hat Jones"" .

  # Get his birthplace
  ?person dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is in a country
  ?birthPlace dbp:country ?birthPlaceCountry .

  OPTIONAL {
    # Find any institution associated with him in Georgia, U.S.
    ?institutionInGeorgia dbo:location dbr:Georgia_(U.S._state) ;
                         dbo:associatedWith ?person .
  }
}
```",3,4,4,2,2,2,2,9,0,0,346,0,0.0,0
871,18,train,"Give me the father of Arthur Stanley (politician) and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","```sparql
SELECT ?father WHERE {
  ?person1 foaf:name ""Arthur Stanley""@en .
  ?person2 foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  ?person3 foaf:name ""Victor Stanley (Royal Navy officer)""@en .

  ?person1 dbo:parent ?father .
  ?person2 dbo:parent ?father .
  ?person3 dbo:parent ?father .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,1,train,Give me the player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  wd:Q11150 dbo:teamMember ?player .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
345,1,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Japan_Standard_Time dbo:timeZoneRegion ?region .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
203,12,train,Give me the military force of Battle of Cape Finisterre (1805) and military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?battle ?combatant1 ?combatant2 WHERE {
  VALUES ?battle { 
    dbc:Battle_of_Cape_Finisterre_(1805) 
    dbc:Battle_of_Fort_Royal
  }
  
  OPTIONAL {
    ?battle dbp:combatant1 ?combatant1 .
  }
  
  OPTIONAL {
    ?battle dbp:combatant2 ?combatant2 .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
87,6,train,Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  # Find the actor of the film ""Paradise"" (2013)
  ?film a dbo:Film ;
        rdfs:label ""Paradise""@en .
  
  FILTER(CONTAINS(LANG(?film), ""2013"")) # Ensure it's the 2013 version

  ?film dbo:starring ?actor .

  # Find the spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouse .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
37,6,train,"Give me the birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?birthplace WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Ethan Iverson""@en .
  
  ?work dbo:composer ?person ;
        dbo:birthPlace ?birthplace .

}
```

This query assumes that there might be a resource linked to Ethan Iverson as a composer and checks for any associated birthplaces of works. Note that the actual availability of such data depends on how DBpedia has structured its information about Ethan Iverson.",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
375,8,train,Give me the entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
}
```",2,2,3,2,1,2,3,28,0,0,104,0,0.0,0
89,21,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
    # Find the parent of Min Hla Htut of Pyakaung
    ?minHlaHtut dbr:Pyakaung dbo:parent ?parent .

    # Find the predecessor of Myat Hpone Pyo
    ?myatHponePyo dbo:predecessor ?predecessor .

    # The child we are looking for is both a child of the parent and the predecessor
    ?child dbo:parent ?parent .
    ?child dbo:predecessor ?predecessor .
}
```

This query assumes that `dbo:parent` and `dbo:predecessor` are the correct properties to use, which might need adjustment based on actual DBpedia schema. The entities `Min Hla Htut of Pyakaung` and `Myat Hpone Pyo` should be replaced with their exact resource identifiers if available.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
119,8,train,"Give me the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?administration a dbo:Government ;
                  dbo:headOfState ?leader .
  ?party dbo:hasLeader ?leader .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
}
```

This query does the following:
- Selects administrations (`?administration`) that are instances of `dbo:Government`.
- Ensures these governments have a head of state (`dbo:headOfState`).
- Links to a party (`?party`) that has this leader and is labeled as ""Spanish Socialist Workers' Party"" in English.",1,2,2,1,1,3,3,71,0,0,320,0,0.0,0
633,14,train,"Give me the parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Francis I, Duke of Lorraine
  VALUES ?francisI { dbr:François_Ier,_Duke_of_Lorraine }

  # Step 2: Find his children who are royalty
  ?child dbo:spouse|dbo:childOf ?francisI .
  ?child a dbo:Monarch .

  # Step 3: Determine the fathers of those royal children
  ?father dbo:child ?child .

  # Step 4: Retrieve the parents of those fathers
  ?parent dbo:child ?father .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
756,37,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Find the leader of West Germany (Chancellor)
  ?chancellor a dbo:HeadOfGovernment ;
              dbo:nationality dbr:Germany ;
              dbo:country dbr:West_Germany .

  # Find the manager of SBV Vitesse for the 2020–21 season
  ?manager a dbo:SportsManager ;
           dbp:team dbr:SBV_Vitesse ;
           dbp:season ""2020–21""^^xsd:string .

  # Check if they are the same person
  FILTER (?chancellor = ?manager)

  # Get the native country of this person
  ?manager dbo:nationality ?nationality .
  ?nationality dbo:countryName ?nativeCountry .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
595,33,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?person a dbo:Politician ;
          dbo:spouse dbr:Hillary_Clinton ;
          dbo:residence dbr:Chappaqua,_New_York .
  
  ?work dbo:author ?author ;
        a dbo:Book, dbo:WrittenWork .

  ?person dbo:writtenWork ?work .
}
```

This query does the following:
- Identifies a person who is a politician (`dbo:Politician`), has Hillary Clinton as a spouse (`dbo:spouse`), and resides in Chappaqua, New York (`dbo:residence`).
- Finds works that are both books (`dbo:Book`) and written works (`dbo:WrittenWork`).
- Links the person to these works as their author.",4,9,5,3,2,3,3,71,0,0,1,0,0.0,0
628,51,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find Bobby Shmurda as a person and member of a band
  ?person rdfs:label ""Bobby Shmurda""@en .
  ?band dbo:member ?person .
  
  # Ensure the band is associated with New York (state)
  ?band dbo:location dbr:New_York_(state) .

  # Find awards received by the band
  ?award dbo:recipient ?band .

  # Check if the award is a region, American state, and settlement
  ?award rdf:type ?type .
  FILTER (
    ?type = dbo:Region ||
    ?type = dbo:State ||
    ?type = dbo:Settlement &&
    EXISTS { ?award dbo:country dbr:United_States }
  )

  # Get the native place of the award
  ?award dbo:nativePlace ?nativePlace .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
737,35,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find children of Philipp Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Step 2: Find grandchildren (children of the child)
  ?grandchild dbo:parent ?child .

  # Step 3: Filter for royalty and descendants of Archduke Charles Louis
  ?grandchild a dbo:Royalty ;
              dbo:parent dbr:Archduke_Charles_Louis_of_Austria .
  
  # Step 4: Find the predecessor of this individual
  ?predecessor dbo:successor ?grandchild .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,53,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the alter ego of The Shadow and professional in Actor.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the person known as The Shadow
  ?person dbo:birthName ""Richard Grant Esterhuysen""@en .
  ?person rdfs:label ""The Shadow (radio personality)""@en .

  # Ensure this person is an actor
  ?person a dbo:Actor .

  # Find movies that were adapted into television shows
  ?movie dbo:basedOn dbr:The_Shadow_(film) .
  ?tvShow dbo:basedOn ?movie .

  # Get the actors of the original movie
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != ?person)
}
```",6,7,7,3,3,3,3,71,0,0,9,0,0.0,0
386,20,train,Give me the war of Alexander Lvovich Davydov and war of the awardee of 25 and entity in Russian Empire.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?award ?entity WHERE {
  # Find Alexander Lvovich Davydov's DBpedia resource
  VALUES ?davydov { dbr:Aleksandr_Lvovich_Davydov }
  
  # Wars he was involved in
  OPTIONAL {
    ?davydov dbo:participatedInWar ?war .
  }

  # Awardee of a specific award or rank (assuming 'award' is the property)
  OPTIONAL {
    ?davydov dbo:awarded ?award .
    FILTER regex(str(?award), ""25"", ""i"") # Assuming '25' is part of the award name
  }
  
  # Entities in the Russian Empire
  OPTIONAL {
    ?entity dbo:country dbr:Russian_Empire .
    ?davydov dbo:associatedWith ?entity .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
58,0,train,Give me the spouse of Linda Bruckheimer.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1234568 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Linda Bruckheimer. You can find this by searching for her on DBpedia or using a SPARQL query to identify her unique resource.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
258,12,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?establishmentDate ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en ;
          dbo:birthDate ""1955-12-02""^^xsd:date ;
          dbo:occupation dbr:Politician .

  OPTIONAL { ?person dbo:almaMater ?almaMater . }
  
  FILTER EXISTS {
    ?establishment dbo:foundingDate ?establishmentDate .
    ?establishment dbo:founder ?person .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
531,26,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Identify Manuel Pinto da Costa
  dbr:Manuel_Pinto_da_Costa a dbo:Person ;
    dbo:occupation ?occupation .
  
  # Check if he is an office holder and politician
  ?occupation rdf:type dbo:OfficeHolder, dbo:Politician .

  # Find the specific office related to a military conflict or societal event
  ?office dbo:positionHeldBy ?person ;
          (dbo:relatedEvent|dbo:participatedIn) ?event .
  
  ?event rdf:type ?eventType .
  
  FILTER (?eventType IN (dbo:MilitaryConflict, dbo:SocietalEvent))
}
```",3,7,4,3,1,3,3,71,0,0,485,0,0.0,0
347,5,train,Give me the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
609,58,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://dbpedia.org/property/author> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Cece Bell, author of ""El Deafo""
  VALUES ?author { dbr:Cecelia_Elizabeth_Bell }
  ?author dbo:birthPlace ?birthPlace1 .
  
  # Glenn Youngkin, Governor of Virginia
  VALUES ?governor { dbr:Glenn_Youngkin }
  ?governor dbo:birthPlace ?birthPlace2 .

  # Vince Gilligan
  VALUES ?vinceGilligan { dbr:Vince_Gilligan }
  ?vinceGilligan dbo:birthPlace ?birthPlace3 .
  
  BIND(?author AS ?person)
  BIND(?birthPlace1 AS ?birthPlace) 
  UNION
  BIND(?governor AS ?person)
  BIND(?birthPlace2 AS ?birthPlace)
  UNION
  BIND(?vinceGilligan AS ?person)
  BIND(?birthPlace3 AS ?birthPlace)
}
ORDER BY ?person",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,16,train,"Give me the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/ontology/album> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album WHERE {
  ?song a dbo:SongsByArtist ;
        dbo:artist dbr:T.I. ;
        dbo:workType dbr:MusicalWork .
  
  OPTIONAL { ?song dbo:partOfAlbum ?album . }
}
```

This query does the following:
- It selects songs (`?song`) that are associated with T.I. as an artist.
- It ensures these songs are classified under `MusicalWork`.
- It attempts to find any album (`?album`) that the song is part of.",2,4,3,2,1,3,3,71,0,0,29,0,0.0,0
58,14,train,Give me the producer of the movie with the award of Ian Gregson (poet).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find awards associated with Ian Gregson
  ?award dbo:recipient dbr:Ian_Gregson .
  
  # Find movies related to those awards
  ?movie dbo:awardsReceived ?award .

  # Get the producer of the movie
  ?movie dbo:producer ?producer .
}
```",3,3,4,3,1,3,2,20,0,0,10672,0,0.0,0
782,25,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickArtist ?kimBand WHERE {
  # Nick Curran
  OPTIONAL {
    dbr:Nick_Curran dbo:musicalArtist ?nickArtist .
  }
  
  # Kim Wilson and The Fabulous Thunderbirds
  dbr:Kim_Wilson dbo:musicalArtist ?kimBand .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
668,39,train,"Give me the professional in Musician and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Musician .
  ?person dbo:birthName ?birthName .
  ?person dbo:nationality dbr:Ghana .
  ?person dbo:birthPlace ?place .
  ?place rdfs:label ""Central Region, Ghana""@en .

  OPTIONAL { ?person dbo:occupation dbr:Artist . }
}
```

This query does the following:
- Selects individuals (`?person`) who are musicians.
- Filters those with a specific birth name (`dbo:birthName`).
- Ensures they have a nationality of Ghana and were born in the Central Region, Ghana.
- Optionally checks if they are also recognized as an artist.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
769,11,train,"Give me the player in Lai Sun Cheung and player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?birthDate ?sport ?role
WHERE {
  ?person a dbo:Athlete .
  ?person dbo:birthDate ?birthDate .
  ?person foaf:name ?name .
  
  FILTER (YEAR(?birthDate) = 1981 && MONTH(?birthDate) = 12 && DAY(?birthDate) = 1)
  
  OPTIONAL { ?person dbo:sport dbr:Soccer . }
  OPTIONAL { ?person dbo:role dbr:Soccer_player . }
  OPTIONAL { ?person dbo:role dbr:Sports_manager . }
  OPTIONAL { ?person dbo:role dbr:Soccer_manager . }

  FILTER EXISTS { ?person dbo:sport dbr:Soccer . }
  FILTER EXISTS { ?person dbo:role dbr:Soccer_player . }
  FILTER EXISTS { ?person dbo:role dbr:Sports_manager . }
  FILTER EXISTS { ?person dbo:role dbr:Soccer_manager . }
}
ORDER BY ?name
```",3,7,4,2,2,3,2,20,0,0,2,0,0.0,0
353,57,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v5 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfRogerII ?fatherOfChild WHERE {
  # Roger II of Sicily's child who is royalty
  ?childOfRogerII dbo:parent dbr:Roger_II_of_Sicily ;
                  a dbo:Monarch .

  # William I's child who is royalty and an office holder
  ?referenceChild dbo:parent dbr:William_I_of_Sicily ;
                  a dbo:Monarch, dbo:OfficeHolder .

  # Alfonso VI of León and Castile's child
  ?childOfAlfonsoVI dbo:parent dbr:Alfonso_VI_of_Le%C3%B3n_and_Castile ;
                   a dbo:Monarch .

  # The father of the reference child is also royalty
  ?fatherOfChild dbo:parent ?referenceChild ;
                 a dbo:Monarch .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,13,train,"Give me the father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify William I of Sicily
  dbr:William_I_of_Sicily dbo:child ?royalChild .
  
  # Ensure the child is royalty
  ?royalChild a dbo:Monarch ;
              dbo:country ?country .

  # Find the father of this royal child
  ?royalChild dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
375,2,train,"Give me the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Artist .
  ?person a dbo:MusicalArtist .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 2020 && MONTH(?deathDate) = 6 && DAY(?deathDate) = 18)
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
143,0,train,Give me the actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film dcterms:title ""The Campus Queen""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
943,20,train,Give me the child of Dawit I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"# Query for the child of Dawit I
SELECT ?child WHERE {
  ?dawitI dbo:spouse|dbo:child ?person .
  ?person rdfs:label ""Dawit I""@en .
  ?person dbo:child ?child .
  FILTER(LANG(?child) = 'en')
}

UNION

# Query for the alter ego of The Shadow
SELECT ?alterEgo WHERE {
  ?shadow dbo:alterEgo ?alterEgo .
  ?shadow rdfs:label ""The Shadow""@en .
  FILTER(LANG(?alterEgo) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
249,0,train,Give me the native of Jamshedpur.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language WHERE {
  dbr:Jamshedpur dbo:nativeLanguage ?language .
}
```",1,1,2,1,1,2,2,9,0,0,68,0,0.0,0
595,7,train,Give me the owner of USS Arcadia (ID-1605).,SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
SELECT ?owner WHERE {
  wd:Q1234568 wdt:P127 ?owner .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for USS Arcadia (ID-1605) if it differs.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
347,9,train,"Give me the father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?father WHERE {
  dbpedia:Eleonore_of_Austria_(1574-1625) dbo:parent ?person .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""father""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
203,28,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military conflict involving the 30th (Cambridgeshire) Regiment of Foot
  ?conflict dbo:militaryUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  
  # Find the commander for this conflict
  ?conflict dbo:commander ?commander .

  # Ensure the same commander was involved in the Battle of Fort Royal
  ?battle1 rdfs:label ""Battle of Fort Royal""@en .
  ?battle1 dbo:commander ?commander .

  # Ensure the same commander was also involved in the Battle of Cape Finisterre (1805)
  ?battle2 rdfs:label ""Battle of Cape Finisterre (1805)""@en .
  ?battle2 dbo:commander ?commander .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
398,12,train,Give me the player in the writer of The First Glove and figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Query for ""The First Glove"" writer
  OPTIONAL {
    VALUES ?resource { dbr:The_First_Glove }
    ?resource dbo:author ?player .
  }

  # Query for ""Наши парни / Nashi parni""
  OPTIONAL {
    VALUES ?resource { dbr:Наши_парни dbr:Nashi_parni }
    ?resource dbo:wikiPageRedirects ?figure .
    ?figure rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""nashi parni""))
    ?figure dbo:wikiPageDisambiguates ?player .
  }

}
```

This query attempts to find a player associated with both the writer of ""The First Glove"" and the figure known as ""Наши парни / Nashi parni"". It uses optional blocks to handle each part separately, allowing for flexibility in case one or both parts do not yield results.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
89,9,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person1 dbo:spouse ?sawShweKhet .
  ?sawShweKhet foaf:name ""Saw Shwe Khet""@en .

  ?person2 dbo:parent ?sawMinHla .
  ?sawMinHla foaf:name ""Saw Min Hla""@en .

  FILTER (?person1 = ?person2)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,38,train,"Give me the child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Step 1: Find children of Alfonso VI
  ?alfonso_vi dbo:spouse ?spouse .
  FILTER (str(?alfonso_vi) = ""Alfonso_VI_of_León_and_Castile"")

  # Step 2: Find grandchildren of Alfonso VI
  ?child dbo:parent ?alfonso_vi ;
         dbo:parent ?other_parent .

  # Step 3: Find children of these grandchildren (i.e., great-grandchildren of Alfonso VI)
  ?grandchild dbo:parent ?child .

  # Step 4: Identify William I's child who is royalty
  ?william_i dbp:spouse ?william_spouse .
  FILTER (str(?william_i) = ""William_I_of_Sicily"")
  
  ?williams_child dbo:parent ?william_i ;
                  a dbo:Monarch .

  # Step 5: Match the grandchild of Alfonso VI with William I's child
  ?grandchild dbp:spouse ?williams_child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
609,59,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birthplace
  ?paulusPowell dbo:birthPlace ?region .
  FILTER (str(?region) = ""Paulus Powell"") .

  # Step 2: Find the governor of that region
  ?governor dbo:officeHolderOf ?region ;
           a dbo:Politician ;
           dbo:birthPlace ?governorBirthPlace .

  # Step 3: Identify Vince Gilligan's award
  ?vinceGilligan dbo:awardReceived ?award .
  FILTER (str(?vinceGilligan) = ""Vince Gilligan"") .

  # Step 4: Find the awardee of the same award
  ?awardee dbo:awardReceived ?sameAward ;
           dbo:birthPlace ?awardeeBirthPlace .
  FILTER (?sameAward = ?award) .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
158,21,train,"Give me the person decedent at Switzerland and native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Switzerland .
  ?person dbo:nationality dbr:Grand_Duchy_of_Finland .
  ?person dbo:birthPlace ?place .
  ?place dbo:country dbr:Russian_Empire .
  
  ?relation dbo:subject ?person ;
            dbo:predicate dbr:Nicholas_II_of_Russia ;
            dbo:object ?relatedPerson .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
78,11,train,Give me the band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find the musical artist associated with David Paton
  ?artist dbo:associatedMusicalArtist dbr:David_Paton .

  # Step 2: Retrieve bands or groups he is associated with
  ?artist dbo:memberOf ?band .

  # Step 3: Find members of those bands
  ?bandMember dbo:memberOf ?band .
  
  FILTER(?bandMember != dbr:David_Paton) # Exclude David Paton himself from the results

  # Optional: Filter to ensure we only get human band members
  OPTIONAL { ?bandMember a dbo:MusicalArtist . }
}
```",2,2,3,2,1,2,3,28,0,0,114,0,0.0,0
723,13,train,"Give me the band member of the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the album ""Nothing to Gein""
  ?album dbo:title ""Nothing to Gein"" ;
         dbo:producer ?producer .

  # Ensure the producer is an organization and a group
  ?producer a dbo:Band ;
            a dbo:Organization .

  # Get band members of this producer
  ?producer dbo:bandMember ?bandMember .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
103,6,train,Give me the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 rdfs:label ""Shatrughan Sinha""@en .
  OPTIONAL { wd:Q123456 dbo:occupation ?profession . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Shatrughan Sinha. You can find this by searching for his name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
140,8,train,"Give me the party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party WHERE {
  # Find the ruling party in Westport, Connecticut
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:United_States ;
         dbo:location dbr:Westport,_Connecticut ;
         dbo:memberOf dbp:RulingParty .

  # Ensure it is also classified as an organization
  ?party a dbo:Organization .
}
```

This query assumes that there's a property `dbo:memberOf` with the value `dbp:RulingParty`, which might not exist directly in DBpedia. You may need to adjust based on available data or infer ruling status from other properties like election results, current office holders, etc.",2,4,3,2,1,3,2,20,0,0,21486,0,0.0,0
293,40,train,Give me the person born as Harriette Arlene Lake and party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party ?landmark ?spouse WHERE {
  # Find the person born as Harriette Arlene Lake
  ?person dbo:birthName ""Harriette Arlene Lake""@en .
  
  # Determine their party membership related to a landmark at elevation ~20.1168 meters
  ?partyMember dbo:memberOf ?party ;
               dbo:location dbr:Lake_Tahoe ; # Assuming Lake Tahoe as the landmark
               dbp:elevation ""20.116800000000001347""^^xsd:float .
  
  # Ensure the person is a member of this party
  ?person dbo:memberOf ?party .

  # Find Roger Pryor (actor) and his spouse
  ?roger dbr:Roger_Pryor_(actor) ;
         dbp:spouse ?spouse .

  # Match the spouse with the person identified earlier
  ?spouse = ?person .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
203,35,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?event WHERE {
  # Robert Calder's military affiliation
  dbr:Robert_Calder dbo:militaryService ?militaryForce .
  
  # The event or war involving the 30th Regiment of Foot
  dbr:30th_(Cambridgeshire)_Regiment_of_Foot dbo:participatedIn ?event .
  
  # Ensure the event is a military conflict
  ?event rdf:type dbo:MilitaryConflict .

  # Link Robert Calder's force to the same event
  ?militaryForce dbo:participatedIn ?event .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
39,33,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in Singer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?character ?alterEgo ?profession WHERE {
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:fictionalWorkCategory dbr:Comic_book_character .
  ?character dbo:alterEgo ?alterEgo .
  ?alterEgo dbp:occupation ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""singer""))
}
```",4,6,5,3,2,3,3,71,0,0,5422,0,0.0,0
731,1,train,Give me the war of Tom Phillips (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Tom_Phillips_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:occupation dbr:Royal_Navy_officer .
  ?person rdfs:label ""Tom Phillips (Royal Navy officer)""@en .
  
  OPTIONAL { 
    ?person dbo:militaryConflict ?war .
  }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
595,54,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author ?spouse WHERE {
  # Commander in Third Taiwan Strait Crisis
  VALUES (?commander) { dbr:Bill_Clinton }
  
  # Author of ""An Invitation to the White House""
  ?author dbo:title ""An Invitation to the White House""@en ;
          dbo:birthPlace dbr:Chappaqua, New York ;
          dbo:spouse ?spouse .
  
  FILTER (?author = dbr:Hillary_Clinton)
  
  # Spouse of the author
  VALUES (?spouse) { dbr:Bill_Clinton }
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
119,3,train,Who is the commander in French Revolutionary Wars?,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:birthPlace ?place .
  ?commander rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""french revolutionary wars"") || CONTAINS(LCASE(?name), ""napoleon""))
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,58,0,0.0,0
386,17,train,Give me the war of the awardee of 25 and war of Alexander Lvovich Davydov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 WHERE {
  # Find a person awarded the Order of Alexander Nevsky
  ?person dbo:award dbr:Order_of_Alexander_Nevsky .
  
  # Find wars associated with this person
  ?person dbo:militaryConflict ?war1 .

  # Find information about Alexander Lvovich Davydov
  dbr:Aleksandr_Lvovich_Davydov dbo:militaryConflict ?war2 .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,6,train,Give me the birthplace of Ebrahim Alkazi and birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Ebrahim_Alkazi 
    dbr:Smita_Patil 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
119,28,train,Give me the tenant of Santiago de Compostela and tenant of Spain and office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?santiagoLeaderLabel ?spainLeaderLabel ?galicianOfficeLabel WHERE {
  # Santiago de Compostela leader (mayor)
  ?santiagoLeader dbo:officeHolder dbr:Santiago_de_Compostela .
  ?santiagoLeader rdfs:label ?santiagoLeaderLabel .

  # Spain leader (Prime Minister or equivalent)
  ?spainLeader dbo:officeHolder dbr:Spain .
  ?spainLeader rdfs:label ?spainLeaderLabel .

  # Office held in the 2009 Galician regional election
  ?galicianOffice dbo:positionHeld dbr:Galicia_2009_regional_election .
  ?galicianOffice rdfs:label ?galicianOfficeLabel .
}
```

This query assumes that:
- The leader of Santiago de Compostela is represented as an office holder for the city.
- The leader of Spain is similarly represented.
- The office held during the 2009 Galician regional election can be identified through its position.

Note: The exact URIs and properties might need adjustment based on DBpedia's current schema and available data. This query serves as a starting point and may require refinement with actual DBpedia exploration.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
203,34,train,"Give me the military force of Battle of Cape Finisterre (1805) and commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?force1 ?commander1 ?force2 ?commander2 WHERE {
  # Identify the battle
  VALUES ?battle { 
    dbr:Battle_of_Cape_Finisterre_(1805) 
  }
  
  # Get military forces involved in the battle
  ?battle dbo:participatedInMilitaryConflict [
      a dbo:MilitaryConflict ;
      dbo:militaryForce1 ?force1 ;
      dbo:militaryCommander1 ?commander1 ;
      dbo:militaryForce2 ?force2 ;
      dbo:militaryCommander2 ?commander2 .
  ]
  
  # Filter for forces related to the Triple Alliance context
  OPTIONAL { 
    ?force1 rdfs:label ?label1 FILTER (CONTAINS(LCASE(?label1), ""britain"") || CONTAINS(LCASE(?label1), ""spain"") || CONTAINS(LCASE(?label1), ""portugal"")) .
  }
  
  OPTIONAL {
    ?force2 rdfs:label ?label2 FILTER (CONTAINS(LCASE(?label2), ""britain"") || CONTAINS(LCASE(?label2), ""spain"") || CONTAINS(LCASE(?label2), ""portugal"")) .
  }

}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,53,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.","SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_manager .

  # Find Marty Pollio's birthday
  ?marty dbp:birthday ?pollioBirthday .

  # Ensure the person is an athlete and shares the same birthday as Marty Pollio
  ?person dbo:sport dbr:Athletics ;
          dbo:birthday ?pollioBirthday .

  # Ensure the person played with Sergio Agüero
  ?team dbo:player ?person .
  ?team dbo:player dbr:Sergio_Ag%C3%BCero .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
203,45,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleMilitaryForce ?battleCommander ?eventMilitaryForce ?awardeeEvent WHERE {
  # Battle of Fort Royal details
  VALUES ?battle (dbr:Battle_of_Fort_Royal)
  
  ?battle dbo:militaryUnit ?battleMilitaryForce .
  OPTIONAL { ?battle dbo:commander ?battleCommander . }
  
  # French campaign in Egypt and Syria context
  ?campaign dbr:French_campaign_in_Egypt_and_Syria ;
            dbo:participatedIn ?battle .

  # Awardee of Knight Commander of the Order of the Bath
  ?awardee dbo:title ""Knight Commander of the Order of the Bath"" .
  
  # Event related to the awardee that is societal and involves military force
  ?event dbo:awardRecipient ?awardee ;
         a dbo:SocietalEvent ;
         dbo:militaryUnit ?eventMilitaryForce .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
23,0,train,Give me the party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q1234568 dbo:politicalParty ?party .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Roy Barreras. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
731,7,train,Give me the force of the awardee of Commander of the Order of the British Empire.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Commander_of_the_Order_of_the_British_Empire> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?force WHERE {
  ?person dbo:honoraryTitle dbr:Commander_of_the_Order_of_the_British_Empire .
  OPTIONAL { 
    ?person dbo:militaryService ?service .
    ?service dbo:memberOf ?force .
  }
}
```",2,2,3,2,1,3,2,20,0,0,162,0,0.0,0
687,38,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?soccerPlayerManager
WHERE {
  # Find the actor who is a soccer player and athlete in ""All or Nothing: Manchester City""
  ?actor dbo:profession dbr:Soccer_player ;
         dbo:profession dbr:Athlete ;
         dbp:roleInFilm dbr:All_or_Nothing:_Manchester_City .

  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?soccerPlayerManager dbo:birthDate ""1979-11-03""^^xsd:date ;
                      dbo:profession dbr:Soccer_player ;
                      dbo:occupation dbr:Soccer_manager .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
859,2,train,"Give me the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?group WHERE {
  ?song dbo:title ""Burnt by the Sun"" .
  ?song dbo:artist ?group .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
687,8,train,"Give me the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:birthDate ""1979-11-03""^^xsd:date .
  OPTIONAL { ?person dbo:sportsTeamRole dbr:SoccerManager . }
}
```",1,3,2,1,1,3,3,71,5,7,0,0.4166666666666667,1.0,0.5882352941176471
39,18,train,Give me the professional in Singer and band of Bob Thompson (musician) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession
WHERE {
  VALUES ?resource { <http://dbpedia.org/resource/Bob_Thompson_(musician)> }
  
  ?resource dbo:occupation ?occupation .
  ?occupation rdfs:label ?label .

  FILTER (
    (CONTAINS(LCASE(?label), ""singer"") && CONTAINS(LCASE(?label), ""band""))
  )
}
```",3,3,4,1,3,3,3,71,0,0,3,0,0.0,0
628,32,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Step 2: Find musical artists associated with Bobby Shmurda
  ?artist dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
  
  # Step 3: Find band members of those musical artists who are also musical artists themselves
  ?artist dbo:bandMember ?bandMember .
  ?bandMember a dbo:MusicalArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
595,58,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author a dbo:Person ;
          foaf:name ""Bill Clinton""@en .
  
  ?work dbo:author ?author ;
        a dbo:Book .

  OPTIONAL { 
    ?warEvent dbo:relatedDisease ?disease ;
              dbo:relatedSocietalEvent ?societalEvent .
    
    ?owner dbo:owns ?ship ;
           foaf:name ""United Fruit Company""@en .
    
    ?ship rdfs:label ""USS Arcadia (ID-1605)""@en .

    ?warEvent dbo:commander ?author .
  }
}
```

This query attempts to find a book authored by Bill Clinton that is related to his role in a war context involving diseases and societal events linked to the United Fruit Company's ownership of USS Arcadia.",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
412,6,train,Give me the entity in Athens and war of Napoleon Zervas.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity dbo:location dbr:Athens .
  ?entity dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation rdfs:label ""Napoleon Zervas""@en .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
412,0,train,Give me the war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?event a dbo:MilitaryConflict ;
         dbo:participatedIn [
           rdf:type dbo:Person ;
           rdfs:label ?personLabel .
         ] ;
         dbo:description ?description .

  FILTER (
    CONTAINS(LCASE(?personLabel), ""napoleon"") ||
    CONTAINS(LCASE(?personLabel), ""zervas"")
  )
}
```",1,1,2,1,1,2,3,28,0,0,13,0,0.0,0
871,5,train,"Who is the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:birthName ""Edward Henry Stanley""@en .
  ?person dbo:title ""17th Earl of Derby"" .
  
  ?person dbo:parent ?parent .

  OPTIONAL { ?parent dbo:occupation dbp:Politician . }
  OPTIONAL { ?parent dbo:officeHolder true . }

  FILTER EXISTS { ?parent dbo:occupation dbp:Politician } .
  FILTER EXISTS { ?parent dbo:officeHolder true } .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
628,20,train,Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?birthName WHERE {
  # Find Uncle Murda's band members
  ?uncleMurda a dbo:MusicalArtist ;
              dbo:member ?bandMember .
  
  FILTER (str(?uncleMurda) = ""Uncle_Murda"") .

  # Find Bobby Shmurda's birth name
  ?bobbyShmurda a dbo:Person ;
                foaf:name ""Bobby Shmurda"" ;
                dbo:birthName ?birthName .
  
  FILTER (str(?bobbyShmurda) = ""Bobby_Shmurda"") .

}
```

This query assumes that Uncle Murda and Bobby Shmurda are represented in DBpedia with the resource identifiers `Uncle_Murda` and `Bobby_Shmurda`, respectively. The query retrieves band members of Uncle Murda and the birth name of Bobby Shmurda.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,45,train,"Give me the professional in  and producer of The Adventures of Tom Sawyer (1938 film) and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerTomSawyer ?actorHighSocietyBlues ?claimToFame ?producerClaimToFame WHERE {
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producerTomSawyer .

  # Actor known for ""High Society Blues""
  dbr:High_Society_Blues dbo:actor ?actorHighSocietyBlues .

  # Claim to fame of the actor that is both a movie and a work
  ?claimToFame dbo:starring ?actorHighSocietyBlues .
  FILTER EXISTS { ?claimToFame rdf:type dbo:Film . }
  FILTER EXISTS { ?claimToFame rdf:type dbo:CreativeWork . }

  # Producer of this claim to fame
  ?claimToFame dbo:producer ?producerClaimToFame .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
414,16,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics and award of the awardee of Nobel Prize in Physics.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v2 . ?result <http://dbpedia.org/ontology/presenter> ?v2 . ?v3 <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?host ?institution WHERE {
  # Find the Nobel Prize in Physics awardees
  ?awardee dbo:award dbr:Nobel_Prize_in_Physics .
  
  # Identify the host of the ceremony (assuming a known resource or pattern)
  ?ceremony dbo:prize dbr:Nobel_Prize_in_Physics ;
            dbo:host ?host .

  # Check if the host is affiliated with an educational institution
  OPTIONAL {
    ?host dbo:almaMater ?institution .
  }
}
```

This query assumes that there is a known resource or pattern for identifying the host of the Nobel Prize in Physics ceremony. The `dbo:host` property is hypothetical and would need to be adjusted based on actual DBpedia data structure.",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
198,37,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?entityInCharleston WHERE {
  # Identify Quincy Adams Gillmore
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore"" .

  # Find the force associated with him
  ?gillmore dbo:commanded ?force .

  # Find any awards he received
  OPTIONAL { 
    ?gillmore dbo:awardReceived ?award .
  }

  # Identify entities in Charleston, South Carolina
  ?entityInCharleston a dbo:Place ;
                     foaf:name ""Charleston, South Carolina"" .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,58,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find a commander associated with the Battle of Vienna
  ?battle dbo:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_Vienna"")

  # Ensure the person is linked to both a television show and a societal event
  ?commander dbo:wikiPageDisambiguates ?tvShow .
  ?commander dbo:wikiPageDisambiguates ?societalEvent .

  # Find a successor of Yurii Khmelnytsky
  ?yurii dbo:succeededBy ?successor .
  FILTER (str(?yurii) = ""Yurii_Khmelnytsky"")
  ?commander owl:sameAs ?successor .

  # Reference to the writer of ""Always the Love Songs""
  ?writer dbo:wikiPageDisambiguates ?commander .
  FILTER (str(?writer) = ""Always_the_Love_Songs"")

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
293,55,train,"Give me the person born as the birth name of Ann Sothern and party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/party> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Actor from ""1,000 Dollars a Minute""
  ?actor dbo:title ?movie .
  ?movie dbp:name ""1,000 Dollars a Minute""@en .
  
  # Spouse of the actor
  ?actor dbo:spouse ?spouse .

  # Party member in Central, Louisiana
  ?partyMember dbo:birthPlace dbr:Central,_Louisiana ;
               dbo:memberOfParty ?rulingParty .

  # Conditions to match all criteria
  FILTER(?birthName = ?person)
  FILTER(?spouse = ?partyMember)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
353,4,train,"Who is the parent of Roger III, Duke of Apulia?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person dbo:birthName ""Roger III, Duke of Apulia""@en.
  ?person dbo:parent ?parent.
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
782,21,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranArtist ?fabulousThunderbirdsRealName
WHERE {
  # Find Nick Curran's associated musical artist
  OPTIONAL {
    ?nickCurran dbo:musicalArtist ?nickCurranArtist .
    FILTER (str(?nickCurran) = ""Nick_Curran"")
  }
  
  # Find the real name of The Fabulous Thunderbirds' members
  OPTIONAL {
    ?fabulousThunderbirdMember dbo:memberOf dbr:The_Fabulous_Thunderbirds ;
                               foaf:name ?realName .
    FILTER (str(?fabulousThunderbirdMember) != ""The_Fabulous_Thunderbirds"")
  }
  
  # Bind the real name to a variable
  BIND(IF(BOUND(?realName), STR(?realName), ""Not Available"") AS ?fabulousThunderbirdsRealName)
}
LIMIT 10",3,3,4,2,2,3,3,71,0,1,1,0.0,0.0,0
628,59,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find a musical artist from Florida
  ?artist dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Florida ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Find a band member of this artist
  ?bandMember dbo:memberOfBand ?artist ;
              rdf:type dbo:MusicalArtist .

  # Step 3: Find an associated musical artist who is also a member of GS9
  ?associatedArtist dbo:memberOfBand dbr:GS9 ;
                    rdf:type dbo:MusicalArtist .

  # Step 4: Find the person born with the birth name of the native from step 1
  ?person dbp:birthName ?bandMember ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Florida .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,26,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  
  ?memberhip dbo:bandMember ?person ;
             dbo:band ?band .
}
```

This query does the following:
- It selects distinct bands (`?band`) associated with a person.
- The `?person` is filtered to be of type `dbo:MusicalArtist`.
- The birth date of this person is specified as March 30, 1945.
- The band membership relationship (`dbo:bandMember`) links the person to their respective band.",3,4,4,3,1,3,3,71,0,0,14,0,0.0,0
398,11,train,Give me the player in Aleksandr Filimonov and figure known as the nickname of Russia national football team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Russia_national_football_team> <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerRole ?teamNickname
WHERE {
  # Find Aleksandr Filimonov and his role in football
  OPTIONAL {
    ?filimonov a dbo:FootballPlayer ;
               foaf:name ""Aleksandr Filimonov""@en .
    ?filimonov dbo:position ?playerRole .
  }

  # Find the nickname of the Russia national football team
  dbr:Russia_national_football_team dbo:nickname ?teamNickname .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
39,7,train,Give me the birth name of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 a dbo:Musician ; # Replace Q123456 with the actual DBpedia resource ID for Bob Thompson (musician)
             foaf:name ""Bob Thompson"" ;
             schema:givenName ?givenName ;
             schema:familyName ?familyName .
  
  OPTIONAL { 
    ?person schema:birthName ?birthName .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,22,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowProfession ?bouralyProfession
WHERE {
  # Query for The Shadow's profession
  OPTIONAL {
    dbr:The_Shadow dbo:profession ?shadowProfession .
  }
  
  # Query for Frédéric Bouraly's profession
  OPTIONAL {
    dbr:François_Bouraly dbo:profession ?bouralyProfession .
  }
}
```",4,4,5,2,2,2,3,28,0,0,4210,0,0.0,0
782,23,train,Give me the reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Kim Wilson""@en .
  ?band dbo:leadMember ?person ;
        dbo:name ?bandName .
}
```",3,3,4,3,1,3,3,71,0,0,10,0,0.0,0
386,4,train,Give me the awardee of 25.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""25""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:numericID ""25"" .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,326,0,0.0,0
633,4,train,"Give me the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine dbo:spouse ?spouse .
  
  # Identify children who are royalty
  ?spouse dbo:child ?child .
  ?child a dbo:Monarch ;
         dbo:parent dbr:François_Ier,_Duke_of_Lorraine .
}
```

This query does the following:
- It starts by identifying Francis I, Duke of Lorraine using his DBpedia resource identifier.
- It looks for any spouse linked to him and then finds children from that relationship.
- The filter ensures that these children are classified as a `Monarch` (a type of royalty) in DBpedia.",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
557,31,train,"Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?alterEgoCharacter
WHERE {
  # Find the producer of ""The Adventures of Tom Sawyer"" (1938 film)
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:producer ?producer .

  # Find a fictional character related to Kent Allard
  OPTIONAL {
    ?character dbo:alterEgoOf ?kentAllard .
    ?kentAllard rdfs:label ""Kent Allard""@en .
    FILTER (lang(?kentAllardLabel) = 'en')
  }
}
```

This query does the following:

- It selects the producer of the film ""The Adventures of Tom Sawyer"" from DBpedia.
- It attempts to find a fictional character that is an alter ego or related to Kent Allard.

Note: The exact property `dbo:alterEgoOf` might not exist in DBpedia, and you may need to adjust based on available properties like `dbo:character`, `dbo:actor`, etc., depending on how the data is structured. You might also need to refine the query if specific relationships or labels are differently represented.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
816,23,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film .
  ?movie dbo:starring ?actor .
  ?person dbo:deathPlace dbr:Los_Angeles_County,_California ;
          dbo:causeOfDeath ?cause .
  FILTER EXISTS { ?movie dbo:work ?work . }
}
```

This query does the following:

- Selects movies that are of type `Film`.
- Finds actors (`?actor`) who starred in these films.
- Identifies persons (`?person`) whose death place is Los Angeles and checks if they have a cause of death.
- Ensures the movie is associated with a work.

Note: The query assumes that the relationship between movies, works, and people is correctly modeled in DBpedia. Adjustments might be necessary based on actual data availability and structure.",3,4,4,3,1,3,3,71,0,0,10313,0,0.0,0
159,46,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of Always the Love Songs.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writer
WHERE {
  # Michał Kazimierz Pac as a commander in a military conflict
  dbr:Micha%C5%82_Kazimierz_Pac dbo:commanderOf ?conflict .
  
  # The successor of Michał Kazimierz Pac in the same role
  ?successor dbo:succeededBy dbr:Micha%C5%82_Kazimierz_Pac ;
             dbo:commanderOf ?conflict .

  # Michał Kazimierz Pac as a politician and office holder
  dbr:Micha%C5%82_Kazimierz_Pac dbo:officeHolderOf ?office .
  
  # The writer of ""Always the Love Songs""
  ?writer dbo:title ""Always the Love Songs"" ;
          dbo:author ?author .

}
```

This query attempts to find:
- The successor (`?successor`) of Michał Kazimierz Pac in a military conflict.
- A reference to the writer of ""Always the Love Songs"".

Please note that this is a conceptual query and may need adjustments based on the actual data available in DBpedia.",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
119,12,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak and war of Alexander Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Dawid Olejniczak's residence
  ?olejniczakResidence a dbo:Place ;
                       dbo:residenceLocation/dbo:country ?countryOlejniczak .
  
  # Alexander Suvorov's war
  ?suvorovWar a dbo:MilitaryConflict ;
             dbo:location ?warLocation .
  
  # Linking the location of the war to a country
  ?warLocation dbo:country ?countrySuvorov .

  # Ensuring both countries are the same
  FILTER (?countryOlejniczak = ?countrySuvorov)
}
```

This query assumes:
- Dawid Olejniczak has a property `residenceLocation` that links to a place, which in turn is linked to a country.
- Alexander Suvorov participated in a military conflict (`MilitaryConflict`) with a location that can be linked to a country.

The query selects the distinct country where both conditions are met. Adjustments may be necessary based on actual DBpedia schema details for these entities.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
59,4,train,Give me the manager of Hartlepool United F.C. and native of Bristol.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hartlepool_United_F.C.> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:manager ?manager .
  ?manager dbo:birthPlace dbr:Bristol .
  
  FILTER (str(?team) = ""Hartlepool United F.C."")
}
```

This query does the following:
- It selects managers (`?manager`) of a team (`?team`).
- It filters these managers to those whose `birthPlace` is Bristol.
- It specifically targets Hartlepool United F.C. by filtering on the team's resource identifier.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
668,9,train,Give me the associated musical artist of $pacely and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?pacely dbo:associatedMusicalArtist ?artist .
  ?pacely a dbr:Pacely .
  ?artist dbo:occupation dbr:Musician .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
905,56,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Charles Martel of Anjou's parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?parent .

  # Philip I, Prince of Taranto's father and spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?father .
  ?father dbo:spouse ?spouse .

  # Stephen V of Hungary's predecessor
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .

  # The child of the child (royalty) of the predecessor
  ?child1 dbo:parent ?predecessor .
  ?child2 dbo:parent ?child1 .
  
  FILTER (?spouse = ?child2 && 
          ((?spouse a dbo:Monarch) || (?spouse a dbo:RoyalPerson)))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
198,46,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of the awardee of Gillmore Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find awardees of the Congressional Gold Medal
  ?congressionalGoldMedalAward a dbo:Award ;
                              rdfs:label ""Congressional Gold Medal""@en .
  
  ?recipient1 dbo:award ?congressionalGoldMedalAward ;
              dbo:occupation ?occupation1 .

  # Find awardees of the Gillmore Medal
  ?gillmoreMedalAward a dbo:Award ;
                      rdfs:label ""Gillmore Medal""@en .

  ?recipient2 dbo:award ?gillmoreMedalAward ;
              dbo:occupation ?occupation2 .

  # Check if these recipients were involved in any wars
  OPTIONAL { ?recipient1 dbo:participatedIn ?war . }
  OPTIONAL { ?recipient2 dbo:participatedIn ?war . }

  FILTER (lang(?congressionalGoldMedalAward->rdfs:label) = 'en' &&
          lang(?gillmoreMedalAward->rdfs:label) = 'en')
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
414,3,train,"Give me the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution WHERE {
  ?prize dbo:category dbr:Nobel_Prizes_in_Physics .
  ?prize dbo:location ?location .
  ?location dbo:type dbr:Educational_institution .
  BIND(?location AS ?institution)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
941,13,train,"Give me the child of the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?childOfChild WHERE {
  # Step 1: Identify a child of Ferdinand Albert II, Duke of Brunswick-Lüneburg
  ?person dbo:parent dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg .
  
  # Step 2: Find the parent of that child (i.e., grandchild of Ferdinand Albert II)
  ?grandParent dbo:parent ?person .

  # Step 3: Check if this grandparent is royalty
  ?grandParent rdf:type dbp:RoyalPerson .

  # Step 4: Find a child of this royal grandparent
  ?childOfGrandParent dbo:parent ?grandParent .
  
  # Return the child of the royal grandparent
  BIND(?childOfGrandParent AS ?childOfChild)
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
782,47,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?realName ?band 
WHERE {
  # Find the band entity for The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:member ?member .

  # Filter members who are musical artists and born on March 30, 1945
  ?member a dbo:MusicalArtist ;
          dbp:birthday ""1945-03-30""^^xsd:date .

  # Get the real name of the member
  OPTIONAL { ?member foaf:name ?realName . }

  # Find any band associated with this member
  OPTIONAL { ?member dbo:band ?band . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
859,5,train,Give me the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234568 wdt:P106 wd:Q33999 . # James Plotkin is a musician (P106)
  wd:Q1234568 wdt:P175 ?artist .    # Associated musical artist (P175)
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
412,24,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of the awardee of 30.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInDeathPlace
WHERE {
    # Antonios Varthalitis's death place
    dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .

    # Ensure the death place is a settlement
    ?deathPlace rdf:type dbo:Settlement .

    # Find an entity in that location related to a war with awards
    ?entityInDeathPlace dbo:location ?deathPlace .
    ?war dbo:awardee ?awardRecipient .
    ?awardRecipient dbo:numberOfAwards ""30""^^xsd:int .
    ?war rdf:type dbo:MilitaryConflict .

    # Ensure the entity is distinct and related to a war
    FILTER(?entityInDeathPlace != dbr:Antonios_Varthalitis)
}
```",4,5,5,2,2,2,3,28,0,0,3,0,0.0,0
293,30,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of Ann Sothern and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseRoger ?spouseAnn ?partyMember
WHERE {
  # Find Roger Pryor and his spouse
  ?roger a dbo:Actor ;
        foaf:name ""Roger Pryor"" ;
        dbo:spouse ?spouseRoger .

  # Find Ann Sothern, her birth name, and her spouse
  ?ann a dbo:Actor ;
       foaf:name ""Ann Sothern"" ;
       dbp:birthday ?birthDate ;
       dbo:birthName ""Anne Persend Leppermann"" ;
       dbo:spouse ?spouseAnn .

  # Find a person who is a member of the Republican Party
  ?partyMember a dbo:Person ;
              dbo:memberOfParty <http://dbpedia.org/resource/Republican_Party_(United_States)> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,26,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birthplace
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .

  # Step 2: Check if the birthplace is a region and an administrative region
  ?paulusBirthPlace rdf:type dbo:Region .
  ?paulusBirthPlace rdf:type dbo:AdministrativeRegion .

  # Step 3: Find the governor of that place
  ?governor dbr:birthPlace ?paulusBirthPlace ;
            a dbo:Politician ;
            dbo:governmentRole ?role .
  
  FILTER EXISTS { ?role dbo:officeHolder ?governor }
  
  BIND(?paulusBirthPlace AS ?governorBirthPlace)
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
668,52,train,Give me the professional in the profession of Rod Argent and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as the birth name of $pacely.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Rod Argent's profession
  ?rodArgent dbo:profession ?profession .
  VALUES ?rodArgent { <http://dbpedia.org/resource/Rod_Argent> }

  # Dizzee Rascal's birth name
  ?dizzeeRascal dbp:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en .

  # $pacely's birth name
  ?pacely dbp:birthName ?birthName .
  FILTER regex(?birthName, ""^Pacely"", ""i"")

  # Find professionals in the same profession as Rod Argent
  ?professional dbo:profession ?profession .

  # Ensure they are associated with musical artists linked to Dizzee Rascal and $pacely
  ?association dbp:associatedMusicalArtist ?dizzeeRascal .
  ?association2 dbp:associatedMusicalArtist ?pacely .
  FILTER (?professional != ?rodArgent)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
706,14,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?birthPlace WHERE {
  # Find movies that are Indian
  ?movie dbo:country dbr:India .
  
  # Find actors in those movies who have acted with Dipankar De
  ?movie dbo:starring ?coActor .
  ?coActor foaf:name ""Dipankar De""@en .

  # Get other actors from the same movie
  ?movie dbo:starring ?actor .
  
  # Ensure we don't select Dipankar De himself
  FILTER (?actor != ?coActor)

  # Retrieve birthplace of the actor
  OPTIONAL { ?actor dbp:birthPlace ?birthPlace }
}
```",3,5,4,3,1,3,2,20,0,0,13,0,0.0,0
737,1,train,"Give me the child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?albrecht .
  ?albrecht foaf:name ""Albrecht, Duke of Württemberg""@en ;
           rdf:type dbo:Person .
  OPTIONAL { ?person dbo:child ?child . }
}
```

This query assumes that Albrecht's spouse is linked to him and that the children are listed under this relationship. Adjustments might be necessary depending on how DBpedia structures these relationships.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
258,7,train,Give me the establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?foundingDate
WHERE {
  ?university a dbo:University ;
              rdfs:label ""Federal University of Paraíba""@en .
  OPTIONAL { ?university dbo:established ?foundingDate . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
668,27,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Artist .
  ?person dbo:nationality dbr:Ghana .
  ?person dbo:region dbr:Central_Region_(Ghana) .
  OPTIONAL { ?person dbp:birthName ?birthName . }
}
```

This query does the following:
- Selects individuals (`?person`) who are artists (`dbo:Artist`).
- Ensures they have a nationality of Ghana (`dbo:nationality dbr:Ghana`).
- Filters those associated with the Central Region of Ghana (`dbo:region dbr:Central_Region_(Ghana)`).
- Optionally retrieves their birth name (`dbp:birthName ?birthName`).",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
159,39,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # The commander of the Holy League forces at the Battle of Vienna
  ?battle dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:commander ?commander .
  ].
  
  # Ensure it's related to the Great Turkish War
  ?battle dbo:partOf dbr:Great_Turkish_War .

  # Reference to George Ducas
  ?ducas dbo:birthName ""George Ducas""@en ;
         dbo:associatedWith ?commander .
  
  # The commander should be linked to a TV show and societal event
  ?commander dbo:wikiPageRedirects ?tvShow .
  ?tvShow dbo:wikiPageDisambiguates dbr:Societal_event .

  FILTER (str(?battle) = ""Battle_of_Vienna_(1683)"")
}",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,17,train,"Give me the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Stephen V of Hungary
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  # Find his predecessor
  ?predecessor dbo:successor ?stephenV .

  # Find the children of the predecessor who are royalty
  ?predecessor dbo:child ?child .
  ?child a dbo:Monarch .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
375,23,train,Give me the war of the child of Toyotomi Hideyoshi and entity in the birth place of Yamaza Enjirō.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entityInBirthPlace WHERE {
  # Find a child of Toyotomi Hideyoshi
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  
  # Find wars involving this child
  ?war dbo:participant ?child .

  # Find Yamaza Enjirō's birthplace
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # Find an entity in the birthplace of Yamaza Enjirō
  ?entityInBirthPlace dbo:location ?birthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
103,61,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalInAlterEgo ?actorProfessional
WHERE {
  # The Shadow's alter ego in comics
  dbr:Lamont_Cranston dbo:profession ?professionalInAlterEgo .

  # Actor from ""Ab Kya Hoga"" who played a politician
  dbr:Shah_Rukh_Khan dbo:profession ?actorProfessional .
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
159,21,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find John II Casimir Vasa as a commander in both wars
  ?johnCasimir a dbo:Person ;
               dbo:spouse ?spouse ;
               dbo:officeHolder ?office1, ?office2 ;
               dbo:commanderOf [
                 dbo:wikiPageRedirects dbr:Russo-Polish_War_(1654%E2%80%931667) ;
                 dbo:wikiPageRedirects dbr:Great_Turkish_War
               ] .

  # Find the successor of John II Casimir Vasa in his political role
  ?office1 dbo:successor ?successor .
}
```

This query assumes that DBpedia has structured data linking individuals to their roles and successors. It identifies John II Casimir Vasa as a commander in both wars and then looks for his successor in one of his political offices.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
531,2,train,Give me the office of Miguel Maura.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  dbr:Miguel_Maura dbo:positionHeld ?office .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
140,3,train,"Give me the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""George Pickett""@en .
  
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .

  ?event rdfs:label ?warLabel .
  FILTER (lang(?warLabel) = 'en')
}
```

This query does the following:
- Identifies George Pickett as a `MilitaryPerson`.
- Finds events (`?event`) where he is an agent and are of type `MilitaryConflict`.
- Retrieves the English label for these events, which represent wars or military conflicts.",1,2,2,1,1,3,2,20,0,0,10,0,0.0,0
353,9,train,Give me the child of Roger II of Sicily and father of William II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?roger2 dbo:spouse ?spouse .
  ?roger2 dbo:child ?child .
  
  ?child dbo:parent ?william2Parent .
  ?william2Parent dbo:child dbr:William_II_of_Sicily .

  FILTER(?roger2 = dbr:Roger_II_of_Sicily)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,12,train,Give me the father of Baeda Maryam I and reference to .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Baeda Maryam I. You can find this identifier by searching for Baeda Maryam I in DBpedia or using a SPARQL endpoint to query for his resource.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
943,18,train,Give me the father of Baeda Maryam I and reference to  and child of Dawit I.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?father ?child WHERE {
  ?baedaMaryamI dbo:father ?father .
  FILTER(STR(?baedaMaryamI) = ""Baeda Maryam I"")
  
  ?dawitI dbo:parent ?baedaMaryamI .
  FILTER(STR(?dawitI) = ""Dawit I"")

  BIND(?baedaMaryamI AS ?child)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
89,36,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?predecessor WHERE {
  # Saw Min Phyu and their spouse
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .
  
  ?spouse dbo:spouseOf ?sawMinPhyu .

  # Children of the spouse who are royalty
  ?child dbo:parent ?spouse ;
         a dbo:RoyalFamilyMember .

  # Grandchildren (children of the royal child)
  ?grandchild dbo:parent ?child .

  # Predecessor of one of these grandchildren
  ?predecessor dbo:predecessorOf ?grandchild .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
203,3,train,Give me the figure known as The Triple X's.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?description WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""The Triple X's""@en .
  OPTIONAL { ?band dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,33,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfSawMinHla WHERE {
  # Saw Min Hla has a child
  ?sawMinHla dbo:spouse ?parent1 .
  FILTER (str(?sawMinHla) = ""Saw Min Hla"") .

  ?parent1 dbp:child ?childOfSawMinHla .

  # The father of this child is married to someone who is royalty
  ?parent2 dbo:spouse ?royaltySpouse .
  FILTER (str(?parent2) = str(?parent1)) .

  ?royaltySpouse dbo:child ?royalChild .
  
  # This spouse's child is also royalty
  ?royalChild a dbo:Monarch . # Assuming 'Monarch' represents royalty

  # Return the child of Saw Min Hla
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,25,train,Give me the predecessor of the child of Saw Shwe Khet and spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find children of Saw Shwe Khet
  ?child dbo:parent dbr:Saw_Shwe_Khet .
  
  # Step 2: Check if the child is also a spouse of Saw Shwe Khet
  OPTIONAL { ?child dbo:spouse dbr:Saw_Shwe_Khet . }
  
  # Filter to ensure we have at least one spouse relationship (if applicable)
  FILTER EXISTS { ?child dbo:spouse dbr:Saw_Shwe_Khet . }

  # Step 3: Find the predecessor of this child
  OPTIONAL {
    ?predecessor dbo:successor ?child .
  }
}
ORDER BY ?predecessor",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
375,16,train,"Give me the parent of the native, that is an artist and a musical artist, of London and author of the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Artist ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:London .
  ?person dbo:musicalArtist true .
  ?work dbo:author ?person ;
        dbo:starring dbr:Vera_Lynn .
  ?person dbp:parent ?parent .
}
```",4,8,5,2,2,3,2,20,0,0,1,0,0.0,0
531,23,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Find the leader or office holder of the Madrid City Council in 2003
  ?officeHolder dbo:positionTitle ""Mayor""@en ;
                dbo:city dbr:Madrid ;
                dbo:termStart ?startYear .
  
  FILTER(?startYear <= ""2003-12-31""^^xsd:date && (?endYear >= ""2003-01-01""^^xsd:date || NOT EXISTS { ?officeHolder dbo:termEnd ?endYear }))

  # Find the residence of this office holder
  ?residence dbo:resident ?officeHolder .

  # Find the tenant of that residence
  ?tenant dbo:residesIn ?residence .
}
```

This query assumes:
- The leader's position is labeled as ""Mayor"" or similar, which might need adjustment based on actual DBpedia data.
- The office holder has a term start and possibly an end date to filter for the year 2003.
- The residence is linked via `dbo:resident` and `dbo:residesIn`.

Please note that this query may require adjustments depending on the exact structure of DBpedia's data at the time of querying.",3,4,4,3,1,3,3,71,0,0,375,0,0.0,0
756,35,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?managerVfLBochum ?letschTeam
WHERE {
  # Find VfL Bochum's manager in the 2007-08 season
  ?team a dbo:SoccerClub ;
        dbo:sportSeason ?season .
  
  FILTER(CONTAINS(LCASE(STR(?season)), ""2007–08""))
  FILTER(CONTAINS(LCASE(STR(?team)), ""vfl bochum""))

  ?managerVfLBochum dbo:managedTeam ?team .

  # Find Thomas Letsch's team
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  ?letschManager dbr:Thomas_Letsch dbo:managedTeam ?letschTeam .
}",4,10,5,2,2,3,3,71,0,0,1,0,0.0,0
531,13,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  ?person dbo:positionHeld ?commanderRole .
  ?commanderRole dbo:office ?office .
  
  ?person dbo:politicalParty ?party .
  FILTER EXISTS { ?person a dbo:Politician . }
  
  ?person dbo:officeHolder ?holder .
  FILTER EXISTS { ?person a dbo:OfficeHolder . }

  ?event dbo:location dbr:Central_African_Republic_Civil_War .
  ?person dbo:memberOf ?event .
}
```

This query attempts to find individuals who held a commander role, were politicians, and office holders during the Central African Republic Civil War. It selects distinct offices associated with these roles.",2,4,3,2,1,3,3,71,0,0,485,0,0.0,0
39,10,train,Give me the band of Bob Thompson (musician) and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Bob Thompson"" ;
          dbo:genre dbr:Singer .
  
  OPTIONAL { ?person dbo:memberOf ?band . }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
119,21,train,Give me the office of the leader of 2009 Galician regional election and tenant of Santiago de Compostela.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?office ?city
WHERE {
  # Find the leader of the winning party in the 2009 Galician regional election
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))
  
  ?party dbo:leader ?leader .
  ?election dbo:winner ?party .

  # Find the office held by this leader
  ?leader dbo:officeHeld ?office .

  # Check if this person was also the tenant of Santiago de Compostela
  ?leader dbo:city ?city .
  FILTER (STR(?city) = ""Santiago_de_Compostela"")

  # Optional: Add more details about the city or office if needed
  OPTIONAL { ?city rdfs:label ?cityLabel . }
  OPTIONAL { ?office rdfs:label ?officeLabel . }

  # Filter to ensure we get human individuals
  FILTER (STR(?leader) != """")
}
ORDER BY ?leader",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
737,32,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandchild ?predecessor WHERE {
  # Duke Philipp of Württemberg's child
  ?philippChild dbo:parent dbr:Duke_Philipp_of_W%C3%BCrttemberg ;
                dbo:child ?grandchild .

  # Philipp Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg ;
                 dbo:child ?albrechtGrandchild .

  # Predecessor of Philipp Albrecht's child
  ?albrechtGrandchild dbo:predecessor ?predecessor .
  
  # Find the grandchild that matches the predecessor
  FILTER (?grandchild = ?predecessor)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
23,12,train,Give me the entity in Colombia and party of Gustavo Petro and party of Roy Barreras.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES ?person { 
    dbr:Gustavo_Petro 
    dbr:Roy_Barreras 
  }
  
  ?person dbo:politicalParty ?party .
  FILTER (lang(?party) = 'en')
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia.
- Selects entities (`?person`) and their political parties (`?party`).
- Filters for Gustavo Petro and Roy Barreras using `VALUES`.
- Retrieves the political party associated with each person, ensuring the results are in English.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
225,6,train,Give me the entity in Japan and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInJapan ?birthPlace WHERE {
  dbr:Chieko_Asakawa dbo:nationality dbr:Japan .
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
68,16,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of Isabella of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Philip I of Castile
  dbr:Philip_I_of_Castile dbo:spouse ?mother .
  
  # Find his children who are royalty
  ?child dbo:parent dbr:Philip_I_of_Castile ;
         a dbo:Monarch ;
         dbo:parent ?mother .

  # Determine which child has Isabella of Austria as a parent
  ?child dbo:parent dbr:Isabella_of_Austria .
  
  # Retrieve the father of this identified child
  ?child dbo:father ?father .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
412,11,train,Give me the war of the awardee of 30.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war WHERE {
  ?award dbo:recipient ?awardee .
  FILTER (str(?award) = ""Nobel_Prize_in_Physics"" || str(?award) = ""Nobel_Prize_in_Chemistry"" || str(?award) = ""Nobel_Prize_in_Medicine"" || str(?award) = ""Nobel_Prize_in_Literature"" || str(?award) = ""Nobel_Peace_Prize"") .
  ?awardee dbo:memberOf ?organization .
  ?organization dbo:member ?person .
  ?person dbo:occupation dbr:Military_personnel .
  ?person dbo:participatedIn ?war .
}
```

This query assumes:
- You are looking for Nobel Prize awardees (as an example of ""30"").
- The awardee might be associated with a military organization.
- The person is involved in a war.

You may need to adjust the specific award or add more context based on what ""30"" refers to. This query can be refined further if you have more details about the award or the type of association you are interested in.",2,2,3,2,1,2,3,28,0,0,526,0,0.0,0
468,10,train,"Give me the father, that is a royalty, of the parent of Martin of Aragon.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Martin_of_Aragon> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Martin of Aragon
  ?martin a dbo:Person ;
          foaf:name ""Martin of Aragon""@en .
  
  # Find his parent (mother or father)
  OPTIONAL { ?martin dbo:parent ?parent . }
  
  # Ensure the parent is royalty and find their father
  ?parent a dbo:Monarch ;
          dbo:father ?father .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
80,19,train,Give me the actor of the movie with  and actor of ATL (film).,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorMatrix ?actorAtl
WHERE {
  # Actors of ""The Matrix""
  dbr:The_Matrix dbo:starring ?actorMatrix .
  
  # Actors of ""ATL (film)""
  dbr:ATL_(2006_film) dbo:starring ?actorAtl .
}
```",3,3,4,2,2,3,3,71,0,0,10,0,0.0,0
89,35,train,Give me the child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParent
WHERE {
  # Min Hla Htut of Pyakaung's parent
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en .
  ?parent dbo:spouse ?minHlaHtut .

  # Saw Shwe Khet's child
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  ?child dbo:parent ?sawShweKhet .

  # Predecessor of Saw Shwe Khet's child
  ?predecessor dbo:successor ?child .

  # Child of Min Hla Htut's parent
  ?childOfParent dbo:parent ?parent .
  
  FILTER(?child = ?predecessor)
}
```

This query assumes that the relationships are directly available in DBpedia and uses `foaf:name` for identifying individuals. Adjustments might be necessary based on actual data availability.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
756,34,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager
WHERE {
  # Find the successor of the 2006–07 VfL Bochum season
  ?season1 a dbo:FootballLeagueSeason ;
           dbo:sportsTeam dbr:VfL_Bochum ;
           dbo:startDate ?start1 .
  
  FILTER(YEAR(?start1) = 2006 && MONTH(?start1) = 10) # Assuming the start date is October 2006

  ?season2 a dbo:FootballLeagueSeason ;
           dbo:sportsTeam dbr:VfL_Bochum ;
           dbo:startDate ?start2 .
  
  FILTER(YEAR(?start2) > YEAR(?start1)) # Find the next season
  
  # Ensure it's the immediate successor
  MINUS {
    ?season3 a dbo:FootballLeagueSeason ;
             dbo:sportsTeam dbr:VfL_Bochum ;
             dbo:startDate ?start3 .
    FILTER(YEAR(?start3) > YEAR(?start1) && YEAR(?start3) < YEAR(?start2))
  }

  # Find the manager of the player associated with a sports club and organization that is also a soccer club
  ?player dbo:playsFor ?club ;
          dbo:manager ?manager .
  
  ?club a dbo:SoccerClub, dbo:SportsOrganization, dbo:Organisation .

  # Find the manager of the 2020–21 SBV Vitesse season
  ?season3 a dbo:FootballLeagueSeason ;
           dbo:sportsTeam dbr:SBV_Vitesse ;
           dbo:startDate ?start3 .
  
  FILTER(YEAR(?start3) = 2020 && MONTH(?start3) = 8) # Assuming the start date is August 2020

  ?season4 a dbo:FootballLeagueSeason ;
           dbo:sportsTeam dbr:SBV_Vitesse ;
           dbo:manager ?manager2 .
  
  FILTER(YEAR(?start3) < YEAR(?start4)) # Ensure it's the same season
  
  # Return the manager
  VALUES ?manager { ?manager }
}",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
80,30,train,Give me the actor of ATL (film) and professional in the alter ego of The Shadow and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Actor of ATL (film)
  ?atlFilm dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?atlFilm), ""http://dbpedia.org/resource/ATL_(2006_film)""))

  # Actor with alter ego The Shadow
  ?shadowCharacter dbo:portrayedBy ?actor .
  FILTER(STRSTARTS(STR(?shadowCharacter), ""http://dbpedia.org/resource/The_Shadow""))

  # Actor of Shelby Oaks
  ?shelbyOaksFilm dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?shelbyOaksFilm), ""http://dbpedia.org/resource/Shelby_Oaks""))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
585,13,train,"Give me the native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?award dbo:location dbr:New_York_(state) .
  ?person dbo:recipientOf ?award .
  ?person dbo:nationality dbr:United_States .
  ?person a dbo:Settlement .
  ?award dbo:placeOfBirth ?native .
}
```

This query does the following:
- Filters awards located in New York (state).
- Finds persons who are recipients of these awards.
- Ensures these persons have American nationality and are classified as settlements.
- Retrieves the place of birth (or native) of the award.",3,5,4,3,1,3,2,20,0,0,8569,0,0.0,0
263,6,train,"Give me the native of Middlesex and parent of Mary Elphinstone, Lady Elphinstone.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person dbo:nativePlace dbr:Middlesex .
  ?person dbo:child dbr:Mary_Elphinstone_Lady_Elphinstone .
  BIND(?person AS ?parent)
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
628,41,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist dbr:ArtistX .

  # Band members of the associated artist who are also musical artists
  dbr:ArtistX dbo:musicalArtist ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Ensure they have the same birth name as Bobby Shmurda
  dbr:Bobby_Shmurda dbp:birthName ""Bobby Shmurda"" .
  ?bandMember dbp:birthName ""Bobby Shmurda"" .

  # Ensure they are native to Florida
  ?bandMember dbo:nativePlace dbr:Florida .
}
```

Note: Replace `dbr:ArtistX` with the actual DBpedia resource for Bobby Shmurda's associated musical artist once identified.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
258,15,train,"Give me the establishment of the founding date of the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina and alma mater of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/foundingDate> ?v1 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/foundingDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university ?establishmentDate WHERE {
  # Luiza Erundina's alma mater
  ?luiza dbo:almaMater dbr:University_of_São_Paulo .
  
  # Eleonora Menicucci's alma mater
  ?eleonora dbo:almaMater dbr:University_of_São_Paulo .

  # University of São Paulo details
  dbr:University_of_São_Paulo a dbo:University ;
    dbo:foundingDate ?establishmentDate .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
375,14,train,"Give me the parent of the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/postalCode> "","" . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?location a dbo:Settlement ;
            dbo:country dbr:United_Kingdom ;
            rdfs:label ?settlementLabel .
  
  FILTER (lang(?settlementLabel) = 'en' && regex(str(?settlementLabel), ""England""))

  ?artist dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace ?location ;
          a dbo:MusicalArtist .

  ?parent dbo:child ?artist .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
531,3,train,"Give me the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2003)
  ?election dbo:place dbr:Madrid_City_Council_Election_2003 .
  ?officeHolder dbo:positionHeld ?position .
  ?position dbo:officeHolder ?leader .
  ?leader a dbo:Politician .
}
```

This query does the following:
- It selects entities that are related to an election (`?election`) held in 2003.
- Filters for elections specifically associated with Madrid City Council.
- Identifies office holders (`?officeHolder`) and their positions (`?position`).
- Retrieves leaders who hold these positions, ensuring they are classified as politicians.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
609,41,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Governor of Virginia (Glenn Youngkin)
  VALUES ?governor { dbr:Glenn_Youngkin }
  
  # Vince Gilligan's award (Emmy Award)
  VALUES ?awardRecipient { dbr:Vince_Gilligan }
  
  # Cece Bell
  VALUES ?author { dbr:Cecilie_Caroline_Bell }

  {
    ?governor dbo:birthPlace ?birthPlace .
    BIND(?governor AS ?person)
  } UNION {
    ?awardRecipient dbo:birthPlace ?birthPlace .
    FILTER EXISTS { 
      ?awardRecipient dbo:award dbr:Emmy_Award .
    }
    BIND(?awardRecipient AS ?person)
  } UNION {
    ?author dbo:birthPlace ?birthPlace .
    BIND(?author AS ?person)
  }
}",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
270,1,train,Give me the person decedent at Melbourne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Melbourne .
}
```

This query selects individuals (`?person`) who have an associated death place (`dbo:deathPlace`) of Melbourne (`dbr:Melbourne`). The `PREFIX` declarations are used to define common namespaces for DBpedia resources and properties.",1,1,2,1,1,2,2,9,0,0,809,0,0.0,0
756,61,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and native of the administration, that is a country, of the leader of West Germany.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/manager> ?v1 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the leader of West Germany
  ?leader a dbo:Chancellor ;
          dbo:nationality dbr:Germany ;
          dbo:country dbr:West_Germany .

  # Find the administration and country
  ?administration dbo:country ?country .
  
  # Find the person born on 1968-08-26 who is a sports manager
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          a dbo:SportsManager ;
          dbo:nationality ?country .

  # Ensure the person is native of the administration's country
  ?administration dbp:leader ?leader .
  
  # Find the team managed by this sports manager
  ?team dbo:manager ?person ;
        a (dbo:SoccerClubSeason | dbo:SportsSeason | dbo:SportsTeamSeason) .

  # Get the manager of the team
  ?team dbo:manager ?manager .
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
557,34,train,"Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?character WHERE {
  # Find the producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  # Find the fictional character associated with Kent Allard
  ?character dbo:alterEgo dbr:Kent_Allard .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,18,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```

This query uses the `dbo:birthPlace` property to find the birthplaces of the specified individuals. Make sure that the resource identifiers (`dbr:Vince_Gilligan`, `dbr:Cecily_Bell`, and `dbr:Glenn_Youngkin`) are correct in DBpedia.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
119,56,train,"Give me the tenant of Spain and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party ?roleInGalicia WHERE {
  # Identify José Luis Rodríguez Zapatero as the leader of Spain in 2009
  dbr:José_Luis_Rodríguez_Zapatero dbo:positionHeld dbr:Prime_Minister_of_Spain .
  
  # Ensure he is associated with the Spanish Socialist Workers' Party
  dbr:José_Luis_Rodríguez_Zapatero dbo:memberOf dbr:Spanish_Socialist_Workers'_Party .

  # Retrieve his role or involvement in the context of the Galician regional election
  OPTIONAL {
    ?roleInGalicia dbo:leader dbr:José_Luis_Rodríguez_Zapatero .
    ?roleInGalicia dbo:election dbr:2009_Galician_regional_election .
  }

  # Bind variables for clarity in results
  BIND(dbr:José_Luis_Rodríguez_Zapatero AS ?leader)
  BIND(dbr:Spanish_Socialist_Workers'_Party AS ?party)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
905,6,train,"Give me the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?charles dbo:father ?father .
  ?charles a dbr:Charles_I_of_Hungary .
  ?father a ?royaltyClass .
  FILTER EXISTS { ?royaltyClass rdfs:subClassOf* dbo:Monarch }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
159,24,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?commander WHERE {
  # Find the writer of ""Always the Love Songs""
  ?album dbo:title ""Always the Love Songs""@en .
  ?album dbo:artist ?writer .

  # Find a commander in the Great Turkish War
  ?person dbo:nationality dbr:Ottoman_Empire ;
          dbo:occupation dbr:Military_person ;
          dbo:wikiPageDisambiguates ?disambiguation .
  FILTER(CONTAINS(LCASE(?disambiguation), ""great turkish war""))

  BIND(?person AS ?commander)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
78,23,train,"Give me the band member of the associated musical artist of David Paton and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember1 ?bandMember2 WHERE {
  # Step 1: Find David Paton's associated musical artist
  ?davidPaton dbo:associatedMusicalArtist ?artist1 .
  
  FILTER (str(?davidPaton) = ""David_Paton"")

  # Step 2: Get band members of the first artist
  ?artist1 dbo:bandMember ?bandMember1 .

  # Step 3: Find Stuart McBeath Tosh as a musical artist
  ?stuartMcbeathTosh dbo:birthDate ?date .
  
  FILTER (str(?stuartMcbeathTosh) = ""Stuart_McBeath_Tosh"")

  # Step 4: Get associated musical artist for Stuart McBeath Tosh
  ?stuartMcbeathTosh dbo:associatedMusicalArtist ?artist2 .

  # Step 5: Get band members of the second artist
  ?artist2 dbo:bandMember ?bandMember2 .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
492,13,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of Carolyn Jones.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorDeathPlace ?carolynJonesDeathPlace WHERE {
  # Find the actor of ""The Sky Ranger"" (1928)
  ?film dbo:starring ?actor .
  ?film rdfs:label ""The Sky Ranger""@en .
  FILTER(STRSTARTS(STR(?film), STR(dbr:)))

  # Get the death place of this actor
  ?actor dbo:deathPlace ?actorDeathPlace .

  # Find Carolyn Jones and her death place
  dbr:Caryn_Jones dbo:deathPlace ?carolynJonesDeathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
468,13,train,"Give me the reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childName WHERE {
  # Find Alfonso IV of Aragon
  dbr:Alfonso_IV_of_Aragon dbo:spouse ?spouse .
  
  # Find children (descendants) of Alfonso IV
  ?spouse dbo:child ?child .
  ?child dbo:parent dbr:Alfonso_IV_of_Aragon .

  # Filter for royalty among the children
  ?child a dbo:Monarch ;
         rdfs:label ?childName .
  
  FILTER (LANG(?childName) = 'en')
}
ORDER BY ?childName",3,4,4,3,1,3,2,20,0,0,17,0,0.0,0
412,5,train,Who is the awardee of 30?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:number ""30"" .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
89,55,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung and predecessor of the child of Saw Shwe Khet.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Myat Hpone Pyo's father
  ?myathponepyo dbo:father ?father .

  # Step 2: Find the spouse of Myat Hpone Pyo's father who is royalty
  ?father dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .  # Assuming 'Monarch' represents royalty

  # Step 3: Identify Min Hla Htut's parent
  dbr:Min_Hla_Htut_of_Pyakaung dbo:parent ?minhlaparent .

  # Step 4: Find the predecessor of Saw Shwe Khet's child
  ?sawshweket dbo:child ?child .
  ?predecessor dbo:succeededBy ?child .

  # Ensure all entities are connected through their relationships
  FILTER(?father = ?minhlaparent)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
119,36,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?administration dbo:country dbr:Spain .
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party .
  ?administration dbo:leader ?tenant .
  
  OPTIONAL { 
    ?feijoo dbo:office ""President of Galicia""@en ;
            dbo:memberOf ?oppositionRole .
    
    ?oppositionRole dbo:member ?tenant .
  }
}
```

This query does the following:
- Filters for administrations in Spain (`dbo:country dbr:Spain`).
- Ensures the administration is associated with the Spanish Socialist Workers' Party (`dbo:party dbr:Spanish_Socialist_Workers'_Party`).
- Retrieves the leader of such an administration (`dbo:leader ?tenant`).
- Optionally checks if Alberto Núñez Feijóo, in his role as President of Galicia, is part of any opposition role that might involve the tenant.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
345,8,train,Give me the reference to Mitaka and region of the time zone of Japan.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Mitaka""@en . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mitakaUri ?timeZoneRegion
WHERE {
  # Find Mitaka in Japan and get its URI
  dbr:Mitaka_Municipality a dbo:PopulatedPlace ;
                          dbo:country dbr:Japan ;
                          rdfs:label ""Mitaka""@en .
  
  # Get the time zone of Mitaka
  ?mitakaUri dbo:timeZone ?timeZone .

  # Find the region associated with this time zone
  ?timeZone dbo:region ?timeZoneRegion .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
398,15,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin and player in Aleksandr Filimonov.",SELECT ?result WHERE { <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?clubNickName WHERE {
  # Denis Kolodin's club
  OPTIONAL { 
    ?kolodin dbo:playsFor ?denisClub .
    ?denisClub rdfs:label ?denisClubLabel .
    FILTER (CONTAINS(LCASE(?denisClubLabel), ""denis kolodin""))
    ?denisClub dbo:nickname ?clubNickName .
  }
  
  # Aleksandr Filimonov's club
  OPTIONAL { 
    ?filimonov dbo:playsFor ?aleksandrClub .
    ?aleksandrClub rdfs:label ?aleksandrClubLabel .
    FILTER (CONTAINS(LCASE(?aleksandrClubLabel), ""aleksandr filimonov""))
    ?aleksandrClub dbo:nickname ?clubNickName .
  }
}
```

This query attempts to find the clubs associated with Denis Kolodin and Aleksandr Filimonov by searching for their names in the `rdfs:label` of the club entities. It then retrieves any nicknames (`dbo:nickname`) those clubs might have.",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
871,6,train,"Who is the child of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Frederick_Stanley,_16th_Earl_of_Derby"")
  
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
531,29,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder ?roleInCARWar ?miguelMauraOffice
WHERE {
  # Find Miguel Maura's office
  dbr:Miguel_Maura dbo:positionHeld ?miguelMauraOffice .
  
  # Find an office holder and politician in the Central African Republic Civil War
  ?officeHolder a dbo:Politician ;
               dbo:occupation ?roleInCARWar ;
               dbo:memberOf ?carWarEntity .

  # Ensure the role is related to the Central African Republic Civil War
  ?carWarEntity rdfs:label ""Central African Republic Civil War""@en .
  
  # Optional: Find any connection between Miguel Maura's office and the CAR war office holder
  OPTIONAL { ?miguelMauraOffice dbo:relatedTo ?officeHolder }
}
```

This query attempts to:

- Identify Miguel Maura's office.
- Locate an individual who is both a politician and involved in the Central African Republic Civil War.
- Optionally, find any direct or indirect connection between these roles.",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
769,10,train,"Give me the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Identify Hong Kong C as a sports club, team, and soccer club
  dbr:Hong_Kong_C dbo:type/dbo:subClassOf* dbo:Sports_Club ;
                  dbo:type/dbo:subClassOf* dbo:Soccer_Club ;
                  dbo:type/dbo:subClassOf* dbo:Sports_Team .

  # Find the manager of Hong Kong C
  dbr:Hong_Kong_C dbo:manager ?manager .

  # Ensure the manager is a sports manager and soccer manager
  ?manager dbo:type/dbo:subClassOf* dbo:Sports_Manager ;
           dbo:type/dbo:subClassOf* dbo:Soccer_Manager .
}
```",2,8,3,2,1,3,2,20,0,0,1,0,0.0,0
871,30,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politician ?father WHERE {
  ?person dbo:spouse ?frederickStanley .
  ?frederickStanley foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .

  ?child dbo:parent ?person ;
         dbo:parent ?frederickStanley ;
         dbo:occupation dbp:Politician .

  ?politician dbo:parent ?child .
  
  OPTIONAL { ?politician dbo:father ?father . }
}
```

This query does the following:
- Identifies individuals who are spouses of Frederick Stanley, 16th Earl of Derby.
- Finds their children who have an occupation as a politician.
- Retrieves the father of this politician.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
633,15,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine and parent of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  ?antoine a dbo:Duke ;
           foaf:name ""Antoine, Duke of Lorraine""@en .

  # Child of Antoine who is royalty
  ?child dbo:parent ?antoine ;
         a dbo:Monarch .

  # Parent of the child (which is Antoine)
  ?parent dbo:child ?child .
  
  # Spouse of the parent (Antoine) who is royalty and noble
  ?spouse dbo:spouse ?parent ;
          a dbo:Monarch, dbo:NoblePerson .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
213,7,train,"Give me the birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?child dbo:parent dbr:Chiang_Ching-kuo .
  ?child dbo:occupation dbr:Politician .
  ?child dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
595,45,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of Back to Work (book) and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # USS Arcadia owner
  ?arcadia dbo:owner ?owner .
  FILTER(STRSTARTS(STR(?arcadia), ""http://dbpedia.org/resource/USS_Arcadia_(ID-1605)"")) .

  # Back to Work author
  ?book dbo:author ?author .
  FILTER(STRSTARTS(STR(?book), ""http://dbpedia.org/resource/Back_to_Work_(book)"")) .

  # Hillary Clinton's spouse
  ?clinton dbr:Hillary_Clinton dbo:spouse ?spouse .
  FILTER(STRSTARTS(STR(?spouse), ""http://dbpedia.org/resource/Bill_Clinton"")) .

  # Commander in a war that is both a disease and societal event
  ?war dbo:commander ?commander ;
       rdf:type dbo:MilitaryConflict ;
       dbo:relatedDisease ?disease ;
       dbo:societalEvent ?event .
  
  FILTER(STRSTARTS(STR(?war), ""http://dbpedia.org/resource/World_War_II"")) .

  # Linking entities
  VALUES ?entity { ?owner ?author ?spouse }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
595,57,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?person dbo:residence dbr:Chappaqua,_New_York ;
          dbo:spouse dbr:Hillary_Clinton ;
          dbo:officeHolderOf dbr:President_of_the_United_States ;
          dbo:commanderInWar dbr:Gulf_War .
  ?work dbo:author ?person ;
        a dbo:Book ;
        rdfs:label ?title .
  FILTER CONTAINS(LCASE(?title), ""my life"")
  BIND(?person AS ?author)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
668,22,train,Give me the associated musical artist of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?pacelyArtist ?joeyBBirthNamePerson
WHERE {
  # Assuming Pacely refers to a known artist or band, replace with the correct resource if needed
  dbr:Pacely dbo:musicalArtist ?pacelyArtist .

  # Find Joey B's birth name
  dbr:Joey_B dbo:birthday ?joeyBBirthDate ;
             foaf:name ""Joey B""@en .
  
  # Find person with the same birth name as Joey B
  ?person dbo:birthday ?joeyBBirthDate ;
          foaf:name ?birthName .
  
  FILTER(?birthName = (SELECT ?name WHERE {
    dbr:Joey_B foaf:name ?name .
  }))
}
```

This query assumes:
- ""Pacely"" is a known entity in DBpedia. You may need to replace `dbr:Pacely` with the correct resource if it's different.
- Joey B's birth name can be found using his DBpedia entry.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
595,18,train,Give me the spouse of Hillary Clinton and author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Hillary Clinton's spouse
  dbr:Hillary_Clinton dbo:spouse ?spouse .

  # Check if the spouse is an author of ""Back to Work""
  ?spouse dbo:authorBook dbr:Back_to_Work_(book) .

  # Check if the spouse was a commander in the Third Taiwan Strait Crisis
  ?spouse dbo:commanderInMilitaryOperation dbr:Third_Taiwan_Strait_Crisis .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
513,12,train,Give me the residence of the leader of Ulster Unionist Party and entity in United Kingdom.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?residence WHERE {
  ?party dbo:leader ?person .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""ulster unionist party"") && CONTAINS(LCASE(?name), ""leader""))
  
  OPTIONAL { 
    ?person dbo:residenceLocation ?residence .
  }
  
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:United_Kingdom .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
905,41,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
    dbr:Charles_I_of_Hungary dbo:father ?father .
    
    ?father dbo:parent ?grandfather .
    ?grandfather a dbo:Monarch .
    ?grandfather dbo:childOf dbr:Stephen_V_of_Hungary .

    dbr:Philip_I,_Prince_of_Taranto dbo:father ?philip_father .
    ?philip_father dbo:spouse ?spouse .
    
    FILTER (?grandfather = ?spouse)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
782,56,train,"Give me the reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName ?associatedArtist WHERE {
  # Find The Fabulous Thunderbirds and their real name
  dbr:The_Fabulous_Thunderbirds dbo:bandMember dbr:Kim_Wilson .
  
  OPTIONAL { 
    dbr:The_Fabulous_Thunderbirds dbo:alias ?realName .
  }
  
  # Find associated musical artist of Kim Wilson who is Nick Curran
  dbr:Kim_Wilson dbo:associatedBandMember ?associatedArtist .
  FILTER (str(?associatedArtist) = ""Nick_Curran"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,19,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  ?athlete a dbo:Athlete .
  ?athlete dbo:birthDate ""1955-02-22""^^xsd:date .
  
  # Find the team or club where both athletes played
  ?team dbo:player dbr:Sergio_Agüero ;
        dbo:player ?athlete .
}
```

This query does the following:
- Selects individuals who are classified as `dbo:Athlete`.
- Filters these individuals by their birth date to match February 22, 1955.
- Checks for a shared team or club (`?team`) where both Sergio Agüero and the athlete played.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
158,3,train,"Give me the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q1234568 wdt:P19 ?birthPlace .
  FILTER (isBlank(?birthPlace) != true)
  OPTIONAL { ?birthPlace wdt:P17 ?country . }
  FILTER EXISTS { ?birthPlace wdt:P17 ?country }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
203,53,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Triple Entente as an alliance
  ?alliance rdf:type dbo:MilitaryAlliance ;
            rdfs:label ""Triple Entente""@en .
  
  # Battle of Fort Royal
  ?battle rdf:type dbo:Battle ;
          rdfs:label ""Battle of Fort Royal""@en ;
          dbo:commander ?commander .

  # Robert Calder and his battles
  dbr:Robert_Calder dbo:participatedIn ?calderBattle .
  
  # Cape Finisterre battle
  ?calderBattle rdf:type dbo:Battle ;
                rdfs:label ""Battle of Cape Finisterre""@en .

  # Find the commander who is linked to both the Triple Entente and Robert Calder's battles
  OPTIONAL { ?commander dbo:nationality dbr:United_Kingdom . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,10,train,"Give me the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Step 1: Find Nate Newton and his associated band
  ?nateNewton a dbo:Musician ;
              foaf:name ""Nate Newton"" .
  
  ?band dbo:musicalArtist ?nateNewton ;
        a dbo:Band, dbo:Organization .

  # Step 2: Find the musical artist (organization) associated with that band
  ?associatedArtist dbo:musicalArtist ?band ;
                    a dbo:MusicalArtist, dbo:Organization .
}
```",2,5,3,2,1,3,2,20,0,0,15,0,0.0,0
742,7,train,"Give me the birthplace of the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?birthPlace WHERE {
  ?alumnus dbo:almaMater dbr:Plovdiv_University_Paisii_Hilendarski .
  OPTIONAL { ?alumnus dbo:birthPlace ?birthPlace . }
}
```

This query does the following:
- Uses `dbo:almaMater` to find individuals who have Plovdiv University ""Paisii Hilendarski"" as their alma mater.
- Retrieves the birthplace of these alumni using `dbo:birthPlace`.",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
246,11,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of Prince Omar bin Faisal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Find Prince Faisal bin Hussein
  ?faisal a dbo:Person ;
          dbp:name ""Faisal bin Hussein""@en .
  
  # Find his children who are royalty
  ?child dbo:spouseOrPartnerOf|dbo:child ?faisal ;
         a dbo:Royalty .

  # Identify Prince Omar bin Faisal
  ?omar a dbo:Person ;
        dbp:name ""Omar bin Faisal""@en ;
        (dbo:spouseOrPartnerOf|dbo:child) ?child .
  
  # Find the parent of Prince Omar bin Faisal
  ?parent dbo:spouseOrPartnerOf|dbo:child ?omar .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
39,61,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Step 1: Find Bob Thompson (musician) and his birth name
  ?bob a dbo:MusicalArtist ;
       foaf:name ""Bob Thompson"" ;
       dbo:birthName ?birthName .

  # Step 2: Identify Walter B. Gibson's fictional character that is also a comics character
  ?gibson a dbo:Person ;
          foaf:name ""Walter B. Gibson"" .
  
  ?character dbo:creator ?gibson ;
             a dbo:FictionalCharacter, dbo:ComicsCharacter .

  # Step 3: Find the person with the birth name matching the fictional character's alter ego
  ?person a dbo:MusicalArtist ;
          foaf:name ?alterEgo ;
          dbo:birthName ?birthName .
  
  # Step 4: Get the band associated with this person
  ?band a dbo:Band ;
        dbo:member ?person .

}
```

This query assumes that:
- Bob Thompson's birth name is linked to a fictional character created by Walter B. Gibson.
- The fictional character has an alter ego that matches the birth name of another musical artist.
- We are looking for the band associated with this second musical artist.",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
159,18,train,Give me the commander in Great Turkish War and reference to George Ducas and successor of Yurii Khmelnytsky.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?successor WHERE {
  # Find commanders in the Great Turkish War
  ?commander dbo:participatedInBattle ?battle .
  ?battle dbo:wikiPageRedirects dbr:Great_Turkish_War .

  # Reference to George Ducas
  OPTIONAL { 
    ?commander dbo:wikiPageDisambiguates dbr:George_Ducas .
  }

  # Successor of Yurii Khmelnytsky
  ?successor dbo:succeededBy ?yuriiKhmelnytsky .
  ?yuriiKhmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .

  # Ensure the commander is the same as the successor
  FILTER (?commander = ?successor)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
386,23,train,Give me the war of the awardee of Golden Sword for Bravery and entity in the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?birthPlaceEntity WHERE {
  # Find the awardee of the Golden Sword for Bravery and the associated war
  ?awardee dbo:award ""Golden Sword for Bravery"" .
  ?awardee dbo:participatedIn ?war .

  # Find the birthplace entity of Elena Žalinkevičaitė-Petrauskienė
  dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlaceEntity .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
595,17,train,"Give me the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find the DBpedia resource for USS Arcadia (ID-1605)
  dbr:USS_Arcadia_(ID-1605) dbo:owner ?owner .

  # Link the owner to wars
  ?owner dbo:participatedInWar ?war .

  # Filter wars that are both diseases and societal events
  ?war a dbo:Disease .
  ?war a dbo:SocietalEvent .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
871,20,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley"" ;
             dbo:title dbr:Earl_of_Derby .

  # His children
  ?child dbo:parent ?frederick .
  
  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley"" ;
          dbo:occupation dbr:Royal_Navy_officer .

  # The child who is also the parent of Victor Stanley
  ?child dbo:parent ?victor .
  
  # Find that child's parent (which should be Frederick Stanley)
  ?parent dbo:parent ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
59,2,train,Give me the residence of David Luckman.,SELECT ?result WHERE { <http://dbpedia.org/resource/David_Luckman> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  wd:Q123456 wdt:P1128 ?residence .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for David Luckman. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
119,47,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and office of the leader of 2009 Galician regional election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/residence> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant WHERE {
  ?person dbo:nationality dbr:Spanish ;
          dbo:country dbr:Spain .
  
  ?officeHolder dbo:electedDuring ?election .
  ?election dbo:date ""2009-01-01""^^xsd:date ;
            dbo:location dbr:Galicia, Spain .

  FILTER(?officeHolder = ?person)

  ?person dbo:residence ?residence .
  ?residence a dbo:Country .

  ?residence dbo:tenant ?tenant .
}
```

This query does the following:
- Selects individuals (`?person`) who are Spanish citizens and reside in Spain.
- Checks if these individuals held an office during the 2009 Galician regional election.
- Identifies their residence as a country.
- Retrieves the tenant of that country.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
384,7,train,"Give me the party of Bruno Retailleau and party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Bruno_Retailleau> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyRetailleau ?successorName ?partySuccessor WHERE {
  # Find Bruno Retailleau's political party
  dbr:Bruno_Retailleau dbo:politicalParty ?partyRetailleau .

  # Find Patrice Martin-Lalande's successor who is a politician and French
  OPTIONAL {
    ?successor dbo:predecessor dbr:Patrice_Martin-Lalande ;
              rdf:type dbo:Politician ;
              dbo:nationality dbr:France .
    ?successor rdfs:label ?successorName .
    FILTER (LANG(?successorName) = 'en')
    
    # Find the political party of the successor
    ?successor dbo:politicalParty ?partySuccessor .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
89,48,train,Give me the predecessor of the child of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Find Saw Shwe Khet's child
  ?child1 dbo:parent dbr:Saw_Shwe_Khet .
  
  # Find Minye Kyawswa's grandchild
  ?grandchild dbo:parent ?child2 .
  ?child2 dbo:parent dbr:Minye_Kyawswa .

  # Ensure the individual is both Saw Shwe Khet's child and Minye Kyawswa's grandchild
  FILTER (?child1 = ?grandchild)

  # Find the predecessor of this individual
  ?predecessor dbo:successor ?child1 .
}
```",5,5,6,3,2,3,3,71,1,0,0,1.0,1.0,1.0
119,20,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country
WHERE {
  # Find Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .

  # Find Álvaro Quirós' country of residence (tenant)
  dbr:Álvaro_Quirós dbo:nationality ?country .
}
```

This query assumes that:
- Alberto Núñez Feijóo's office is represented by the `positionHeld` property.
- Álvaro Quirós' country of residence (tenant) is represented by the `nationality` property.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
871,2,train,Give me the father of Arthur Stanley (politician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Arthur Stanley""@en .
  OPTIONAL { ?person dbo:father ?father . }
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
756,27,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?person a dbo:SportsManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date .
  
  ?teamSeason dbo:seasonType [a dbo:SoccerClub ; 
                              a dbo:SportsTeamSeason ;
                              a dbo:SportsSeason ] .

  ?teamSeason dbo:manager ?person .
  
  ?teamSeason dbo:team ?team .
  
  ?team dbo:manager ?manager .
}
```

This query does the following:

- Identifies a person who is a sports manager and was born on August 26, 1968.
- Finds team seasons that are of type SoccerClub, SportsTeamSeason, and SportsSeason.
- Links these team seasons to their managers.
- Retrieves the current manager of the soccer club associated with such a season.",3,7,4,3,1,3,3,71,0,0,5,0,0.0,0
472,14,train,"Give me the territory administered from Copenhagen and administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory ?administeredFromCopenhagen WHERE {
  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  VALUES ?prince { dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck }
  
  # Check if he had any administrative roles or titles
  OPTIONAL {
    ?prince dbo:positionHeld ?role .
    ?role dbp:administeredTerritory ?territory .
    
    # Filter territories administered from Copenhagen
    ?territory dbo:governmentSeat dbr:Copenhagen .
    BIND (TRUE AS ?administeredFromCopenhagen)
  }
  
  # If no direct role is found, check for any related administrative connections
  OPTIONAL {
    ?prince dbp:residence ?location .
    ?location dbo:governmentSeat dbr:Copenhagen .
    BIND (FALSE AS ?administeredFromCopenhagen) # Assuming residence implies indirect connection
  }
}
```

This query does the following:
- It identifies Prince Christian of Schleswig-Holstein-Sonderburg-Beck.
- It checks if he held any positions that involved administering territories.
- It filters these territories to see if they were administered from Copenhagen.

Note: The exact DBpedia resource identifiers and properties might need adjustments based on the current structure and availability in DBpedia. This query assumes certain relationships and may require refinement with actual data exploration.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
399,4,train,Give me the professional in Singer and band member of Emilia (Bulgarian singer).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional ?bandMember
WHERE {
  ?emilia a dbo:Singer .
  ?emilia rdfs:label ""Emilia (Bulgarian singer)""@en .
  OPTIONAL { ?emilia dbo:profession ?professional . }
  OPTIONAL { ?emilia dbp:memberOfBand ?bandMember . }
}
```",2,2,3,1,2,2,2,9,0,0,3,0,0.0,0
89,0,train,Give me the child of Saw Min Hla.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Saw Min Hla""@en .
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
585,15,train,"Give me the child of Linda Miller (actress) and native of the award, that is American and a settlement, of the awardee of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?settlement WHERE {
  # Linda Miller (actress) and her child
  ?linda a dbo:Actor ;
         foaf:name ""Linda Miller"" ;
         dbo:spouse ?partner .
  
  ?child dbo:parent ?linda ;
         dbo:nationality dbr:United_States .

  # Award associated with New York and its awardee
  ?award dbo:location dbr:New_York_City ;
         dbo:recipient ?awardee .

  # Awardee's native settlement
  ?settlement a dbo:Settlement ;
              dbo:nativeOf ?awardee .
  
  FILTER (?child = ?awardee)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
361,21,train,"Give me the professional in  and professional in Actor and actor of the album, that is a film and a work, of Lasso the Moon.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?film ?work WHERE {
  # Find the album ""Lasso the Moon""
  VALUES ?album { dbr:Lasso_the_Moon }
  
  # Identify professionals involved in acting
  ?actor dbo:profession dbr:Actor .
  
  # Link actors to the album through their involvement
  ?album dbo:artist ?actor ;
         dbo:genre ?work .

  OPTIONAL {
    # Check if there are films related to the album or actor
    ?film dbo:starring ?actor .
    FILTER EXISTS { ?film dbo:title ?title . }
  }

  OPTIONAL {
    # Identify works (broadly defined) associated with the album
    ?album dbo:work ?work .
  }
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
392,6,train,Give me the reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . },"```sparql
SELECT ?designer WHERE {
  ?car dbr:Aston_Martin_AMR1 ;
       dbo:manufacturer dbr:Aston_Martin ;
       dbo:designer ?designer .
}
```",2,2,3,2,1,2,2,9,0,0,98447,0,0.0,0
89,26,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Step 2: Find the child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch .

  # Step 3: Determine the father of this royal child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .

  # Step 4: Find the spouse of that father
  ?spouse dbo:spouse ?father .
}
```

This query assumes:
- `dbo:Person` and `dbo:Monarch` are used to identify people and royalty.
- Relationships like `dbo:parent`, `dbo:child`, and `dbo:spouse` are available in DBpedia.",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
782,54,train,"Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickCurranArtist ?fabulousThunderbirdsRealName ?bandOfPersonBorn1945
WHERE {
  # Find the associated musical artist of Nick Curran
  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedBandOrMusicalArtist ?nickCurranArtist .
  }

  # Identify the real name of The Fabulous Thunderbirds
  OPTIONAL {
    dbr:The_Fabulous_Thunderbirds dbp:realName ?fabulousThunderbirdsRealName .
  }
  
  # Determine the band of a person born on 1945-03-30 who is also a musical artist
  OPTIONAL {
    ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
            dbo:associatedBandOrMusicalArtist ?bandOfPersonBorn1945 .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
609,57,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of El Deafo and birth place of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?ceceBellBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Paulus Powell's birthplace
  VALUES (?paulusPowell) { dbr:Paulus_Powell }
  
  # Governor of the region where Paulus Powell was born
  ?paulusPowell dbo:birthPlace ?region .
  ?governor dbo:governmentRole ?role .
  ?role dbo:officeHolder ?person .
  FILTER(?person = ?paulusPowell)
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Cece Bell's birthplace
  VALUES (?ceceBell) { dbr:Cecily_Bell }
  ?ceceBell dbo:birthPlace ?ceceBellBirthPlace .

  # Vince Gilligan's birthplace
  VALUES (?vinceGilligan) { dbr:Vince_Gilligan }
  ?vinceGilligan dbo:birthPlace ?vinceGilliganBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
557,37,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  ?actor dbo:starringIn dbr:Johnny_Doughboy .
  ?person dbo:produced dbr:A_Star_Is_Born_(1937_film) .
  FILTER (?actor = ?person)
  ?work dbo:creator ?person .
  ?work dbo:producer ?producer .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
288,1,train,Give me the theme of Dikhawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme WHERE {
  VALUES ?film { dbr:Dikhawa }
  ?film dbo:genre ?theme .
}
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
609,50,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Step 1: Find the author of ""El Deafo"" and their birthplace
SELECT ?authorBirthPlace WHERE {
    ?book dbo:title ""El Deafo""@en .
    ?book dbo:author ?author .
    ?author dbo:birthPlace ?authorBirthPlace .
}

UNION

# Step 2: Find the governor of the author's birthplace if it is a region or administrative region
SELECT ?governor WHERE {
    # Assuming we have the birthplace from the previous query
    VALUES (?region) { <URI_of_author_birth_place> }
    
    ?region dbo:governmentHead ?governor .
    ?governor rdf:type dbo:Politician .
}

UNION

# Step 3: Find Paulus Powell's birthplace, which should be a region or administrative region
SELECT ?paulusBirthPlace WHERE {
    dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
    ?paulusBirthPlace rdf:type dbo:AdministrativeRegion .
}

UNION

# Step 4: Find the governor of Paulus Powell's birthplace
SELECT ?governor WHERE {
    # Assuming we have the birthplace from the previous query
    VALUES (?region) { <URI_of_paulus_birth_place> }
    
    ?region dbo:governmentHead ?governor .
    ?governor rdf:type dbo:Politician .
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
633,8,train,Give me the parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Step 1: Find Dorothea of Lorraine
  ?dorothea a dbo:Person ;
           rdfs:label ""Dorothea of Lorraine""@en .

  # Step 2: Find her father
  ?father dbo:child ?dorothea .

  # Step 3: Find the parent of her father
  ?parent dbo:child ?father .
}
```",2,2,3,2,1,3,2,20,1,2,1,0.3333333333333333,0.5,0.4
23,14,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?countryEntity WHERE {
  # Find Roy Barreras' political party
  OPTIONAL { 
    dbr:Roy_Barreras dbo:politicalParty ?party .
  }
  
  # Find Daniel Elahi Galán's country
  OPTIONAL {
    dbr:Daniel_Elái_Galán dbo:nationality ?country .
    ?country dbo:wikiPageRedirects ?countryEntity .
  }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
731,0,train,Give me the force of William Tennant (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank WHERE {
  ?person dbo:givenName ""William"" .
  ?person dbo:familyName ""Tennant"" .
  ?person dbo:occupation dbr:Royal_Navy_officer .
  OPTIONAL { ?person dbo:militaryRank ?rank . }
}
```

This query attempts to find the military rank of a person named William Tennant who is identified as a Royal Navy officer. It uses DBpedia's ontology properties like `dbo:givenName`, `dbo:familyName`, and `dbo:militaryRank`.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
723,4,train,"Give me the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Nate Newton""@en .
  
  ?person dbo:associatedBand ?band .

  FILTER EXISTS { ?band a dbo:MusicalGroup . }
  FILTER EXISTS { ?band a dbo:Organization . }

  SERVICE <http://dbpedia.org/sparql> {
    ?band rdfs:label ?label .
    FILTER (lang(?label) = 'en')
  }
}
```",1,3,2,1,1,3,2,20,0,0,5,0,0.0,0
158,1,train,Give me the native of Grand Duchy of Finland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language WHERE {
  # Find the resource for Grand Duchy of Finland
  ?grandDuchy dbr:Grand_Duchy_of_Finland .
  
  # Look for languages associated with this region
  ?grandDuchy dbo:language ?language .
}
```",1,1,2,1,1,2,3,28,0,0,355,0,0.0,0
89,45,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of Saw Min Hla and spouse of Saw Shwe Khet.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find Saw Min Phyu's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Saw_Min_Phyu.
  
  # Identify the child of this spouse who is royalty
  ?child dbo:parent ?spouse;
         a dbo:RoyalFamilyMember.

  # Ensure this child is also a child of Saw Min Hla and spouse of Saw Shwe Khet
  ?child dbo:parent dbr:Saw_Min_Hla.
  ?child dbo:spouse dbr:Saw_Shwe_Khet.

  # Find the predecessor of this individual
  ?predecessor dbo:successor ?child.
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
468,1,train,Give me the child of Alfonso IV of Aragon.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Alfonso_IV_of_Aragon dbo:child dbr:?child .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
140,7,train,"Give me the commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find George Pickett
  VALUES ?pickett { dbr:George_Pickett }
  
  # Identify wars or battles he was involved in
  ?event dbo:participant ?pickett .
  ?event a dbo:MilitaryConflict .

  # Find the commander of that event
  ?event dbo:commander ?commander .
}
```

This query does the following:
- It identifies George Pickett using his DBpedia resource.
- It looks for military conflicts (societal events) in which he participated.
- It retrieves the commanders of those events.",2,3,3,2,1,3,2,20,0,0,26,0,0.0,0
723,14,train,"Give me the band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Identify Nate Newton as a musician
  dbr:Nate_Newton dbo:musicalArtist dbr:Bands_He_Is_Associated_With .

  # Step 2: Find the bands or organizations he is associated with
  dbr:Bands_He_Is_Associated_With a ?bandType .
  
  # Step 3: Check if any of those bands are also considered organizations
  FILTER(?bandType IN (dbo:Band, dbo:MusicalGroup)) .

  # Step 4: Retrieve members of such bands
  dbr:Bands_He_Is_Associated_With dbo:member ?bandMember .
}
```",3,6,4,3,1,3,2,20,0,0,112,0,0.0,0
687,43,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInMolina ?actorSoccerAthlete ?teamOfAimar
WHERE {
  # Find players associated with Juan Carlos Molina
  ?molina a dbo:FootballPlayer ;
          foaf:name ""Juan Carlos Molina"" .
  
  ?playerInMolina dbo:playsFor ?molina .

  # Find actor who is also a soccer player and athlete, linked to a film by Manuel Huerga
  ?actor a dbo:SoccerPlayer, dbo:Athlete, dbo:Actor ;
         foaf:name ?actorName .
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:starring ?actor .

  # Find teams associated with Pablo Aimar
  ?aimar a dbo:FootballPlayer ;
         foaf:name ""Pablo Aimar"" .
  
  ?teamOfAimar dbo:playsFor ?aimar .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
871,53,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child .

  # The child is a politician
  ?child rdf:type dbo:Politician .

  # This child has children who are the parent of an awardee of Rodney Lees and Edward Stanley, 17th Earl of Derby
  ?child dbo:child ?grandChild .
  
  # Grandchild is the parent of an awardee of Rodney Lees
  ?grandChild dbo:parent ?awardeeOfRodneyLees .

  # Grandchild is also the parent of Edward Stanley, 17th Earl of Derby
  ?grandChild dbo:parent dbr:Edward_Stanley,_17th_Earl_of_Derby .

  # Find the father of this child
  ?child dbo:father ?father .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,51,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of the residence, that is a country, of Álvaro Quirós.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationTenant ?countryTenant
WHERE {
  # Find the administration related to the Spanish Socialist Workers' Party
  ?party dbo:member dbr:Álvaro_Quirós .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .

  # Find the tenant of this administration
  ?administration dbo:head ?administrationTenant .
  ?party dbo:office ?administration .

  # Find Álvaro Quirós's country of residence
  ?person dbr:Álvaro_Quirós ;
          dbo:nationality ?country .

  # Find the tenant (leader) of this country
  ?country dbo:headOfState ?countryTenant .
}
```",5,7,6,3,2,3,3,71,0,0,23,0,0.0,0
103,30,train,Give me the actor of Dispatches from Elsewhere and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in ""Dispatches from Elsewhere""
  ?show dbr:Dispatches_from_Elsewhere dbo:starring ?actor .
  
  # Ensure the actor is also known for being an alter ego of The Shadow
  OPTIONAL { 
    ?actor dbo:alterEgo dbr:The_Shadow .
  }
  
  # Ensure the actor has a profession as an Actor
  ?actor dbo:occupation dbr:Actor .

  FILTER EXISTS {
    ?actor dbo:alterEgo dbr:The_Shadow .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,33,train,"Give me the native of the administration, that is a country, of the leader of West Germany and manager of VfL Bochum.",SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Find Konrad Adenauer as the leader of West Germany and manager of VfL Bochum
  ?person a dbo:Person ;
          foaf:name ""Konrad Adenauer""@en ;
          dbo:spouse ?spouse .
  
  OPTIONAL { ?person dbo:positionHeld dbr:Chancellor_of_West_Germany . }
  OPTIONAL { ?person dbo:managerOfTeam dbr:VfL_Bochum . }

  # Get the native place of Konrad Adenauer
  ?person dbo:nativePlace ?nativePlace .
}
```

This query assumes that DBpedia has structured data about Konrad Adenauer's roles and his connection to VfL Bochum. It retrieves the `nativePlace` property for this individual.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
159,28,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find a commander in the Russo-Polish War who is also a politician and office holder
  ?commander dbo:occupation dbr:Politician ;
             dbo:officeHolder true ;
             dbo:participatedInMilitaryConflict dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Find the successor of this commander in the Great Turkish War
  ?commander dbo:succeededBy ?successor .
  ?successor dbo:participatedInMilitaryConflict dbr:Great_Turkish_War .

  # Optional: Reference to George Ducas for verification or context
  OPTIONAL { ?commander dbo:relatedTo dbr:George_Ducas . }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
557,39,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Step 1: Find the actor of ""High Society Blues""
  ?actor dbo:actedIn dbr:High_Society_Blues .
  
  # Step 2: Find the producer of ""The Adventures of Tom Sawyer (1938 film)""
  ?person dbo:produced dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .
  
  # Step 3: Identify the common individual
  FILTER (?actor = ?person)
  
  # Step 4: Find their claim to fame, which includes a movie and a work
  ?claimToFame dbo:hasPart ?movie ;
               dbo:hasPart ?work .
  
  # Ensure the person is associated with this claim to fame
  ?person dbo:claimToFame ?claimToFame .
  
  # Step 5: Retrieve the producer of that claim to fame
  ?producer dbo:produced ?movie .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
668,47,train,"Give me the associated musical artist of the person born as Elorm Kabu Amenyah and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify Stonebwoy by his birth name and profession as a writer of ""The Live Anthology""
  dbr:Stonebwoy
    dbo:birthName ""Elorm Kabu Amenyah"" ;
    dbo:profession dbr:Writer ;
    dbo:work dbr:The_Live_Anthology .

  # Find associated musical artists
  ?artist dbo:associatedMusicalArtist dbr:Stonebwoy .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
756,41,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?heussNativePlace .
  
  # Find the country of his native place
  ?heussNativePlace dbo:country ?heussNativeCountry .

  # Managers of VfL Bochum in 2007–08 and SBV Vitesse in 2020–21
  {
    SELECT DISTINCT ?manager WHERE {
      dbr:VfL_Bochum_Saison_2007-08 dbo:coach ?manager .
      FILTER(YEAR(NOW()) - YEAR(?manager dbo:birthDate) > 18)
    }
  } UNION {
    SELECT DISTINCT ?manager WHERE {
      dbr:SBV_Vitesse_Saison_2020-21 dbo:coach ?manager .
      FILTER(YEAR(NOW()) - YEAR(?manager dbo:birthDate) > 18)
    }
  }

  # Find the native country of these managers
  ?manager dbo:nativePlace ?managerNativePlace .
  ?managerNativePlace dbo:country ?nativeCountry .

  # Ensure the manager's native country is the same as Theodor Heuss's native country
  FILTER(?heussNativeCountry = ?nativeCountry)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
198,18,train,"Give me the war of Amasa Tracy and force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force1 ?force2 ?entity 
WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:location dbr:Charleston,_South_Carolina ;
      dbo:participatedIn [
        dbo:agent dbr:Amasa_Tracy ;
        dbo:agent dbr:Quincy_Adams_Gillmore
      ] .
  
  OPTIONAL { ?war dbo:opposingForce1 ?force1 . }
  OPTIONAL { ?war dbo:opposingForce2 ?force2 . }

  ?entity a dbo:MilitaryUnit ;
          dbo:location dbr:Charleston,_South_Carolina ;
          dbo:participatedIn ?war .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
595,59,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Hillary Clinton's residence in Chappaqua, New York
  dbr:Hillary_Clinton dbo:residence dbr:Chappaqua,_New_York .
  
  # Bill Clinton as spouse of Hillary Clinton
  dbr:Hillary_Clinton dbo:spouse dbr:Bill_Clinton .

  # Bill Clinton's profession and office holding
  dbr:Bill_Clinton a dbo:Politician ;
                  a dbo:OfficeHolder .

  # Books authored by Bill Clinton
  ?book dbo:author dbr:Bill_Clinton .
  ?book a dbo:Book .
  
  # Get the author of the book
  ?book dbo:author ?author .
}
```",6,15,7,3,2,3,3,71,0,0,1,0,0.0,0
742,12,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ekaterinaBirthplace ?residentBirthplace
WHERE {
  # Find Ekaterina Zaharieva's birthplace
  OPTIONAL {
    ?ekaterina a dbo:Person ;
               foaf:name ""Ekaterina Zaharieva""@en ;
               dbo:birthPlace ?ekaterinaBirthplace .
  }

  # Find a resident of Sofia's birthplace
  OPTIONAL {
    ?resident a dbo:Person ;
              dbo:residence dbr:Sofia ;
              dbo:birthPlace ?residentBirthplace .
  }
}
```",3,3,4,2,2,3,2,20,2,9,0,0.18181818181818182,1.0,0.3076923076923077
595,47,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?spouse WHERE {
  # Identify Hillary Clinton as a resident of Chappaqua, New York
  ?hClinton dbo:residence dbr:Chappaqua,_New_York ;
            rdf:type dbo:Politician ;
            dbo:spouse ?billClinton .

  # Identify Bill Clinton as the spouse and also a politician
  ?billClinton rdf:type dbo:Politician ;
               rdfs:label ""Bill Clinton""@en .

  # Identify ""An Invitation to the White House"" as a book authored by Hillary Clinton
  dbr:An_Invitation_to_the_White_House dbo:author ?hClinton ;
                                       rdf:type dbo:Book .

  # Bind the author and spouse variables
  BIND(?hClinton AS ?author)
  BIND(?billClinton AS ?spouse)
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
158,11,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeLanguage
WHERE {
  # Identify Nicholas II and his country of administration
  dbr:Nicholas_II_of_Russia dbo:country dbr:Russia .
  
  # Find the native language of Russia
  dbr:Russia dbo:nativeLanguage ?nativeLanguage .
}
```",2,3,3,2,1,2,3,28,0,0,5723,0,0.0,0
782,59,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandOfPerson ?realNameOfKimWilsonBand
WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .

  # Get the band of this person
  ?bandOfPerson dbo:member ?person .

  # Find Kim Wilson and his associated band
  dbr:Kim_Wilson dbo:realName ?realNameOfKimWilsonBand .
  ?kimBand dbo:member dbr:Kim_Wilson .
  
  # Ensure the band of Kim Wilson is captured correctly
  OPTIONAL { ?kimBand dbp:name ?realNameOfKimWilsonBand }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
871,43,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer) and father of Arthur Stanley (politician).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politician WHERE {
  # Identify Edward Stanley, 17th Earl of Derby's parent
  :EdwardStanley17thEarlOfDerby dbo:father ?parent .

  # Ensure the parent is also the father of Arthur Stanley and parent of Victor Stanley
  ?parent dbp:child ?arthur .
  ?arthur rdfs:label ""Arthur Stanley (politician)""@en .
  
  ?parent dbp:child ?victor .
  ?victor rdfs:label ""Victor Stanley (Royal Navy officer)""@en .

  # Find a child of this parent who is both a politician and an office holder
  ?parent dbo:child ?politician .
  ?politician rdf:type dbo:Politician .
  ?politician dbo:officeHolder true .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
398,8,train,Give me the player in the writer of The First Glove.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?work dbo:author ?writer .
  ?writer foaf:name ""The First Glove""@en .
  ?work dbo:subject ?player .
}
```",2,2,3,2,1,3,2,20,0,0,17,0,0.0,0
723,12,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy and band member of Mudvayne.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Cavalera Conspiracy's associated musical artist (organization)
  ?band dbr:Cavalera_Conspiracy ;
        dbo:associatedMusicalArtist ?artist .

  # Find members of this organization
  ?member dbo:memberOf ?artist .
  
  # Check if the member is also a band member of Mudvayne
  ?member dbo:bandMemberOf dbr:Mudvayne .
  
  BIND(?member AS ?person)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
782,52,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandKimWilson ?bandNickCurran ?bandEricClapton WHERE {
  # Kim Wilson's band
  OPTIONAL { 
    ?personKimWilson a dbo:MusicalArtist ;
                     foaf:name ""Kim Wilson"" .
    ?personKimWilson dbo:memberOfBand ?bandKimWilson .
  }
  
  # Nick Curran's associated band with Kim Wilson
  OPTIONAL {
    ?personNickCurran a dbo:MusicalArtist ;
                      foaf:name ""Nick Curran"" .
    ?personNickCurran dbo:memberOfBand ?bandNickCurran .
    FILTER(?bandNickCurran = dbr:The_Headcat) # Known association
  }
  
  # Eric Clapton's band
  OPTIONAL {
    ?personEricClapton a dbo:MusicalArtist ;
                       foaf:name ""Eric Clapton"" .
    ?personEricClapton dbo:memberOfBand ?bandEricClapton .
    FILTER(?bandEricClapton = dbr:Cream) # Known association
  }
}
```

This query attempts to find the bands associated with each artist by their known associations. Note that DBpedia's data might not always have direct links for every band or member, so some results may require manual verification.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
353,48,train,"Give me the child of the child of Alfonso VI of León and Castile and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Alfonso VI of León and Castile's great-grandchild
  ?alfonsoChild1 dbo:child dbr:Alfonso_VI_of_Le%C3%B3n_and_Castile .
  ?alfonsoGrandchild dbo:child ?alfonsoChild1 .
  ?alfonsoGreatGrandchild dbo:child ?alfonsoGrandchild .

  # Roger II of Sicily's child who is royalty
  ?rogerChild dbo:child dbr:Roger_II_of_Sicily .
  FILTER EXISTS { ?rogerChild a dbo:Monarch . }

  # Find the common individual
  VALUES ?commonIndividual {
    ?alfonsoGreatGrandchild
    ?rogerChild
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
198,9,train,Give me the war of Amasa Tracy and force of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?tracyRole ?gillmoreRole WHERE {
  # Amasa Tracy's involvement in battles
  OPTIONAL { 
    ?tracy dbo:participatedIn ?battle .
    ?tracy rdfs:label ""Amasa Tracy""@en .
    ?tracy dbo:position ?tracyRole .
  }
  
  # Quincy Adams Gillmore's involvement in battles
  OPTIONAL {
    ?gillmore dbo:participatedIn ?battle .
    ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
    ?gillmore dbo:position ?gillmoreRole .
  }

  FILTER(?tracy != ?gillmore) # Ensure they are distinct entities
}
ORDER BY ?battle",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
249,3,train,"Give me the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
  FILTER (isBlank(?birthPlace) = false)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia/Wikidata ID for Shobhna Samarth.",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
119,1,train,Give me the tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarch ?monarchLabel WHERE {
  ?monarch a dbo:Monarch .
  ?monarch dbo:country dbr:Spain .
  ?monarch rdfs:label ?monarchLabel .
  FILTER (LANG(?monarchLabel) = 'en')
}
ORDER BY DESC(?monarch)
LIMIT 1
```",1,1,2,1,1,3,3,71,0,0,216,0,0.0,0
89,41,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the predecessor of Myat Hpone Pyo
  ?predecessor dbo:successor dbr:Myat_Hpone_Pyo .
  
  # Find the father of Myat Hpone Pyo and his spouse (mother)
  ?father dbo:child dbr:Myat_Hpone_Pyo .
  ?spouse dbo:spouse ?father .

  # Ensure the person is royalty
  ?person a dbo:Monarch ;
          dbo:successor ?predecessor ;
          dbo:spouse ?spouse .

  # Find Min Hla Htut and his parent
  ?parent dbo:child dbr:Min_Hla_Htut_of_Pyakaung .
  
  # Ensure the person is a child of this parent (sibling or half-sibling)
  ?person dbo:child ?parent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
103,43,train,"Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  # Find the TV show ""Dispatches from Elsewhere""
  dbr:Dispatches_from_Elsewhere dbo:starring ?actor .
  
  # Check if the actor is a politician in India
  OPTIONAL { ?actor dbo:nationality dbr:India . }
  OPTIONAL { ?actor dbo:profession dbr:Politician . }

  # Ensure the actor has at least one of these professions
  FILTER EXISTS { ?actor dbo:profession ?profession } .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
311,2,train,"Give me the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the DBpedia resource for the song ""Lotus"" by R.E.M.
  ?song dbo:title ""Lotus (R.E.M. song)""@en .
  ?song dbo:artist dbr:R.E._(band) .

  # Identify the producer of the song
  ?song dbo:producer ?producer .

  # Ensure the producer is an organization, band, or group
  ?producer a ?type .
  FILTER (
    ?type = dbo:Band OR 
    ?type = dbo:MusicalGroup OR 
    ?type = dbo:Organization
  )
}
```",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
468,15,train,"Give me the child of Alfonso IV of Aragon and reference to the real name of the child, that is a royalty, of Alfonso IV of Aragon.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alfonso_IV_of_Aragon> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?realName WHERE {
  # Find Alfonso IV of Aragon
  dbr:Alfonso_IV_of_Aragon dbo:child ?child .
  
  # Ensure the child is royalty by checking for a title or role
  OPTIONAL { ?child dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }
  
  # Get the real name of the child
  ?child rdfs:label ?realName .
}
```",4,5,5,3,2,3,2,20,2,4,1,0.3333333333333333,0.6666666666666666,0.4444444444444444
412,20,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Napoleon Zervas and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Antonios Varthalitis
  OPTIONAL { 
    ?varthalitis dbo:deathPlace ?place1 .
    ?place1 a dbo:Settlement .
    BIND(?place1 AS ?settlement)
  }
  
  # Napoleon Zervas
  OPTIONAL { 
    ?zervas dbo:deathPlace ?place2 .
    ?place2 a dbo:Settlement .
    FILTER (?settlement = ?place2)
  }

  # Konstantinos Ventiris
  OPTIONAL { 
    ?ventiris dbo:deathPlace ?place3 .
    ?place3 a dbo:Settlement .
    FILTER (?settlement = ?place3)
  }
  
  # Ensure the settlement is common to all three
  VALUES ?varthalitis { dbr:Apostolos_Varthalitis }
  VALUES ?zervas { dbr:Napoleon_Zervas }
  VALUES ?ventiris { dbr:Konstantinos_Ventiris }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
198,2,train,"Give me the entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","```sparql
SELECT ?entity WHERE {
  ?entity dbo:location dbr:Charleston,_South_Carolina .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
353,16,train,"Who is the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the reference royalty and office holder related to William I
  ?reference a dbo:Monarch ;
             dbo:spouseOrCivilPartner ?spouse ;
             dbo:father ?williamI .
  
  FILTER (?williamI = dbr:William_I_of_England) .

  # Ensure the reference is also an office holder
  ?reference dbo:officeHolderOf ?office .

  # Find their child who is a royalty
  ?child dbo:parent ?reference ;
         a dbo:Monarch .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
361,19,train,Give me the professional in the profession of Frédéric Bouraly and professional in  and actor of Rustlers' Rhapsody.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?actor WHERE {
  # Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:occupation ?profession .

  # Actors in ""Rustlers' Rhapsody""
  OPTIONAL {
    dbr:Rustlers'_Rhapsody dbo:starring ?actor .
    FILTER(?actor != dbr:Frédéric_Bouraly)
  }
}
```

This query does the following:
- Retrieves Frédéric Bouraly's profession using `dbo:occupation`.
- Finds other actors in ""Rustlers' Rhapsody"" using `dbo:starring`, ensuring it excludes Frédéric Bouraly himself.",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
628,9,train,Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:name ""Ackquille Jean Pollard"" .
  ?band dbo:member ?person ;
        foaf:name ""Uncle Murda""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,0,train,"Give me the predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?person a dbo:Duke ;
          dbo:spouseOrPartner ?carl .
  ?carl rdfs:label ""Carl, Duke of Württemberg""@en .
  OPTIONAL { ?person dbo:father ?predecessor . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
782,36,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find Nick Curran and ensure he is a musical artist
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran"" .

  # Find associated artists with reference to The Fabulous Thunderbirds
  ?nickCurran dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
  
  # Retrieve the associated artists
  ?nickCurran dbo:associatedBand ?associatedArtist .
}
```

This query does the following:
- It identifies Nick Curran as a `MusicalArtist`.
- It checks for an association with The Fabulous Thunderbirds.
- It retrieves any associated bands or artists linked to him.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,8,train,"Who is the father, that is a royalty and an office holder, of Na'od?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?na'od dbo:father ?father .
  FILTER EXISTS { ?father a dbo:Monarch . } # Assuming royalty is represented by Monarch class
  FILTER EXISTS { ?father dbo:officeHolder ?office . }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
399,3,train,Give me the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q2118678 dbo:occupation ?profession .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
119,60,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?event WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  ?person dbo:nationality dbr:Spain .

  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .

  ?administration dbo:member ?person ;
                  dbo:politicalParty ?party .

  ?event dbo:officeHeld ?office ;
         dbo:participant ?person ;
         dbo:administrativeBody ?administration .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
871,49,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  ?child dbo:parent ?alumnus ;
         a dbo:Politician .

  ?politicianParent dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order ;
                    dbo:child ?child .

  ?father dbo:child ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
609,42,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the author of El Deafo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  # Glenn Youngkin's birthplace
  {
    dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .
    ?youngkinBirthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
    BIND(dbr:Glenn_Youngkin AS ?person)
  }
  
  UNION
  
  # Awardee of an award received by Vince Gilligan
  {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
    ?awardeeBirthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
    BIND(?awardee AS ?person)
  }
  
  UNION
  
  # Author of El Deafo
  {
    dbr:El_Deafo dbo:author ?author .
    ?author dbo:birthPlace ?authorBirthPlace .
    ?authorBirthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
    BIND(?author AS ?person)
  }
}
ORDER BY ?person
```",5,5,6,2,3,3,3,71,0,3,1,0.0,0.0,0
531,37,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/office> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeMaura ?conflictEvent
WHERE {
  # Find office held by Miguel Maura
  dbr:Miguel_Maura dbo:positionHeld ?officeMaura .
  
  # Find military conflict or societal event involving Manuel Pinto da Costa
  ?conflictEvent a dbo:MilitaryConflict ;
                 dbo:commander ?pintoDaCostaRole .
  FILTER (strstarts(str(?pintoDaCostaRole), ""dbr:Manuel_Pinto_da_Costa""))

  # Ensure the conflict is related to an office holder and politician role
  ?pintoDaCostaRole a dbo:OfficeHolder ;
                    dbo:positionHeld ?officePinto .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
871,10,train,Give me the father of Arthur Stanley (politician) and parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Politician ;
          foaf:name ""Arthur Stanley"" ;
          dbo:parent ?father .

  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:MilitaryPerson ;
          foaf:name ""Victor Stanley"" ;
          dbo:parent ?father .
}
```

This query assumes that the individuals are represented in DBpedia with their names and parent relationships. It selects the common father of both Arthur Stanley and Victor Stanley.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,11,train,"Give me the father of the child, that is a royalty, of Philip I of Castile.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Philip_I_of_Castile dbo:child ?royalChild .
  
  ?royalChild a dbo:Monarch ;
              dbo:parent ?father .

  FILTER EXISTS { ?royalChild dbo:country ?country }
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
89,5,train,"Give me the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?sawShweKhet dbo:child ?child .

  ?child rdf:type dbo:RoyalFamilyMember .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
151,4,train,Give me the entity in Ottoman Empire and reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . }","```sparql
SELECT ?entity WHERE {
  ?entity wdt:P31 wd:Q483045; # instance of Order of the Medjidie
          wdt:P495 wd:Q1746. # located in Ottoman Empire
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
859,14,train,"Give me the associated musical artist of the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find members of Khlyst who are musical artists
  ?member dbo:bandMemberOf dbr:Khlyst .
  ?member a dbo:MusicalArtist .

  # Step 2: Find associated musical artist for each member
  ?member dbo:associatedBandOrMusicalArtist ?intermediateArtist .
  
  # Step 3: Ensure the intermediate artist is also a musical artist
  ?intermediateArtist a dbo:MusicalArtist .

  # Step 4: Find the associated musical artist of the intermediate artist
  ?intermediateArtist dbo:associatedBandOrMusicalArtist ?finalArtist .

  # Ensure the final artist is distinct and a musical artist
  ?finalArtist a dbo:MusicalArtist .
}
```",3,4,4,3,1,3,2,20,0,0,34,0,0.0,0
595,42,train,"Give me the author of Back to Work (book) and commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?commander ?spouse WHERE {
  # Find the author of ""Back to Work""
  ?book dbo:title ""Back to Work (Michelle Obama)""@en .
  ?book dbo:author ?author .

  # Find the commander in WWII
  ?war dbo:name ""World War II""@en .
  ?commander dbo:rank ?rank ;
             dbo:militaryBranch dbr:United_States_Navy ;
             dbo:servedInWar ?war .

  # Find the spouse of the author who is a politician and office holder
  ?spouse dbo:spouse ?author ;
          dbo:occupation ""Politician""@en ;
          dbo:officeHolderOf dbr:An_Invitation_to_the_White_House .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
557,16,train,"Give me the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""James Cagney""@en .
  
  ?film dbo:starring ?actor ;
        dbo:title ?title .

  FILTER(CONTAINS(LCASE(?title), ""yankee doodle dandy"") = false) # Exclude the film we know

  BIND(?film AS ?work)
}
ORDER BY DESC(?film.foaf:isPrimaryTopicOf)
LIMIT 1
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
595,51,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v4 <http://dbpedia.org/property/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # USS Arcadia owner
  dbr:USS_Arcadia_(ID-1605) dbo:owner dbr:United_States .

  # Bill Clinton's authored work
  dbr:My_Life dbo:author dbr:Bill_Clinton ;
              a dbo:Book .

  # Commander in World War I (related to disease and societal event)
  dbr:World_War_I dbo:commander ?commander .
  FILTER EXISTS { ?disease dbo:relatedEvent dbr:World_War_I . }
  FILTER EXISTS { ?societalEvent dbo:relatedEvent dbr:World_War_I . }

  # Assuming Spanish Flu as the disease
  dbr:Spanish_Flu_Pandemic dbo:relatedEvent dbr:World_War_I .

  # Societal event related to World War I
  ?societalEvent a dbo:SocietalEvent .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
595,4,train,"Give me the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?author dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""office holder"")) .
  
  VALUES ?book { dbr:An_Invitation_to_the_White_House }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
143,12,train,Give me the actor of The Campus Queen and associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?musicalArtist WHERE {
  # Find the actor from ""The Campus Queen""
  ?film dbo:title ""The Campus Queen""@en .
  ?film dbo:starring ?actor .

  # Find Tiwa Savage's associated musical artist
  dbr:Tiwa_Savage dbo:birthName ""Cynthia Ikponmwenosa Morgan""@en ;
                  dbo:musicalArtist ?musicalArtist .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
943,15,train,"Who is the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?siege dbo:eventParticipant ?commander .
  ?commander a dbo:RoyalPerson ;
             dbo:spouseOrPartner ?parent .

  FILTER EXISTS { ?siege rdfs:label ""Siege of Mukha""@en }
  FILTER EXISTS { ?commander dbo:title ?title . 
                 FILTER CONTAINS(LCASE(?title), ""royalty"") }
  FILTER EXISTS { ?parent dbo:title ?parentTitle .
                 FILTER CONTAINS(LCASE(?parentTitle), ""royalty"") }
}
```

This query does the following:
- Identifies a siege event related to ""Siege of Mukha"".
- Finds participants in this event who are royalty.
- Checks if these participants have a parent who is also royalty.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
80,7,train,Give me the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?result . },"```sparql
SELECT ?series WHERE {
  wd:Q1234568 wdt:P136 ?series .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia identifier for ""The Golden Master"". You can find this identifier by searching for ""The Golden Master"" in DBpedia or using a SPARQL endpoint to retrieve it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,51,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?child dbo:parent dbr:Baeda_Maryam_I .
  ?father dbo:spouse ?mother .
  ?child dbo:parent ?father .
  ?father rdfs:label ""Dawit I""@en .
  FILTER(CONTAINS(LCASE(?father), ""dawit i""))
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
472,10,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  # Identify Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  ?person a dbo:Person ;
          rdfs:label ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en .
  
  OPTIONAL { 
    ?person dbo:birthPlace ?birthPlace .
  }
  
  # Find any administrative roles he might have held
  ?person dbo:officeHeld ?administration .
}
```

This query does the following:
- It identifies Prince Christian of Schleswig-Holstein-Sonderburg-Beck as a `dbo:Person`.
- It optionally retrieves his birthplace.
- It looks for any administrative roles (`dbo:officeHeld`) associated with him.",2,3,3,2,1,2,3,28,0,0,2,0,0.0,0
375,6,train,Give me the entity in Japan and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?war WHERE {
  # Find Toyotomi Hidenaga and his relation to Japan
  dbr:Toyotomi_Hidenaga dbo:nationality dbr:Japan .
  
  # Find wars associated with Toyotomi Hidenaga
  OPTIONAL { 
    dbr:Toyotomi_Hidenaga dbo:participatedIn ?war .
    ?war a dbo:MilitaryConflict .
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
557,13,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?work dbo:author dbr:Cora_Sue_Collins .
  ?work dbo:producer ?producer .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
258,14,train,"Give me the alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci""@en ;
          dbp:birthName ?birthName .
  
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",3,4,4,3,1,3,2,20,3,0,0,1.0,1.0,1.0
375,4,train,Give me the person born as Koichirō.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthName ""Koichirō""@en .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,3,train,Give me the birthday of Marty Pollio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthday WHERE {
  dbr:Marty_Polio dbo:birthDate ?birthday .
}
```

This query assumes that there is a resource for Marty Pollio in DBpedia with the URI `dbr:Marty_Polio`. If the exact URI differs, you may need to adjust it accordingly.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
89,14,train,Give me the predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Find his children (successors)
  ?sawShweKhet dbo:child ?child .

  # For each child, find their predecessors
  ?predecessor dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
89,30,train,Give me the spouse of Saw Shwe Khet and child of Saw Min Hla and predecessor of the child of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?childOfShweKhet ?predecessor WHERE {
  # Find the spouse of Saw Shwe Khet who is also a child of Saw Min Hla
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet .
  ?spouse dbo:parent dbr:Saw_Min_Hla .

  # Find the child of Saw Shwe Khet
  ?childOfShweKhet dbo:parent dbr:Saw_Shwe_Khet .

  # Find the predecessor of that child (assuming 'predecessor' is a defined relationship)
  OPTIONAL {
    ?predecessor dbo:succeededBy ?childOfShweKhet .
  }
}
```

This query assumes:
- `dbo:spouse` and `dbo:parent` are used to find relationships.
- There exists a property like `dbo:succeededBy` for finding predecessors, which might need adjustment based on actual DBpedia schema.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,38,train,"Give me the force of the awardee of Gillmore Medal and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?force ?settlement WHERE {
  # Gillmore Medal awardee
  ?awardee dbo:award dbr:Gillmore_Medal .
  
  # Force associated with the awardee
  ?awardee dbo:militaryUnit ?force .

  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
             dbp:country ""United States""^^xsd:string .
  
  # Find settlements in the birthplace
  ?settlement dbo:locatedIn ?birthPlace .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
557,52,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/producer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Cora Sue Collins' claim to fame and her fictional character
  ?collinsWork dbo:author dbr:Cora_Sue_Collins .
  ?collinsCharacter dbo:characterName ?fictionalCharacter ;
                    dbo:work ?collinsWork .

  # Kent Allard's reference or fictional character
  ?allardReference dbo:reference dbr:Kent_Allard .
  ?allardCharacter dbo:characterName ?fictionalCharacterAllard ;
                   dbo:work ?allardReference .

  # Producer of A Star Is Born (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producer .

  # Find the common producer
  OPTIONAL { ?collinsWork dbo:producer ?producer . }
  OPTIONAL { ?allardReference dbo:producer ?producer . }

  FILTER(?fictionalCharacter = ?fictionalCharacterAllard)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
706,3,train,Who is the awardee of Sangeet Natak Akademi Fellowship?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:award dbr:Sangeet_Natak_Akademi_Fellowship .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
414,5,train,Who is the awardee of Nobel Prize in Physics?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . },"```sparql
SELECT ?awardee WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Nobel_prizes_in_Physics> .
  ?award dbo:recipient ?person .
  ?person foaf:name ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,31,0,0.0,0
293,20,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find the actor John Travolta
  ?actor a dbo:Actor ;
         foaf:name ""John Travolta""@en .
  
  # Ensure he acted in ""1,000 Dollars a Minute""
  ?film dbo:starring ?actor ;
        rdfs:label ""1,000 Dollars a Minute""@en .

  # Check if John Travolta is associated with the Republican Party
  OPTIONAL {
    ?party dbo:member ?actor .
    ?party rdfs:label ""Republican Party (United States)""@en .
  }

  # Find his spouse
  ?actor dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,5,train,Give me the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  VALUES ?alexander <http://dbpedia.org/resource/Alexander_of_W%C3%BCrttemberg_(1804-1881)>
  ?alexander dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
249,6,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Find Shobhna Samarth's birthplace
  dbr:Shobhna_Samarth dbo:birthPlace ?birthPlace .

  # Check if the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Get the native language of that country
  ?birthPlace dbp:nativeLanguage ?nativeLanguage .
}
```",2,3,3,2,1,2,2,9,0,0,11051,0,0.0,0
687,51,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?person
WHERE {
  # Find actors in ""All or Nothing: Manchester City"" who are also soccer players and athletes
  ?actor dbo:starringIn dbr:All_or_Nothing:_Manchester_City;
         a dbo:SoccerPlayer;
         a dbo:Athlete.

  # Find people born on Marcelo Sarmiento's birthday who are both soccer players and managers
  ?person dbo:birthdayYear ?year;
          dbo:birthdayMonth ?month;
          dbo:birthdayDay ?day;
          a dbo:SoccerPlayer, dbo:SoccerManager.
  
  # Get Marcelo Sarmiento's birthday
  VALUES (?marceloYear ?marceloMonth ?marceloDay) {
    (SELECT DISTINCT ?year ?month ?day WHERE {
      dbr:Marcelo_Sarmiento dbo:birthdayYear ?year;
                            dbo:birthdayMonth ?month;
                            dbo:birthdayDay ?day.
    })
  }

  # Match the birthdays
  FILTER (?year = ?marceloYear && ?month = ?marceloMonth && ?day = ?marceloDay)
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
103,51,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game).",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionShatrughanSinha ?alterEgoTheShadow
WHERE {
  # Find Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation ?professionShatrughanSinha .

  # Find The Shadow's alter ego in comics
  dbr:The_Shadow_(video_game) dbo:alterEgo ?comicsCharacter .
  ?comicsCharacter rdfs:label ?alterEgoTheShadow .
  FILTER (lang(?alterEgoTheShadow) = 'en')
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
293,35,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","# Query to find a party member of the ruling party in Central, Louisiana
SELECT ?partyMember WHERE {
  ?location rdf:type dbo:PopulatedPlace ;
            rdfs:label ""Central, Louisiana""@en .
  ?governmentService dbo:governmentType ?localGovernment ;
                     dbo:officeHolder ?official ;
                     dbo:politicalParty ?rulingParty .
  ?official dbo:holdsOfficeIn ?location .
  ?partyMember dbo:memberOfPoliticalParty ?rulingParty .
}

UNION

# Query to find a person born as Anne Shirley Emery
SELECT ?person WHERE {
  ?person foaf:name ""Ann Sothern""@en ;
          dbo:birthName ""Anne Shirley Emery"" .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
513,11,train,Give me the entity in the award of George H. Cameron and residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find George H. Cameron's award
  ?georgeHc dbr:George_H._Cameron .
  ?georgeHc dbo:award ?award .

  # Find Doug Beattie's residence
  ?dougBeattie dbr:Doug_Beattie .
  ?dougBeattie dbo:residence ?residence .

  # Check if the award and residence are the same entity
  FILTER (?award = ?residence)
  
  BIND(?award AS ?entity)
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,6,train,Give me the entity in United Kingdom and residence of Doug Beattie.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doug Beattie""@en .
  
  OPTIONAL { ?person dbo:residence ?residence . }
  
  FILTER EXISTS { 
    ?residence dbo:country dbr:United_Kingdom .
  }
}
```

This query does the following:
- Selects entities that are of type `dbo:Person` and have a name ""Doug Beattie"".
- Optionally retrieves the residence associated with Doug Beattie.
- Filters results to ensure the residence is in the United Kingdom.",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
943,16,train,"Give me the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?person rdfs:label ""Lamont Cranston""@en .
  ?person dbo:alias ?alterEgo .
  FILTER (lang(?alterEgo) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
158,18,train,"Give me the native of Grand Duchy of Finland and native of the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandDuchyNative ?nicholasAdminCountry
WHERE {
  # Grand Duchy of Finland's native place
  dbr:Grand_Duchy_of_Finland dbo:nativePlace ?grandDuchyNative .

  # Nicholas II's administrative country (Russia)
  dbr:Nicholas_II_of_Russia dbo:country dbr:Russian_Empire .
  dbr:Russian_Empire dbo:capital dbr:Moscow .
  dbr:Moscow dbo:nativePlace ?nicholasAdminCountry .
}
```",3,4,4,2,2,2,3,28,0,0,126,0,0.0,0
158,17,train,"Give me the native of the administration of Alexander II, Grand Duke of Finland and native of Russian Empire.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  VALUES ?alexander2 { dbr:Alexander_II,_Grand_Duke_of_Finland }
  
  ?alexander2 dbo:nativePlace ?nativePlace .
}
```",3,3,4,2,2,2,3,28,0,0,126,0,0.0,0
943,10,train,Give me the child of Dawit I and father of Baeda Maryam I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?dawitI dbo:spouse ?partner .
  ?dawitI dbo:child ?child .
  
  ?baedaMaryamI dbo:father ?child .

  FILTER(?dawitI = dbr:Dawit_I_of_Ethiopia)
  FILTER(?baedaMaryamI = dbr:Baeda_Maryam_I_of_Ethiopia)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
311,17,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy and associated musical artist of Filthy Friends.",SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Find the album ""Sappy""
  ?album rdfs:label ""Sappy""@en .
  
  # Ensure it's an album and a musical work
  ?album rdf:type dbo:Album ;
         dbo:genre dbr:Musical_work .

  # Find the writer(s) of the album
  ?album dbo:composer ?writer .

  # Identify band members of these writers
  ?bandMember dbo:member ?writer .
  
  # Find associated artists of Filthy Friends
  ?filthyFriends rdfs:label ""Filthy Friends""@en ;
                 dbo:associatedMusicalArtist ?associatedArtist .
}

ORDER BY ?bandMember ?associatedArtist",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
198,5,train,Give me the award of Quincy Adams Gillmore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Quincy_A._Gillmore }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,20,train,"Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh and associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?writer ?artistRole
WHERE {
  # Find band members of The Alan Parsons Project
  ?member dbo:memberOfBand dbr:The_Alan_Parsons_Project .
  
  # Find associated musical artist of Stuart Tosh
  ?stuartTosh dbo:associatedMusicalArtist ?associatedArtist .

  FILTER(?stuartTosh = dbr:Stuart_Tosh)

  # Find writer associated with Wizards of Waverly Place soundtrack
  ?writer dbo:work dbr:Wizards_of_Waverly_Place_(soundtrack) .
  
  # Check if the writer is also a musical artist and an artist
  OPTIONAL { ?writer dbo:musicalArtist true . }
  OPTIONAL { ?writer dbo:artist true . }

  # Linking band member to associated artist through Stuart Tosh
  ?member dbo:associatedMusicalArtist ?associatedArtist .

  # Linking writer to the role of musical artist and artist
  FILTER(?writer = ?bandMember)
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
158,4,train,"Give me the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
SELECT ?administration WHERE {
  wd:Q123456 wdt:P69 ?administration .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Alexander II, Grand Duke of Finland. You can find this identifier by searching for his name in DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
39,16,train,"Give me the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:wikiPageRedirects ?comicCharacter .
  ?comicCharacter dbo:alterEgo ?alterEgo .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
628,2,train,Give me the native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"```sparql
SELECT ?native WHERE {
  ?native dbo:birthPlace dbr:Florida .
}
```",1,1,2,1,1,3,3,71,971,0,0,1.0,1.0,1.0
756,32,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find VfL Bochum player in the 2007-08 season
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:season ""2007–08"" .

  # Identify the manager of that player who is also a sports club, organization, and soccer club
  ?manager dbo:manages ?player ;
           a dbo:SoccerClub, dbo:SportsOrganization .

  # Find Theodor Heuss's country of administration
  dbr:Theodor_Heuss dbo:nationality ?country .

  # Check if the manager is native to that country
  ?manager dbo:nativePlace ?place .
  ?place dbo:country ?country .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
412,1,train,Give me the entity in Athens.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Athens .
}
```",1,1,2,1,1,2,3,28,0,261,12,0.0,0.0,0
628,7,train,"Give me the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?award WHERE {
  ?band a dbo:Band .
  ?band dbo:location dbr:New_York_(state) .
  ?band dbo:award ?award .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
87,13,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of Janusz Kamiński.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find movies featuring Iliza Shlesinger
  ?movie dbo:starring dbr:Iliza_Shlesinger .
  
  # Find spouse of Janusz Kamiński (Michelle Pfeiffer)
  ?januszFamilyMember dbo:spouse dbr:Janusz_Kamiński ;
                     rdfs:label ""Michelle Pfeiffer""@en .

  # Ensure the movie is a film
  ?movie rdf:type dbo:Film .
  
  # Find movies featuring Michelle Pfeiffer
  ?movie dbo:starring ?januszFamilyMember .
  
  # Get actors from this common movie
  ?movie dbo:starring ?actor .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
198,40,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of the show, that is an award, of United States Congress.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?entityInCharleston ?war ?award 
WHERE {
  # Quincy Adams Gillmore
  dbr:Quincy_A._Gillmore a dbo:MilitaryPerson ;
    dbo:militaryConflict ?war ;
    dbo:honoredWith ?award .

  # Force in Charleston, South Carolina
  ?force dbo:location dbr:Charleston,_South_Carolina ;
         dbo:commander dbr:Quincy_A._Gillmore .
  
  # War of the awardee
  ?war rdfs:label ?warLabel .
  FILTER (CONTAINS(LCASE(?warLabel), ""civil war""))

  # Award by United States Congress
  ?award dbo:awardingBody dbr:United_States_Congress ;
         rdf:type dbo:Award .

  # Entity in Charleston, South Carolina
  ?entityInCharleston dbo:location dbr:Charleston,_South_Carolina .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
737,30,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg ;
                 a dbo:Person .

  # Archduke Charles Louis of Austria's grandchild who is royalty
  ?archdukeGrandchild dbo:parent ?archdukeChild ;
                      a dbo:Person .
  ?archdukeChild dbo:parent dbr:Archduke_Charles_Louis_of_Austria ;
                 a dbo:Person .
  FILTER EXISTS { ?archdukeGrandchild dbo:title ?royalTitle . }

  # Predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:succeededBy dbr:Carl,_Duke_of_W%C3%BCrttemberg ;
               a dbo:Person .

  # Find the common person who fits all criteria
  VALUES ?person { ?albrechtChild ?archdukeGrandchild ?predecessor }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,5,train,"Give me the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?artist { dbr:T.I. }
  
  ?work dbo:artist ?artist .
  FILTER EXISTS { ?work a dbo:Songs . } # Ensure it's a song
  FILTER EXISTS { ?work a dbo:MusicalWork . } # Ensure it's a musical work
  
  OPTIONAL {
    ?work rdfs:label ?label .
    FILTER (lang(?label) = 'en')
  }
  
  MINUS {
    ?work dbo:genre dbr:Album . # Exclude albums
  }

  LIMIT 10
}
```",1,3,2,1,1,3,3,71,0,0,44,0,0.0,0
159,59,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?event ?writer WHERE {
  # Michał Kazimierz Pac as a commander in an event
  ?pac a dbo:Commander ;
       foaf:name ""Michał Kazimierz Pac"" .
  
  # Event is both an event and a military conflict
  ?event dbo:commandedBy ?pac ;
         a dbo:MilitaryConflict, dbo:Event .

  # Successor who is a politician and office holder
  ?successor dbo:succeededBy ?pac ;
             a dbo:Politician, dbo:OfficeHolder .
  
  # Reference to the work of George Ducas
  dbr:George_Ducas dbo:author ?writer .
}",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
513,14,train,"Give me the residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  # Step 1: Find George Savage and his associated political party
  ?savage a dbo:Politician ;
          foaf:name ""George Savage"" ;
          dbo:memberOfParty ?party .

  # Step 2: Identify the leader of that party
  ?leader dbo:positionHeld ?partyLeaderPosition .
  ?partyLeaderPosition dbo:positionTitle ""Leader""@en ;
                       dbo:officeHolder ?leader .

  # Step 3: Get the residence of the leader
  ?leader dbo:residenceLocation ?residence .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
756,31,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/team> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?nativeCountry WHERE {
  # Find the club associated with VfL Bochum in the 2006-07 season
  ?club a dbo:SoccerClub ;
        dbo:sportTeamInSeason dbr:2006%E2%80%9307_VfL_Bochum_season .

  # Identify the manager of this club during that season
  ?manager dbo:managedSportTeam ?club ;
           dbo:nationality dbr:West_Germany .

  # Get the native country of the manager
  OPTIONAL { ?manager dbo:nativeCountry ?nativeCountry }
}
```",4,10,5,3,2,3,3,71,0,0,1,0,0.0,0
472,23,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of the mayor of Duchy of Schleswig.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?territoryAdministered ?mayor
WHERE {
  # Find Christian Ditlev Ammentorp Hansen's death place
  ?person dbo:birthName ""Christian Ditlev Ammentorp Hansen""@en .
  ?person dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find territory administered from this death place
  ?territory dbo:administrativeCenter ?deathPlace .
  ?territory dbp:mayor ?mayor .

  # Filter for Duchy of Schleswig's mayor
  OPTIONAL {
    ?schleswig dbp:mayor ?mayor .
    FILTER (str(?schleswig) = ""Duchy_of_Schleswig""@en)
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
816,30,train,Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentAmyArbus ?childAllanArbus ?parentChildAllanArbus ?actorJudgment

WHERE {
  # Parent of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?parentAmyArbus .
  }

  # Child of Allan Arbus and their parent
  OPTIONAL {
    ?childAllanArbus dbo:parent dbr:Allan_Arbus .
    ?childAllanArbus dbo:parent ?parentChildAllanArbus .
  }
  
  # Actor in ""Judgment: The Trial of Julius and Ethel Rosenberg""
  OPTIONAL {
    ?film dbr:Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg .
    ?film dbo:starring ?actorJudgment .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
668,26,train,"Give me the professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?artist WHERE {
  # Find the work ""The Live Anthology""
  dbr:The_Live_Anthology dbo:author ?writer .

  # Check if the writer is also a musical artist
  OPTIONAL { ?writer dbo:occupation dbr:Musical_artist . }
  
  FILTER EXISTS { ?writer dbo:occupation dbr:Musical_artist . }

  # Return the writer and their artist role
  BIND(?writer AS ?artist)
}
```",3,4,4,3,1,3,3,71,0,0,59565,0,0.0,0
143,2,train,Give me the reference to Afeez Oyetoro.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Afeez Oyetoro""@en .
  OPTIONAL { ?person dbo:wikiPageWikiLink ?reference }
}
```",1,1,2,1,1,3,2,20,0,35,1,0.0,0.0,0
347,35,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Cecilia Renata of Austria and her father
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
  
  # Father's child who was a commander in the war
  ?father dbo:child ?child .
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""war""))

  # Connection to societal event and television show
  ?child dbo:societalEvent ?event1 .
  ?child dbo:televisionShow ?show .

  # Connection to 2nd Dragoon Regiment (France)
  ?child dbo:militaryUnit dbr:2nd_Dragoon_Regiment_(France) .
}
```

This query attempts to find the child of Cecilia Renata's father who fits all the specified criteria. Note that the exact properties and resources might need adjustment based on DBpedia's current schema and available data.",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
782,31,train,Give me the reference to the real name of the band of Kim Wilson and band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?realName WHERE {
  ?person dbo:memberOfBand dbr:The_Fabulous_Thunderbirds .
  ?person foaf:name ""Kim Wilson"" .
  OPTIONAL { ?person dbo:birthName ?realName . }
  ?band dbo:leadSinger ?person .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
943,5,train,"Give me the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","```sparql
SELECT ?reference WHERE {
  ?person rdfs:label ""Lamont Cranston""@en .
  ?person dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect dbo:wikiPageExternalLink ?reference . }
  FILTER (lang(?reference) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,7,train,Give me the war of the commander in French Revolutionary Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Revolutionary_Wars> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:partOf dbr:French_Revolutionary_Wars .
  
  ?commander dbo:commanded ?war .
}
```",2,2,3,2,1,3,2,20,0,0,121,0,0.0,0
198,22,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthplaceEntity WHERE {
  # Henry Clay Lewis
  VALUES ?person1 { dbr:Henry_Clay_Lewis }
  
  ?person1 dbo:birthPlace ?birthplace1 .
  ?birthplace1 a dbo:Settlement ;
              dbo:country dbr:United_States .

  # Amasa Tracy
  VALUES ?person2 { dbr:Amasa_Tracy }
  
  ?person2 dbo:birthPlace ?birthplace2 .
  ?birthplace2 a dbo:Settlement ;
              dbo:country dbr:United_States .

  FILTER (?birthplace1 = ?birthplace2)
  BIND(?birthplace1 AS ?birthplaceEntity)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
353,39,train,"Give me the father of William II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?child ?royalChild WHERE {
  # Find William II of Sicily's father
  dbr:William_II_of_Sicily dbo:father ?father .

  # Find the child of William II's father (i.e., another child)
  ?father dbo:child ?child .

  # Find Constance of Burgundy's spouse and their child
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .
  ?spouse dbo:child ?royalChild .

  # Ensure the royal child is a royalty
  ?royalChild rdf:type dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
668,49,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and associated musical artist of the person born as Elorm Kabu Amenyah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?associatedArtist WHERE {
  # Step 1: Identify Elorm Kabu Amenyah
  VALUES (?elorm) { dbr:Elom_Kabu_Amenyah }
  
  # Step 2: Get his birth name and native region
  ?elorm dbo:birthName ?birthName .
  ?elorm dbo:nativePlace ?nativePlace .
  FILTER (regex(str(?nativePlace), ""Central Region, Ghana"", ""i""))

  # Step 3: Ensure he is an artist
  ?elorm a dbo:Artist .

  # Step 4: Find associated musical artists from Central Region, Ghana
  ?elorm dbo:associatedMusicalArtist ?associatedArtist .
  
  # Filter the associated artist by native region
  ?associatedArtist dbo:nativePlace ?assocNativePlace .
  FILTER (regex(str(?assocNativePlace), ""Central Region, Ghana"", ""i""))

  # Ensure the associated artist is also an artist
  ?associatedArtist a dbo:Artist .

  # Step 5: Get the person with the same birth name as Elorm Kabu Amenyah
  ?person dbo:birthName ?birthName .
  ?person dbo:nativePlace ?nativePersonPlace .
  FILTER (regex(str(?nativePersonPlace), ""Central Region, Ghana"", ""i""))
  
  # Ensure this person is an artist and associated with the same musical artist
  ?person a dbo:Artist .
  ?person dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
742,13,train,Give me the birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?alumnus ?birthPlace
WHERE {
  ?university a dbo:EducationalInstitution ;
              rdfs:label ""Plovdiv University 'Paisii Hilendarski'""@en .
  
  ?alumnus dbo:alumnusOf ?university .
  ?alumnus dbo:birthPlace ?birthPlace .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
859,3,train,"Give me the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  VALUES ?band { dbr:Burnt_by_the_Sun_(band) }
  
  # Find associated bands, groups, or organizations
  ?band dbo:associatedBand ?artist .
  UNION
  ?band dbo:member ?artist .
  UNION
  ?band dbo:organization ?artist .

  # Ensure the artist is a band/group/organization
  ?artist rdf:type ?type .
  FILTER (
    ?type IN (dbo:MusicalGroup, dbo:Organization)
  )
}
```",1,4,2,1,1,3,2,20,0,0,5,0,0.0,0
756,54,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find player associated with VfL Bochum in the 2007–08 season
  ?player dbo:team dbr:VfL_Bochum ;
          dbo:season ""2007–08"" .

  # Identify manager of that player who is also linked to SBV Vitesse in the 2020–21 season
  ?manager dbo:managedTeam dbr:SBV_Vitesse ;
           dbo:season ""2020–21"" .
  
  # Ensure this manager is a sports club, an organization, and a soccer club
  ?manager rdf:type dbo:SoccerClub ;
           rdf:type dbo:Organization .

  # Find the native country of the manager that matches the leader of West Germany's administration
  ?leader dbp:nationality ?country .
  ?manager dbp:nativePlace ?nativeCountry .
  
  FILTER (?country = ?nativeCountry)

  # Link player to manager
  ?player dbo:manager ?manager .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
737,60,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find the parent of Archduchess Margarete Sophie of Austria
  ?parent dbo:spouse ?margareteSophie .
  ?margareteSophie foaf:name ""Margarete Sophie of Austria""@en .

  # Step 2: Find a royal child of this parent
  ?childOfParent dbo:parent ?parent ;
                 rdf:type dbo:Monarch ;
                 foaf:name ?nameChild .

  # Step 3: Find the spouse of Archduchess Helena of Austria and their royal child
  ?spouseHelena dbo:spouse dbr:Archduchess_Helena_of_Austria .
  ?childOfSpouse dbo:parent ?spouseHelena ;
                 rdf:type dbo:Monarch ;
                 foaf:name ?nameChildSpouse .

  # Step 4: Find the predecessor of this child
  ?predecessor dbo:succeededBy ?childOfSpouse ;
               rdf:type dbo:Monarch ;
               foaf:name ?namePredecessor .

  # Final step: Match the royal child from step 2 with the predecessor found in step 4
  ?childOfChild dbo:parent ?parent ;
                rdf:type dbo:Monarch ;
                foaf:name ?nameChild .
  
  FILTER(?nameChild = ?namePredecessor)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
198,21,train,"Give me the war of the awardee of Medal of Honor and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war WHERE {
  ?awardee dbo:award dbr:Medal_of_Honor .
  ?awardee dbo:birthPlace dbr:Charleston,_South_Carolina .
  ?awardee dbo:militaryConflict ?war .
}
```

This query does the following:
- Selects individuals (`?awardee`) who have been awarded the Medal of Honor.
- Ensures these individuals are associated with Charleston, South Carolina as their birthplace.
- Retrieves the military conflict(s) (`?war`) they were involved in.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
943,3,train,"Who is the commander, that is a royalty, in Siege of Mukha?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:eventType dbr:Siege_of_Mukha .
  ?event dbo:commander ?commander .
  ?commander a dbo:Monarch ;
             rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```

This query does the following:

- It looks for an event of type ""Siege of Mukha"".
- It identifies the commander associated with this event.
- It checks if the commander is a monarch, which implies royalty.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
89,6,train,"Give me the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?father WHERE {
  ?person dbo:name ""Myat Hpone Pyo""@en .
  ?person dbo:father ?father .
  ?father rdf:type/rdfs:subClassOf* dbo:Monarch .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
37,2,train,"Who is the writer, that is an artist, of The Miseducation of Lauryn Hill?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
  ?album dcterms:title ""The Miseducation of Lauryn Hill"" .
  ?album dbo:artist ?person .
  ?person rdf:type dbo:Artist .
  ?person dbo:occupation dbo:Singer .
  ?person dbo:occupation dbo:Songwriter .
}
```",1,2,2,1,1,2,2,9,0,0,3,0,0.0,0
687,12,train,Give me the player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find teams of Sergio Agüero
  ?agüeroTeam dbo:member dbr:Sergio_Agüero .
  
  # Find teams of Pablo Aimar
  ?aimarTeam dbo:member dbr:Pablo_Aimar .

  # Ensure the team is common to both players
  FILTER (?agüeroTeam = ?aimarTeam)

  # Retrieve other players from that team
  ?agüeroTeam dbo:member ?player .
  
  # Exclude Sergio Agüero and Pablo Aimar themselves
  FILTER(?player != dbr:Sergio_Agüero && ?player != dbr:Pablo_Aimar)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,18,train,Give me the child of Saw Min Hla and spouse of Saw Shwe Khet and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person dbo:parent dbr:Saw_Min_Hla .
  ?person dbo:spouse dbr:Saw_Shwe_Khet .
  ?myatHponePyo dbo:predecessor ?person .
  FILTER(STRSTARTS(STR(?myatHponePyo), ""http://dbpedia.org/resource/Myat_Hpone_Pyo""))
}
```

This query assumes:
- `dbo:parent` is used to denote parent-child relationships.
- `dbo:spouse` denotes marital relationships.
- A hypothetical property `dbo:predecessor` is used for predecessor-successor relationships. If this specific relationship isn't directly available, you might need to adjust based on how DBpedia represents such data.

Please note that the exact properties and resource identifiers (`dbr:Saw_Min_Hla`, `dbr:Saw_Shwe_Khet`, etc.) should be verified against DBpedia's current schema and ontology. If these specific relationships aren't directly available, you may need to explore alternative properties or additional resources.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
557,12,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?film ?producer WHERE {
  VALUES (?title ?year) { 
    (""The Adventures of Tom Sawyer"" ""1938"") 
    (""A Star Is Born"" ""1937"")
  }
  
  ?film dbp:title ?title ;
        dbp:releaseDate ?date .
  
  FILTER (YEAR(?date) = xsd:integer(?year))
  
  OPTIONAL {
    ?film dbo:producer ?producer .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,9,train,Give me the war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES ?person { 
    dbr:Toyotomi_Hidenaga 
    dbr:Hashiba_Hidekatsu 
  }
  
  ?person dbo:participatedIn ?event .
  ?event a dbo:MilitaryConflict ;
         rdfs:label ?war ;
         dbo:description ?description .

  FILTER (lang(?war) = 'en' && lang(?description) = 'en')
}
ORDER BY ?war
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
816,17,train,Give me the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?mariclare dbo:spouse ?spouse .

  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
941,3,train,"Who is the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:child ?duke .
  ?duke rdfs:label ""Anthony Ulrich, Duke of Brunswick-Wolfenbüttel""@en .
  ?person dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke"") ||
         CONTAINS(LCASE(?title), ""emperor"") || CONTAINS(LCASE(?title), ""empress""))
  ?person rdfs:label ?parentLabel .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
311,0,train,Give me the associated musical artist of Filthy Friends.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234568 wdt:P175 ?artist .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for ""Filthy Friends"" if it is known. You may need to look up this identifier in DBpedia or a similar resource.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
119,39,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and tenant of Spain.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?name WHERE {
  ?leader a dbo:PrimeMinister ;
          dbo:nationality dbr:Spain ;
          dbo:partyAffiliation dbr:Spanish_Socialist_Workers'_Party ;
          dbo:country dbr:Spain .
  
  OPTIONAL { ?leader rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10",4,5,5,3,2,3,3,71,0,0,23,0,0.0,0
871,37,train,"Give me the father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfArthur ?parentOfPoliticianChild
WHERE {
  # Arthur Stanley (politician)
  dbr:Arthur_Stanley_(politician) dbo:father ?fatherOfArthur .

  # Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:parent ?parentOfEdward .

  # Find a politician and office holder among Edward's parent's children
  ?politicianChild dbo:parent ?parentOfEdward ;
                  a dbo:Politician ;
                  dbo:officeHolder ?office .

  # Get the parent of that child
  ?politicianChild dbo:parent ?parentOfPoliticianChild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,28,train,"Give me the child of Stephen V of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Stephen V of Hungary's child
  ?child dbo:parent dbr:Stephen_V_of_Hungary .
  
  # Philip I, Prince of Taranto's father and spouse
  ?father dbo:spouse ?spouse .
  ?father dbo:child dbr:Philip_I,_Prince_of_Taranto .
  
  # Charles Martel of Anjou's parent
  ?parent dbo:child dbr:Charles_Martel_of_Anjou .

  # Find the person who fits all criteria
  FILTER (?child = ?spouse && ?spouse = ?parent)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,25,train,"Give me the father of Eleonore of Austria, Queen of Poland and child of the father of Cecilia Renata of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Eleonore_of_Austria_queen_of_Poland dbo:parent ?father .
  
  dbr:Cecilia_Renata_of_Austria dbo:parent ?father .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,38,train,"Give me the predecessor of the child of Saw Shwe Khet and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    ?child dbo:parent dbr:Saw_Shwe_Khet .
    ?myatHponePyo dbo:parent ?father .
    ?father dbo:spouse ?spouse .
    ?child dbo:parent ?spouse .
    ?predecessor dbo:child ?child .
    FILTER EXISTS { ?predecessor a dbo:Monarch }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
392,8,train,Give me the member of 1. FC Magdeburg and reference to the designer of Aston Martin AMR1.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?v0 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?designer WHERE {
  # Find a member of 1. FC Magdeburg
  ?player dbo:team dbr:1._FC_Magdeburg .
  ?player rdfs:label ?member .
  
  FILTER (lang(?member) = 'en') .

  # Find the designer of Aston Martin AMR1
  ?car dbo:designer ?person .
  ?car rdfs:label ""Aston Martin AMR1""@en .
  ?person rdfs:label ?designer .

  FILTER (lang(?designer) = 'en')
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
103,16,train,"Give me the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession
WHERE {
  # Find the movie ""Ab Kya Hoga""
  dbr:Ab_Kya_Hoga a dbo:Film .
  
  # Find actors associated with this film
  ?filmActor dbo:character portrayedBy ?actor .
  ?filmActor dbo:film dbr:Ab_Kya_Hoga .

  # Check if the actor has a profession that includes being a politician
  ?actor dbo:occupation ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""politician""))
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
742,5,train,Give me the resident of Sofia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . },"```sparql
SELECT ?resident WHERE {
  wd:Q1596 dbo:location ?place .
  ?place rdfs:label ""Sofia""@en.
  ?resident dbo:residence ?place .
}
```",1,1,2,1,1,3,2,20,0,0,16,0,0.0,0
628,4,train,"Give me the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Bobby Shmurda is a musical artist (P106)
    wdt:P175 ?artist.          # Associated with the following musical artists (P175)
  FILTER(?artist != wd:Q123456) .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Bobby Shmurda.",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
103,44,train,Give me the actor of Dispatches from Elsewhere and professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actor of ""Dispatches from Elsewhere""
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .

  # The Shadow's alter ego
  ?shadowAlterEgo rdfs:label ""Lamont Cranston""@en .
  ?actor dbo:profession ?shadowAlterEgo .

  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation dbr:Actor .
  ?actor dbo:occupation dbr:Actor .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
905,46,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          dbp:name ""Philip, Despot of Romania""@en .

  # Step 2: Find his parent who is royalty
  ?parent dbo:child ?philip ;
          a dbo:RoyalFamilyMember .

  # Step 3: Determine the father of this royal parent
  ?grandfather dbo:spouse ?parent ;
               a dbo:RoyalFamilyMember .

  # Step 4: Identify the spouse of this grandfather
  ?spouse dbo:spouse ?grandfather .

  # Repeat similar steps for Charles I of Hungary

  # Step 5: Identify Charles I of Hungary's royal parent and their father
  ?charles a dbo:Person ;
           dbp:name ""Charles I of Hungary""@en .
  
  ?parent2 dbo:child ?charles ;
           a dbo:RoyalFamilyMember .

  ?grandfather2 dbo:spouse ?parent2 ;
                a dbo:RoyalFamilyMember .

  # Step 6: Find the spouse of this grandfather
  ?spouse2 dbo:spouse ?grandfather2 .

  FILTER(?spouse = ?spouse2)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,0,train,Give me the birth place of Winston Chang.,SELECT ?result WHERE { <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q12345 foaf:bornIn ?birthPlace .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Winston Chang. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
119,53,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  ?event dbo:agent ?person ;
         dbo:place dbr:Spain .

  ?event dbo:positionHeld ?office ;
         dbp:party dbr:Spanish_Socialist_Workers'_Party .

  ?office a dbo:PoliticalOffice ;
          dbo:country dbr:Spain .
}
```

This query aims to find the political office held by Anxo Quintana, associated with an event in Spain, under the Spanish Socialist Workers' Party.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
258,8,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Eleonora Menicucci de Oliveira""@en .
  
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
943,37,train,"Give me the father of Baeda Maryam I and reference to the alter ego of the reference to Lamont Cranston (radio, film and television).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?alterEgo WHERE {
  # Query to find the father of Baeda Maryam I
  OPTIONAL {
    ?baedaMaryam1 a dbo:Monarch ;
                  dbo:parent ?father .
    FILTER (str(?baedaMaryam1) = ""Baeda_Maryam_I"")
  }

  # Query to find Lamont Cranston's alter ego
  OPTIONAL {
    ?lamontCranston dbo:alterEgo ?alterEgo .
    FILTER (str(?lamontCranston) = ""Lamont_Cranston_(radio,_film_and_television)"")
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
871,51,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Step 1: Frederick Stanley, 16th Earl of Derby
  ?frederick dbr:Frederick_Stanley,_16th_Earl_of_Derby .

  # Step 2: His child who is a politician
  ?child1 dbo:spouse ?frederick .
  ?child1 dbo:occupation dbr:Politician .

  # Step 3: Parent of this child (who is also a politician)
  ?parent1 dbo:child ?child1 .
  
  # Step 4: Alumnus of Eton College
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  # Step 5: Their child who is a politician
  ?child2 dbo:spouse ?alumnus .
  ?child2 dbo:occupation dbr:Politician .

  # Step 6: Parent of this child
  ?parent2 dbo:child ?child2 .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
311,3,train,"Who is the associated musical artist, that is an artist, of R.E.M.?",SELECT ?result WHERE { <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?rem { dbr:R.E.M. }
  ?rem dbo:associatedMusicalArtist ?artist .
  FILTER (?artist != ?rem)
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
293,59,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find films associated with Nat Levine
  ?film dbo:director dbr:Nat_Levine .
  
  # Step 2: Find actors of those films
  ?film dbo:starring ?actor .

  # Step 3: Find the spouse of each actor
  ?actor dbp:spouse ?spouse .

  # Step 4: Identify landmarks at the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevation ""20.1168""^^xsd:float .
  
  # Step 5: Find ruling party members associated with those landmarks
  ?partyMember dbo:memberOf ?rulingParty ;
               dbo:location ?landmark .

  # Ensure the spouse is also a member of the ruling party at the landmark
  ?spouse dbo:memberOf ?rulingParty .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
87,0,train,Give me the actor of Paradise (2013 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film dbo:director ?director .
  ?film dct:title ""Paradise""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2013)
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,7,0,0.0,0
633,16,train,"Give me the parent of the father of Dorothea of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Dorothea of Lorraine's father
  dbp:Dorothea_of_Lorraine dbo:father ?father .
  
  # Father's parent (Dorothea's grandfather)
  ?father dbo:parent ?grandfather .

  # Spouse of the grandfather
  ?grandfather dbo:spouse ?spouse .

  # Ensure spouse is royalty and noble
  ?spouse rdf:type dbp:Royalty .
  ?spouse rdf:type dbp:Noble .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
905,60,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Find Stephen V of Hungary and his predecessor
  ?stephenV a dbo:Monarch ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?predecessor dbo:successor ?stephenV .

  # Step 2: Find Philip, Despot of Romania and trace back to his grandfather
  ?philip a dbo:Monarch ;
          foaf:name ""Philip, Despot of Romania""@en .
  
  ?father dbo:child ?philip ;
          dbo:spouse ?grandparentSpouse .

  ?grandparent dbo:child ?father .

  # Step 3: Determine the spouse of this grandfather
  ?grandparent dbo:spouse ?grandparentSpouse .

  # Step 4: Find the grandchild who is a royalty
  ?grandchild dbo:child ?father ;
              a dbo:Monarch .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
80,32,train,Give me the actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v1 <http://dbpedia.org/property/starring> """"@en . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movieActor ?albumArtist WHERE {
  # Find the movie associated with ""and""
  ?movie rdfs:label ""And"" .
  FILTER (lang(?movieLabel) = 'en')
  
  # Get actors of the movie
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?movieActor .

  # Find the album for the song ""What You Know""
  ?song rdfs:label ""What You Know"" ;
        dbo:lyricist dbr:T.I. ;
        dbo:album ?album .
  
  FILTER (lang(?songLabel) = 'en')
  
  # Get artists of the album
  ?album dbo:artist ?artist .
  ?artist foaf:name ?albumArtist .
}
```",4,4,5,2,2,3,3,71,0,0,10,0,0.0,0
78,2,train,Give me the band member of The Alan Parsons Project.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
SELECT ?member WHERE {
  ?album dcterms:creator ""The Alan Parsons Project"" .
  ?album dbo:musicalArtist ?bandMember .
  FILTER(?bandMember != ""The Alan Parsons Project"")
}
```",1,1,2,1,1,2,3,28,0,0,17,0,0.0,0
609,0,train,Give me the birth place of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q1774 dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
905,54,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of Stephen V of Hungary.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Philip I, Prince of Taranto's father
  ?philipI a dbo:Person ;
           foaf:name ""Philip I, Prince of Taranto""@en .
  
  ?father dbo:child ?philipI ;
          dbo:spouse ?mother .

  # Step 2: Find the mother who is royalty
  ?mother a dbo:RoyalFamilyMember .

  # Step 3: Identify the spouse of Maria of Bytom
  ?maria dbr:Maria_of_Bytom ;
         dbo:spouse ?spouseOfMaria .

  # Step 4: Find the parent of the father of this spouse
  ?fatherOfSpouse dbo:child ?spouseOfMaria .
  
  ?parentOfFatherOfSpouse dbo:child ?fatherOfSpouse .

  # Step 5: Ensure this parent is a child of Stephen V of Hungary
  ?stephenV dbr:Stephen_V_of_Hungary ;
            dbo:child ?parentOfFatherOfSpouse .

  # Return the spouse who matches all conditions
  BIND(?mother AS ?spouse)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
941,14,train,"Give me the spouse of the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalSpouse WHERE {
  # Step 1: Identify Princess Antoinette of Brunswick-Wolfenbüttel
  ?princess a dbo:Person ;
            foaf:name ""Antoinette, Princess of Brunswick-Wolfenbüttel""@en .

  # Step 2: Find her children who are royalty
  ?child dbo:parent ?princess ;
         a dbo:RoyalFamilyMember .

  # Step 3: Determine the spouse of that royal child
  ?spouse1 dbp:spouse ?child .

  # Step 4: Find the spouse of this individual (the final spouse)
  ?finalSpouse dbp:spouse ?spouse1 .
}
```

This query assumes:
- Princess Antoinette is identified by her name.
- Her children are linked via `dbo:parent`.
- Royalty status is indicated by being a member of the royal family (`dbo:RoyalFamilyMember`).
- Spouses are connected using `dbp:spouse`.",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
414,7,train,"Give me the show of the host, that is an educational institution, of Nobel Prize in Physics.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> ?v1 . <http://dbpedia.org/resource/Nobel_Prize_in_Physics> <http://dbpedia.org/ontology/presenter> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?noblePrize dbo:category dbr:Nobel_Prizes_in_Physics .
  ?noblePrize dbo:hostedBy ?host .
  ?host dbo:type dbr:Educational_Institution .
  ?host dbo:wikiPageRedirects ?show .
}
```",2,3,3,2,1,3,2,20,0,0,11,0,0.0,0
80,61,train,"Give me the professional in the alter ego of the series of The Golden Master and actor of the album of the work, that is a song and a musical work, of T.I..",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors from ""The Golden Girls""
  ?series dbo:starring ?actor .
  FILTER (str(?series) = ""The_Golden_Girls"")

  # Check if the actor has a professional role in music related to T.I.
  OPTIONAL { 
    ?album dbo:artist ?actor .
    ?song dbo:lyricsBy ?tI .
    ?tI rdfs:label ""T.I.""@en .
    FILTER (str(?album) = ""work_album"" || str(?song) = ""work_song"")
  }
}
```

This query attempts to find actors from ""The Golden Girls"" who have a professional connection to T.I.'s music work. You would need to replace `""work_album""` and `""work_song""` with the specific album and song titles if known.",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
668,13,train,Give me the professional in the profession of Rod Argent.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?personLabel WHERE {
  # Find Rod Argent's profession
  ?rodArgent a dbo:Person ;
             foaf:name ""Rod Argent"" ;
             dbo:occupation ?profession .

  # Find other people with the same occupation
  ?person a dbo:Person ;
          dbo:occupation ?profession ;
          foaf:name ?name .
  
  FILTER(?person != ?rodArgent) # Exclude Rod Argent from results

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?personLabel
```",2,2,3,2,1,3,3,71,0,0,45620,0,0.0,0
756,3,train,"Give me the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Identify the resource for the 2006–07 VfL Bochum season
  VALUES ?vflBochumSeason { 
    dbr:2006%E2%80%9307_VfL_Bochum_season 
  }
  
  # Find the successor of this season using a property that links seasons to their successors
  ?vflBochumSeason dbo:succeeds ?successor .
}
```

This query assumes there is a `dbo:succeeds` property in DBpedia linking one sports season to its successor. If such a property does not exist, you may need to explore other properties or patterns that indicate succession.",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
39,27,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Find Bob Thompson who is a musician
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .
  
  # Use the birth name to find any musical artist with that name
  ?artist dbp:birthName ?birthName ;
          a dbo:MusicalArtist .

  # Get the band associated with this musical artist
  ?artist dbo:band ?band .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
37,4,train,Give me the birthplace of Scott LaFaro and birthplace of Bob Crewe.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Scott_LaFaro 
    dbr:Bob_Crewe 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```

This query uses the `dbo:birthPlace` property to find the birthplaces of Scott LaFaro and Bob Crewe. The `VALUES` clause specifies the individuals we are interested in.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
103,19,train,"Give me the professional in Actor and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find television shows featuring Richard E. Grant
  ?tvShow a dbo:TelevisionSeries ;
          dbo:starring dbr:Richard_E._Grant .

  # Find other actors in these television shows
  ?tvShow dbo:starring ?coActor .
  
  # Ensure the co-actor is also an actor by profession
  ?coActor dbo:occupation dbo:Actor .
  
  # Exclude Richard E. Grant from the results
  FILTER (?coActor != dbr:Richard_E._Grant)

  # Bind the co-actor to the variable
  BIND(?coActor AS ?actor)
}
```",3,4,4,2,2,3,3,71,0,0,24,0,0.0,0
769,13,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Find Tony Hollings' birthdate
  dbr:Tony_Hollings dbo:birthday ?birthday .

  # Find players with the same birthday who are athletes, soccer players, sports managers, and soccer managers
  ?player dbo:birthday ?sameBirthday ;
          a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager .
  
  FILTER (?birthday = ?sameBirthday)
}
```",3,7,4,3,1,3,2,20,0,0,6,0,0.0,0
392,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }",,1,1,2,1,1,2,2,9,0,0,98447,0,0.0,0
816,24,train,Give me the parent of the professional in Photographer and parent of Doon Arbus.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  VALUES (?entity) { 
    dbpedia:Photographer 
    dbpedia:Doon_Arbus 
  }
  
  ?entity rdfs:subClassOf+ ?parent .
}
ORDER BY ?parent
```

This query does the following:
- It uses the `rdfs:subClassOf` property to find all superclasses (`?parent`) of the given entities.
- The `VALUES` clause specifies the two entities we are interested in: ""Photographer"" and ""Doon Arbus"".
- The `+` operator is used with `rdfs:subClassOf` to traverse up the hierarchy, capturing all ancestors (parents) of each entity.
- The results are ordered by the parent class for clarity.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
293,14,train,Give me the person born as the birth name of Ann Sothern.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?annSothern dbo:birthName ""Ann Sothern""@en .
  ?annSothern a dbo:Person .

  ?person dbo:birthName ""Ann Sothern""@en .
  ?person a dbo:Person .
  
  FILTER(?annSothern != ?person)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,41,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:award <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  
  # Step 2: Find Arthur Stanley (politician) and his father
  dbr:Arthur_Stanley_(politician) dbo:father ?arthurFather .

  # Step 3: Find Frederick Stanley, 16th Earl of Derby, and one of his children
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?frederickChild .
  
  # Step 4: Identify the common parent among these individuals
  OPTIONAL { ?awardee dbo:father ?parent . }
  OPTIONAL { ?arthurFather rdfs:label ?parentLabel FILTER(CONTAINS(LCASE(?parentLabel), ""common parent"")) . }
  OPTIONAL { ?frederickChild dbo:father ?parent . }

  # Ensure the same person is identified as a parent in all cases
  VALUES ?parent {
    ?parent1
    ?parent2
    ?parent3
  }
  
  FILTER(?parent1 = ?parent2 && ?parent2 = ?parent3)
}
```

This query attempts to find a common parent by linking the relationships described. Note that this is a complex query and may require adjustments based on actual data availability in DBpedia.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
198,45,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Step 1: Find the person who died on 1850-08-05
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)

  # Step 2: Determine their birthplace, which is a settlement and American
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  # Step 3: Find the entity associated with Amasa Tracy in that birthplace
  ?tracyEntity dbo:associatedWith dbr:Amasa_Tracy ;
               dbo:location ?birthPlace .

  # Step 4: Ensure this entity is related to Quincy Adams Gillmore
  ?entity dbo:forceOf dbr:Quincy_Adams_Gillmore .
  FILTER (?entity = ?tracyEntity)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
782,16,train,"Give me the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ""1945-03-30""^^xsd:date .
  
  ?band dbo:member ?person .
  ?bandMember dbo:member ?band .

  FILTER(?band != ?person) # Ensure we don't get the artist themselves as their own band member
}
```",2,3,3,2,1,3,3,71,0,0,61,0,0.0,0
347,27,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfFather WHERE {
  # Step 1: Identify Maria Anna of Bavaria
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavaria_(1574-1616) }
  
  # Step 2: Find her children
  ?mariaAnna dbo:child ?child .
  
  # Step 3: Check if the child is royalty
  ?child dbo:nationality ?nationality ;
         a ?class .
  FILTER EXISTS { 
    VALUES ?royaltyClass { dbo:Monarch dbo:RoyalPerson }
    ?child rdf:type+ ?royaltyClass .
  }

  # Step 4: Find the father of this royal child
  ?child dbo:father ?father .

  # Step 5: Find children of that father
  ?father dbo:child ?childOfFather .
}
```",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
871,59,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee ?parentOfEdward
WHERE {
  # Step 1: Find the award Rodney Lees received
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Step 2: Find the parent of the awardee of that award
  ?awardee dbo:recipient ?award .
  ?parentOfAwardee dbo:child ?awardee .

  # Step 3: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .
  
  # Step 4: Check if Edward is a politician and an office holder
  FILTER EXISTS { dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:occupation dbr:Politician }
  FILTER EXISTS { dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:officeHolder ?office }

  # Step 5: Find the parent of Edward Stanley
  ?parentOfEdward dbo:child dbr:Edward_Stanley,_17th_Earl_of_Derby .
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
943,39,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Step 1: Identify Baeda Maryam I
  ?baedaMaryamI a dbo:Monarch ;
                foaf:name ""Baeda Maryam I""@en .

  # Step 2: Find his child (son)
  ?child dbo:parent ?baedaMaryamI ;
         a dbo:Person .

  # Step 3: Determine the father of that child
  ?father dbo:parent ?child .

  # Step 4: Identify the grandfather who is royalty and an office holder
  ?grandfather dbo:parent ?father ;
               a dbo:Monarch, dbo:OfficeHolder .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
737,37,train,Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?greatGrandchild ?childOfMargareteSophie WHERE {
  # Find Alexander of Württemberg
  ?alexander a dbo:Person ;
             rdfs:label ""Alexander of Württemberg""@en .
  
  # Find his children
  ?alexanderChild dbo:parent ?alexander ;
                  a dbo:Person .

  # Find his grandchildren (children's children)
  ?grandchild dbo:parent ?alexanderChild ;
              a dbo:Person .

  # Find his great-grandchildren (grandchildren's children)
  ?greatGrandchild dbo:parent ?grandchild ;
                   a dbo:Person .
  
  # Find Archduchess Margarete Sophie of Austria
  ?margareteSophie a dbo:Person ;
                  rdfs:label ""Archduchess Margarete Sophie of Austria""@en .

  # Find her children
  ?childOfMargareteSophie dbo:parent ?margareteSophie ;
                          a dbo:Person .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,17,train,"Give me the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find entities that are both television shows and societal events
  ?war a dbo:SocietalEvent ;
      a dbo:TelevisionShow .

  # Filter wars related to the military forces involved in the Battle of Vienna
  ?war dbo:relatedToMilitaryForce [
    dbo:participatingMilitaryForce dbr:Holy_Roman_Empire ;
                                   dbo:participatingMilitaryForce dbr:Polish-Lithuanian_Commonwealth ;
                                   dbo:opposingMilitaryForce dbr:Ottoman_Empire
  ] .
}",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,38,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get Rod Argent's profession
  ?rodArgent dbo:profession ?profession .
  FILTER (str(?rodArgent) = ""Rod_Argent"") .

  # Get Joey B's birth name
  ?joeyB dbp:birthName ?birthName .
  FILTER (str(?joeyB) = ""Joey_B"") .

  # Find individuals with the same profession and birth name
  ?person dbo:profession ?sameProfession ;
          dbp:birthName ?sameBirthName .
  
  FILTER (?sameProfession = ?profession && ?sameBirthName = ?birthName)
  FILTER (!str(?person) IN (""Rod_Argent"", ""Joey_B""))
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
668,58,train,"Give me the associated musical artist of $pacely and professional in the profession of Rod Argent and person born as the birth name of the native, that is an artist, of Central Region, Ghana.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find an artist associated with $pacely
  ?pacely dbo:associatedMusicalArtist ?artist .

  # Ensure the artist is professionally linked to Rod Argent
  ?artist dbo:profession dbr:Rod_Argent .

  # Ensure the artist was born in Central Region, Ghana
  ?artist dbo:birthPlace dbr:Central_Region,_Ghana .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,3,train,Give me the designer of Aston Martin AMR1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aston_Martin_AMR1> <http://dbpedia.org/property/designer> ?result . },"```sparql
SELECT ?designer WHERE {
  wd:Q123456 dbp:model ""Aston Martin AMR1"" .
  wd:Q123456 dbp:designer ?designer .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Aston Martin AMR1 if it is different.",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
140,13,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  dbr:Picketts_Charge dbo:participatedIn ?battle.
  ?battle dbo:commandedBy ?commander.
}
```",3,4,4,3,1,3,2,20,0,0,42,0,0.0,0
270,5,train,"Give me the predecessor of the person born, that is a politician, as Ada Jane Low.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ada Jane Low""@en ;
          dbo:occupation dbo:Politician .
  
  OPTIONAL { 
    ?position dbo:officeHolder ?person ;
              dbo:predecessor ?predecessor .
  }
}
```

This query does the following:
- It looks for a person (`?person`) who is of type `dbo:Person` and has the name ""Ada Jane Low"" in English.
- Ensures that this person's occupation includes being a politician (`dbo:Politician`).
- Searches for any position or office (`?position`) held by this person, and retrieves the predecessor (`?predecessor`) of that position.",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
816,4,train,"Give me the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?movie WHERE {
  ?work dbo:starringHerschelBernardi dbpedia-owl:Person:Herschel_Bernardi .
  ?work rdf:type dbo:Film .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?work))) AS ?movie)
}
```",1,2,2,1,1,3,3,71,0,0,13,0,0.0,0
198,50,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Step 1: Find the award received by Quincy Adams Gillmore
  ?award dbo:recipient dbr:Quincy_Adams_Gillmore .
  
  # Step 2: Identify the force or entity associated with the awardee of that award
  ?awardee dbo:award ?award .
  ?awardee dbo:force ?force .

  # Step 3: Find Henry Clay Lewis's birthplace, which is a settlement and American
  dbr:Henry_Clay_Lewis dbo:birthPlace ?settlement .
  FILTER (STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?settlement a dbo:Settlement } &&
          EXISTS { ?settlement dbo:country dbr:United_States_of_America })
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
609,14,train,Give me the birth place of the author of El Deafo.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?birthPlace WHERE {
  ?author foaf:name ""Cece Bell""@en .
  ?author dbo:book dbp:title ""El Deafo""@en .
  ?author dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,23,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify the Siege of Mukha event
  ?siege a dbo:Battle ;
         rdfs:label ""Siege of Mukha""@en .

  # Step 2: Find the commander associated with this event
  ?siege dbo:commander ?commander .

  # Step 3: Ensure the commander is royalty
  ?commander dbo:nationality ?royalty ;
             a dbo:Monarch .

  # Step 4: Determine the parent of this royal commander
  ?parent dbo:child ?commander .

  # Step 5: Find a child of this parent who is also royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,4,0,0.0,0
375,15,train,Give me the entity in the birth place of Yamaza Enjirō and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Yamaza Enjirō's birthplace
  ?yamaza a dbo:Person ;
          foaf:name ""Yamaza Enjirō""@en ;
          dbo:birthPlace ?birthPlace .

  # Hashiba Hidekatsu's war participation
  ?hashiba a dbo:Person ;
           foaf:name ""Hashiba Hidekatsu""@en ;
           dbo:participatedIn ?war .

  # Find the entity related to both birthplace and war
  OPTIONAL { ?entity rdfs:label ?birthPlaceLabel . FILTER (lang(?birthPlaceLabel) = 'en') }
  OPTIONAL { ?entity rdfs:label ?warLabel . FILTER (lang(?warLabel) = 'en') }

  # Ensure the entity is related to both Yamaza Enjirō's birthplace and Hashiba Hidekatsu's war
  VALUES ?entity {
    ?birthPlace
    ?war
  }
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
905,42,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and spouse of the father of Philip I, Prince of Taranto and parent of Charles Martel of Anjou.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary and his children
  dbr:Béla_IV_of_Hungary dbo:spouse ?spouse .
  ?parent (dbo:spouse|dbo:child) dbr:Béla_IV_of_Hungary .

  # Grandchildren of Béla IV
  ?parent dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Philip I, Prince of Taranto and his father's spouse
  dbr:Philip_I,_Prince_of_Taranto dbo:father ?philipFather .
  ?philipFather dbo:spouse ?spouseOfPhilipsFather .

  # Ensure the grandchild is the spouse of Philip's father
  ?grandchild owl:sameAs ?spouseOfPhilipsFather .

  # Charles Martel of Anjou and his parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?charlesParent .
  
  # Ensure the grandchild is also a parent of Charles Martel of Anjou
  ?grandchild owl:sameAs ?charlesParent .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
89,52,train,"Give me the child of the parent of the child of Minye Kyawswa and predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalty WHERE {
  # Minye Kyawswa's child
  ?child dbo:parent dbr:Minye_Kyawswa .
  
  # Parent of the child (which is Minye Kyawswa)
  ?minyeKyawswa dbo:child ?child .

  # Predecessor of Myat Hpone Pyo
  ?predecessor dbo:succeededBy dbr:Myat_Hpone_Pyo .

  # Father of Myat Hpone Pyo and his spouse
  ?father dbo:child dbr:Myat_Hpone_Pyo .
  ?spouse dbo:spouse ?father .

  # The royalty figure we are looking for
  ?royalty dbo:succeededBy ?predecessor ;
           dbo:spouse ?spouse ;
           a dbo:Monarch .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
687,44,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?playerInMolinaTeam ?actorAthlete ?soccerPlayerManager
WHERE {
  # Find Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:team ?molinateam .
  
  # Find the player in that team
  ?playerInMolinaTeam dbo:playsFor ?molinateam .

  # Find actor from ""All or Nothing: Manchester City"" who is also an athlete
  ?actorAthlete dbo:profession dbr:Actor ;
                dbo:occupation dbr:Athlete ;
                dbo:work dbr:All_or_Nothing:_Manchester_City .
  
  # Find a soccer player and manager born on 1979-11-03
  ?soccerPlayerManager dbo:birthDate ""1979-11-03""^^xsd:date ;
                       dbo:occupation dbr:Soccer_player ;
                       dbo:occupation dbr:Soccer_manager .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
633,13,train,"Give me the spouse of the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine a dbo:Person ;
    dbo:child ?child .

  # Child is royalty
  ?child a dbo:Royalty .

  # Parent (Antoine) and spouse are royalty and nobility
  dbr:Antoine,_Duke_of_Lorraine a dbo:Royalty, dbo:Noble .

  # Spouse of Antoine
  dbr:Antoine,_Duke_of_Lorraine dbo:spouse ?spouse .
  
  # Ensure the spouse is also royalty and noble
  ?spouse a dbo:Royalty, dbo:Noble .
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
39,23,train,Give me the professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Find the producer of Coke Studio Philippines
  ?show dbr:Coke_Studio_Philippines dbo:producer ?producer .

  # Step 2: Get the profession of that producer
  ?producer dbo:occupation ?profession .

  # Step 3: Find other professionals with the same occupation
  ?professional dbo:occupation ?profession .
  
  FILTER(?professional != ?producer) # Exclude the original producer from results
}
```",3,3,4,3,1,3,3,71,0,0,46017,0,0.0,0
905,55,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of Philip I, Prince of Taranto and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?parentOfFather WHERE {
  # Step 1: Identify Charles I of Hungary's father
  ?charles dbo:father ?father .
  FILTER(STR(?charles) = ""Charles_I_of_Hungary"")

  # Step 2: Find the mother (spouse of the father) who is royalty
  ?mother dbo:spouse ?father .
  ?mother a dbo:Monarch .

  # Step 3: Identify Philip I, Prince of Taranto's father and his child
  ?philip dbo:father ?fatherOfPhilip .
  FILTER(STR(?philip) = ""Philip_I,_Prince_of_Taranto"")
  
  ?childOfPhilip dbo:child ?fatherOfPhilip .

  # Step 4: Identify Béla IV of Hungary's child who is royalty
  ?bela dbo:child ?royalChild .
  FILTER(STR(?bela) = ""Béla_IV_of_Hungary"")
  ?royalChild a dbo:Monarch .

  # Final step: Find the parent of the father (mother) identified in Step 2
  ?parentOfFather dbo:spouse ?father .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
668,30,train,Give me the associated musical artist of $pacely and professional in Musician and person born as the birth name of Joey B.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Assuming $pacely refers to a known entity in DBpedia, replace `dbr:Pacino` with the correct resource if needed
  OPTIONAL { 
    dbr:Pacino dbo:musicalArtist ?artist .
  }
  
  # Joey Badass's birth name is Jo-Vaughn Virginie Scott
  dbr:Joey_Badass dbo:birthName ""Jo-Vaughn Virginie Scott""@en ;
                  dbo:musicalArtist ?artist .

  FILTER (?artist != dbr:Unknown) # To filter out unknown or null results
}
```

This query assumes that ""$pacely"" refers to a known entity in DBpedia, such as Al Pacino. If this is incorrect, you would need to replace `dbr:Pacino` with the correct resource identifier.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
609,40,train,Give me the birth place of Cece Bell and birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Cece Bell's birthplace
  OPTIONAL { 
    dbr:Cece_Bell dbo:birthPlace ?birthPlace .
    BIND(dbr:Cece_Bell AS ?person)
  }
  
  # Awardee related to Vince Gilligan (e.g., Breaking Bad Emmy Awards)
  OPTIONAL {
    dbr:Vince_Gilligan dbo:awardReceived ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?birthPlace .
    BIND(?awardee AS ?person)
  }
  
  # Glenn Youngkin's birthplace
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlace .
    BIND(dbr:Glenn_Youngkin AS ?person)
  }
}
ORDER BY ?person",5,5,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
595,12,train,Give me the author of Back to Work (book) and commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?commander
WHERE {
  # Find the author of ""Back to Work"" book
  OPTIONAL {
    ?book a dbo:Book ;
          rdfs:label ""Back to Work""@en .
    ?book dbo:author ?author .
    FILTER(LANG(?author) = 'en')
  }

  # Find the commander during the Third Taiwan Strait Crisis
  OPTIONAL {
    ?crisis a dbo:MilitaryConflict ;
            rdfs:label ""Third Taiwan Strait Crisis""@en .
    ?crisis dbo:commander ?commander .
    FILTER(LANG(?commander) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,15,train,"Give me the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?person dbo:penName dbr:Kent_Allard .
  ?person dbo:alterEgo ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
609,20,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceGilliganBirthPlace ?governorBirthPlace WHERE {
  # Find Vince Gilligan and his birthplace
  dbr:Vince_Gilligan a dbo:Person ;
                     dbo:birthPlace ?vinceGilliganBirthPlace .

  # Find the current governor of Virginia (as of my knowledge cutoff in October 2023, it's Glenn Youngkin)
  dbr:Glenn_Youngkin a dbo:Politician ;
                    dbo:governmentRole [
                      a dbo:GovernmentFunction ;
                      dbo:officeHolder dbr:Virginia ;
                      dbo:positionTitle ""Governor""@en
                    ] ;
                    dbo:birthPlace ?governorBirthPlace .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
737,61,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild
WHERE {
  # Alexander of Württemberg (1804-1881)
  ?alex a dbo:Person ;
        foaf:name ""Alexander of Württemberg""@en .
  
  ?alexChild dbo:child ?alexGrandchild .
  ?alexGrandchild dbo:child ?alexGreatGrandchild .
  ?alexGreatGrandchild dbo:child ?alexGreatGreatGrandchild .

  # Archduchess Margarete Sophie of Austria
  ?margarete a dbo:Person ;
             foaf:name ""Archduchess Margarete Sophie of Austria""@en .
  
  ?margareteParent dbo:parent ?margareteChild .
  ?margareteChild dbo:child ?margareteGrandchild .

  # Find the intersection
  FILTER(?alexGreatGreatGrandchild = ?margareteGrandchild)
  FILTER(STRSTARTS(LCASE(?alexGreatGreatGrandchild), ""royalty""))

}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
531,32,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Find Alberto Ruiz-Gallardón
  ?person rdfs:label ""Alberto Ruiz-Gallardón""@en .
  
  # Ensure he is a politician and office holder
  ?person dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""office holder""))

  # Find his residence or office related to the Central African Republic Civil War
  ?location dbo:residenceLocation ?person ;
            dbo:officeHolder ?person ;
            dbo:relatedEvent dbr:Central_African_Republic_Civil_War .

  # Get the tenant of that location
  ?location dbo:tenant ?tenant .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
905,30,train,"Give me the parent of Charles Martel of Anjou and child of the child, that is a royalty, of Béla IV of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Parent of Charles Martel of Anjou
  ?parent a dbo:Person ;
          dbo:child dbr:Charles_Martel_of_Anjou .

  # Grandchild of Béla IV of Hungary who is royalty
  ?grandchild a dbo:RoyalFamily ;
              dbo:child ?child .
  ?child dbo:child dbr:Béla_IV_of_Hungary .
  
  # Spouse of Charles II of Naples
  ?person dbo:spouse dbr:Charles_II_of_Naples .

  # Combine conditions
  FILTER (?parent = ?grandchild)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,0,train,Give me the birthplace of Ekaterina Zaharieva.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:QXXXXX dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:QXXXXX` with the actual DBpedia identifier (QID) for Ekaterina Zaharieva. You can find this by searching her name on DBpedia or using a SPARQL endpoint to query for her QID.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
375,13,train,"Give me the author of the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?movie a dbo:Film ;
         dbo:genre dbr:Television_show .
  
  ?movie dbo:creator ?author .

  ?author a dbo:Artist, dbo:MusicalArtist ;
          dbp:dateOfDeath ""2020-06-18""^^xsd:date .

}
```

This query does the following:

- Selects movies that are both films and television shows.
- Finds the creator of these works.
- Filters creators who were artists and musical artists, and who passed away on June 18, 2020.",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
89,11,train,Give me the child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Find Min Hla Htut's parent
  ?minHlaHtut a dbo:Person ;
              foaf:parent ?parent .

  FILTER(STR(?minHlaHtut) = ""Min_Hla_Htut"") 

  # Step 2: Find the children of that parent
  ?child a dbo:Person ;
         foaf:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
203,54,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce1 ?militaryForce2 WHERE {
  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  
  ?war dbo:militaryUnit ?regiment ;
       dbo:commander ?commander1 .

  # Find wars involving the Battle of Cape Finisterre (1805)
  ?battle dbr:Battle_of_Cape_Finisterre_(1805) ;
          dbo:participatedInWar ?war2 ;
          dbo:militaryForce ?militaryForce2 .
  
  # Ensure one commander or military force is related to William Bayne
  OPTIONAL { ?commander1 rdfs:label ""William Bayne""@en . }
  OPTIONAL { ?militaryForce2 rdfs:label ""William Bayne""@en . }

  # Find the military forces involved in these wars
  ?war dbo:militaryForce ?militaryForce1 .
  
  FILTER(?war = ?war2) # Ensure it's the same war

} ORDER BY ?commander ?militaryForce1 ?militaryForce2",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
143,4,train,Give me the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q1234568 foaf:name ""Cynthia Morgan""@en .
  OPTIONAL { wd:Q1234568 schema:birthName ?birthName . }
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for Cynthia Morgan. You can find this by searching DBpedia or using a SPARQL endpoint to query for her resource ID.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,28,train,"Give me the player in Sergio Agüero and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInAgüeroTeam ?teamOfAimar ?athletePlayer
WHERE {
  # Sergio Agüero's team(s)
  ?agüeroTeam dbo:member dbr:Sergio_Agüero .
  
  # Pablo Aimar's team(s)
  ?aimarTeam dbo:member dbr:Pablo_Aimar .

  # Find players in the same teams
  ?playerInAgüeroTeam dbo:team ?agüeroTeam .
  ?playerInAimarTeam dbo:team ?aimarTeam .

  # Person born on 1955-02-22 who is an athlete
  ?athlete dbr:Pablo_Aimar dbo:birthDate ""1955-02-22""^^xsd:date ;
            a dbo:Athlete .
  
  # Find the player role of this person
  ?athletePlayer dbo:playerInTeam ?athlete .

}
```

This query attempts to find:
- Players who were in teams with Sergio Agüero.
- Teams that Pablo Aimar played for.
- The athlete born on February 22, 1955, and their associated player role.

Note: This is a conceptual query. Adjustments may be needed based on the actual structure of DBpedia data at the time of querying.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
943,34,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?grandparent ?commander ?commandersParent
WHERE {
  # Baeda Maryam I and his father
  dbr:Baeda_Maryam_I dbo:father ?father .
  
  # Father's parent (Grandparent)
  ?father dbo:child ?grandparent .
  FILTER EXISTS { ?grandparent a dbo:Monarch } # Ensure the grandparent is royalty

  # Commander in Siege of Mukha
  ?commander dbo:participatedIn dbr:Siege_of_Mukha .
  FILTER EXISTS { ?commander a dbo:Monarch } # Ensure the commander is royalty
  
  # Commander's parent (Parent)
  ?commander dbo:child ?commandersParent .
  FILTER EXISTS { ?commandersParent a dbo:Monarch } # Ensure the parent is royalty
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
398,10,train,Who is the writer of the work of Aleksandr Filimonov?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?author WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Aleksandr Filimonov""@en .
  
  ?work dbo:writer ?person ;
        dbo:title ?title .

  OPTIONAL { 
    ?work dbo:author ?author .
  }
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
731,8,train,Give me the war of the commander in Sinking of Prince of Wales and Repulse.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?ship { 
    dbr:HMS_Prince_of_Wales_(53) 
    dbr:HMS_Repulse_(1916)
  }
  
  ?ship dbo:sunkDuring ?event .
  ?event dbo:partOf ?war .
}
```",2,2,3,2,1,3,2,20,0,0,12,0,0.0,0
159,35,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find Jean Baptist, Comte d'Arco as a commander in a war
  ?dArco dbo:positionHeld ?commanderRole .
  ?commanderRole dbo:roleName ""Commander""@en .

  # Identify the war that is also a television show and societal event
  ?war dbo:participatedIn ?dArco .
  ?war dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""war"") && (CONTAINS(LCASE(?title), ""tv"") || CONTAINS(LCASE(?title), ""societal"")))

  # Find the commander who is a politician and office holder
  ?predecessor dbo:positionHeld ?politicianRole .
  ?politicianRole dbo:roleName ?roleName .
  FILTER(CONTAINS(LCASE(?roleName), ""politician"") || CONTAINS(LCASE(?roleName), ""office""))

  # Russo-Polish War (1654–1667)
  ?war dbr:Russo-Polish_War_(1654%E2%80%931667) .

  # Successor relationship
  ?dArco dbo:succeededBy ?successor .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
263,13,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?native
WHERE {
  # Find Mary Elphinstone, Lady Elphinstone's parent
  dbr:Mary_Elphinstone,_Lady_Elphinstone dbo:parent ?parent .

  # Find William Gayner's birthplace that is both a region and a country
  dbr:William_Gayner dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:Country .

  # Find the native of this birthplace
  ?native dbo:nativePlace ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
119,11,train,Give me the office of the leader of 2009 Galician regional election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?election dbo:location dbr:Galicia .
  ?election dbo:date ""2009-05-01""^^xsd:date ; # Assuming the election date is May 1, 2009
           dbo:resultingParty ?party .
  
  ?leader dbo:positionHeld ?office ;
          dbo:memberOf ?party .

  FILTER (regex(str(?election), ""Galician Regional Election""))
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
158,5,train,"Give me the administration, that is a country, of Nicholas II of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person dbo:monarchOf ?country .
  ?person foaf:name ""Nicholas II of Russia""@en .
}
```

This query uses the `dbo:monarchOf` property to find the country associated with Nicholas II. The `foaf:name` is used to identify him by name.",1,2,2,1,1,2,3,28,0,0,3,0,0.0,0
531,11,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Alberto Ruiz-Gallardón""@en .
  
  OPTIONAL { 
    ?person dbo:residence ?residence .
    
    ?residence dbo:resident ?tenant .
  }
}
```",2,2,3,2,1,3,3,71,0,0,375,0,0.0,0
295,6,train,Give me the native of Birmingham and writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?song dbo:artist dbr:Shaggy_(musician) .
  ?song rdfs:label ""Boom Shack-A-Lak""@en .
  
  ?person dbo:nationality dbr:Jamaica ;
          dbo:birthPlace dbr:Birmingham .
  
  FILTER(CONTAINS(LCASE(?personLabel), ""shaggy""))
}
```

This query does the following:
- Identifies the song ""Boom Shack-A-Lak"" and its artist, Shaggy.
- Searches for a person with Jamaican nationality (since Shaggy is from Jamaica) who was born in Birmingham.
- Uses a filter to ensure that the label of the person contains ""shaggy,"" which helps confirm we are looking at the correct individual.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
668,6,train,Give me the profession of Rod Argent.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?profession .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Rod Argent. You can find this by searching for ""Rod Argent"" on DBpedia or using a SPARQL endpoint to query for his unique identifier.",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
628,33,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMember ?personWithSameBirthName
WHERE {
  # Find band members of Uncle Murda
  ?uncleMurda dbo:member ?bandMember .
  FILTER(STRSTARTS(STR(?uncleMurda), ""http://dbpedia.org/resource/Uncle_Murda""))

  # Find a notable musical artist from Florida
  ?floridaArtist dbo:nationality dbr:United_States ;
                dbo:birthPlace dbr:Florida ;
                foaf:name ?artistName .
  
  # Get the birth name of this artist
  ?floridaArtist foaf:givenName ?givenName ;
                 foaf:surname ?surname .

  # Find another person with the same birth name
  ?personWithSameBirthName foaf:givenName ?givenName ;
                           foaf:surname ?surname .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,47,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Identify Quincy Adams Gillmore as an individual
  dbr:Quincy_Adams_Gillmore a dbo:MilitaryPerson ;
                            dbo:militaryService ?service .
  
  # Connect the Medal of Honor to him
  OPTIONAL { 
    ?medalOfHonor dbo:recipient dbr:Quincy_Adams_Gillmore .
    FILTER (str(?medalOfHonor) = ""Medal_of_Honor_(United_States)"")
  }
  
  # Determine which military force he was part of
  ?service dbo:militaryBranch ?force .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
103,31,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v0 <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Find Richard Grant Esterhuysen
  dbr:Richard_E._Grant_Esterhuysen dbo:profession dbr:Actor .
  
  # Find movies or TV shows he acted in
  dbr:Richard_E._Grant_Esterhuysen dbo:actedIn ?work .

  # Ensure the work is a television show
  ?work a dbo:TelevisionShow .

  # Get other actors from these works
  ?work dbo:starring ?actor .
  
  # Exclude Richard Grant Esterhuysen himself
  FILTER (?actor != dbr:Richard_E._Grant_Esterhuysen)
}
```",4,5,5,3,2,3,3,71,0,0,24,0,0.0,0
288,0,train,Give me the native of Lahore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
SELECT ?native WHERE {
  ?place rdfs:label ""Lahore""@en .
  ?place dbo:nativeName ?native .
}
```",1,1,2,1,1,2,2,9,0,0,881,0,0.0,0
203,23,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Assuming ""The Triple X's"" is a known entity in DBpedia, replace with the correct resource URI
  dbr:The_Triple_X_s dbo:militaryConflict ?conflict .
  
  ?conflict a dbo:MilitaryConflict ;
           dbo:commander ?commander .
}
```

This query assumes:
- ""The Triple X's"" is represented as `dbr:The_Triple_X_s` in DBpedia. You would need to replace this with the correct resource URI if it differs.
- The military conflict related to ""The Triple X's"" has a property `dbo:commander` that links to its commander.",3,5,4,3,1,3,3,71,0,0,113,0,0.0,0
557,18,train,Give me the professional in  and producer of A Star Is Born (1937 film) and producer of The Adventures of Tom Sawyer (1938 film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find producer of A Star Is Born (1937)
  OPTIONAL {
    ?aStarIsBorn dbr:A_Star_Is_Born_(1937_film) .
    ?aStarIsBorn dbo:producer ?producerAStarIsBorn .
  }
  
  # Find producer of The Adventures of Tom Sawyer (1938)
  OPTIONAL {
    ?tomSawyer dbr:The_Adventures_of_Tom_Sawyer_(1938_film) .
    ?tomSawyer dbo:producer ?producerTomSawyer .
  }

  # Return the producers
  VALUES ?producer { ?producerAStarIsBorn ?producerTomSawyer }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
609,33,train,"Give me the birth place of Vince Gilligan and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vinceBirthPlace ?governorName ?paulusBirthPlace WHERE {
  # Vince Gilligan's birth place
  dbr:Vince_Gilligan dbo:birthPlace ?vinceBirthPlace .

  # Governor of Vince Gilligan's birth place
  ?governor dbo:office ?governorOffice .
  ?governorOffice dbo:administrativeRegion ?vinceBirthPlace .
  ?governor dbo:name ?governorName .

  # Paulus Powell's birth place (must be a region and administrative region)
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
  ?paulusBirthPlace rdf:type dbo:Region .
  ?paulusBirthPlace rdf:type dbo:AdministrativeRegion .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
38,3,train,"Give me the work, that is a work and a written work and American and a book, of Joe Biden.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?work WHERE {
  # Identify Joe Biden's works
  ?work dbo:author dbr:Joe_Biden .
  
  # Ensure the work is a written work and a book
  ?work rdf:type dbo:CreativeWork ;
        rdfs:subClassOf* dbo:WrittenWork, dbo:Book .

  # Filter for American works
  OPTIONAL { ?work dbo:nationality dbr:United_States . }
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
687,59,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?actor WHERE {
  # Find Marty Pollio's birthday
  dbr:Marty_Polio dbo:birthday ?birthday .

  # Find a person born on that date who is an athlete
  ?person dbo:birthday ?birthday ;
          rdf:type dbo:Athlete .
  
  # Find a film by Manuel Huerga
  dbr:Manuel_Huerga dbo:film ?film ;
                    rdf:type dbo:Film .

  # Find an actor in that film who is also a soccer player and an athlete
  ?actor dbo:actedIn ?film ;
         rdf:type dbo:Athlete .
  
  # Ensure the actor is specifically a soccer player
  ?actor dbo:sport dbr:Soccer .
  
  # Return the results
  BIND(?person AS ?athlete)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
782,30,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?artist1 ?artist2 WHERE {
  # The Fabulous Thunderbirds band information
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
    dbo:member ?member .

  # Kim Wilson as a member of The Fabulous Thunderbirds
  ?member rdfs:label ""Kim Wilson""@en .
  
  # Nick Curran's birth and association with music
  OPTIONAL {
    dbr:Nick_Curran a dbo:MusicalArtist ;
      foaf:birthday ?birthday .
  }

  # Linking artists to the band
  ?artist1 dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
  ?artist2 rdfs:label ""Kim Wilson""@en .

  FILTER(?member = ?artist2)
}
```

This query does the following:
- Identifies The Fabulous Thunderbirds as a band and retrieves its members.
- Specifically looks for Kim Wilson as a member of this band.
- Optionally checks if Nick Curran is associated with music (as a musical artist) and retrieves his birthdate.
- Links both artists to the band.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
58,16,train,Give me the producer of the movie with  and spouse of the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?producer WHERE {
  ?person foaf:name ""Linda Sue Cobb"" .
  ?spouse foaf:mbox ?email .
  ?spouse foaf:surname ?surname .
  ?spouse dbo:spouse ?person .
  
  OPTIONAL { ?spouse dbo:birthName ""Linda Sue Cobb"" . }
  
  ?movie dbo:starring ?spouse .
  ?movie dbo:producer ?producer .
}
```

This query does the following:
- Searches for a person named ""Linda Sue Cobb.""
- Finds their spouse.
- Identifies movies in which this spouse has starred.
- Retrieves the producer(s) of those movies.",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
531,18,train,Give me the office of Mariano Rajoy and office of Miguel Maura and tenant of Madrid.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office ?residence
WHERE {
  VALUES ?person { 
    dbr:Mariano_Rajoy 
    dbr:Miguel_Maura 
  }
  
  OPTIONAL {
    ?person dbo:office ?office .
  }

  OPTIONAL {
    ?person dbo:residenceLocation ?location .
    FILTER (strstarts(str(?location), str(dbr:Madrid)))
    BIND(""tenant of Madrid"" AS ?residence)
  }
}
```",3,3,4,1,3,3,3,71,0,2,1,0.0,0.0,0
39,53,train,"Give me the professional in  and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of the producer of Coke Studio Philippines.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?band ?profession
WHERE {
  # Find Robert Lamar Thompson as a musical artist
  ?person dbo:birthName ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), ""robert lamar thompson"")) .
  
  # Ensure the person is a musical artist
  ?person dbo:occupation dbr:Musical_artist .

  # Find any band associated with this person
  OPTIONAL { ?band dbo:member ?person . }

  # Identify the profession of the producer of Coke Studio Philippines
  ?producer dbo:occupation dbr:Coke_Studio_Philippines_producer .
  
  # Ensure Robert Lamar Thompson has the same profession as the producer
  ?person dbo:occupation ?profession .
  FILTER(?profession = ?producerOccupation)
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
246,0,train,Give me the parent of Princess Sara bint Faisal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  ?person dbp:name ""Princess Sara bint Faisal""@en .
  ?person dbo:spouse ?parent . 
  ?parent dbp:name ?parentName .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
668,1,train,Give me the professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?musician WHERE {
  ?musician rdf:type dbo:Musician .
}
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,7563,0,0.0,0
943,46,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Find The Shadow and its alter ego
  dbr:The_Shadow dbo:alterEgo ?alterEgo .

  # Find the parent that is royalty
  ?parent a dbo:RoyalFamily ;
          dbo:child ?commander .

  # Ensure the commander is also royalty
  ?commander a dbo:RoyalFamily ;
             dbo:title ""Commander""^^xsd:string .

  # Connect the alter ego to the child of the royal parent
  ?alterEgo dbo:parent ?parent .
}
```

This query assumes that DBpedia or your dataset has structured data about fictional characters like The Shadow, their relationships, and roles such as royalty and commanders. Adjustments may be necessary based on actual schema details.",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
943,36,train,"Give me the child of Dawit I and father of the father, that is a royalty and an office holder, of the child of Baeda Maryam I.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Dawit I's child
  ?dawitI dbo:child ?childDawitI .
  
  # Baeda Maryam I's child
  ?baedaMaryamI dbo:child ?childBaedaMaryamI .

  # Father of the father for Baeda Maryam I's child
  ?childBaedaMaryamI dbo:father ?fatherChildBaedaMaryamI .
  ?fatherChildBaedaMaryamI dbo:father ?grandFatherChildBaedaMaryamI .

  # Ensure the person is royalty and an office holder
  ?person a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Match Dawit I's child with the grand father of Baeda Maryam I's child
  FILTER (?childDawitI = ?grandFatherChildBaedaMaryamI)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
68,17,train,"Give me the father of Catherine of Austria, Queen of Portugal and child of the commander, that is a royalty, in Siege of Padua.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Catherine of Austria, Queen of Portugal
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:parent ?father .

  # Ensure the father is a royalty and involved in the Siege of Padua as a commander
  ?father a dbo:Monarch ;
          dbo:occupation dbr:Siege_of_Padua .
}
```

This query does the following:
- It identifies Catherine of Austria, Queen of Portugal.
- Retrieves her parent (father) from DBpedia.
- Ensures that this father is classified as a Monarch and was involved in the Siege of Padua.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,31,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v0 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Find Marty Pollio's birthdate
  dbr:Marty_Pollio dbo:birthday ?birthday .

  # Find athletes born on the same date as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbo:birthday ?sameBirthday .
  
  FILTER (YEAR(?sameBirthday) = YEAR(?birthday) && 
          MONTH(?sameBirthday) = MONTH(?birthday) &&
          DAY(?sameBirthday) = DAY(?birthday))

  # Ensure the athlete is associated with Sergio Agüero
  ?athlete dbo:team dbr:Sergio_Agüero .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
89,27,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu
  ?sawMinPhyu a dbo:Person ;
              foaf:name ""Saw Min Phyu""@en .

  # Step 2: Find Spouse of Saw Min Phyu
  ?sawMinPhyu dbo:spouse ?spouse .

  # Step 3: Identify Child of the Spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Step 4: Check if the Child is Royalty
  ?child dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royal"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Step 5: Find Predecessor of this Royal Child
  OPTIONAL { ?predecessor dbo:parent ?child . }
  
  # Return the predecessor if exists
  FILTER(BOUND(?predecessor))
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
628,35,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?award dbo:type/dbo:subClassOf* dbr:Region .
  ?award dbo:country dbr:United_States .
  ?award dbo:state dbr:State .
  ?award dbo:settlement dbr:Settlement .
  
  ?coro dbo:associatedAward ?award .
  ?coro dbo:bandMember ?member .

  ?artist dbo:associatedBand ?coro .
  ?artist rdfs:label ""Bobby Shmurda""@en .

  ?member dbo:nativePlace ?native .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
80,4,train,Give me the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> """"@en . }","```sparql
# This is a placeholder query; please specify the criteria for the movie.
SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  # Add conditions here based on your specific request, e.g., director, actor, year, etc.
}
```",1,1,2,1,1,3,3,71,28769,147953,11021,0.16279240841547743,0.7230208595124403,0.2657497044043748
295,9,train,"Give me the work, that is a musical work, of the true self, that is an artist, of Steven Kapur.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/givenName> ""Steven Kapur""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalWork WHERE {
  ?artist a dbo:Artist ;
          foaf:name ""Steven Kapur""@en .
  ?artist dbo:musicalWork ?musicalWork .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
756,55,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?player ?country
WHERE {
  # Thomas Letsch managed VfL Bochum in 2007-08
  ?team a dbo:SoccerClub ;
        dbo:season ?vflBochumSeason .
  
  ?vflBochumSeason dbo:hasManager dbr:Thomas_Letsch ;
                   dbo:season ""2007–08""^^xsd:string .

  # Find the player associated with VfL Bochum in that season
  ?player a dbo:SoccerPlayer ;
          dbo:playsFor ?team .

  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?country .
  
  # Manager of the team Thomas Letsch managed
  ?vflBochumSeason dbo:hasManager ?manager .
}
```",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
742,6,train,Give me the birthplace of Ekaterina Zaharieva and birthplace of Reneta Kamberova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    (dbpedia:Ekaterina_Zaharieva) 
    (dbpedia:Reneta_Kamberova)
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE <http://dbpedia.org/sparql> {
    ?birthPlace rdfs:label ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = 'en')
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
412,22,train,"Give me the war of the leader of National Party of Greece and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Antonios Varthalitis's death place
  dbr:Antonios_Varthalitis dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Leader of National Party of Greece
  ?leader dbo:partyLeaderOf dbr:National_Party_of_Greece ;
          dbo:spouseOrPartner ?warParticipant .

  # War involving both entities
  ?warParticipant dbo:participatedIn ?war .
  
  FILTER(?deathPlace = ?warParticipant)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
414,9,train,"Give me the host, that is an educational institution, of the award of Rainer Weiss.",SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?hostInstitution WHERE {
  # Find Rainer Weiss and his awards
  ?person a dbo:Person ;
          foaf:name ""Rainer Weiss""@en .
  
  ?person dbo:honoraryDoctorate ?award .

  # Ensure the award has a host institution that is an educational entity
  OPTIONAL { 
    ?award dbo:hostInstitution ?hostInstitution .
    ?hostInstitution a dbo:EducationalOrganization .
  }
}
```

This query does the following:
- Identifies Rainer Weiss as a person.
- Finds awards associated with him (`dbo:honoraryDoctorate` is used here as an example; you might need to adjust this based on actual DBpedia properties).
- Checks if these awards have a host institution that is classified as an educational organization.",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
633,6,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of Renée of Bourbon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:François_Ier,_Duke_of_Lorraine dbo:father ?parent .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
943,28,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and reference to  and father of Baeda Maryam I.","SELECT ?result WHERE { <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?fatherOfBaedaMaryamI WHERE {
  # Yeshaq I as the parent
  dbr:Yeshaq_I dbo:spouse ?spouse .
  
  # His children who are royalty
  ?spouse dbo:child ?child .
  ?child a dbo:Monarch .

  # The child must be the father of Baeda Maryam I
  ?child dbo:child dbr:Baeda_Maryam_I .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
203,58,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Identify William Bayne and his military force during the French campaign in Egypt and Syria
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne"" ;
         dbo:militaryConflict dbr:French_campaign_in_Egypt_and_Syria .
  
  ?bayne dbo:militaryForce ?militaryForce1 .

  # Identify the awardee of Knight Commander of the Order of the Bath
  ?awardee a dbo:MilitaryPerson ;
           dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath ;
           dbo:militaryForce ?militaryForce2 .
  
  # Ensure the military force is related to a societal event and a military conflict
  ?militaryConflict1 a dbo:MilitaryConflict, dbo:SocietalEvent ;
                    dbo:militaryForce ?militaryForce1 .

  ?militaryConflict2 a dbo:MilitaryConflict, dbo:SocietalEvent ;
                     dbo:militaryForce ?militaryForce2 .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
80,21,train,Give me the actor of the movie with  and professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:title ""{{movie_name}}""@en .
  ?movie dbo:starring ?actor .
  ?actor a dbo:Actor .
  FILTER EXISTS { ?actor dbo:profession ""{{profession}}"" }
}
```

Please provide the specific movie name and profession to complete this query. Once you do, I can finalize it for you.",3,3,4,2,2,3,3,71,0,0,7802,0,0.0,0
687,60,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?player ?team
WHERE {
  # Find Marty Pollio's birthdate
  VALUES (?martyBirthDate) { (dbr:Marty_Pollio dbo:birthday) }
  
  # Find an athlete born on the same date as Marty Pollio
  ?athlete dbo:birthDate ?martyBirthDate .
  ?athlete a dbo:Athlete .
  BIND(?athlete AS ?player)
  
  # Find Marcelo Sarmiento's birthdate and team
  VALUES (?marceloBirthDate) { (dbr:Marcelo_Sarmiento dbo:birthday) }
  ?soccerPlayer dbo:birthDate ?marceloBirthDate ;
                a dbo:SoccerPlayer .
  ?soccerManager dbo:birthDate ?marceloBirthDate ;
                 a dbo:SoccerManager .
  
  # Ensure the person is both a soccer player and manager
  FILTER(?soccerPlayer = ?soccerManager)
  
  # Find the team associated with Marcelo Sarmiento
  ?soccerManager dbo:team ?team .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
119,24,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?tenantSantiago ?countryÁlvaroQuirós
WHERE {
  # Find the tenant (mayor) of Santiago de Compostela
  ?santiago a dbo:City ;
            rdfs:label ""Santiago de Compostela""@en .
  ?santiago dbo:mayor ?tenantSantiago .

  # Find the country where Álvaro Quirós resides
  ?álvaroQuirós foaf:name ""Álvaro Quirós"" ;
                foaf:nationality ?countryÁlvaroQuirós .
}
```

This query assumes:
- The mayor of Santiago de Compostela is represented by the `dbo:mayor` property.
- Álvaro Quirós' nationality or country of residence can be found using `foaf:nationality`.",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
143,10,train,Give me the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Cynthia Morgan's birth name
  VALUES (?cynthia) { dbr:Cynthia_Morgan }
  
  ?cynthia dbo:birthName ?birthName .
  
  # Find other persons with the same birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
  
  FILTER(?person != ?cynthia)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
203,49,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:award [ a dbo:Award ; dbo:name ""Knight Commander of the Order of the Bath"" ] .
  ?person dbo:militaryCommanderOf ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:participatingUnit dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  ?militaryForce a dbo:MilitaryForce, dbo:SocietalEvent ;
                 dbo:commandedBy ?person .
}
```",5,9,6,3,2,3,3,71,0,0,2,0,0.0,0
23,20,train,Give me the party of Roy Barreras and entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES (?person ?label) {
    (dbr:Roy_Barreras ""Roy Barreras"")
    (dbr:Daniel_El%C3%A1i_Gal%C3%A1n ""Daniel Elahi Galán"")
    (dbr:Gustavo_Petro ""Gustavo Petro"")
  }
  
  ?person dbo:party ?party .
}
```",4,4,5,2,3,2,3,28,1,11,0,0.08333333333333333,1.0,0.15384615384615385
198,56,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor and force of Quincy Adams Gillmore.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/place> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (STR(?deathDate) = ""1850-08-05T00:00:00Z"") .

  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbo:country dbr:United_States_of_America .

  OPTIONAL {
    ?medalAward dbp:recipient ?person ;
                dbp:award ""Medal of Honor"" .
    ?war dbp:conflict ?medalAward .
  }

  OPTIONAL {
    ?force dbp:commander dbr:Quincy_Adams_Gillmore ;
           dbo:member ?person .
  }

  ?entity rdfs:label ?label .
  FILTER (lang(?label) = ""en"")
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,5,train,Give me the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film dcterms:title ""Aladdin (1958 film)""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
414,12,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?awardYear ?show WHERE {
  # Find the Nobel Prize in Physics award
  ?award a dbo:Award ;
         rdfs:label ""Nobel Prize in Physics""@en ;
         dbo:givenBy dbr:Royal_Swedish_Academy_of_Sciences .

  # Get details about each awardee of the prize
  ?award dbo:recipient ?awardee .
  
  # Find the year when the award was given
  ?award dbo:date ?date .
  BIND(YEAR(?date) AS ?awardYear)

  # Find the show or ceremony where the award is presented
  ?show a dbo:Ceremony ;
        dbo:prize ?award .

}
ORDER BY DESC(?awardYear)
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
513,1,train,Give me the residence of Doug Beattie.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doug_Beattie> <http://dbpedia.org/ontology/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doug Beattie""@en .
  OPTIONAL { ?person dbo:residenceLocation ?residence . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
143,17,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan and actor of The Campus Queen.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Campus_Queen> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Find Cynthia Morgan's resource
  ?cynthiaMorgan a dbo:MusicalArtist ;
                 foaf:name ""Cynthia Morgan""@en ;
                 dbp:birthName ?birthName .

  # Find the role in ""The Campus Queen""
  OPTIONAL { 
    ?role dbo:actor ?cynthiaMorgan .
    ?role dbo:title dbr:The_Campus_Queen .
  }

  # Get associated musical artist
  ?cynthiaMorgan dbo:associatedMusicalArtist ?artist .
}
```",4,4,5,3,2,3,2,20,1,5,0,0.16666666666666666,1.0,0.2857142857142857
80,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  wd:Q1234568 wdt:P136 ?alterEgo .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"". You can find this by searching DBpedia or using a SPARQL endpoint to look up the entity.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
80,18,train,Give me the actor of Shelby Oaks and professional in  and actor of ATL (film).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?realName WHERE {
  # Find the actor who played Shelby Oaks in ATL
  ?film dbo:starring ?actor .
  ?actor dbo:birthName ?realName .

  FILTER (
    EXISTS { ?film rdfs:label ""ATL (2006 film)""@en }
    && EXISTS { ?character rdfs:label ""Shelby Oaks""@en . ?film dbo:castMember ?character . ?character dbo:portrayedBy ?actor }
  )
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,51,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?spouse dbo:spouseOf ?mariclare .

  # Step 2: Find the child of this spouse
  ?child dbo:parent ?spouse .

  # Step 3: Determine the parent of this child
  ?parent dbo:parent ?child .

  # Step 4: Identify a professional in Photographer
  ?photographer a dbo:Person ;
               dbo:occupation dbo:Photographer .
  
  # Step 5: Find the parent of this photographer
  ?parentOfPhotographer dbo:parent ?photographer .

  FILTER (?parent = ?parentOfPhotographer)
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
347,47,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Archduke Charles Joseph of Austria's parent
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  # Parent's child (which is Archduke Charles Joseph himself)
  ?child dbo:parent ?parent .
  
  # Father of this child
  ?child dbo:father ?father .

  # The father must be a commander in a war
  ?war dbo:commander ?father .
  
  # The father must be associated with societal event, event, and television show
  ?societalEvent dbo:associatedWith ?father ;
                 rdf:type dbr:Societal_event .
  ?event dbo:associatedWith ?father ;
         rdf:type dbr:Event .
  ?tvShow dbo:associatedWith ?father ;
          rdf:type dbr:Television_show .

  # Additional condition for the 2nd Dragoon Regiment (France)
  OPTIONAL { ?war dbo:unit ?dragoonRegiment . }
  FILTER EXISTS {
    ?dragoonRegiment rdfs:label ""2nd Dragoon Regiment (France)""@en .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
119,14,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?tenant WHERE {
  ?administration a dbo:Government ;
                  dbo:country dbr:Spain ;
                  dbo:party dbr:Spanish_Socialist_Workers'_Party .
  
  ?administration dbo:headOfStateOrGovernment ?tenant .
}
```

This query does the following:
- Filters for administrations (`?administration`) that are of type `dbo:Government`.
- Ensures these administrations are in Spain (`dbo:country dbr:Spain`).
- Links them to the Spanish Socialist Workers' Party (`dbo:party dbr:Spanish_Socialist_Workers'_Party`).
- Retrieves the tenant or leader of such an administration (`dbo:headOfStateOrGovernment ?tenant`).",2,3,3,2,1,3,3,71,0,0,100,0,0.0,0
468,7,train,Give me the reference to the real name of Peter IV of Aragon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?realName WHERE {
  wd:Q1234 rdfs:label ""Peter IV of Aragon""@en .
  OPTIONAL { wd:Q1234 foaf:name ?realName . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
151,1,train,Give me the reference to Order of the Medjidie.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Order of the Medjidie""@en . }","```sparql
SELECT ?reference WHERE {
  ?s dbpedia-owl:wikiPageRedirects ?o .
  ?o rdfs:label ""Order of the Medjidie""@en .
  ?s dbo:wikiPageExternalLink ?reference .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
731,5,train,Who is the commander in Sinking of Prince of Wales and Repulse?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sinking_of_Prince_of_Wales_and_Repulse> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # HMS Prince of Wales
  OPTIONAL { 
    dbr:HMS_Prince_of_Wales_(53) dbo:commandedBy ?commander .
  }
  
  # HMS Repulse
  OPTIONAL { 
    dbr:HMS_Repulse_(1916) dbo:commandedBy ?commander .
  }

  FILTER (
    EXISTS {
      ?event dbo:location ?location .
      ?event dbo:agent ?ship .
      ?ship rdf:type dbo:MilitaryShip ;
            rdfs:label ""HMS Prince of Wales (53)""@en ;
            rdfs:label ""HMS Repulse (1916)""@en .
    }
  )
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
198,31,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:awardReceived ?award .
  ?award dbo:awardingBody dbr:United_States_Congress .
  ?force dbo:commander ?person ;
         dbo:member ?gillmore .
  ?gillmore rdfs:label ""Quincy Adams Gillmore""@en .
}
```

This query attempts to find the war (`?war`) associated with a person who received an award from the U.S. Congress and was part of a force commanded by Quincy Adams Gillmore.",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
347,48,train,"Give me the child of the father of Cecilia Renata of Austria and commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?societalEvent ?tvShow WHERE {
  # Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father dbr:Ferdinand_Charles,_Archduke_of_Austria .

  # Child of Ferdinand Charles who was a commander in the Algerian War
  dbr:Ferdinand_Charles,_Archduke_of_Austria dbo:child ?child .
  ?child dbo:occupation dbr:Military_person .
  ?child dbo:commanderInWar dbr:Algerian_War .

  # Societal event and television show associated with the child
  ?societalEvent dbo:relatedTo ?child ;
                 a dbo:SocietalEvent .
  ?tvShow dbo:relatedTo ?child ;
          a dbo:TelevisionShow .
}",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
782,49,train,"Give me the reference to the real name of The Fabulous Thunderbirds and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?realName ?associatedArtist WHERE {
  # Find the real name of The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds dbo:bandMember ?member .
  ?member dbo:birthName ?realName .

  # Find Nick Curran and his associated musical artist
  dbr:Nick_Curran dbo:birthName ?nickRealName ;
                  a dbo:MusicalArtist .
  
  OPTIONAL {
    ?curranAssociatedArtist dbo:associatedBandMember dbr:Nick_Curran .
    ?curranAssociatedArtist rdfs:label ?associatedArtist .
    FILTER (LANG(?associatedArtist) = 'en')
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
353,18,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of William II of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?elvira dbo:spouse ?roger .
  ?roger rdf:type dbo:Monarch ;
         rdfs:label ""Roger II of Sicily""@en .
  
  ?constance dbo:parent ?elvira ;
             dbo:parent ?roger ;
             dbo:child ?williamII .

  ?williamII rdfs:label ""William II of Sicily""@en .

  FILTER(?constance != ?elvira && ?constance != ?roger)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
943,41,train,"Give me the father of Baeda Maryam I and child of the parent, that is a royalty, of Yeshaq I and reference to the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherOfBaedaMaryamI ?royalChild ?alterEgo
WHERE {
  # Father of Baeda Maryam I
  dbr:Baeda_Maryam_I dbo:father ?fatherOfBaedaMaryamI .

  # Parent of Yeshaq I and a royal child
  dbr:Yeshaq_I dbo:father ?parentOfYeshaq .
  ?royalChild dbo:parent ?parentOfYeshaq .
  FILTER EXISTS { ?royalChild dbo:isRoyal . }

  # Alter ego of The Shadow
  dbr:Lamont_Cranston rdfs:label ""The Shadow""@en .

  # Linking the alter ego to the query (for reference)
  BIND(dbr:Lamont_Cranston AS ?alterEgo)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
198,48,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement and American
  ?birthPlace a dbo:Settlement ;
             dbp:country dbr:United_States .

  # Find an award related to war given by United States Congress
  ?award dbo:awardee ?person ;
         dbo:category dbr:War_Awards ;
         dbo:givenBy dbr:United_States_Congress .
  
  # Link the birthplace and the award recipient
  ?birthPlace dbp:resident ?entity .
  OPTIONAL { ?entity dbo:nationality dbr:American . }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
39,17,train,"Who is the person born, that is a musical artist, as the birth name of Bob Thompson (musician)?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:MusicalArtist .
  ?person foaf:name ""Bob Thompson"" .
  ?person dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
293,5,train,"Give me the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . },"```sparql
SELECT ?film WHERE {
  ?film dbo:director dbpedia:Nat_Levine .
  ?film a dbo:Film .
}
```",1,2,2,1,1,3,3,71,0,0,96,0,0.0,0
384,3,train,"Give me the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate WHERE {
  VALUES ?person { dbr:Bruno_Retailleau }
  
  ?person a dbo:Politician ;
          dbo:officeHolderOf ?office .
  OPTIONAL { ?person dbp:birthday ?birthDate . }
}
```

This query does the following:
- It uses prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`).
- It selects the birth date of Bruno Retailleau.
- It ensures that the person is both a politician and an office holder by checking these properties.",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
293,37,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Films associated with Nat Levine
  ?film dbp:producer dbr:Nat_Levine .
  
  # Films associated with Harriette Arlene Lake (born as Harriette Arlene Lake)
  ?film dbo:starring ?actor .
  ?actor foaf:name ""Harriette Arlene Lake""@en .

  # Find the spouse of the actor
  OPTIONAL {
    ?actor dbo:spouse ?spouse .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
293,58,train,"Give me the party member of Republican Party (United States) and spouse of the actor of 1,000 Dollars a Minute and person born as the birth name of the parent of Tisha Sterling.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Find the actor of ""1,000 Dollars a Minute""
  ?actor dbo:title ""1,000 Dollars a Minute""@en .
  
  # Step 2: Find the spouse of this actor
  ?actor foaf:spouse ?spouse .

  # Step 3: Determine the birth name of the parent of Tisha Sterling
  dbr:Tisha_Sterling dbo:parent ?parent .
  ?parent foaf:name ?birthName .

  # Step 4: Identify the person born with that birth name
  ?person foaf:name ?birthName .
  
  # Step 5: Check if any of these individuals are members of the Republican Party (United States)
  OPTIONAL { ?spouse dbo:party dbr:Republican_Party_(United_States) . }
  OPTIONAL { ?person dbo:party dbr:Republican_Party_(United_States) . }

  FILTER (?spouse != ?person) # Ensure we don't count the same person twice
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
628,44,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and band member of Uncle Murda and person born as the birth name of Bobby Shmurda.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?native
WHERE {
  ?award a dbo:Award .
  ?award dbo:country dbr:United_States .
  ?award dbo:region ?region .
  ?region rdf:type/(dbo:state|dbo:settlement) .

  ?coro dbo:recipient ?award .
  FILTER (str(?coro) = ""Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico"")

  ?bandMember dbo:memberOf dbr:Uncle_Murda .
  ?bandMember dbo:recipient ?award .

  ?bobbyShmurda foaf:name ""Bobby Shmurda""@en .
  ?bobbyShmurda dbo:birthName ?birthName .
  ?bobbyShmurda dbo:recipient ?award .

  ?award dbo:nativeOf ?native .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
905,1,train,Give me the parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  VALUES ?charlesMartel { dbr:Charles_Martel_of_Anjou }
  ?charlesMartel dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,2,0.0,0.0,0
347,50,train,Give me the child of the father of Cecilia Renata of Austria and father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalChild
WHERE {
    # Step 1: Find Cecilia Renata of Austria's father
    ?ceciliaRenata a dbo:Person ;
                  dbp:father ?fatherOfCeciliaRenata .

    # Step 2: Find Archduke Charles Joseph's parent (likely his father)
    ?charlesJoseph a dbo:Person ;
                   dbp:parent ?parentOfCharlesJoseph .

    # Step 3: The child of the parent of Archduke Charles Joseph is Archduke Charles Joseph himself
    FILTER (?charlesJoseph = ?child)

    # Step 4: Find the father of this child (Archduke Charles Joseph)
    ?parentOfCharlesJoseph dbp:father ?fatherOfCharlesJoseph .

    # Final step: Find the child of the father of Cecilia Renata
    ?fatherOfCeciliaRenata dbo:child ?finalChild .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
905,39,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of Charles Martel of Anjou.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
    # Find predecessor of Stephen V of Hungary
    ?predecessor dbo:successor dbr:Stephen_V_of_Hungary .
    
    # Find parent of Charles Martel of Anjou from the predecessor
    ?parent dbp:spouse|dbp:partner ?predecessor ;
            dbo:child dbr:Charles_Martel_of_Anjou .

    # Find child of this parent who is royalty
    ?parent dbo:child ?child .
    
    # Ensure the child holds a royal title
    ?child dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
           CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
    
    BIND(?child AS ?childOfChild)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
39,35,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  # Find the resource for Sam Concepcion
  ?person a dbo:MusicalArtist ;
          foaf:name ""Sam Concepcion"" .

  # Ensure this person is also known as Robert Lamar Thompson
  OPTIONAL { ?person foaf:alias ""Robert Lamar Thompson"" . }

  # Retrieve band information
  ?person dbo:bandMemberOf ?band .
}
```

This query does the following:
- It identifies a `MusicalArtist` with the name ""Sam Concepcion"".
- It checks if this person has an alias ""Robert Lamar Thompson"".
- It retrieves any bands (`?band`) that this person is a member of.",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
668,5,train,"Who is the writer, that is a musical artist, of The Live Anthology?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:author ?writer .
  ?writer dbo:musicalArtist true .
  FILTER (str(?album) = ""The Live Anthology"")
}
```",1,2,2,1,1,3,3,71,0,0,19,0,0.0,0
68,10,train,"Give me the child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the Siege of Padua event
  ?event dbo:eventLocation dbr:Padua .
  ?event dbo:wikiPageRedirects ?siegeOfPaduaEvent .

  # Identify the commander associated with this event
  ?commander dbo:role ?role .
  ?role dbo:isPartOf ?event .
  ?role dbo:positionTitle ""Commander""@en .

  # Find children of the commander who are royalty
  ?child dbo:parent ?commander .
  ?child a dbo:RoyalFamilyMember .
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
68,2,train,"Give me the father of Catherine of Austria, Queen of Portugal.","SELECT ?result WHERE { <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Catherine_of_Austria,_Queen_of_Portugal dbo:father ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
375,13,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Yamaza Enjirō's birthplace
  OPTIONAL { 
    dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
  }
  
  # Toyotomi Hidenaga's war
  OPTIONAL {
    dbr:Toyotomi_Hidenaga dbo:associatedWith ?war .
    ?war rdfs:label ?warLabel .
  }

  # Return the entities related to both conditions
  FILTER(?birthPlaceLabel != """" && ?warLabel != """")
  BIND(CONCAT(""Birthplace of Yamaza Enjirō: "", ?birthPlaceLabel, ""; War associated with Toyotomi Hidenaga: "", ?warLabel) AS ?entity)
}
```",3,3,4,2,2,2,3,28,0,2,3,0.0,0.0,0
295,8,train,Give me the native of the birth place of Victor Saville.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Find Victor Saville's birthplace
  dbr:Victor_Saville dbo:birthPlace ?birthPlace .

  # Get the native language of that place
  ?birthPlace dbo:nativeName ?nativeName .
  ?birthPlace dbp:language ?nativeLanguage .
}
```",2,2,3,2,1,3,2,20,0,0,1531,0,0.0,0
263,24,train,"Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon and parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mary Victoria Hamilton""@en .
  OPTIONAL { ?person dbo:childOf ?parent . }
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
628,29,train,Give me the person born as the birth name of Bobby Shmurda and band member of Uncle Murda and native of Florida.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Bobby Shmurda""@en .
  ?band dbo:member ?person .
  FILTER(CONTAINS(LCASE(str(?band)), ""uncle murda"")) .
  ?person dbo:birthPlace dbr:Florida .
}
```

This query does the following:
- Uses `dbo:birthName` to find individuals with the birth name ""Bobby Shmurda.""
- Checks for membership in a band that contains ""Uncle Murda"" in its name.
- Ensures the person's birthplace is Florida.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,15,train,"Give me the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find the 2006–07 VfL Bochum season
  dbr:VfL_Bochum_season_2006-07 a dbo:FootballLeagueSeason ;
    dbo:sportsTeam dbr:VfL_Bochum .

  # Find the successor season
  ?successorSeason a dbo:FootballLeagueSeason ;
    dbo:precedes dbr:VfL_Bochum_season_2006-07 ;
    dbo:sportsTeam dbr:VfL_Bochum .

  # Ensure it's a soccer club and find players
  dbr:VfL_Bochum a dbo:SoccerClub .
  
  ?successorSeason dbo:player ?player .
}
```",2,8,3,2,1,3,3,71,0,0,1,0,0.0,0
492,12,train,Give me the death place of Reed Howes and death place of Carolyn Jones and death place of Sal Mineo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Reed_Howes 
    dbr:Carolyn_Jones 
    dbr:Sal_Mineo
  }
  
  ?person dbo:placeOfBirth ?birthPlace .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
756,12,train,Give me the manager of 2020–21 SBV Vitesse season and native of West Germany.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the manager of SBV Vitesse for the 2020-21 season
  ?team dbo:manager ?manager .
  
  # Ensure it's the correct team and season
  ?team rdfs:label ""SBV Vitesse""@en .
  FILTER(CONTAINS(LCASE(?teamLabel), ""vitesse"")) .

  # Check if the manager is from West Germany
  ?manager dbo:nationality dbr:West_Germany .
}
```

This query does the following:
- It looks for a team (`?team`) that has a manager (`dbo:manager`).
- Filters to ensure the team is SBV Vitesse.
- Checks if the manager's nationality is West Germany.

Note: The exact properties and resources might need adjustments based on DBpedia's current schema and available data. If `dbo:nationality` or specific resource identifiers like `dbr:West_Germany` are not directly available, you may need to explore alternative properties or resources that represent the same information.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
723,7,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the album ""Nothing to Gein""
  dbr:Nothing_to_Gein a dbo:Album .

  # Find the producer of the album
  dbr:Nothing_to_Gein dbo:producer ?producer .

  # Check if the producer is an organization or group
  ?producer a (dbo:Band | dbo:MusicalGroup) .

  # Retrieve band members of the producer
  ?producer dbo:bandMember ?bandMember .
}
```",2,4,3,2,1,3,2,20,0,0,5,0,0.0,0
668,14,train,Give me the person born as the birth name of Joey B.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person rdf:type dbo:Person .
  ?person dbo:birthName ""Joey B""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
871,56,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  ?child1 dbo:parent ?alumnus ;
          a dbo:Politician .

  ?child2 dbo:parent ?child1 ;
          dbp:awards ""Commander of the Royal Victorian Order""@en .

  ?child3 dbo:parent ?child1 ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .

  ?father dbo:spouse ?mother .
  ?father dbo:child ?child1 .
}
```

This query assumes that:
- `dbo:almaMater` links an alumnus to Eton College.
- `dbo:parent` and `dbo:child` are used for parent-child relationships.
- `dbp:awards` is used to identify awards received by individuals.
- The names and titles are matched using literals.

Note that this query might need adjustments based on the actual data available in DBpedia, as some properties or relationships may not be directly accessible or named differently. Additionally, you might need to refine the query with more specific filters or additional conditions depending on the dataset's structure and completeness.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
595,6,train,"Give me the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?work a dbo:Book .
  ?work dbo:author dbr:Bill_Clinton .
}
```",1,4,2,1,1,3,3,71,6,1,0,0.8571428571428571,1.0,0.923076923076923
595,50,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of United States Navy.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/author> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?person dbo:residence dbr:Chappaqua,_New_York .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:officeHolderOf dbr:United_States_Senate .
  ?person dbo:father dbr:Bill_Clinton .
  ?person dbo:authorOf ?book .
  ?book a dbo:Book .
  
  OPTIONAL {
    ?person dbo:militaryServiceIn dbr:United_States_Navy .
  }
  
  FILTER EXISTS { ?person rdfs:label ""Hillary Clinton""@en }
}
```

This query attempts to find an author who is a politician residing in Chappaqua, New York, and has connections to the United States Navy through family or service. It filters for Hillary Clinton based on her known biography.",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
225,17,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v3 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?award dbo:recipient ?person .
  
  ?person dbo:nationality dbr:Japan .
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?reference dbo:subject ?person .
    ?reference a dbo:TelevisionShow .
  }
}
```

This query does the following:

- Selects awards related to the Anita Borg Institute Women of Vision Awards.
- Filters recipients who are Japanese nationals.
- Retrieves their birthplace, ensuring it is in Japan.
- Optionally checks if there's a reference to a television show involving the person.",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
706,8,train,Give me the birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Soumitra Chatterjee""@en .
  ?actor dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,10,0,0.0,0
742,8,train,Give me the birthplace of the resident of Sofia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Sofia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:residence dbr:Sofia .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```

This query does the following:
- Uses `dbo:residence` to find individuals whose residence is Sofia.
- Uses `dbo:birthPlace` to retrieve their birthplace, if available.",2,2,3,2,1,3,2,20,0,0,14,0,0.0,0
609,29,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia and birth place of Vince Gilligan.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Cecilie_Bell 
    dbr/Governor_of_Virginia
    dbr/Vince_Gilligan 
  }
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }

  FILTER (?person = dbr/Cecilie_Bell || ?person IN (SELECT ?governor WHERE {
      ?governor a dbo:Governor ;
               dbo:governsCountry dbr/Virginia .
    }) || ?person = dbr/Vince_Gilligan)
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia.
- Selects entities (`?person`) and their birthplaces (`?birthPlace`).
- Specifies the individuals of interest: Cece Bell, any governor of Virginia, and Vince Gilligan.
- Utilizes an optional pattern to match the birthplace property.
- Filters results to include only the specified individuals or those who are governors of Virginia.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
905,31,train,"Give me the parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Step 1: Find Charles Martel of Anjou's parent
  ?charlesMartel dbo:child ?parent .
  
  FILTER(?charlesMartel = dbpedia:Charles_Martel_of_Anjou)

  # Step 2: Find the spouse of that parent
  OPTIONAL { ?parent dbo:spouse ?spouse . }
  
  # Ensure the spouse is royalty
  ?spouse a dbo:Monarch .

  # Step 3: Identify Philip, Despot of Romania's grandparent
  ?philip dbp:fatherOrMother ?grandparent .
  
  FILTER(?philip = dbpedia:Philip_Despot_of_Romania)

  OPTIONAL { ?grandparent dbo:child ?parent . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
198,20,train,Give me the force of the awardee of Gillmore Medal and war of Amasa Tracy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person dbo:award dbr:Gillmore_Medal .
  ?person dbo:associatedWith dbr:Amasa_Tracy .
  ?person dbo:militaryService ?service .
  ?service dbo:partOf ?force .
}
```

This query does the following:
- Identifies a person (`?person`) who was awarded the Gillmore Medal.
- Checks if this person is associated with Amasa Tracy.
- Finds the military service (`?service`) of this person.
- Retrieves the force (`?force`) that this service was part of.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
756,8,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?club WHERE {
  # Find Thomas Letsch
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  # Find clubs he has coached
  ?letsch dbo:coachOf ?team .
  
  # Ensure the team is a soccer club
  ?team a dbo:SoccerClub ;
        dbo:sportTeamSeason ?season .

}
```

This query does the following:
- It identifies Thomas Letsch as a person with the name ""Thomas Letsch"".
- It finds entities that he has coached (`dbo:coachOf`).
- It ensures these teams are soccer clubs by checking if they have the type `dbo:SoccerClub`.
- It also checks for the presence of a sports season, ensuring it's relevant to his coaching role.",1,4,2,1,1,3,3,71,0,0,5,0,0.0,0
816,50,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Part 1: Eugène Cattin's profession and its parent
  ?eugeneCattin dbo:profession ?profession .
  FILTER (str(?eugeneCattin) = ""Eugène_Cattin"") .

  ?professional a ?profession .
  ?parent1 dbo:child ?professional .

  # Part 2: Allan Arbus's children and their parent
  ?allanArbus dbp:children ?child .
  FILTER (str(?allanArbus) = ""Allan_Arbus"") .

  ?parent2 dbo:child ?child .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
353,44,train,"Give me the child of Roger II of Sicily and child of the child of Alfonso VI of León and Castile and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Roger II of Sicily's child
  ?roger2 dbo:child ?child1 .
  VALUES ?roger2 { <http://dbpedia.org/resource/Roger_II_of_Sicily> }

  # Alfonso VI's grandchild (child's child)
  ?alfonso6 dbo:child ?child2 .
  ?child2 dbo:child ?grandchild .
  VALUES ?alfonso6 { <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> }

  # William I of Sicily's parent who is a royalty
  ?william1 dbo:parent ?parent .
  ?parent rdf:type ?type .
  FILTER (STRSTARTS(STR(?type), ""http://dbpedia.org/ontology/Royal"") || STRSTARTS(STR(?type), ""http://dbpedia.org/ontology/Monarch""))
  VALUES ?william1 { <http://dbpedia.org/resource/Wilhelm_I_of_Sicily> }

  # Find the individual who is both a child of Roger II and Alfonso VI's grandchild, and also a parent of William I
  FILTER (?child1 = ?grandchild && ?parent = ?child1)
  
  BIND(?child1 AS ?individual)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
492,14,train,Give me the death place of Reed Howes and death place of the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceReedHowes ?actorName ?deathPlaceActor
WHERE {
  # Reed Howes death place
  OPTIONAL {
    dbr:Reed_Howes dbo:deathPlace ?deathPlaceReedHowes .
  }

  # Color Me Dead film and its main actor
  dbr:Color_Me_Dead dbo:starring ?actorResource .

  # Actor's name and death place
  ?actorResource rdfs:label ?actorName ;
                dbo:deathPlace ?deathPlaceActor .
  
  FILTER (lang(?actorName) = 'en')
}
```",3,3,4,2,2,2,3,28,1,4,0,0.2,1.0,0.33333333333333337
258,2,train,"Give me the alma mater, that is a university and an organisation and an educational institution, of Luiza Erundina.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Luiza_Erundina> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?almaMater WHERE {
  wd:Q123456 wdt:P69 ?almaMater .
  FILTER EXISTS { ?almaMater wdt:P31/wdt:P279* wd:Q391 . } # University
  FILTER EXISTS { ?almaMater wdt:P31/wdt:P279* wd:Q43229 . } # Organisation
  FILTER EXISTS { ?almaMater wdt:P31/wdt:P279* wd:Q483627 . } # Educational institution
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Luiza Erundina.",1,4,2,1,1,3,2,20,0,0,1,0,0.0,0
78,10,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify the resource for Wizards of Waverly Place soundtrack
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:composer ?artist .
  
  # Ensure that the artist is also a musical artist and an artist in general
  ?artist rdf:type dbo:MusicalArtist .
  ?artist rdf:type dbo:Artist .
}
```

This query does the following:
- It identifies the ""Wizards of Waverly Place"" soundtrack resource.
- It looks for composers associated with this soundtrack.
- It filters these composers to ensure they are both a `MusicalArtist` and an `Artist`.",2,4,3,2,1,2,3,28,0,0,18,0,0.0,0
347,28,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  
  # Commander in the war
  ?warEvent dbo:participatedInMilitaryUnit ?dragoonRegiment .
  ?dragoonRegiment rdfs:label ""2nd Dragoon Regiment (France)""@en .

  # Societal event, event, and television show
  ?commander dbo:wikiPageWikiLink dbr:Societal_event ;
             dbo:wikiPageWikiLink dbr:Event ;
             dbo:wikiPageWikiLink dbr:Television_show .
  
  # Child of Ferdinand II, Holy Roman Emperor
  ?commander foaf:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .

  # Father of Eleonore of Austria, Queen of Poland
  ?eleonore dbo:father ?commander ;
            rdfs:label ""Eleonore of Austria, Queen of Poland""@en .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
595,35,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war dbo:type dbr:Spanish_Flu_pandemic .
  ?war dbo:partOf dbr:World_War_I .
  
  ?commander dbo:militaryBranch dbr:United_States_Navy ;
             dbo:positionHeld ?position ;
             dbo:spouse ?spouse .

  ?author dbo:title ""An Invitation to the White House""@en ;
          dbo:spouse ?spouse ;
          dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
  
  FILTER(?commander = dbr:William_V._Pratt)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
119,58,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry ?office ?administrationTenant
WHERE {
  # Álvaro Quirós' residence country
  OPTIONAL { 
    dbr:Álvaro_Quirós dbo:nationality ?person1 .
    ?person1 dbo:country ?residenceCountry .
  }

  # Alberto Núñez Feijóo's office
  OPTIONAL {
    dbr:Alberto_Núñez_Feijóo dbo:office ?office .
  }
  
  # Tenant of the administration of PSOE
  OPTIONAL {
    dbr:Spanish_Socialist_Workers'_Party dbo:headquarters ?administrationOffice .
    ?administrationOffice dbo:tenant ?administrationTenant .
    FILTER (lang(?administrationTenant) = ""es"") # Ensure it's Spanish
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,7,train,Who is the awardee of Knight Commander of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:honoraryTitle dbr:Knight_Commander_of_the_Order_of_the_Bath .
}
```

This query uses the `dbo:honoraryTitle` property to find entities (persons) that have been awarded the ""Knight Commander of the Order of the Bath"" title. The resource identifier for this specific honor is assumed to be `dbr:Knight_Commander_of_the_Order_of_the_Bath`, which you might need to verify or adjust based on DBpedia's current structure.",1,1,2,1,1,3,3,71,0,0,899,0,0.0,0
353,12,train,"Give me the father of William II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William II of Sicily's father
  dbr:William_II_of_Sicily dbo:father ?father .
  
  # Elvira of Castile and her children
  dbr:Elvira_of_Castile dbo:child ?child .

  # The person who is both the father of William II and a child of Elvira
  FILTER (?father = ?child)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,22,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?office ?mayor
WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Conservative Republican Party (Spain)""@en .
  
  ?leader dbo:memberOf ?party ;
          dbo:occupation dbp:Politician ;
          dbo:office ?office .

  # Find the current Mayor of Madrid
  ?mayor dbo:positionTitle ""Mayor""@en ;
         dbo:city dbr:Madrid .
}
```

This query does the following:
- Identifies the Conservative Republican Party in Spain.
- Finds a politician who is a member of this party and holds an office.
- Retrieves the current Mayor of Madrid.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
628,40,train,"Give me the native of Florida and person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.","SELECT ?result WHERE { <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Ackquille Jean Pollard details
  dbr:Ak'Sentia dbo:nativePlace dbr:Florida .
  
  # GS9 member who is an artist and a musical artist
  ?gs9Artist rdf:type dbo:MusicalArtist ;
             dbo:memberOf dbr:GS9 .

  # Band associated with Ackquille Jean Pollard
  dbr:Ak'Sentia dbo:bandMember ?band .
  
  # Find the band member who is also a musical artist and part of GS9
  ?bandMember rdf:type dbo:MusicalArtist ;
              dbo:memberOf ?band ;
              dbo:memberOf dbr:GS9 .

}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
293,16,train,"Give me the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:producer dbr:Nat_Levine .
  ?film dbo:starring ?actor .
}
```",2,3,3,2,1,3,3,71,201,31,56,0.8663793103448276,0.7821011673151751,0.8220858895705522
295,0,train,Give me the writer of Boom Shack-A-Lak.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boom_Shack-A-Lak> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  wd:Q1234568 dbo:composer ?writer .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for ""Boom Shack-A-Lak"" if it is different. You can find this by searching DBpedia or using a SPARQL endpoint to query for the song's URI.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,7,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of Middlesex.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne }
  ?person dbo:parent ?parent .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
347,61,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?charles a dbo:Archduke ;
           dbo:parent ?parent .

  ?sibling dbo:parent ?parent .
  ?sibling a dbo:RoyalFamilyMember .

  dbr:Maria_Anna_of_Bavaria_(1574) dbo:father ?maria_father .

  ?maria_child dbo:parent ?maria_father .
  ?maria_child a dbo:RoyalFamilyMember .

  FILTER (?sibling = ?maria_child)

  ?father dbo:child ?sibling .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
628,21,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of Florida.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Bobby Shmurda's resource
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .

  # Ensure the artist is a band member and also a musical artist
  ?artist dbo:memberOfBand ?band .
  ?artist rdf:type dbp:MusicalArtist .

  # Check if the artist is native of Florida
  ?artist dbp:nativePlace dbr:Florida .

  # Bind the artist to bandMember variable
  BIND(?artist AS ?bandMember)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
361,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  wd:Q1234568 wdt:P136 ?alterEgo .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"". You can find this by searching DBpedia or using a SPARQL endpoint to look up the entity.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
687,42,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22 and player in Sergio Agüero.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Soccer_manager .

  # Athlete born on 1955-02-22
  ?person2 dbo:birthDate ""1955-02-22""^^xsd:date ;
           dbo:sport ?sport .

  # Sergio Agüero
  ?sergioAgüero a dbo:Footballer ;
                 dbo:birthDate ?agüeroBirthDate ;
                 dbo:team ?team .

  # Ensure the team is common among all three individuals
  ?person1 dbo:team ?team .
  ?person2 dbo:team ?team .

  FILTER(?sergioAgüero = dbr:Sergio_Agüero)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
119,13,train,"Give me the war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:spouseOrPartner ?mariaI .
  ?mariaI rdfs:label ""Maria I of Portugal""@en .

  ?war dbo:depicts ?tvSeries ;
       dbo:conflictType ?militaryConflict .

  ?tvSeries rdfs:label ?tvLabel .
  FILTER(CONTAINS(LCASE(?tvLabel), ""war"") || CONTAINS(LCASE(?tvLabel), ""battle""))

  ?militaryConflict rdfs:label ?conflictLabel .
  FILTER(CONTAINS(LCASE(?conflictLabel), ""war"") || CONTAINS(LCASE(?conflictLabel), ""battle""))
}
```",3,5,4,3,1,3,2,20,0,0,121,0,0.0,0
375,14,train,Give me the war of the person born as Koichirō and entity in Japan.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Koichirō""@en ;
          dbo:birthPlace dbr:Japan .
  OPTIONAL { ?person dbo:nationality dbr:Japanese . }
  ?person dbo:occupation ?occupation .
  ?event dbo:agent ?person ;
         a dbo:MilitaryConflict .
  ?event rdfs:label ?war .
}
```

This query assumes:
- The person is identified by the name ""Koichirō"" and was born in Japan.
- We are looking for military conflicts (`dbo:MilitaryConflict`) associated with this person.

Note: If Koichirō refers to a different individual, you may need to adjust the `foaf:name` or other properties accordingly. Additionally, ensure that the DBpedia resource accurately reflects the historical figure's details.",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
58,11,train,Give me the spouse of the person born as Linda Sue Cobb and producer of 12 Strong.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Sue Cobb""@en ;
          dbo:birthName ""Linda Sue Cobb"" .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER EXISTS { 
    ?film dbo:producer ?person .
    ?film rdfs:label ""12 Strong""@en
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
859,4,train,"Give me the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band a dbo:Band .
  ?band rdfs:label ""Khlyst""@en .
  ?band dbo:bandMember ?member .
  ?member a dbo:MusicalArtist .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
89,13,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Myat Hpone Pyo
  ?myathponepyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .

  # Find his father
  ?myathponepyo dbo:father ?father .

  # Ensure the father is royalty
  ?father dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") ||
         CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))

  # Find the spouse of this royal father
  ?father dbo:spouse ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
23,22,train,"Give me the entity in the country of Daniel Elahi Galán and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?party ?birthPlace WHERE {
  # Find Daniel Elahi Galán's country
  dbr:Daniel_Elahi_Galán dbo:nationality ?country .

  # Find Roy Leonardo Barreras Montealegre's party and birthplace
  dbr:Roy_Leonardo_Barreras_Montealegre dbo:partyAffiliation ?party ;
                                        dbo:birthPlace ?birthPlace .

  # Ensure the entity is a politician in the same country as Daniel Elahi Galán
  ?entity dbo:nationality ?country .
  ?entity rdf:type dbo:Politician .
}
```",4,5,5,2,2,2,3,28,0,0,5,0,0.0,0
531,1,train,Give me the office of Mariano Rajoy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  wd:Q111698 wdt:P39 ?office.
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
39,54,train,"Give me the band of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?profession ?fictionalCharacter WHERE {
  # Bob Thompson (musician) and his band
  dbr:Bob_Thompson_(musician) dbo:musicalArtistIn ?band .

  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:occupation ?profession .

  # Walter B. Gibson's fictional character that is also a comics character
  dbr:Walter_B._Gibson dbo:creatorOf ?fictionalCharacter .
  ?fictionalCharacter rdf:type dbo:FictionalCharacter ;
                     dbo:wikiPageRedirects ?comicsCharacter .
  ?comicsCharacter rdf:type dbo:ComicsCharacter .
}
```",6,8,7,3,3,3,3,71,0,0,4,0,0.0,0
80,9,train,Give me the actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  VALUES (?film) { (dbr:ATL_(2006_film)) (dbr:Shelby_Oaks) }
  ?film dbo:starring ?actor .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,22,train,Give me the child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Cecilia Renata of Austria
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .

  # Step 2: Find the children of her father
  ?father dbo:child ?child .

  # Step 3: Filter those who were commanders in the Thirty Years' War
  ?child dbo:occupation dbr:Commander_in_the_Thirty_Years'_War .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,37,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1 ?artist2 WHERE {
  ?artist1 a dbo:MusicalArtist ;
           dbo:birthPlace dbr:Florida ;
           dbp:birthday ?birthday1 ;
           dbp:birthName ?name .
  
  ?artist2 a dbo:Person ;
           dbo:birthPlace dbr:Florida ;
           dbp:birthName ?name .

  FILTER(?artist1 != ?artist2)
}
```

This query does the following:
- Selects individuals (`?artist1` and `?artist2`) who are musical artists or persons.
- Ensures both have Florida as their birthplace.
- Matches them by their birth name (`dbp:birthName`).
- Filters out cases where the two individuals are the same.",4,5,5,3,2,3,3,71,0,0,59,0,0.0,0
687,55,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    # Find actor in ""All or Nothing: Manchester City"" who is a soccer player and an athlete
    ?actor dbo:starringIn dbr:All_or_Nothing:_Manchester_City .
    ?actor dbo:sport dbr:Soccer .
    ?actor dbo:occupation dbr:Athlete .

    # Find person born on 1955-02-22 who is an athlete
    ?person dbo:birthday ""1955-02-22""^^xsd:date .
    ?person dbo:occupation dbr:Athlete .

    # Find team of the person born on 1979-11-03 who is a soccer player and manager
    ?manager dbo:birthday ""1979-11-03""^^xsd:date .
    ?manager dbo:sport dbr:Soccer .
    ?manager dbo:occupation dbr:Soccer_Manager .

    # Ensure all conditions are met by the same person
    FILTER (?actor = ?player && ?person = ?player && ?manager = ?player)
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
668,19,train,Give me the professional in Musician and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional ?associatedArtist
WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Stonebwoy"" ;
          dbo:birthName ""Elorm Kabu Amenyah"" .
  
  OPTIONAL { ?person dbo:profession ?professional . }
  OPTIONAL { ?person dbp:associatedBandOrMusicalArtist ?associatedArtist . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,28,train,Give me the producer of A Star Is Born (1937 film) and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?film1 dcterms:title ""A Star Is Born""@en .
  ?film1 dbo:producer ?person .
  
  ?radioSeries dbo:characterName ""The Shadow"" ;
               dbo:voiceActor ?person .

  ?film2 dcterms:title ""The Adventures of Tom Sawyer""@en .
  ?film2 dbo:producer ?person .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,37,train,"Give me the team of Pablo Aimar and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?team ?actor WHERE {
  # Find Pablo Aimar's team
  dbr:Pablo_Aimar dbo:playsFor ?team .

  # Find actors who are also athletes and have acted in a film by Manuel Huerga
  ?actor a dbo:Actor ;
         dbo:profession dbr:Soccer_player ;  # Ensure they are soccer players
         dbo:profession dbr:Athlete .        # Ensure they are athletes

  ?film dbo:director dbr:Manuel_Huerga .
  ?film dbo:starring ?actor .

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  wd:Q1234568 dbo:positionHeld ?office .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Alberto Núñez Feijóo. You can find this by searching his name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
80,17,train,Give me the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?alterEgo WHERE {
  ?series rdfs:label ""The Golden Master""@en .
  ?series dbo:hasPart ?character .
  ?character dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
119,30,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and office of Alberto Núñez Feijóo and tenant of Spain.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenant WHERE {
  # Find the current Prime Minister of Spain
  ?primeMinister dbo:country dbr:Spain .
  ?primeMinister dbo:positionTitle ""Prime Minister""@en .

  # Find the administration associated with PSOE
  ?administration dbo:party dbr:Spanish_Socialist_Workers'_Party ;
                  dbo:head ?tenant .

  # Ensure the tenant is also related to Alberto Núñez Feijóo in some capacity
  OPTIONAL {
    ?feijoo dbo:name ""Alberto Núñez Feijóo""@en .
    ?administration dbo:minister ?feijoo .
  }

  # Match the tenant of the administration with the Prime Minister
  FILTER (?tenant = ?primeMinister)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
531,60,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?residence WHERE {
  # Find Miguel Maura's political party
  dbr:Miguel_Maura dbo:memberOfParty ?party .

  # Find the leader of that party
  ?party dbo:leader ?leader .

  # Get the office held by the leader in 2003 during the Madrid City Council election
  ?leader dbo:officeHeld ?office .
  ?office dbo:startDate ?start .
  ?office dbo:endDate ?end .
  
  FILTER (?start <= ""2003-01-01""^^xsd:date && (?end >= ""2003-01-01""^^xsd:date || ?end = ""infinity""^^xsd:dateTime))
  FILTER EXISTS { ?office dbo:election dbr:Madrid_City_Council_election,_2003 }

  # Get the residence of the leader
  ?leader dbo:residence ?residence .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
557,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:location dbr:CityName .
  ?professional rdf:type dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
531,0,train,Give me the tenant of Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarch WHERE {
  ?monarch dbo:country dbr:Spain .
  ?monarch dbo:capital dbr:Madrid .
}
```",1,1,2,1,1,3,3,71,0,0,259,0,0.0,0
595,60,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
    # Step 1: Find the owner of USS Arcadia (ID-1605)
    ?ship a dbo:Ship ;
          rdfs:label ""USS Arcadia (ID-1605)""@en .
    
    ?owner dbo:owns ?ship .

    # Step 2: Identify the commander associated with both a disease and a societal event
    ?commander dbo:commandedBy ?owner ;
               dbo:associatedWith ?disease, ?event .
    ?disease a dbo:Disease .
    ?event a dbo:SocietalEvent .

    # Step 3: Find an author of a work by Hillary Clinton who is also a politician and office holder
    ?work dbo:author ?author ;
          rdfs:label ""Book""@en .
    
    ?author dbo:spouse ?commander ;
            a dbo:Politician, dbo:OfficeHolder .

    # Step 4: Ensure the author of the work by Hillary Clinton is linked to the commander
    ?hclintonWork dbo:author ?author ;
                  rdfs:label ""Book""@en .
    
    dbr:Hillary_Clinton dbo:work ?hclintonWork .
}",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
37,3,train,"Who is the work, that is an artist and a musical artist, of Ethan Iverson?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person rdf:type dbo:Pianist .
  ?person foaf:name ""Ethan Iverson""@en .
  ?person dbo:works ?work .

  FILTER EXISTS { 
    ?work rdf:type dbo:MusicalWork .
  }

  FILTER EXISTS { 
    ?work dbo:artist dbr:Ethan_Iverson .
  }
}
```",1,3,2,1,1,2,2,9,0,0,1,0,0.0,0
782,20,train,Give me the band of the band member of Eric Clapton and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # Find a band member of Eric Clapton
  ?member dbo:bandMemberOf dbr:Eric_Clapton .
  
  # Ensure this member is also associated with The Fabulous Thunderbirds
  ?member dbo:bandMemberOf dbr:The_Fabulous_Thunderbirds .

  # Retrieve the band(s) that this member belongs to, excluding Eric Clapton and The Fabulous Thunderbirds
  ?member dbo:bandMemberOf ?band .
  
  FILTER(?band != dbr:Eric_Clapton && ?band != dbr:The_Fabulous_Thunderbirds)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,61,train,"Give me the person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName WHERE {
  # Find a person born in Central Region, Ghana who is an artist
  ?person dbo:nationality dbr:Ghana ;
          dbo:birthPlace dbr:Central_Region,_Ghana ;
          rdf:type dbo:Artist .
  
  # Get the birth name of this person
  ?person dbp:birthday ?birthday ;
          rdfs:label ?name ;
          foaf:name ?birthName .

  # Find a writer and musical artist associated with ""The Live Anthology""
  ?writer rdf:type dbo:Writer, dbo:MusicalArtist .
  ?writer dbo:work dbr:The_Live_Anthology .

  FILTER regex(?name, ""artist"", ""i"")
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
38,15,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard and author of Promise Me, Dad.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Promise_Me,_Dad> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work WHERE {
  # Find Joe Biden as the commander and author of ""Promise Me, Dad""
  dbr:Joe_Biden a dbo:OfficeHolder ;
                dbo:officeHeld dbr:North_Carolina_Air_National_Guard_Commander ;
                dbo:writtenWork dbr:Promise_Me,_Dad .

  # Find works authored by Joe Biden that are books and American
  ?work dbo:author dbr:Joe_Biden ;
        a dbo:Book ;
        dbo:country dbr:United_States .
  
  # Bind the author to the result
  BIND(dbr:Joe_Biden AS ?author)
}
```",4,10,5,3,2,3,2,20,0,0,1,0,0.0,0
140,12,train,"Give me the commander in Pickett's Charge and party member of the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?party WHERE {
  # George Pickett as commander of Pickett's Charge
  dbr:George_Pickett dbo:positionHeld dbr:Picketts_Charge .
  
  # Political party and organization in Westport, Connecticut
  ?party a dbo:PoliticalParty ;
        dbo:location dbr:Westport,_Connecticut ;
        dbo:member dbr:George_Pickett .

  # Ensure the political party is also an organization
  ?party a dbo:Organization .
  
  # Bind George Pickett as commander
  BIND(dbr:George_Pickett AS ?commander)
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
23,4,train,Give me the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  wd:Q123456 wdt:P27 ?country .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Daniel Elahi Galán. You can find this by searching his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
203,8,train,"Give me the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event rdf:type dbo:Event .
  ?event dbo:agent dbr:Robert_Calder .
  
  # Check if the event is also a societal event
  OPTIONAL { ?event rdf:type dbo:SocietalEvent . }
}
```",1,3,2,1,1,3,3,71,0,0,4,0,0.0,0
119,10,train,"Give me the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v0 <http://dbpedia.org/property/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person dbo:nationality dbr:Poland ;
          dbo:birthPlace dbr:Łódź ;
          a dbo:Athlete .
  OPTIONAL { ?person dbo:residence ?residence . }
  FILTER (isLiteral(?residence) && datatype(?residence) = xsd:string)
}
```

This query does the following:
- Filters individuals (`?person`) who are athletes (`dbo:Athlete`), have Polish nationality (`dbo:nationality dbr:Poland`), and were born in Łódź (`dbo:birthPlace dbr:Łódź`).
- Retrieves their residence, ensuring it is a literal string representing a country.",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
668,48,train,Give me the associated musical artist of the person born as the birth name of $pacely and person born as the birth name of Joey B.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # For Tupac Shakur (Lesane Parish Crooks)
  OPTIONAL {
    ?tupac a dbo:MusicalArtist ;
           dbo:birthName ""Lesane Parish Crooks"" .
    ?tupac dbo:associatedBandOrMusicalArtist ?artist .
  }
  
  # For Joey Bada$$ (Joe Quinones)
  OPTIONAL {
    ?joey a dbo:MusicalArtist ;
          dbo:birthName ""Joe Quinones"" .
    ?joey dbo:associatedBandOrMusicalArtist ?artist .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
585,17,train,Give me the child of the professional in the profession of Shirley Stoler and native of New York (state).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shirley_Stoler> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_(state)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Shirley Stoler entity
  dbr:Shirley_Stoler a dbo:Person ;
                     dbo:nationality dbr:United_States ;
                     dbo:birthPlace dbr:New_York_City,_New_York .

  # Find her children
  OPTIONAL { dbr:Shirley_Stoler dbo:child ?child . }
}
```

This query assumes that Shirley Stoler's DBpedia resource is `dbr:Shirley_Stoler` and uses the properties `dbo:child`, `dbo:nationality`, and `dbo:birthPlace` to filter her children. Adjustments might be necessary if these assumptions do not hold in the actual DBpedia data.",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
941,4,train,"Who is the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Princess Antoinette of Brunswick-Wolfenbüttel
  dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel dbo:spouse ?parent .

  # Find her children
  ?parent dbo:child ?child .

  # Filter those who are royalty
  ?child a dbo:Monarch ;
         rdfs:label ?name .
  
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name",1,2,2,1,1,3,2,20,0,0,6,0,0.0,0
816,55,train,"Give me the parent of the child of Allan Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in Photographer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Allan Arbus and his children
  dbr:Allan_Arbus dbo:child ?child .

  # Child acted in a movie with Herschel Bernardi
  ?child dbo:spouseOrPartner ?movie .
  ?movie dbo:starring dbr:Herschel_Bernardi .

  # Parent of the actor
  ?child dbo:parent ?parent .

  # Parent is a professional photographer
  ?parent dbo:occupation dbr:Photographer .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
159,12,train,Give me the commander in Great Turkish War and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?description WHERE {
  # Find the commander of the Great Turkish War
  ?event dbo:participatedIn [
    a dbo:MilitaryConflict ;
    rdfs:label ""Great Turkish War""@en .
  ].
  
  ?commander dbo:role [
    a dbo:MilitaryCommanderRole ;
    dbo:conflict ?event .
  ];
  rdfs:label ?name;
  dbo:description ?description.

  # Reference to George Ducas
  OPTIONAL {
    ?ducas dbo:wikiPageRedirects dbr:George_Ducas.
    FILTER(CONTAINS(LCASE(?commander), LCASE(?ducas)))
  }
  
  FILTER(LANG(?name) = 'en')
}
ORDER BY ?name
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,42,train,"Give me the professional in Actor and professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find actors associated with Lamont Cranston (The Shadow's alter ego)
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:alternateName dbr:Lamont_Cranston .

  # Find movies where Richard E. Grant acted, which were adapted into TV shows
  ?movie dbo:starring dbr:Richard_E._Grant ;
         dbo:adaptationOf ?tvShow .

  # Ensure the actor is also in these movies
  ?actor dbo:starring ?movie .
}
```",5,6,6,2,3,3,3,71,0,0,9,0,0.0,0
78,0,train,Give me the associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234568 wdt:P106 wd:Q33999 . # Stuart Tosh is a musician (P106)
  wd:Q1234568 wdt:P175 ?artist .    # Associated musical artist (P175)
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Stuart Tosh.",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
213,17,train,"Give me the birth place of Winston Chang and country of the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Winston_Chang> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace (GROUP_CONCAT(DISTINCT ?country; separator="", "") AS ?countries)
WHERE {
  # Get the birthplace of Winston Chang
  OPTIONAL {
    dbr:Winston_Chang dbo:birthPlace ?birthPlace .
  }

  # Get the spouse of Hu Jieqing who is a writer and their work's country
  OPTIONAL {
    dbr:Hu_Jieqing dbo:spouse ?spouse .
    ?spouse rdf:type dbo:Writer .
    ?work dbo:author ?spouse ;
          dbo:country ?country .
  }
}
```",4,5,5,3,2,3,2,20,1,3,0,0.25,1.0,0.4
159,16,train,Give me the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?writer WHERE {
  ?person rdfs:label ""George Ducas""@en.
  ?person dbo:worksFor ?organization .
  ?work dbo:author ?person ;
        dbo:creator ?writer .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,34,train,Give me the parent of the awardee of the award of Rodney Lees and father of Arthur Stanley (politician).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find the award associated with Rodney Lees
  ?award dbo:recipient ?rodneyLees .
  ?rodneyLees rdfs:label ""Rodney Lees""@en .

  # Step 2: Find the awardee(s) of this award
  ?award dbo:recipient ?awardee .

  # Step 3: Determine which awardee is the father of Arthur Stanley (politician)
  ?father dbo:child dbr:Arthur_Stanley_(politician) .
  ?father rdfs:label ?awardeeLabel .
  
  FILTER(CONTAINS(LCASE(?awardeeLabel), ""rodney lees""))

  # Step 4: Retrieve the parent of this individual
  ?father dbo:parent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,23,train,Give me the death place of the actor of The Sky Ranger (1928 film) and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName (GROUP_CONCAT(?deathPlace; separator="", "") AS ?deathPlaces)
WHERE {
  # The Sky Ranger (1928 film)
  VALUES ?movie { dbr:The_Sky_Ranger_(film) }
  
  # Aladdin (1958 film)
  VALUES ?movie2 { dbr:Aladdin_(1958_film) }

  # Find actors for both movies
  ?actor dbo:starring ?movie .
  OPTIONAL {
    ?actor dbo:deathPlace ?deathPlace .
  }
  
  UNION
  
  ?actor2 dbo:starring ?movie2 .
  OPTIONAL {
    ?actor2 dbo:deathPlace ?deathPlace2 .
  }

  # Bind actor names
  BIND(STR(?actor) AS ?actorName)
  BIND(IF(BOUND(?deathPlace), STR(?deathPlace), STR(?deathPlace2)) AS ?deathPlace)

} 
GROUP BY ?actorName
ORDER BY ?actorName
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
513,4,train,"Give me the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?savage a dbo:Politician ;
          foaf:name ""George Savage""@en .
  
  ?savage dbo:memberOf ?party .

  ?party a dbo:Organization ;
         dbo:politicalParty true .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
816,16,train,Give me the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  # Find Eugène Cattin's profession
  dbr:Eugène_Cattin dbo:occupation ?profession .
  
  # Find other individuals with the same profession
  ?person a dbo:Person ;
          dbo:occupation ?profession .
  
  FILTER(?person != dbr:Eugène_Cattin) # Exclude Eugène Cattin himself

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,940,0,0.0,0
782,58,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?claptonMember ?nickCurranArtist WHERE {
  # The Fabulous Thunderbirds
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
    dbo:member ?bandMember .

  # Band member of Eric Clapton
  OPTIONAL { 
    ?claptonMember dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
    ?claptonMember rdfs:label ""Eric Clapton""@en .
  }

  # Associated musical artist of Nick Curran
  OPTIONAL {
    ?nickCurranArtist dbo:associatedMusicalArtist dbr:The_Fabulous_Thunderbirds .
    ?nickCurranArtist rdfs:label ""Nick Curran""@en .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
384,8,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau and party of Guillaume Peltier.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Guillaume_Peltier> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Bruno_Retailleau 
    dbr:Guillaume_Peltier 
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
609,16,train,"Who is the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/governor> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governor WHERE {
  # Find Paulus Powell's birthplace
  dbr:Paulus_Powell dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a region and an administrative region
  ?birthPlace rdf:type dbo:Region .
  ?birthPlace rdf:type dbo:AdministrativeRegion .

  # Get the governor of that place
  ?birthPlace dbo:governor ?governor .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
89,19,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Min Hla Htut of Pyakaung
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en ;
              dbo:birthPlace dbr:Pyay_(city) .

  # Step 2: Find the parent of Min Hla Htut
  ?parent dbo:child ?minHlaHtut .

  # Step 3: Determine the child of this parent
  ?child dbo:parent ?parent .

  # Step 4: Find the spouse of Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?spouse dbo:spouse ?sawShweKhet .
  FILTER(?child = ?spouse)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,46,train,Give me the band of the band member of Eric Clapton and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfEricClapton ?realNameOfKimWilsonsBand WHERE {
  # Find the band associated with Eric Clapton
  ?ericClapton a dbo:MusicArtist ;
               foaf:name ""Eric Clapton""@en .
  
  ?memberhip dbo:artist ?ericClapton ;
             dbo:musicalGroup ?bandOfEricClapton .

  # Find Kim Wilson's band and its real name
  ?kimWilson a dbo:MusicArtist ;
             foaf:name ""Kim Wilson""@en .
  
  ?membership2 dbo:artist ?kimWilson ;
               dbo:musicalGroup ?wilsonsBand .
  
  OPTIONAL {
    ?wilsonsBand rdfs:label ?realNameOfKimWilsonsBand .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
737,40,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfAlbrecht WHERE {
  # Albrecht, Duke of Württemberg's child
  ?albrecht a dbo:Person ;
           foaf:name ""Albrecht, Duke of Württemberg"" .
  
  ?albrechtChild dbo:parent ?albrecht ;
                 a dbo:Person .

  # Archduchess Helena of Austria and Archduchess Margarete Sophie of Austria's spouse's child
  ?helena a dbo:Person ;
          foaf:name ""Archduchess Helena of Austria"" .
  
  ?margarete a dbo:Person ;
             foaf:name ""Archduchess Margarete Sophie of Austria"" .

  ?spouse dbo:spouse ?helena, ?margarete ;
          a dbo:Person .

  ?childOfSpouse dbo:parent ?spouse ;
                 a dbo:RoyalFamilyMember .

  # Predecessor relationship
  ?predecessor dbo:successor ?childOfSpouse .
  
  # Find the child of Albrecht who is the predecessor
  ?childOfAlbrecht dbo:predecessor ?predecessor .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
609,28,train,Give me the birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Vince Gilligan (creator of Breaking Bad)
  VALUES ?person { 
    dbr:Vince_Gilligan
    dbr:Cecily_Bell
    dbr:Glenn_Youngkin
  }
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```

This query uses the `VALUES` clause to specify the DBpedia resources for Vince Gilligan, Cece Bell, and Glenn Youngkin. It then attempts to retrieve their birthplaces using the `dbo:birthPlace` property.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
347,19,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?event ?tvShow WHERE {
  ?commander a dbo:Person .
  
  # Commander of the 2nd Dragoon Regiment (France)
  ?commander dbo:memberOf dbr:2nd_Dragoon_Regiment_(France) .

  # Father of Eleonore of Austria, Queen of Poland
  ?eleonore dbp:father ?commander ;
            a dbo:Person ;
            rdfs:label ""Eleonore of Austria""@en .
  
  OPTIONAL {
    ?event dbo:associatedWith ?commander ;
           a dbo:SocietalEvent .
  }
  
  OPTIONAL {
    ?tvShow dbo:starring ?commander ;
            a dbo:TelevisionSeries .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
492,1,train,Give me the death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q123456 wdt:P20 ?deathPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Carolyn Jones. You can find this by searching for her on DBpedia or using a SPARQL query to identify her unique identifier.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
347,32,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
    # Ferdinand III's child who was a commander
    ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor ;
           dbo:occupation dbr:Military_commander .

    # Assuming the societal event is linked to the 2nd Dragoon Regiment
    ?event dbo:relatedWorkOrEvent dbr:2nd_Dragoon_Regiment_(France) .
    
    # The child is related to this event
    ?child dbo:relatedWorkOrEvent ?event .

    # Ferdinand III's father
    dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:parent ?father .
}
```

This query attempts to find the father of a child of Ferdinand III who was a military commander and is linked to an event related to the 2nd Dragoon Regiment.",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
816,61,train,Give me the parent of the professional in the profession of Eugène Cattin and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Eugène Cattin's profession and its parent
  ?eugeneCattin dbo:profession ?profession .
  ?profession dbo:parentCategory ?parent1 .

  # Mariclare Costello's spouse, their child, and the child's parent
  ?mariclareCostello dbp:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child dbo:parent ?parent2 .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
213,2,train,Who is the person decedent at Taipei?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Taipei .
}
```",1,1,2,1,1,3,2,20,220,0,0,1.0,1.0,1.0
80,53,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the author of ""Smartbomb""
  ?smartbomb dbo:author ?author .
  FILTER (str(?smartbomb) = ""Smartbomb"")

  # Find the professional in the alter ego of The Shadow
  ?shadow dbo:alterEgo ?professional .
  FILTER (str(?shadow) = ""The_Shadow_(character)"")

  # Find the actor of ""ATL""
  ?atl dbo:actor ?atlasActor .
  FILTER (str(?atl) = ""ATL_(film)"")

  # Ensure all these entities are connected through an actor
  ?author dbo:profession dbr/Actor .
  ?professional dbo:profession dbr/Actor .
  ?atlasActor rdfs:label ?actorLabel .

  # Find a movie that connects them through the same actor
  ?movie dbo:starring ?commonActor .
  FILTER (str(?commonActor) = str(?actorLabel))
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
293,29,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake and party member of Republican Party (United States).","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Harriette Arlene Lake""@en ;
          dbp:nationality dbc:United_States_American ;
          dbp:party dbc:Republican_Party_(United_States) .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```

This query does the following:
- It looks for a person who is an actor (`dbo:Actor`) with the name ""Harriette Arlene Lake"" and has nationality as United States American.
- It checks if this person is associated with the Republican Party in the United States.
- It retrieves the spouse of this person using the `dbo:spouse` property.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
198,6,train,Give me the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"```sparql
SELECT ?awardee WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Category:Gillmore_Medal> .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
361,24,train,"Give me the professional in the alter ego of The Shadow and actor of the album, that is a film and a work, of Lasso the Moon.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find The Shadow character
  ?shadowCharacter dbo:wikiPageRedirects dbr:The_Shadow .
  
  # Identify the alter ego or real-life person behind The Shadow
  ?shadowCharacter dbo:alterEgo ?person .

  # Check if this person is an actor in a film or work related to Lasso the Moon
  OPTIONAL {
    ?film dbo:actor ?person ;
          dbo:title ""Lasso_the_Moon"" .
  }
  
  OPTIONAL {
    ?work dbo:performer ?person ;
          dbo:title ""Lasso_the_Moon"" .
  }

  # Ensure the person is a professional actor
  ?person dbo:occupation dbr:Actor .
}
```",4,6,5,2,2,2,3,28,0,0,3,0,0.0,0
905,33,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find Charles II of Naples' spouse
  ?charles2 dbo:spouse ?spouse .
  FILTER(STR(?charles2) = ""Charles_II_of_Naples"")

  # Step 2: Find the father of Charles II's spouse
  ?spouse dbo:father ?father .

  # Step 3: Ensure this father is a royalty
  ?father rdf:type dbo:Monarch .

  # Step 4: Find Maria of Bytom's spouse
  ?maria dbp:spouse ?otherSpouse .
  FILTER(STR(?maria) = ""Maria_of_Bytom"")

  # Step 5: Ensure the father is also the spouse of Maria of Bytom
  ?father dbp:spouse ?otherSpouse .

  # Return the person who satisfies all conditions
  BIND(?father AS ?person)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
140,5,train,"Give me the ruling party, that is a political party and an organisation, in Westport, Connecticut.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Westport,_Connecticut> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Connecticut .
}
```

This query attempts to find political parties associated with the state of Connecticut. It may not specifically identify the ruling party in Westport, but it can provide information on political parties relevant to the region.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,40,train,Give me the reference to the real name of the band of Kim Wilson and associated musical artist of Nick Curran and band of Kim Wilson.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName ?kimWilsonRealName ?nickCurranRealName
WHERE {
  # The band associated with Kim Wilson and Nick Curran
  dbr:The_Fabulous_Thunderbirds a dbo:Band ;
    rdfs:label ?bandName .

  # Real name of Kim Wilson
  OPTIONAL { 
    dbr:Kim_Wilson dbo:birthName ?kimWilsonRealName .
  }

  # Real name of Nick Curran
  OPTIONAL {
    dbr:Nick_Curran dbo:birthName ?nickCurranRealName .
  }
}
```",5,5,6,3,3,3,3,71,0,1,1,0.0,0.0,0
687,9,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find teams for Juan Carlos Molina
  ?teamMolina dbo:member dbr:Juan_Carlos_Molina_(footballer) .
  
  # Find teams for Sergio Agüero
  ?teamAgüero dbo:member dbr:Sergio_Agüero .

  # Find players who played with Juan Carlos Molina
  ?teamMolina dbo:member ?player .
  
  # Ensure the player is not Juan Carlos Molina himself
  FILTER (?player != dbr:Juan_Carlos_Molina_(footballer))
  
  # Find players who also played with Sergio Agüero
  ?teamAgüero dbo:member ?player .

  # Ensure the player is not Sergio Agüero himself
  FILTER (?player != dbr:Sergio_Agüero)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
668,29,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of Rod Argent and associated musical artist of $pacely.,"SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession ?band
WHERE {
  VALUES ?person { dbr:Rod_Argent }
  
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin""@en.
  ?person dbo:occupation ?profession.
  
  OPTIONAL {
    ?band dbo:member ?person .
    FILTER (str(?band) = str(dbr:The_Zombies))
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
23,13,train,"Give me the entity in Colombia and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?party
WHERE {
  VALUES ?person { dbr:Roy_Leonardo_Barreras_Montealegre }
  
  ?person dbo:nationality dbr:Colombia .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:politicalParty ?party .
}
```",3,4,4,2,2,2,3,28,0,0,5,0,0.0,0
737,22,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find children of Archduke Charles Louis
  ?child dbo:parent dbr:Archduke_Charles_Louis_of_Austria .
  
  # From these children, find their own children (grandchildren)
  ?grandchild dbo:parent ?child .

  # Ensure the grandchild is a royalty
  ?grandchild rdf:type dbo:Monarch .

  # The grandchild should be a predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor dbr:C._Duke_of_W%C3%BCrttemberg .
  FILTER (?grandchild = ?predecessor)
}
```

This query assumes that the relationships and types are correctly modeled in DBpedia. It identifies grandchildren who are monarchs and predecessors of Carl, Duke of Württemberg.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
198,43,train,"Give me the entity in Charleston, South Carolina and war of Amasa Tracy and force of the awardee of the award of Quincy Adams Gillmore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event dbo:location dbr:Charleston,_South_Carolina .
  ?event dbo:participatedIn ?war .
  
  OPTIONAL { ?amasa dbo:name ""Amasa Tracy"" . ?amasa dbo:participatedIn ?event . }
  OPTIONAL { ?gillmore dbo:name ""Quincy Adams Gillmore"" . ?gillmore dbo:award dbr:Medal_of_Honor . ?gillmore dbo:participatedIn ?event . }

}
```

This query does the following:
- Selects events (`?event`) that took place in Charleston, South Carolina.
- Checks if these events were part of a war (`?war`).
- Optionally includes Amasa Tracy and Quincy Adams Gillmore as participants in these events, with Gillmore being an awardee of the Medal of Honor.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
816,48,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of Allan Arbus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Allan Arbus and his child
  dbr:Allan_Arbus dbo:child ?child .
  
  # Person decedent at Los Angeles
  ?person dbo:deathPlace dbr:Los_Angeles ;
          dbo:parent ?child .

  # Movie associated with the person
  ?movie dbo:starring ?actor ;
         dbo:workExample ?person .

}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
87,2,train,Give me the actor of Always (1989 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film dcterms:title ""Always""@en .
  ?film dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 1989)
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
288,8,train,Give me the theme of the show with Anumta Qureshi and native of Lahore.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . ?v2 <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?show ?theme WHERE {
  # Find shows Anumta Qureshi is associated with
  ?actor a dbo:Actor ;
         foaf:name ""Anumta Qureshi""@en .
  
  ?actor dbo:actedIn ?show .

  # Check if any actor in the show is native to Lahore
  ?otherActor dbo:actedIn ?show ;
              dbo:nationality dbr:Lahore .

  # Get the theme of the show
  ?show dbo:theme ?theme .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
258,0,train,Give me the establishment of 1955-12-02.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity a dbo:Event .
  ?entity dbo:established ?date .
  FILTER (YEAR(?date) = 1955 && MONTH(?date) = 12 && DAY(?date) = 02)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query does the following:
- It selects entities of type `dbo:Event`.
- It looks for those events that have an established date (`dbo:established`) matching December 2, 1955.
- The `FILTER` clause ensures that only dates with the exact year, month, and day are considered.
- The `SERVICE wikibase:label` part is used to fetch labels in English (or the user's language if available).",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
386,9,train,Give me the war of Karl Gustav von Baggovut and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?warLabel WHERE {
  VALUES ?person { 
    dbr:Karl_Gustav_von_Baggovut 
    dbr:Aleksandr_Lvovich_Davydov
  }
  
  ?person dbo:participatedIn ?war .
  SERVICE <http://dbpedia.org/sparql> {
    ?war rdfs:label ?warLabel .
    FILTER (lang(?warLabel) = 'en')
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
557,49,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?producer WHERE {
  # Find the alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
  
  # Identify the actor from High Society Blues
  ?highSocietyActor dbo:actorIn dbr:High_Society_Blues .
  
  # Link the professional role and producer to a movie or work by this actor
  ?movie dbo:starring ?highSocietyActor ;
         dbo:producer ?producer ;
         dbo:profession ?professional .

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,1,train,Give me the band member of Mark Eitzel.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . },"```sparql
SELECT ?member WHERE {
  wd:Q1234568 dbo:bandMember ?member .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Mark Eitzel. You can find this by searching for ""Mark Eitzel"" on DBpedia or using a SPARQL query to retrieve his QID.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
353,33,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of Roger II of Sicily.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find children of William I who are royalty
  ?child dbo:parent dbr:William_I_of_Sicily ;
         a dbo:Monarch .

  # Find the child of Roger II who is also an office holder and royalty
  ?officeHolderChild dbo:parent dbr:Roger_II_of_Sicily ;
                     a dbo:Monarch, dbo:OfficeHolder .

  # Ensure the child from both conditions is the same person
  FILTER (?child = ?officeHolderChild)

  # Find the father of this child
  ?officeHolderChild dbo:parent ?father .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
361,18,train,"Give me the actor of the album, that is a film and a work, of Lasso the Moon and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Lasso_the_Moon> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the album ""Lasso the Moon""
  ?album a dbo:Album ;
         rdfs:label ""Lasso the Moon""@en .
  
  # The album is also associated with a film
  ?film a dbo:Film ;
        dbo:basedOn ?album .

  # Find actors involved in this film
  ?film dbo:starring ?actor .
}
```

This query does the following:
- Identifies the album ""Lasso the Moon"".
- Finds any films based on this album.
- Retrieves actors starring in those films.",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
375,10,train,"Give me the native, that is an artist and a musical artist, of the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?artist a dbo:Artist .
  ?artist dbo:nationality dbr:United_Kingdom .
  ?artist dbo:birthPlace ?place .
  ?place a dbo:Settlement .
  ?place dbo:country dbr:England .
}
```",2,6,3,2,1,3,2,20,1,12,658,0.07692307692307693,0.0015174506828528073,0.002976190476190476
595,40,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Hillary Clinton as the author of ""Back to Work""
  dbr:Back_to_Work_(book) dbo:author dbr:Hillary_Clinton .

  # Identify Bill Clinton as the commander in the Third Taiwan Strait Crisis
  dbr:Third_Taiwan_Strait_Crisis dbo:commander dbr:Bill_Clinton .

  # Find the spouse of Hillary Clinton, who is also a politician and office holder
  dbr:Hillary_Clinton dbo:spouse ?spouse .
  
  # Ensure the spouse is a politician and has held an office
  ?spouse a dbo:Politician ;
          dbo:officeHolder ?office .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
80,27,train,Give me the professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character ?profession WHERE {
  ?show dbo:title ""The Golden Master""@en .
  ?show dbo:genre ?genre .
  ?character dbo:portrayedBy ?actor .
  ?character dbo:abstract ?description .
  ?character dbo:occupation ?profession .
  FILTER(CONTAINS(LCASE(?description), ""alter ego""))
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
871,44,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley"" ;
             dbo:title ""Earl of Derby""@en .

  # His children who are politicians
  ?child dbo:parent ?frederick ;
         a dbo:Politician .

  # Victor Stanley (Royal Navy officer)
  ?victor a dbo:Person ;
          foaf:name ""Victor Stanley"" ;
          dbo:militaryService ""Royal Navy""@en .

  # Ensure the child is also a parent of Victor Stanley
  ?child dbo:parent ?victor .

  # Find the father of these politician children
  ?father dbo:spouse ?mother .
  ?child dbo:parent ?father .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
159,43,train,Give me the reference to the writer of the work of George Ducas and successor of Yurii Khmelnytsky and commander in Great Turkish War.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?work dbo:author ?writer .
  ?work dbo:subject dbr:George_Ducas .
  
  OPTIONAL { 
    ?s1 dbo:succeededBy dbr:Petro_I_Sahaidachny ;
        dbo:successor ?writer .
  }
  
  OPTIONAL {
    ?s2 dbo:commanderInWar dbr:Great_Turkish_War ;
        dbo:commander ?writer .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
737,21,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfMargareteSophie WHERE {
    # Find children of Archduchess Margarete Sophie of Austria
    ?margareteSophie a dbo:Person ;
                    foaf:name ""Archduchess Margarete Sophie of Austria""@en .
    
    ?childOfMargareteSophie dbo:parent ?margareteSophie .

    # Find children of Philipp Albrecht, Duke of Württemberg
    ?philippAlbrecht a dbo:Person ;
                    foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
    
    ?childOfPhilippAlbrecht dbo:parent ?philippAlbrecht .

    # Find predecessor relationship among children of Philipp Albrecht
    ?predecessorChild dbo:parent ?philippAlbrecht ;
                      foaf:name ?namePredecessor .
    
    ?successorChild dbo:parent ?philippAlbrecht ;
                    foaf:name ?nameSuccessor .
    
    FILTER(?namePredecessor != ?nameSuccessor) .

    # Find the child of Margarete Sophie who is a predecessor
    FILTER(?childOfMargareteSophie = ?predecessorChild)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,59,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v3 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantLeader ?officeLeader ?tenantCommander ?officeCommander
WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?leader a dbo:Mayor ;
          dbo:electedAsMayorOf dbr:Madrid_City_Council ;
          dbo:termStart ?startYear .
  FILTER (?startYear >= ""2003-01-01""^^xsd:date && ?startYear <= ""2004-12-31""^^xsd:date)

  # Find the residence of this leader
  ?leader dbo:residence ?residenceLeader .
  ?residenceLeader dbo:tenant ?tenantLeader .

  # Find the office held by this leader
  ?leader dbo:officeHolderOf ?officeLeader .

  # Identify the force involving Manuel Pinto da Costa
  ?force a dbo:MilitaryConflict ;
         dbo:commander dbr:Manuel_Pinto_da_Costa .
  
  # Find the commander in that force
  ?commander a dbo:Commander ;
             dbo:commandedForce ?force .

  # Find the residence of this commander
  ?commander dbo:residence ?residenceCommander .
  ?residenceCommander dbo:tenant ?tenantCommander .

  # Find the office held by this commander
  ?commander dbo:officeHolderOf ?officeCommander .
}
```",6,11,7,3,2,3,3,71,0,0,2,0,0.0,0
531,36,train,"Give me the tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?cityHall ?officeLeader WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura dbo:party dbr:Partido_Aut%C3%B3nomo_Popular .
  
  # Get the leader of that political party
  ?politicalParty dbo:leader ?leader .

  # Ensure we are looking at the same political party as Miguel Maura's
  FILTER(?miguelMaura = ?politicalParty)

  # Find the office held by this leader
  ?leader dbo:office ?officeLeader .
  
  # Get information about Madrid's city hall
  dbr:Madrid_Hall dbo:cityHallOf dbr:Madrid .
  dbr:Madrid_Hall rdfs:label ?cityHall .

}
```

This query assumes that the DBpedia ontology includes properties like `dbo:party` for political affiliation, `dbo:leader` for party leadership, and `dbo:office` for offices held by individuals. It also uses a hypothetical property `dbo:cityHallOf` to link city halls with their cities.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
905,32,train,"Give me the spouse of the father of Philip I, Prince of Taranto and parent of the father, that is a royalty, of Charles I of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Step 2: Find his father
  ?father dbo:child ?philip .

  # Step 3: Determine the spouse of Philip's father
  ?spouse dbo:spouse ?father ;
          a dbo:Person .

  # Ensure this spouse is royalty and parent of Charles I of Hungary's father
  ?charlesFather dbo:parent ?spouse .
  ?charlesFather dbo:child dbr:Charles_I_of_Hungary .
  
  FILTER EXISTS { ?spouse dbo:royalty ""true""^^xsd:boolean }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
871,40,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of the award of Rodney Lees.","SELECT ?result WHERE { <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:father ?parent .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
89,4,train,Give me the parent of Min Hla Htut of Pyakaung.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Min Hla Htut""@en .
  OPTIONAL { 
    ?person dbo:childOf ?parent .
    ?parent foaf:name ?parentName .
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
905,38,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild
WHERE {
  # Béla IV of Hungary and his children
  ?belaviv a dbo:Monarch ;
           dbp:spouse ?spouse ;
           dbo:child ?child .

  # Child who is also royalty
  ?child a dbo:Monarch .

  # Charles I of Hungary's father
  ?charlesI a dbo:Monarch ;
            dbp:father ?fatherOfCharlesI .

  # Parent of the father of Charles I (i.e., grandparent)
  ?fatherOfCharlesI dbo:parent ?grandParent .

  # The child of Béla IV who is also royalty and parent of Charles I's father
  ?child = ?grandParent .
  
  # Return the child of this royal child
  ?royalChild a dbo:Monarch ;
              dbo:child ?childOfChild .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
293,32,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v1 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyMember ?actor WHERE {
  # Find the ruling party in Central, Louisiana
  ?centralLocation a dbo:PopulatedPlace ;
                   dbo:locationCountry dbr:United_States_of_America ;
                   dbo:locationStateOrProvince dbr:Louisiana ;
                   rdfs:label ""Central, Louisiana""@en .
  
  ?partyMember dbo:memberOf ?rulingParty ;
               foaf:name ?name .

  # Find the actor from ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute"" ;
         dbo:starring ?actor .

  # The party member is the spouse of the actor
  ?partyMember foaf:mbox ?spouseEmail .
  ?actor foaf:mbox ?actorEmail .
  
  FILTER(?spouseEmail = ?actorEmail)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
782,38,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?associatedArtist WHERE {
  # Find bands associated with Eric Clapton's band members
  ?member dbo:bandMemberOf ?band .
  ?band dbo:bandMember ?claptonMember .
  ?claptonMember foaf:name ""Eric Clapton"" .

  # Check if Nicholas Michael Curran is a musical artist
  dbr:Nicholas_Michael_Curran dbo:birthPlace ?place ;
                               rdf:type dbo:MusicalArtist .

  # Find association between Nicholas Michael Curran and the bands
  ?band dbo:associatedBandMember ?curran .
  ?curran foaf:name ""Nicholas Michael Curran"" .
  
  OPTIONAL {
    ?curran dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
159,47,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writer WHERE {
  # Find the commander in the Russo-Polish War (1654–1667)
  ?commander dbo:officeHolderOf ?war .
  ?war rdfs:label ""Russo-Polish War (1654–1667)""@en .

  # Ensure the commander is a politician and an office holder
  ?commander rdf:type dbo:Politician ;
             dbo:occupation dbo:OfficeHolder .

  # Find the successor who is also a politician and an office holder
  ?successor dbo:succeededBy ?commander .
  ?successor rdf:type dbo:Politician ;
             dbo:occupation dbo:OfficeHolder .

  # Reference to George Ducas's work
  dbr:George_Ducas dbo:authorOf ?work .
  ?writer dbo:author ?work .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
80,41,train,Give me the professional in  and actor of the album of What You Know (T.I. song) and actor of the movie with .,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?albumActor ?movieActor WHERE {
  # Find the album ""What You Know"" by T.I.
  VALUES ?album { dbr:What_You_Know_(T.I._song) }
  
  # Get the producer of the album
  ?album dbo:producer ?producer .
  
  # Get any actor associated with the album (e.g., featured artists)
  OPTIONAL {
    ?album dbo:artist ?albumActor .
    FILTER EXISTS { ?albumActor a dbo:MusicalArtist . } 
  }
  
  # Find a movie and an actor in that movie
  VALUES ?movie { dbr:Movie_Title_Here } # Replace with actual movie title resource
  ?movie dbo:starring ?movieActor .
}
```

**Notes:**
- Replace `dbr:Movie_Title_Here` with the DBpedia resource for a specific movie you are interested in.
- The query assumes that actors associated with an album might be featured artists or similar roles, which may not always be directly labeled as ""actors"" in DBpedia.",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
213,4,train,"Who is the spouse, that is a writer, of Hu Jieqing?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?huJieqing a dbo:Person ;
             foaf:name ""Hu Jieqing""@en .
  
  ?huJieqing dbo:spouse ?spouse .

  ?spouse a dbo:Writer .
}
```

This query does the following:
- It identifies Hu Jieqing as an instance of `dbo:Person` with the name ""Hu Jieqing"".
- It retrieves the spouse(s) using the `dbo:spouse` property.
- It filters these spouses to include only those who are instances of `dbo:Writer`.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
103,5,train,"Give me the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?show dbo:title ""Ab Kya Hoga""@en .
  ?show dbo:castMember ?actor .
  ?actor a dbo:Actor .
  ?actor dbo:occupation dbr:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
668,10,train,Give me the associated musical artist of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?person { 
    dbr:Pacely 
    dbr:Stefflon_Don 
  }
  
  ?person dbo:musicalArtist ?artist .
}
```

This query uses the `dbo:musicalArtist` property to find associated musical artists for both ""Pacely"" and ""Stefflon Don"". Make sure that these resources are correctly identified in DBpedia.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
737,29,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of Carl, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Duke Philipp of Württemberg's child
  ?philippChild dbo:child dbr:Duke_Philipp_of_W%C3%BCrttemberg .
  
  # This child is a predecessor (parent) of Carl, Duke of Württemberg
  ?philippChild dbo:spouse ?carlParent .
  ?carlParent dbo:child dbr:Carl,_Duke_of_W%C3%BCrttemberg .

  # This individual is also the child of Archduchess Margarete Sophie of Austria
  ?individual dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # The individual must be the same as the child of Duke Philipp and predecessor of Carl
  FILTER (?philippChild = ?individual)
}",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
756,14,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName ?clubName ?seasonStart ?seasonEnd
WHERE {
  # Find Thomas Letsch's resource
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en .
  
  # Identify clubs he has managed
  ?letsch dbo:position dbr:Soccer_manager .

  # Get the teams (clubs) he managed
  ?team dbo:manager ?letsch ;
        a dbo:Soccer_club .

  # Retrieve seasons of management
  ?management dbo:seasonStart ?seasonStart ;
              dbo:seasonEnd ?seasonEnd ;
              dbo:team ?team ;
              dbo:manager ?letsch .

  # Get the manager's name and club's name
  OPTIONAL { ?letsch foaf:name ?managerName }
  OPTIONAL { ?team foaf:name ?clubName }
}
ORDER BY ?seasonStart",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
668,45,train,"Give me the associated musical artist of $pacely and person born as the birth name of the native, that is an artist, of Central Region, Ghana and professional in Musician.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Central_Region,_Ghana> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?nativeMusician
WHERE {
  # Find the associated musical artist of $pacely
  ?pacely dbo:associatedMusicalArtist ?associatedArtist .
  
  # Find a person native to Central Region, Ghana who is a musician
  ?person dbp:nativePlace dbr:Central_Region_(Ghana) ;
          dbo:profession dbr:Musician ;
          rdfs:label ?birthName .

  # Ensure the birth name matches another artist's name
  ?artist rdfs:label ?birthName .
  
  FILTER (lang(?birthName) = 'en')
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
375,5,train,Give me the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  wd:Q11998 wdt:P40 ?child .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
668,11,train,Give me the associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Stonebwoy"" ;
          dbo:birthName ""Elorm Kabu Amenyah"" .
  ?person dbo:associatedBandOrMusicalArtist ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
737,42,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalChild WHERE {
  # Archduke Charles Louis of Austria and his child
  ?archduke dbr:Archduke_Charles_Louis_of_Austria .
  ?child1 dbo:parent ?archduke .

  # Child of the child who is royalty
  ?grandchild1 dbo:parent ?child1 .
  ?grandchild1 a dbo:Monarch .

  # Philipp Albrecht, Duke of Württemberg and his child
  ?philippAlbrecht dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?child2 dbo:parent ?philippAlbrecht .

  # Albrecht, Duke of Württemberg and his child (should be Philipp Albrecht)
  ?albrecht dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  ?child2 dbo:parent ?albrecht .

  # Find the royal grandchild who is a predecessor
  ?grandchild1 dbo:predecessor ?child2 .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
39,50,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # Kid Rock (Robert Lamar Thompson)
  dbr:Kid_Rock a dbo:MusicalArtist ;
               foaf:name ""Robert Lamar Thompson"" .

  # The Shadow (fictional character created by Walter B. Gibson)
  dbr:The_Shadow a dbo:FictionalCharacter, dbo:ComicBookCharacter ;
                 dbo:creator dbr:Walter_B._Gibson .

  # Find the band associated with Kid Rock
  ?band dbo:member dbr:Kid_Rock .
}
```",5,8,6,3,2,3,3,71,0,0,4,0,0.0,0
386,3,train,Give me the birth place of Elena Žalinkevičaitė-Petrauskienė.,SELECT ?result WHERE { <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Elena Žalinkevičaitė-Petrauskienė"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
353,60,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?royalChildOfRogerII ?royalGrandchildOfSpouse
WHERE {
  # Roger II of Sicily and his children
  ?roger2 a dbo:Monarch ;
          foaf:name ""Roger II of Sicily""@en .
  
  # Children of Roger II
  ?child1 dbo:parent ?roger2 ;
          a dbo:Person .

  # Child of the child that is royalty
  ?royalChildOfRogerII dbo:parent ?child1 ;
                       a dbo:Royalty .

  # Constance of Burgundy and her spouse
  ?constance a dbo:Monarch ;
             foaf:name ""Constance of Burgundy""@en .
  
  ?spouse dbo:spouse ?constance ;
          a dbo:Person .

  # Children of the spouse
  ?child2 dbo:parent ?spouse ;
          a dbo:Person .

  # Child's child that is royalty
  ?grandChildOfSpouse dbo:parent ?child2 ;
                     a dbo:Person .
  
  ?royalGrandchildOfSpouse dbo:parent ?grandChildOfSpouse ;
                           a dbo:Royalty .
}
```",6,8,7,3,2,3,3,71,0,0,4,0,0.0,0
595,41,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v4 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?author ?spouse WHERE {
  # Find the commander of the Third Taiwan Strait Crisis
  ?crisis dbo:commander ?commander .
  FILTER(STR(?crisis) = ""Third_Taiwan_Strait_Crisis"")

  # Find works authored by Bill Clinton that are books
  ?work dbo:author dbr:Bill_Clinton ;
        a dbo:Book .

  # Find the author of ""An Invitation to the White House""
  ?invitation dbo:author ?author .
  FILTER(STR(?invitation) = ""An_Invitation_to_the_White_House"")

  # Check if the spouse of the author is a politician or office holder
  ?author dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:occupation dbr:Politician . }
  OPTIONAL { ?spouse dbo:officeHolder true . }

}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
353,53,train,"Give me the father of William II of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily and child of the child of Alfonso VI of León and Castile.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find the father of William II of Sicily
  ?william2 dbo:father ?father .
  FILTER (str(?william2) = ""William_II_of_Sicily"")

  # Step 2: Find a grandchild of Roger II who is royalty and their parent
  ?roger2 dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?grandchild rdf:type dbo:Monarch .
  ?grandchild dbo:parent ?parent .

  # Step 3: Find a great-grandchild of Alfonso VI
  ?alfonso6 dbo:child ?child2 .
  ?child2 dbo:child ?greatGrandchild .

  # Combine the conditions to find the person who satisfies all criteria
  FILTER (?father = ?parent && ?grandchild = ?greatGrandchild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
557,17,train,"Give me the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Find the actor in ""High Society Blues""
  ?movie dbo:title ""High Society Blues""@en .
  ?movie dbo:starring ?actor .

  # Find works associated with this actor
  ?actor dbo:film ?work .

  # Filter to find works that are also claims to fame (movies)
  ?work a dbo:Film .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
595,8,train,"Give me the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war dbo:participatingOrganisation dbr:United_States_Navy .
  ?war dbo:wikiPageWikiLink ?disease .
  ?disease rdf:type dbo:Disease .
  ?war dbo:wikiPageWikiLink ?societalEvent .
  ?societalEvent rdf:type dbo:SocietalEvent .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
89,61,train,"Give me the spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  # Step 2: Find the child of Saw Shwe Khet who is royalty
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Monarch .

  # Step 3: Identify the spouse of this child, who is also royalty
  ?spouseChild dbo:spouse ?child ;
               a dbo:Monarch .

  # Step 4: Find the predecessor of this spouse
  ?predecessor dbo:successor ?spouseChild .

  # Step 5: Identify the father of this predecessor
  ?father dbo:parent ?predecessor .

  # Step 6: Find the spouse of this father
  ?finalSpouse dbo:spouse ?father .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
595,31,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find the book ""Back to Work"" authored by Hillary Clinton
  ?book dbo:author dbr:Hillary_Clinton ;
        rdfs:label ""Back to Work""@en .
  
  # Find Hillary Clinton's spouse who is a politician and an office holder
  dbr:Hillary_Clinton dbo:spouse ?spouse .

  # Ensure the spouse is a politician and has held an office
  ?spouse a dbo:Politician ;
          dbo:officeHolder ?office .
}
```

This query does the following:
- It identifies the book ""Back to Work"" authored by Hillary Clinton.
- It retrieves her spouse from DBpedia's data.
- It ensures that this spouse is classified as a politician and has held an office.",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
756,48,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerName WHERE {
  # Thomas Letsch managed which team?
  ?team dbo:manager dbr:Thomas_Letsch .
  
  # Find the player from that team
  ?player dbo:playsFor ?team ;
          a dbo:SoccerPlayer .

  # Identify the successor of the 2006–07 VfL Bochum season
  ?successorSeason dbo:succeededBy ?vflBochum2007 .
  dbr:VfL_Bochum_season_2006-07 dbo:succeededBy ?successorSeason .

  # Ensure the team is part of that successor season
  ?team dbo:participatedIn ?successorSeason .

  # Find the manager of the player in that team
  ?player dbo:manager ?manager .
  
  # Get the name of the manager
  ?manager foaf:name ?managerName .
}
```",5,14,6,3,2,3,3,71,0,0,1,0,0.0,0
398,0,train,Give me the figure known as Наши парни / Nashi parni.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?film ?title ?description WHERE {
  VALUES ?film { 
    dbr:Nashi_Parni
  }
  
  OPTIONAL {
    ?film rdfs:label ?title .
    FILTER (lang(?title) = 'ru' || lang(?title) = '')
  }

  OPTIONAL {
    ?film dbo:abstract ?description .
    FILTER (lang(?description) = 'ru' || lang(?description) = '')
  }
}
```",1,1,2,1,1,3,2,20,0,1,1,0.0,0.0,0
609,10,train,Give me the birth place of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```

This query uses the `dbo:birthPlace` property to find the birthplaces of Vince Gilligan and Cece Bell. The `VALUES` clause specifies the two individuals by their DBpedia resource URIs.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,27,train,"Give me the associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Find Nick Curran
  ?nickCurran a dbo:MusicalArtist ;
              foaf:name ""Nick Curran""@en .
  
  # Check if he was born as a musical artist (assuming birth profession is available)
  OPTIONAL { 
    ?nickCurran dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  # Alternatively, find associated artists directly
  OPTIONAL {
    ?nickCurran dbo:associatedBandOrMusicalArtist ?associatedArtist .
  }

  FILTER(?associatedArtist != dbr:Nick_Curran)
}
```

This query does the following:
- Identifies Nick Curran as a `dbo:MusicalArtist`.
- Attempts to find any associated musical artists through his birthplace or directly linked bands/artists.
- Filters out Nick Curran himself from the results.",3,4,4,3,1,3,3,71,0,0,3,0,0.0,0
905,50,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Béla IV of Hungary and his children
  ?belaviv dbo:spouse ?spouse .
  ?belaviv dbp:children ?child .

  # Child of Béla IV who is royalty
  ?child dbp:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen""))

  # Grandchild of Béla IV who is royalty
  ?child dbp:children ?grandchild .
  ?grandchild dbp:title ?grandchildTitle .
  FILTER(CONTAINS(LCASE(?grandchildTitle), ""king"") || CONTAINS(LCASE(?grandchildTitle), ""queen""))

  # Maria of Bytom's spouse
  ?maria dbo:spouse ?spouse .

  # Father of the spouse who is royalty
  ?spouse dbp:father ?father .
  ?father dbp:title ?fatherTitle .
  FILTER(CONTAINS(LCASE(?fatherTitle), ""king"") || CONTAINS(LCASE(?fatherTitle), ""queen""))

  # Parent of this royal father
  ?father dbo:parent ?parent .

  # Ensure the grandchild is the same as the parent found
  ?grandchild = ?parent
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
213,9,train,"Who is the child, that is a politician, of the person decedent at Taipei?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Taipei> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:deathPlace dbr:Taipei .
  ?person dbo:child ?child .
  ?child a dbo:Politician .
}
```

This query does the following:
- Uses `dbo:deathPlace` to find individuals who died in Taipei.
- Uses `dbo:child` to identify their children.
- Filters these children using `a dbo:Politician` to ensure they are politicians.",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
609,54,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ceceBirthPlace ?governorBirthPlace ?paulusBirthPlace ?vinceAwardeeBirthPlace
WHERE {
  # Cece Bell's birth place
  dbr:Cecil_Alice_Bell dbo:birthPlace ?ceceBirthPlace .

  # Governor of Cece Bell's birth place
  ?region dbp:governmentHead ?governor .
  ?governor dbo:birthPlace ?governorBirthPlace .
  ?ceceBirthPlace rdfs:seeAlso ?region .

  # Paulus Powell's birth place
  dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
  ?paulusBirthPlace a dbo:AdministrativeRegion .

  # Awardee of Vince Gilligan's awards
  {
    SELECT DISTINCT ?awardee WHERE {
      ?award dbp:recipient ?awardee .
      FILTER (CONTAINS(LCASE(?awardee), ""vince gilligan""))
    }
  } LIMIT 1

  ?awardee dbo:birthPlace ?vinceAwardeeBirthPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
375,3,train,"Give me the movie, that is a work and a television show, with Vera Lynn.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Vera_Lynn> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie WHERE {
  ?movie dbo:starring dbpedia:Vera_Lynn .
  ?movie rdf:type ?type1 .
  ?movie rdf:type ?type2 .
  FILTER(?type1 = dbc:Film || ?type1 = dbo:Movie)
  FILTER(?type2 = dbo:TelevisionShow || ?type2 = dbo:TVSeries)
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
203,16,train,"Give me the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""William Bayne""@en .
  
  ?person dbo:participatedIn ?war .

  ?war a (dbo:MilitaryConflict|dbo:Event) .
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
871,28,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician) and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley"" ;
          dbo:title dbr:Earl_of_Derby ;
          dbo:number ""17""@en .

  # Find his children
  ?child dbo:parent ?edward .
  
  # Arthur Stanley (politician)
  ?arthur a dbo:Person ;
          foaf:name ""Arthur Stanley"" ;
          dbo:occupation dbr:Politician .

  # Commander of the Royal Victorian Order awardee
  ?awardee a dbo:Person ;
           dbo:honor dbr:Commander_of_the_Royal_Victorian_Order .

  # Ensure both children are related to Edward Stanley
  FILTER (?child = ?arthur || ?child = ?awardee)

  # Retrieve the parent of Edward Stanley
  ?parent dbo:child ?edward .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
595,26,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?resident a dbo:Politician ;
            dbo:residence dbr:Chappaqua,_New_York ;
            dbo:author ?work .
  
  ?work a dbo:Book ;
        a dbo:WrittenWork .

  ?author dbo:author ?work .
}
```",3,8,4,3,1,3,3,71,0,0,3,0,0.0,0
151,3,train,Give me the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?charlesParsons { dbr:Charles_Parsons_(British_Army_officer) }
  ?charlesParsons dbo:award ?award .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
941,9,train,"Who is the parent, that is a royalty, of the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Ferdinand Albert II, Duke of Brunswick-Lüneburg
  VALUES ?ferdinand { dbr:Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg }

  # Step 2: Find his children
  ?child dbo:parent ?ferdinand .

  # Step 3: For each child, identify their parents
  ?child dbo:parent ?parent .

  # Step 4: Filter those parents who are royalty
  ?parent a dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
628,46,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Step 2: Identify band members of the associated musical artist
  ?artist dbo:associatedBandMember ?bandMember .
  
  # Ensure the band member is a musical artist and part of GS9
  ?bandMember rdf:type dbo:MusicalArtist ;
              dbo:memberOf dbr:GS9 .

  # Step 3: Match the birth name with the person
  ?person dbo:birthName ?birthName .
  
  # Ensure the person is an artist and a musical artist
  ?person rdf:type dbo:Artist, dbo:MusicalArtist .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
756,26,train,"Give me the native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Find the leader of West Germany
  ?leader dbo:positionTitle ""Chancellor""@en;
          dbo:country dbr:West_Germany.

  # Identify the country that administered West Germany (Germany itself)
  ?westGermany dbo:administrativeCountry dbr:Germany.

  # Get the native language of Germany
  dbr:Germany dbp:nativeLanguage ?nativeLanguage.
}
```",3,4,4,3,1,3,3,71,0,0,5170,0,0.0,0
557,56,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in the alter ego of The Shadow and producer of The Adventures of Tom Sawyer (1938 film).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the actor of ""High Society Blues""
  ?actor dbo:film dbr:High_Society_Blues .
  
  # Ensure this person is also associated with ""The Shadow""
  ?actor dbo:profession dbr:The_Shadow_(radio_program) .

  # Ensure this person produced ""The Adventures of Tom Sawyer (1938 film)""
  ?actor dbo:producedFilm dbr:The_Adventures_of_Tom_Sawyer_1938_film .
  
  # Find a claim to fame that is both a movie and a work
  ?claimToFame dbo:film ?movie .
  ?claimToFame dbo:work ?work .
  
  # Ensure the person has this claim to fame
  ?actor dbo:claimToFame ?claimToFame .

  # Find the producer of this claim to fame (either as a movie or work)
  OPTIONAL { ?movie dbo:producer ?producer . }
  OPTIONAL { ?work dbo:producer ?producer . }

  FILTER(?producer != dbr:Unknown) # Filter out unknown producers
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
816,12,train,Give me the parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentDoon ?parentAmy WHERE {
  ?doonArbus a dbo:Person ;
             foaf:name ""Doon Arbus""@en .
  OPTIONAL { ?doonArbus dbo:childOf ?parentDoon . }
  
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  OPTIONAL { ?amyArbus dbo:childOf ?parentAmy . }

  FILTER(lang(?doonArbus) = 'en')
  FILTER(lang(?amyArbus) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
737,50,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?descendant WHERE {
  # Alexander of Württemberg (1804-1881)
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en ;
             dbo:birthDate ?birthDateAlex .
  FILTER(?birthDateAlex >= ""1804-01-01""^^xsd:date && ?birthDateAlex <= ""1804-12-31""^^xsd:date) .

  # First child of Alexander
  ?child1 dbo:parent ?alexander ;
          a dbo:Person .

  # Second child (grandchild of Alexander)
  ?child2 dbo:parent ?child1 ;
          a dbo:Person .

  # Third child (great-grandchild of Alexander)
  ?descendantFromAlex dbo:parent ?child2 ;
                      a dbo:Person .

  # Archduke Charles Louis of Austria
  ?charles a dbo:Person ;
           foaf:name ""Archduke Charles Louis of Austria""@en .

  # First child of Archduke Charles Louis
  ?child3 dbo:parent ?charles ;
          a dbo:Person .

  # Second child (grandchild of Archduke Charles Louis)
  ?child4 dbo:parent ?child3 ;
          a dbo:Person .

  # Third child (great-grandchild of Archduke Charles Louis)
  ?descendantFromCharles dbo:parent ?child4 ;
                         a dbo:Person .

  # Check if the descendant is royalty
  FILTER EXISTS { ?descendantFromAlex dbo:royalTitle ?title . }
  FILTER EXISTS { ?descendantFromCharles dbo:royalTitle ?title . }

  # Ensure both descendants are the same person
  FILTER(?descendantFromAlex = ?descendantFromCharles)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
386,2,train,Give me the war of Alexander Lvovich Davydov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?davydov dbo:birthName ""Alexander Lvovich Davydov""@en .
  ?davydov dbo:militaryConflict ?war .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
756,36,train,"Give me the manager of VfL Bochum and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?clubSeason
WHERE {
  # Find the manager of VfL Bochum
  dbr:VfL_Bochum dbo:manager ?manager .
  
  # Get the name of the manager
  ?manager rdfs:label ?managerName ;
           dbp:birthday ""1968-08-26""^^xsd:date .

  # Find a sports club with a season associated with this manager
  ?clubSeason dbo:seasonOfTeam ?team .
  ?team dbo:manager ?manager .
  
  FILTER (lang(?managerName) = 'en')
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,57,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Henry Clay Lewis' birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
             dbp:country ""United States""^^xsd:string .

  # Quincy Adams Gillmore's award and awardee's force
  dbr:Quincy_Adams_Gillmore dbo:awardReceived ?award .
  ?award dbo:awardee ?awardee .
  ?awardee dbo:militaryBranch ?force .

  # Amasa Tracy's associated war
  dbr:Amasa_Tracy dbo:servedIn ?war .

  # Find the common entity (settlement) related to all conditions
  FILTER(?birthPlace = ?entity)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
668,0,train,Give me the associated musical artist of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?pacely { dbr:Pacely }
  
  ?pacely dbo:associatedBand ?artist .
  UNION
  ?pacely dbo:memberOfBand ?artist .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
89,47,train,"Give me the child of the parent of Min Hla Htut of Pyakaung and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfParentSpouse WHERE {
  # Step 1: Find Min Hla Htut's parent
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en ;
              dbo:birthPlace dbr:Pyakaung .
  
  ?parent dbo:child ?minHlaHtut .

  # Step 2: Find the spouse of Min Hla Htut's parent
  ?spouse dbo:spouse ?parent .
  FILTER EXISTS { ?spouse a dbo:Monarch } # Ensure royalty

  # Step 3: Find Saw Shwe Khet's child who is royalty
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .

  ?royalChild dbo:child ?sawShweKhet .
  FILTER EXISTS { ?royalChild a dbo:Monarch } # Ensure royalty

  # Step 4: Find the father of Saw Shwe Khet's royal child
  ?father dbo:spouse ?mother ;
          dbo:child ?royalChild .

  # Step 5: Find the spouse of this father
  ?childOfParentSpouse dbo:spouse ?father .
  FILTER EXISTS { ?childOfParentSpouse a dbo:Monarch } # Ensure royalty

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,41,train,"Give me the reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in Great Turkish War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the author of ""Always the Love Songs""
  ?work dbo:author ?person .
  FILTER (str(?work) = ""Always_the_Love_Songs"")

  # Check if this person was a politician and office holder during the Russo-Polish War
  OPTIONAL { 
    ?office dbo:heldBy ?person ;
            dbo:startDate ?start ;
            dbo:endDate ?end .
    FILTER (?start <= ""1667-01-01""^^xsd:date && ?end >= ""1654-01-01""^^xsd:date)
  }

  # Check if this person was a commander in the Great Turkish War
  OPTIONAL {
    ?commanderRole dbo:agent ?person ;
                   dbo:startTime ?startCommander ;
                   dbo:endTime ?endCommander .
    FILTER (?startCommander <= ""1699-01-01""^^xsd:date && ?endCommander >= ""1683-01-01""^^xsd:date)
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
633,3,train,"Give me the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?title WHERE {
  VALUES ?francisI { dbr:François_I,_Duke_of_Lorraine }
  
  ?francisI dbo:father|dbo:mother ?parent .
  OPTIONAL { ?parent dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""count"") || CONTAINS(LCASE(?title), ""noble"")) }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
782,3,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
SELECT ?band WHERE {
  wd:Q1234567 dbo:bandMember ?member .
  ?member foaf:name ""Kim Wilson""@en .
  ?band dbo:bandMember ?member .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia resource identifier for Kim Wilson if available. You may need to look up this identifier in DBpedia or another reliable source.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
737,27,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify the parent of Archduchess Margarete Sophie of Austria
  dbpedia:Margarete_Sophie_Archduchess_of_Austria dbo:parent ?parent .

  # Step 2: Find a child of this parent who is royalty
  ?child dbo:parent ?parent .
  ?child rdf:type dbo:RoyalFamilyMember .

  # Step 3: Identify the child of this royal child
  ?grandchild dbo:parent ?child .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
347,15,train,"Give me the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  ?event a dbo:Event .
  ?event dbo:wikiPageRedirects dbr:Algerian_War .
  ?event dbo:genre dbr:Societal_event .
  ?event dbo:genre dbr:Television_show .
}
```

This query does the following:
- It selects events (`?event`) that are of type `dbo:Event`.
- It checks if these events redirect to or are related to the Algerian War using `dbo:wikiPageRedirects`.
- It ensures that these events have genres classified as both a societal event and a television show.",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
628,14,train,"Give me the native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?nativeRegion WHERE {
  # Find the award associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?coro dbo:awardedBy ?award .

  # Filter awards where the native region is described as a ""region and American and a state and a settlement""
  ?award dbo:nativeRegion ?nativeRegion .
  FILTER (
    (CONTAINS(LCASE(?nativeRegion), ""region"") &&
     CONTAINS(LCASE(?nativeRegion), ""american"") &&
     CONTAINS(LCASE(?nativeRegion), ""state"") &&
     CONTAINS(LCASE(?nativeRegion), ""settlement""))
  )
}
```

This query does the following:
- It selects awards associated with Coro de la Pontificia Universidad Católica de Puerto Rico.
- It filters these awards based on their native region description, ensuring it matches the criteria of being a ""region and American and a state and a settlement.""",2,6,3,2,1,3,3,71,0,0,8569,0,0.0,0
737,9,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Albrecht, Duke of Württemberg
  dbr:Albrecht,_Duke_of_W%C3%BCrttemberg dbo:spouse ?spouse .
  
  # Find the child who is also a predecessor to Carl, Duke of Württemberg
  ?child dbo:parent ?spouse ;
         dbo:predecessorOf dbr:Carl,_Duke_of_W%C3%BCrttemberg .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
557,47,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # The Shadow's alter ego or related character
  ?shadowCharacter dbo:alterEgoOf dbr:The_Shadow .
  
  # Johnny Doughboy's claim to fame (a work)
  ?work dbo:actor dbr:Johnny_Doughboy .
  
  # Producer of the work
  ?work dbo:producer ?producer .
  
  # Linking The Shadow and Johnny Doughboy through a common work or character
  ?shadowCharacter dbo:characterIn ?work .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
293,48,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and person born as the birth name of Ann Sothern.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the landmark with the specified elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ""20.116800000000001347""^^xsd:float .

  # Find the person born as Ann Sothern
  ?person dbp:birthName ""Ann Sothern"" ;
          dbo:birthPlace ?landmark .

  # Determine the ruling party at the landmark's location
  ?location a dbo:Location ;
            dbo:isPartOf ?country .
  ?country dbo:government ?government .
  ?government dbo:rulingParty ?party .

  # Find a member of the ruling party
  ?member dbo:memberOf ?party ;
          dbp:name ?partyMember .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,21,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent ?movie WHERE {
  # Find Doon Arbus and her parent(s)
  VALUES (?doon) { dbr:Doon_Arbus }
  ?doon dbo:parent ?parent .

  # Find movies with Herschel Bernardi
  VALUES (?herb) { dbr:Herschel_Bernardi }
  ?movie dbo:starring ?herb .
  
  # Check if the parent acted in those movies
  ?movie dbo:starring ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
89,43,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet and child of Saw Min Hla.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find Myat Hpone Pyo's predecessor
  ?myatHponePyo dbo:successor ?predecessor .
  
  # Step 2: Identify a royal child of Saw Shwe Khet
  ?sawShweKhet dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 3: Determine the father of this royal child
  ?father dbo:child ?royalChild .
  
  # Step 4: Identify the spouse of this father
  ?spouse dbo:spouse ?father .
  
  # Step 5: Ensure the spouse is royalty and matches the predecessor
  ?spouse rdf:type dbo:Monarch .
  FILTER(?predecessor = ?spouse)
}
```

This query assumes that:
- `dbo:successor` and `dbo:child` are used to denote successor/predecessor and parent-child relationships.
- `rdf:type dbo:Monarch` is used to identify royalty.

Please note that the exact properties (`dbo:successor`, `dbo:spouse`, etc.) might need adjustment based on the actual DBpedia schema for these historical figures. Additionally, ensure that the resource identifiers (like `dbr:Saw_Shwe_Khet`) are correctly specified if needed.",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
353,5,train,"Who is the reference, that is a royalty and an office holder, to William I?","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?title WHERE {
  # Find individuals related to William I
  ?related dbo:wikiPageRedirects dbr:William_I_of_England .
  
  # Ensure the individual is a person and has a title indicating royalty or office holding
  ?related a dbo:Person ;
           dbo:title ?title .

  # Filter titles that indicate royalty or an official position
  FILTER (
    CONTAINS(LCASE(?title), ""king"") ||
    CONTAINS(LCASE(?title), ""queen"") ||
    CONTAINS(LCASE(?title), ""duke"") ||
    CONTAINS(LCASE(?title), ""prince"") ||
    CONTAINS(LCASE(?title), ""emperor"") ||
    CONTAINS(LCASE(?title), ""official"") ||
    CONTAINS(LCASE(?title), ""officer"")
  )

  # Bind the person and their title to the output
  BIND(?related AS ?person)
}
ORDER BY ?title
LIMIT 10
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
151,5,train,Give me the entity in the birthplace of Burhan Belge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Burhan_Belge> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Burhan_Belge dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
  OPTIONAL { ?birthPlace dbo:wikiPageRedirects ?redirect }
  BIND(COALESCE(?redirect, ?birthPlace) AS ?finalBirthPlace)
  ?finalBirthPlace rdfs:label ?birthPlaceEntity .
}
```",2,2,3,2,1,2,2,9,0,2,249,0.0,0.0,0
386,18,train,Give me the war of the awardee of Golden Sword for Bravery and war of Karl Gustav von Baggovut.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . <http://dbpedia.org/resource/Karl_Gustav_von_Baggovut> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war
WHERE {
  # Find the person who received the Golden Sword for Bravery
  { 
    SELECT ?person WHERE {
      ?person dbo:award dbr:Golden_Sword_for_Bravery .
    }
  }

  UNION

  # Directly specify Karl Gustav von Baggovut
  {
    BIND(dbr:Karl_Gustav_von_Baggovut AS ?person)
  }

  # Find wars associated with these persons
  ?person dbo:militaryConflict ?war .
}
ORDER BY ?person
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
263,0,train,Give me the native of Middlesex.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeLanguage WHERE {
  ?person dbo:nativePlace dbr:Middlesex .
  ?person dbo:nationality ?nationality .
  ?nationality dbo:language ?nativeLanguage .
}
```",1,1,2,1,1,2,3,28,0,0,935,0,0.0,0
293,31,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347 and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyMember WHERE {
  # Step 1: Find the landmark with the given elevation
  ?landmark a dbo:Landmark ;
            dbo:elevation ""20.116800000000001347""^^xsd:float .

  # Step 2: Identify the ruling party of this location
  ?location dbo:locatedIn ?landmark .
  ?location dbo:government ?government .
  ?government dbo:rulingParty ?party .

  # Step 3: Find a member of this ruling party
  ?person dbo:memberOf ?party ;
          a dbo:Person .

  # Step 4: Identify Roger Pryor (actor) and his spouse
  dbr:Roger_Pryor_(actor) dbo:spouse ?rogerSpouse .

  # Step 5: Check if the party member is also Roger Pryor's spouse
  FILTER (?person = ?rogerSpouse)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,24,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfStephenV WHERE {
  # Step 1: Find Charles I's father
  ?charlesI dbo:father ?father .
  FILTER (str(?charlesI) = ""Charles_I_of_Hungary"")

  # Step 2: Find the grandfather of Charles I
  ?father dbo:father ?grandfather .

  # Step 3: Find Stephen V and his children
  dbr:Stephen_V_of_Hungary dbo:child ?stephenVChild .
  
  # Step 4: Match the child of Stephen V who is also the parent of the grandfather
  ?stephenVChild dbo:parent ?grandfather .

  # Ensure the result is a royalty
  ?stephenVChild rdf:type dbo:Monarch .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
756,59,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the successor season of 2006–07 VfL Bochum
  ?successorSeason a dbo:SoccerLeagueSeason ;
                   dbo:succeeds dbr:2006%E2%80%9307_VfL_Bochum_season .

  # Get the team associated with this season
  ?team dbo:season ?successorSeason .

  # Find the manager of this team
  ?manager dbo:managedTeam ?team .

  # Ensure the manager is a person (sports club, organisation, soccer club)
  ?manager a dbo:SoccerClub ;
           a dbo:Organisation ;
           a dbo:SportsClub .

  # Get the leader of West Germany and their nationality
  dbr:Konrad_Adenauer dbo:nationality ?country .
  
  # Ensure the manager is native to this country
  ?manager dbo:nativePlace ?country .
}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
288,6,train,Give me the theme of the show with Anumta Qureshi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?theme WHERE {
  ?person dbo:birthName ""Anumta Qureshi""@en .
  ?person dbo:profession dbr:Actress .
  ?appearance dbo:actor ?person ;
              dbo:workProduct ?show .
  OPTIONAL { ?show dbo:genre ?theme }
}
```

This query does the following:
- Identifies a person with the birth name ""Anumta Qureshi"" who is an actress.
- Finds appearances of this person in works (shows).
- Retrieves the theme or genre of these shows if available.",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
557,24,train,"Give me the producer of A Star Is Born (1937 film) and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producerAStarIsBorn ?fameWorkCoraSueCollins
WHERE {
  # Find the producer of ""A Star Is Born"" (1937 film)
  dbr:A_Star_Is_Born_(1937_film) dbo:producer ?producerAStarIsBorn .

  # Find a notable work associated with Cora Sue Collins
  OPTIONAL { 
    dbr:Cora_Sue_Collins dbo:notableWork ?fameWorkCoraSueCollins .
  }
}
```

This query uses the `dbo:producer` property to find the producer of ""A Star Is Born"" and the `dbo:notableWork` property to find a notable work associated with Cora Sue Collins. The use of `OPTIONAL` ensures that if there is no notable work found, the query will still return results for the film's producer.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
513,17,train,"Give me the entity in United Kingdom and residence of the leader of the party, that is an organisation and a political party, of George Savage (politician).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/George_Savage_(politician)> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?party WHERE {
  # Find George Savage's political affiliation
  ?savage a dbo:Politician ;
          foaf:name ""George Savage"" ;
          dbp:affiliation ?party .
  
  # Ensure the party is an organization and a political party in the UK
  ?party a dbo:Organization, dbo:PoliticalParty ;
         dbo:country dbr:United_Kingdom .

}
```

This query does the following:
- It identifies George Savage as a politician.
- Retrieves his political affiliation (`?party`).
- Ensures that this `?party` is both an organization and a political party located in the United Kingdom.",4,6,5,3,2,3,2,20,0,0,2,0,0.0,0
39,4,train,Give me the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q1234568 dbo:occupation ?profession .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Sam Concepcion. You can find this by searching for his DBpedia page or using a SPARQL query to identify him based on other known properties.",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
585,8,train,Give me the child of the professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actress""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childClass WHERE {
  ?childClass rdfs:subClassOf* dbo:Actress .
  FILTER(?childClass != dbo:Actress)
}
```",2,2,3,2,1,3,2,20,0,0,935,0,0.0,0
80,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:location dbr:CityName .
  ?professional rdf:type dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
905,40,train,"Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Stephen V of Hungary's child who is a parent of Charles Martel of Anjou
  ?child dbo:parent dbr:Charles_Martel_of_Anjou ;
         dbo:parent dbr:Stephen_V_of_Hungary .
  
  # Spouse of Stephen V (father of the parent)
  dbr:Stephen_V_of_Hungary dbo:spouse ?spouse .

  # Ensure the person is royalty and related to Philip, Despot of Romania
  ?spouse a dbo:Monarch ;
          dbo:child ?person .
  
  OPTIONAL {
    ?person dbo:parent ?philipParent .
    ?philipParent dbo:child dbr:Philip_Despot_of_Romania .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
492,17,train,Give me the death place of Sal Mineo and death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?salMineoDeathPlace ?actorOfColorMeDeadDeathPlace WHERE {
  # Sal Mineo's death place
  OPTIONAL {
    dbr:Sal_Mineo dbo:deathPlace ?salMineoDeathPlace .
  }

  # Actor of ""Color Me Dead""
  OPTIONAL {
    dbr:Color_Me_Dead dbo:actor ?colorMeDeadActor .
    ?colorMeDeadActor dbo:deathPlace ?actorOfColorMeDeadDeathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
89,49,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu's spouse
  ?spouse a dbo:Person ;
          dbo:spouse ?sawMinPhyu .

  # Step 2: Find the child of this spouse who is royalty
  ?royaltyChild dbo:childOf ?spouse ;
                a dbo:RoyalFamilyMember .

  # Step 3: Determine the predecessor of this royal child
  ?predecessor dbo:predecessorOf ?royaltyChild .

  # Step 4: Identify Min Hla Htut's parent
  ?minHlaHtutParent dbo:parentOf ?minHlaHtut .

  # Step 5: Find the child of this parent
  ?childOfMinHlaHtutsParent dbo:childOf ?minHlaHtutParent .
  
  # Ensure the predecessor is related to the child of Min Hla Htut's parent
  FILTER(?predecessor = ?childOfMinHlaHtutsParent)
}
```

This query assumes that the relationships and properties are correctly modeled in DBpedia. Adjustments may be necessary based on actual data availability and structure.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
89,31,train,Give me the spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    # Step 1: Find Minye Kyawswa's child
    ?child dbo:parent dbr:Minye_Kyawswa .
    
    # Step 2: Find the parent of that child (grandchild of Minye Kyawswa)
    ?grandchild dbo:parent ?child .

    # Step 3: Identify Saw Shwe Khet's spouse
    ?spouse dbo:spouse dbr:Saw_Shwe_Khet .
    
    # Ensure the grandchild is the same as Saw Shwe Khet's spouse
    FILTER (?grandchild = ?spouse)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,3,train,"Give me the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:child dbr:Philip_Despot_of_Romania .
  ?person a dbo:Person .
  ?parent dbo:parent ?person .
  ?parent a dbo:Monarch ; # or another relevant royalty class
         dbp:title ?title .
}
```

This query does the following:
- It identifies `?person` as ""Philip, Despot of Romania"" using DBpedia's resource identifier.
- It checks if this person has a parent (`dbo:parent`) who is also classified under a royalty-related category (e.g., `dbo:Monarch`).
- The result will include the parent entity and optionally their title.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
198,11,train,Give me the war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warName WHERE {
  ?recipient a dbo:MedalOfHonorRecipient .
  ?recipient dbo:conflict ?war .
  ?war rdfs:label ?warName .
  FILTER (lang(?warName) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,611,0,0.0,0
225,4,train,"Give me the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?award dbo:awardedBy dbr:Anita_Borg_Institute.
  ?award dbo:reference ?show .
  FILTER (strstarts(str(?show), ""Television show""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
80,24,train,Give me the actor of the album of What You Know (T.I. song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist ?profession WHERE {
  # Find the album related to ""What You Know"" by T.I.
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .
  
  # Get artists involved in that album
  ?album dbo:artist ?artist .

  OPTIONAL {
    # Retrieve professional information about the artist
    ?artist dbo:profession ?profession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
103,28,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies or TV shows featuring Richard E. Grant
  ?show a dbo:Film ; 
        dbo:starring dbr:Richard_E._Grant ;
        (dbo:genre/dbo:subClassOf* dbo:Movie | dbo:genre/dbo:subClassOf* dbo:TelevisionShow) .

  # Find other actors in these movies/shows
  ?show dbo:starring ?actor .
  
  FILTER(?actor != dbr:Richard_E._Grant)
}
```

This query does the following:
- It selects distinct actors (`?actor`) from shows (`?show`).
- The show must be a film or television show and feature Richard E. Grant.
- It ensures that the actor is not Richard E. Grant himself.",4,5,5,2,3,3,3,71,0,0,9,0,0.0,0
905,61,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChildRoyalty WHERE {
  # Step 1: Find predecessor of Stephen V of Hungary
  ?stephenV dbo:predecessor ?predecessor .
  VALUES ?stephenV { <http://dbpedia.org/resource/Stephen_V_of_Hungary> }

  # Step 2: Find spouse of Maria of Bytom
  ?maria dbp:spouse ?spouse .

  # Step 3: Identify father of the spouse who is a royalty
  ?spouse dbo:father ?royalFather .
  ?royalFather rdf:type dbo:Monarch .

  # Step 4: Determine parent of this royal father
  ?royalFather dbo:parent ?parentOfRoyalFather .

  # Step 5: Find child of the identified parent
  ?parentOfRoyalFather dbo:child ?child .

  # Step 6: Find child of that child who is a royalty
  ?child dbo:child ?childOfChild .
  ?childOfChild rdf:type dbo:Monarch .

  BIND(?childOfChild AS ?childOfChildRoyalty)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
668,57,train,"Give me the person born as the birth name of Joey B and associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Joey B's birth name
  ?joeyB dbr:Joey_B .
  ?joeyB dbo:birthName ?birthName .

  # Find the writer of ""The Live Anthology"" who is a musical artist
  ?writer dbr:The_Live_Anthology dbo:author ?person ;
          a dbo:MusicArtist .

  # Find $pacely's associated musical artist
  ?pacely dbr:$pacely .
  ?pacely dbo:associatedMusicalArtist ?person .

  FILTER (?birthName = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
119,57,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v0 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v3 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?administration WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Alberto Núñez Feijóo""@en .
  
  OPTIONAL { ?person dbo:positionHeld ?office . }
  OPTIONAL { ?office dbo:partOf ?administration . }

  FILTER EXISTS { 
    ?administration dbo:country dbr:Spain .
  }

  FILTER NOT EXISTS {
    ?party a dbo:PoliticalParty ;
           foaf:name ""Spanish Socialist Workers' Party""@en ;
           dbo:member ?person .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,31,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentRodneyLees ?parentEdwardStanley
WHERE {
  # Find awards associated with Rodney Lees
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Find awardees of those awards
  ?award dbo:recipient ?awardeeRodneyLees .

  # Get parents of the awardees
  ?awardeeRodneyLees dbo:parent ?parentRodneyLees .

  # Find awards associated with Edward Stanley, 17th Earl of Derby
  ?award2 dbo:recipient dbr:Edward_Stanley,_17th_Earl_of_Derby .
  
  # Find awardees of those awards
  ?award2 dbo:recipient ?awardeeEdwardStanley .

  # Get parents of the awardees
  ?parentEdwardStanley dbo:parent ?parentEdwardStanley .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
769,15,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings and player in Lai Sun Cheung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tony Hollings' birthday
  dbr:Tony_Hollings dbo:birthday ?birthday .

  # Find people born on the same date as Tony Hollings
  ?person dbo:birthday ?sameBirthday .
  FILTER (YEAR(?sameBirthday) = YEAR(?birthday) && MONTH(?sameBirthday) = MONTH(?birthday) && DAY(?sameBirthday) = DAY(?birthday))

  # Check if the person is an athlete, soccer player, sports manager, and soccer manager
  ?person dbo:occupation dbr:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:occupation dbr:Sports_Manager .
  ?person dbo:occupation dbr:Soccer_Manager .

  # Check if the person is a player in Lai Sun Cheung
  ?person dbp:team dbr:Lai_Sun_Cheung .
}
```",4,8,5,3,2,3,2,20,0,0,2,0,0.0,0
412,21,train,Give me the war of Napoleon Zervas and war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfNapoleonZervas ?warOfAwardee30 ?entityInAthens WHERE {
  # War of Napoleon Zervas (Greek Resistance)
  ?warOfNapoleonZervas dbo:wikiPageRedirects dbr:Greek_Resistance_in_World_War_II .
  
  # War involving Winston Churchill (Order of the Golden Fleece, number 30)
  ?awardee30 dbo:recipient dbr:Winston_Churchill ;
             dbo:order dbr:Order_of_the_Golden_Fleece_(Greece) .
  ?warOfAwardee30 dbo:wikiPageRedirects dbr:World_War_II .

  # Entity in Athens
  ?entityInAthens dbo:location dbr:Athens ;
                  a dbo:Place .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,17,train,Give me the war of Hashiba Hidekatsu and war of the person born as Koichirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war
WHERE {
  VALUES ?hashiba { dbr:Toyotomi_Hidetsugu }
  VALUES ?koichiro { dbr:Tokugawa_Ieyasu } # Assuming Koichirō refers to Tokugawa Ieyasu

  OPTIONAL {
    ?hashiba dbo:participatedIn ?war .
  }

  OPTIONAL {
    ?koichiro dbo:participatedIn ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
905,21,train,"Give me the spouse of the father of Philip I, Prince of Taranto and child of Stephen V of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip I, Prince of Taranto
  ?philip a dbo:Person ;
          foaf:name ""Philip I, Prince of Taranto""@en .
  
  # Step 2: Find his father
  ?father dbo:child ?philip .

  # Step 3: Ensure this father is a child of Stephen V of Hungary
  ?stephenV a dbo:Person ;
            foaf:name ""Stephen V of Hungary""@en .
  ?father dbo:child ?stephenV .

  # Step 4: Retrieve the spouse of this father
  ?father dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
263,15,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?regionCountry
WHERE {
  # Find Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne dbo:child ?person .
  
  # Find the parent of Patrick Bowes-Lyon
  ?person dbo:parent ?parent .

  # Find William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Region .
  ?birthPlace rdf:type dbo:Country .

  # Bind the birthplace to a variable for output
  BIND(?birthPlace AS ?regionCountry)
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
203,20,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the military conflict/event
  VALUES ?event { 
    dbr:French_Egyptian_Campaign_in_Syria_and_Palestine 
  }
  
  # Find the commander of this event
  ?event dbo:commander ?commander .
  
  # Ensure the commander is a person (not an organization or other entity)
  ?commander rdf:type dbo:Person .

  # Get the military force associated with the commander
  OPTIONAL {
    ?commander dbo:militaryService ?militaryForce .
  }
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
782,29,train,Give me the reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton and associated musical artist of Nick Curran.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fabulousThunderbirds ?ericClaptonsBand ?nickCurransArtist
WHERE {
  # The Fabulous Thunderbirds reference
  dbr:The_Fabulous_Thunderbirds a dbo:MusicalGroup ;
                               rdfs:label ?fabulousThunderbirds .

  # Eric Clapton's band
  OPTIONAL {
    ?claptonBand a dbo:MusicalGroup ;
                 dbo:bandMember dbr:Eric_Clapton .
    ?claptonBand rdfs:label ?ericClaptonsBand .
  }

  # Nick Curran's associated musical artist
  OPTIONAL {
    ?curranArtist a dbo:MusicalArtist ;
                  dbo:associatedMusicalArtist dbr:Nick_Curran .
    ?curranArtist rdfs:label ?nickCurransArtist .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
225,10,train,"Give me the awardee, that is Japanese, of the reference, that is a television show, to Anita Borg Institute Women of Vision Awards.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Anita Borg Institute Women of Vision Awards""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:category dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  ?award dbo:recipient ?awardee .
  ?awardee dbo:nationality dbr:Japan .
  ?award dbo:subject dbr:Television_show .
}
```

This query does the following:
- Filters awards that are part of the Anita Borg Institute Women of Vision Awards.
- Selects recipients (`?awardee`) of these awards.
- Ensures the recipient is Japanese by checking their nationality.
- Checks if the award is related to a television show.",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
78,22,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 WHERE {
  # Part 1: Find the associated musical artist of the writer for ""Wizards of Waverly Place (soundtrack)""
  ?soundtrack dbo:composer ?writer .
  FILTER(STRSTARTS(STR(?soundtrack), ""http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)""))
  
  ?writer a dbo:MusicalArtist ;
          a dbo:Artist .

  ?soundtrack dbo:musicalArtist ?artist1 .

  # Part 2: Find the associated musical artist of Stuart Mcbeath Tosh
  ?person dbr:Stuart_Mcbeath_Tosh .
  ?person a dbo:MusicalArtist .

  ?person dbo:musicalArtist ?artist2 .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
293,61,train,"Give me the person born as the birth name of the parent of Tisha Sterling and spouse of the actor of the product, that is a film, of Nat Levine.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Step 1: Find Tisha Sterling's parent
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling""@en .
  
  ?parent dbo:child ?tishaSterling .

  # Step 2: Get the birth name of Tisha Sterling's parent
  ?parent foaf:name ?birthName .

  # Step 3: Find Nat Levine's film product and actor in that film
  ?natLevine a dbo:Person ;
             foaf:name ""Nat Levine""@en .
  
  ?film dbo:producer ?natLevine ;
        dbo:actor ?actor .

  # Step 4: Get the spouse of the actor
  ?actor foaf:name ?actorName .
  ?spouse dbo:spouse ?actor ;
          foaf:name ?birthName .
  
  # Ensure the birth name matches
  FILTER(?birthName = ?birthName)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
492,0,train,Give me the death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q123456 dbp:deathPlace ?deathPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Reed Howes. You can find this by searching for ""Reed Howes"" on DBpedia or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
871,9,train,"Give me the parent of Victor Stanley (Royal Navy officer) and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?parentName WHERE {
  # Victor Stanley (Royal Navy officer)
  VALUES ?victorStanley { 
    dbc:Victor_Stanley_(Royal_Navy_officer) 
  }
  
  ?victorPerson dbo:wikiPageID ?victorStanley .
  ?victorPerson dbo:parent ?victorParent .
  ?victorParent rdfs:label ?parentName .

  # Edward Stanley, 17th Earl of Derby
  VALUES ?edwardStanley { 
    dbc:Edward_Stanley,_17th_Earl_of_Derby 
  }
  
  ?edwardPerson dbo:wikiPageID ?edwardStanley .
  ?edwardPerson dbo:parent ?edwardParent .
  ?edwardParent rdfs:label ?parentName .

}
ORDER BY ?person
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
375,16,train,Give me the war of the child of Toyotomi Hideyoshi and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?child dbo:parent dbr:Toyotomi_Hideyoshi .
  ?child rdfs:label ""Hideyori""@en .
  
  ?war dbo:participant ?child ;
       dbo:location dbr:Japan .
}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
87,16,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn and actor of Paradise (2013 film).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonActor WHERE {
  # Find movies with Audrey Hepburn
  ?movieAudrey a dbo:Film ;
               dbo:starring dbr:Audrey_Hepburn .

  # Find actors in the movie ""Paradise"" (2013)
  ?movieParadise a dbo:Film ;
                 rdfs:label ""Paradise""@en ;
                 dbo:productionYear ?year .
  FILTER(?year = 2013)

  ?movieParadise dbo:starring ?actorParadise .

  # Find common actor
  ?commonActor dbo:starring ?movieAudrey, ?movieParadise .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
159,49,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?commander
WHERE {
  # Russo-Polish War (1654–1667) commander successor
  ?war dbr:Russo-Polish_War_(1654%E2%80%931667) dbo:commander ?originalCommander .
  ?originalCommander dbo:succeededBy ?successor .
  FILTER EXISTS { ?successor a dbo:Politician . }
  FILTER EXISTS { ?successor dbo:officeHolder ?_ . }

  # Battle of Vienna commander
  ?battle dbr:Battle_of_Vienna dbo:militaryForce ?militaryForce .
  ?commander dbo:commanded ?militaryForce .
  FILTER EXISTS { ?commander a dbo:TelevisionShow . }
  FILTER EXISTS { ?commander a dbo:SocietalEvent . }

}
```

This query attempts to find:
- A successor of the commander in the Russo-Polish War who is also a politician and office holder.
- A commander involved in the Battle of Vienna, linked to both a television show and societal event.

Please note that this query assumes certain relationships and classes exist in DBpedia. Adjustments may be necessary based on actual data availability and structure.",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
203,43,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of Battle of Cape Finisterre (1805) and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceWar ?bayneMilitaryForce ?capeFinisterreForce ?egyptSyriaCommander
WHERE {
  # War as a military conflict and event
  ?war dbo:type dbr:Military_conflict ;
       dbo:event dbr:War .

  # William Bayne's military force
  ?bayne dbr:William_Bayne ;
         dbo:militaryService ?bayneMilitaryForce .
  
  # Battle of Cape Finisterre (1805) military force
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatedIn ?capeFinisterreForce .

  # French campaign in Egypt and Syria commander
  dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?egyptSyriaCommander .
  
  # Linking military forces to the war
  OPTIONAL { ?militaryForceWar dbo:participatedIn ?war }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
531,33,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfMadrid ?officeOfCommander ?militaryConflict WHERE {
  # Find Manuel Pinto da Costa
  ?manuel a dbo:Person ;
          foaf:name ""Manuel Pinto da Costa""@en .

  # Look for roles related to Madrid and commander positions
  OPTIONAL { ?manuel dbo:positionHeld ?tenantOfMadrid .
             FILTER(CONTAINS(LCASE(STR(?tenantOfMadrid)), ""madrid"")) }
  OPTIONAL { ?manuel dbo:officeHolder ?officeOfCommander .
             FILTER(CONTAINS(LCASE(STR(?officeOfCommander)), ""commander"")) }

  # Find military conflicts involving him
  OPTIONAL { ?militaryConflict dbo:participant ?manuel ;
                               a dbo:MilitaryConflict ;
                               dbo:socialEvent true }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
557,58,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer1 ?producer2 WHERE {
  # Cora Sue Collins' claim to fame and its producer
  ?collinsWork dbo:performer dbr:Cora_Sue_Collins .
  ?collinsWork dbo:productionCompany ?producer1 .

  # High Society Blues actor's other works and their producers
  ?highSocietyActor dbo:actedIn dbr:High_Society_Blues .
  ?otherWork dbo:actor ?highSocietyActor ;
             a dbo:Film .
  ?otherWork dbo:productionCompany ?producer2 .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
723,17,train,"Give me the band member of Mudvayne and band member of the associated musical artist, that is an organisation, of the associated musical artist, that is a band and an organisation, of Nate Newton (musician).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nate_Newton_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?mudvayneMember WHERE {
  # Nate Newton is a member of Slayer
  dbr:Nate_Newton dbo:musicalArtist dbr:Slayer .
  
  # Find an organization that is also a band and associated with Slayer
  ?organization a dbo:Band ;
                dbo:associatedMusicalArtist dbr:Slayer ;
                a dbo:Organization .

  # From this organization, find a member who is also in Mudvayne
  ?mudvayneMember dbo:musicalArtist dbr:Mudvayne .
  ?mudvayneMember dbo:musicalArtist ?organization .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
353,22,train,Give me the child of the child of Alfonso VI of León and Castile and child of Roger II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Alfonso VI's child
  ?alfonsoVI_child dbo:spouse ?alfonsoVI_spouse .
  ?alfonsoVI_child dbo:parent dbr:Alfonso_VI_of_León_and_Castile .

  # Find the grandchild of Alfonso VI (child of his child)
  ?grandchild dbo:parent ?alfonsoVI_child .

  # Ensure this grandchild is also a child of Roger II
  ?rogerII_child dbo:parent dbr:Roger_II_of_Sicily .
  
  # Match the grandchild with Roger II's child
  FILTER (?grandchild = ?rogerII_child)
}
```

This query does the following:
- Identifies Alfonso VI's children.
- Finds the grandchildren of Alfonso VI by checking who has one of his children as a parent.
- Checks if any of these grandchildren are also listed as children of Roger II.
- Uses a `FILTER` to ensure that the grandchild is indeed both a descendant of Alfonso VI and a child of Roger II.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
80,51,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v1 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Simon Baker as the actor in ""The Mentalist""
  ?mentalism dbr:The_Mentalist/dbo:starring ?actor .
  
  # Ensure the actor is associated with T.I.'s album
  OPTIONAL { 
    ?album dbo:artist ?actor .
    FILTER (str(?album) = ""Urban Legend"")
  }
  
  # Filter for Simon Baker
  FILTER (str(?actor) = ""Simon_Baker_(Australian_actor)"")
}
```",5,5,6,3,2,3,3,71,0,0,4,0,0.0,0
633,17,train,"Give me the spouse of Renée of Bourbon and parent of the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Francis I, Duke of Lorraine
  ?francis a dbo:Person ;
           foaf:name ""Francis I, Duke of Lorraine""@en .
  
  # Find his parent
  ?parent dbo:child ?francis .

  # Find the spouse of that parent (Renée of Bourbon)
  ?parent dbo:spouse ?spouse .
  FILTER(CONTAINS(LCASE(?spouse), ""renee of bourbon""))

  # Ensure the child is a royalty
  ?royalty dbo:child ?parent ;
           dbo:positionTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""duke"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""king""))
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
723,9,train,"Give me the producer, that is an organisation and a group, of the reference to Nothing to Gein.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nothing to Gein""@en . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  ?movie dbp:title ""Nothing to Gein""@en .
  ?movie dbo:productionCompany ?producer .

  FILTER EXISTS { ?producer a dbo:Organization . }
  FILTER EXISTS { ?producer a dbo:Band . } # Assuming 'group' is represented as 'Band'
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
816,18,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?actor dbo:spouseOrPartner ?parent1, ?parent2 .
  
  ?parent1 foaf:name ""Doon Arbus""@en .
  ?parent2 foaf:name ""Amy Arbus""@en .

  ?film dbp:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
}
```

This query does the following:
- It looks for a film with the title ""Judgment: The Trial of Julius and Ethel Rosenberg"".
- It identifies an actor who starred in this film.
- It checks if this actor is listed as a spouse or partner to both Doon Arbus and Amy Arbus.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
249,2,train,"Give me the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jamsetji Tata""@en ;
          dbo:nationality dbr:India .
  ?person dbo:works ?work .
}
```

This query does the following:
- It looks for an entity that is of type `dbo:Person` and has the name ""Jamsetji Tata.""
- It checks if this person's nationality is India (`dbr:India`).
- It retrieves works associated with this person using the property `dbo:works`.",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
816,58,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/occupation> ""Photographer""@en . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?commonParent WHERE {
  # Step 1: Find the actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?movie dbo:starring ?actor .

  # Step 2: Identify the spouse of Mariclare Costello
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 3: Determine the child of that spouse
  ?spouse dbo:child ?child .

  # Step 4: Find the parent of that child
  ?child dbo:parent ?commonParent .

  # Step 5: Identify a professional in Photography
  ?photographer a dbo:Photographer .
  
  # Step 6: Find the parent of that professional
  ?photographer dbo:parent ?commonParent .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
609,61,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/author> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/governor> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace ?authorBirthPlace WHERE {
  # Step 1: Find Paulus Powell's birthplace
  ?paulusPowell dbo:birthPlace ?region .
  
  # Ensure the region is both a region and an administrative region
  ?region rdf:type dbo:Region ;
          rdf:type dbo:AdministrativeRegion .

  # Step 2: Get the governor of that place who is a politician
  ?governor dbo:governs ?region ;
           rdf:type dbo:Politician .
  
  # Get the birthplace of the governor
  ?governor dbo:birthPlace ?governorBirthPlace .

  # Step 3: Find the author of ""El Deafo""
  ?elDeafo dbo:author ?author .
  ?author dbo:nationality dbr:United_States ;
          rdfs:label ?authorLabel FILTER (CONTAINS(LCASE(?authorLabel), ""american"")) .

  # Get the birthplace of the author
  ?author dbo:birthPlace ?authorBirthPlace .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
80,13,train,Give me the actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?album dbo:title ""Urban Legend"" ;
         dbo:artist dbr:T.I. ;
         dbo:track ?song .
  
  ?song dbo:title ""What You Know"" .

  OPTIONAL { 
    ?album dbo:contributor ?actor .
    FILTER (dbo:Actor(?actor))
  }
}
```",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
375,0,train,Give me the author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?work dcterms:title ""A Picture of Britain""@en .
  ?work dbo:author ?person .
  ?person foaf:name ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
723,16,train,"Give me the band member of the producer, that is an organisation and a group, of Nothing to Gein and band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Nothing_to_Gein> <http://dbpedia.org/ontology/producer> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Find the producer of Nothing to Gein that is an organization and a group
  ?producer a dbo:MusicalArtist ;
            dbo:genre dbr:Nothing_to_Gein ;
            rdf:type dbo:Organization, dbo:Band .

  # Find band members of this producer
  ?memberOfProducer dbo:bandMember ?bandMember .
  
  # Find the associated musical artist of Cavalera Conspiracy that is an organization
  ?cavaleraArtist a dbo:MusicalArtist ;
                 dbo:associatedActs dbr:Cavalera_Conspiracy ;
                 rdf:type dbo:Organization .

  # Find band members of this Cavalera Conspiracy artist
  ?memberOfCavaleraArtist dbo:bandMember ?bandMember .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
756,11,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find VfL Bochum
  dbr:VfL_Bochum a dbo:SoccerClub ;
                 dbo:season ?season .

  # Filter for the specific season
  FILTER(CONTAINS(LCASE(STR(?season)), ""2007–08""))

  # Get the manager of that season
  ?season dbo:manager ?manager .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
531,39,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeMaura ?officeRajoy WHERE {
  # Find Miguel Maura's party and its leader
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura"" .
  
  ?miguelMaura dbo:partyLeaderOf ?partyMaura .
  ?partyMaura a dbo:PoliticalParty .

  # Find the office of Miguel Maura's party leader
  ?leaderMaura dbo:officeHolder ?officeMaura ;
               dbo:partyLeaderOf ?partyMaura .

  # Find Mariano Rajoy's party and its leader
  ?marianoRajoy a dbo:Person ;
                foaf:name ""Mariano Rajoy"" .
  
  ?marianoRajoy dbo:partyLeaderOf ?partyRajoy .
  ?partyRajoy a dbo:PoliticalParty .

  # Find the office of Mariano Rajoy's party leader
  ?leaderRajoy dbo:officeHolder ?officeRajoy ;
               dbo:partyLeaderOf ?partyRajoy .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
609,3,train,Give me the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  wd:Q1234568 dbo:award ?award .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia identifier for Vince Gilligan. You can find this by searching for Vince Gilligan on DBpedia or using a SPARQL endpoint to retrieve his QID.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
119,22,train,"Give me the office of Alberto Núñez Feijóo and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?administration
WHERE {
  # Find Alberto Núñez Feijóo's resource
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .
  
  # Ensure the office is related to a Spanish administration
  ?office dbo:partOf ?administration .
  ?administration dbp:country ""Spain""@en .

  # Filter administrations associated with PSOE
  OPTIONAL {
    ?administration dbo:member dbr:Spanish_Socialist_Workers'_Party .
  }
  
  FILTER EXISTS { ?administration dbo:member dbr:Spanish_Socialist_Workers'_Party }
}
ORDER BY ?office",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
472,1,train,Give me the administration of Christian IX of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?administration WHERE {
  wd:Q1116 wdt:P35 ?administration .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
58,12,train,Give me the spouse of Linda Bruckheimer and producer of the movie with .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v0 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/starring> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?movie WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
  }
  
  OPTIONAL {
    ?film dbo:producer ?person ;
          dbo:title ?movie .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
585,7,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?nativeOf WHERE {
  # Find awards related to Coro de la Pontificia Universidad Católica de Puerto Rico
  ?coro dbo:associatedAward ?award .
  
  # Filter the award by native country (United States) and type (settlement)
  ?award dbo:nativeCountry dbr:United_States ;
         a dbo:Settlement .

  # Get the native of the award
  ?award dbo:nativeOf ?nativeOf .
}
```

This query assumes that there is a direct association between Coro de la Pontificia Universidad Católica de Puerto Rico and an award, which might not be directly available in DBpedia. You may need to adjust the associations based on actual data availability.",2,4,3,2,1,3,2,20,0,0,8569,0,0.0,0
263,9,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?parentName WHERE {
  VALUES (?person ?label) {
    (dbr:Mary_Elphinstone_Lady_Elphinstone ""Mary Elphinstone, Lady Elphinstone"")
    (dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne ""Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne"")
  }
  
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER (LANG(?parentName) = 'en')
}
ORDER BY ?person
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
782,13,train,Give me the band of the band member of Eric Clapton.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?member foaf:name ""Eric Clapton"" .
  ?member dbo:memberOf ?band .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
258,10,train,"Who is the person born, that is a politician, as the birth name of Eleonora Menicucci?",SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?person WHERE {
  ?person dbo:birthName ""Eleonora Menicucci""@en .
  ?person rdf:type dbo:Politician .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,7,train,Give me the birthday of Marcelo Sarmiento.,SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthday WHERE {
  wd:Q1234568 dbo:birthday ?birthday .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Marcelo Sarmiento. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for entities matching his name.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
816,2,train,Give me the parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Doon Arbus""@en .
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
159,52,train,"Give me the commander in Great Turkish War and reference to the writer of Always the Love Songs and successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v5 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?writer ?successor ?event WHERE {
  # Michał Kazimierz Pac as a commander in the Great Turkish War
  dbr:Mikołaj_Kazimierz_Pac dbo:role ""Commander""@en .
  
  # Writer of ""Always the Love Songs""
  ?writer dbo:title ""Always the Love Songs""@en ;
          dbo:wikiPageRedirects ?redirect .

  # Successor who is a politician and office holder
  ?successor dbo:officeHolderOf ?office ;
             dbo:role ""Politician""@en .
  
  # Event or military conflict involving the successor
  ?event dbo:participatedIn ?successor ;
         rdf:type dbo:MilitaryConflict .

  # Linking the commander to the event
  ?commanderEvent dbo:participatedIn dbr:Mikołaj_Kazimierz_Pac ;
                  rdf:type dbo:MilitaryConflict .
  
  # Ensuring the successor is linked to the same or related event
  ?successorEvent dbo:participatedIn ?successor ;
                  rdf:type dbo:MilitaryConflict .

  FILTER(?commanderEvent = ?event || ?commanderEvent = ?successorEvent)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
225,11,train,Give me the birthplace of Chieko Asakawa and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?entityInJSTRegion
WHERE {
  # Find Chieko Asakawa's birthplace
  dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .

  # Find entities in the region of Japan Standard Time
  ?region rdfs:label ""Japan Standard Time""@en .
  ?entityInJSTRegion dbo:location ?region .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
871,19,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfAwardee ?parentOfEdwardStanley
WHERE {
  # Find an individual who is a recipient of the ""Commander of the Royal Victorian Order""
  ?awardee dbo:award <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  
  # Get the parent of this awardee
  ?awardee dbo:parent ?parentOfAwardee .

  # Find Edward Stanley, 17th Earl of Derby
  ?edwardStanley dbr:Edward_Stanley,_17th_Earl_of_Derby ;
                 dbo:parent ?parentOfEdwardStanley .
}
```

This query does the following:
- It looks for individuals who have been awarded the ""Commander of the Royal Victorian Order.""
- For each awardee, it retrieves their parent.
- It also finds Edward Stanley, 17th Earl of Derby, and retrieves his parent.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
905,44,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples.",SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Béla IV of Hungary and his children
  ?belaviv a dbo:Monarch ;
           dbp:spouse ?spouseBelaviv ;
           dbp:child ?childBelaviv .

  # Child of Béla IV who is royalty
  ?childBelaviv a dbo:Monarch ;
                dbp:child ?grandchild .

  # Grandchild of Béla IV who is royalty and parent of the father of Charles I
  ?grandchild a dbo:Monarch ;
              dbp:parent ?fatherCharlesI .
  
  # Father of Charles I of Hungary
  ?fatherCharlesI a dbo:Monarch ;
                  dbp:child ?charlesI .

  # Charles II of Naples and his spouse
  ?charlesII dbp:spouse ?grandchild .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
557,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  wd:Q1234568 wdt:P1700 ?alterEgo .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"". You can find this by searching DBpedia or using a SPARQL endpoint to look up the correct QID.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
103,35,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?show dbo:starring dbr:Richard_E._Grant .
  ?show a dbo:TelevisionSeries .
  
  OPTIONAL { 
    ?character dbo:portrayedBy ?actor .
    ?character dbo:name ""The Shadow""@en .
  }
}
```

This query does the following:
- Searches for television series (`dbo:TelevisionSeries`) that star Richard E. Grant.
- Optionally looks for a character named ""The Shadow"" and finds who portrays this character.",4,5,5,2,2,3,3,71,0,0,13,0,0.0,0
609,49,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . }","```sparql
# Query to get the birth place of Cece Bell
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Cece Bell""@en;
          dbo:nationality dbr:United_States.
  ?person dbo:authorOf dbr:El_Deafo.
  ?person dbo:birthPlace ?birthPlace.
}

UNION

# Query to get the birth place of Vince Gilligan
SELECT ?birthPlace WHERE {
  ?person rdfs:label ""Vince Gilligan""@en;
          a dbo:Writer.
  ?person dbo:birthPlace ?birthPlace.
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,13,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?child ?father WHERE {
  wd:Q1247 dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
  ?child dbo:parent ?father .
}
```

This query does the following:
- `wd:Q1247` is the DBpedia identifier for Ferdinand III, Holy Roman Emperor.
- It finds his spouse and their children (`?child`).
- Then it identifies the parent of each child (`?father`), which should return Ferdinand III himself.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
80,31,train,Give me the actor of the movie with the author of Smartbomb (book) and actor of ATL (film).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find movies related to Cory Doctorow
  ?movie dbo:author dbr:Cory_Doctorow .
  
  # Find actors in those movies
  ?movie dbo:starring ?actor .

  UNION

  # Find movies T.I. acted in
  ?movieTILogo dbo:starring dbr:T._I. .

  # Find common actors between these sets of movies
  ?commonMovie dbo:starring ?actor .
  FILTER(?movie = ?commonMovie || ?movieTILogo = ?commonMovie)
}
```",4,4,5,3,2,3,3,71,0,0,10,0,0.0,0
39,20,train,Give me the professional in the alter ego of The Shadow and professional in Singer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
# Query for The Shadow's alter ego and profession
SELECT ?alterEgo ?profession WHERE {
  ?shadow dbo:wikiPageRedirects db:Q123456 . # Replace Q123456 with the actual DBpedia ID for ""The Shadow""
  ?shadow foaf:name ""Lamont Cranston""@en .
  ?shadow dbo:occupation ?profession .
  FILTER (lang(?alterEgo) = 'en')
}
```

```sparql
# Query for a generic singer's profession
SELECT DISTINCT ?singer ?profession WHERE {
  ?singer rdf:type dbo:Singer .
  ?singer dbo:occupation ?profession .
  FILTER (lang(?singer) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,5422,0,0.0,0
293,45,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of Republican Party (United States) and spouse of Roger Pryor (actor).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Tisha Sterling's parent
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling"" .
  
  ?parent dbo:child ?tishaSterling ;
          foaf:name ?parentName .

  # Get the birth name of the parent
  OPTIONAL { ?parent foaf:nick ?birthName . }

  # Check if the person is a member of the Republican Party (United States)
  ?person dbo:memberOf dbr:Republican_Party_(United_States) ;
          foaf:name ?personName .

  # Ensure this person is married to Roger Pryor
  ?person dbo:spouse dbr:Roger_Pryor_(actor) .

  # Match the parent with the person found above
  FILTER(?parent = ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,3,train,Give me the time zone of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
SELECT ?timeZone WHERE {
  wd:Q36 wdt:P421 ?timeZone .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
871,58,train,"Give me the father of the child, that is a politician, of the alumnus of Eton College and parent of the child of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  ?child dbo:parent ?alumnus ;
         a dbo:Politician .

  ?politician dbo:parent ?child .

  ?politician dbp:father ?father .
}
```

This query assumes:
- `dbo:almaMater` is used to find the alumnus of Eton College.
- `dbo:parent` and `a dbo:Politician` are used to identify the child who is a politician.
- `dbp:father` is used to find the father of this politician.

Please note that the exact properties might vary depending on the data available in DBpedia, so adjustments may be necessary based on actual ontology details.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
68,8,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:parent ?parent .

  # Parent's father (Dorothea's grandfather)
  ?parent dbo:father ?grandfather .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
756,21,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vitesseManager ?bochumManager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  OPTIONAL {
    ?vitesseTeam a dbo:SoccerClub ;
                dbo:manager ?vitesseManager .
    FILTER(CONTAINS(LCASE(STR(?vitesseTeam)), ""sbv vitesse""))
    FILTER(EXISTS { ?vitesseTeam dbo:sportSeason ?season . 
                   ?season dbo:startDate ?start ; 
                          dbo:endDate ?end .
                   FILTER(YEAR(?start) = 2020 && YEAR(?end) = 2021)
                 })
  }

  # Manager of VfL Bochum for the 2007–08 season
  OPTIONAL {
    ?bochumTeam a dbo:SoccerClub ;
                dbo:manager ?bochumManager .
    FILTER(CONTAINS(LCASE(STR(?bochumTeam)), ""vfl bochum""))
    FILTER(EXISTS { ?bochumTeam dbo:sportSeason ?season . 
                   ?season dbo:startDate ?start ; 
                          dbo:endDate ?end .
                   FILTER(YEAR(?start) = 2007 && YEAR(?end) = 2008)
                 })
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
472,2,train,Give me the administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
SELECT ?administration WHERE {
  wd:Q12345 wdt:P69 ?administration .
}
```

Note: In this query, `wd:Q12345` should be replaced with the actual DBpedia identifier for Olaf I of Denmark. You can find this identifier by searching for Olaf I in DBpedia or using a SPARQL endpoint to retrieve it.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
628,26,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Florida .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""music"") || CONTAINS(LCASE(?occupation), ""singer"") || CONTAINS(LCASE(?occupation), ""songwriter"") || CONTAINS(LCASE(?occupation), ""composer"") || CONTAINS(LCASE(?occupation), ""musician""))
  OPTIONAL { ?person dbp:birthName ?birthName }
}
ORDER BY ?birthName
LIMIT 10",3,4,4,3,1,3,3,71,0,0,59,0,0.0,0
213,10,train,"Give me the work of the spouse, that is a writer, of Hu Jieqing.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/property/author> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Hu_Jieqing> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Find Hu Jieqing
  ?huJieqing a dbo:Person ;
             foaf:name ""Hu Jieqing""@en .
  
  # Find the spouse of Hu Jieqing
  ?huJieqing dbo:spouse ?spouse .

  # Check if the spouse is a writer
  ?spouse a dbo:Writer ;
          dbo:works ?work .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
871,60,train,"Give me the parent of the awardee of the award of Rodney Lees and father of the child, that is a politician, of the alumnus of Eton College.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Find the award Rodney Lees received
  ?award dbo:recipient dbr:Rodney_Lees .
  
  # Step 2: Find the parent of the awardee
  ?awardee dbo:recipient ?award ;
          dbo:parent ?parent .

  # Step 3: Identify an alumnus of Eton College
  ?alumnus dbo:almaMater dbr:Eton_College .
  
  # Step 4: Find the child of the alumnus who is a politician
  ?child dbo:parent ?alumnus ;
         rdf:type dbo:Politician .

  # Step 5: Ensure the parent from step 2 matches the parent from step 4
  FILTER(?parent = ?awardee)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,51,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of the child of Duke Philipp of Württemberg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChildRoyalty WHERE {
  # Find Archduchess Margarete Sophie of Austria's parent
  ?margareteSophie a dbo:Person ;
                  foaf:name ""Margarete Sophie, Archduchess of Austria""@en .
  ?parent dbo:spouse|dbo:child ?margareteSophie .

  # Find Duke Philipp of Württemberg's grandchild
  ?philipp a dbo:Person ;
           foaf:name ""Philipp, Duke of Württemberg""@en .
  ?childOfPhilipp dbo:child ?philipp .
  ?grandChildOfPhilipp dbo:child ?childOfPhilipp .

  # Find the child of the parent of Archduchess Margarete Sophie
  ?parentChild a dbo:Person ;
               dbo:child ?parent .

  # Find the grandchild of Duke Philipp who is also royalty
  ?grandChildOfPhilippRoyalty a dbo:Person, dbo:Monarch ;
                              foaf:name ?name .
  
  # Match the child of the parent with the grandchild of Duke Philipp
  ?parentChild = ?grandChildOfPhilippRoyalty .

}
```

This query does the following:
- Identifies the parent of Archduchess Margarete Sophie.
- Finds the grandchildren of Duke Philipp of Württemberg.
- Matches a child of the identified parent with one of these grandchildren who is also royalty.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
353,19,train,"Give me the child of the parent of Roger III, Duke of Apulia and father of William II of Sicily.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Roger III, Duke of Apulia
  ?rogerIII a dbo:Person ;
            foaf:name ""Roger III"" ;
            dbo:title dbr:Duke_of_Apulia .

  # Find his parent (father)
  ?parent dbo:spouse ?rogerIII ;
          dbo:child ?rogerIII .

  # Find the children of this parent
  ?parent dbo:child ?child .

  # Ensure the child is not William II of Sicily
  FILTER (?child != dbr:William_II_of_Sicily)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,4,train,"Give me the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""30th (Cambridgeshire) Regiment of Foot""@en .
  
  ?conflict a dbo:MilitaryConflict ;
            dbo:participatingMilitaryUnit ?regiment .

  FILTER(CONTAINS(LCASE(?conflict), ""war""))
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
103,20,train,Give me the actor of Dispatches from Elsewhere and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession
WHERE {
  # Find the actor from ""Dispatches from Elsewhere""
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .

  # Find a professional associated with Shatrughan Sinha
  dbr:Shatrughan_Sinha dbo:profession ?profession .
}
```

This query does the following:

- It uses the `dbo:title` property to find the TV series ""Dispatches from Elsewhere"" and retrieves its starring actors.
- It also finds the profession associated with Shatrughan Sinha using the `dbo:profession` property.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
492,16,train,Give me the death place of Reed Howes and death place of the actor of Aladdin (1958 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v2 . <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceReedHowes ?deathPlaceAladdinActor
WHERE {
  # Find Reed Howes and his death place
  OPTIONAL {
    dbr:Reed_Howes dbo:deathPlace ?deathPlaceReedHowes .
  }

  # Find the actor from the 1958 film ""Aladdin"" and their death place
  OPTIONAL {
    ?aladdinFilm dbo:title ""Aladdin (1958 film)""@en ;
                dbo:starring ?actor .
    ?actor dbo:birthName ?actorName .
    
    FILTER(CONTAINS(LCASE(?actorName), ""donald o'connor"")) # Assuming Donald O'Connor is the actor
    OPTIONAL {
      ?actor dbo:deathPlace ?deathPlaceAladdinActor .
    }
  }
}
```",3,3,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
905,7,train,Give me the predecessor of Stephen V of Hungary.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?king a dbo:Monarch ;
        dbo:succession dbr:Stephen_V_of_Hungary .
  OPTIONAL { ?king dbo:predecessor ?predecessor . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
80,10,train,Give me the professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession WHERE {
  ?person a dbo:Actor .
  ?person dbo:film dbr:Shelby_Oaks .
  OPTIONAL { ?person dbo:profession ?profession . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
782,42,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds and band of Kim Wilson.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Kim Wilson by his real name and stage name
  ?person a dbo:MusicalArtist ;
          foaf:name ""Kim Wilson""@en ;
          dbo:birthName ""Nicholas Michael Curran"" .
  
  # Link to The Fabulous Thunderbirds band
  ?band a dbo:Band ;
        dbo:member ?person ;
        foaf:name ""The Fabulous Thunderbirds""@en .

  # Retrieve the associated musical artist
  ?artist a dbo:MusicalArtist ;
          dbo:associatedBand ?band .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
905,14,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Béla IV of Hungary
  dbr:Béla_IV_of_Hungary dbo:spouse ?parent1 .
  OPTIONAL { dbr:Béla_IV_of_Hungary dbo:spouse ?parent2 . }
  
  # Children of Béla IV
  ?child dbo:parent ?parent1 ;
         a dbo:Person .

  OPTIONAL {
    ?child dbo:parent ?parent2 ;
           a dbo:Person .
  }

  # Grandchildren of Béla IV
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Filter for royalty among grandchildren
  ?grandchild dbo:occupation dbr:Monarch ;
              a dbo:Person .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
119,15,train,"Who is the leader of the administration, that is an event, of Anxo Quintana?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?leader WHERE {
  ?event dbo:agent dbr:Anxo_Quintana .
  ?event dbo:leader ?leader .
}
```",2,3,3,2,1,3,3,71,0,0,9,0,0.0,0
816,33,train,Give me the parent of the professional in the profession of Eugène Cattin and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentClass
WHERE {
  ?eugeneCattin a dbo:Person ;
                foaf:name ""Eugène Cattin""@en .
  
  ?eugeneCattin dbo:occupation ?actorRole .

  ?actorRole rdfs:subClassOf* ?parentClass .
}
```

This query does the following:
- It identifies Eugène Cattin as a `dbo:Person` with the name ""Eugène Cattin"".
- It retrieves his occupation, which should be related to acting.
- It finds the broader class (`?parentClass`) that this occupation belongs to using the `rdfs:subClassOf*` property path.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
119,44,train,"Give me the office of Alberto Núñez Feijóo and tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?country ?administration
WHERE {
  # Alberto Núñez Feijóo's office
  dbr:Alberto_Núñez_Feijóo dbo:positionHeld ?office .

  # Álvaro Quirós' residence country
  dbr:Álvaro_Quirós dbo:nationality dbr:Spain ;
                   dbo:residenceCountry ?country .

  # Spanish Socialist Workers' Party administration
  dbr:Spanish_Socialist_Workers'_Party dbo:member ?administration .
  FILTER (lang(?administration) = ""es"") # Ensure the administration is in Spanish

}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
871,0,train,Give me the parent of Victor Stanley (Royal Navy officer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Victor Stanley""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  OPTIONAL { ?child dbo:parent ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
347,6,train,"Give me the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""Ferdinand_III,_Holy_Roman_Emperor"")
  
  OPTIONAL { ?spouse dbo:child ?child . }
  OPTIONAL { ?person dbo:child ?child . }

  FILTER (!isBlank(?child))
}
```

This query checks for children of Ferdinand III by looking at both his spouse and himself as potential parents. It filters out blank nodes to ensure only valid individuals are returned.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
87,23,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Movies featuring Iliza Shlesinger
  ?movie1 dbo:starring dbr:Iliza_Shlesinger ;
          a dbo:Film .
  
  # Actors in those movies
  ?movie1 dbo:starring ?actor .

  # Movies featuring Audrey Hepburn
  ?movie2 dbo:starring dbr:Audrey_Hepburn ;
          a dbo:Film .

  # Same actor must be in both sets of movies
  ?movie2 dbo:starring ?actor .
}
```",4,8,5,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
769,0,train,Give me the player in Ye Jia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team a dbo:SoccerClub ;
        foaf:name ""Ye Jia""@en .
  
  ?member dbo:memberOf ?team ;
          dbo:agent ?player .

  FILTER (lang(?player->rdfs:label) = 'en')
}
```

This query assumes:
- There is an entity for the team ""Ye Jia"" classified as a `SoccerClub`.
- Players are linked to this team via the `memberOf` property.
- The player's name is available in English.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
311,15,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song) and band member of Mark Eitzel.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mark_Eitzel> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Step 1: Find the producer of Lotus (R.E.M. song)
  dbr:Lotus_(R.E.M._song) dbo:producer ?producer .

  # Step 2: Ensure the producer is an organization and a band/group
  ?producer rdf:type dbo:Organization .
  ?producer rdf:type dbo:Band .

  # Step 3: Find members of this band/group
  ?member dbo:bandMemberOf ?producer .

  # Step 4: Identify Mark Eitzel's associated musical artist
  dbr:Mark_Eitzel dbo:associatedMusicalArtist ?markEitzelArtist .

  # Step 5: Find the associated musical artist of Mark Eitzel's associated artist
  ?markEitzelArtist dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
103,58,train,"Give me the professional in the profession of Shatrughan Sinha and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of Dispatches from Elsewhere.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?profession WHERE {
  VALUES (?resource) { 
    dbr:Shatrughan_Sinha 
    dbr:The_Shadow_(video_game_character)
    dbr:Jason_Segel
  }
  
  ?person dbo:wikiPageRedirects ?resource .
  OPTIONAL { ?person dbo:occupation ?profession . FILTER (lang(?profession) = 'en') }
}
```

This query does the following:
- Uses `VALUES` to specify the resources for Shatrughan Sinha, The Shadow (as a video game character), and Jason Segel.
- Utilizes `dbo:wikiPageRedirects` to handle any redirects that might exist in DBpedia for these entities.
- Retrieves the professions using `dbo:occupation`, filtering results to English language descriptions.",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
375,6,train,Give me the parent of Kate Dimbleby and author of A Picture of Britain.,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Kate_Dimbleby> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?authorName WHERE {
  # Find Kate Dimbleby's parents
  ?kate a dbo:Person ;
        foaf:name ""Kate Dimbleby""@en .
  
  ?kate dbo:childOf ?parent .

  # Check if the parent is an author of ""A Picture of Britain""
  OPTIONAL { 
    ?parent dbo:author ?book .
    ?book dbo:title ""A Picture of Britain""@en ;
          dbo:authorName ?authorName .
  }

  FILTER(?authorName != """")
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
143,14,train,Give me the associated musical artist of the person born as the birth name of Cynthia Morgan.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Cynthia Morgan's resource in DBpedia
  ?cynthiaMorgan a dbo:MusicalArtist ;
                 foaf:name ""Cynthia Morgan""@en .
  
  # Get her birth name
  ?cynthiaMorgan dbo:birthName ?birthName .

  # Find associated musical artists with the same birth name
  ?artist a dbo:MusicalArtist ;
          dbo:birthName ?birthName .
  
  FILTER(?cynthiaMorgan != ?artist)
}
```",3,3,4,3,1,3,2,20,0,0,6,0,0.0,0
159,4,train,"Give me the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander ?name WHERE {
  # Find the event of Russo-Polish War
  ?event a dbo:MilitaryConflict ;
         dbo:dateStart ?dateStart ;
         dbo:dateEnd ?dateEnd .

  FILTER (?dateStart >= ""1654-01-01""^^xsd:dateTime && ?dateEnd <= ""1667-12-31""^^xsd:dateTime)
  FILTER (str(?event) = str(dbr:Russo-Polish_War_(1654%E2%80%931667)))

  # Find commanders involved in the event
  ?commander dbo:role ?role .
  ?role dbo:isPartOf ?event .

  # Ensure the commander is a politician and an office holder
  ?commander dbo:occupation dbr:Politician ;
             dbo:officeHolder ?office .

  # Get the name of the commander
  ?commander rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
595,9,train,Give me the spouse of Hillary Clinton and author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?h dbo:spouse ?spouse .
  ?h rdfs:label ""Hillary Clinton""@en .
  FILTER NOT EXISTS { ?spouse dbo:deathDate ? } # Ensure the spouse is alive
  OPTIONAL { 
    ?book dbo:author ?spouse ;
          dbr:Back_to_Work_(2014_book) .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
158,0,train,Give me the person decedent at Switzerland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Switzerland> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Switzerland .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
LIMIT 100",1,1,2,1,1,2,3,28,98,88,808,0.5268817204301075,0.10816777041942605,0.1794871794871795
706,4,train,"Give me the movie, that is a movie and Indian, with Dipankar De.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  ?movie a dbo:Film ;
         dbo:country dbr:India ;
         dbo:starring dbr:Dipankar_Dey .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
531,48,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?result . ?v3 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeOfLeader ?tenantOfficeHolder
WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  ?leader a dbo:Politician ;
          dbo:partyMember dbr:Conservative_Party_(Spain) .

  # Get the office held by this leader
  ?leader dbo:holdsPublicOffice ?officeOfLeader .

  # Check if this person was an office holder in the 2003 Madrid City Council election
  ?officeHolder a dbo:ElectedOfficial ;
                dbo:election dbr:Madrid_City_Council_election,_2003 ;
                dbo:person ?leader .
  
  # Get the office held by this person during the 2003 Madrid City Council election
  ?officeHolder dbo:holdsPublicOffice ?tenantOfficeHolder .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
311,13,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of the producer, that is an organisation and a band and a group, of Lotus (R.E.M. song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Lotus_(R.E.M._song)> <http://dbpedia.org/ontology/producer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Identify ""Lotus (R.E.M. song)""
  ?song dbr:Lotus_(R.E.M._song) .

  # Step 2: Find its producer, which is an organization and also a band/group
  ?song dbo:producer ?producer .
  ?producer rdf:type dbo:Organization ;
            dbo:musicGroup ?band .

  # Step 3: Find the associated musical artist of this producer
  ?band dbo:associatedMusicalArtist ?artist1 .

  # Step 4: Find the associated musical artist of that artist
  ?artist1 dbo:associatedMusicalArtist ?finalArtist .
}
```",3,7,4,3,1,3,2,20,0,0,28,0,0.0,0
609,55,train,"Give me the birth place of the author of El Deafo and birth place of the awardee of List of awards and nominations received by Vince Gilligan and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?awardeeBirthPlace ?governorBirthPlace WHERE {
  # Birthplace of Cece Bell, author of ""El Deafo""
  OPTIONAL { 
    dbr:Cece_Bell dbo:birthPlace ?authorBirthPlace .
  }

  # Birthplace of Vince Gilligan (assuming the award is for ""Breaking Bad"")
  OPTIONAL { 
    dbr:Vince_Gilligan dbo:birthPlace ?awardeeBirthPlace .
  }

  # Birthplace of Glenn Youngkin, Governor of Virginia
  OPTIONAL { 
    dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace .
  }
}
```",6,7,7,2,3,3,3,71,1,0,0,1.0,1.0,1.0
731,2,train,Give me the award of Edmund Hakewill-Smith.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edmund_Hakewill-Smith> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Edmund_Hakewill-Smith }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
87,10,train,Give me the spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Janusz Kamiński in DBpedia
  dbr:Janusz_Kamiński a dbo:Person .

  # Find the spouse of Janusz Kamiński
  OPTIONAL { 
    dbr:Janusz_Kamiński dbo:spouse ?spouse .
  }
}
```",2,2,3,2,1,2,3,28,1,0,0,1.0,1.0,1.0
816,6,train,Give me the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
SELECT ?professional WHERE {
  ?professional a dbo:Photographer .
}
```",1,1,2,1,1,3,3,71,31,523,906,0.05595667870036101,0.033084311632870865,0.04158283031522468
687,40,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar and player in Sergio Agüero.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?player WHERE {
  # Find Marty Pollio's birthdate
  VALUES ?martyBirthDate {
    SELECT ?birthdate WHERE { 
      dbr:Marty_Pollio dbo:birthday ?birthdate .
    }
  }

  # Find teams Pablo Aimar played for
  ?aimarTeam a dbo:SportsClub ;
             dbp:players ?player .

  FILTER EXISTS { 
    ?player dbo:nationality dbr:Argentina .  # Ensure the player is an athlete (Argentinian)
  }

  # Find players with the same birthdate as Marty Pollio
  ?player dbo:birthday ?birthdate .
  FILTER (?birthdate = ?martyBirthDate)

  # Ensure the player is also associated with Sergio Agüero's team
  ?agüeroTeam a dbo:SportsClub ;
              dbp:players dbr:Sergio_Agüero .

  FILTER EXISTS {
    ?player dbp:team ?agüeroTeam .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,53,train,"Give me the parent of Amy Arbus and parent of the child of Allan Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentAmy ?childAllan ?actor ?movie WHERE {
  # Parent of Amy Arbus
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .
  ?parentAmy dbo:child ?amyArbus .

  # Child of Allan Arbus who is an actor in a movie
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  ?childAllan dbo:child ?allanArbus ;
              dbo:occupation dbr:Actor .

  # Actor of the movie that is a work with person decedent at Los Angeles
  ?actor dbo:occupation dbr:Actor ;
         dbo:film ?movie .
  ?movie dbo:location dbr:Los_Angeles_County,_California ;
         dbo:decedent ?personDecedent .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
782,35,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Identify Nick Curran's DBpedia resource
  dbr:Nick_Curran a dbo:MusicalArtist ;
                  foaf:name ""Nick Curran""@en .

  # Find associated musical artists
  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedBandOrMusicalArtist ?artist .
  }

  # Reference The Fabulous Thunderbirds
  FILTER(?artist = dbr:The_Fabulous_Thunderbirds)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
531,9,train,Give me the tenant of Madrid and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?office WHERE {
  # Mariano Rajoy and his political party
  dbr:Mariano_Rajoy dbo:politicalParty ?party .
  
  # The office held by Mariano Rajoy in Madrid
  OPTIONAL { 
    ?office dbo:heldBy dbr:Mariano_Rajoy ;
            dbo:place dbr:Madrid .
  }
}
```

This query does the following:
- It identifies the political party associated with Mariano Rajoy using `dbo:politicalParty`.
- It optionally retrieves any office held by him in Madrid, considering both the holder (`dbo:heldBy`) and location (`dbo:place`).",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
143,1,train,Give me the associated musical artist of Cynthia Morgan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Cynthia Morgan is a musician (P106)
  wdt:P175 ?artist. # Associated musical artist (P175)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Cynthia Morgan.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
585,2,train,Give me the awardee of New York (state).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award dbo:country dbr:United_States .
  ?award dbo:stateOrProvince dbr:New_York_(state) .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
293,60,train,Give me the person born as the birth name of the parent of Tisha Sterling and party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Tisha Sterling's parent
  ?tisha a dbo:Person ;
         foaf:name ""Tisha Sterling"" .
  
  ?parent dbo:child ?tisha ;
          dbo:birthName ?birthName .

  # Find the landmark at elevation ~20.12 meters
  ?landmark dbo:elevation ""20.1168""^^xsd:float ;
            dbo:locationCountry ?country .

  # Determine the ruling party in that country
  ?party dbo:country ?country ;
         dbo:isRulingParty true .

  # Find a person who is a member of this party and has the birth name of Tisha's parent
  ?person dbo:birthName ?birthName ;
          dbo:memberOf ?party .
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
151,0,train,Give me the entity in Ottoman Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?entity ?label WHERE {
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  OPTIONAL { 
    ?entity dbo:wikiPageWikiLink <http://dbpedia.org/resource/Ottoman_Empire> .
  }
  FILTER EXISTS { ?entity dbo:wikiPageWikiLink <http://dbpedia.org/resource/Ottoman_Empire> }
}
ORDER BY ?label
LIMIT 100",1,1,2,1,1,2,2,9,0,200,247,0.0,0.0,0
143,11,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro and associated musical artist of Cynthia Morgan.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . <http://dbpedia.org/resource/Cynthia_Morgan> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?show ?musicalArtist WHERE {
  # Find the show/movie with Afeez Oyetoro as an actor
  ?show a dbo:Film ;
        dbo:starring dbr:Afeez_Oyetoro .
  
  # Ensure the same show is associated with Cynthia Morgan as a musical artist
  ?show dbo:musicalArtist dbr:Cynthia_Morgan .

  # Get Afeez Oyetoro's DBpedia resource for clarity
  OPTIONAL { ?actor rdfs:label ""Afeez Oyetoro""@en . FILTER(lang(?actor) = 'en') }

  # Get Cynthia Morgan's DBpedia resource for clarity
  OPTIONAL { ?musicalArtist rdfs:label ""Cynthia Morgan""@en . FILTER(lang(?musicalArtist) = 'en') }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
595,21,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?author dbo:book dbr:An_Invitation_to_the_White_House .
  ?author foaf:name ""Lee Teng-hui""@en .
  ?author dbo:officeHolderOf ?office .
  ?author dbo:commanderIn ?crisis .
  ?crisis rdfs:label ""Third Taiwan Strait Crisis""@en .

  ?author dbo:spouse ?spouse .
  ?spouse dbo:officeHolderOf ?office2 .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
816,57,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the professional in the profession of Eugène Cattin and parent of the child of Allan Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .

  # Parent of the professional in the profession of Eugène Cattin
  ?eugeneCattin dbo:profession dbr:Eug%C3%A8ne_Cattin .
  ?eugeneCattin dbo:parent ?parentEugeneCattin .

  # Parent of the child of Allan Arbus
  ?allanArbus dbo:child ?childAllanArbus .
  ?childAllanArbus dbo:parent ?parentChildAllanArbus .

  # Find common individual
  FILTER (?actor = ?parentEugeneCattin && ?actor = ?parentChildAllanArbus)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
39,30,train,"Give me the professional in Singer and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?singerRole ?bandRole WHERE {
  # Find the DBpedia resource for Bobby Brown
  VALUES ?bobbyBrown { dbr:Bobby_Brown }

  # Get his professional roles as a singer and band member
  ?bobbyBrown dbo:singer ?singerRole .
  OPTIONAL { ?bobbyBrown dbo:member ?bandRole . }
}
```",4,5,5,2,3,3,3,71,0,0,3,0,0.0,0
158,23,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry ?decedentPerson
WHERE {
  # Nicholas II of Russia's native country
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country ?nativeCountry .

  # Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .

  # Find a person who died at the same place as Sandro Bertaggia was born
  ?decedentPerson dbo:deathPlace ?birthPlace .
}
```",4,6,5,2,2,2,3,28,0,0,36,0,0.0,0
531,14,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Partido Popular""@en .
  
  ?leader dbo:leaderOf ?party ;
          foaf:name ?name .

  ?leader dbo:holdsOffice ?office .
}
```

This query does the following:
- Identifies the political party with the label ""Partido Popular"" in English.
- Finds the leader of this party.
- Retrieves the office held by this leader.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
706,17,train,"Give me the birthplace of the actor of the movie, that is a movie and Indian, with Dipankar De and birthplace of Ebrahim Alkazi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorBirthplace ?ebrahimAlkaziBirthplace WHERE {
  # Find Indian movies featuring Dipankar De
  ?movie dbo:starring dbr:Dipankar_De ;
         dbo:country dbr:India .

  # Get actors from those movies
  ?movie dbo:starring ?actor .
  
  # Get the birthplace of one such actor
  ?actor dbp:birthPlace ?actorBirthplace .

  # Get the birthplace of Ebrahim Alkazi
  dbr:Ebrahim_Alkazi dbp:birthPlace ?ebrahimAlkaziBirthplace .
}
```",4,6,5,3,2,3,2,20,2,14,0,0.125,1.0,0.2222222222222222
375,22,train,Give me the war of the person born as Koichirō and entity in the birth place of Yamaza Enjirō.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Koichirō""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?entity
WHERE {
  # Find Koichiro Matsuura and his associated war
  dbr:Koichirō_Matsuura dbo:nationality dbr:Japan .
  OPTIONAL { 
    dbr:Koichirō_Matsuura dbo:occupation dbr:Military_person . 
    ?war dbo:participatedIn dbr:Koichirō_Matsuura .
  }

  # Find Yamaza Enjirō and his birthplace
  dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlace .

  # Get the entity related to the birthplace of Yamaza Enjirō
  ?entity rdf:type dbo:Place ;
          rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), LCASE(str(?birthPlace))))
}
```",4,4,5,2,2,2,3,28,0,0,3,0,0.0,0
668,3,train,Give me the birth name of $pacely.,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  dbr:Toru_Iwatani dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
769,4,train,"Give me the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?result <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?reference WHERE {
  ?reference a dbo:SportsClub ;
             a dbo:SoccerClub ;
             a dbo:Organization ;
             a dbo:SportsTeam .
  ?reference foaf:name ""Hong Kong C""@en.
}
```",1,5,2,1,1,3,2,20,0,0,1,0,0.0,0
293,11,train,"Give me the party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v0 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyMember WHERE {
  # Identify Central, Louisiana
  ?centralLocation rdfs:label ""Central, Louisiana""@en .
  
  # Find the ruling party in Central, Louisiana
  ?centralLocation dbo:government ?government .
  ?government dbo:rulingParty ?rulingParty .

  # Get members of the ruling party
  ?rulingParty dbo:member ?partyMember .
}
```",2,2,3,2,1,3,3,71,0,0,21486,0,0.0,0
595,61,train,"Give me the author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/author> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?resident a dbo:Politician ;
            dbo:residence dbr:Chappaqua,_New_York ;
            dbo:commanderInWar dbr:World_War_I .
  
  ?shipOwner dbo:ownerOfShip dbr:USS_Arcadia_(ID-1605) .

  FILTER (?resident = ?shipOwner)

  ?work a dbo:Book ;
        dbo:author ?author ;
        dbo:about ?resident .

}
```",6,13,7,3,2,3,3,71,0,0,1,0,0.0,0
119,59,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?office ?country
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  ?event dbo:agent ?person ;
         dbo:place ?location .

  ?office dbo:positionHeldBy ?person ;
          dbo:isPartOf ?event .

  ?location dbp:country dbr:Spain .

  ?person dbo:nationality dbr:Spanish_people .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
609,19,train,Give me the birth place of Glenn Youngkin and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Birthplace of Glenn Youngkin
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?youngkinBirthPlace .
    BIND(dbr:Glenn_Youngkin AS ?person)
    BIND(?youngkinBirthPlace AS ?birthPlace)
  }
  
  # Awardees related to Vince Gilligan's awards and nominations
  OPTIONAL {
    ?award dbr:Vince_Gilligan dbo:recipient ?awardee .
    ?awardee dbo:birthPlace ?awardeeBirthPlace .
    BIND(?awardee AS ?person)
    BIND(?awardeeBirthPlace AS ?birthPlace)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,30,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?work ?producer 
WHERE {
  # Find works associated with Janet Gaynor
  VALUES ?janetGaynor { dbr:Janet_Gaynor }
  
  # Get movies or works of Janet Gaynor
  ?work dbo:starring ?janetGaynor .
  
  OPTIONAL {
    # Get producers for each work
    ?work dbo:producer ?producer .
  }

  UNION

  # Find producer of ""The Adventures of Tom Sawyer"" (1938 film)
  VALUES ?tomSawyer { dbr:The_Adventures_of_Tom_Sawyer_(1938_film) }
  
  ?tomSawyer dbo:producer ?producer .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
23,21,train,Give me the party of Roy Barreras and entity in Colombia and party of the father of Sofía Petro.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royParty ?entityInColombia ?sofiaFatherParty WHERE {
  # Roy Barreras and his political party
  OPTIONAL {
    dbr:Roy_Barreras dbo:partyAffiliation ?royParty .
  }
  
  # Entity in Colombia related to Roy Barreras
  OPTIONAL {
    dbr:Roy_Barreras dbo:nationality dbr:Colombia ;
                     dbo:birthPlace ?entityInColombia .
  }

  # Sofía Petro and her father's political party
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?sofiaFather .
    ?sofiaFather dbo:partyAffiliation ?sofiaFatherParty .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
375,12,train,"Give me the author of A Picture of Britain and parent of the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { <http://dbpedia.org/resource/A_Picture_of_Britain> <http://dbpedia.org/ontology/author> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?parentArtist
WHERE {
  # Find the author of ""A Picture of Britain""
  dbr:A_Picture_of_Britain dbo:author ?author .

  # Find the parent artist who is both an artist and a musical artist from London
  ?author dbo:birthPlace dbr:London .
  ?parentArtist dbo:child ?author .
  ?parentArtist rdf:type dbo:Artist .
  ?parentArtist rdf:type dbo:MusicalArtist .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
103,25,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?profession1 ?actor ?profession2 WHERE {
  # The Shadow's alter ego and profession
  dbr:The_Shadow dbo:alterEgoOf ?alterEgo .
  ?alterEgo dbo:occupation ?profession1 .

  # Actor and their profession
  OPTIONAL { 
    ?actor a dbo:Actor ;
           rdfs:label ?actorLabel .
    FILTER (CONTAINS(LCASE(?actorLabel), ""actor""))
    ?actor dbo:occupation ?profession2 .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4210,0,0.0,0
119,16,train,"Give me the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/property/residence> ?result . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?residenceCountry WHERE {
  ?person dbo:nationality dbr:Spanish .
  ?person dbo:country dbr:Spain .
  ?person dbo:residence ?residence .
  ?residence a dbo:Place .
  ?residence dbo:country ?residenceCountry .
}
```

This query does the following:
- Selects distinct countries (`?residenceCountry`) where the person resides.
- Filters individuals who have Spanish nationality and are citizens of Spain.
- Checks if their residence is a place (to ensure it's not just any location).
- Retrieves the country associated with that place.",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
39,24,train,Give me the band of Bob Thompson (musician) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  # Find Bob Thompson (musician)
  OPTIONAL { 
    dbr:Bob_Thompson_(musician) dbo:musicalArtistInBand ?band .
  }
  
  # Find The Shadow (alter ego)
  OPTIONAL { 
    dbr:The_Shadow dbo:musicalArtistInBand ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
347,44,train,"Give me the father of the child of Ferdinand III, Holy Roman Emperor and child of the father of Cecilia Renata of Austria and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?ferdinandIII dbo:child ?child1 .
  ?ceciliaRenata dbo:father ?father .
  ?ferdinandII dbo:child ?child2 .
  ?ferdinandII dbo:child ?child3 .
  ?ferdinandII dbp:commanderInWar <http://dbpedia.org/resource/Thirty_Year_War> .

  FILTER(?child1 != ?child2)
  FILTER(?child1 != ?child3)
  FILTER(?child2 = ?child3)

  BIND(?father AS ?ferdinandII)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
737,17,train,"Give me the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the parent(s) of Archduchess Margarete Sophie of Austria
  ?parent dbo:spouse|dbo:child dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Find the children of those parents
  ?parent dbo:child ?child .

  # Filter to include only royalty
  ?child a dbo:Monarch ;
         rdfs:label ?name .
}
ORDER BY ?name",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
943,14,train,"Give me the father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather WHERE {
  # Identify Na'od
  ?na'od a dbo:Person ;
        rdfs:label ""Na'od""@en .

  # Find Na'od's father
  ?na'od dbo:father ?father .

  # Find Na'od's grandfather (father of his father)
  ?father dbo:father ?grandfather .

  # Ensure the grandfather is royalty and an office holder
  ?grandfather dbo:royalTitle ?title .
  ?grandfather dbo:officeHolder ?office .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
39,52,train,Give me the professional in the alter ego of The Shadow and band of Bob Thompson (musician) and professional in the profession of the producer of Coke Studio Philippines.,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?shadowProfession ?bobThompsonBand ?cokeStudioProducer
WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:profession ?shadowProfession .

  # Bob Thompson (musician)'s band
  OPTIONAL { 
    dbr:Bob_Thompson_(musician) dbo:band ?bobThompsonBand .
  }

  # Producer of Coke Studio Philippines
  OPTIONAL {
    dbr:Coke_Studio_Philippines dbo:producer ?cokeStudioProducer .
  }
}
```",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
58,13,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Linda Bruckheimer""@en .
  
  OPTIONAL { ?person dbp:birthName ?birthName . }
  
  ?person dbo:spouse ?spouse .
}
```

This query does the following:
- It looks for a DBpedia resource of type `dbo:Person` with the name ""Linda Bruckheimer.""
- It optionally retrieves her birth name, although it's not directly used in filtering since we're already identifying by full name.
- Finally, it selects the spouse associated with this person.",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
203,37,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of the reference to William Bayne.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleMilitaryForce ?warMilitaryForce WHERE {
  # Retrieve military forces involved in the Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryConflicts ?battleEvent .
    ?battleEvent dbo:participatingGroups ?battleMilitaryForce .
  }

  # Retrieve wars associated with William Bayne
  OPTIONAL {
    ?bayne dbr:William_Bayne dbo:participatedInWar ?warEvent .
    ?warEvent dbo:participatingGroups ?warMilitaryForce .
  }
}
```

This query does the following:
- Uses `dbo:militaryConflicts` to find events related to the Battle of Cape Finisterre (1805) and retrieves participating military groups.
- Searches for any wars associated with William Bayne using a hypothetical property `dbo:participatedInWar`, which would need to exist or be replaced by an appropriate DBpedia property if available.

Please note that the exact properties (`dbo:militaryConflicts`, `dbo:participatingGroups`, and `dbo:participatedInWar`) might vary based on how DBpedia structures its data, so adjustments may be necessary depending on the current schema.",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
119,29,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of Álvaro Quirós and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayorOfSantiago ?residenceCountryAlvaroQuirós ?officeAlbertoNúñezFeijóo
WHERE {
  # Mayor of Santiago de Compostela
  ?santiago dbr:Santiago_de_Compostela .
  ?santiago dbo:mayor ?mayorOfSantiago .

  # Residence country of Álvaro Quirós (assuming it's Spain)
  ?alvaroQuirós dbr:Álvaro_Quirós .
  ?alvaroQuirós dbo:nationality ?residenceCountryAlvaroQuirós .
  FILTER(?residenceCountryAlvaroQuirós = dbr:Spain)

  # Office of Alberto Núñez Feijóo
  ?feijoo dbr:Alberto_Núñez_Feijóo .
  ?feijoo dbo:office ?officeAlbertoNúñezFeijóo .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
89,22,train,Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find children of Saw Shwe Khet
  ?child1 dbo:parent dbr:Saw_Shwe_Khet .
  
  # Find children of Saw Min Hla
  ?child2 dbo:parent dbr:Saw_Min_Hla .

  # Find predecessors of the child of Saw Shwe Khet
  ?predecessor1 dbo:successor ?child1 .
  
  # Find predecessors of the child of Saw Min Hla
  ?predecessor2 dbo:successor ?child2 .

  # Return distinct predecessors
  VALUES ?predecessor { ?predecessor1 ?predecessor2 }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
419,7,train,Give me the entity in the birthplace of Yandamuri Veerendranath and alma mater of Chennupati Jagadish.,SELECT ?result WHERE { <http://dbpedia.org/resource/Yandamuri_Veerendranath> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Birthplace of Yandamuri Veerendranath
  OPTIONAL { 
    dbr:Yandamuri_Veerendranath dbo:birthPlace ?birthPlace .
    ?birthPlace rdfs:label ?birthPlaceLabel .
  }
  
  # Alma mater of Chennupati Jagadish
  OPTIONAL {
    dbr:Chennupati_Jagadish dbo:almaMater ?almaMater .
    ?almaMater rdfs:label ?almaMaterLabel .
  }

  # Check if the birthplace and alma mater are the same entity
  FILTER (?birthPlace = ?almaMater)
  
  # Return the label of the entity
  BIND(?birthPlace AS ?entity)
}
```

This query uses optional patterns to find the birthplace of Yandamuri Veerendranath and the alma mater of Chennupati Jagadish, then checks if they are the same entity. If so, it returns that entity.",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
756,43,train,"Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum and native of the administration, that is a country, of the leader of West Germany.",SELECT ?result WHERE { <http://dbpedia.org/resource/West_Germany> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vitesseManager ?bochumManager ?countryOfLeader
WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  ?team dbr:SBV_Vitesse .
  ?team dbo:manager ?vitesseManager .
  ?vitesseManager dbp:managedTeam ?team .
  ?vitesseManager dbp:managedSeason ""2020–21"" .

  # Manager of VfL Bochum
  ?bochumTeam dbr:VfL_Bochum .
  ?bochumTeam dbo:manager ?bochumManager .
  ?bochumManager dbp:managedTeam ?bochumTeam .

  # Leader of West Germany and their country of origin
  ?leader dbr:Chancellor_of_West_Germany .
  ?leader dbo:nationality ?countryOfLeader .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
258,17,train,"Give me the establishment of 1955-12-02 and alma mater of the person born, that is a politician, as the birth name of Eleonora Menicucci.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/foundingDate> ""1955-12-02""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?establishmentDate ?almaMater WHERE {
  # Find the person Eleonora Menicucci
  ?person a dbo:Person ;
          foaf:name ""Eleonora Menicucci""@en ;
          dbo:birthName ""Eleonora Menicucci""@en ;
          dbo:occupation dbr:Politician .

  # Check if she was born on the specified date
  ?person dbo:birthdayLiteral ?birthday .
  FILTER (YEAR(?birthday) = 1955 && MONTH(?birthday) = 12 && DAY(?birthday) = 02)

  # Find her alma mater
  OPTIONAL { ?person dbo:almaMater ?almaMater . }

  # Find the establishment date of the alma mater
  OPTIONAL { ?almaMater dbo:foundingDate ?establishmentDate . }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
557,61,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer
WHERE {
  # Find the actor of ""Johnny Doughboy""
  ?actor dbo:actedIn dbr:Johnny_Doughboy .
  
  # Find a work that is this actor's claim to fame
  ?work dbo:starring ?actor ;
        dbo:genre ?genre .
  
  FILTER EXISTS { ?genre rdfs:label ""Film""@en }
  
  # Find the producer of this work
  ?producer dbo:produced ?work .

  # Find the actor of ""High Society Blues""
  ?anotherActor dbo:actedIn dbr:High_Society_Blues .
  
  # Find a movie that is this actor's claim to fame (a work)
  ?movie dbo:starring ?anotherActor ;
         dbo:genre ?movieGenre .
  
  FILTER EXISTS { ?movieGenre rdfs:label ""Film""@en }
  
  # Find the producer of this movie
  ?producer2 dbo:produced ?movie .

  # Ensure both producers are the same
  FILTER (?producer = ?producer2)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
412,12,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description ?athensEntity WHERE {
  # Find wars involving Konstantinos Tsaldaris and Napoleon Zervas
  VALUES (?person) { 
    dbr:Konstantinos_Tsaldaris 
    dbr:Napoleon_Zervas 
  }
  
  ?war dbo:participatedIn ?event .
  ?event dbo:agent ?person .
  ?war rdfs:label ?description .

  # Find entities related to Athens
  OPTIONAL {
    ?athensEntity dbo:location dbr:Athens .
    ?athensEntity rdfs:label ?athensLabel .
  }
  
  FILTER (lang(?description) = 'en')
}
ORDER BY ?war
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
782,51,train,"Give me the band of the band member of Eric Clapton and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band ?associatedArtist WHERE {
  # Find bands associated with Eric Clapton
  ?claptonBand dbo:member dbr:Eric_Clapton .
  
  # Get the band name
  ?claptonBand rdfs:label ?band .

  # Find people born as musical artists, specifically Nick Curran
  ?person dbo:birthPlace ?place ;
          a dbo:MusicalArtist ;
          rdfs:label ""Nick Curran""@en .
  
  # Get associated musical artists of Nick Curran
  ?association dbo:associatedMusicalArtist ?person ;
               dbo:musicalArtist ?associatedArtist .

  # Filter to ensure we only get relevant results
  FILTER (lang(?band) = 'en' && lang(?associatedArtist) = 'en')
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
159,37,train,Give me the reference to the writer of the work of George Ducas and commander in Great Turkish War.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?commanderRole WHERE {
  # Find George Ducas in DBpedia
  ?georgeDucas a dbo:Person ;
               rdfs:label ""George Ducas""@en .

  # Get works authored by George Ducas
  OPTIONAL { 
    ?georgeDucas dbo:author ?work .
    ?work rdfs:label ?workLabel .
  }

  # Get military command roles of George Ducas
  OPTIONAL {
    ?georgeDucas dbo:commander ?commanderRole .
    ?commanderRole rdfs:label ?commanderRoleLabel .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
905,59,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and parent of the father, that is a royalty, of the spouse of Maria of Bytom.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Step 1: Find Philip, Despot of Romania's parent who is royalty
  ?philip dbo:parent ?parent .
  FILTER(CONTAINS(LCASE(STR(?parent)), ""royalty"")) .

  # Step 2: Find the father (grandfather) of this parent and his spouse
  ?parent foaf:parent ?grandfather .
  ?grandfather dbo:spouse ?spouse .

  # Step 3: Find Maria of Bytom's spouse
  ?maria dbo:spouse ?spouseMaria .

  # Step 4: Find the father (who is royalty) of this spouse
  ?spouseMaria foaf:parent ?royalFather .
  FILTER(CONTAINS(LCASE(STR(?royalFather)), ""royalty"")) .

  # Ensure we are referring to the same Philip, Despot of Romania
  VALUES ?philip { <http://dbpedia.org/resource/Philip,_Despot_of_Romania> }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
297,5,train,"Give me the entity in the birth place, that is a country, of Little Hat Jones.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Little_Hat_Jones> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the DBpedia resource for Little Hat Jones
  ?person rdfs:label ""Little Hat Jones""@en .
  
  # Retrieve the birthplace of Little Hat Jones
  ?person dbo:birthPlace ?birthPlace .

  # Check if the birthplace is associated with a country
  OPTIONAL { 
    ?birthPlace dbo:country ?country .
  }
}
```

This query does the following:
- It looks for an entity labeled ""Little Hat Jones"" in English.
- Retrieves the `dbo:birthPlace` of this person.
- Uses an optional pattern to find if there is a country associated with that birthplace.",2,3,3,2,1,2,2,9,0,0,63421,0,0.0,0
213,1,train,Give me the country of Cat Country (novel).,SELECT ?result WHERE { <http://dbpedia.org/resource/Cat_Country_(novel)> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:Cat_Country dbo:setInLocation ?location .
  ?location dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
58,15,train,Give me the spouse of the person born as the birth name of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Linda_Bruckheimer> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Linda Bruckheimer who is a producer of ""12 Strong""
  ?person dbo:birthName ""Linda Bruckheimer""@en .
  ?person dbo:profession dbr:Film_producer .
  ?film dbo:producer ?person ;
        rdfs:label ""12 Strong""@en .

  # Find her spouse
  ?person dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
816,1,train,Give me the parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?amyArbus { dbr:Amy_Arbus }
  ?amyArbus dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
472,11,train,Give me the administration of the mayor of Duchy of Schleswig.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?administration WHERE {
  ?region rdfs:label ""Duchy of Schleswig""@en .
  OPTIONAL { 
    ?region dbo:mayor ?mayor .
    ?mayor dbo:office ?administration .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
159,50,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?writer WHERE {
  # Find Jean Baptist, Comte d'Arco and his role in a war
  ?person rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  ?person dbo:role ?role .
  
  # Identify the war that is both a TV show and a societal event
  ?war dbo:depiction ?tvShow .
  ?tvShow rdf:type dbo:TelevisionSeries .
  ?war dbo:wikiPageRedirects ?historicalEvent .
  ?historicalEvent rdf:type dbo:SocietalEvent .

  # Find the commander in this war
  ?role dbo:commander ?commander .

  # Reference to the writer of the work of George Ducas
  ?georgeDucas rdfs:label ""George Ducas""@en .
  ?georgeDucas dbo:work ?work .
  ?writer dbo:authorOf ?work .
  
  FILTER (lang(?personLabel) = 'en')
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
633,9,train,"Give me the parent, that is a royalty and a noble, of the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Antoine, Duke of Lorraine
  ?antoine a dbo:Duke ;
           dbp:name ""Antoine, Duke of Lorraine""@en .

  # Find Antoine's children
  ?child dbo:spouseOrPartnerOf|dbo:child ?antoine .
  
  # Filter children who are royalty
  ?child a dbo:Monarch .

  # Identify parent(s) of these children
  ?parent dbo:child ?child .

  # Ensure the parent is both royalty and noble
  ?parent a dbo:Monarch ;
          dbo:nobleTitle ?title .
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
737,31,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find Archduchess Helena of Austria's spouse
  dbr:Archduchess_Helena_of_Austria dbo:spouse ?spouse .

  # Step 2: Check if the spouse has a child who is royalty
  ?spouse dbo:child ?child .
  ?child rdf:type dbo:Monarch .

  # Step 3: Find the predecessor of that child
  ?child dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
353,34,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild WHERE {
  # Step 1: Identify Roger II of Sicily
  ?roger2 a dbo:Monarch ;
          foaf:name ""Roger II of Sicily""@en .

  # Step 2: Find his child who is royalty and whose mother is Elvira of Castile
  ?child a dbo:Person ;
         dbo:spouse ?elvira ;
         dbo:parent ?roger2 .
  
  ?elvira a dbo:Monarch ;
          foaf:name ""Elvira of Castile, Queen of Sicily""@en .

  # Step 3: Determine the parent of this child
  OPTIONAL { ?child dbo:parent ?parent . }

  # Step 4: Identify the child of that parent
  ?childOfChild dbo:parent ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
80,38,train,Give me the actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?alterEgo
WHERE {
  # Part 1: Find actors linked to T.I.'s album ""Urban Legend""
  ?album dbo:title ""Urban Legend"" ;
         dbo:artist dbr:T.I. .

  OPTIONAL { 
    ?album dbo:contributor ?actor .
    FILTER (isLiteral(?actor) && regex(str(?actor), ""Actor""))
  }

  # Part 2: Find the professional alter ego known as ""The Shadow""
  ?person dbo:alterEgo dbr:The_Shadow ;
          dbo:profession ?profession .

  OPTIONAL {
    ?person rdfs:label ?alterEgo .
    FILTER (regex(str(?alterEgo), ""The Shadow""))
  }
}
```",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
628,6,train,Give me the birth name of Bobby Shmurda.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q1065182 foaf:name ""Bobby Shmurda""@en .
  OPTIONAL { wd:Q1065182 schema:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
943,24,train,Give me the father of Baeda Maryam I and reference to the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?alterEgo WHERE {
  # Query for the father of Baeda Maryam I
  OPTIONAL {
    ?baedaMaryamI dbo:father ?father .
    FILTER(STRSTARTS(STR(?baedaMaryamI), ""http://dbpedia.org/resource/Baeda_Maryam_I""))
  }

  # Query for the alter ego of The Shadow
  OPTIONAL {
    ?theShadow dbo:alterEgo ?alterEgo .
    FILTER(STRSTARTS(STR(?theShadow), ""http://dbpedia.org/resource/The_Shadow_(character)""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
140,10,train,"Give me the ruling party, that is a political party and an organisation, in the death place, that is a settlement, of John McDermott (American artist).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/John_McDermott_(American_artist)> <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?rulingParty WHERE {
  # Find John McDermott's death place
  ?johnMcDermott dbo:deathPlace ?deathPlace .
  
  FILTER (strstarts(str(?johnMcDermott), ""John McDermott (American artist)""))

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Find the ruling party in that settlement
  ?deathPlace dbp:politicalParty ?rulingParty .
  
  FILTER EXISTS { ?rulingParty rdf:type dbo:PoliticalParty . }
}
```",2,5,3,2,1,3,2,20,0,0,1,0,0.0,0
375,4,train,"Give me the location, that is English and a settlement, for ,.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> "","" . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?location WHERE {
  ?location a dbo:Settlement .
  ?location rdfs:label ?label .
  FILTER (lang(?label) = 'en') .
  OPTIONAL { ?location dbo:country dbr:United_Kingdom . } # Example for UK, adjust as needed
}
```",1,3,2,1,1,3,2,20,6,649011,0,9.244750137515658e-06,1.0,1.8489329345801308e-05
687,18,train,Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?playerMolina ?playerAgüero ?teamAimar WHERE {
  # Players who played with Juan Carlos Molina
  ?molina dbo:memberOf ?team1 .
  ?molina dbp:name ""Juan Carlos Molina""@en .

  ?playerMolina dbo:memberOf ?team1 .
  FILTER(?playerMolina != ?molina) .

  # Players who played with Sergio Agüero
  ?agüero dbo:memberOf ?team2 .
  ?agüero dbp:name ""Sergio Agüero""@en .

  ?playerAgüero dbo:memberOf ?team2 .
  FILTER(?playerAgüero != ?agüero) .

  # Team of Pablo Aimar
  ?aimar dbo:memberOf ?teamAimar .
  ?aimar dbp:name ""Pablo Aimar""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
103,52,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of Shatrughan Sinha and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?movie WHERE {
  # Richard Grant Esterhuysen is known as John Cleese
  ?cleese a dbo:Person ;
          foaf:name ""John Cleese""@en .
  
  # Shatrughan Sinha is known professionally by his name
  ?sinha a dbo:Person ;
         foaf:name ""Shatrughan Sinha""@en .

  # Find movies where both John Cleese and Shatrughan Sinha acted
  ?movie dbo:starring ?cleese .
  ?movie dbo:starring ?sinha .

  # Ensure the movie is also a television show
  ?movie rdf:type dbo:TelevisionShow .
}
```",6,7,7,3,3,3,3,71,0,0,13,0,0.0,0
492,21,train,Give me the death place of Carolyn Jones and death place of the actor of Aladdin (1958 film) and death place of Reed Howes.,SELECT ?result WHERE { <http://dbpedia.org/resource/Reed_Howes> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Aladdin_(1958_film)> <http://dbpedia.org/property/starring> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  # Carolyn Jones
  { 
    VALUES ?person { dbr:Caryn_Jones }
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  }

  UNION

  # Actor of Aladdin (1958 film)
  { 
    ?film dbo:starring ?actor .
    FILTER (?film = dbr:Aladdin_(1958_film))
    OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  }

  UNION

  # Reed Howes
  {
    VALUES ?person { dbr:Reed_Howes }
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
361,3,train,Give me the profession of Frédéric Bouraly.,SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia/Wikidata ID for Frédéric Bouraly. You can find this ID by searching for him on Wikidata or DBpedia.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
687,17,train,"Give me the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Get Marcelo Sarmiento's birthdate
  dbr:Marcelo_Sarmiento dbo:birthday ?marceloSarmientoBirthday .

  # Find a person who is both a soccer player and a soccer manager
  ?person dbo:occupation dbp:Soccer_player ;
          dbo:occupation dbp:Soccer_manager ;
          dbo:birthday ?birthdate .

  # Match the birthdate with Marcelo Sarmiento's birthdate
  FILTER (YEAR(?birthdate) = YEAR(?marceloSarmientoBirthday) &&
          MONTH(?birthdate) = MONTH(?marceloSarmientoBirthday) &&
          DAY(?birthdate) = DAY(?marceloSarmientoBirthday))
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
375,2,train,Give me the war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?person dbo:birthName ""Hidekatsu"" .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""hashiba"") && LANGMATCHES(LANG(?name), ""en"")) .

  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }

  ?event dbo:participant ?person ;
         a dbo:MilitaryConflict ;
         rdfs:label ?eventName .
  
  OPTIONAL {
    ?event dbo:description ?description .
    FILTER(LANGMATCHES(LANG(?description), ""en""))
  }
}
ORDER BY ?eventName
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
742,10,train,"Give me the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?result <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?resident WHERE {
  ?timeZone a dbo:TimeZone ;
            dbo:hasTimeOffset ""EET"" .
  
  ?location dbo:locatedInTimezone ?timeZone ;
            a dbo:Settlement .

  OPTIONAL { ?location dbo:populationTotal ?population . }
  
  ?region dbo:administrativeRegion ?location .
  ?resident dbo:residence ?region .
}
```

This query does the following:
- Identifies time zones with the offset ""EET"".
- Finds settlements located in these time zones.
- Optionally retrieves population data for those locations (if available).
- Determines administrative regions associated with these settlements.
- Retrieves residents of these regions.",2,3,3,2,1,3,2,20,0,0,159,0,0.0,0
585,5,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  OPTIONAL { ?actor dbo:profession dbr/Actress . }
}
```",1,1,2,1,1,3,2,20,0,0,19241,0,0.0,0
633,0,train,Give me the spouse of Renée of Bourbon.,SELECT ?result WHERE { <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Renée_of_Bourbon dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
263,11,train,"Give me the parent of the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Find children of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne
  ?child dbo:parent dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne .
  
  # For each child, find their parents
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
595,3,train,"Give me the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?person { dbr:Hillary_Clinton }
  ?work dbo:author ?person .
  ?work a ?type .
  FILTER (
    (?type = dbo:Book || ?type = dbo:WrittenWork)
  )
}
```",1,3,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
595,0,train,Give me the spouse of Hillary Clinton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q42 dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
668,33,train,"Give me the associated musical artist of $pacely and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the writer of ""The Live Anthology"" who is also a musical artist
  ?writer dbo:work dbr:The_Live_Anthology .
  ?writer rdf:type dbo:MusicalArtist .

  # Find the associated musical artist of $pacely
  ?pacely dbo:associatedWith ?artist .
  ?artist rdf:type dbo:MusicalArtist .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
943,11,train,"Give me the child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Yeshaq I's parent who is royalty
  ?parent a dbo:Monarch ;
          dbo:spouseOrPartner ?yeshaqI .
  
  ?yeshaqI rdfs:label ""Yeshaq I""@en .

  # Ensure the parent is royalty
  ?parent dbo:royaltyOf ?country .

  # Find children of this royal parent
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
399,2,train,Give me the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbp:name ""Emilia Yancheva Valeva""@en . }
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,1,2,1,1,2,2,9,1,1087623,0,9.194353931137966e-07,1.0,1.8388690955062634e-06
816,28,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Doon Arbus and parent of Amy Arbus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring dbr:Herschel_Bernardi .
  ?movie dbo:parent dbr:Doon_Arbus ;
         dbo:parent dbr:Amy_Arbus .

  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Herschel_Bernardi)
}
```

This query does the following:
- It selects movies where Herschel Bernardi is a starring actor.
- It checks if these movies have both Doon Arbus and Amy Arbus listed as parents.
- It retrieves other actors (`?actor`) who starred in these movies, excluding Herschel Bernardi.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
80,6,train,Give me the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?result . },"```sparql
SELECT ?album WHERE {
  wd:Q123456 wdt:P175 ?album .
  FILTER(CONTAINS(LCASE(STR(?album)), ""what you know""))
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for T.I.'s song ""What You Know"". This can be found by querying DBpedia or using a service like Wikidata to get the correct QID.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
263,19,train,"Give me the parent of Mary Elphinstone, Lady Elphinstone and parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and native of the birthplace, that is a region and a country, of William Gayner.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mary_Elphinstone,_Lady_Elphinstone> . <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentMary ?parentPatrick ?region ?country
WHERE {
  # Parents of Mary Elphinstone, Lady Elphinstone
  OPTIONAL { 
    dbr:Mary_Elphinstone_Lady_Elphinstone dbo:parent ?parentMary .
  }
  
  # Parents of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  OPTIONAL {
    dbr:Patrick_Bowes-Lyon_15th_Earl_of_Strathmore_and_Kinghorne dbo:parent ?parentPatrick .
  }

  # Birthplace region and country of William Gayner
  OPTIONAL {
    dbr:William_Gayner dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?country .
    ?birthPlace dbo:region ?region .
  }
}
```",4,6,5,2,3,2,3,28,0,0,2,0,0.0,0
871,12,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of Arthur Stanley (politician).","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:father ?parent .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
225,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Japan .
}
```",1,1,2,1,1,3,2,20,401,2973,8515,0.11885002963841138,0.04497532525796321,0.06525630593978844
375,18,train,Give me the war of Toyotomi Hidenaga and war of the child of Toyotomi Hideyoshi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Toyotomi_Hideyoshi> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Wars involving Toyotomi Hidenaga
  {
    ?person a dbo:Person ;
            foaf:name ""Toyotomi Hidenaga""@en .
    ?event dbo:agent ?person ;
           a dbo:MilitaryConflict ;
           rdfs:label ?war ;
           dbo:description ?description .
  }
  
  UNION
  
  # Wars involving Toyotomi Hideyori (child of Toyotomi Hideyoshi)
  {
    ?person a dbo:Person ;
            foaf:name ""Toyotomi Hideyori""@en .
    ?event dbo:agent ?person ;
           a dbo:MilitaryConflict ;
           rdfs:label ?war ;
           dbo:description ?description .
  }
}
ORDER BY ?war
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
159,7,train,Give me the military force of Battle of Vienna.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"```sparql
SELECT ?militaryForce WHERE {
  wd:Q1234 wdt:P625 ?location. # Assuming Q1234 is the DBpedia item ID for Battle of Vienna
  ?event dbo:militaryForce ?militaryForce.
  ?event rdfs:label ""Battle of Vienna""@en.
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
414,2,train,Give me the award of Rainer Weiss.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rainer_Weiss> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Rainer_Weiss dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
198,10,train,"Give me the war of Amasa Tracy and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?charlestonEntity WHERE {
  # Find Amasa Tracy and his involvement in a war
  ?tracy dbo:occupation ""Union Army officer""@en .
  ?tracy dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation rdfs:label ""Amasa Tracy""@en .

  # Link to the American Civil War
  ?war dbo:participatedIn ?tracy .
  ?war rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""american civil war""))

  # Find an entity in Charleston, South Carolina related to the war
  ?charlestonEntity dbo:location dbr:Charleston,_South_Carolina ;
                   dbo:wikiPageDisambiguates ?disambiguation2 .
  ?disambiguation2 rdfs:label ?entityLabel .
  FILTER(CONTAINS(LCASE(?entityLabel), ""american civil war""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
871,54,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of Arthur Stanley (politician) and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find individuals who are awardees of the Commander of the Royal Victorian Order
  ?awardee dbo:awardReceived dbr:Commander_of_the_Royal_Victorian_Order .
  
  # Arthur Stanley's father
  ?arthur dbr:Arthur_Stanley_(politician) ;
          dbo:father ?father .

  # Edward Stanley, 17th Earl of Derby's parent and their child who is a politician or office holder
  ?edward dbr:Edward_Stanley,_17th_Earl_of_Derby ;
          dbo:parent ?parent .
  
  ?child dbo:parent ?parent ;
         (dbo:officeHolder|dbo:politician) ?office .

  # Find the common person who fits all criteria
  VALUES ?person { ?awardee ?father ?parent }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
295,7,train,"Give me the writer of the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?work WHERE {
  wd:Q1234567 dbo:composer ?person .
  ?person foaf:name ""Apache Indian"" .
  ?work dbo:composer ?person ;
        rdf:type dbo:MusicalWork .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Apache Indian if available.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
595,32,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . },"```sparql
SELECT ?author ?spouse WHERE {
  ?work dcterms:creator ?author ;
        rdf:type dbo:Book .
  ?author foaf:name ""Bill Clinton"" .
  ?author dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Politician ;
          dbo:officeHolder true .
  ?work rdfs:label ""An Invitation to the White House""@en .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
103,41,train,"Give me the professional in  and professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shatrughanProfession ?otherProfessional ?richardGrantWork
WHERE {
  # Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation ?shatrughanProfession .
  
  # Another professional in the same field as Shatrughan Sinha
  ?otherProfessional a ?shatrughanProfession .
  FILTER(?otherProfessional != dbr:Shatrughan_Sinha)
  
  # Richard E. Grant's work as an actor
  dbr:Richard_E._Grant dbo:occupation dbr:Actor .
  ?richardGrantWork dbo:starring dbr:Richard_E._Grant ;
                   a (dbo:Film|dbo:TelevisionSeries) .
}
```",5,6,6,2,3,3,3,71,0,0,13,0,0.0,0
353,36,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Constance of Burgundy and Roger II of Sicily
  ?constance a dbo:Person ;
             dbp:spouse ?rogerII .
  
  ?rogerII a dbo:Person ;
           dbp:spouse ?constance .

  # Spouse's child (Constance's or Roger's spouse)
  ?spouseChild a dbo:Person ;
               dbp:childOf ?spouse .

  # Child of the spouse who is royalty
  ?royalParent a dbo:Person ;
               dbp:parent ?spouseChild ;
               rdf:type/rdfs:subClassOf* dbo:Royalty .

  # Grandchild (child of the child)
  ?grandchild a dbo:Person ;
              dbp:parent ?royalParent .
}
```

This query assumes that DBpedia has structured data for these individuals and their relationships. It uses `dbo:Person`, `dbp:spouse`, `dbp:childOf`, and `rdf:type/rdfs:subClassOf* dbo:Royalty` to navigate through the family tree.",4,5,5,3,2,3,3,71,0,0,3,0,0.0,0
23,2,train,Give me the party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q123456 wdt:P102 ?party .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Gustavo Petro. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,2,3,28,0,0,6,0,0.0,0
89,1,train,Give me the spouse of Saw Shwe Khet.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:name ""Saw Shwe Khet""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
531,56,train,"Give me the office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?marianoRajoyOffice ?albertoRuizGallardonResidence ?partyLeaderOffice
WHERE {
  # Mariano Rajoy's office
  dbr:Mariano_Rajoy dbo:office ?marianoRajoyOffice .

  # Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?albertoRuizGallardonResidence .

  # Miguel Maura's political party
  dbr:Miguel_Maura dbo:memberOfParty ?miguelMauraParty .
  
  # Leader of the party associated with Miguel Maura
  ?partyLeader dbo:leaderOf ?miguelMauraParty .
  ?partyLeader dbo:office ?partyLeaderOffice .

  FILTER (dbo:SOME_CLASS(?miguelMauraParty, dbo:PoliticalParty))
  FILTER (dbo:SOME_CLASS(?partyLeader, dbo:Politician))
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,20,train,"Give me the child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Saw Min Hla's children
  ?sawMinHla dbo:spouse ?parent1 .
  ?parent1 dbo:child ?child .

  # Find Myat Hpone Pyo's father
  ?myatHponePyo dbp:father ?father .

  # Find the spouse of Myat Hpone Pyo's father
  ?father dbo:spouse ?spouse .

  # Ensure the child is royalty and matches the spouse
  FILTER (?child = ?spouse)
  FILTER EXISTS { ?child a dbo:Monarch . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
39,32,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Sam Concepcion's professions
  VALUES (?concepcionProfession) { 
    (dbo:Singer) (dbo:Actor)
  }
  
  # Professionals with the same profession as Sam Concepcion
  ?person dbo:profession ?concepcionProfession .
  
  # The Shadow's alter ego
  ?shadow dbp:alterEgo ""The Gray Man"" .

  # Professionals associated with The Shadow's alter ego
  ?professional dbp:alterEgo ?shadow .
  
  FILTER(?person != ?professional)
}
```

This query:
- Retrieves individuals who share the same profession as Sam Concepcion.
- Finds professionals linked to The Shadow's alter ego, ""The Gray Man"".
- Ensures that the results do not include Sam Concepcion himself.",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
68,6,train,"Give me the father of Isabella of Austria and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?father WHERE {
  wd:Q1198 wdt:P22 ?father .
  OPTIONAL { ?father wdt:P31 wd:Q5 . } # Ensure it is a person
}
```

This query selects the father of Isabella of Austria (identified by DBpedia entity Q1198) and ensures that the result is a person.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
737,16,train,Give me the child of the child of Alexander of Württemberg (1804-1881).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?grandchildLabel WHERE {
  # Find Alexander of Württemberg
  VALUES ?alexander { dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) }
  
  # Find his children
  ?alexander dbo:child ?child .
  
  # For each child, find their children (grandchildren of Alexander)
  ?child dbo:child ?grandchild .

  # Get labels for the grandchildren
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
39,29,train,Give me the professional in the alter ego of The Shadow and professional in Singer and band of Bob Thompson (musician).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgoProfessional ?bobThompsonRole
WHERE {
  # The Shadow's alter ego professional role
  OPTIONAL { 
    dbr:The_Shadow dbo:profession ?alterEgoProfessional .
  }

  # Bob Thompson (musician)'s profession in a band or as a singer
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:singerOfBand ?band .
    BIND(""Singer"" AS ?bobThompsonRole)
  }
  OPTIONAL {
    dbr:Bob_Thompson_(musician) dbo:memberOfBand ?band .
    BIND(""Band Member"" AS ?bobThompsonRole)
  }
}
```",4,4,5,2,3,3,3,71,0,0,3,0,0.0,0
871,25,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley"" ;
          dbo:title dbr:Earl_of_Derby ;
          dbo:number ""17""@en .

  # Step 2: Find his children
  ?child dbo:parent ?edward .
  
  # Step 3: Identify Frederick Stanley, 16th Earl of Derby among those children
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley"" ;
             dbo:title dbr:Earl_of_Derby ;
             dbo:number ""16""@en .

  FILTER(?child = ?frederick)

  # Step 4: Determine which child of Frederick Stanley is a politician
  ?politicianChild dbo:parent ?frederick .
  ?politicianChild dbo:occupation dbr:Politician .

  # Step 5: Find the parent (father) of that child
  ?parent dbo:child ?politicianChild .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
398,1,train,Give me the player in Aleksandr Filimonov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?player dbo:nationality dbr:Russia ;
          foaf:name ""Aleksandr Filimonov""@en .
  OPTIONAL { ?player dbo:memberOfTeam ?team . }
}
```",1,1,2,1,1,3,2,20,0,0,17,0,0.0,0
89,44,train,"Give me the predecessor of the child of Saw Shwe Khet and child of Saw Min Hla and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saw_Min_Hla> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Get children of Saw Shwe Khet and Saw Min Hla
  ?child1 dbo:parent dbr:Saw_Shwe_Khet .
  ?child2 dbo:parent dbr:Saw_Min_Hla .

  # Get Myat Hpone Pyo's father's spouse (likely his mother)
  ?myatHponePyo dbo:father ?father .
  ?father dbo:spouse ?mother .

  # Find a royalty who is a predecessor of both children
  ?predecessor dbo:successor ?child1 ;
               dbo:successor ?child2 ;
               rdf:type dbo:Monarch .

  # Ensure the predecessor is also the spouse of Myat Hpone Pyo's father
  FILTER (?mother = ?predecessor)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
203,50,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warMilitaryForce ?calderEventMilitaryForce
WHERE {
  # Find military force related to a war involving William Bayne
  ?bayne dbo:militaryConflict ?war .
  ?war dbo:militaryForce ?warMilitaryForce .

  # Ensure the war is both a military conflict and an event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .

  # Find military force related to an event involving Robert Calder
  ?calder dbo:participatedIn ?event .
  ?event dbo:militaryForce ?calderEventMilitaryForce .

  # Ensure the event is both a societal event and an event
  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:Event .

  # Link William Bayne and Robert Calder to DBpedia resources
  ?bayne rdfs:label ""William Bayne""@en .
  ?calder rdfs:label ""Robert Calder""@en .
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
531,46,train,"Give me the tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant1 ?tenant2 WHERE {
  # Find the leader of the 2003 Madrid City Council election
  ?leader a dbo:Mayor ;
          dbo:electedAsLeaderOf dbr:Madrid_City_Council_Election_2003 .
  
  # Get their residence
  ?leader dbo:residence ?residence1 .

  # Find who lives there (tenant)
  ?residence1 dbo:resident ?tenant1 .

  # Find the commander in the Central African Republic Civil War
  ?commander a dbo:MilitaryPerson ;
             dbo:officeHolderOf dbr:Central_African_Republic_Civil_War .
  
  # Get their residence
  ?commander dbo:residence ?residence2 .

  # Find who lives there (tenant)
  ?residence2 dbo:resident ?tenant2 .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
58,3,train,Give me the person born as Linda Sue Cobb.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Linda Sue Cobb""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthName ""Linda Sue Cobb""@en .
}
```

This query uses the `dbo:birthName` property to find individuals with the birth name ""Linda Sue Cobb"". The result will include the DBpedia resource for the person and their birth name.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
375,7,train,Give me the war of Hashiba Hidekatsu and entity in Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?relatedEntity WHERE {
  # Find entities related to Hashiba Hidekatsu
  ?hashibaHidekatsu a dbo:Person ;
                    foaf:name ""Hashiba Hidekatsu""@en .

  # Look for events (wars) associated with him
  ?hashibaHidekatsu dbo:participatedIn ?event .
  
  # Filter to ensure the event is a war and related to Japan
  ?event a dbo:MilitaryConflict ;
         dbo:place dbr:Japan .

  OPTIONAL {
    # Find other entities (people, places) related to the event
    ?relatedEntity dbo:participatedIn ?event .
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
737,43,train,"Give me the child of Archduchess Margarete Sophie of Austria and child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of Carl, Duke of Württemberg.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find children of Archduchess Margarete Sophie of Austria
  ?child1 dbo:parent dbr:Archduchess_Margarete_Sophie_of_Austria .
  
  # Find great-grandchildren of Alexander of Württemberg (1804-1881)
  ?greatGrandchild dbo:parent ?grandChild .
  ?grandChild dbo:parent ?child2 .
  ?child2 dbo:parent dbr:Alexander_of_W%C3%BCrttemberg_(1804-1881) .

  # Find predecessor of Carl, Duke of Württemberg
  ?predecessor dbo:successor dbr:C._Duke_of_W%C3%BCrttemberg .
  
  # Find the intersection where a person is both a child and a great-grandchild
  FILTER (?child1 = ?greatGrandchild)
  
  # Ensure this person is also the predecessor of Carl, Duke of Württemberg
  FILTER (?person = ?predecessor)

}
```

This query assumes that DBpedia has structured data for these individuals and their relationships. It identifies a person who is both a child of Archduchess Margarete Sophie of Austria and a great-grandchild of Alexander of Württemberg, and also the predecessor of Carl, Duke of Württemberg.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
119,6,train,Give me the entity in Poland and war of Alexander Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?description WHERE {
  ?entity a dbo:MilitaryConflict ;
         dbo:location dbr:Poland ;
         dbo:commander dbr:Aleksandr_Vasilyevich_Suvorov .
  
  OPTIONAL { ?entity dbo:description ?description . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
816,20,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/occupation> ""Photographer""@en . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentClass WHERE {
  # Find the individual who is a photographer and actor in the specified movie
  ?individual dbo:profession dbr:Photographer .
  ?individual dbo:profession dbr:Actor .
  ?movie dbo:starring ?individual .
  
  FILTER (str(?movie) = ""Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg"")

  # Get the types/classes of this individual
  ?individual a ?type .

  # Find the parent class for each type
  ?type rdfs:subClassOf+ ?parentClass .
  
  FILTER NOT EXISTS { ?parentClass rdfs:subClassOf+ ?other }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
628,57,train,"Give me the band member of Uncle Murda and person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?musicalArtist ?personFromPuertoRico
WHERE {
  # Band member of Uncle Murda
  ?bandMember dbo:memberOf dbr:Uncle_Murda .
  
  # Musical artist from Florida
  ?musicalArtist a dbo:MusicalArtist ;
                dbo:nativePlace dbr:Florida .

  # Person associated with Coro de la Pontificia Universidad Católica de Puerto Rico
  ?personFromPuertoRico dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  
  # Assuming the same person might be linked across these contexts
  FILTER(?bandMember = ?musicalArtist)
  FILTER(?musicalArtist = ?personFromPuertoRico)
}
```

This query attempts to find a single individual who fits all the described roles. However, due to the complexity and potential ambiguity in the question, additional context or refinement might be necessary for precise results.",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
119,0,train,Give me the war of Alexander Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  wd:Q12345 wdt:P31/wdt:P279* wd:Q11850; # Assuming Q12345 is Alexander Suvorov's DBpedia ID and Q11850 is the class for military personnel or general
  wdt:P625 ?location. # Optional, to get location details if needed

  ?war wdt:P127 wd:Q12345; # Wars in which he participated
       wdt:P31 wd:Q13442814. # Assuming Q13442814 is the class for wars
}
```",1,1,2,1,1,3,2,20,0,0,28,0,0.0,0
531,52,train,"Give me the office of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?commanderOffice WHERE {
  # Miguel Maura's office
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Commander's office (assuming a generic resource for commander)
  OPTIONAL { 
    ?commander a dbo:Commander ;
               dbo:office ?commanderOffice .
  }

  # Office holder and politician in Central African Republic Civil War
  OPTIONAL {
    ?person dbo:occupation dbr:Central_African_Republic_Civil_War ;
            rdf:type dbo:Politician ;
            dbo:office ?miguelOffice ;
            dbo:office ?commanderOffice .
  }

  # Tenant of the residence of the leader in 2003 Madrid City Council election
  OPTIONAL {
    ?leader a dbo:Leader ;
            dbo:electedDuring dbr:2003_Madrid_City_Council_election ;
            dbo:residence ?residence .

    ?tenant dbo:residence ?residence ;
            rdf:type dbo:OfficeHolder .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
905,11,train,"Give me the spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?philip dbo:father ?father .
  ?father dbo:spouse ?spouse .

  FILTER(STR(?philip) = ""Philip_I,_Prince_of_Taranto"")
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
412,3,train,Who is the leader of National Party of Greece?,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?leader WHERE {
  wd:Q1118785 dbo:leader ?person .
  ?person foaf:name ?leader .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
270,8,train,"Give me the predecessor of Ada Watson and person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor ?decedent WHERE {
  # Find the predecessor of Ada Watson
  ?ada a dbo:Person ;
       foaf:name ""Ada Watson""@en .
  OPTIONAL { 
    ?role dbo:successor ?ada ;
          dbo:predecessor ?predecessor .
    ?predecessor a dbo:Person .
  }

  # Find the birthplace of Mark Tournier
  ?mark a dbo:Person ;
        foaf:name ""Mark Tournier""@en .
  ?mark dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .

  # Find a person who died at this location
  ?decedent a dbo:Person ;
            dbo:deathPlace ?birthPlace .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
119,9,train,Give me the tenant of Spain and office of Alberto Núñez Feijóo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantLabel ?officeLabel
WHERE {
  # Find the current tenant of Spain (King or Queen)
  ?tenant a dbo:Monarch ;
          dbo:country dbr:Spain .
  
  # Get the label for the tenant
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Find Alberto Núñez Feijóo's office
  ?feijoo a dbo:OfficeHolder ;
          dbo:office dbr:President_of_the_Xunta_de_Galicia ;
          foaf:name ""Alberto Núñez Feijóo""@es .
  
  # Get the label for the office
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query does the following:
- Retrieves the current monarch of Spain.
- Retrieves the office held by Alberto Núñez Feijóo, specifically his role as President of the Xunta de Galicia.
- Uses `SERVICE wikibase:label` to get human-readable labels for both entities.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,4,train,Give me the actor of Color Me Dead.,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film dcterms:title ""Color Me Dead""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
293,1,train,Give me the spouse of Roger Pryor (actor).,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  VALUES ?actor { dbr:Roger_Pryor_(actor) }
  ?actor dbo:spouse ?spouse .
}
```

This query searches for the spouse of Roger Pryor by querying DBpedia's ontology data. It assumes that there is a direct relationship labeled `dbo:spouse` between the actor and his spouse.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
353,61,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Constance of Burgundy and her spouse
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Spouse's child (grandchild of Constance)
  ?spouseChild dbo:parent ?spouse .
  ?spouseChild dbo:royalty ""true""^^xsd:boolean .
  
  # Child's child (great-grandchild of Constance, grandchild of spouse)
  ?grandchild dbo:parent ?spouseChild .

  # Reference related to William I
  ?reference dbo:officeHolder ?office .
  ?reference dbo:royalty ""true""^^xsd:boolean .
  ?reference dbo:relatedTo dbr:William_I_of_Aquitaine .

  # Child of the reference who is royalty
  ?childReference dbo:parent ?reference .
  ?childReference dbo:royalty ""true""^^xsd:boolean .

  # Father of the child of the reference
  ?father dbo:parent ?childReference .
  
  FILTER(?grandchild = ?father)
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
687,50,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://dbpedia.org/ontology/coach> ?v3 . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/property/starring> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_manager .
  
  # Find the film directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?actor .

  # The actor must be a soccer player and an athlete
  ?actor dbo:sport dbr:Soccer ;
         dbo:occupation dbr:Athlete .
  
  # Find the team of the person identified in step 1
  ?person dbo:team ?team .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
140,11,train,"Give me the party member of Republican Party (United States) and commander in the war, that is a societal event, of George Pickett.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . <http://dbpedia.org/resource/George_Pickett> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party ?commanderRole WHERE {
  ?person dbo:memberOf dbr:Republican_Party_(United_States) .
  ?person dbo:occupation dbr:Military_commander .
  ?person dbo:participatedIn dbr:American_Civil_War .
  
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```

This query attempts to find individuals who are members of the Republican Party, have an occupation as a military commander, and participated in the American Civil War. The `OPTIONAL` clause is used to optionally include their name if available.",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
816,36,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of the child of the spouse of Mariclare Costello.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?parent
WHERE {
  # Step 1: Find the actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?film dbo:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en .
  ?film dbo:starring ?actor .

  # Step 2: Identify the spouse of Mariclare Costello
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 3: Determine the child of that spouse
  ?child dbo:parent ?spouse .
  
  # Step 4: Find the parent of that child
  ?child dbo:parent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
706,12,train,Give me the birthplace of Ebrahim Alkazi and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Ebrahim_Alkazi> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Ebrahim_Alkazi 
    dbr:Soumitra_Chatterjee
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
78,19,train,"Give me the band member of The Alan Parsons Project and associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?stuartAssociatedArtist ?billyAssociatedArtist
WHERE {
  # Find band members of The Alan Parsons Project
  ?bandMember dbo:musicalArtist dbr:The_Alan_Parsons_Project .
  
  OPTIONAL {
    # Find associated musical artists of Stuart McBeath Tosh
    ?stuart dbr:Stuart_McBeath_Tosh dbo:associatedMusicalArtist ?stuartAssociatedArtist .
  }
  
  OPTIONAL {
    # Find associated musical artists of Billy Lyall
    ?billy dbr:Billy_Lyall dbo:associatedMusicalArtist ?billyAssociatedArtist .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
293,15,train,Give me the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?countryLabel ?rulingPartyLabel WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)
  
  ?landmark dbo:location dbr: :Country .

  OPTIONAL { 
    ?country dbp:government ?government .
    ?government dbo:rulingParty ?rulingParty .
    BIND(STR(?rulingParty) AS ?rulingPartyLabel)
  }

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
198,29,train,"Give me the entity in Charleston, South Carolina and force of the awardee of Gillmore Medal and war of Amasa Tracy.","SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?location ?medal ?war WHERE {
  ?entity dbo:birthPlace dbr:Charleston,_South_Carolina ;
         dbo:honoraryTitle ""Gillmore Medal"" ;
         dbo:associatedWithWar ?war .
  
  OPTIONAL { ?entity dbp:award ""Gillmore Medal"". }
  
  ?location rdfs:label ""Charleston, South Carolina""@en .
  ?war dbo:participatedIn dbr:American_Civil_War ;
       dbo:commander dbr:Amasa_Tracy .

}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
  
- **SELECT Clause**: We select the entity, its location, the medal awarded, and the war associated.

- **Entity Conditions**:
  - `?entity dbo:birthPlace dbr:Charleston,_South_Carolina`: Ensures the entity is from Charleston, South Carolina.
  - `?entity dbo:honoraryTitle ""Gillmore Medal""`: Checks if the entity has received the Gillmore Medal.
  - `?entity dbo:associatedWithWar ?war`: Links the entity to a war.

- **Optional Award**: We use an optional clause to check for the award property, which might not always be present in the same way.

- **Location and War Conditions**:
  - `?location rdfs:label ""Charleston, South Carolina""@en`: Ensures we are referring to Charleston, South Carolina.
  - `?war dbo:participatedIn dbr:American_Civil_War; dbo:commander dbr:Amasa_Tracy`: Links the war to Amasa Tracy and specifies it as the American Civil War.

This query aims to find entities that match all these criteria in DBpedia.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
386,5,train,Give me the awardee of Golden Sword for Bravery.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
         dbo:name ""Golden Sword for Bravery""@en .
  ?award dbo:recipient ?awardee .
}
```

This query does the following:
- It selects entities (`?awardee`) that are recipients of an award.
- The `?award` variable represents awards, and it is filtered to include only those with the name ""Golden Sword for Bravery.""
- The `dbo:recipient` property links the award to its awardees.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
39,14,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band
WHERE {
  ?person foaf:name ""Robert Lamar Thompson""@en .
  ?person dbo:occupation dbr:Musical_artist .
  ?person dbo:musicBand ?band .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
769,12,train,"Give me the player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team and player in Ye Jia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:sportManager ?team .
  ?team rdfs:label ""Hong Kong C Team""@en .
  
  OPTIONAL { 
    ?person dbo:playerInSportTeam ?yeJia .
    ?yeJia rdfs:label ""Ye Jia""@en .
  }
}
```

This query attempts to find a person who is a sports manager of the Hong Kong C Team and checks if they have any association with Ye Jia as a player. Note that exact property names might vary, so adjustments may be necessary based on DBpedia's current schema.",3,5,4,2,2,3,2,20,0,0,2,0,0.0,0
225,3,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
SELECT ?region WHERE {
  wd:Q11173 wdt:P282 ?timezone.
  ?timezone wdt:P31/wdt:P279* wd:Q11424. # Q11424 is the DBpedia item for ""time zone""
  ?timezone wdt:P131 ?location.
  ?location wdt:P30 ?region.
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,55,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in the profession of Sam Concepcion.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowProfession ?wayneBand ?concepcionProfession
WHERE {
  # The Shadow's alter ego profession
  dbr:The_Shadow dbo:profession ?shadowProfession .

  # Robert Lamar Thompson (Lil Wayne) band
  dbr:Lil_Wayne dbo:band ?wayneBand .

  # Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?concepcionProfession .
}
```",6,7,7,2,3,3,3,71,0,0,4,0,0.0,0
756,39,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?club ?nationality WHERE {
  ?person a dbo:SoccerManager ;
          dbo:birthDate ""1968-08-26""^^xsd:date ;
          dbo:nationality dbr:West_Germany .
  
  ?person dbo:managerOfSeason ?season .
  ?season dbo:team ?club .

  OPTIONAL { ?person dbp:nativeName ?nationality }
}
```",4,8,5,3,2,3,3,71,0,0,3,0,0.0,0
782,34,train,Give me the associated musical artist of Nick Curran and reference to the real name of the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranArtist ?kimWilsonBand
WHERE {
  # Find associated musical artist of Nick Curran
  OPTIONAL { 
    dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .
  }
  
  # Find the band associated with Kim Wilson
  OPTIONAL {
    dbr:Kim_Wilson dbo:band ?kimWilsonBand .
  }
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
628,0,train,Give me the band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Uncle Murda""@en .
  
  OPTIONAL { 
    ?artist dbo:member ?bandMember .
  }
}
```

This query attempts to find any entities related to Uncle Murda as a musical artist and checks if there are any members associated with him. Note that the availability of such detailed information depends on how well DBpedia is populated for this specific artist.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
103,55,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of Shatrughan Sinha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # The Shadow's alter ego is Lamont Cranston
  dbr:Lamont_Cranston dbo:alterEgoOf dbr:The_Shadow .
  
  # Richard E. Grant in ""Withnail and I""
  dbr:Richard_E._Grant dbo:starringIn dbr:Withnail_and_I .
  
  # Withnail and I is a movie adapted into a TV show
  dbr:Withnail_and_I dbo:adaptationOf ?tvShow .
  
  # Shatrughan Sinha's profession is actor
  dbr:Shatrughan_Sinha dbo:profession dbr:Actor .

  # Find the actor who fits all criteria
  ?actor dbo:alterEgoOf dbr:The_Shadow ;
         dbo:starringIn dbr:Withnail_and_I ;
         dbo:profession dbr:Actor .
}
```",6,7,7,2,3,3,3,71,0,0,13,0,0.0,0
492,9,train,Give me the death place of Sal Mineo and death place of Carolyn Jones.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sal_Mineo> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Carolyn_Jones> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  VALUES ?person { 
    dbr:Sal_Mineo 
    dbr:Carolyn_Jones 
  }
  
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
595,34,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in Third Taiwan Strait Crisis.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find works associated with Hillary Clinton
  ?work dbo:author dbr:Hillary_Clinton .
  
  # Identify the commander in the Third Taiwan Strait Crisis
  ?event dbo:commander ?commander .
  FILTER (str(?event) = ""Third_Taiwan_Strait_Crisis""^^xsd:string)
  
  # Find a book related to both Hillary Clinton and the commander
  ?work dbo:subject ?commander ;
        rdf:type dbo:Book .

  # Ensure the author is also a politician and office holder
  ?author dbo:author ?work .
  ?author dbo:occupation dbr:Politician ;
          dbo:officeHolder true .

  # Find the spouse of this author
  ?author dbo:spouse ?spouse .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
198,13,train,Give me the force of the awardee of Gillmore Medal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?force WHERE {
  ?person dbo:award dbr:Gillmore_Medal .
  OPTIONAL { ?person dbo:fieldOfStudy ?field . FILTER regex(?field, ""physics"", ""i"") }
  OPTIONAL { ?person dbo:knownFor ?work . FILTER regex(?work, ""force"", ""i"") }
  OPTIONAL {
    ?person dbo:wikiPageRedirects ?redirect .
    ?redirect dbo:wikiPageRedirects ?actualPerson .
    ?actualPerson dbo:fieldOfStudy ?field .
    FILTER regex(?field, ""physics"", ""i"")
  }
}
LIMIT 10
```

This query does the following:
- Searches for individuals (`?person`) who have been awarded the Gillmore Medal.
- Optionally checks if their field of study or known work is related to physics or force.
- Includes a redirect check in case the person's page has been redirected, which can help find relevant information.",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
293,27,train,Give me the person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?person WHERE {
  # Find Tisha Sterling's parents
  ?tishaSterling a dbo:Person ;
                 foaf:name ""Tisha Sterling""@en .
  
  OPTIONAL { 
    ?parent dbo:child dbr:Tisha_Sterling ; 
            foaf:name ?parentName .
    
    # Find individuals with the same birth name as Tisha's parents
    ?person dbo:birthName ?parentName ;
            a dbo:Person .
  }
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
859,0,train,Give me the band member of Human Remains (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
SELECT ?member WHERE {
  wd:Q1234567 wdt:P31 wd:Q482980 . # Human Remains is a band (replace Q1234567 with actual DBpedia ID for Human Remains)
  wd:Q1234567 wdt:P136 ?band. # Human Remains has members
  ?member wdt:P106 wd:Q33999 ; # ?member is a musician
          wdt:P463 ?band . # ?member is a member of the band
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
668,28,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?v1 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?stormzyProfession ?fuseAssociatedArtist WHERE {
  # Find Stormzy's profession as a musician
  dbr:Stormzy dbo:occupation ?stormzyProfession .
  FILTER(CONTAINS(LCASE(STR(?stormzyProfession)), ""musician""))

  # Find Fuse ODG and his associated musical artists
  dbr:Fuse_ODG dbo:associatedMusicalArtist ?fuseAssociatedArtist .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,57,train,"Give me the professional in the alter ego of The Shadow and actor of the album of the work, that is a song and a musical work, of T.I. and actor of Shelby Oaks.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/ontology/album> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Roger Corman directed films featuring Michael Jace
  ?film dbo:director dbr:Roger_Corman .
  ?film dbo:starring dbr:Michael_Jace .

  # Roger Corman is the professional we are looking for
  ?person rdfs:label ""Roger Corman""@en .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
628,22,train,"Give me the band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?nativePlace WHERE {
  # Find band members of Uncle Murda
  ?bandMember dbo:memberOf dbr:Uncle_Murda .
  
  # Find the native place that is a region, American, state, and settlement
  ?nativePlace dbo:type ?type1 .
  ?nativePlace dbo:type ?type2 .
  ?nativePlace dbo:type ?type3 .
  ?nativePlace dbo:type ?type4 .

  FILTER(?type1 IN (dbr:Region, dbr:American_Region))
  FILTER(?type2 = dbr:State)
  FILTER(?type3 = dbr:Settlement)
  
  # Link the band member to their native place
  ?bandMember dbo:nativePlace ?nativePlace .
  
  # Optional: Find a connection to Coro de la Pontificia Universidad Católica de Puerto Rico
  OPTIONAL {
    ?award dbo:recipient ?coro .
    ?coro rdfs:label ""Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico""@en .
  }
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
472,5,train,Who is the mayor of Duchy of Schleswig?,SELECT ?result WHERE { <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?position WHERE {
  ?region rdfs:label ""Schleswig""@en .
  OPTIONAL { 
    ?region dbo:mayor ?mayor .
    ?mayor dbo:position ?position .
  }
}
```

This query attempts to find any entity labeled as ""Schleswig"" and checks if there is a mayor associated with it, along with their position. Note that due to the historical nature of Schleswig, this might not return results.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
159,26,train,Give me the reference to the writer of the work of George Ducas.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:artist dbr:George_Ducas .
  ?work dbo:creator ?author .
}
```",3,3,4,3,1,3,3,71,0,0,98450,0,0.0,0
159,5,train,Give me the work of George Ducas.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> ""George Ducas""@en . }","```sparql
SELECT ?work WHERE {
  wd:Q1234568 dbo:work ?work .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for George Ducas. You can find this by searching for George Ducas on DBpedia or using a SPARQL query to retrieve his QID.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,6,train,"Give me the residence, that is a country, of Álvaro Quirós.",SELECT ?result WHERE { <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX schema: <http://schema.org/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Álvaro Quirós""@en .
  
  ?person dbo:residence ?residence .

  FILTER (?residence rdf:type schema:Country)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
943,52,train,"Give me the child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and reference to the alter ego of The Shadow and father of Baeda Maryam I.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?commander dbo:parent ?parent .
  ?parent a dbo:Monarch .
  
  ?alterEgo rdfs:label ""Lamont Cranston""@en .
  ?father rdfs:label ""Lebna Dengel""@en .
  
  ?commander rdfs:label ""Ahmad ibn Ibrahim al-Ghazi""@en .
  ?parent dbr:Lebna_Dengel .
  
  ?child dbo:parent ?parent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
103,59,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Find Richard Grant Esterhuysen who is an actor
  ?person a dbo:Actor ;
          foaf:name ""Richard Grant Esterhuysen""@en .
  
  # Step 2: Identify the television show he acted in
  ?tvShow dbo:starring ?person .

  # Step 3: Find the politician associated with ""Ab Kya Hoga""
  ?politician a dbo:Politician ;
              foaf:name ?name .
  ?show dbr:Ab_Kya_Hoga dbo:starring ?politician .
  
  # Step 4: Find the movie where both the actor and the politician acted
  ?movie dbo:starring ?person, ?politician .
}
```",6,8,7,3,2,3,3,71,0,0,28,0,0.0,0
347,2,train,"Give me the child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""Ferdinand_II,_Holy_Roman_Emperor"")
  
  OPTIONAL { ?spouse dbo:child ?child . }
  OPTIONAL { ?person dbo:child ?child . }

  FILTER (!isBlank(?child))
}
```

This query checks for children of Ferdinand II by looking at both his spouse and himself as potential parents. It filters out blank nodes to ensure only valid individuals are returned.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
609,24,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace
WHERE {
  VALUES ?person { 
    dbr:Cecilie_Bell 
    dbr:Glenn_Youngkin 
  }
  
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```",3,4,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
905,0,train,Give me the spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1113 wdt:P26 ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
78,17,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack) and band member of The Alan Parsons Project.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find artists associated with Wizards of Waverly Place soundtrack
  ?soundtrack dbo:workExample ?album .
  ?album dbo:genre dbr:Soundtrack .
  ?album dbo:title ""Wizards of Waverly Place (soundtrack)""@en .

  # Ensure the artist is involved in the soundtrack
  ?artist dbo:associatedBandOrMusicalArtist ?soundtrack .

  # Check if the artist is a member of The Alan Parsons Project
  ?bandMember dbo:member ?artist .
  ?bandMember dbr:The_Alan_Parsons_Project .

}
```

This query does the following:
- It identifies albums associated with ""Wizards of Waverly Place (soundtrack)"" using DBpedia's ontology.
- It checks for artists linked to this soundtrack.
- It verifies if these artists are also members of ""The Alan Parsons Project.""",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
347,7,train,"Give me the child, that is a royalty, of Maria Anna of Bavaria (born 1574).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Maria Anna of Bavaria (born 1574)
  VALUES ?mariaAnna { dbr:Maria_Anna_of_Bavaria_(1574-1616) }
  
  # Find her children
  ?mariaAnna dbo:child ?child .
  
  # Filter for those who are royalty
  ?child a dbo:Monarch ;
         dbo:country ?country .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
871,17,train,"Who is the child, that is a politician, of the alumnus of Eton College?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?parent WHERE {
  ?child dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""politician"")) .

  ?child dbo:childOf ?parent .

  ?parent dbo:almaMater <http://dbpedia.org/resource/Eton_College> .
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
782,57,train,"Give me the reference to The Fabulous Thunderbirds and band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?bandMemberName WHERE {
  # Find Nicholas Michael Curran
  ?curran a dbo:MusicalArtist ;
          foaf:birthday ""1945-03-30""^^xsd:date ;
          foaf:name ""Nicholas Michael Curran""@en .

  # Find The Fabulous Thunderbirds band members who are musical artists
  ?bandMember dbo:memberOf dbr:The_Fabulous_Thunderbirds ;
              a dbo:MusicalArtist .
  
  # Get the name of each band member
  ?bandMember foaf:name ?bandMemberName .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
288,7,train,"Give me the theme of Dikhawa and native of the figure known, that is a settlement and Pakistani, as The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""The Heart of Pakistan, Paris of the East, City of Gardens, City of Literature""@en . <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Pakistan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme ?figure ?nickname 
WHERE {
  # Find the entity for Lahore
  VALUES ?city { dbr:Lahore }

  # Get themes associated with Lahore
  ?city dbo:wikiPageWikiLink ?theme .

  # Get notable figures (native of) associated with Lahore
  ?figure dbo:nativePlace ?city .
  
  # Get nicknames for Lahore
  ?city dbo:commonName ?nickname .
  
  FILTER (
    ?nickname IN (""The Heart of Pakistan"", ""Paris of the East"", ""City of Gardens"", ""City of Literature"")
  )
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
756,2,train,Give me the manager of 2020–21 SBV Vitesse season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:season ""2020–21"" .
  ?team dbo:clubName ""SBV Vitesse"" .
  ?team dbo:manager ?manager .
}
```

This query assumes that the relevant properties for a team's season and manager are `dbo:season` and `dbo:manager`, respectively. It searches for entries related to SBV Vitesse in the specified season.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
531,16,train,"Give me the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Identify Manuel Pinto da Costa
  dbr:Manuel_Pinto_da_Costa a dbo:Person ;
                             dbo:memberOf ?organization .

  # Find military conflicts involving him
  ?conflict dbo:participant ?organization ;
            a dbo:MilitaryConflict .

  # Determine commanders of these conflicts
  ?conflict dbo:commander ?commander .

  # Ensure the commander is an office holder and politician
  ?commander a dbo:Politician, dbo:OfficeHolder .
}
```",2,6,3,2,1,3,3,71,0,0,179,0,0.0,0
531,42,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find the leader of the Conservative Republican Party (Spain)
  ?leader dbo:partyLeaderOf dbr:Conservative_Party_(Spain) .
  
  # Ensure this leader is a politician
  ?leader rdf:type dbo:Politician .

  # Get the office held by this leader
  ?leader dbo:office ?office .

  # Find the residence of Alberto Ruiz-Gallardón
  ?residence dbo:resident dbr:Alberto_Ruiz-Gallardón .
  
  # Ensure there is a connection between the leader and the residence
  ?leader dbo:residence ?residence .

  # Get the office held by Mariano Rajoy
  ?marianorajoyoffice dbo:office dbr:Mariano_Rajoy .
  
  # Ensure the leader's office is related to Mariano Rajoy's office
  ?office dbo:sameAs ?marianorajoyoffice .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
246,12,train,"Give me the parent of Princess Sara bint Faisal and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent1 ?parent2 WHERE {
  # Find Princess Sara bint Faisal
  ?sara a dbo:Person ;
        dbp:name ""Princess Sara bint Faisal""@en .
  
  # Find her parent
  ?sara dbo:childOf ?parent1 .

  # Find Prince Faisal bin Hussein
  ?faisal a dbo:Person ;
          dbp:name ""Prince Faisal bin Hussein""@en .

  # Find his children who are royalty
  ?child a dbo:Person ;
         dbo:childOf ?faisal ;
         (dbo:spouse|dbo:child) ?royalChild .
  
  # Ensure the child is also royalty
  ?royalChild a dbo:RoyalFamilyMember .

  # Find the parent of this royal child
  ?royalChild dbo:parent ?parent2 .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,10,train,Give me the death place of the actor of Color Me Dead.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?deathPlace WHERE {
  # Find the movie resource for ""Color Me Dead""
  dbr:Color_Me_Dead dbo:starring ?actor .
  
  OPTIONAL {
    ?actor dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,2,1,2,3,28,3,2,0,0.6,1.0,0.7499999999999999
119,8,train,"Give me the entity in the residence, that is a country, of Dawid Olejniczak.",SELECT ?result WHERE { <http://dbpedia.org/resource/Dawid_Olejniczak> <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dawid Olejniczak"" .
  ?person dbo:residence ?location .
  ?location dbo:country ?country .
  FILTER (isLiteral(?country) = false)
}
```

This query does the following:
- It looks for an entity `?person` that is of type `dbo:Person` and has a name ""Dawid Olejniczak"".
- It then finds the residence of this person (`?location`) using the property `dbo:residence`.
- From this location, it retrieves the country associated with it using `dbo:country`.
- The filter ensures that the result is an entity (not a literal), which helps in identifying countries as entities.",2,3,3,2,1,3,2,20,0,0,108,0,0.0,0
225,8,train,"Give me the birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?birthPlace WHERE {
  # Find individuals who have received the Anita Borg Institute Women of Vision Award
  ?award dbo:recipient ?person .
  ?person a dbo:Person .

  # Filter for Japanese nationality
  ?person dbp:nationality dbr:Japan .

  # Get birthplace information
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }

  # Ensure the award is specifically related to Anita Borg Institute Women of Vision Awards
  ?award rdfs:label ?awardLabel .
  FILTER(CONTAINS(LCASE(?awardLabel), ""anita borg institute women of vision awards""))
}
ORDER BY ?awardee",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
943,54,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of the parent, that is a royalty, of Yeshaq I and father of Baeda Maryam I.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Find Lamont Cranston and his alter ego
  dbr:Lamont_Cranston dbo:alias dbr:The_Shadow .
  
  # Find Dawit I as the father of Yeshaq I
  dbr:Yeshaq_I dbo:father dbr:Dawit_I .

  # Bind The Shadow to ?alterEgo
  ?alterEgo rdfs:label ""The Shadow""@en .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
531,55,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v3 . ?v2 <http://dbpedia.org/property/office> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v3 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v5 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeLeader ?tenantResidence ?commanderOffice
WHERE {
  # Leader of the Conservative Republican Party (Spain)
  ?leader a dbo:Politician ;
          dbo:partyMemberOf dbr:Conservative_Party_(Spain) .
  
  # Office held by this leader
  ?leader dbo:holdsPublicOffice ?officeLeader .

  # Tenant of Alberto Ruiz-Gallardón's residence
  ?tenant dbo:residence dbr:Alberto_Ruiz-Gallardón ;
          dbo:holdsPublicOffice ?tenantResidence .
  
  # Commander in the Central African Republic Civil War
  ?commander a dbo:Politician, dbo:Commander ;
             dbo:officeHolderOf ?commanderOffice ;
             dbo:involvedIn dbr:Central_African_Republic_Civil_War_(2012–present) .

}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
905,53,train,"Give me the child of the child, that is a royalty, of Béla IV of Hungary and parent of Charles Martel of Anjou and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Béla IV of Hungary and his children
  dbr:Béla_IV_of_Hungary dbo:spouse ?parent1 .
  
  ?parent1 dbo:child ?child1 .

  # Child of Béla IV's child who is royalty
  ?child1 dbo:child ?childOfChild .
  ?childOfChild a dbo:Monarch .

  # Charles Martel of Anjou and his parent
  dbr:Charles_Martel_of_Anjou dbo:parent ?charlesParent .

  # Spouse of the parent of Charles Martel, who is also the father of the parent (royalty) of Philip, Despot of Romania
  ?charlesParent dbo:spouse ?spouse .
  
  ?spouse dbo:child ?philipParent .
  ?philipParent a dbo:Monarch .

  dbr:Philip,_Despot_of_Romania dbo:parent ?philipParent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
119,38,train,"Give me the tenant of the residence, that is a country, of Álvaro Quirós and tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Álvaro Quirós as a person in DBpedia
  dbr:Álvaro_Quirós dbo:nationality ?nationality .
  
  # Find the country of residence (assuming it's linked to nationality)
  OPTIONAL { dbr:Álvaro_Quirós dbo:residenceCountry ?country . }
  
  # Ensure the party is associated with Spain
  dbr:Spanish_Socialist_Workers'_Party dbo:country dbr:Spain .
  
  FILTER (?nationality = dbr:Spain || ?country = dbr:Spain)
}
```

This query does the following:
- Identifies Álvaro Quirós and checks his nationality.
- Optionally finds a direct link to his country of residence if available in DBpedia.
- Ensures that the Spanish Socialist Workers' Party is associated with Spain.
- Filters results to ensure either his nationality or residence country is Spain.",4,6,5,2,2,3,3,71,0,0,23,0,0.0,0
103,12,train,Give me the professional in  and professional in Actor.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?name WHERE {
  ?actor a dbr:Actor .
  OPTIONAL { ?actor dbo:name ?name . }
}
ORDER BY ?name",2,2,3,1,2,3,3,71,0,0,4210,0,0.0,0
293,46,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of the ruling party in the landmark at elevation of 20.116800000000001347.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find the actor of ""1,000 Dollars a Minute""
  ?movie dbo:title ""1,000 Dollars a Minute""@en .
  ?movie dbo:starring ?actor .

  # Find the landmark at elevation 20.1168
  ?landmark dbo:elevation ""20.116800000000001347""^^xsd:float ;
            dbo:locationCountry ?country .

  # Get the ruling party of the country where the landmark is located
  ?party dbp:country ?country ;
         dbp:isRulingParty true .

  # Find the spouse of the actor who is a member of this party
  ?actor dbo:spouse ?spouse .
  ?spouse dbo:memberOf ?party .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
78,4,train,"Give me the writer, that is a musical artist and an artist, of Wizards of Waverly Place (soundtrack).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Wizards_of_Waverly_Place_(soundtrack)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writer WHERE {
  # Find the soundtrack resource
  dbr:Wizards_of_Waverly_Place_(soundtrack) dbo:composer ?writer .
  
  # Ensure the writer is also a musical artist and an artist
  ?writer a dbo:MusicalArtist ;
         a dbo:Artist .
}
```",1,3,2,1,1,2,3,28,0,0,13,0,0.0,0
782,1,train,Give me the band of Kim Wilson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:name ""Kim Wilson""@en .
  ?person dbo:memberOf ?band .
}
```

This query searches for a person named Kim Wilson and retrieves the bands they are associated with.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
249,8,train,"Give me the native of the birthplace, that is a country, of Shobhna Samarth and native of Jamshedpur.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Shobhna_Samarth> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeLanguageShobhna ?nativeLanguageJamshedpur
WHERE {
  # Shobhna Samarth's birthplace
  dbr:Shobhna_Samarth dbo:birthPlace ?shobhnaBirthPlace .
  
  # Check if the birthplace is a country and get its native language
  ?shobhnaBirthPlace rdf:type dbo:Country .
  ?shobhnaBirthPlace dbp:nativeLanguage ?nativeLanguageShobhna .

  # Jamshedpur's information
  dbr:Jamshedpur dbo:country dbr:India .
  
  # Get India's native language
  dbr:India dbp:nativeLanguage ?nativeLanguageJamshedpur .
}
```",3,4,4,2,2,2,2,9,0,0,22,0,0.0,0
361,1,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:fieldOfStudy dbr:Medicine .
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
103,40,train,"Give me the actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen and professional in Actor and professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Richard Grant Esterhuysen's DBpedia resource
  ?person a dbo:Actor ;
          foaf:name ""Richard Grant Esterhuysen"" ;
          dbp:birthday ?birthday .

  # Ensure the person is an actor
  ?person dbo:profession dbr:Actor .

  # Find movies that are also television shows
  ?movie dbo:genre dbr:Television_show ;
         dbo:starring ?actor .

  # Link the movie to a TV show adaptation
  ?tvShow dbo:basedOn ?movie ;
          a dbo:TelevisionSeries .

  # Ensure the actor is associated with both the movie and the TV show
  ?actor dbo:profession dbr:Actor ;
         foaf:name ?name .
}
```",5,6,6,3,3,3,3,71,0,0,9,0,0.0,0
159,60,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac as a commander in the Battle of Vienna
  dbr:Micha%C5%82_Kazimierz_Pac dbo:commanderOf dbr:Battle_of_Vienna .

  # Find successors who are commanders in the same event
  ?successor dbo:commanderOf dbr:Battle_of_Vienna .
  
  # Ensure the successor is a politician and office holder
  ?successor a dbo:Politician ;
             dbo:officeHolder true .

  # Ensure the successor is distinct from Michał Kazimierz Pac
  FILTER (?successor != dbr:Micha%C5%82_Kazimierz_Pac)
}
ORDER BY ?successor",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
782,18,train,Give me the band of Kim Wilson and associated musical artist of Nick Curran and reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandKimWilson ?artistNickCurran ?referenceThunderbirds
WHERE {
  # Find the band associated with Kim Wilson
  OPTIONAL {
    ?kimWilson a dbo:MusicArtist ;
               foaf:name ""Kim Wilson"" .
    ?kimWilson dbo:memberOf ?bandKimWilson .
  }

  # Find the musical artist associated with Nick Curran
  OPTIONAL {
    ?nickCurran a dbo:MusicArtist ;
                foaf:name ""Nick Curran"" .
    ?nickCurran dbo:associatedBand ?artistNickCurran .
  }
  
  # Reference to The Fabulous Thunderbirds
  ?referenceThunderbirds a dbo:MusicalGroup ;
                         foaf:name ""The Fabulous Thunderbirds"" .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
78,12,train,Give me the associated musical artist of Stuart Tosh and band member of The Alan Parsons Project and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES (?person) { 
    dbr:Stuart_Tosh 
    dbr:Billy_Lyall 
  }
  
  ?person dbo:musicalArtist dbr:The_Alan_Parsons_Project .
  ?person dbo:associatedMusicalArtist ?artist .
}
```

This query does the following:
- It uses `PREFIX` to define common namespaces for DBpedia ontology (`dbo`) and resources (`dbr`).
- The `SELECT` statement specifies that we want to retrieve the associated musical artists.
- The `VALUES` clause lists the individuals of interest: Stuart Tosh and Billy Lyall.
- The query checks if these individuals are linked as a musical artist to The Alan Parsons Project.
- It then retrieves any associated musical artists for each individual.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
943,53,train,"Give me the reference to  and father of the father, that is a royalty and an office holder, of Na'od and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Na'od's father
  ?naodFather a dbo:Monarch ;
              dbo:spouse ?naodMother ;
              dbo:child ?naod .
  
  # Na'od's grandfather (father of Na'od's father)
  ?naodGrandfather a dbo:Monarch ;
                  dbo:child ?naodFather .

  # Commander in Siege of Mukha
  ?commander a dbo:Commander ;
             dbo:event dbr:Siege_of_Mukha ;
             dbo:parent ?commanderParent .
  
  # Parent of the commander (must be royalty)
  ?commanderParent a dbo:Monarch .

  # Ensure Na'od's grandfather is also the parent of the commander
  FILTER (?naodGrandfather = ?commanderParent)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
723,0,train,Give me the band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
SELECT ?member WHERE {
  wd:Q152580 bandMember ?band.
  ?band wdt:P31 wd:Q482994. # Q482994 is the class for musical groups
  ?band wdt:P175 wd:Q152580. # Mudvayne's DBpedia ID is Q152580
  ?member wdt:P106 wd:Q215380. # P106 is the property for occupation, and Q215380 is the class for musicians
  ?member wdt:P463 ?band.
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
119,2,train,"Give me the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find ""The Force"" as a television show
  OPTIONAL { 
    VALUES ?showType { dbr:The_Force_(TV_series) }
    ?show dbo:type ?showType .
    ?show rdfs:label ?forceLabel .
    FILTER (lang(?forceLabel) = 'en' && regex(str(?forceLabel), ""The Force"", ""i""))
  }

  # Find ""The Force"" as a military conflict
  OPTIONAL { 
    VALUES ?conflictType { dbr:The_Force_(military_conflict) }
    ?conflict dbo:type ?conflictType .
    ?conflict rdfs:label ?forceLabel .
    FILTER (lang(?forceLabel) = 'en' && regex(str(?forceLabel), ""The Force"", ""i""))
  }

  # Find Maria I of Portugal
  OPTIONAL {
    VALUES ?mariaI { dbr:Maria_I_of_Portugal }
    ?maria dbo:spouseOrPartner ?partner .
    ?maria rdfs:label ?mariaILabel .
    FILTER (lang(?mariaILabel) = 'en' && str(?mariaILabel) = ""Maria I of Portugal"")
  }

  # Link the entities
  OPTIONAL {
    ?show dbo:relatedTo ?conflict .
    ?conflict dbo:relatedTo ?maria .
  }
}
```",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
353,51,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # William I of Sicily's children who are royalty
  ?child1 dbo:parent dbr:William_I_of_Sicily .
  ?child1 a dbo:Monarch .

  # Constance of Burgundy's spouse and their children
  ?spouse dbo:spouse dbr:Constance_of_Burgundy .
  ?grandchild dbo:parent ?spouse .
  
  # Filter grandchildren who are royalty
  ?grandchild a dbo:Monarch .

  # Find the father of this royal grandchild
  ?father dbo:parent ?grandchild .

  # Ensure the child and grandchild are the same person
  FILTER(?child1 = ?grandchild)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
737,3,train,"Give me the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Helena, Archduchess of Austria""@en .
  FILTER NOT EXISTS { ?spouse rdf:type dbo:Person } # Ensures spouse is not a generic person
  OPTIONAL { 
    ?spouse rdf:type/rdfs:subClassOf* dbo:Royalty .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,45,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state) and person born as Ackquille Jean Pollard and band member of Uncle Murda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v0 <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardNative WHERE {
  ?award dbo:nativeOf ?native .
  
  FILTER (CONTAINS(LCASE(STR(?native)), ""region"") &&
          CONTAINS(LCASE(STR(?native)), ""american"") &&
          CONTAINS(LCASE(STR(?native)), ""state"") &&
          CONTAINS(LCASE(STR(?native)), ""settlement""))

  ?band dbo:award ?award .
  
  FILTER (CONTAINS(LCASE(STR(?band)), ""new york (state)""))
  
  ?person dbo:birthName ""Ackquille Jean Pollard"" ;
          dbo:memberOfBand ?band .

  ?uncleMurda dbo:birthName ""Uncle Murda"" ;
              dbo:memberOfBand ?band .
}
```",5,10,6,3,3,3,3,71,0,0,1,0,0.0,0
293,24,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and person born as Harriette Arlene Lake.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Harriet Andersson""@en ;
          dbp:birthName ""Harriette Arlene Lake"" .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,57,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?calderForce ?bayneWar
WHERE {
  # Find Robert Calder's military force
  dbr:Robert_Calder a dbo:MilitaryPerson ;
    dbo:militaryConflict ?calderEvent .
  ?calderEvent dbo:participatedInMilitaryForce ?calderForce .

  # Ensure the event is both an event and a societal event
  ?calderEvent rdf:type dbo:Event, dbo:SocietalEvent .

  # Find William Bayne's war during the French campaign in Egypt and Syria
  dbr:William_Bayne a dbo:MilitaryPerson ;
    dbo:militaryConflict ?bayneWar .
  ?bayneWar dbo:participatedInMilitaryForce ?campaign .
  ?campaign rdfs:label ""French campaign in Egypt and Syria""@en .

  # Ensure the war is both a military conflict and an event
  ?bayneWar rdf:type dbo:MilitaryConflict, dbo:Event .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,57,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Actors in those films who are also soccer players and athletes
  ?film dbo:starring ?actor .
  ?actor a dbo:SoccerPlayer ;
         a dbo:Athlete .

  # Played with Juan Carlos Molina (footballer)
  ?team dbo:player ?actor ;
        dbo:player dbr:Juan_Carlos_Molina_(footballer) .

  # Team associated with someone born on 1979-11-03, who is both a soccer player and manager
  ?person dbp:birthday ""1979-11-03""^^xsd:date ;
          a dbo:SoccerPlayer, dbo:SoccerManager .
  ?team dbo:player ?person .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
628,28,train,"Give me the person born as Ackquille Jean Pollard and native of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:name ""A$AP Ferg"" .
  ?person dbo:birthPlace dbr:Florida .
  ?bandMember dbo:associatedBand dbr:A$AP_Mob ;
              dbo:member ?person .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
628,43,train,"Give me the band member of Uncle Murda and native of Florida and person born as the birth name of the native, that is a musical artist, of Florida.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Uncle Murda's real name is Victor Santiago II
  VALUES ?uncleMurda { dbr:Victor_Santiago_II }

  # Find band members associated with Uncle Murda
  ?bandMember dbo:memberOfBand ?uncleMurda .

  # The person must be a native of Florida
  ?bandMember dbp:nativePlace dbr:Florida .

  # The person must have been born in Florida
  ?bandMember dbo:birthPlace dbr:Florida .

  # Ensure the person is a musical artist
  ?bandMember rdf:type dbo:MusicalArtist .

  # Bind the result to ?person
  BIND(?bandMember AS ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
361,20,train,Give me the actor of Rustlers' Rhapsody and professional in Actor and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of ""Rustlers' Rhapsody""
  ?film dbo:starring ?actor .
  FILTER (str(?film) = ""Rustler's_Rhapsody_(1936_film)"")

  # Ensure the person is a professional actor
  ?actor rdf:type dbo:Actor .

  # Check if this actor has an alter ego of ""The Shadow""
  OPTIONAL {
    ?alias dbo:alterEgo dbr:The_Shadow .
    ?actor foaf:name ?name .
    FILTER (str(?name) = str(?alias))
  }
}
```",4,4,5,2,3,2,3,28,0,0,2,0,0.0,0
723,8,train,"Give me the band member of the associated musical artist, that is an organisation, of Cavalera Conspiracy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Cavalera_Conspiracy> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  VALUES ?artist { dbr:Cavalera_Conspiracy }
  ?artist a dbo:MusicalArtist .
  ?artist dbo:bandMember ?member .
}
```",2,3,3,2,1,3,2,20,0,0,89,0,0.0,0
80,20,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorShelbyOaks ?albumArtistWhatYouKnow WHERE {
  # Actors of Shelby Oaks
  dbr:Shelby_Oaks dbo:starring ?actorShelbyOaks .
  
  # Album of the song ""What You Know"" by T.I.
  dbr:What_You_Know_(T.I._song) dbo:fromAlbum ?album .

  # Artists associated with that album
  ?album dbo:artist ?albumArtistWhatYouKnow .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
668,2,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER(CONTAINS(LCASE(?birthName), ""darryl paa kwesi bannerman-martin""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
159,57,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?event ?successor ?writer WHERE {
  # Find Jean Baptist, Comte d'Arco and his roles
  ?person rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  
  # Check if he is a commander in a war that is also a TV show or societal event
  ?war dbo:commander ?person ;
       dbo:title ?title .
  OPTIONAL { ?tvShow dbo:subject ?war . }
  OPTIONAL { ?event dbo:relatedEvent ?war . }

  # Find the successor of Yurii Khmelnytsky
  ?khmelnytsky rdfs:label ""Yurii Khmelnytsky""@en .
  ?successor dbo:predecessor ?khmelnytsky .

  # Check if Jean Baptist, Comte d'Arco is that successor
  FILTER(?person = ?successor)

  # Find the writer of a work by George Ducas
  ?ducas rdfs:label ""George Ducas""@en .
  ?work dbo:author ?writer ;
        dbo:subject ?ducas .

  # Link the commander to the writer through the war or related context
  OPTIONAL { ?war dbo:relatedWork ?work }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
412,8,train,Give me the war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Identify Eleftherios Venizelos as a leader of the National Party of Greece
  dbr:Eleftherios_Venizelos dbo:leaderOf dbr:National_Party_of_Greece .

  # Find wars associated with Eleftherios Venizelos
  dbr:Eleftherios_Venizelos dbo:participatedIn ?war .
}
```",2,2,3,2,1,2,3,28,0,0,13,0,0.0,0
871,39,train,"Give me the parent of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  dbr:Edward_Stanley,_17th_Earl_of_Derby dbo:child ?child .

  # Step 2: Find the child who is a politician and an alumnus of Eton College
  ?child dbo:almaMater dbr:Eton_College ;
         dbo:occupation dbr:Politician .

  # Step 3: Determine the parent of this child
  ?child dbo:parent ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
58,1,train,Give me the producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  dbr:12_Strong dbo:productionCompany ?company .
  ?company dbo:name ?producer .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
87,4,train,Who is the awardee of List of awards and nominations received by Janusz Kamiński?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardName WHERE {
  VALUES ?januszKaminski { dbr:Janusz_Kamiński }
  
  ?award dbo:recipient ?januszKaminski .
  ?award dbo:name ?awardName .
}
```

This query does the following:
- It uses the `dbo:recipient` property to find awards where Janusz Kamiński is listed as a recipient.
- The `VALUES` clause specifies the resource for Janusz Kamiński in DBpedia.
- It retrieves the name of each award using the `dbo:name` property.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
737,41,train,"Give me the child of the child of Duke Philipp of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v4 . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Duke Philipp of Württemberg and his lineage
  ?philipp a dbo:Duke ;
           foaf:name ""Philipp of Württemberg""@en .
  
  ?child1 dbo:childOf ?philipp .
  ?grandchild dbo:childOf ?child1 .

  # Philipp Albrecht, Duke of Württemberg and his child
  ?philippAlbrecht a dbo:Duke ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
  
  ?child2 dbo:childOf ?philippAlbrecht .

  # Archduchess Margarete Sophie of Austria and her child
  ?margareteSophie a dbo:Archduchess ;
                   foaf:name ""Margarete Sophie of Austria""@en .
  
  ?child3 dbo:childOf ?margareteSophie .

  # The individual we are looking for
  ?individual dbo:parentOf ?grandchild ;
              dbo:childOf ?child2, ?child3 .
}",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
203,52,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the war involving ""The Triple X's""
  ?tripleXs dbo:participatedIn ?war1 .
  
  # Find the military force in the Battle of Cape Finisterre (1805)
  dbr:Battle_of_Cape_Finisterre_(1805) dbo:participatingMilitaryUnit ?militaryForce1 ;
                                      dbo:participatedIn ?war2 .

  # Find the war associated with William Bayne
  dbr:William_Bayne_(Royal_Navy_officer) dbo:servedIn ?war3 .
  
  # Ensure all wars are the same or related
  FILTER(?war1 = ?war2 || ?war1 = ?war3 || ?war2 = ?war3)

  # Find commanders of these wars
  ?war1 dbo:commander ?commander .
  OPTIONAL { ?war2 dbo:commander ?commander . }
  OPTIONAL { ?war3 dbo:commander ?commander . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,34,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and team of Pablo Aimar.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?team WHERE {
  # Find Marty Pollio's birthdate
  VALUES ?martyPollio (dbr:Marty_Polio) .
  
  ?martyPollio dbo:birthday ?birthday .

  # Find athletes born on the same date as Marty Pollio
  ?athlete a dbo:Athlete ;
           dbo:birthDate ?sameBirthday ;
           dbp:team ?team .

  FILTER (?sameBirthday = ?birthday)

  # Ensure the athlete is associated with Pablo Aimar's team
  VALUES ?pabloAimar (dbr:Pablo_Aimar) .
  
  ?pabloAimar dbp:team ?aimarTeam .
  
  FILTER (?team = ?aimarTeam)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
119,5,train,"Who is the citizen, that is Spanish, of Spain?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Spanish .
  ?person dbo:citizenship dbr:Spain .
}
```",1,2,2,1,1,3,3,71,0,0,1550,0,0.0,0
816,60,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the child of the spouse of Mariclare Costello.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Find Mariclare Costello's spouse
  dbr:Mariclare_Costello dbo:spouse ?spouse .

  # Step 2: Find the child of Mariclare Costello's spouse
  ?child dbo:parent ?spouse .
  
  # Step 3: Identify a person who died in Los Angeles and is related to the above chain
  ?decedent dbo:deathPlace dbr:Los_Angeles ;
            dbo:parent ?child .

  # Step 4: Find a work associated with this decedent
  ?work dbo:creator ?decedent .
  
  # Step 5: Identify if the work is a movie and find its actor
  ?work rdf:type dbo:Film ;
        dbo:starring ?actor .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
871,46,train,"Give me the parent of the awardee of the award of Rodney Lees and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentRodneyAwardee ?parentFrederickChild
WHERE {
  # Part 1: Rodney Lees' Awardee's Parent
  ?award dbo:recipient ?awardee .
  ?award dbo:relatedPerson dbr:Rodney_Lees .
  
  OPTIONAL { ?awardee dbo:birthParent ?parentRodneyAwardee . }
  OPTIONAL { ?awardee dbo:deathParent ?parentRodneyAwardee . }

  # Part 2: Frederick Stanley, 16th Earl of Derby's Child's Parent
  dbr:Fredrick_Stanley,_16th_Earl_of_Derby dbo:child ?child .
  
  OPTIONAL { ?child dbo:birthParent ?parentFrederickChild . }
  OPTIONAL { ?child dbo:deathParent ?parentFrederickChild . }

  # Ensure the parent is Frederick Stanley himself
  FILTER(?parentFrederickChild = dbr:Fredrick_Stanley,_16th_Earl_of_Derby)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
361,8,train,Give me the professional in the profession of Frédéric Bouraly.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Frédéric_Bouraly> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Step 1: Find Frédéric Bouraly's profession
  dbr:Frédéric_Bouraly dbo:occupation ?profession .

  # Step 2: Find other professionals with the same occupation
  ?professional dbo:occupation ?profession .
  
  FILTER(?professional != dbr:Frédéric_Bouraly) # Exclude Frédéric Bouraly himself
}
```",2,2,3,2,1,2,3,28,0,0,21580,0,0.0,0
80,35,train,Give me the actor of the movie with  and professional in the alter ego of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:character dbr:The_Shadow .
  ?movie dbo:starring ?actor .
}
```

This query does the following:
- Searches for movies (`?movie`) where ""The Shadow"" is a character.
- Retrieves the actor (`?actor`) who starred in that movie.",4,4,5,2,2,3,3,71,0,0,7802,0,0.0,0
398,6,train,Give me the figure known as Наши парни / Nashi parni and player in Aleksandr Filimonov.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksandr_Filimonov> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""Наши парни / Nashi parni""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?character WHERE {
  # Find the TV show ""Наши парни / Nashi parni""
  VALUES ?show { 
    dbr:Наши_парни_(телесериал) 
  }
  
  # Get characters from the show
  ?show dbo:character ?character .
  
  # Filter for Aleksandr Filimonov's character
  ?character dbo:actor dbr:Aleksandr_Filimonov .
}
```

This query does the following:
- It uses the `dbo:character` property to find characters associated with the TV show ""Наши парни / Nashi parni"".
- It filters these characters by checking if Aleksandr Filimonov is listed as an actor for that character using the `dbo:actor` property.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
609,32,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of List of awards and nominations received by Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?vinceGilliganBirthPlace WHERE {
  # Governor of Virginia
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?governorBirthPlace .
  }
  
  # Vince Gilligan
  OPTIONAL {
    dbr:Vince_Gilligan dbo:birthPlace ?vinceGilliganBirthPlace .
  }
}
```",4,5,5,2,2,3,3,71,1,0,0,1.0,1.0,1.0
905,4,train,"Give me the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  dbpedia:Philip_I,_Prince_of_Taranto dbo:parent ?person .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""john""))
}
```

This query searches for the parent of Philip I, Prince of Taranto, and filters to find a person whose name contains ""John,"" which is likely his father.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
871,55,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfAwardee ?politicianParent WHERE {
  # Find awardees of Commander of the Royal Victorian Order
  ?awardee dbo:awardReceived <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .
  
  # Get their parents
  ?awardee dbo:parent ?parentOfAwardee .

  # Find children of Frederick Stanley, 16th Earl of Derby
  ?child dbp:father <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  
  # Get their parents (should be Frederick Stanley)
  ?child dbo:parent ?frederickStanley .

  # Find children who are politicians
  ?politicianChild dbp:father <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> .
  ?politicianChild a dbo:Politician .

  # Get their parent (should be Frederick Stanley)
  ?politicianChild dbo:parent ?politicianParent .
  
  FILTER(?frederickStanley = <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby>)
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
595,43,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of the resident, that is a politician and an office holder, of Chappaqua, New York and spouse of Hillary Clinton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Chappaqua,_New_York> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person ?name ?officeHeld WHERE {
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""bill clinton""))
  
  OPTIONAL { ?person dbo:officeHolderOf ?office . 
             ?office dbo:name ?officeHeld }
}
```",5,10,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
347,0,train,Give me the commander in Thirty Years' War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageID ""Q1234"" ; # Replace Q1234 with the actual DBpedia ID for Thirty Years' War if known.
         dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,42,0,0.0,0
203,13,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?militaryForce WHERE {
  # Find William Bayne and his associated wars
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne"" ;
         dbo:militaryConflict ?war .

  # Ensure the war is both a military conflict and an event
  ?war a dbo:War ;
       a dbo:Event .

  # Retrieve the military force involved in the war
  ?war dbo:militaryForce ?militaryForce .
}
```

This query does the following:
- Identifies William Bayne as a `MilitaryPerson`.
- Finds wars (`?war`) associated with him.
- Ensures these wars are classified both as `War` and `Event`.
- Retrieves the military force involved in those wars.",2,4,3,2,1,3,3,71,0,0,529,0,0.0,0
151,6,train,Give me the reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?award WHERE {
  wd:Q123456 wdt:P166 ?award .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Charles Parsons, the British Army officer. You can find this identifier by searching for him on DBpedia or using a SPARQL query to identify his unique resource.",2,2,3,2,1,2,2,9,0,0,98450,0,0.0,0
399,0,train,Give me the band member of Emilia (Bulgarian singer).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?member WHERE {
  # Find Emilia and her associated bands
  VALUES (?emilia) { dbr:Emilia_(Bulgarian_singer) }
  
  ?emilia dbo:associatedBand ?band .
  
  # Find members of those bands
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,2,9,0,0,5,0,0.0,0
905,9,train,Give me the parent of Charles Martel of Anjou and spouse of Charles II of Naples.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Find the parent of Charles Martel of Anjou
  ?charlesMartel a dbo:Person ;
                 dbp:name ""Charles Martel of Anjou""@en ;
                 dbo:parent ?parent .

  # Find the spouse of Charles II of Naples
  ?charlesII a dbo:Person ;
             dbp:name ""Charles II of Naples""@en ;
             dbo:spouse ?spouse .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
39,3,train,Who is the producer of Coke Studio Philippines?,SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?show a dbo:TVEpisode ;
        dbo:title ""Coke Studio Philippines""@en .
  OPTIONAL { 
    ?show dbo:producer ?producer .
  }
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
119,17,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź and war of Alexander Suvorov.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/Alexander_Suvorov> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInResidence WHERE {
  ?athlete a dbo:Athlete ;
           dbo:nationality dbr:Poland ;
           dbo:birthPlace dbr:Łódź .
  
  ?athlete dbo:residence ?residence .
  
  ?residence dbo:country ?entityInResidence .

  OPTIONAL { 
    ?suvorov a dbo:MilitaryPerson ;
             dbp:associatedWithWar ?war .
    
    FILTER(CONTAINS(LCASE(?war), ""alexander suvorov""))
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
816,10,train,Give me the actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor of the movie ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?movie dbo:starring ?actor .
  FILTER(STRSTARTS(LCASE(?movie), LCASE(""judgment_the_trial_of_julius_and_ethel_rosenberg"")))

  # Check if this actor is a parent of Doon Arbus
  ?actor dbo:child dbr:Doon_Arbus .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,51,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyLeaderOffice ?commanderOffice
WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Person ;
               foaf:name ""Miguel Maura"" ;
               dbo:memberOfParty ?politicalParty .

  # Get the leader of that political party and their office
  ?politicalParty dbo:leader ?partyLeader .
  ?partyLeader dbo:office ?partyLeaderOffice .

  # Find a commander in the Central African Republic Civil War
  ?commander a dbo:Person ;
             dbo:occupation ""Commander"" ;
             dbo:placeOfBirth ?centralAfricanRepublicWar .
  
  # Get the office held by that commander
  ?commander dbo:office ?commanderOffice .

  FILTER(?centralAfricanRepublicWar = dbr:Civil_War_in_the_Central_African_Republic_(2012–present))
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
816,34,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent ?movie WHERE {
  # Find the parent of Doon Arbus
  dbr:Doon_Arbus dbo:child ?parent .
  
  # Ensure the parent is an actor in a movie
  ?parent dbo:profession dbr:Actor ;
          dbo:performerIn ?work .
  
  # The work should be a film (movie)
  ?work rdf:type dbo:Film .
  
  # Find movies where this person acted
  ?work dbo:starring ?actor .
  FILTER (?actor = ?parent) .

  # Ensure the actor died in Los Angeles
  OPTIONAL { ?parent dbo:deathPlace dbr:Los_Angeles . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
609,53,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
293,42,train,"Give me the spouse of Roger Pryor (actor) and party member of the ruling party in Central, Louisiana and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?partyMember ?personWithBirthName
WHERE {
  # Find Roger Pryor (actor) and his spouse
  VALUES ?rogerPryor { dbr:Roger_Pryor_(actor) }
  ?rogerPryor dbo:spouse ?spouse .

  # Find the ruling party in Central, Louisiana
  ?centralLocation a dbo:PopulatedPlace ;
                  dbo:country dbr:United_States ;
                  rdfs:label ""Central, Louisiana""@en .
  ?partyMember dbo:officeHolder ?office ;
               dbo:politicalParty ?rulingParty .
  ?office dbo:location ?centralLocation .

  # Find Ann Sothern's birth name and the person with that birth name
  VALUES ?annSothern { dbr:Ann_Sothern }
  ?annSothern dbo:birthName ?birthName .
  ?personWithBirthName dbo:birthName ?birthName .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
143,7,train,"Give me the actor of the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Afeez Oyetoro's resource
  VALUES ?afeezOyetoro { dbr:Afeez_Oyetoro }

  # Step 2: Find movies featuring Afeez Oyetoro
  ?movie dbo:starring ?afeezOyetoro .

  # Step 3: Ensure the movie is categorized as a show (e.g., TV series, film)
  ?movie rdf:type ?type .
  FILTER (?type IN (dbo:Film, dbo:TelevisionSeries))

  # Step 4: Find other actors in these movies
  ?movie dbo:starring ?actor .

  # Filter out Afeez Oyetoro himself from the results
  FILTER(?actor != ?afeezOyetoro)
}
ORDER BY ?actor",2,3,3,2,1,3,2,20,6,13,22,0.3157894736842105,0.21428571428571427,0.2553191489361702
531,35,train,"Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenant WHERE {
  # Identify Alberto Ruiz-Gallardón and his political role
  dbr:Alberto_Ruiz-Gallardón a dbo:Politician ;
    dbo:partyMemberOf dbr:People's_Party_(Spain) .

  OPTIONAL {
    # Find the residence of Alberto Ruiz-Gallardón
    ?residence dbo:resident dbr:Alberto_Ruiz-Gallardón .
    ?residence dbo:tenant ?tenantResidence .
  }

  OPTIONAL {
    # Find the office location related to his political role
    ?office dbo:employee dbr:Alberto_Ruiz-Gallardón ;
            dbo:tenant ?tenantOffice .
  }
  
  # Return tenants of both residence and office
  VALUES ?tenant { ?tenantResidence ?tenantOffice }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
668,15,train,Who is the person born as the birth name of $pacely?,SELECT ?result WHERE { <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Pacely"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
609,45,train,"Give me the birth place of Vince Gilligan and birth place of the author of the reference, that is American, to El Deafo and birth place of Glenn Youngkin.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES (?person ?label) {
    (dbr:Vince_Gilligan ""Vince Gilligan"")
    (dbr:Cecily_Bell ""Cece Bell"") # Cece Bell is the author of El Deafo
    (dbr:Glenn_Youngkin ""Glenn Youngkin"")
  }
  
  ?person dbo:birthPlace ?birthPlace .
  OPTIONAL { ?person rdfs:label ?label . FILTER(LANG(?label) = 'en') }
}
ORDER BY ?person",5,6,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
140,2,train,Give me the military force of Pickett's Charge.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
SELECT ?militaryForce WHERE {
  wd:Q123456 rdfs:label ""Pickett's Charge""@en .
  wd:Q123456 wdt:P31/wdt:P279* wd:Q11424 . # Instance of or subclass of military unit
  wd:Q123456 wdt:P361 ?militaryForce . # Part of relationship
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
585,16,train,"Give me the native of the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and child of the professional in Actress.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Actress""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?native
WHERE {
  ?award a dbo:Award ;
         dbo:country dbr:United_States_of_America ;
         dbo:settlement ?settlement .
  
  ?settlement rdf:type dbo:Settlement .

  ?coro dbo:awardedBy ?award .
  FILTER (str(?coro) = ""Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico"")

  ?actress a dbo:Actress ;
           dbo:profession ?award .
  
  ?native dbo:nativePlace ?settlement .
}
```",4,6,5,2,2,3,2,20,0,0,10,0,0.0,0
158,8,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find individuals who have died in this location
  ?decedent dbo:deathPlace ?birthPlace .
}
```",2,3,3,2,1,2,3,28,906,0,0,1.0,1.0,1.0
347,41,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v4 <http://dbpedia.org/property/father> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:childOf dbr:Ferdinand_II,_Holy_Roman_Emperor .
  ?commander dbo:parentOf ?grandChild .
  ?grandChild dbo:childOf dbr:Ferdinand_III,_Holy_Roman_Emperor .

  ?commander dbo:commanded ?regiment .
  ?regiment rdfs:label ""2nd Dragoon Regiment (France)""@en .

  ?event dbo:relatedEvent ?war .
  ?war rdfs:label ""War of the Spanish Succession""@en .
  ?commander dbo:participatedIn ?event .

  OPTIONAL {
    ?tvShow dbo:genre dbr:Societal_event .
    ?tvShow dbo:features ?commander .
  }

  OPTIONAL {
    ?tvShow dbo:genre dbr:Television_show .
    ?tvShow dbo:features ?commander .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
742,15,train,Give me the birthplace of Reneta Kamberova and birthplace of the alumnus of the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> ?v0 . <http://dbpedia.org/resource/Reneta_Kamberova> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceRenetaKamberova ?alumnusBirthplace WHERE {
  # Get birthplace of Reneta Kamberova
  OPTIONAL {
    dbr:Reneta_Kamberova dbo:birthPlace ?birthPlaceRenetaKamberova .
  }
  
  # Get an alumnus from Пловдивски университет „Паисий Хилендарски“ and their birthplace
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Пловдивски_университет_„Паисий_Хилендарски“ .
    ?alumnus dbo:birthPlace ?alumnusBirthplace .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
246,10,train,"Give me the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find Princess Muna al-Hussein
  dbr:Princess_Muna_al-Hussein a dbo:Person ;
    dbo:spouse ?husband .

  # Step 2: Find her children who are royalty
  ?parent (dbo:child|dbo:children) ?child .
  FILTER (?parent = dbr:Princess_Muna_al-Hussein || ?parent = ?husband)
  ?child a dbo:Monarch ;
    rdfs:label ?childLabel .

  # Step 3: Find the grandchildren who are royalty
  ?child (dbo:child|dbo:children) ?grandchild .
  ?grandchild a dbo:Monarch ;
    rdfs:label ?grandchildLabel .
}
ORDER BY ?grandchildLabel",2,4,3,2,1,3,2,20,0,0,8,0,0.0,0
513,2,train,Give me the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""George Hamilton Cameron""@en .
  ?reference schema:about wd:Q123456 ;
              schema:isPartOf ?source .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for George Hamilton Cameron. You can find this by searching his name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
595,14,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:participatingOrganisation dbr:United_States_Navy .
  ?event dbo:location dbr:World_War_I .
  ?event dbo:location dbr:Spanish_Flu_pandemic .
  ?event dbo:commander ?commander .
}
```",2,4,3,2,1,3,3,71,0,0,18,0,0.0,0
609,38,train,"Give me the birth place of the author of El Deafo and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?authorBirthPlace ?governorBirthPlace WHERE {
  # Find Cece Bell's birth place
  OPTIONAL {
    ?author a dbo:Writer ;
            foaf:name ""Cece Bell"" .
    ?author dbo:nationality dbr:United_States ;
            dbo:birthPlace ?authorBirthPlace .
  }

  # Find Glenn Youngkin's birth place
  OPTIONAL {
    ?governor a dbo:Politician ;
              foaf:name ""Glenn Youngkin"" .
    ?governor dbo:office dbr:Governor_of_Virginia ;
             dbo:birthPlace ?governorBirthPlace .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,14,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement ?person ?birthPlace WHERE {
  # Step 1: Identify regions using Eastern European Time (EET)
  VALUES ?country { 
    dbr:Ukraine
    dbr:Russia
    dbr:Bulgaria
    dbr:Belarus
    dbr:Moldova
    dbr:Georgia
    dbr:Armenia
    dbr:Azerbaijan
    dbr:Greece
  }
  
  # Step 2: Find settlements in these countries
  ?settlement dbo:country ?country .
  ?settlement a dbo:Settlement .

  # Step 3: Retrieve notable people born in these settlements
  ?person dbo:birthPlace ?settlement ;
          a dbo:Person .
  
  # Get the birthplace of each person
  OPTIONAL { ?person dbp:birthPlace ?birthPlace }
}
ORDER BY ?settlement ?person
```",3,4,4,3,1,3,2,20,44,43492,98,0.0010106578463800074,0.30985915492957744,0.002014744264847292
531,58,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and tenant of Madrid and office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v5 <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/office> ?result . ?v1 <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office
WHERE {
  ?person a dbo:Politician ;
          dbo:holdsPublicOffice ?office .
  
  ?office dbo:relatedTo dbr:Central_African_Republic_Civil_War ;
          dbo:location dbr:Madrid .

  ?party dbo:leader ?person ;
         dbo:foundedBy dbr:Miguel_Maura .

}
```

This query attempts to find an office (`?office`) that meets the criteria specified:

- The person holding the office is a politician.
- The office is related to the Central African Republic Civil War and has a connection to Madrid.
- The same person is also the leader of a political party founded by Miguel Maura.",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
687,29,train,"Give me the team of Pablo Aimar and player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?aimarTeam ?molinaTeam ?actorName WHERE {
  # Pablo Aimar's team
  ?pabloAimar a dbo:SoccerPlayer ;
              foaf:name ""Pablo Aimar"" .
  ?pabloAimar dbo:team ?aimarTeam .

  # Juan Carlos Molina's team
  ?juanCarlosMolina a dbo:SoccerPlayer ;
                    foaf:name ""Juan Carlos Molina"" .
  ?juanCarlosMolina dbo:team ?molinaTeam .

  # Actor from All or Nothing: Manchester City who is also an athlete and soccer player
  ?actor a dbo:Actor, dbo:Athlete, dbo:SoccerPlayer ;
         foaf:name ?actorName .
  ?actor dbo:film dbr:All_or_Nothing:_Manchester_City .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
782,41,train,Give me the associated musical artist of Nick Curran and reference to the real name of The Fabulous Thunderbirds and band of the band member of Eric Clapton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranArtist ?fabulousThunderbirdsRealName ?claptonBandMemberBand
WHERE {
  # Nick Curran's associated musical artist
  OPTIONAL { 
    dbr:Nick_Curran dbo:musicalArtist ?nickCurranArtist .
  }

  # Real name of The Fabulous Thunderbirds
  OPTIONAL {
    dbr:The_Fabulous_Thunderbirds dbo:realName ?fabulousThunderbirdsRealName .
  }
  
  # Band of a member of Eric Clapton's band
  OPTIONAL {
    ?claptonBandMember dbo:memberOf dbr:Eric_Clapton ;
                       dbo:musicalArtist ?claptonBandMemberBand .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
756,28,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?nativeCountry WHERE {
  # Find manager of VfL Bochum in 2007-08 season
  ?bochumManager dbo:position ""manager""@en .
  ?bochumManager dbo:team dbr:VfL_Bochum .
  ?bochumManager dbo:seasonStartYear ""2007""^^xsd:gYear .
  ?bochumManager dbo:seasonEndYear ""2008""^^xsd:gYear .

  # Find manager of SBV Vitesse in 2020-21 season
  ?vitesseManager dbo:position ""manager""@en .
  ?vitesseManager dbo:team dbr:SBV_Vitesse .
  ?vitesseManager dbo:seasonStartYear ""2020""^^xsd:gYear .
  ?vitesseManager dbo:seasonEndYear ""2021""^^xsd:gYear .

  # Ensure it's the same person
  FILTER (?bochumManager = ?vitesseManager)

  # Get native country of the manager
  ?bochumManager dbo:nationality ?nationality .
  ?nationality dbo:country dbr:?nativeCountry .
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
158,19,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of Grand Duchy of Finland and native of Russian Empire.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Grand_Duchy_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?descendant WHERE {
  # Find Sandro Bertaggia's birthplace
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .

  # Find descendants at this location
  ?descendant dbo:birthPlace ?birthPlace ;
              dbo:nationality [ dbp:country dbr:Grand_Duchy_of_Finland ] ;
              dbo:nationality [ dbp:country dbr:Russian_Empire ] .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
159,3,train,"Give me the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Michał Kazimierz Pac as an agent of the force
  dbr:Micha%C5%82_Kazimierz_Pac dbo:agent ?force .
  
  # The force is an event and a military conflict
  ?force rdf:type dbo:Event ;
         rdf:type dbo:MilitaryConflict .
}
```",1,3,2,1,1,3,3,71,0,0,3,0,0.0,0
706,13,train,Give me the birthplace of the awardee of the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbp:SangeetNatakAkademiFellowship .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query assumes that `dbp:SangeetNatakAkademiFellowship` is the correct property or resource identifier for the fellowship in DBpedia. You may need to adjust this based on the actual structure of DBpedia.",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
19,1,train,Give me the spouse of Carrie Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Carrie_Johnson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbp:name ""Carrie Johnson""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
198,25,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of Quincy Adams Gillmore.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Henry Clay Lewis birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?hclBirthPlace .
  
  # Quincy Adams Gillmore birthplace
  dbr:Quincy_Adams_Gillmore dbo:birthPlace ?qagBirthPlace .

  # Ensure both are settlements
  ?hclBirthPlace a dbo:Settlement ;
                 rdfs:label ?settlementLabelHCL .
  ?qagBirthPlace a dbo:Settlement ;
                 rdfs:label ?settlementLabelQAG .

  # Filter for American settlements
  FILTER(CONTAINS(LCASE(?settlementLabelHCL), ""united states"") || CONTAINS(LCASE(?settlementLabelHCL), ""america""))
  FILTER(CONTAINS(LCASE(?settlementLabelQAG), ""united states"") || CONTAINS(LCASE(?settlementLabelQAG), ""america""))

  # Ensure the birthplaces are the same
  FILTER(?hclBirthPlace = ?qagBirthPlace)
}
```",3,5,4,2,2,3,3,71,0,0,2,0,0.0,0
293,4,train,"Give me the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?location dbo:country dbr:United_States .
  ?location rdfs:label ""Central, Louisiana""@en .
  OPTIONAL { ?location dbo:government ?gov . }
  OPTIONAL { ?gov dbo:politicalParty ?party . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
412,13,train,Give me the war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?war ?athensEntity WHERE {
  # Find the leader of the National Party of Greece
  ?party dbo:leader ?leader .
  FILTER (str(?party) = ""National_Party_of_Greece"") .

  # Find wars involving this leader
  ?leader dbo:participatedInWar ?war .

  # Find entities in Athens related to these wars
  ?athensEntity dbo:location dbr:Athens ;
                dbo:relatedTo ?war .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
859,16,train,"Give me the associated musical artist of the associated musical artist of James Plotkin and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Find James Plotkin's associated musical artist
  ?plotkin a dbo:MusicalArtist ;
           foaf:name ""James Plotkin"" .
  
  ?plotkin dbo:associatedWith ?firstAssociatedArtist .

  # Step 2: Find the associated musical artist of the first associated artist
  ?firstAssociatedArtist dbo:associatedWith ?secondAssociatedArtist .

  # Step 3: Find a band member of this second associated artist
  ?bandMember dbo:memberOfBand ?band ;
              foaf:name ?name .
  
  ?band dbo:associatedMusicalArtist dbr:Burnt_by_the_Sun_(band) ;
        rdf:type dbo:Band, dbo:Group, dbo:Organization .

  # Ensure the band member is part of a band that matches all criteria
  ?secondAssociatedArtist dbo:member ?bandMember .
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
816,14,train,Give me the parent of the child of Allan Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find Allan Arbus
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .

  # Find his children (spouse or offspring)
  OPTIONAL { ?allanArbus dbp:spouse ?child . }
  OPTIONAL { ?allanArbus dbo:offspring ?child . }

  # Ensure the child is a person
  ?child a dbo:Person .

  # Find the parents of those children
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
756,25,train,"Give me the native of West Germany and manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?teamName WHERE {
  # Find Thomas Letsch in DBpedia
  ?letsch a dbo:Person ;
          foaf:name ""Thomas Letsch""@en ;
          dbo:nationality ?nationality .

  # Check if his nationality is West Germany
  ?nationality rdfs:label ""West Germany""@en .
  
  # Get the native country of Thomas Letsch
  ?letsch dbo:nativeCountry ?nativeCountry .

  # Find teams managed by Thomas Letsch
  ?letsch dbo:managerOfTeam ?team .

  # Ensure the team is a soccer club
  ?team a dbo:SoccerClub ;
        rdfs:label ?teamName .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
23,23,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of the father of Sofía Petro.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?party1 ?fatherName ?person2 ?party2 WHERE {
  # Roy Leonardo Barreras Montealegre's political party
  OPTIONAL {
    dbr:Roy_Barreras_Montealegre dbo:politicalParty ?party1 .
    BIND(dbr:Roy_Barreras_Montealegre AS ?person1)
  }
  
  # Sofía Petro's father and his political party
  OPTIONAL {
    dbr:Sofía_Petro dbo:father ?father .
    ?father rdfs:label ?fatherName .
    FILTER(LANG(?fatherName) = 'en')
    ?father dbo:politicalParty ?party2 .
    BIND(dbr:Sofía_Petro AS ?person2)
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
293,21,train,"Give me the person born as Harriette Arlene Lake and party member of the ruling party in Central, Louisiana.","SELECT ?result WHERE { <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://dbpedia.org/ontology/party> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Harriette Arlene Lake"" ;
          dbo:birthPlace ?place .
  
  OPTIONAL { ?person dbo:memberOfParty ?party . }
  
  FILTER(CONTAINS(LCASE(?place), ""central, louisiana""))
}
```

### Explanation:

- **PREFIX**: We define prefixes for common DBpedia properties and classes.
- **SELECT**: We are selecting the person and their party affiliation.
- **?person a dbo:Person**: Ensures that we are querying about a person.
- **foaf:name ""Harriette Arlene Lake""**: Matches the full name of the individual.
- **dbo:birthPlace ?place**: Retrieves the birthplace to filter by location.
- **OPTIONAL { ?person dbo:memberOfParty ?party }**: Optionally retrieves party affiliation if available.
- **FILTER(CONTAINS(LCASE(?place), ""central, louisiana""))**: Filters results to include only those with a birthplace containing ""Central, Louisiana.""

This query assumes that DBpedia has structured data for Harriette Arlene Lake and her political affiliations. Adjustments might be necessary based on the actual schema and available data in DBpedia.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
203,6,train,"Give me the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?person a dbo:RoyalNavyOfficer ;
          foaf:name ""William Bayne""@en .
  
  OPTIONAL { ?person dbp:conflict ?war . }
  
  FILTER (isLiteral(?war) && 
          ((?war rdf:type dbo:MilitaryConflict) || (?war rdf:type dbo:Event)))
}
```",1,3,2,1,1,3,3,71,0,0,5,0,0.0,0
159,61,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna and reference to the writer of the work of George Ducas.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/writer> ""George Ducas""@en . ?v1 <http://dbpedia.org/ontology/battle> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?event ?writer WHERE {
  # Find a commander in the Battle of Vienna
  ?battle dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle_of_Vienna""))

  # Ensure the commander is associated with a TV show and societal event
  ?commander dbo:wikiPageDisambiguates ?tvShow .
  ?commander dbo:wikiPageDisambiguates ?event .

  # Find a connection to an author related to George Ducas
  ?writer dbo:wikiPageRedirects dbr:George_Ducas .
  ?commander dbo:wikiPageDisambiguates ?writer .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
19,6,train,Give me the spouse of the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . ?result <http://dbpedia.org/ontology/spouse> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Caroline Louise Bevan Symonds""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```

This query does the following:
- It uses `dbo:Person` to identify entities that are people.
- It matches the name ""Caroline Louise Bevan Symonds"" using the `foaf:name` property, assuming it's available in English (`@en`).
- It retrieves the spouse of this person using the `dbo:spouse` property.",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
668,50,train,"Give me the person born as the birth name of Joey B and professional in the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Joey B's birth name
  dbr:Joey_B dbo:birthName ?joeyBBirthName .

  # Find the writer of ""The Live Anthology"" who is a musical artist
  dbr:The_Live_Anthology dbo:writer ?writer .
  ?writer dbo:profession dbr:Writer ;
          dbo:occupation dbr:MusicalArtist .

  # Match the birth name and profession
  ?person dbo:birthName ?joeyBBirthName ;
          dbo:profession dbr:Writer .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
871,14,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Identify Frederick Stanley, 16th Earl of Derby
  ?person a dbo:Person ;
          foaf:name ""Frederick Stanley"" ;
          dbp:title ""Earl of Derby""@en .
  
  # Find his children
  ?child dbo:parent ?person .

  # Filter for the child who is also a politician
  ?child dbo:occupation dbo:Politician .

  # Get the father of that child (who should be Frederick Stanley)
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
361,12,train,Give me the professional in  and actor of Rustlers' Rhapsody and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Rustlers'_Rhapsody> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?actorName WHERE {
  # Find the person who acted in ""Rustlers' Rhapsody""
  ?movie dbo:starring ?person .
  ?movie rdfs:label ""Rustlers' Rhapsody""@en .

  # Ensure this person is recognized as an actor
  ?person a dbo:Actor .

  # Get the name of the actor
  ?person foaf:name ?actorName .

  # Filter to ensure they are also noted for their profession in acting
  OPTIONAL { ?person dbo:profession dbr:Actor . }
  
  FILTER (LANG(?actorName) = 'en')
}
ORDER BY ?actorName",3,3,4,1,3,2,3,28,0,0,2,0,0.0,0
151,8,train,Give me the entity in Ottoman Empire and reference to the award of Charles Parsons (British Army officer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Parsons_(British_Army_officer)> <http://dbpedia.org/property/awards> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Ottoman_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInOttomanEmpire ?relation ?parsonsAward WHERE {
  # Find entities related to the Ottoman Empire
  ?entityInOttomanEmpire a dbo:Place ;
                        dbo:country dbr:Ottoman_Empire .

  # Find Charles Parsons and his awards
  dbr:Charles_Parsons dbo:award ?parsonsAward .

  # Look for any relation between entities in the Ottoman Empire and Charles Parsons' awards
  OPTIONAL { ?entityInOttomanEmpire ?relation ?parsonsAward }
}
```",3,3,4,2,2,2,2,9,0,0,3,0,0.0,0
557,32,train,"Give me the professional in the alter ego of The Shadow and producer of the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find The Shadow's alter ego
  ?shadow dbr:The_Shadow ;
          dbo:alterEgo ?alterEgo .
  
  # Find the professional identity of the alter ego
  ?alterEgo dbo:profession ?professional .

  # Find Cora Sue Collins' claim to fame (work she produced)
  ?collins dbr:Cora_Sue_Collins ;
           dbo:claimToFame ?work .

  # Ensure the work is related to The Shadow's alter ego
  ?work dbo:producer ?alterEgo .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
742,2,train,Give me the reference to Пловдивски университет „Паисий Хилендарски“.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Пловдивски университет „Паисий Хилендарски“""@en . }","```sparql
SELECT ?reference WHERE {
  ?university rdfs:label ""Пловдивски университет „Паисий Хилендарски“""@bg.
  OPTIONAL { ?university dbo:wikiPageWikiLink ?reference. }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
297,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?entity WHERE {
  ?entity dbo:country dbr:United_States .
}
```

This query selects entities (`?entity`) that have a country property (`dbo:country`) pointing to the DBpedia resource for ""United States"" (denoted as `dbr:United_States`).",1,1,2,1,1,2,2,9,0,0,63421,0,0.0,0
143,5,train,Give me the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Cynthia Ikponmwenosa Morgan"" .
}
```

This query uses the `dbo:birthName` property to find resources (persons) in DBpedia that have this birth name. The result will be a list of individuals who were born with that name.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
531,49,train,"Give me the office of the leader, that is a politician, of the party, that is a political party, of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> ?v2 . ?v1 <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/ontology/party> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Find Miguel Maura's political party
  ?miguelMaura a dbo:Politician ;
               dbo:partyAffiliation ?politicalParty .

  FILTER (str(?miguelMaura) = ""Miguel_Maura"")

  # Find the leader of this political party
  ?leader a dbo:Politician ;
          dbo:officeHolderOf ?office ;
          dbo:partyLeaderOf ?politicalParty .

  # Find Alberto Ruiz-Gallardón's residence
  ?albertoRuizGallardon a dbo:Politician ;
                        dbo:residence ?residence .

  FILTER (str(?albertoRuizGallardon) = ""Alberto_Ruiz-Gallardón"")

  # Ensure the leader is also a tenant of Alberto's residence
  ?leader dbo:tenantOf ?residence .
}",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
742,17,train,"Give me the birthplace of the resident of the region, that is a settlement, of Eastern European Time and birthplace of Ekaterina Zaharieva.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . <http://dbpedia.org/resource/Ekaterina_Zaharieva> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find Ekaterina Zaharieva
  ?person a dbo:Person ;
          foaf:name ""Ekaterina Zaharieva""@en .
  
  # Get her birthplace
  ?person dbo:birthPlace ?region .

  # Ensure the region uses Eastern European Time
  ?region dbo:timeZone dbr:Eastern_European_Time .

  # Retrieve the actual birthplace from the region
  ?region dbo:location ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,2,0,0.0,0
103,11,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies or TV shows featuring Richard E. Grant
  ?work dbo:starring dbr:Richard_E._Grant .
  
  # Check if the work is a television show
  ?work rdf:type dbo:TelevisionShow .

  # Retrieve other actors in these television shows
  ?work dbo:starring ?actor .
  
  FILTER(?actor != dbr:Richard_E._Grant) # Exclude Richard E. Grant himself
}
```",2,3,3,2,1,3,3,71,46,23,7,0.6666666666666666,0.8679245283018868,0.7540983606557377
87,12,train,Give me the actor of Paradise (2013 film) and actor of Always (1989 film) and spouse of Janusz Kamiński.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorParadise ?actorAlways ?spouseJanuszKaminski WHERE {
  # Actors in ""Paradise"" (2013)
  ?filmParadise a dbo:Film ;
                rdfs:label ""Paradise""@en .
  FILTER(CONTAINS(LCASE(str(?filmParadise)), 'paradise'))
  ?filmParadise dbo:starring ?actorParadise .

  # Actors in ""Always"" (1989)
  ?filmAlways a dbo:Film ;
              rdfs:label ""Always""@en .
  FILTER(CONTAINS(LCASE(str(?filmAlways)), 'always'))
  ?filmAlways dbo:starring ?actorAlways .

  # Spouse of Janusz Kamiński
  dbr:Janusz_Kamiński dbo:spouse ?spouseJanuszKaminski .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
39,41,train,Give me the professional in the profession of Sam Concepcion and professional in the alter ego of The Shadow and band of Bob Thompson (musician).,SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?profession WHERE {
  # Sam Concepcion's professions
  VALUES (?concepcion) { dbr:Sam_Concepcion }
  
  # The Shadow's alter ego profession
  VALUES (?shadow) { dbr:Lamont_Cranston }

  # Bob Thompson (musician)'s band association
  VALUES (?bobthompson) { dbr:Bob_Thompson_(American_musician) }

  {
    ?concepcion dbo:profession ?profession .
    FILTER(?profession IN (dbo:Singer, dbo:Actor, dbo:Television_Personality))
  } UNION {
    ?shadow dbo:alterEgoOf ?person .
    ?person dbo:profession ?profession .
    FILTER(?profession = dbo:Radio_Show_Host)
  } UNION {
    ?bobthompson dbo:bandMember ?person .
    ?person dbo:profession ?profession .
    FILTER(?profession = dbo:Musician)
  }
}
```",5,5,6,2,3,3,3,71,0,0,4,0,0.0,0
198,54,train,"Give me the force of the awardee of the award of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?entityInCharleston ?war
WHERE {
  # Find Quincy Adams Gillmore's DBpedia resource
  VALUES ?gillmore { dbr:Quincy_A._Gillmore }
  
  # Get the military force he was associated with
  ?gillmore dbo:militaryService ?service .
  ?service dbo:organizationName ?force .

  # Identify the entity in Charleston, South Carolina related to him
  ?gillmore dbo:placeOfBirth ?charlestonEntity .
  FILTER(CONTAINS(LCASE(?charlestonEntity), ""charleston, south carolina""))

  # Determine the war during which he received the Medal of Honor
  ?gillmore dbo:awardReceived dbr:Medal_of_Honor .
  ?service dbo:participatedInWar ?war .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
816,3,train,Give me the person decedent at Los Angeles.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Los_Angeles .
  OPTIONAL { ?person foaf:name ?name . }
}
```",1,1,2,1,1,3,3,71,2883,2731,0,0.5135375846099038,1.0,0.6785924443921384
468,16,train,"Give me the reference to the real name of Peter IV of Aragon and child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childName WHERE {
  ?person dbo:spouseOrPartner* ?parent .
  ?parent foaf:name ""Peter IV of Aragon""@en .
  ?person dbo:child ?child .
  ?child dbo:royalTitle ?title .
  ?child foaf:name ?childName .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
347,20,train,"Give me the commander in Thirty Years' War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:spouse ?spouse .
  ?child dbo:parent ?spouse ;
         dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor .
  FILTER (CONTAINS(LCASE(str(?commander)), ""albrecht von wallenstein""))
}
```

This query does the following:
- Selects individuals who are military persons.
- Checks for a spouse relationship where one of the parents is Ferdinand III, Holy Roman Emperor.
- Filters to find Albrecht von Wallenstein by name.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
943,42,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Yeshaq I and his parent who is royalty
  dbr:Yeshaq_I dbo:parent ?parent .
  ?parent a dbo:Monarch .

  # Child of the parent (royalty) who is also father of Na'od's grandfather
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .

  # Na'od and his grandfather who is royalty and an office holder
  dbr:Na'od dbo:father ?naod_father .
  ?naod_father dbo:father ?grandfather .
  ?grandfather a dbo:Monarch ;
               dbo:officeHolder ?office .

}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
80,0,train,Give me the actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film dcterms:title ""Shelby Oaks""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
80,45,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of Shelby Oaks.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors in ""The Golden Master""
  ?goldenMasterActor dbo:actor dbr:The_Golden_Master .
  
  # Find actors in the film ""ATL""
  ?atlActor dbo:actor dbr:ATL_(film) .

  # Find actors in the TV show ""Shelby Oaks""
  ?shelbyOaksActor dbo:actor dbr:Shelby_Oaks .

  # Look for a common actor among them
  VALUES ?actor { 
    ?goldenMasterActor 
    ?atlActor 
    ?shelbyOaksActor 
  }

  FILTER(?goldenMasterActor = ?atlActor && ?atlActor = ?shelbyOaksActor)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
353,26,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find William I
  VALUES ?williamI { dbr:William_I_of_England }

  # Reference person who is royalty and an office holder
  ?reference dbo:royalty ?isRoyalty .
  ?reference dbo:officeHolder ?isOfficeHolder .

  # Ensure the reference person is related to William I (e.g., ancestor)
  ?williamI dbo:parent ?reference .

  # Child of the reference person who is royalty
  ?child dbo:parent ?reference ;
         dbo:royalty ?isChildRoyalty .

  # Find the father of this child
  ?child dbo:father ?father .
}
```

This query assumes that:
- `dbo:royalty` and `dbo:officeHolder` are used to denote royalty status and office holding, respectively.
- `dbo:parent`, `dbo:father`, and similar properties are used for familial relationships.

Please note that the exact property URIs might differ based on DBpedia's schema at any given time. Adjustments may be necessary if these assumptions do not hold true in the current version of DBpedia.",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
782,0,train,Give me the reference to The Fabulous Thunderbirds.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""The Fabulous Thunderbirds""@en. # Replace Q123456 with the actual DBpedia resource ID for The Fabulous Thunderbirds.
  OPTIONAL { 
    ?reference schema:description ?description .
    FILTER(CONTAINS(LCASE(?description), ""reference""))
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,49,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Step 1: Find the owner of USS Arcadia (ID-1605)
  ?arcadia dbo:owner ?owner .

  # Step 2: Find the author of ""An Invitation to the White House"" who is a politician and office holder
  ?author dbr:An_Invitation_to_the_White_House dbo:author ?trueAuthor .
  ?trueAuthor dbo:occupation ?occupation .
  FILTER (CONTAINS(LCASE(?occupation), ""politician"") || CONTAINS(LCASE(?occupation), ""office holder"")) .

  # Step 3: Find the spouse of this author
  ?trueAuthor dbo:spouse ?spouse .

  # Step 4: Ensure the owner and spouse are the same person
  FILTER (?owner = ?spouse) .

  # Step 5: Identify the commander in World War I related to these individuals
  ?commander dbo:commandedDuring ?war .
  ?war rdfs:label ""World War I""@en ;
      dbo:associatedDisease ?disease .
  OPTIONAL { ?disease rdfs:label ""Spanish Flu""@en . }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
742,3,train,"Give me the alumnus of Plovdiv University ""Paisii Hilendarski"".",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Plovdiv_University_%22Paisii_Hilendarski%22> . },"```sparql
SELECT ?alumnus WHERE {
  ?university dbr:Plovdiv_University_Paisii_Hilendarski .
  ?alumnus dbo:almaMater ?university .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
628,42,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico and person born as Ackquille Jean Pollard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Step 1: Find Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?artist .

  # Step 2: Identify band members of the artist who are also musical artists
  ?artist dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Step 3: Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award ?award .

  # Step 4: Determine the region, state, and settlement of the award
  ?award dbo:region ?region .
  ?region a dbo:Region ;
          dbp:country dbr:United_States ;
          dbo:state ?state ;
          dbo:settlement ?settlement .

  # Step 5: Find the person native to this region who is Ackquille Jean Pollard
  ?person dbo:nativePlace ?settlement .
  ?person rdfs:label ""Ackquille Jean Pollard""@en .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
293,2,train,Give me the person born as Harriette Arlene Lake.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
  OPTIONAL { ?person dbo:birthName ?birthName . FILTER (lang(?birthName) = 'en') }
  FILTER regex(?birthName, ""Harriette Arlene Lake"", ""i"")
}
ORDER BY ?name
LIMIT 10",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
737,25,train,"Give me the child of Albrecht, Duke of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Albrecht, Duke of Württemberg
  ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Ensure the child is royalty
  ?albrechtChild a ?royaltyClass .
  FILTER(?royaltyClass IN (dbo:Monarch, dbo:RoyalFamilyMember))

  # Find if this child has Archduke Charles Louis of Austria as their own child
  ?child dbo:parent ?albrechtChild .
  ?child dbr:Archduke_Charles_Louis_of_Austria .

}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
399,5,train,Give me the band member of the person born as Emilia Yancheva Valeva.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Emilia Yancheva Valeva""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Emilia Yancheva Valeva""@en ;
          dbo:birthName ""Emilia Yancheva Valeva"" .
  
  OPTIONAL { 
    ?person dbo:musicGroup ?band .
  }
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
225,1,train,Give me the birthplace of Chieko Asakawa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Chieko Asakawa. You can find this by searching for her on DBpedia or using a SPARQL endpoint to query for her name.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
595,11,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?book dbo:author ?author .
  ?author dbo:title ""An Invitation to the White House""@en .
  ?author a dbo:Politician ;
          dbo:officeHolder ?office .
  ?author dbo:spouse ?spouse .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
293,43,train,"Give me the person born as Harriette Arlene Lake and party member of Republican Party (United States) and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake"" .
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) .
  
  ?spouseRelation dbo:spouse ?actor .
  ?spouseRelation dbo:spouse ?person .
  
  ?film dbo:producer dbr:Nat_Levine .
  ?film dbo:starring ?actor .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
816,5,train,Give me the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Eugène Cattin. You can find this identifier by searching for Eugène Cattin on DBpedia or Wikidata.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
89,32,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of Min Hla Htut of Pyakaung.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    ?myatHponePyo dbo:father ?father .
    
    ?father a dbo:Monarch .

    ?father dbo:spouse ?spouse .

    ?minHlaHtut dbo:parent ?parent .
    
    ?parent dbo:birthPlace dbr:Pyakaung .

    ?spouse dbo:childOf ?parent .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,50,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorName WHERE {
  # Find actors in ""Ab Kya Hoga""
  {
    SELECT ?actor WHERE {
      ?film dbo:starring ?actor .
      ?actor dbo:profession dbr:Actor .
      FILTER regex(str(?film), ""Ab_Kya_Hoga"", ""i"")
    }
  } UNION
  # Find alter ego of The Shadow
  {
    SELECT ?actor WHERE {
      ?character dbo:portrayedBy ?actor .
      ?actor dbo:profession dbr:Actor .
      FILTER regex(str(?character), ""The_Shadow"", ""i"")
    }
  }

  # Ensure the actor is also a politician
  {
    VALUES ?actor { ?actor1 ?actor2 }
    ?actor dbo:profession dbr:Politician .
  
    # Bind actor names
    OPTIONAL { ?actor rdfs:label ?actorName . FILTER(lang(?actorName) = ""en"") }
}
```",5,6,6,3,2,3,3,71,0,0,39640,0,0.0,0
198,53,train,"Give me the force of Quincy Adams Gillmore and war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?gillmoreForce ?awardWar ?lewisBirthplace WHERE {
  # Quincy Adams Gillmore's military rank or force
  dbr:Quincy_A._Gillmore dbo:militaryRank ?gillmoreForce .

  # Award given by the United States Congress related to a war
  ?award dbo:awardee dbr:United_States_Congress ;
         dbo:relatedEvent ?war .
  ?war rdf:type dbo:MilitaryConflict .

  BIND(?war AS ?awardWar)

  # Henry Clay Lewis's birthplace and nationality
  dbr:Henry_Clay_Lewis dbo:birthPlace ?lewisBirthplace ;
                       dbo:nationality dbr:United_States .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
353,35,train,"Give me the child of the parent of Roger III, Duke of Apulia and child of the child of Alfonso VI of León and Castile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonIndividual WHERE {
  # Step 1: Identify Roger III, Duke of Apulia
  ?rogerIII a dbo:Duke ;
            foaf:name ""Roger III"" .

  # Step 2: Find his parent (father)
  ?parent dbr:Roger_III,_Duke_of_Sicily dbo:child ?rogerIII .
  
  # Step 3: Determine the child of this parent
  ?childOfParent dbo:child ?parent .

  # Step 4: Identify Alfonso VI of León and Castile
  ?alfonsoVI a dbo:Monarch ;
             foaf:name ""Alfonso VI"" .
  
  # Step 5: Find the child of Alfonso VI
  ?childOfAlfonso dbr:Alfonso_VI_of_León_and_Castile dbo:child ?alfonsoVI .

  # Step 6: Determine the grandchild of Alfonso VI
  ?grandChildOfAlfonso dbo:child ?childOfAlfonso .
  
  # Step 7: Find the common individual who is both:
  # - The child of Roger III's parent.
  # - The grandchild of Alfonso VI.
  ?commonIndividual rdf:type dbo:Person ;
                    rdfs:label ?label ;
                    {
                      VALUES ?role {dbo:child}
                      ?commonIndividual ?role ?parent .
                      ?commonIndividual ?role ?grandChildOfAlfonso .
                    }
}",4,4,5,2,2,3,3,71,0,0,4,0,0.0,0
246,13,train,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent ?royalParent ?royalChild ?finalParent
WHERE {
  # Step 1: Identify Princess Aisha bint Faisal's parents
  dbr:Princess_Aisha_bint_Faisal dbo:childOf ?parent .

  # Step 2: Determine which of those parents are royalty
  ?parent a dbo:Monarch .
  
  # Step 3: Find the children of this royal parent
  ?parent dbo:child ?royalChild .

  # Step 4: Identify which of these children are royalty
  ?royalChild a dbo:Monarch .

  # Step 5: Finally, find the parent of that child
  ?royalChild dbo:childOf ?finalParent .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
871,26,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?person rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  
  # Step 2: Find his parents
  ?person dbo:childOf ?parent .

  # Step 3: For each parent, find their children
  ?parent dbo:child ?child .

  # Step 4: Check if any child is both a politician and an office holder
  ?child rdf:type dbo:Politician .
  ?child dbo:officeHolder ?office .

  # Step 5: Identify the parent of this qualifying child
  ?child dbo:parent ?grandparent .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
687,15,train,"Give me the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  # Find Marty Pollio's birthdate
  VALUES (?martyBirthDate) { 
    SELECT ?birthdate WHERE {
      dbr:Marty_Pollio dbo:birthday ?birthdate .
    }
  }

  # Find athletes born on the same date as Marty Pollio
  ?person a dbo:Athlete ;
          dbo:birthday ?birthdate .
  
  FILTER (?birthdate = ?martyBirthDate)
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
159,13,train,Give me the reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v1 . },"```sparql
SELECT ?writer WHERE {
  ?album dcterms:title ""Always the Love Songs""@en .
  ?album dbo:artist ?person .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""always the love songs""))
}
```",2,2,3,2,1,3,3,71,0,0,98450,0,0.0,0
871,47,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent WHERE {
  # Step 1: Identify Edward Stanley, 17th Earl of Derby
  ?edward a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .

  # Step 2: Find his parent
  ?parent dbo:child ?edward .

  # Step 3: Find the grandparent (parent's parent)
  ?grandparent dbo:child ?parent .

  # Step 4: Ensure the grandparent is a politician and an office holder
  ?grandparent dbo:occupation dbr:Politician ;
               dbo:officeHolder true .

  # Step 5: The grandparent must be the parent of someone who received the Commander of the Royal Victorian Order
  ?awardee dbo:child ?grandparent .
  ?awardee dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,50,train,"Give me the office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/office> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderOffice ?conflictName ?partyLeaderOffice
WHERE {
  # Find Manuel Pinto da Costa's role as a commander in a military conflict
  dbr:Manuel_Pinto_da_Costa dbo:office ?commanderOffice .
  ?commanderOffice dbo:fieldOfActivity dbr:Military_conflict .

  # Get the name of the military conflict
  ?conflict dbr:Military_conflict .
  ?commanderOffice dbo:fieldOfActivity ?conflict .
  ?conflict rdfs:label ?conflictName .

  # Find the leader of the Conservative Republican Party (Spain)
  dbr:Conservative_Republican_Party_(Spain) dbo:leader ?partyLeader .
  ?partyLeader dbo:office ?partyLeaderOffice .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
513,9,train,Give me the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?v0 <http://dbpedia.org/property/awards> ?result . }","```sparql
SELECT ?award WHERE {
  wd:Q1234567 dbo:award ?award .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier (Q-number) for George Hamilton Cameron. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
557,5,train,Give me the actor of Johnny Doughboy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film dbo:title ""Johnny Doughboy""@en .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
119,4,train,Who is the leader of 2009 Galician regional election?,SELECT ?result WHERE { <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:electionDate ?date .
  FILTER (YEAR(?date) = 2009)
  ?election dbo:region dbr:Galicia .
  ?party dbo:leader ?leader .
  ?election dbo:winnerParty ?party .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
595,28,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in Third Taiwan Strait Crisis and author of Back to Work (book).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbo:author ""An Invitation to the White House""@en ;
          dbo:author ""Back to Work (book)""@en ;
          dbo:officeHolder true ;
          dbo:commanderOf dbr:Third_Taiwan_Strait_Crisis .
  
  ?person dbo:spouse ?spouse .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
595,56,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book) and commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Barack Obama as the author
  ?author a dbo:Writer ;
          foaf:name ""Barack Obama"" ;
          dbo:authored dbr:An_Invitation_to_the_White_House ;
          dbo:authored dbr:Back_to_Work_(book) .

  # Link to his role in the Iraq War
  ?war a dbo:MilitaryConflict ;
      dbo:commander ?author ;
      rdfs:label ""Iraq War""@en .
  
  # Identify USS Arcadia's owner during World War I
  ?ship a dbo:Ship ;
       dbo:owner dbr:United_States ;
       foaf:name ""USS Arcadia (ID-1605)"" .

  # Find the spouse who is a politician and office holder
  ?author dbo:spouse ?spouse .
  ?spouse a dbo:Politician, dbo:OfficeHolder ;
          foaf:name ?name .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
39,57,train,"Give me the professional in Singer and professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?v3 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?creationProfession ?alterEgoProfession ?bandName
WHERE {
  # Walter B. Gibson's creation and its alter ego
  dbr:The_Shadow dbo:profession ?creationProfession .
  
  OPTIONAL {
    ?alterEgo dbo:alias ""The Shadow"" ;
              dbo:profession ?alterEgoProfession .
  }
  
  # Robert Lamar Thompson (Prince) and his band
  dbr:Prince dbo:bandMember ?band .
  ?band dbo:name ?bandName .
}
```",6,9,7,3,3,3,3,71,0,0,3,0,0.0,0
203,1,train,Give me the military force of Battle of Fort Royal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?battle a dbo:MilitaryConflict ;
          dbo:participatedIn ?event .
  
  FILTER(CONTAINS(LCASE(str(?battle)), ""fort royal""))
  
  ?event dbo:combatant ?force .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
905,23,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Philip, Despot of Romania
  ?philip a dbo:Person ;
          dbp:name ""Philip, Despot of Romania""@en .
  
  # Step 2: Find his parent (father) who is royalty
  ?philip dbo:parent ?father .
  ?father a dbo:Monarch .

  # Step 3: Find that parent's father
  ?father dbo:parent ?grandfather .

  # Step 4: Retrieve the spouse of this great-grandfather
  ?grandfather dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
737,49,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royalDescendant WHERE {
  # Step 1: Find parent of Archduchess Margarete Sophie of Austria
  ?parent a dbo:Person ;
          dbo:child ?margareteSophie .
  
  # Step 2: Find child of this parent
  ?parentChild a dbo:Person ;
               dbo:childOf ?parent .

  # Step 3: Find child of Philipp Albrecht, Duke of Württemberg
  ?philippAlbrechtChild a dbo:Person ;
                        dbo:childOf ?philippAlbrecht .
  
  # Step 4: Find predecessor in terms of lineage or title
  ?predecessor a dbo:Person ;
               dbo:successor ?philippAlbrechtChild .

  # Step 5: Find child of the parent's child that is royalty
  ?royalDescendant a dbo:RoyalFamilyMember ;
                   dbo:childOf ?parentChild .
  
  FILTER(?margareteSophie = dbp:Margarete_Sophie_of_Austria)
  FILTER(?philippAlbrecht = dbp:Philipp_Albrecht,_Duke_of_Württemberg)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,47,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of Sam Concepcion.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v0 <http://dbpedia.org/property/alterEgo> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  # Find characters created by Walter B. Gibson
  ?character dbo:creator dbr:Walter_B._Gibson .
  
  # Ensure the character is fictional and appears in comics
  ?character a dbo:FictionalCharacter ;
             dbo:mediaType dbr:Comics .

  # Check if the character has a profession related to acting or singing
  OPTIONAL { ?character dbo:profession dbr:Actor . }
  OPTIONAL { ?character dbo:profession dbr:Singer . }

  FILTER EXISTS { ?character dbo:profession ?prof .
                 VALUES ?prof { dbr:Actor dbr:Singer } }
}
```",5,7,6,3,2,3,3,71,0,0,39640,0,0.0,0
668,37,train,"Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in the profession of the writer, that is a musical artist, of The Live Anthology.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person dbo:profession dbr:Writer ;
          dbo:profession dbr:Musical_artist .
  OPTIONAL { 
    ?work dbo:title ""The Live Anthology""@en ;
          dbo:artist ?person .
  }
}
```

This query does the following:
- Searches for a person with the name and birth name matching Darryl Paa Kwesi Bannerman-Martin.
- Ensures that this person is associated with both the professions of writer and musical artist.
- Checks if there's an association between this person and ""The Live Anthology"" as an artist.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
531,19,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Mariano Rajoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?residenceAlberto ?officeMariano WHERE {
  ?alberto a dbo:Person ;
          foaf:name ""Alberto Ruiz-Gallardón""@en .
  OPTIONAL { ?alberto dbo:residence ?residenceAlberto . }
  
  ?mariano a dbo:Person ;
           foaf:name ""Mariano Rajoy""@en .
  OPTIONAL { ?mariano foaf:workplaceHomepage ?officeMariano . }
}
```",3,3,4,2,2,3,3,71,0,2,2,0.0,0.0,0
59,8,train,"Give me the native of Bristol and manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bristol> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?nativePlace WHERE {
  # Find Jamie McCunnie's team
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Jamie McCunnie""@en .
  
  ?player dbo:playsFor ?team .

  # Ensure the team is both a sports club and a soccer club
  ?team a dbo:SportsClub, dbo:SoccerTeam .

  # Find the manager of the team
  ?team dbo:manager ?manager .

  # Check if the manager is native to Bristol
  ?manager dbp:nativePlace dbr:Bristol .
  
  OPTIONAL { 
    ?manager dbo:nationality ?nationality .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
38,16,train,"Give me the author of the work, that is a work and a written work and American and a book, of Joe Biden and author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  # Find works by Joe Biden that are written works, American, and books
  ?work dbo:author dbr:Joe_Biden ;
        a dbo:CreativeWork, dbo:Book ;
        dbo:country dbr:United_States .

  # Get the author of these works
  ?work dbo:author ?author .
}
```

This query does the following:
- It selects distinct authors (`?author`) for works authored by Joe Biden.
- The `?work` variable represents the work itself, which must be a subclass of both `dbo:CreativeWork` and `dbo:Book`.
- It ensures that these works are associated with the United States (`dbo:country dbr:United_States`).",4,10,5,2,2,3,2,20,0,0,1,0,0.0,0
59,3,train,"Give me the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Jamie McCunnie in DBpedia
  ?person a dbo:Person ;
          foaf:name ""Jamie McCunnie""@en .
  
  # Link the person to a player role
  ?person dbo:role ?playerRole .

  # Ensure the player is associated with both a sports club and a soccer club
  ?playerRole dbo:team ?sportsClub .
  ?playerRole dbo:team ?soccerClub .
  
  FILTER(?sportsClub != ?soccerClub) # Ensure they are distinct clubs

  # Bind the player to the result variable
  ?playerRole dbo:agent ?player .

}
```

This query assumes that Jamie McCunnie is represented as a `dbo:Person` in DBpedia and has a role (`dbo:role`) associated with him, which links to teams or clubs. The query checks for associations with both sports clubs and soccer clubs, ensuring they are distinct entities.",1,3,2,1,1,2,2,9,0,0,12,0,0.0,0
769,1,train,Give me the player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:member ?player .
  ?team rdfs:label ""Lai Sun Cheung""@en .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
347,54,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France) and father of the child of the parent of Archduke Charles Joseph of Austria.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v5 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Ferdinand II and his children
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:child ?child .

  # Child is a commander in the war
  ?child dbo:occupation dbr:Military_commander .

  # Child is associated with societal event, an event, and a television show
  ?child dbo:type dbr:Societal_event .
  ?child dbo:type dbr:Event .
  ?child dbo:type dbr:Television_show .

  # Related to 2nd Dragoon Regiment (France)
  ?child dbo:memberOf dbr:2nd_Dragoon_Regiment_(France) .

  # Father of the child of the parent of Archduke Charles Joseph
  ?parentParent dbo:child dbr:Archduke_Charles_Joseph_of_Austria .
  ?parentParent dbo:child ?parent .
  ?parent dbo:child ?grandChild .
  ?child dbo:father ?parent .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
871,3,train,Give me the award of Rodney Lees.,SELECT ?result WHERE { <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Rodney Lees""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
159,19,train,"Give me the reference to George Ducas and successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Find George Ducas and his role in the Russo-Polish War
  ?ducas a dbo:Person ;
         foaf:name ""George Ducas"" ;
         dbo:role ?role .
  
  # Identify the successor of George Ducas in that role
  ?role dbo:succeededBy ?successor .

  # Ensure the successor is a politician and office holder
  ?successor a dbo:Politician ;
             dbo:officeHolder true .
}
```

This query assumes:
- There are properties like `dbo:role`, `dbo:succeededBy`, and `dbo:officeHolder` that can be used to find the role, successor, and verify if someone is an office holder.
- The names and roles are correctly linked in DBpedia.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
609,37,train,"Give me the birth place of Cece Bell and birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/governor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?ceceBirthPlace ?paulusBirthPlace ?region ?adminRegion ?governor

{
  # Find Cece Bell's birthplace
  {
    SELECT ?ceceBirthPlace WHERE {
      dbr:Cecilie_Bell dbo:birthPlace ?ceceBirthPlace .
    }
  }

  # Find Paulus Powell's birthplace and its region and administrative region
  {
    SELECT ?paulusBirthPlace ?region ?adminRegion WHERE {
      dbr:Paulus_Powell dbo:birthPlace ?paulusBirthPlace .
      
      OPTIONAL { ?paulusBirthPlace dbo:locatedIn ?region . }
      OPTIONAL { ?paulusBirthPlace dbo:administrativeRegion ?adminRegion . }
    }
  }

  # Find the governor of the region
  {
    SELECT ?governor WHERE {
      ?adminRegion dbo:governmentLeader ?governor .
    }
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
609,36,train,"Give me the birth place of the author of the reference, that is American, to El Deafo and birth place of Vince Gilligan.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?birthPlace WHERE {
  # Cece Bell, author of El Deafo
  VALUES ?elDeafoAuthor { dbr:Cece_Bell }
  ?elDeafoAuthor dbo:nationality dbr:United_States .
  ?elDeafoAuthor dbo:birthPlace ?birthPlace .

  UNION

  # Vince Gilligan
  VALUES ?vinceGilligan { dbr:Vince_Gilligan }
  ?vinceGilligan dbo:nationality dbr:United_States .
  ?vinceGilligan dbo:birthPlace ?birthPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
23,10,train,Give me the entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?person dbo:nationality dbr:Colombia .
  ?person rdfs:label ""Daniel Elahi Galán""@en .
  
  OPTIONAL { ?person dbo:birthPlace ?place . }
  OPTIONAL { ?person dbo:residence ?residence . }

  FILTER(?entity != ?person)
  ?entity dbo:nationality dbr:Colombia .
}
```",2,2,3,2,1,2,3,28,0,0,2141,0,0.0,0
687,39,train,"Give me the player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInTeam WHERE {
  # Get Marcelo Sarmiento's birthday
  dbr:Marcelo_Sarmiento dbo:birthday ?birthday .

  # Find a soccer player and manager born on that date
  ?person dbo:birthday ?birthday ;
          rdf:type dbo:SoccerPlayer, dbo:SoccerManager .

  # Get Sergio Agüero's team at the time of his birth
  dbr:Sergio_Agüero dbo:birthDate ?agüeroBirthDate .
  ?team dbp:player dbr:Sergio_Agüero ;
        dbp:member ?playerInTeam .

  FILTER (?agüeroBirthDate <= ?birthday)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
39,38,train,"Give me the professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as Robert Lamar Thompson.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?band
WHERE {
  # Find The Shadow's alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:aliasName ?alterEgo .
    FILTER(CONTAINS(LCASE(?alterEgo), ""lamont cranston""))
  }
  
  # Find Rob Zombie's band
  OPTIONAL {
    dbr:Rob_Zombie dbo:band ?band .
    FILTER(CONTAINS(LCASE(?band), ""white zombie""))
  }
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
595,2,train,Give me the commander in Third Taiwan Strait Crisis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects db:Q1234567 ; # Replace Q1234567 with the actual DBpedia resource ID for ""Third Taiwan Strait Crisis""
    dbo:agent ?person .
  ?person dbo:occupation ""military commander""@en ;
          dbo:memberOf ?organization .
  FILTER EXISTS { ?organization rdfs:label ""People's Liberation Army""@en }
}
```",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
782,9,train,Give me the reference to The Fabulous Thunderbirds and band of Kim Wilson.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
SELECT ?reference WHERE {
  ?band rdf:type dbo:MusicalBand ;
        foaf:name ""The Fabulous Thunderbirds"" .
  OPTIONAL { ?band dbo:leadMember ?member . }
  OPTIONAL { ?band dbo:bandMember ?member . }
  FILTER(?member = dbr:Kim_Wilson)
  ?reference dbo:about ?band .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
384,5,train,"Give me the party of the successor, that is a politician and French, of Patrice Martin-Lalande.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France>. <http://dbpedia.org/resource/Patrice_Martin-Lalande> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successorParty WHERE {
  # Find Patrice Martin-Lalande's role or position
  ?patrice a dbo:Politician ;
           foaf:name ""Patrice Martin-Lalande""@en ;
           dbo:officeHolder ?position .

  # Find the successor in that position
  ?position dbo:successor ?successor .

  # Ensure the successor is a politician and French
  ?successor a dbo:Politician ;
             dbo:nationality dbr:Francois ;  # Assuming nationality resource for France
             foaf:name ?name .
  
  # Get the political party of the successor
  ?successor dbp:party ?successorParty .
}
```

This query assumes that:
- The `dbo:officeHolder` property links a politician to their position.
- The `dbo:successor` property identifies the successor in a given role.
- The `dbo:nationality` property is used to specify nationality, with `dbr:Francois` representing France (you may need to adjust this based on actual DBpedia resources).
- The `dbp:party` property provides information about the political party.",2,4,3,2,1,2,2,9,0,0,6,0,0.0,0
609,12,train,Give me the birth place of Cece Bell and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlaceLabel WHERE {
  VALUES ?person { 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin 
  }
  
  ?person dbo:birthPlace ?birthPlace .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,58,train,"Give me the child of Roger II of Sicily and child of the child of the spouse, that is a royalty, of Constance of Burgundy and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfRogerII ?royaltyChildOfConstanceSpouse ?fatherOfWilliamIChild
WHERE {
  # Roger II of Sicily's children
  ?roger2 dbo:child ?childOfRogerII .
  FILTER (strstarts(STR(?childOfRogerII), ""http://dbpedia.org/resource/""))

  # Constance of Burgundy's spouse and their child who is a royalty
  dbr:Constance_of_Burgundy dbo:spouse ?constanceSpouse .
  ?constanceSpouse dbo:child ?royaltyChildOfConstanceSpouse .
  FILTER (strstarts(STR(?royaltyChildOfConstanceSpouse), ""http://dbpedia.org/resource/""))

  # William I of Sicily's child who is a royalty
  dbr:William_I_of_Sicily dbo:child ?williamIChild .
  FILTER (strstarts(STR(?williamIChild), ""http://dbpedia.org/resource/""))
  
  # The father of William I's royal child
  ?williamIChild dbo:father ?fatherOfWilliamIChild .
  FILTER (strstarts(STR(?fatherOfWilliamIChild), ""http://dbpedia.org/resource/""))

  # Find the intersection
  VALUES ?commonPerson { ?childOfRogerII ?royaltyChildOfConstanceSpouse }
  ?commonPerson ?p1 ?fatherOfWilliamIChild .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
905,29,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary and spouse of Charles II of Naples and child of Stephen V of Hungary.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Charles I of Hungary and his father
  dbr:Charles_I_of_Hungary dbo:father ?father .
  
  # Ensure the father is a royalty
  ?father rdf:type dbo:Monarch .

  # Spouse of Charles II of Naples who is also child of Stephen V of Hungary
  ?spouse dbo:spouse dbr:Charles_II_of_Naples ;
          dbo:childOf dbr:Stephen_V_of_Hungary .
  
  # The father identified above should be the spouse we found
  ?father owl:sameAs ?spouse .

  # Find the parent of this spouse
  ?spouse dbo:parent ?parent .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
687,2,train,Give me the team of Pablo Aimar.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"```sparql
SELECT ?team WHERE {
  wd:Q12345 dbo:memberOfTeam ?team .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Pablo Aimar. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
103,0,train,Give me the actor of Dispatches from Elsewhere.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dct:subject dbr:Dispatches_from_Elsewhere .
  ?movie dbo:starring ?actor .
  FILTER (lang(?actor) = ""en"")
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
119,4,train,"Who is the native, that is Polish and an athlete, of Łódź?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person dbo:nationality dbr:Poland .
  ?person dbo:hometown dbr:Łódź .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
756,6,train,"Give me the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration
WHERE {
  VALUES ?person { dbr:Theodor_Heuss }
  ?person dbo:country ?administration .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
628,25,train,"Give me the person born as Ackquille Jean Pollard and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?nativeRegion WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ackquille Jean Pollard""@en ;
          dbo:birthName ?birthName .
  
  OPTIONAL { ?person dbo:nativePlace ?nativeRegion . }
  
  FILTER (regex(str(?nativeRegion), ""California"", ""i"") || regex(str(?nativeRegion), ""Coro de la Pontificia Universidad Católica de Puerto Rico"", ""i""))
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
905,58,train,"Give me the spouse of Charles II of Naples and child of the child, that is a royalty, of the predecessor of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?grandchild ?predecessorChild ?parentOfFather
WHERE {
  # Charles II of Naples and his spouse
  dbr:Charles_II_of_Naples dbo:spouse ?spouse .

  # Child of the child (royalty) from Charles II's spouse
  ?spouse dbo:child ?child .
  ?child dbo:child ?grandchild .
  FILTER EXISTS { ?grandchild a dbo:Monarch } 

  # Predecessor of Stephen V of Hungary and their royal child
  dbr:Stephen_V_of_Hungary dbo:predecessor ?predecessor .
  ?predecessor dbo:child ?predecessorChild .
  FILTER EXISTS { ?predecessorChild a dbo:Monarch } 

  # Parent of the father (royalty) of Charles I of Hungary
  dbr:Charles_I_of_Hungary dbo:father ?father .
  ?father dbo:parent ?parentOfFather .
  FILTER EXISTS { ?parentOfFather a dbo:Monarch }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
756,49,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26 and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?manager
WHERE {
  # Step 1: Find the sports manager born on 1968-08-26
  ?person dbo:birthDate ""1968-08-26""^^xsd:date ;
          a dbo:SportsManager .

  # Step 2: Identify the player they managed in the 2007–08 VfL Bochum season
  ?player dbo:manager ?person ;
          dbo:teamSeason dbr:2007%E2%80%9308_VfL_Bochum_season .

  # Step 3: Find the soccer club (team) for that player in the 2007–08 VfL Bochum season
  ?club a dbo:SoccerClub ;
        dbo:season dbr:2007%E2%80%9308_VfL_Bochum_season .

  # Step 4: Retrieve the manager of that soccer club for the same season
  ?club dbo:manager ?manager .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
595,20,train,"Give me the spouse of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/author> ?result . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
SELECT ?spouse ?book WHERE {
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person foaf:name ""Bill Clinton""@en .
  ?person dbo:author ?book .
  ?book a dbo:Book .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
23,16,train,Give me the party of Roy Barreras and party of the father of Sofía Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royPartyLabel ?sofiaFatherName ?fatherPartyLabel
WHERE {
  # Roy Barreras' political party
  ?roy a dbo:Person ;
       foaf:name ""Roy Barreras"" ;
       dbp:party ?royParty .
  
  # Sofia Petro's father
  ?sofia a dbo:Person ;
         foaf:name ""Sofía Petro"" ;
         dbp:father ?father .

  # Father's political party
  ?father a dbo:Person ;
          foaf:name ?fatherName ;
          dbp:party ?fatherParty .
  
  # Labels for the parties and father's name
  ?royParty rdfs:label ?royPartyLabel .
  ?father rdfs:label ?fatherName .
  ?fatherParty rdfs:label ?fatherPartyLabel .

  FILTER (lang(?royPartyLabel) = 'en')
  FILTER (lang(?fatherName) = 'en')
  FILTER (lang(?fatherPartyLabel) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
706,1,train,Give me the birthplace of Smita Patil.,SELECT ?result WHERE { <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Smita Patil. You can find this by searching for her on DBpedia or using a SPARQL endpoint to query for her name.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
531,44,train,"Give me the office of the leader, that is a politician, of Conservative Republican Party (Spain) and tenant of Madrid and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOffice ?commanderOffice
WHERE {
  # Leader of the Conservative Republican Party (Spain) who is a politician and tenant of Madrid
  ?person dbo:partyLeader dbr:Conservative_Party_(Spain);
          rdf:type dbo:Politician;
          dbo:residence dbr:Madrid.
  
  # Office held by the leader
  ?person dbo:office ?leaderOffice.

  # Commander in the Central African Republic Civil War who is an office holder and a politician
  ?commander rdf:type dbo:Politician, dbo:OfficeHolder;
             dbo:roleInEvent dbr:Central_African_Republic_Civil_War_(2012–present).
  
  # Office held by the commander
  ?commander dbo:office ?commanderOffice.
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
159,23,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac's role as a commander in a military conflict
  ?michal_kazimierz_pac dbo:role ?commanderRole .
  ?commanderRole dbo:fieldOfActivity dbr:Military_conflict .

  # Successor of Michał Kazimierz Pac
  ?successor dbo:succeededBy ?michal_kazimierz_pac .

  # The successor must be a politician and an office holder
  ?successor rdf:type dbo:Politician .
  ?successor dbo:officeHolderOf ?office .
}
```",3,7,4,3,1,3,3,71,0,0,3,0,0.0,0
943,32,train,"Give me the reference to the alter ego of The Shadow and child of the parent, that is a royalty, of Yeshaq I.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?royalChild WHERE {
  # Find The Shadow and its alter ego
  ?shadow dbo:alterEgo ?alterEgo .
  FILTER (str(?shadow) = ""The_Shadow"")

  # Find Yeshaq I and his child who is royalty
  dbr:Yeshaq_I dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Link the alter ego to the royal child
  ?alterEgo rdfs:label ?labelAlterEgo .
  ?royalChild rdfs:label ?labelRoyalChild .
  
  FILTER (lang(?labelAlterEgo) = ""en"" && lang(?labelRoyalChild) = ""en"")
}
```

This query assumes:
- The Shadow has an `alterEgo` property.
- Yeshaq I's child is a `Monarch`.
- Labels are in English.",4,5,5,2,2,3,3,71,0,0,3,0,0.0,0
246,9,train,"Give me the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Identify Princess Aisha bint Faisal
  ?princess a dbo:Person ;
            foaf:name ""Princess Aisha bint Faisal""@en .
  
  # Step 2: Find her parents who are royalty
  ?parent dbo:spouseOrPartner ?princess ;
          a dbo:RoyalFamilyMember .

  # Step 3: From those parents, find their children who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:RoyalFamilyMember .
}
```

This query assumes that Princess Aisha bint Faisal is uniquely identified by her name in DBpedia. It also uses the `dbo:RoyalFamilyMember` class to identify individuals who are part of a royal family.",2,4,3,2,1,3,2,20,0,0,4,0,0.0,0
39,59,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson and professional in the profession of the producer of Coke Studio Philippines.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coke_Studio_Philippines> <http://dbpedia.org/ontology/producer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find Lamont Cranston as an alter ego of The Shadow
  ?shadowCreator dbo:creatorOf dbr:The_Shadow .
  ?alterEgo dbo:alterEgoOf dbr:The_Shadow ;
            rdfs:label ""Lamont Cranston""@en .

  # Find the producer of Coke Studio Philippines
  ?producer dbo:profession dbr:Producer ;
            dbo:worksFor dbr:Coke_Studio_Philippines .
  
  # Check if there's any connection between Lamont Cranston and the producer
  OPTIONAL { ?alterEgo dbo:relatedTo ?producer }
}
```",6,8,7,3,2,3,3,71,0,0,39640,0,0.0,0
628,55,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Find Bobby Shmurda's associated musical artist
  dbr:Bobby_Shmurda dbo:musicalArtist dbr:Associated_Artist .

  # Identify a band member who is also a musical artist
  dbr:Associated_Artist dbo:member ?bandMember .
  ?bandMember a dbo:MusicalArtist .

  # Ensure the person is born as Bobby Shmurda
  ?person dbp:birthName ""Bobby Shmurda""@en .
  ?person = dbr:Bobby_Shmurda .

  # Find the award related to Coro de la Pontificia Universidad Católica de Puerto Rico
  dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico dbo:award dbr:Award .
  
  # Ensure the award is a region, American, state, and settlement
  ?region rdf:type dbo:Region ;
          dbo:country dbr:United_States ;
          dbo:state dbr:Puerto_Rico ;
          dbo:settlement dbr:Ciudad_de_Ponce .

  # Link the band member to this region
  ?bandMember dbp:nativePlace ?region .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
353,20,train,"Give me the child of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfRogerII ?royalChildOfWilliamI WHERE {
  # Find children of Roger II of Sicily
  ?person dbo:father dbr:Roger_II_of_Sicily .
  
  # Ensure the person is a child of Roger II and also has children (potential father)
  ?person dbo:child ?child .

  # Find children of William I of Sicily who are royalty
  ?royalChild dbo:mother dbr:William_I_of_Sicily .
  ?royalChild rdf:type dbo:Monarch .

  # Ensure the person is a parent to one of these royal children
  ?person dbo:child ?royalChild .

  # Return the child of Roger II who is also a father to a royal child of William I
  BIND(?person AS ?childOfRogerII)
  BIND(?royalChild AS ?royalChildOfWilliamI)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
78,13,train,"Give me the associated musical artist of the person born, that is a musical artist, as Stuart Mcbeath Tosh and associated musical artist of Billy Lyall.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 WHERE {
  # Find associated musical artists for Stuart Mcbeath Tosh
  OPTIONAL {
    ?stuart a dbo:Person ;
            foaf:name ""Stuart Mcbeath Tosh"" .
    ?stuart dbo:musicalArtist ?artist1 .
  }

  # Find associated musical artists for Billy Lyall
  OPTIONAL {
    ?billy a dbo:Person ;
           foaf:name ""Billy Lyall"" .
    ?billy dbo:musicalArtist ?artist2 .
  }
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
756,19,train,"Give me the native of West Germany and manager of the player, that is a sports club and an organisation and a soccer club, in 2007–08 VfL Bochum season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/West_Germany> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2007–08_VfL_Bochum_season> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?nativeCountry WHERE {
  # Find VfL Bochum
  VALUES ?club { dbr:VfL_Bochum }
  
  # Identify the manager during the 2007-08 season
  ?manager dbo:managedSportTeam ?club .
  ?manager dbp:yearsAsManager ""2007–08""^^xsd:string .

  # Check if the manager is from West Germany
  ?manager dbo:nationality dbr:West_Germany .

  # Ensure the club is a sports club, organization, and soccer club
  ?club rdf:type dbo:SportsClub .
  ?club rdf:type dbo:Organization .
  ?club rdf:type dbo:FootballTeam .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
905,47,train,"Give me the parent of the father, that is a royalty, of the spouse of Maria of Bytom and spouse of the father of Philip I, Prince of Taranto.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Philip_I,_Prince_of_Taranto> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royaltyParent WHERE {
  # Maria of Bytom's spouse
  ?maria dbp:spouse ?mariaSpouse .
  
  # Father of Philip I, Prince of Taranto
  ?philip dbo:father ?philipFather .
  
  # Spouse of Philip I's father
  ?philipFather dbp:spouse ?commonSpouse .

  # Common spouse between Maria of Bytom and Philip I's father
  FILTER (?mariaSpouse = ?commonSpouse)

  # Parent of the common spouse who is royalty
  ?commonSpouse dbo:parent ?royaltyParent .
  
  # Ensure the parent is a royalty
  ?royaltyParent rdf:type dbo:Monarch .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
80,1,train,Give me the actor of ATL (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?film a dbo:Film .
  ?film dbo:title ""ATL""@en .
  ?film dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
628,18,train,Give me the native of Florida and person born as Ackquille Jean Pollard and band member of Uncle Murda.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Ackquille Jean Pollard"" .
  ?person dbo:birthPlace dbr:Florida .
  ?bandMemberOf dbo:memberOf dbr:Uncle_Murda .
  ?person ?p ?bandMemberOf .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
687,48,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on the birthday of Marty Pollio.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person dbo:birthday ""1979-11-03""^^xsd:date ;
          dbo:sport dbr:Soccer ;
          dbo:occupation dbr:Soccer_manager .
  
  # Get Marty Pollio's birthday
  ?marty dbp:birthday ?martyBirthday .

  # Find the athlete born on Marty Pollio's birthday
  ?athlete dbo:birthday ?martyBirthday ;
           dbo:sport ?sport .

  # Check if this athlete played for the team of the person identified above
  ?person dbo:team ?team .
  
  OPTIONAL {
    ?athlete dbo:team ?team .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
158,22,train,"Give me the person decedent at the birthplace, that is a country, of Sandro Bertaggia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Sandro_Bertaggia> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find Sandro Bertaggia's birthplace that is a country
  dbr:Sandro_Bertaggia dbo:birthPlace ?birthCountry .
  
  FILTER (isLiteral(?birthCountry) && datatype(?birthCountry) = xsd:string)
  
  # Identify the administration of Alexander II, Grand Duke of Finland
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:country ?finlandAdmin .

  # Find a person who died in Sandro Bertaggia's birthplace (a country)
  ?decedent dbo:deathPlace ?birthCountry .
  
  FILTER (!isLiteral(?decedent))
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
159,1,train,Give me the reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  ?resource rdfs:label ""George Ducas""@en.
  ?resource dbo:wikiPageRedirects ?redirect.
  OPTIONAL { ?redirect dbo:wikiPageExternalLink ?reference. }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
769,2,train,Give me the birthday of Tony Hollings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthday WHERE {
  wd:Q1234568 dbo:birthday ?birthday .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Tony Hollings. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for entities matching ""Tony Hollings"".",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
347,46,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:commandedMilitaryForce dbr:Algerian_War .
  
  ?societalEvent dbo:relatedPerson ?commander .
  ?tvShow dbo:relatedPerson ?commander .

  ?child dbo:parent dbr:Ferdinand_III,_Holy_Roman_Emperor ;
         dbo:father ?commander .
}
```

This query attempts to find a person (`?commander`) who:
- Commanded the military force during the Algerian War.
- Is related to both a societal event and a television show.
- Is the father of a child whose parent is Ferdinand III, Holy Roman Emperor.",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,57,train,"Give me the spouse of Charles II of Naples and parent of the father, that is a royalty, of the spouse of Maria of Bytom and child of the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Charles_II_of_Naples> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Step 1: Charles II of Naples' spouse
  ?charles2 dbo:spouse ?spouse .
  FILTER(STR(?charles2) = ""Charles_II_of_Naples"")

  # Step 2: Parent of the father of that spouse (grandfather)
  ?spouse dbo:father ?father .
  ?father dbo:parent ?grandfather .

  # Ensure this person is royalty
  ?grandfather a dbo:Monarch .

  # Step 4: Maria of Bytom's spouse
  ?maria dbp:spouse ?mariaSpouse .
  FILTER(STR(?maria) = ""Maria_of_Bytom"")

  # Step 5: Child of that spouse
  ?mariaSpouse dbo:child ?child .

  # Ensure this child is royalty
  ?child a dbo:Monarch .

  # Step 7: Béla IV of Hungary's child
  ?bela4 dbo:child ?belasChild .
  FILTER(STR(?bela4) = ""Béla_IV_of_Hungary"")

  # Step 8: Grandchild of that child
  ?belasChild dbo:child ?grandchild .

  # Ensure this grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Step 10: Match the two individuals
  FILTER(?grandfather = ?grandchild)
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
38,14,train,"Give me the author of the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?author WHERE {
  # Find a commander during the Korean conflict
  ?commander dbo:officeHolderOf ?office .
  ?office dbo:relatedEvent dbr:Korean_War .

  # Identify written works associated with this commander
  ?work dbo:creator ?commander ;
        a dbo:CreativeWork .

  # Get the author of the work
  OPTIONAL { ?work dbo:author ?author . }
  
  FILTER(?author != ?commander) # Ensure we get an actual author, not the commander themselves
}
```",3,6,4,3,1,3,2,20,0,0,24,0,0.0,0
80,48,train,Give me the actor of the movie with the author of Smartbomb (book) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find the author of ""Smartbomb""
  ?book dbo:title ""Smartbomb""@en .
  ?book dbo:author ?author .

  # Step 2: Find a movie associated with this author
  ?movie dbo:writer ?author .
  
  # Step 3: Get an actor from that movie
  ?movie dbo:starring ?actor .

  # Step 4: Identify the profession of The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  ?alterEgo dbo:profession ?profession .

  # Step 5: Ensure the actor is professional in that field (hypothetical link)
  OPTIONAL { ?actor dbo:occupation ?profession }
}
```",5,5,6,3,2,3,3,71,0,0,7802,0,0.0,0
198,7,train,Give me the person deceased on 1850-08-05.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
859,15,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find the associated musical artist of Phantomsmasher
  ?phantomsmasher dbo:musicalArtist ?artist .

  # Step 2: Identify a band member of this artist who is part of a band, group, and organization
  ?member dbo:memberOfBand ?band ;
          dbo:memberOfGroup ?group ;
          dbo:memberOfOrganization ?organization .

  # Ensure the band member is associated with the musical artist found in step 1
  ?artist dbo:bandMember ?member .

  # Step 3: Reference to ""Burnt by the Sun"" as a group
  dbr:Burnt_by_the_Sun dbo:type dbr:Group .
  
  # Ensure the band member is part of the same artist's associated entities
  FILTER(?band != """" && ?group != """" && ?organization != """")
}
```",4,8,5,3,2,3,2,20,0,0,5,0,0.0,0
39,56,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the profession of Sam Concepcion and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Get Bob Thompson's birth name
  dbr:Bob_Thompson_(musician) dbo:birthName ?birthName .

  # Get Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?profession .

  # Find a person with the same birth name and profession
  ?person dbo:birthName ?birthName .
  ?person dbo:profession ?profession .

  # Get the band of that person
  ?person dbo:bandMember ?band .
}
```",6,7,7,3,3,3,3,71,0,0,4,0,0.0,0
941,11,train,"Give me the child of the parent, that is a royalty, of Duke Anthony Ulrich of Brunswick and spouse of Prince Augustus William of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_Augustus_William_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Duke_Anthony_Ulrich_of_Brunswick> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Duke Anthony Ulrich of Brunswick as a parent
  ?parent dbo:spouse ?mother .
  ?parent rdfs:label ""Duke Anthony Ulrich of Brunswick""@en .

  # Child relationship
  ?parent dbo:child ?child .

  # Ensure the child is royalty
  ?child dbo:royaltyStatus dbr:Royalty .

  # Spousal relationship with Prince Augustus William of Prussia
  ?child dbo:spouse ?spouse .
  ?spouse rdfs:label ""Prince Augustus William of Prussia""@en .
}
```

This query assumes that the relationships are directly available in DBpedia and uses labels to identify specific individuals. Adjustments might be necessary based on the actual structure and availability of data in DBpedia.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
472,6,train,Give me the administration of Christian IX of Denmark and territory administered from Copenhagen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Copenhagen> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?territory
WHERE {
  # Find Christian IX of Denmark
  dbr:Christian_IX_of_Denmark a dbo:Monarch ;
    dbo:country dbr:Denmark ;
    dbo:capital dbr:Copenhagen .

  OPTIONAL {
    # Find administrations related to Christian IX
    ?administration dbo:monarch dbr:Christian_IX_of_Denmark .
    ?administration dbo:territory ?territory .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
472,13,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen and administration of Christian IX of Denmark.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?territory WHERE {
  # Christian Ditlev Ammentorp Hansen
  VALUES ?hansen (dbr:Christian_Ditlev_Ammertorp_Hansen) .
  
  ?hansen dbo:deathPlace ?deathPlaceHansen .
  FILTER(isIRI(?deathPlaceHansen))
  ?deathPlaceHansen a dbo:Settlement .

  # Christian IX of Denmark
  VALUES ?christianIX (dbr:Christian_IX_of_Denmark) .
  
  ?christianIX dbo:deathPlace ?deathPlaceChristianIX .
  FILTER(isIRI(?deathPlaceChristianIX))
  ?deathPlaceChristianIX a dbo:Settlement .

  # Find territories administered from these places
  {
    ?administeredTerritory dbp:administrativeCenter ?deathPlaceHansen ;
                          dbo:country ?countryHansen .
    OPTIONAL { ?countryHansen rdfs:label ?labelHansen . FILTER(lang(?labelHansen) = ""en"") }
  } UNION {
    ?administeredTerritory dbp:administrativeCenter ?deathPlaceChristianIX ;
                          dbo:country ?countryChristianIX .
    OPTIONAL { ?countryChristianIX rdfs:label ?labelChristianIX . FILTER(lang(?labelChristianIX) = ""en"") }
  }

  # Return the territory
  BIND(CONCAT(""Administered from "", 
              COALESCE(?labelHansen, ""unknown place for Hansen""), 
              "" and "", 
              COALESCE(?labelChristianIX, ""unknown place for Christian IX"")) AS ?territory)
}
ORDER BY ?territory",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
398,2,train,"Give me the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?club WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Denis Kolodin""@en .
  ?person dbo:team ?club .
}
```",1,2,2,1,1,3,2,20,10,0,0,1.0,1.0,1.0
398,13,train,"Give me the figure known as the nickname of the player, that is a soccer club, in Denis Kolodin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Denis_Kolodin> <http://dbpedia.org/ontology/team> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?clubNickname WHERE {
  ?player dbo:birthName ""Denis Kolodin""@en .
  ?player dbo:sport dbr:Soccer .
  ?player dbo:team ?club .
  ?club rdfs:label ?clubLabel .
  FILTER (LANG(?clubLabel) = 'en')
  OPTIONAL { 
    ?club dbo:nickname ?clubNickname .
    FILTER (LANG(?clubNickname) = 'en') 
  }
}
```",3,4,4,3,1,3,2,20,0,0,6,0,0.0,0
140,6,train,Give me the commander in Pickett's Charge and party member of Republican Party (United States).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?charge dbo:commander ?commander .
  ?commander foaf:name ""George Pickett"" .
  ?commander dbo:partyAffiliation dbr:Republican_Party_(United_States) .
  FILTER EXISTS { ?charge rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""pickett's charge"")) }
}
```

This query does the following:
- It looks for a military action (`?charge`) that has a commander (`dbo:commander`).
- It checks if this commander is George Pickett by matching his name.
- It verifies if he was affiliated with the Republican Party (United States) using `dbo:partyAffiliation`.
- The filter ensures that the charge in question is specifically ""Pickett's Charge"" by checking the label.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
737,19,train,"Give me the predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessor WHERE {
  # Find children of Philipp Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Philipp_Albrecht,_Duke_of_W%C3%BCrttemberg .
  
  # Ensure the child is also a child of Albrecht, Duke of Württemberg
  ?child dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .

  # Find predecessors of these children
  ?predecessor dbo:successor ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,15,train,Who is the awardee of the award of Vince Gilligan?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:awardedBy dbr:Vince_Gilligan .
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
943,1,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }",,1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
412,14,train,"Give me the war of Napoleon Zervas and entity in the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?deathPlace WHERE {
  # Find the war involving Napoleon Zervas
  ?person dbo:nationality dbr:Greece ;
          foaf:name ""Napoleon Zervas""@en .
  ?person dbo:occupation dbr:Resistance_Movement_in_Greece .

  ?event dbo:participant ?person ;
         dbo:subject dbr:World_War_II .
  BIND(dbo:World_War_II AS ?war)

  # Find the death place of Antonios Varthalitis
  ?varthalitis foaf:name ""Antonios Varthalitis""@en ;
               dbo:deathPlace ?deathPlace .

  FILTER(isIRI(?deathPlace))
  FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""settlement""))
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
159,9,train,Give me the successor of Yurii Khmelnytsky and reference to George Ducas.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?ducaReference WHERE {
  # Find Yurii Khmelnytsky and his successor
  ?yuriikhmelnytsky a dbo:Person ;
                   foaf:name ""Yurii Khmelnytsky""@en .
  
  OPTIONAL { 
    ?yuriikhmelnytsky dbo:successor ?successor .
  }
  
  # Reference to George Ducas
  ?ducaReference a dbo:Person ;
                 foaf:name ""George Ducas""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
531,21,train,Give me the tenant of the residence of Alberto Ruiz-Gallardón and office of Miguel Maura.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v1 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?tenant WHERE {
  {
    ?person foaf:name ""Alberto Ruiz-Gallardón""@en .
    ?person dbo:formerResidence ?tenant .
  }
  UNION
  {
    ?person foaf:name ""Miguel Maura""@en .
    ?person dbo:officeLocation ?tenant .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
531,31,train,"Give me the office of Mariano Rajoy and tenant of the residence of the leader, that is an office holder, of 2003 Madrid City Council election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v0 . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> ?v0 . <http://dbpedia.org/resource/2003_Madrid_City_Council_election> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?tenant
WHERE {
  # Find Mariano Rajoy's DBpedia resource
  dbr:Mariano_Rajoy a dbo:Person .

  # Find the office he held in 2003 related to Madrid City Council
  OPTIONAL { 
    ?rajoyOffice dbo:positionHeldBy dbr:Mariano_Rajoy .
    ?rajoyOffice dbo:officeName ?office .
    ?rajoyOffice dbo:dateInterval [
      dbo:startYear ?start ;
      dbo:endYear ?end
    ] .
    FILTER (?start <= 2003 && (BOUND(?end) -> ?end >= 2003))
  }

  # Find the leader of Madrid City Council in 2003 and their residence tenant
  OPTIONAL {
    ?madridLeader dbo:positionHeldBy ?leaderPerson .
    ?madridLeader dbo:officeName ""Mayor of Madrid"" .
    ?madridLeader dbo:dateInterval [
      dbo:startYear ?start ;
      dbo:endYear ?end
    ] .
    FILTER (?start <= 2003 && (BOUND(?end) -> ?end >= 2003))
    
    # Find the residence tenant of this leader
    ?leaderPerson dbo:residence ?residence .
    ?residence dbo:tenant ?tenant .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
414,6,train,Give me the show of Royal Swedish Academy of Sciences and award of Max Born.,SELECT ?result WHERE { <http://dbpedia.org/resource/Max_Born> <http://dbpedia.org/property/awards> ?result . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?award
WHERE {
  # Find the Royal Swedish Academy of Sciences
  ?academy a dbo:AwardingOrganization ;
           rdfs:label ""Royal Swedish Academy of Sciences""@en .
  
  # Find the show or event related to the academy
  ?show dbo:awardingBody ?academy ;
        rdfs:label ?showLabel .

  # Find Max Born and his award
  ?born a dbo:Person ;
        foaf:name ""Max Born"" ;
        dbo:honoraryTitle ?award .
  
  # Ensure the award is related to the academy
  ?award dbo:awardingBody ?academy .
}
```

This query does the following:
- Identifies the Royal Swedish Academy of Sciences as an awarding organization.
- Finds shows or events associated with this academy.
- Retrieves information about Max Born and his honorary title (award).
- Ensures that the award is linked to the academy.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
80,47,train,"Give me the actor of the movie with  and actor of the album of the work, that is a song and a musical work, of T.I..","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/album> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/starring> """"@en . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/T.I.> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Step 1: Find a song by T.I. that is also a musical work
  ?song dbo:artist dbr:T.I. ;
        rdf:type dbo:Song .

  # Step 2: Find an album associated with this song
  ?album dbo:song ?song ;
         dbo:artist dbr:T.I. .

  # Step 3: Find a movie related to the album and get its actor
  ?movie dbo:relatedWork ?album .
  ?movie dbo:actor ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,10,0,0.0,0
159,42,train,"Give me the successor of the commander, that is a politician and an office holder, in Russo-Polish War (1654–1667) and reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Russo-Polish_War_(1654–1667)> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/successor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?successor ?georgeDucas ?tvShow ?societalEvent WHERE {
  # Russo-Polish War (1654–1667)
  ?war dbo:wikiPageRedirects ?russianPolishWar .
  FILTER(STRSTARTS(LCASE(?russianPolishWar), ""russo-polish_war_1654-1667""))

  # Commander who is a politician and office holder
  ?commander dbo:role ?officeHolder .
  ?officeHolder rdf:type dbo:PoliticalOffice .
  ?war dbo:participant ?commander .

  # Successor of the commander
  ?successor dbo:succeededBy ?commander .

  # Reference to George Ducas
  ?georgeDucas rdfs:label ""George Ducas""@en .

  # Television show and societal event related to Jean Baptist, Comte d'Arco
  ?jeanBaptist rdfs:label ""Jean Baptist, Comte d'Arco""@en .
  OPTIONAL { ?jeanBaptist dbo:wikiPageRedirects ?tvShow . FILTER(STRSTARTS(LCASE(?tvShow), ""television_show"")) }
  OPTIONAL { ?jeanBaptist dbo:wikiPageRedirects ?societalEvent . FILTER(STRSTARTS(LCASE(?societalEvent), ""societal_event"")) }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
203,48,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of the force, that is an event and a societal event, of Robert Calder.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v3 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Robert Calder and his military force
  ?calder a dbo:MilitaryPerson ;
          foaf:name ""Robert Calder""@en .
  
  ?militaryForce dbo:member ?calder ;
                 dbo:participatedIn ?war .

  # Identify the Triple Alliance (The Triple X's)
  ?tripleAlliance a dbo:MilitaryAlliance ;
                  rdfs:label ""Triple Alliance""@en .

  # Find the war involving the Triple Alliance
  ?war dbo:participant ?tripleAlliance ;
       a dbo:MilitaryConflict .

  # Find the commander of that war
  ?commander dbo:commanded ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
392,2,train,Give me the figure known as Der Blau.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Der Blau""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?figure ?description WHERE {
  ?figure a dbo:Painting .
  OPTIONAL { ?figure rdfs:label ?label . FILTER (lang(?label) = 'en' && contains(lcase(str(?label)), ""der blau"")) }
  OPTIONAL { ?figure dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,2,2,9,0,0,3,0,0.0,0
633,12,train,Give me the spouse of Renée of Bourbon and parent of the father of Dorothea of Lorraine.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Renée_of_Bourbon> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Dorothea_of_Lorraine> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Dorothea of Lorraine's father
  ?dorothea dbp:father ?father .
  
  FILTER (str(?dorothea) = ""Dorothea_of_Lorraine"")

  # Step 2: Find the parent (mother) of that father
  ?father dbo:mother ?parent .

  # Step 3: Identify Renée of Bourbon's spouse
  ?renee dbp:spouse ?spouse .
  
  FILTER (str(?renee) = ""Renée_of_Bourbon"")

  # Ensure the parent from step 2 is the same as the spouse from step 3
  FILTER (?parent = ?spouse)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
203,10,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # French campaign in Egypt and Syria commander
  OPTIONAL {
    ?campaign dbo:commander ?commander .
    FILTER(CONTAINS(LCASE(STR(?campaign)), ""egypt syria""))
  }
  
  # Battle of Cape Finisterre (1805) military force
  OPTIONAL {
    ?battle dbo:militaryForce ?militaryForce .
    FILTER(CONTAINS(LCASE(STR(?battle)), ""cape finisterre"") && CONTAINS(LCASE(STR(?battle)), ""1805""))
  }

  # Bindings for known resources
  VALUES ?campaign { dbr:French_Egyptian_Campaign }
  VALUES ?battle { dbr:Battle_of_Cape_Finisterre_(1805) }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
103,3,train,Give me the person born as Richard Grant Esterhuysen.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?alias WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbp:birthName ""Richard Grant Esterhuysen"" . }
  OPTIONAL { ?person foaf:name ?alias . }
}
```",1,1,2,1,1,3,3,71,0,1540256,1,0.0,0.0,0
58,17,train,Give me the producer of the movie with the award of Ian Gregson (poet) and spouse of Linda Bruckheimer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ian_Gregson_(poet)> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . ?v3 <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Identify Ian Gregson as a poet
  ?ianGregson a dbo:Poet ;
              foaf:name ""Ian Gregson""@en .
  
  # Identify Linda Bruckheimer and her spouse
  ?lindaBruckheimer a dbo:Person ;
                   foaf:name ""Linda Bruckheimer""@en ;
                   dbo:spouse ?spouse .

  # Find a movie associated with Ian Gregson
  ?movie dbo:writer ?ianGregson .
  
  # Find the same movie associated with Linda Bruckheimer's spouse
  ?movie dbo:producer ?lindaBruckheimerSpouse .
  
  BIND(?spouse AS ?lindaBruckheimerSpouse)

  # Retrieve the producer of that movie
  ?movie dbo:producer ?producer .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
412,19,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece and entity in Athens.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?konstantinosWar ?leaderWar ?athensEntity
WHERE {
  # Konstantinos Ventiris's war involvement
  OPTIONAL {
    dbr:Konstantinos_Ventiris dbo:participatedIn ?konstantinosWar .
  }

  # Leader of the National Party of Greece and their war involvement
  OPTIONAL {
    ?leader foaf:name ""Leader of the National Party of Greece"" ;
            dbo:memberOf dbr:National_Party_of_Greece ;
            dbo:participatedIn ?leaderWar .
  }

  # Entity in Athens related to wars
  OPTIONAL {
    ?athensEntity a dbo:Place ;
                  dbo:location dbr:Athens ;
                  dbo:relatedTo ?war .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
89,28,train,Give me the spouse of Saw Shwe Khet and child of the parent of Min Hla Htut of Pyakaung and predecessor of Myat Hpone Pyo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Min_Hla_Htut_of_Pyakaung> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Find Min Hla Htut of Pyakaung and their parent
  ?minHlaHtut a dbo:Person ;
              foaf:name ""Min Hla Htut""@en .
  
  ?parent dbo:child ?minHlaHtut .

  # Step 2: Identify Saw Shwe Khet and their spouse
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  ?sawShweKhet dbo:spouse ?spouse .

  # Step 3: Find Myat Hpone Pyo and their predecessor
  ?myatHponePyo a dbo:Person ;
                foaf:name ""Myat Hpone Pyo""@en .
  
  ?predecessor dbo:succeededBy ?myatHponePyo .

  # Combine conditions to find the correct spouse
  FILTER(?parent = ?sawShweKhet && ?spouse = ?predecessor)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,25,train,Give me the parent of the child of Allan Arbus and parent of Amy Arbus.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfChild WHERE {
  # Find Allan Arbus and Amy Arbus
  ?allanArbus a dbo:Person ;
              foaf:name ""Allan Arbus""@en .
  ?amyArbus a dbo:Person ;
            foaf:name ""Amy Arbus""@en .

  # Find their children
  OPTIONAL { ?allanChild dbo:parent ?allanArbus . }
  OPTIONAL { ?amyChild dbo:parent ?amyArbus . }

  # Find the parents of those children
  OPTIONAL { ?childParent dbo:parent ?allanChild . }
  OPTIONAL { ?childParent dbo:parent ?amyChild . }

  BIND(?childParent AS ?parentOfChild)
}
```",3,3,4,2,2,3,3,71,0,34521,2,0.0,0.0,0
353,17,train,"Who is the child of the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Constance of Burgundy
  dbr:Constance_of_Burgundy dbo:spouse ?spouse .

  # Check if the spouse is royalty
  ?spouse a dbo:Monarch ;
          dbo:child ?child .
}
```

This query assumes that:
- `dbo:spouse` links to Constance of Burgundy's spouses.
- The spouse who is royalty will have a type of `dbo:Monarch`.
- The children of the royal spouse are linked via `dbo:child`.",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
782,2,train,Give me the associated musical artist of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234568 wdt:P106 wd:Q33999 . # Nick Curran is a musician (P106)
  wd:Q1234568 wdt:P175 ?artist .    # Associated musical artist (P175)
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
38,13,train,"Give me the author of the work, that is a work and a written work and American and a book, of the commander, that is an office holder and a politician, in North Carolina Air National Guard.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/author> ?v0 . ?v1 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/North_Carolina_Air_National_Guard> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?commander a dbo:OfficeHolder ;
             dbo:officeHeld dbr:North_Carolina_Air_National_Guard ;
             dbo:country dbr:United_States .
  
  ?work dbo:author ?author ;
        a dbo:Book, dbo:WrittenWork ;
        dbo:country dbr:United_States .

  FILTER(?commander = ?author)
}
```",3,9,4,3,1,3,2,20,0,0,1,0,0.0,0
943,44,train,"Give me the reference to the alter ego of The Shadow and father of the father, that is a royalty and an office holder, of Na'od and child of Dawit I.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:fatherOf ?naod .
  ?naod dbo:parent ?dawitI .
  ?dawitI rdfs:label ""Dawit I""@en .
  ?person rdfs:label ""Zara Yaqob""@en .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
468,8,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon.",SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Peter IV of Aragon
  dbr:Peter_IV_of_Aragon dbo:spouse ?spouse .
  
  # Find his children
  ?spouse dbo:child ?child .

  # Filter for royalty
  ?child a dbo:Monarch ;
         rdfs:label ?name .
}
ORDER BY ?name",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
347,55,train,"Give me the child of the father of Cecilia Renata of Austria and father of the child of Ferdinand III, Holy Roman Emperor and commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).","SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?event WHERE {
  # Step 1: Identify Cecilia Renata of Austria's father
  dbr:Cecilia_Renata_of_Austria dbo:father ?father .
  
  # Step 2: Identify the child of Ferdinand III and a commander in the war
  ?father rdfs:label ""Ferdinand III, Holy Roman Emperor""@en .
  ?child dbo:parent ?father ;
         dbo:militaryCommanderOf ?commanderRole .

  # Step 3: Relate to the 2nd Dragoon Regiment (France)
  ?event dbo:relatedEvent ?dragoonRegiment ;
         rdfs:label ""2nd Dragoon Regiment (France)""@en .
  
  # Ensure the event is a societal event, an event, and a television show
  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:Event ;
         rdf:type dbo:TelevisionShow .

  # Link the child to the event
  ?child dbo:relatedTo ?event .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
595,1,train,Give me the author of Back to Work (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  dbr:Back_to_Work_(book) dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
609,25,train,Give me the birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?birthPlaceAuthor ?person ?birthPlacePerson
WHERE {
  # Cece Bell, author of El Deafo
  OPTIONAL {
    dbr:Cece_Bell dbo:birthPlace ?birthPlaceAuthor .
    BIND(dbr:Cece_Bell AS ?author)
  }
  
  # Glenn Youngkin
  OPTIONAL {
    dbr:Glenn_Youngkin dbo:birthPlace ?birthPlacePerson .
    BIND(dbr:Glenn_Youngkin AS ?person)
  }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
687,22,train,"Give me the player in Juan Carlos Molina (footballer) and team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          foaf:name ""Juan Carlos Molina""@en .
  
  OPTIONAL { ?person dbo:currentClub ?team . }
  
  FILTER EXISTS { ?person dbo:managerOf ?club } .

  BIND(?person AS ?player)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
384,6,train,"Give me the party of the person born, that is an office holder and a politician, as Bruno Daniel Marie Paul Retailleau.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Bruno Daniel Marie Paul Retailleau""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel WHERE {
  # Identify the resource for Bruno Retailleau
  dbr:Bruno_Retailleau a dbo:Politician ;
                       dbo:birthName ""Bruno Daniel Marie Paul Retailleau"" .
  
  # Find the political party associated with him
  OPTIONAL { dbr:Bruno_Retailleau dbo:party ?party . }
  
  # Get the label of the political party
  ?party rdfs:label ?partyLabel .
  
  FILTER (lang(?partyLabel) = 'en')
}
```",2,4,3,2,1,2,2,9,0,0,1,0,0.0,0
531,4,train,Give me the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?residence WHERE {
  wd:Q123456 wdt:P1128 ?residence .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Alberto Ruiz-Gallardón. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
119,25,train,"Give me the tenant of the administration, that is Spanish, of Spanish Socialist Workers' Party and tenant of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Spanish_Socialist_Workers'_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party dbo:country dbr:Spain .
  ?party rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?leader dbo:memberOf ?party .
  ?leader dbo:headOfStateOrGovernment dbr:Spain .

  OPTIONAL { ?leader dbo:nationality dbr:Spain . }
}
```",3,4,4,2,2,3,3,71,0,0,23,0,0.0,0
609,21,train,Give me the birth place of Cece Bell and birth place of the awardee of List of awards and nominations received by Vince Gilligan.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Vince_Gilligan> . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ceceBirthPlace ?awardName ?awardeeBirthPlace WHERE {
  # Cece Bell's birthplace
  dbr:Cecil_Alice_Bell dbp:birthPlace ?ceceBirthPlace .

  # Vince Gilligan's awards and nominations
  dbr:Vince_Gilligan dbo:awardReceivedOrNominatedFor ?award .
  
  # Awardees of those awards
  ?award dbo:recipient ?awardee .
  ?awardee dbp:birthPlace ?awardeeBirthPlace .

  OPTIONAL {
    ?award rdfs:label ?awardName .
  }
}
```

This query does the following:
- Retrieves Cece Bell's birthplace.
- Finds awards and nominations associated with Vince Gilligan.
- Identifies the awardees of those awards and retrieves their birthplaces.
- Optionally includes the award names for clarity.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
782,43,train,"Give me the reference to The Fabulous Thunderbirds and associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v4 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?thunderbirds ?nickCurranArtist ?bandMemberBand
WHERE {
  # The Fabulous Thunderbirds as a musical artist
  dbr:The_Fabulous_Thunderbirds dbo:musicalArtist ?thunderbirds .

  # Nick Curran's associated artists
  dbr:Nick_Curran dbo:associatedMusicalArtist ?nickCurranArtist .

  # Find band members born on March 30, 1945, who are also musical artists
  ?person dbp:birthday ""1945-03-30""^^xsd:date ;
          a dbo:Musician ;
          dbo:bandMember ?bandMemberBand .
  
  # Ensure the person is a musical artist
  ?person dbo:musicalArtist ?musicalArtist .

  # Linking all parts together (optional, depending on specific DBpedia data availability)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
557,36,train,"Give me the producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find the actor of ""High Society Blues""
  ?actor dbo:film dbr:High_Society_Blues .
  
  # Identify a notable work (movie or other) by this actor
  ?notableWork dbo:starring ?actor ;
               a dbo:Film ; # Assuming it's a film; adjust if needed

  # Find the producer of this notable work
  ?notableWork dbo:producer ?producer .
}
```

This query assumes that ""High Society Blues"" is represented in DBpedia as `dbr:High_Society_Blues` and that the actor's notable works are films. Adjustments may be needed based on actual data availability.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
89,16,train,"Give me the father, that is a royalty, of the child, that is a royalty, of Saw Shwe Khet.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Find Saw Shwe Khet
  ?sawShweKhet a dbo:Person ;
               foaf:name ""Saw Shwe Khet""@en .
  
  # Find his children who are royalties
  ?child dbo:parent ?sawShweKhet ;
         a dbo:Royalty .

  # For each child, find their father who is royalty
  ?child dbo:father ?father .
  ?father a dbo:Royalty .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
816,47,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Herschel Bernardi
  ?movie dbo:starring dbr:Herschel_Bernardi .
  
  # Get the profession of Eugène Cattin and its parent
  ?eugeneCattin dbo:profession ?profession ;
               rdfs:label ""Eugène Cattin""@en .
  ?parent owl:equivalentClass ?profession .
  
  # Find actors in those movies who are professionals in the parent profession
  ?movie dbo:starring ?actor .
  ?actor dbo:profession ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
68,13,train,"Give me the father of the parent of Dorothea of Denmark, Electress Palatine and child of Maximilian I, Holy Roman Emperor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Maximilian_I,_Holy_Roman_Emperor> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandfather WHERE {
  # Dorothea of Denmark, Electress Palatine
  dbr:Dorothea_of_Denmark,_Electress_Palatine dbo:parent ?parent .

  # Parent of Dorothea (mother or father)
  ?parent a dbo:Person .

  # Father of the parent
  ?parent dbo:father ?grandfather .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
782,11,train,Give me the reference to the real name of The Fabulous Thunderbirds.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Fabulous_Thunderbirds> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?realName WHERE {
  ?band dbr:subject/psv:name ""The Fabulous Thunderbirds""@en.
  ?band dbo:officialName ?realName.
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
668,55,train,Give me the professional in the profession of Rod Argent and person born as the birth name of Joey B and associated musical artist of the person born as Elorm Kabu Amenyah.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Elorm Kabu Amenyah""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find a person who is a musician
  ?person dbo:occupation dbr:Musician .

  # Check if the person was born as Joseph Benjamin Adu
  ?person foaf:name ""Joseph Benjamin Adu""@en .
  
  # Check association with Burna Boy
  OPTIONAL { 
    ?association dbo:associatedMusicalArtist dbr:Burna_Boy .
    ?association dbo:person ?person .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
816,38,train,Give me the parent of the child of Allan Arbus and parent of the professional in Photographer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Allan_Arbus> <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?parentOfPhotographer
WHERE {
  # Find Allan Arbus's child
  ?child dbo:parent dbr:Allan_Arbus .
  
  # Find the parent of this child
  ?child dbo:parent ?parentOfChild .

  # Find a professional in Photography
  ?photographer dbp:occupation dbr:Photography .
  
  # Find the parent of this photographer
  ?photographer dbo:parent ?parentOfPhotographer .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
246,14,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Princess Muna al-Hussein
  ?princess a dbo:Person ;
            foaf:name ""Muna al-Hussein""@en .

  # Step 2: Find her children who are royalty
  ?child dbo:spouseOrPartner ?princess ;
         a dbo:RoyalFamilyMember .

  # Step 3: For each royal child, find their children (grandchildren of Princess Muna)
  ?grandchild dbo:parent ?child .

  # Step 4: Determine the parents of these grandchildren
  ?grandparent dbo:child ?grandchild .
}
```",3,5,4,3,1,3,2,20,0,0,5,0,0.0,0
295,3,train,"Give me the work, that is a musical work, of Apache Indian.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?work WHERE {
  ?artist foaf:name ""Apache Indian"" .
  ?artist dbo:genre dbr:Reggae_music .
  ?work dbo:composerOrLyricist ?artist ;
        rdf:type dbo:MusicalWork .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
557,50,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer
WHERE {
  # Find the actor for ""Johnny Doughboy""
  ?actor dbo:actedIn dbr:Johnny_Doughboy .
  
  # Find the producer of ""Johnny Doughboy""
  ?work dbo:productionCompany ?company ;
        rdfs:label ""Johnny Doughboy""@en .
  ?producer dbo:worksFor ?company .

  # Find a movie that is both a claim to fame for Janet Gaynor as an actor and a work she produced
  ?movie dbo:starring dbr:Janet_Gaynor ;
         dbo:productionCompany ?janetProductionCompany ;
         rdfs:label ?title .
  
  # Ensure the movie is a claim to fame for Janet Gaynor
  ?claimToFame dbo:actor dbr:Janet_Gaynor ;
               dbo:work ?movie .

  # Ensure Janet Gaynor produced this movie
  ?janetProductionCompany dbo:worksFor dbr:Janet_Gaynor .
  
  # Find the producer of this movie
  ?producer2 dbo:worksFor ?janetProductionCompany .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
103,56,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find movies where Richard E. Grant acted
  ?movie dbo:starring dbr:Richard_E._Grant .
  
  # Ensure the movie is also a television show
  ?movie rdf:type dbo:TelevisionShow .

  # Find actors in these movies/TV shows
  ?movie dbo:starring ?actor .

  # Find connections to ""The Shadow"" video game and its comics character
  OPTIONAL {
    ?shadowGame dbo:character dbr:The_Shadow_(comics) .
    ?shadowGame dbo:starring ?actor .
  }
  
  FILTER(?actor != dbr:Richard_E._Grant)
}
```",6,8,7,3,3,3,3,71,0,0,9,0,0.0,0
414,4,train,Give me the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . }","```sparql
SELECT ?reference WHERE {
  ?nobelPrize dcterms:subject dbc:Nobel_Prizes_in_Physics ;
              dbo:awardDate ?date .
  OPTIONAL { ?nobelPrize dbp:reference ?reference . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
687,58,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?playerInMolinaTeam ?actorAthleteSoccerPlayer ?personBornOnSarmientoBirthday
WHERE {
  # Juan Carlos Molina's team
  dbr:Juan_Carlos_Molina_(footballer) dbo:team ?molinateam .
  ?molinateam dbo:member ?playerInMolinaTeam .

  # Actor in All or Nothing: Manchester City who is also an athlete and soccer player
  {
    SELECT DISTINCT ?actorAthleteSoccerPlayer WHERE {
      dbr:All_or_Nothing:_Manchester_City dbo:castMember ?actor .
      ?actor a dbo:Actor ;
             dbo:profession dbp:Soccer_Player ;
             dbo:occupation dbp:Athlete .
    }
  }

  # Person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  {
    SELECT DISTINCT ?personBornOnSarmientoBirthday WHERE {
      dbr:Marcelo_Sarmiento dbo:birthday ?sarmientobirthday .
      ?person dbo:birthday ?sarmientobirthday ;
              a dbo:Soccer_Player, dbo:Soccer_Manager .
      ?team dbo:member ?person .
    }
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
203,44,train,"Give me the commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?campaignMilitaryForce ?calderMilitaryForce ?bayneMilitaryConflict
WHERE {
  # Find the campaign in Egypt and Syria
  ?campaign a dbo:MilitaryCampaign ;
            rdfs:label ""French campaign in Egypt and Syria""@en .

  # Get the commander of this campaign
  ?campaign dbo:commander ?commander .

  # Get the military force involved in the campaign
  ?campaign dbo:militaryForce ?campaignMilitaryForce .

  # Find Robert Calder's military force
  dbr:Robert_Calder dbo:militaryConflict ?calderMilitaryConflict .
  ?calderMilitaryConflict dbo:militaryForce ?calderMilitaryForce .

  # Find William Bayne's military conflict
  dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflict ?bayneMilitaryConflict .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
859,6,train,Give me the associated musical artist of Phantomsmasher and band member of Human Remains (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the band ""Human Remains""
  ?band dbr:Human_Remains_(band) .
  
  # Find members of Human Remains
  ?member dbo:memberOf ?band .

  # Check if any member is associated with Phantomsmasher
  ?member dbo:associatedBand dbr:Phantomsmasher .

  # Return the artist (member)
  ?member rdfs:label ?artist .
  
  FILTER(LANG(?artist) = 'en')
}
```",2,2,3,1,2,3,2,20,0,0,3,0,0.0,0
468,0,train,Give me the reference to Peter IV.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?person { 
    dbr:Peter_IV_of_Aragon 
    # Add other possible resources if needed, e.g., dbr:Peter_IV_(disambiguation)
  }
  
  ?person dbo:wikiPageRedirects ?reference .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
159,27,train,"Give me the commander in the war, that is a television show and a societal event, of the military force of Battle of Vienna.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Vienna> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?tvShow ?event WHERE {
  # Find the Battle of Vienna and its commander
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Vienna .
  ?battle dbo:commander ?commander .

  # Check if the commander is linked to a TV show or societal event
  OPTIONAL { ?commander dbo:wikiPageDisambiguates ?tvShow . }
  OPTIONAL { ?commander dbo:wikiPageDisambiguates ?event . }

  FILTER (regex(str(?tvShow), ""television"", ""i"") || regex(str(?event), ""societal event"", ""i""))
}
```

This query does the following:
- It identifies the Battle of Vienna and its commander.
- It checks if the commander is linked to any disambiguation pages that might relate to a television show or societal event.",3,5,4,3,1,3,3,71,0,0,40,0,0.0,0
628,12,train,Give me the native of Florida and person born as Ackquille Jean Pollard.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Florida .
  OPTIONAL { ?person foaf:name ""Ackquille Jean Pollard""@en . }
}
```

This query selects individuals (`?person`) who have a `dbo:birthPlace` of Florida and optionally checks if their name is Ackquille Jean Pollard. Note that the exact property for names might vary, so adjustments may be necessary based on DBpedia's schema.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
347,51,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfFather WHERE {
  # Maria Anna of Bavaria and her children
  dbr:Maria_Anna_of_Bavary_(1574) dbo:spouse ?husband .
  
  ?husband dbo:child ?child1 .
  
  # Child of the husband who is royalty
  ?child1 a dbo:Monarch ;
          dbo:child ?royalChild .

  # Ferdinand III and his children
  dbr:Ferdinand_III,_Holy_Roman_Emperor dbo:child ?ferdinandChild .

  # Father of Ferdinand III's child (Ferdinand III himself)
  ?ferdinandChild dbo:father dbr:Ferdinand_III,_Holy_Roman_Emperor .
  
  # The final condition
  FILTER(?royalChild = ?ferdinandChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
39,11,train,Give me the professional in the profession of Sam Concepcion.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Find Sam Concepcion's profession
  ?sam a dbo:Person ;
       foaf:name ""Sam Concepcion""@en .
  
  OPTIONAL { 
    ?sam dbo:profession ?profession .
  }
  
  # Find other professionals with the same profession
  ?professional a dbo:Person ;
                dbo:profession ?sameProfession .
  
  FILTER(?sameProfession = ?profession)
  FILTER(?professional != ?sam) # Exclude Sam Concepcion himself
}
```",2,2,3,2,1,3,3,71,0,0,45131,0,0.0,0
119,37,train,"Give me the tenant of Santiago de Compostela and tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v3 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfSantiago ?countryOfSpanishCitizen
WHERE {
  # Find the tenant of Santiago de Compostela
  dbr:Santiago_de_Compostela dbo:mayor ?tenantOfSantiago .
  
  # Find a Spanish citizen and their country of residence
  ?person dbo:nationality dbr:Spain ;
          dbo:residenceCountry ?countryOfSpanishCitizen .
}
```",4,6,5,3,2,3,3,71,0,0,4,0,0.0,0
361,14,train,Give me the professional in the alter ego of The Shadow and professional in Actor.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?roleAlterEgo ?actor ?roleActor WHERE {
  # The Shadow's alter ego and role
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  OPTIONAL { dbr:Lamont_Cranston dbo:profession ?roleAlterEgo . }

  # Actor and their professional role
  ?actor a dbo:Actor ;
         dbo:profession ?roleActor .

  FILTER(?actor != dbr:Lamont_Cranston) # Ensure we don't get the same person twice

} LIMIT 1
```",3,3,4,2,2,2,3,28,0,0,4210,0,0.0,0
297,6,train,Give me the institution in the administration of Brian Kemp.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Brian_Kemp> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?institution WHERE {
  ?person dbo:officeHolderOf dbr:Governor_of_Georgia.
  ?person foaf:name ""Brian Kemp""@en.
  ?person dbo:positionHeld ?role.
  ?role dbo:organization ?institution.
}
```",2,2,3,2,1,2,2,9,0,0,941,0,0.0,0
246,7,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?child dbo:spouse|dbo:partner ?faisal .
  ?faisal rdfs:label ""Prince Faisal bin Hussein""@en .
  ?child dbo:royalty true .
  ?child dbo:parent ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
737,18,train,"Give me the child of Archduchess Margarete Sophie of Austria and predecessor of Carl, Duke of Württemberg and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Carl,_Duke_of_Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:parent dbr:Margarete_Sophie_of_Austria .
  ?person dbo:child dbr:Carl,_Duke_of_Württemberg .
  ?person dbo:child dbr:Albrecht,_Duke_of_Württemberg .
}
```

This query looks for a person (`?person`) who is the child of Archduchess Margarete Sophie of Austria and also has children named Carl, Duke of Württemberg, and Albrecht, Duke of Württemberg. This should identify the individual you are looking for.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
143,13,train,"Give me the actor of the show, that is a movie, with the reference to Afeez Oyetoro.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Afeez Oyetoro""@en . ?v1 <http://dbpedia.org/ontology/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the show/movie associated with Afeez Oyetoro
  ?show a feo:Film ;
        dbo:starring ?person .
  
  FILTER (str(?person) = ""Afeez_Oyetoro"")

  # Retrieve actors of that show/movie
  ?show dbo:starring ?actor .
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT**: We are interested in retrieving the actor(s) (?actor).
- **?show a feo:Film**: This line identifies entities that are films.
- **dbo:starring ?person**: This retrieves people associated with the film, specifically looking for Afeez Oyetoro.
- **FILTER (str(?person) = ""Afeez_Oyetoro"")**: Ensures we filter results to only include those involving Afeez Oyetoro.
- **?show dbo:starring ?actor**: Retrieves all actors of the identified show/movie.

This query assumes that Afeez Oyetoro is directly linked as a starring member in DBpedia, and it retrieves other actors from the same film/show.",3,4,4,3,1,3,2,20,0,0,28,0,0.0,0
905,12,train,Give me the child of Stephen V of Hungary and parent of Charles Martel of Anjou.,SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Martel_of_Anjou> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Stephen V of Hungary and his children
  ?stephenV a dbo:Person ;
            foaf:name ""Stephen V of Hungary""@en .
  
  ?stephenV dbo:child ?child .

  # Ensure the child is also a parent of Charles Martel of Anjou
  ?charlesMartel a dbo:Person ;
                 foaf:name ""Charles Martel of Anjou""@en .
  
  ?child dbo:parent ?charlesMartel .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
687,52,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on the birthday of Marty Pollio.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Actor in ""All or Nothing: Manchester City""
  ?actor dbo:starringIn dbr:All_or_Nothing:_Manchester_City.

  # Soccer player and athlete
  ?actor dbo:sport dbr:Soccer .
  ?actor dbo:occupation dbr:Athlete .

  # Team of Pablo Aimar (Valencia CF)
  ?actor dbo:team dbr:Valencia_CF .

  # Person born on Marty Pollio's birthday
  ?actor dbo:birthday ?birthday .
  ?martyPollio dbo:birthday ?birthday ;
               rdfs:label ""Marty Pollio""@en.
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
628,10,train,Give me the native of Florida and band member of Uncle Murda.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Florida .
  ?person dbo:bandMemberOf dbr:Uncle_Murda .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
353,23,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfParent WHERE {
  # Step 1: Identify Roger II of Sicily
  ?roger2 a dbo:Monarch ;
          foaf:name ""Roger II of Sicily""@en .

  # Step 2: Find his children
  ?child dbo:parent ?roger2 .
  
  # Step 3: For each child, find their parents (which includes Roger II)
  ?parentOfChild dbo:child ?child ;
                 a dbo:Person .

  # Step 4: From these parents, find their children who are royalties
  ?childOfParent dbo:parent ?parentOfChild ;
                 a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,7,0,0.0,0
39,49,train,"Give me the professional in the profession of Sam Concepcion and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Sam_Concepcion> <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?band WHERE {
  # Find Sam Concepcion's profession
  dbr:Sam_Concepcion dbo:profession ?professional .

  # Find the band associated with Bob Thompson (musician)
  ?person foaf:name ""Bob Thompson"" .
  ?person dbo:birthName ?birthName .
  FILTER(?birthName = ""Bob Thompson"") .
  ?person dbo:musicalArtist ?band .

  # Ensure the person is a musical artist
  ?person rdf:type dbo:MusicalArtist .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
103,48,train,"Give me the professional in the alter ego of The Shadow and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Orson Welles"" .
  
  OPTIONAL { 
    ?person dbo:alterEgo dbr:The_Shadow . 
  }
  
  OPTIONAL {
    ?film dbo:starring ?person ;
          dbo:adaptationOf dbr:A_Film_That_Became_a_TV_Show .
  }
}
```

This query does the following:
- Selects a person who is an instance of `dbo:Person`.
- Filters for the person named ""Orson Welles"".
- Checks if this person has an alter ego that matches The Shadow.
- Looks for films in which this person starred, where the film was adapted into a television show.",5,6,6,3,2,3,3,71,0,0,13,0,0.0,0
78,1,train,Give me the associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Billy Lyall is a musician (P106)
  wdt:P175 ?artist. # Associated musical artist (P175)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Billy Lyall.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
871,32,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and parent of the awardee of Commander of the Royal Victorian Order.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
    # Frederick Stanley, 16th Earl of Derby
    dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:child ?child1 .

    # Child's parent (should be Frederick Stanley)
    ?child1 dbo:parent ?parent .

    # Awardee of Commander of the Royal Victorian Order
    ?awardee dbo:title dbr:Commander_of_the_Royal_Victorian_Order .
    
    # Find a child of the awardee
    ?awardee dbo:child ?child2 .

    # Parent of that child (should be the awardee)
    ?child2 dbo:parent ?parent .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
375,9,train,"Give me the movie, that is a work and a television show, with the person deceased, that is an artist and a musical artist, on 2020-06-18.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/deathDate> ""2020-06-18""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/starring> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie WHERE {
  ?movie a dbo:Film ;
         dbo:genre dbr:Television_series .
  
  ?person dbo:deathDate ""2020-06-18""^^xsd:date ;
          a dbo:Artist, dbo:MusicalArtist .

  ?movie dbo:starring ?person .
}
```

This query does the following:
- Selects movies that are both films and television series.
- Finds persons who were artists and musical artists, and died on June 18, 2020.
- Links these persons to the movies they starred in.",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
59,6,train,"Give me the manager of the player, that is a sports club and a soccer club, in Jamie McCunnie.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. <http://dbpedia.org/resource/Jamie_McCunnie> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?player a dbo:SoccerPlayer ;
          foaf:name ""Jamie McCunnie""@en .
  
  ?player dbo:playsFor ?club .
  ?club a dbo:SportsClub, dbo:SoccerClub .

  OPTIONAL { 
    ?club dbo:manager ?manager .
  }
}
```

This query does the following:
- It looks for an entity `?player` that is of type `dbo:SoccerPlayer` and has the name ""Jamie McCunnie"".
- It checks if this player plays for a club (`?club`) that is both a `dbo:SportsClub` and a `dbo:SoccerClub`.
- It optionally retrieves the manager of such a club.",2,4,3,2,1,2,2,9,0,0,7,0,0.0,0
513,13,train,Give me the entity in the award of the reference to George Hamilton Cameron.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Hamilton Cameron""@en . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:givenName ""George"" .
  ?person dbo:familyName ""Hamilton Cameron"" .
  ?person dbo:award ?award .
}
```

This query does the following:
- Uses prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- Searches for a person with the given name ""George"" and family name ""Hamilton Cameron"".
- Retrieves any awards associated with this person.",3,3,4,3,1,3,2,20,0,0,87241,0,0.0,0
687,5,train,"Give me the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film WHERE {
  ?director dbo:directed ?film .
  ?director foaf:name ""Manuel Huerga""@en .
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
119,34,train,"Give me the tenant of Santiago de Compostela and office of the leader of the administration, that is an event, of Anxo Quintana.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?leaderOffice WHERE {
  # Find Anxo Quintana and his office in Santiago de Compostela
  ?person a dbo:Person ;
          foaf:name ""Anxo Quintana""@en .
  
  OPTIONAL { 
    ?person dbo:holdsPoliticalPosition ?position .
    ?position dbo:officeLocation dbr:Santiago_de_Compostela .
    ?position dbo:officeName ?office .
  }
  
  # Find the leader of the administration (Mayor) in Santiago de Compostela
  ?mayor a dbo:Person ;
         dbo:holdsPoliticalPosition ?leaderPosition .
  ?leaderPosition dbo:officeLocation dbr:Santiago_de_Compostela ;
                  dbo:officeName ?leaderOffice .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
633,2,train,"Give me the child, that is a royalty, of Antoine, Duke of Lorraine.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antoine,_Duke_of_Lorraine> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Antoine, Duke of Lorraine
  dbr:Antoine,_Duke_of_Lorraine dbo:spouse ?parent .
  
  # Find children who are royalty
  ?parent dbo:child ?child .
  ?child a ?royaltyClass .
  FILTER (
    ?royaltyClass IN (dbo:Monarch, dbo:RoyalFamilyMember)
  )
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
628,11,train,"Give me the band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the musical artist associated with Bobby Shmurda
  dbr:Bobby_Shmurda dbo:associatedBand ?band .

  # Find band members of that band who are also musical artists
  ?bandMember dbo:member ?band .
  ?bandMember a dbo:MusicalArtist .
}
```",2,3,3,2,1,3,3,71,0,0,7,0,0.0,0
609,43,train,"Give me the birth place of the governor, that is a politician, of the birth place, that is a region and an administrative region, of Paulus Powell and birth place of Vince Gilligan and birth place of Cece Bell.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/governor> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?governorBirthPlace WHERE {
  # Birthplaces of Paulus Powell, Vince Gilligan, and Cece Bell
  VALUES (?person) { 
    dbr:Paulus_Powell 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
  }
  
  ?person dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a region and an administrative region
  ?birthPlace rdf:type dbo:Region ;
              rdf:type dbo:AdministrativeRegion .

  # Find the current governor of each region
  ?governor dbo:governs ?birthPlace ;
            rdf:type dbo:Politician .
  
  # Retrieve the birthplace of each governor
  ?governor dbo:birthPlace ?governorBirthPlace .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
414,8,train,Give me the award of the awardee of Nobel Prize in Physics.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  ?person dbo:award ""Nobel Prize in Physics""@en .
  ?person dbo:honorificTitle ?award .
}
```",2,2,3,2,1,3,2,20,0,0,87,0,0.0,0
737,34,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Archduchess Margarete Sophie of Austria.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?predecessor WHERE {
  # Step 1: Find Archduchess Helena of Austria's spouse
  ?helena dbo:spouse ?spouse .
  
  FILTER(?helena = dbpedia:Helena_of_Austria)

  # Step 2: Find the children of this spouse
  ?spouse dbo:child ?child .

  # Step 3: Filter for children who are royalty and child of Archduchess Margarete Sophie of Austria
  ?child dbo:parent dbpedia:Margarete_Sophie_of_Austria .
  ?child a dbo:RoyalFamilyMember .

  # Step 4: Find the predecessor of this child
  ?predecessor dbo:successor ?child .
}",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
249,7,train,"Give me the native of India and native of the work, that is Indian, of Jamsetji Tata.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Jamsetji_Tata> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfJamsetjiTata ?indianWorkNativePlace
WHERE {
  # Find the birthplace of Jamsetji Tata
  dbr:Jamsetji_Tata dbo:birthPlace ?nativeOfJamsetjiTata .

  OPTIONAL {
    # Assuming there is a property that links to his work and its location
    # This part might need adjustment based on actual DBpedia data structure
    dbr:Jamsetji_Tata dbo:associatedWithWork ?work .
    ?work dbo:location ?indianLocation .
    
    FILTER (strstarts(str(?indianLocation), ""India""))  # Filter for Indian locations

    BIND (?indianLocation AS ?indianWorkNativePlace)
  }
}
```",3,4,4,2,2,2,2,9,0,3,21,0.0,0.0,0
871,8,train,"Who is the child, that is a politician, of Frederick Stanley, 16th Earl of Derby?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
    dbr:Frederick_Stanley,_16th_Earl_of_Derby dbo:spouse ?spouse .
    
    ?spouse dbo:child ?child .
    
    ?child a dbo:Politician .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
687,32,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?player a dbo:Athlete ;
          dbo:birthDate ""1955-02-22""^^xsd:date ;
          dbo:sport dbr:Soccer .
  
  ?player dbo:actorIn dbr:All_or_Nothing:_Manchester_City .

}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
78,3,train,"Give me the person born, that is a musical artist, as Stuart Mcbeath Tosh.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Stuart Mcbeath Tosh""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Stuart McBeth Tosh""@en .
  OPTIONAL { ?person dbo:birthDate ?birthDate . }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
347,24,train,"Give me the child of Ferdinand II, Holy Roman Emperor and father of the child of Ferdinand III, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_III,_Holy_Roman_Emperor> . ?v2 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find children of Ferdinand II, Holy Roman Emperor
  ?child2 dbo:parent dbp:Ferdinand_II,_Holy_Roman_Emperor .
  
  # Find child of Ferdinand III, Holy Roman Emperor and their father
  ?child3 dbo:parent dbp:Ferdinand_III,_Holy_Roman_Emperor .
  ?child3 dbo:father ?person .

  # Match the person who is a child of Ferdinand II and also a father to a child of Ferdinand III
  FILTER (?child2 = ?person)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
585,1,train,Give me the child of Linda Miller (actress).,SELECT ?result WHERE { <http://dbpedia.org/resource/Linda_Miller_(actress)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Linda Miller""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  
  FILTER(CONTAINS(LCASE(?person), LCASE(""linda miller"")))
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
39,58,train,"Give me the professional in Singer and professional in the alter ego of The Shadow and band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Singer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v5 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName ?singerProfessional ?alterEgoProfessional ?band
WHERE {
  # Find Bob Thompson (musician) and his birth name
  VALUES ?bobThompson { dbr:Bob_Thompson_(musician) }
  
  ?bobThompson dbo:birthName ?birthName .
  
  # Find the professional in Singer for Bob Thompson
  ?singerRole dbo:fieldOfActivity dbr:Singing ;
              dbo:agent ?bobThompson .
  BIND(dbo:professionalIn ?singerRole AS ?singerProfessional)
  
  # Find The Shadow's alter ego and its professional
  ?shadowAlterEgo dbo:alterEgo dbr:The_Shadow ;
                  dbo:fieldOfActivity ?alterEgoField .
  ?alterEgoRole dbo:fieldOfActivity ?alterEgoField ;
                dbo:agent ?alterEgoAgent .
  BIND(dbo:professionalIn ?alterEgoRole AS ?alterEgoProfessional)
  
  # Find the band associated with Bob Thompson
  ?bandRole dbo:fieldOfActivity dbr:Band ;
            dbo:agent ?bobThompson .
  BIND(?bandRole AS ?band)
}
```",6,7,7,3,3,3,3,71,0,0,3,0,0.0,0
119,52,train,"Give me the office of the leader of the administration, that is an event, of Anxo Quintana and tenant of the residence, that is a country, of Álvaro Quirós and tenant of Santiago de Compostela.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Anxo_Quintana> . <http://dbpedia.org/resource/Álvaro_Quirós> <http://dbpedia.org/property/residence> ?v5 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?result <http://dbpedia.org/ontology/headquarter> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  # Anxo Quintana's office in an event related to his administration
  ?event dbo:agent dbr:Anxo_Quintana .
  ?event dbo:eventType ?eventType .
  
  # Álvaro Quirós' residence in Santiago de Compostela
  ?alvaroQuirós dbo:residence dbr:Santiago_de_Compostela .
  
  # Linking the event to Anxo Quintana's office
  ?office dbo:heldBy dbr:Anxo_Quintana .
  ?event dbo:relatedOffice ?office .

  FILTER(?eventType = ""administration"")
}
```

This query attempts to find an office held by Anxo Quintana in an event related to his administration, where Álvaro Quirós is associated with Santiago de Compostela. Adjustments may be needed based on the exact structure and availability of data in DBpedia.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
89,39,train,"Give me the spouse of Saw Shwe Khet and predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?predecessor WHERE {
  # Step 1: Find the spouse of Saw Shwe Khet
  ?sawShweKhet dbo:spouse ?spouse .
  FILTER(STR(?sawShweKhet) = ""Saw_Shwe_Khet"")

  # Step 2: Find a child of this spouse who is royalty
  ?spouse dbp:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .

  # Step 3: Determine the predecessor of this royal child
  ?royalChild dbo:predecessor ?predecessor .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
585,3,train,"Give me the award, that is American and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  # Find entities related to ""Coro de la Pontificia Universidad Católica de Puerto Rico""
  ?entity rdfs:label ""Coro de la Pontificia Universidad Católica de Puerto Rico""@en .
  
  # Look for awards associated with this entity
  ?entity dbo:award ?award .

  # Ensure the award is linked to an American location or settlement
  ?award dbo:country dbr:United_States_of_America ;
         dbo:settlement ?settlement .
}
```

This query does the following:
- It identifies entities labeled as ""Coro de la Pontificia Universidad Católica de Puerto Rico.""
- It retrieves awards associated with these entities.
- It filters these awards to ensure they are linked to a country (the United States) and involve a settlement.",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
119,43,train,"Give me the tenant of the residence, that is a country, of the citizen, that is Spanish, of Spain and tenant of Santiago de Compostela and office of Alberto Núñez Feijóo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> ?v4 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spain>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?tenantCountry WHERE {
  # Identify Alberto Núñez Feijóo and his office
  dbr:Alberto_Núñez_Feijóo dbo:office [
    a dbo:Office ;
    dbo:location dbr:Santiago_de_Compostela .
  ] .

  # Ensure he is associated with Santiago de Compostela
  ?person dbo:nationality dbr:Spain .
  ?person dbo:birthPlace dbr:Santiago_de_Compostela .
  
  # Link to his office and residence
  ?office dbo:holder ?person ;
          dbo:location dbr:Santiago_de_Compostela .

  # Find the country of residence
  ?person dbo:residence ?tenantCountry .
  FILTER (isLiteral(?tenantCountry) && datatype(?tenantCountry) = xsd:string)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
687,45,train,"Give me the player in Juan Carlos Molina (footballer) and player in Sergio Agüero and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?playerInMolina ?playerInAgüero ?team WHERE {
  # Find players associated with Juan Carlos Molina
  ?molina a dbo:FootballPlayer ;
          foaf:name ""Juan Carlos Molina"" .
  ?molina dbo:playedFor ?club1 .
  ?playerInMolina dbo:playedFor ?club1 .

  # Find players associated with Sergio Agüero
  ?aguero a dbo:FootballPlayer ;
          foaf:name ""Sergio Agüero"" .
  ?aguero dbo:playedFor ?club2 .
  ?playerInAgüero dbo:playedFor ?club2 .

  # Find person born on Marcelo Sarmiento's birthday who is both a player and manager
  ?sarmiento dbo:birthday ?birthday ;
             foaf:name ""Marcelo Sarmiento"" .
  ?person dbo:birthday ?birthday ;
          (dbo:playerOfTeam|dbo:managerOfTeam) ?team .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
293,39,train,Give me the spouse of Roger Pryor (actor) and person born as the birth name of the parent of Tisha Sterling.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?personBornAsBirthNameOfParent
WHERE {
  # Part 1: Find the spouse of Roger Pryor (actor)
  dbr:Roger_Pryor_(actor) dbo:spouse ?spouse .

  # Part 2: Identify the person born as the birth name of the parent of Tisha Sterling
  dbr:Tisha_Sterling dbo:parent ?parent .
  ?parent foaf:name ?birthName .
  ?person foaf:name ?birthName .
  ?person dbo:birthName ?birthName .

  # Ensure we are getting distinct results for both parts
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
687,13,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find actors in ""All or Nothing: Manchester City""
  ?castMember dbo:actorIn dbr:All_or_Nothing:_Manchester_City.
  
  # Ensure the cast member is a person
  ?castMember rdf:type dbo:Person.

  # Link the actor to their name
  ?castMember foaf:name ?player.

  # Check if they are also a soccer player and an athlete
  OPTIONAL { ?castMember dbo:sport dbr:Soccer. }
  OPTIONAL { ?castMember dbo:occupation dbr:Athlete. }

  FILTER EXISTS { ?castMember dbo:sport dbr:Soccer } .
  FILTER EXISTS { ?castMember dbo:occupation dbr:Athlete } .
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
68,15,train,"Give me the father of Catherine of Austria, Queen of Portugal and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Find Catherine of Austria, Queen of Portugal and her father
  ?catherine a dbo:Person ;
             rdfs:label ""Catherine of Austria, Queen of Portugal""@en .
  ?catherine dbo:father ?catherinesFather .

  # Find Dorothea of Denmark, Electress Palatine and her parent (likely mother)
  ?dorothea a dbo:Person ;
            rdfs:label ""Dorothea of Denmark, Electress Palatine""@en .
  ?dorothea dbo:mother ?dorothesasMother .

  # Find the common ancestor
  ?catherinesFather owl:sameAs ?commonAncestor .
  ?dorothesasMother dbo:father ?commonAncestor .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
80,22,train,Give me the actor of Shelby Oaks and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the actor for Shelby Oaks
  ?movie dbo:starring ?actor .
  ?movie dbo:title ""Shelby Oaks""@en .

  # Find the person with a professional alter ego as The Shadow
  ?person dbo:profession dbr:The_Shadow .
  
  FILTER (?actor = ?person)
}
```

This query assumes that:
- `dbo:starring` is used to link movies and actors.
- `dbo:title` is used for movie titles.
- `dbo:profession` links a person to their professional roles.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,49,train,"Give me the child of the child of the spouse, that is a royalty, of Constance of Burgundy and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Step 1: Find Constance of Burgundy's spouse
  ?cons_spouse dbo:spouse ?constance .
  ?constance rdfs:label ""Constance of Burgundy""@en .

  # Step 2: Find the child of this spouse
  ?child dbo:parent ?cons_spouse .

  # Step 3: Find the grandchild who is royalty
  ?grandchild dbo:parent ?child .
  ?grandchild a dbo:Monarch .

  # Step 4: Identify Roger III's parent
  ?roger_parent dbo:child ?roger_iii .
  ?roger_iii rdfs:label ""Roger III, Duke of Apulia""@en .

  # Step 5: Find the child of Roger III's parent
  ?parent_child dbo:parent ?roger_parent .

  # Ensure the grandchild is also a child of Roger III's parent
  FILTER (?grandchild = ?parent_child)
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
347,30,train,"Give me the child of the father of Cecilia Renata of Austria and father of Eleonore of Austria, Queen of Poland and commander in Thirty Years' War.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Ferdinand II as the father of Cecilia Renata and Eleonore
  dbr:Ferdinand_II,_Holy_Roman_Emperor dbo:spouse ?mother .
  
  # Find children who are either Cecilia Renata or Eleonore
  ?child dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor ;
         rdf:type dbo:Person .

  FILTER (?child IN (dbr:Cecilia_Renata_of_Austria, dbr:Eleonore_of_Austria))

  # Find other children of Ferdinand II who were commanders in the Thirty Years' War
  ?otherChild dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor ;
              rdf:type dbo:Person .
  
  OPTIONAL {
    ?otherChild dbo:occupation dbr:Thirty_Years_War_commander .
  }
  
  FILTER (?child != ?otherChild)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
628,54,train,"Give me the native of Florida and person born as the birth name of the native, that is a musical artist, of Florida and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeArtist ?bandMember
WHERE {
  # Step 1: Find a native of Florida who is a musical artist
  ?nativeArtist dbo:nativePlace dbr:Florida ;
               a dbo:MusicalArtist .

  # Step 2: Find another person born as the birth name of this first individual
  ?person dbp:birthday ?birthday ;
          dbp:birthName ?birthName .
  
  FILTER (?person != ?nativeArtist)

  # Step 3: This second person should be a band member of the first musical artist
  ?bandMembership dbo:member ?person ;
                  dbo:musicalArtist ?nativeArtist .

  # Step 4: The second person must also be a musical artist and associated with Bobby Shmurda
  ?person a dbo:MusicalArtist .
  
  OPTIONAL {
    ?association dbo:associatedBand dbr:Bobby_Shmurda ;
                 dbo:member ?person .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
80,39,train,Give me the actor of ATL (film) and professional in the alter ego of the series of The Golden Master.,SELECT ?result WHERE { <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?filmName WHERE {
  # Query for actor of ATL (film)
  OPTIONAL {
    ?film dbo:title ""ATL""@en .
    ?film dbo:starring ?actor .
    BIND(""ATL"" AS ?filmName)
  }
  
  UNION
  
  # Assuming The Golden Master is a series, we look for related professionals
  OPTIONAL {
    ?series dbo:title ?title .
    FILTER(CONTAINS(LCASE(?title), ""the golden master""))
    ?series dbo:starring ?professional .
    BIND(""The Golden Master"" AS ?filmName)
  }
}
```

This query attempts to find the actor associated with the film ""ATL"" and any professional linked to a series titled ""The Golden Master."" Note that due to the ambiguity of ""The Golden Master,"" this part may not return results unless such a series exists in DBpedia.",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
737,39,train,"Give me the child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royaltyChild WHERE {
  # Step 1: Find Archduchess Margarete Sophie of Austria's father
  ?margareteSophie a dbo:Person ;
                  dbp:father ?father .

  FILTER (str(?margareteSophie) = ""Margarete_Sophie_of_Austria"")

  # Step 2: Find the child of Albrecht, Duke of Württemberg
  ?albrecht a dbo:Person ;
           dbp:child ?mother .
  
  FILTER (str(?albrecht) = ""Albrecht,_Duke_of_W%C3%BCrttemberg"")

  # Ensure the mother is the same person as the father from step 1
  VALUES ?mother { ?father }

  # Step 3: Find a child of this parent (the mother)
  ?mother dbp:child ?child .

  # Step 4: Find the child of that child who is royalty
  ?child dbp:child ?royaltyChild .
  
  FILTER EXISTS {
    ?royaltyChild dbo:positionTitle ?title .
    FILTER CONTAINS(LCASE(str(?title)), ""king"" || ""queen"" || ""prince"" || ""princess"")
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
531,5,train,"Give me the force, that is a military conflict and a societal event, of Manuel Pinto da Costa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Find Manuel Pinto da Costa in DBpedia
  dbr:Manuel_Pinto_da_Costa a dbo:Person .

  # Look for events associated with him that are both military conflicts and societal events
  ?event dbo:agent dbr:Manuel_Pinto_da_Costa .
  ?event a ?eventType .

  FILTER (
    (?eventType = dbo:MilitaryConflict || 
     ?eventType = dbo:SocietalEvent)
  )
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
595,22,train,"Give me the commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:spouse dbr:Hillary_Clinton .
  ?person dbo:militaryService dbr:United_States_Navy .
  ?person dbo:commanderInWar ?war .
  
  ?disease dbo:relatedTo ?war .
  ?societalEvent dbo:relatedTo ?war .

  FILTER EXISTS { ?disease a dbo:Disease . }
  FILTER EXISTS { ?societalEvent a dbo:SocietalEvent . }
}
```

This query does the following:
- Selects individuals who are of type `Person`.
- Checks if they have Hillary Clinton as a spouse.
- Verifies their military service in the United States Navy.
- Identifies them as a commander in a war.
- Ensures that both a disease and a societal event are related to this war.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,47,train,"Give me the child of the child of the child of Alexander of Württemberg (1804-1881) and predecessor of the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Alexander_of_Württemberg_(1804-1881)> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?greatGrandchild ?predecessorChild WHERE {
  # Alexander of Württemberg and his descendants
  ?alexander a dbo:Person ;
             foaf:name ""Alexander of Württemberg""@en ;
             dbp:birthYear ""1804""^^xsd:gYear ;
             dbp:deathYear ""1881""^^xsd:gYear .

  # Child of Alexander
  ?childOfAlex dbo:parent ?alexander .
  
  # Grandchild of Alexander
  ?grandChildOfAlex dbo:parent ?childOfAlex .

  # Great-grandchild of Alexander
  ?greatGrandchild dbo:parent ?grandChildOfAlex .

  # Philipp Albrecht, Duke of Württemberg and his child
  ?philippAlbrecht a dbo:Person ;
                  foaf:name ""Philipp Albrecht, Duke of Württemberg""@en .
  
  ?childOfPhilipp dbp:parent ?philippAlbrecht .

  # Predecessor (sibling) of the child of Philipp Albrecht
  ?predecessorChild dbo:parent ?philippAlbrecht ;
                    foaf:name ?namePredecessor .
  FILTER(?namePredecessor != ?childOfPhilipp)

  # Find the predecessor who is also a parent to the great-grandchild of Alexander
  ?greatGrandchild dbo:parent ?predecessorChild .
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
816,26,train,Give me the parent of the professional in the profession of Eugène Cattin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentClass WHERE {
  ?eugeneCattin dbo:occupation ?profession .
  ?profession a ?professionClass .
  ?professionClass rdfs:subClassOf+ ?parentClass .
  
  FILTER NOT EXISTS { ?parentClass rdfs:subClassOf+ ?grandParentClass }
}
```

This query assumes that there is an entity for Eugène Cattin in DBpedia with the `dbo:occupation` property linking to his profession. It then finds the class of that profession and retrieves its parent class, ensuring it's not a subclass of another class (i.e., it's at the top level).",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
143,3,train,"Give me the show, that is a movie, with Afeez Oyetoro.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Afeez_Oyetoro> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?movie WHERE {
  ?person foaf:name ""Afeez Oyetoro""@en .
  ?person dbo:starring ?movie .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
905,48,train,"Give me the spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania and child of the child, that is a royalty, of Béla IV of Hungary.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?philip dbo:childOf ?parent .
  FILTER (str(?philip) = ""Philip, Despot of Romania"") .

  ?parent dbo:childOf ?grandparent .
  ?grandparent a dbo:Monarch .

  ?royalChild dbo:childOf ?grandparent .
  ?royalChild a dbo:Monarch .

  ?grandparent dbp:spouse ?spouse .
}
```

This query assumes:
- `dbo:childOf` is used to find parent-child relationships.
- `a dbo:Monarch` identifies royalty.
- `dbp:spouse` finds the spouse of a person.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
531,24,train,"Give me the office of the commander, that is an office holder and a politician, in Central African Republic Civil War and office of Miguel Maura.",SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v2 <http://dbpedia.org/property/office> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?officeCentralAfricanRepublic ?officeMiguelMaura
WHERE {
  # Find office related to Central African Republic Civil War
  ?person a dbo:OfficeHolder ;
          dbo:occupationCategory dbr:Politician ;
          dbo:heldPublicOffice ?officeCentralAfricanRepublic .
  ?officeCentralAfricanRepublic dbo:relatedEvent dbr:Central_African_Republic_Civil_War .

  # Find office held by Miguel Maura
  dbr:Miguel_Maura a dbo:OfficeHolder ;
                   dbo:heldPublicOffice ?officeMiguelMaura .
}",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
737,23,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?predecessor WHERE {
  # Step 1: Identify Archduchess Helena of Austria
  ?helena a dbo:Archduchess ;
          foaf:name ""Helena, Archduchess of Austria""@en .

  # Step 2: Find her spouse(s)
  ?helena dbo:spouse ?spouse .

  # Step 3: Check if the spouse is royalty
  ?spouse a dbo:RoyalFamilyMember .

  # Step 4: Identify children from that royal spouse
  ?child dbo:parent ?spouse ;
         a dbo:Person .

  # Step 5: Find predecessor of each child
  ?child dbp:predecessor ?predecessor .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
905,52,train,"Give me the child of Stephen V of Hungary and parent of the father, that is a royalty, of Charles I of Hungary and spouse of the father of the parent, that is a royalty, of Philip, Despot of Romania.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Philip,_Despot_of_Romania> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?stephenV dbo:child ?elizabethCuman .
  ?elizabethCuman dbo:spouse ?louisI .
  
  ?belaIV dbo:child ?stephenV .
  ?belaIV dbp:spouse ?mariaLaskarina .

  ?johnHunyadi dbo:child ?philipDespot .
  ?philipDespot dbp:parent ?elizabethSzilagyi .
  
  ?elizabethSzilagyi dbo:father ?stephenVSzilagyi .
  ?stephenVSzilagyi dbp:spouse ?catherineTelegdi .

  FILTER(?elizabethCuman = ?person)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
68,23,train,"Give me the father of the child, that is a royalty, of Philip I of Castile and father of the parent of Dorothea of Denmark, Electress Palatine.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . ?v1 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Dorothea_of_Denmark,_Electress_Palatine> <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
    ?child dbo:parent dbr:Philip_I_of_Castile .
    ?child a dbo:Monarch .

    ?dorotheaParent dbo:child dbr:Dorothea_of_Denmark_Electress_Palatine .

    ?child ?p ?dorotheaParent .

    ?father dbo:spouse ?mother .
    ?child dbo:parent ?father .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
263,3,train,"Give me the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?region ?country
WHERE {
  ?person a dbo:Person ;
          foaf:name ""William Gayner""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  OPTIONAL { 
    ?birthPlace dbp:region ?region .
  }
  
  OPTIONAL { 
    ?birthPlace dbp:country ?country .
  }
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
103,39,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and professional in Actor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actor""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?actorName WHERE {
  # Find The Shadow in comics and video games
  ?shadow dbr:The_Shadow_(video_game) ;
          dbo:basedOn dbr:The_Shadow_(comics) .

  # Get the alter ego of The Shadow
  ?shadow dbo:alterEgo ?alterEgo .

  # Ensure the alter ego is also an actor
  ?alterEgo a dbo:Actor ;
            rdfs:label ?actorName .
  
  FILTER (lang(?actorName) = 'en')
}
ORDER BY ?actorName",4,5,5,3,2,3,3,71,0,0,4210,0,0.0,0
225,12,train,"Give me the entity in Japan and birthplace of the awardee, that is Japanese, of Anita Borg Institute Women of Vision Awards.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Anita_Borg_Institute_Women_of_Vision_Awards> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?birthPlace ?currentLocationInJapan
WHERE {
  # Find awardees of the Anita Borg Institute Women of Vision Awards
  ?awardee dbo:award dbr:Anita_Borg_Institute_Women_of_Vision_Awards .
  
  # Filter for Japanese nationality
  ?awardee dbo:nationality dbr:Japan .

  # Get birthplace
  OPTIONAL { ?awardee dbp:birthPlace ?birthPlace . }

  # Find current location in Japan (assuming a property like 'residence' or similar)
  OPTIONAL {
    ?awardee dbo:currentResidence ?location .
    FILTER(STRSTARTS(STR(?location), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?location dbo:country dbr:Japan } )
    BIND(STRAFTER(STR(?location), ""http://dbpedia.org/resource/"") AS ?currentLocationInJapan)
  }
}
ORDER BY ?awardee
```",3,4,4,2,2,3,2,20,0,2,1,0.0,0.0,0
295,16,train,"Give me the writer of the work, that is a musical work, of Apache Indian and native of the birth place of Victor Saville.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Apache_Indian> . <http://dbpedia.org/resource/Victor_Saville> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?work dbo:artist dbr:Apache_Indian .
  ?work dbo:location dbr:London .
  ?work dbo:writer ?writer .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
263,10,train,Give me the parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . ?result <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person dbo:birthName ""Hon. Mary Frances Bowes-Lyon""@en .
  ?person dbo:parent ?parent .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
203,18,train,Give me the commander in French campaign in Egypt and Syria and military force of Battle of Fort Royal and military force of Battle of Cape Finisterre (1805).,SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?campaignCommander ?battle1Force ?battle2Force WHERE {
  # French campaign in Egypt and Syria
  OPTIONAL {
    dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?campaignCommander .
  }

  # Battle of Fort Royal
  OPTIONAL {
    dbr:Battle_of_Fort_Royal dbo:militaryUnitInvolved ?battle1Force .
  }

  # Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryUnitInvolved ?battle2Force .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
816,39,train,Give me the parent of the child of the spouse of Mariclare Costello and parent of Amy Arbus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Find Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?spouse a dbo:Person ;
          dbo:spouse ?mariclare .

  # Step 2: Find the child of this spouse
  ?child a dbo:Person ;
         dbo:parent ?spouse .

  # Step 3: Determine the parent of this child
  ?commonParent a dbo:Person ;
                dbo:parent ?child .

  # Step 4: Identify Amy Arbus's parent
  ?amy a dbo:Person ;
       foaf:name ""Amy Arbus""@en .
  
  ?amyParent a dbo:Person ;
             dbo:parent ?amy .

  # Step 5: Find commonality between the parents from steps 3 and 4
  FILTER (?commonParent = ?amyParent)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
159,2,train,Give me the commander in Great Turkish War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageRedirects db:Q1234567 ; # Replace Q1234567 with the actual DBpedia resource ID for the Great Turkish War if known.
    dbo:agent ?commander .
  FILTER (lang(?commanderLabel) = ""en"")
}
```",1,1,2,1,1,3,3,71,0,0,40,0,0.0,0
103,14,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?professional WHERE {
  wd:Q1234568 wdt:P136 ?professional .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"" if it is different. You can find the correct identifier by searching DBpedia or Wikidata.",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
737,56,train,"Give me the child of Albrecht, Duke of Württemberg and predecessor of the child of Philipp Albrecht, Duke of Württemberg and child of the child, that is a royalty, of the parent of Archduchess Margarete Sophie of Austria.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfAlbrecht ?predecessor
WHERE {
  # Step 1: Albrecht, Duke of Württemberg's child
  ?albrecht dbo:spouse ?spouse .
  ?albrecht dbp:name ""Albrecht, Duke of Württemberg""@en .
  ?childOfAlbrecht dbo:parent ?albrecht .

  # Step 2: Philipp Albrecht, Duke of Württemberg's child and that child's child
  ?philippAlbrecht dbp:name ""Philipp Albrecht, Duke of Württemberg""@en .
  ?childOfPhilippAlbrecht dbo:parent ?philippAlbrecht .
  ?grandChildOfPhilippAlbrecht dbo:parent ?childOfPhilippAlbrecht .

  # Step 3: Archduchess Margarete Sophie of Austria's parent
  ?margareteSophie dbp:name ""Margarete Sophie of Austria""@en .
  ?parentOfMargareteSophie dbo:child ?margareteSophie .

  # Find the predecessor (parent) of the child from step 2 who is a royalty
  ?predecessor dbo:child ?grandChildOfPhilippAlbrecht .
  ?predecessor rdf:type dbo:Monarch .

  # Check if this predecessor is the same as the child from step 1
  FILTER (?childOfAlbrecht = ?predecessor)
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
756,17,train,"Give me the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person dbo:birthday ""1968-08-26""^^xsd:date ;
          a dbo:SportsManager .
  
  ?person dbo:managerOf ?team .

  ?team a ?type1, ?type2, ?type3 .
  FILTER (?type1 = dbo:SoccerClubSeason || ?type1 = dbo:SportsSeason || ?type1 = dbo:SportsTeamSeason)
  FILTER (?type2 = dbo:SoccerClubSeason || ?type2 = dbo:SportsSeason || ?type2 = dbo:SportsTeamSeason)
  FILTER (?type3 = dbo:SoccerClubSeason || ?type3 = dbo:SportsSeason || ?type3 = dbo:SportsTeamSeason)
}
```",2,6,3,2,1,3,3,71,0,0,5,0,0.0,0
412,18,train,Give me the war of the awardee of 30 and entity in Athens.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Athens> . ?v0 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?athensEntity WHERE {
  # Find wars associated with Thomas Mann
  ?person dbo:nationality dbr:Germany ;
          foaf:name ""Thomas Mann""@en .
  
  OPTIONAL { 
    ?person dbo:award dbr:Nobel_Prize_in_Literature_1930 .
  }
  
  OPTIONAL {
    ?war dbo:participant ?person .
    ?war rdfs:label ?warLabel .
  }

  # Find entities related to Athens
  ?athensEntity dbo:location dbr:Athens ;
                rdfs:label ?entityLabel .

}
```",3,3,4,2,2,2,3,28,0,0,3,0,0.0,0
353,6,train,"Who is the child, that is a royalty, of William I of Sicily?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""William_I_of_Sicily"")
  
  ?person dbo:child ?child .
  ?child a dbo:Monarch .
}
```

This query does the following:
- It looks for individuals (`?person`) who are spouses of William I of Sicily.
- Then, it finds children (`?child`) of these individuals.
- Finally, it filters those children to include only those who have an instance of `dbo:Monarch`, indicating they hold a royal title.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
557,22,train,"Give me the professional in  and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie ?professional ?role
WHERE {
  # Find Janet Gaynor's movies or works
  ?work dbo:starring dbr:Janet_Gaynor .
  
  # Check if the work is a movie
  ?work rdf:type dbo:Film .

  # Get the title of the movie
  ?movie rdfs:label ?title .
  FILTER (lang(?title) = 'en') .

  # Find professionals involved in the movie
  ?professional dbo:profession dbr:Actor ;
                dbo:worksForProject ?work .

  # Determine their role
  OPTIONAL { ?professional dbo:role ?role . }
  
  # Filter for producers or directors
  FILTER (?role = ""Producer"" || ?role = ""Director"")
}
ORDER BY ?movie
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
347,36,train,"Give me the child of the father of the child, that is a royalty, of Maria Anna of Bavaria (born 1574) and commander in Thirty Years' War.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Maria_Anna_of_Bavaria_(born_1574)> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Find Maria Anna of Bavaria (born 1574)
  ?mariaAnna a dbo:Person ;
             foaf:name ""Maria Anna of Bavaria""@en ;
             dbo:birthDate ?birthDate .
  
  FILTER(YEAR(?birthDate) = 1574)

  # Step 2: Identify her children
  ?mariaAnna dbo:child ?child .

  # Step 3: Find the father of each child
  ?child dbo:father ?father .

  # Step 4: Find the children of these fathers
  ?father dbo:child ?grandChild .

  # Step 5: Filter for royalty and commander in the Thirty Years' War
  ?grandChild a dbo:Monarch ;
              dbo:occupation ?occupation .
  
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") && CONTAINS(LCASE(?occupation), ""thirty years war""))
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
263,5,train,"Give me the child of Claude Bowes-Lyon, 14th Earl of Strathmore and Kinghorne.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Claude_Bowes-Lyon,_14th_Earl_of_Strathmore_and_Kinghorne dbo:child ?child .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
769,7,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
  ?person dbo:occupation [ 
    a dbo:SportsManager ;
    dbo:sport dbr:Soccer
  ] .
  OPTIONAL { ?person dbp:name ?name . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
  
- **SELECT Clause**: We are selecting the person and their name.

- **FILTER by Birth Date**: The `?person dbo:birthDate ""1981-12-01""^^xsd:date .` line filters individuals born on December 1, 1981.

- **Roles/Professions**:
  - `a dbo:Athlete`: Ensures the person is an athlete.
  - `dbo:sport dbr:Soccer`: Specifies that their sport is soccer.
  - `dbo:occupation [ a dbo:SportsManager ; dbo:sport dbr:Soccer ]`: Checks if they are a sports manager specifically in soccer.

- **OPTIONAL Clause**: We use this to optionally fetch the name of the person, which might not always be available.

This query should return individuals who match all these criteria from DBpedia. Adjustments may be needed based on the exact structure and availability of data in DBpedia at any given time.",2,6,3,2,1,3,2,20,0,0,6,0,0.0,0
203,27,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  ?person dbo:award dbr:Knight_Commander_of_the_Order_of_the_Bath .
  
  ?event dbo:agent ?person ;
         a dbo:MilitaryEvent, dbo:SocietalEvent .

  ?event dbo:militaryForce ?militaryForce .
}
```

This query does the following:

- Selects individuals (`?person`) who have been awarded the Knight Commander of the Order of the Bath.
- Identifies events (`?event`) related to these individuals that are both military and societal in nature.
- Retrieves the military force (`?militaryForce`) associated with these events.",3,5,4,3,1,3,3,71,0,0,4831,0,0.0,0
628,27,train,"Give me the native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativePlace WHERE {
  ?band a dbo:Band ;
        dbo:location dbr:New_York_(state) .
  
  ?award a dbo:Award ;
         dbo:country dbr:United_States_of_America ;
         dbo:region ?region ;
         dbo:settlement ?settlement .

  FILTER (isLiteral(?region) && isLiteral(?settlement))
  FILTER (str(?region) = str(?settlement))

  ?band dbo:award ?award .
  
  ?award dbo:nativeOf ?nativePlace .
}
```

This query does the following:

- Selects bands located in New York State.
- Identifies awards that are also regions, American, states, and settlements.
- Filters to ensure the award's region and settlement are the same literal value.
- Retrieves the native place of such an award.",3,8,4,3,1,3,3,71,0,0,8569,0,0.0,0
159,40,train,"Give me the successor of the commander, that is a politician and an office holder, in the force, that is an event and a military conflict, of Michał Kazimierz Pac and commander in Great Turkish War and reference to George Ducas.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Michał_Kazimierz_Pac> . <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  # Michał Kazimierz Pac as commander in the Great Turkish War
  dbr:Mikołaj_Kazimierz_Pac a dbo:Commander ;
    dbo:commandedDuring dbr:Great_Turkish_War .

  # Successor who is also a politician and office holder
  ?successor a dbo:Politician, dbo:OfficeHolder ;
    dbo:succeededBy dbr:Mikołaj_Kazimierz_Pac ;
    dbo:commandedDuring dbr:Great_Turkish_War .

  OPTIONAL {
    # Reference to George Ducas
    ?relatedEvent dbo:participatedIn dbr:George_Ducas .
  }
}",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
628,56,train,"Give me the person born as Ackquille Jean Pollard and band member of the associated musical artist, that is a musical artist, of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Ackquille Jean Pollard
  VALUES ?ackquille { dbr:A$AP_Ferg }
  
  # A$AP Ferg is a band member of the associated musical artist of Bobby Shmurda
  ?ackquille dbo:associatedMusicalArtist dbr:Bobby_Shmurda .
  
  # Find an award related to a band from New York
  ?award dbo:recipient ?band .
  ?band dbo:country dbr:United_States ;
        dbo:stateOrProvince dbr:New_York_(state) .
  
  # The awardee is a band, and the award's region/state/settlement is related to them
  ?band dbp:nativePlace ?place .
  ?place rdf:type/(dbo:Country|dbo:StateOrProvince|dbo:Settlement) .

  # Ensure Ackquille Jean Pollard (A$AP Ferg) is a musical artist
  ?ackquille rdf:type dbo:MusicalArtist .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
756,38,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and native of the administration, that is a country, of Theodor Heuss.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v2 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find teams managed by Thomas Letsch
  ?team dbo:manager dbr:Thomas_Letsch .
  
  # Ensure the team is part of a soccer club season, sports season, and sports team season
  ?team dbo:sportsTeamSeason ?season .
  ?season rdf:type/rdfs:subClassOf* (dbr:Soccer_Club_Season dbr:Sports_Season dbr:Sports_Team_Season) .

  # Find the manager of these teams
  ?team dbo:manager ?manager .

  # Get Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?nativePlace .
  ?nativePlace rdf:type dbo:Country .

  # Ensure the manager is from the same country as Theodor Heuss
  ?manager dbo:nationality ?country .
  FILTER (?country = ?nativePlace)
}
```",4,8,5,2,2,3,3,71,0,0,3,0,0.0,0
203,61,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Find military conflicts involving William Bayne
  ?conflict a dbo:MilitaryConflict ;
            dbo:participant ?bayne .
  
  # Ensure the participant is William Bayne
  ?bayne rdfs:label ""William Bayne""@en .

  # Get the military force of that conflict
  ?conflict dbo:militaryForce ?militaryForce1 .

  # Find events related to Knight Commanders of the Order of the Bath
  ?event a dbo:Event ;
         dbo:awardee ?knightCommander .
  
  # Ensure the awardee is a Knight Commander of the Order of the Bath
  ?knightCommander dbo:title dbr:Knight_Commander_of_the_Order_of_the_Bath .

  # Get the military force of that event
  ?event dbo:militaryForce ?militaryForce2 .
}
```",6,10,7,3,2,3,3,71,0,0,24,0,0.0,0
87,20,train,Give me the actor of Always (1989 film) and actor of Paradise (2013 film) and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.,SELECT ?result WHERE { <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?alwaysActor ?paradiseActor ?januszSpouse WHERE {
  # Actor of ""Always"" (1989 film)
  OPTIONAL {
    dbr:Always_(film) dbo:starring ?actor .
    ?actor foaf:name ?alwaysActor .
  }

  # Actor of ""Paradise"" (2013 film)
  OPTIONAL {
    dbr:Paradise_(2013_film) dbo:starring ?actor2 .
    ?actor2 foaf:name ?paradiseActor .
  }

  # Spouse of Janusz Kamiński
  OPTIONAL {
    dbr:Janusz_Kamiński dbo:spouse ?spouse .
    ?spouse foaf:name ?januszSpouse .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
871,4,train,Who is the awardee of Commander of the Royal Victorian Order?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:honoraryTitle dbr:Commander_of_the_Royal_Victorian_Order .
}
```

This query looks for entities (`?person`) that have an honorary title of ""Commander of the Royal Victorian Order"" in DBpedia's ontology.",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
871,38,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentName WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby
  ?frederickStanley a dbo:Person ;
                   foaf:name ""Frederick Stanley, 16th Earl of Derby""@en .

  # Step 2: Find his child who is a politician
  ?child dbo:parent ?frederickStanley ;
         a dbo:Politician .

  # Step 3: Determine the parent of that child (which would be Frederick Stanley himself)
  ?politicianChildParent dbo:parent ?child .

  # Step 4: Find the parent of this child (Frederick Stanley), which refers back to his own parents
  ?frederickStanleyParent dbo:parent ?frederickStanley .
  
  # Get the name of Frederick Stanley's parent
  ?frederickStanleyParent foaf:name ?parentName .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
87,11,train,"Give me the actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies featuring Audrey Hepburn
  ?movie dbo:starring dbr:Audrey_Hepburn .
  
  # Ensure the movie is a film and work
  ?movie rdf:type dbo:Film ;
         rdf:type dbo:Work .

  # Find other actors in those movies
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != dbr:Audrey_Hepburn) # Exclude Audrey Hepburn herself
}
```",2,4,3,2,1,2,3,28,61,11,1,0.8472222222222222,0.9838709677419355,0.9104477611940298
816,54,train,"Give me the parent of Doon Arbus and actor of the movie, that is a work, with Herschel Bernardi and parent of the professional in the profession of Eugène Cattin.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . ?v5 <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Eugène_Cattin> <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find parent of Doon Arbus
  ?parent dbo:child dbr:Doon_Arbus .
  
  # Find movies with Herschel Bernardi and the actor
  ?movie dbo:starring ?actor ;
         dbo:starring dbr:Herschel_Bernardi .
  
  # Ensure the work is a movie
  ?movie rdf:type dbo:Film .

  # Find parent of Eugène Cattin's profession
  ?profession dbo:parent ?eugeneParent .
  ?eugeneParent dbo:wikiPageRedirects dbr:Eug%C3%A8ne_Cattin .
  
  # Ensure the actor is related to the parent of Eugène Cattin's profession
  ?actor dbo:occupation ?profession .

  # Bind the actor who satisfies all conditions
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,52,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v5 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Roger II of Sicily and his child who is royalty
  ?roger2 a dbo:Monarch ;
          foaf:name ""Roger II of Sicily"" .
  
  ?child1 dbo:parent ?roger2 ;
          dbo:royalty true .

  # William I of Sicily and his child who is royalty
  ?william1 a dbo:Monarch ;
            foaf:name ""William I of Sicily"" .
  
  ?child2 dbo:parent ?william1 ;
          dbo:royalty true .

  # Elvira of Castile, Queen of Sicily and her child
  ?elvira a dbo:Queen ;
          foaf:name ""Elvira of Castile, Queen of Sicily"" .
  
  ?child3 dbo:parent ?elvira .

  # Find the intersection
  FILTER (?child1 = ?child2 && ?child2 = ?child3)
  BIND(?child2 AS ?individual)
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
782,48,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to the real name of the band of Kim Wilson.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kim_Wilson> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?bandName WHERE {
  # Part 1: Find Nicholas Michael Curran's associated musical artist
  ?person a dbo:MusicalArtist ;
          foaf:name ""Nicholas Michael Curran""@en .
  ?person dbo:associatedBandOrMusicalArtist ?artist1 .

  # Part 2: Find Kim Wilson's band and its real name
  ?band a dbo:Band ;
        dbo:leadMember dbr:Kim_Wilson ;
        foaf:name ?bandName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
103,32,train,"Give me the professional in the profession of Shatrughan Sinha and actor of the movie, that is a television show, with Richard E. Grant.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Richard E. Grant's television shows
  ?tvShow dbo:starring dbr:Richard_E._Grant .
  
  # Find actors in the same TV show
  ?tvShow dbo:starring ?actor .

  # Ensure the actor is also an actor by profession
  ?actor dbo:occupation dbr:Actor .

  # Check if this actor has acted in a movie with Shatrughan Sinha
  ?movie dbo:starring ?actor .
  ?movie dbo:starring dbr:Shatrughan_Sinha .
}
```",4,5,5,2,2,3,3,71,0,0,28,0,0.0,0
782,61,train,"Give me the band of the band member of the person born, that is a musical artist, on 1945-03-30 and associated musical artist of the person born, that is a musical artist, as the persona of Nick Curran.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Find the person born on 1945-03-30 who is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          a dbo:MusicalArtist .

  # Find any band member of this person and their associated band
  ?member dbo:bandMemberOf ?band1 .
  ?band1 dbo:associatedBandMember ?person .

  # Find the musical artist associated with Nick Curran as a persona
  dbr:Nick_Curran dbo:persona ?persona .
  ?persona dbo:associatedMusicalArtist ?artist2 .
  
  # Find the band of this second artist
  ?artist2 dbo:bandMemberOf ?band2 .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
472,3,train,"Give me the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  VALUES ?person { dbr:Christian_Ditlev_Ammertorp_Hansen }
  
  ?person dbo:deathPlace ?deathPlace .
  ?deathPlace a ?type .
  FILTER (?type = dbo:Settlement)
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
687,26,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Find actors in these films
  ?film dbo:starring ?actor .

  # Filter actors who are also soccer players and athletes
  ?actor dbo:sport dbr:Soccer ;
         dbo:occupation dbr:Athlete .
}
```",3,6,4,3,1,3,3,71,0,0,7,0,0.0,0
756,51,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the team, that is a soccer club season and a sports season and a sports team season, of the person born, that is a sports manager, on 1968-08-26.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1968-08-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/manager> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry
WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nativePlace ?theodorNativePlace .
  
  # Person born on 1968-08-26 who is a sports manager
  ?person dbp:birthDate ""1968-08-26""^^xsd:date ;
          rdf:type dbo:SportsManager .

  # Manager of the team (soccer club season and sports team season)
  ?teamSeason rdf:type dbo:SoccerClubSeason, dbo:SportsTeamSeason .
  ?person dbo:managerOf ?teamSeason .

  # Linking Theodor Heuss's native place to a country
  ?theodorNativePlace dbo:country ?nativeCountry .
  
  # Ensuring the manager is linked to the team season
  ?teamSeason dbo:participatesIn ?soccerClub .
}
```",5,10,6,3,2,3,3,71,0,0,3,0,0.0,0
531,25,train,"Give me the office of Mariano Rajoy and office of the leader, that is a politician, of Conservative Republican Party (Spain).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Conservative_Republican_Party_(Spain)> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeMarianoRajoy ?officeLeaderConservativeRepublicanParty
WHERE {
  dbr:Mariano_Rajoy dbo:positionHeld ?officeMarianoRajoy .
  
  dbr:People's_Party_(Spain) dbo:leader ?leaderConservativeRepublicanParty .
  
  ?leaderConservativeRepublicanParty dbo:positionHeld ?officeLeaderConservativeRepublicanParty .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
347,8,train,Give me the father of Cecilia Renata of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cecilia_Renata_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father .
  FILTER (lang(?fatherLabel) = ""en"")
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Cecilia Renata of Austria. You can find this by searching for her on DBpedia or using a SPARQL query to identify her resource.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,33,train,Give me the force of the awardee of the award of Quincy Adams Gillmore and war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Quincy_Adams_Gillmore> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  VALUES ?person { 
    dbr:Quincy_A._Gillmore 
    dbr:Amasa_Tracy 
  }
  
  ?person dbo:award ?award .
  ?person dbo:participatedIn ?war .
  ?person dbo:force ?force .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
80,3,train,Give me the author of Smartbomb (book).,SELECT ?result WHERE { <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dcterms:title ""Smartbomb"" .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
816,46,train,"Give me the actor of the movie, that is a work, with the person decedent at Los Angeles and parent of the professional in Photographer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie dbo:type dbr:Film .
  
  ?person dbo:deathPlace dbr:Los_Angeles_County,_California ;
          dbo:child ?photographer .

  ?photographer rdf:type dbo:Photographer ;
                dbp:profession ""Professional"" .

  ?movie dbo:starring ?actor .
  ?actor dbo:parent ?person .
}
```",5,6,6,3,2,3,3,71,0,0,3,0,0.0,0
263,8,train,"Give me the native of the birthplace, that is a region and a country, of William Gayner.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/William_Gayner> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Find William Gayner's birthplace
  dbr:William_Gayner dbo:birthPlace ?birthPlace .

  # Check if the birthplace is both a region and a country
  ?birthPlace rdf:type dbo:Region .
  ?birthPlace rdf:type dbo:Country .

  # Get the native language of the birthplace
  ?birthPlace dbp:nativeLanguage ?nativeLanguage .
}
```",2,4,3,2,1,2,3,28,0,0,935,0,0.0,0
769,9,train,"Give me the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on the birthday of Tony Hollings.",SELECT ?result WHERE { <http://dbpedia.org/resource/Tony_Hollings> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Tony Hollings' birthdate
  VALUES (?hollingsBirthDate) { 
    SELECT ?birthdate WHERE {
      dbr:Tony_Hollings dbo:birthday ?birthdate .
    }
  }

  # Find a person with the specified occupations and same birthdate as Tony Hollings
  ?person a dbo:Athlete ;
          a dbo:SoccerPlayer ;
          a dbo:SportsManager ;
          a dbo:SoccerManager ;
          dbp:birthday ?birthdate .

  FILTER (?birthdate = ?hollingsBirthDate)
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
609,5,train,"Give me the birth place, that is a region and an administrative region, of Paulus Powell.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. <http://dbpedia.org/resource/Paulus_Powell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Paulus Powell""@en .
  
  ?person dbo:birthPlace ?birthPlace .

  ?birthPlace a dbp:Region, dbo:AdministrativeRegion .
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
198,52,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in Charleston, South Carolina and force of the awardee of Gillmore Medal.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v2 <http://dbpedia.org/property/awards> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?recipient dbo:awardedBy dbr:United_States_Congress ;
             dbo:award dbr:Congressional_Gold_Medal .
  
  ?recipient dbo:location dbr:Charleston,_South_Carolina .

  ?gillmoreRecipient dbo:awardedBy dbr:Gillmore_Medal .
  ?gillmoreRecipient dbo:militaryForce ?force .
  
  ?war dbo:participatingMilitaryUnit ?force ;
       dbo:participatingMilitaryUnit ?recipient .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
353,37,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Elvira of Castile and her child who is royalty
  ?elvira a dbo:Monarch ;
          foaf:name ""Elvira of Castile"" ;
          dbo:spouse ?husband .
  
  ?child dbo:parent ?elvira ;
         a dbo:Monarch .

  # Father of the child, who must be royalty and an office holder
  ?father dbo:parent ?child ;
          a dbo:Monarch ;
          dbo:officeHolder ?office .

  # Connection to William I
  ?reference dbr:William_I ;
             dbo:relatedTo ?father .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
311,12,train,Give me the associated musical artist of Filthy Friends and band member of the writer of No Alternative.,SELECT ?result WHERE { <http://dbpedia.org/resource/Filthy_Friends> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Identify the writer of ""No Alternative""
  ?album dbo:composer dbr:Jeff_Beck; 
         rdfs:label ""No Alternative""@en.
  
  # Step 2: Find band members associated with this writer
  ?member dbo:bandMemberOf ?writerBand .
  ?writerBand dbo:leadArtist dbr:Jeff_Beck .

  # Step 3: Determine the musical artist known as Filthy Friends and identify their member
  ?filthyFriendsAlbum dbo:artist dbr:Filthy_Friends;
                     dbo:member ?associatedMember.
  
  FILTER (?associatedMember = ?member)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
103,38,train,Give me the professional in the alter ego of The Shadow and professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?shadowProfession ?sinhaProfession
WHERE {
  # Find the professional occupation of The Shadow's alter ego
  OPTIONAL {
    dbr:The_Shadow dbo:profession ?shadowProfession .
  }
  
  # Find the professional occupation of Shatrughan Sinha
  OPTIONAL {
    dbr:Shatrughan_Sinha dbo:profession ?sinhaProfession .
  }
}
```",4,4,5,2,2,3,3,71,0,0,39640,0,0.0,0
198,49,train,"Give me the entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05 and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplaceEntity WHERE {
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) = 1850 && MONTH(?deathDate) = 8 && DAY(?deathDate) = 5)
  
  ?person dbo:honoraryTitle dbr:Medal_of_Honor .
  
  ?award dbo:recipient ?person ;
         dbo:war ?war .
  
  ?person dbp:birthPlace ?birthplace .
  
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States .

  ?birthplaceEntity dbo:location ?birthplace .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
375,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Japan .
}
```",1,1,2,1,1,2,3,28,0,3374,104,0.0,0.0,0
311,7,train,"Give me the associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Get R.E.M.'s associated musical artist
  ?rem a dbo:Band ;
      dbo:associatedMusicalArtist ?firstAssociatedArtist .

  # Step 2: Get the associated musical artist of that first associated artist
  ?firstAssociatedArtist dbo:associatedMusicalArtist ?finalArtist .
}
```",2,3,3,2,1,3,2,20,28,22442,0,0.0012461059190031153,1.0,0.002489110143123833
782,50,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist ?band 
WHERE {
  # Find Nicholas Michael Curran by birth date and check if he is a musical artist
  ?person dbo:birthDate ""1945-03-30""^^xsd:date ;
          rdfs:label ""Nicholas Michael Curran""@en .
  
  OPTIONAL { ?person dbo:musicArtist dbr:Motörhead . } # Example association, replace with actual if known

  # Find associated musical artists
  OPTIONAL {
    ?association dbo:associatedBandMember ?person ;
                 dbo:band dbr:Motörhead ; # Replace with the band he is associated with
                 dbo:musicalArtist ?artist .
    ?artist rdfs:label ?artistLabel .
  }

  # Find bands of any band member who is also a musical artist
  OPTIONAL {
    ?member dbo:associatedBandMember ?person ;
            dbo:musicalArtist ?bandMemberArtist .
    ?bandMemberArtist dbo:band ?band .
    ?band rdfs:label ?bandLabel .
  }
}
ORDER BY ?artistLabel ?bandLabel",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
816,40,train,"Give me the parent of Amy Arbus and parent of Doon Arbus and actor of the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentAmy ?parentDoon ?actor ?movie WHERE {
  # Find parents of Amy Arbus
  OPTIONAL { 
    dbr:Amy_Arbus dbo:parent ?parentAmy .
  }
  
  # Find parents of Doon Arbus
  OPTIONAL { 
    dbr:Doon_Arbus dbo:parent ?parentDoon .
  }

  # Find movies with actors connected to a person decedent in Los Angeles
  ?movie dbo:starring ?actor .
  ?actor dbo:birthPlace ?place .
  FILTER (CONTAINS(LCASE(?place), ""los angeles""))
  
  OPTIONAL {
    ?person dbo:deathPlace dbr:Los_Angeles .
    ?actor dbo:spouse|dbo:childOf ?person .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
37,8,train,"Give me the birthplace of Bob Crewe and birthplace of the work, that is an artist and a musical artist, of Ethan Iverson.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Ethan_Iverson> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Bob_Crewe> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bobCreweBirthplace ?workBirthplace WHERE {
  # Get Bob Crewe's birthplace
  OPTIONAL {
    dbr:Bob_Crewe dbo:birthPlace ?bobCreweBirthplace .
  }

  # Get a work associated with Ethan Iverson and its birthplace
  OPTIONAL {
    ?ethanIversonWork dbo:artist dbr:Ethan_Iverson ;
                      dbo:workExample ?workInstance .
    ?workInstance dbo:birthPlace ?workBirthplace .
  }
}
```",3,5,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
203,33,train,"Give me the military force of the war, that is a military conflict and an event, of the reference to William Bayne and commander in French campaign in Egypt and Syria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William Bayne""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the event of the French campaign in Egypt and Syria
  dbr:French_campaign_in_Egypt_and_Syria dbo:partOf ?war .

  # Find military forces involved in this war
  ?war dbo:militaryForce ?militaryForce .
  
  OPTIONAL {
    # Optionally, find William Bayne's involvement if needed for context
    ?person dbo:reference dbr:William_Bayne ;
            dbo:commanderIn ?campaign .
    
    FILTER(?campaign = dbr:French_campaign_in_Egypt_and_Syria)
  }
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
293,47,train,"Give me the party member of the ruling party in Central, Louisiana and spouse of the actor of the product, that is a film, of Nat Levine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/party> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?partyMember WHERE {
  # Step 1: Find films associated with Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Step 2: Identify an actor from the film
  ?film dbo:starring ?actor .

  # Step 3: Determine the spouse of this actor
  ?actor foaf:mbox ?actorEmail .
  ?spouse foaf:mbox ?actorEmail ;
          foaf:name ?spouseName .

  # Step 4: Check if the spouse is a party member in Central, Louisiana
  OPTIONAL { 
    ?partyMember dbo:memberOf ?politicalParty ;
                 dbo:residence dbr:Central,_Louisiana .
    FILTER(?spouse = ?partyMember)
  }
  
  # Ensure we have a valid result
  FILTER(BOUND(?partyMember))
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
595,46,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://dbpedia.org/property/author> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find books authored by Hillary Clinton
  ?hbook dbo:author dbr:Hillary_Clinton ;
         a dbo:Book .

  # Find books authored by Bill Clinton
  ?bbook dbo:author ?commonAuthor ;
         a dbo:Book .

  # Ensure the common author is also an author of Hillary's book
  ?commonAuthor dbo:author ?hbook .

  # The common author should be a politician and office holder
  ?commonAuthor a dbo:Politician .
  ?commonAuthor dbo:officeHolder true .

  # Find spouse who is a politician and office holder
  ?commonAuthor dbo:spouse ?spouse .
  ?spouse a dbo:Politician ;
          dbo:officeHolder true .
}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
628,30,train,"Give me the person born as Ackquille Jean Pollard and band member of Uncle Murda and native of the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.","SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/birthName> ""Ackquille Jean Pollard""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?bandMember ?nativeRegion WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""2 Chainz"" ;
          dbo:birthName ""Ackquille Jean Pollard"" .
  
  OPTIONAL { 
    ?person dbo:memberOfBand dbr:Uncle_Murda . 
  }
  
  OPTIONAL {
    ?person dbo:nativePlace ?nativeRegion .
    FILTER (CONTAINS(LCASE(STR(?nativeRegion)), ""puerto rico""))
  }
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
203,14,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find Robert Calder
  ?calder a dbo:Person ;
          foaf:name ""Robert Calder""@en .

  # Find events involving him that are both military and societal
  ?event dbo:agent ?calder ;
         a ?eventType .
  
  FILTER (
    (EXISTS { ?event a dbo:MilitaryEvent } && 
     EXISTS { ?event a dbo:SocietalEvent })
  )

  # Extract the military force involved in these events
  OPTIONAL {
    ?event dbo:militaryForce ?militaryForce .
  }
}
```",2,4,3,2,1,3,3,71,0,0,34,0,0.0,0
595,55,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and commander in the war, that is a disease and a societal event, of United States Navy and author of the work, that is a written work and a book and a work, of Bill Clinton.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/property/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?author dbo:birthName ""William Jefferson Blythe III""@en .
  ?author dbo:spouse ?spouse .
  ?spouse a dbo:Politician ;
          dbo:officeHolder true .
}
```

This query selects the spouse of Bill Clinton who is also identified as a politician and office holder.",6,13,7,2,3,3,3,71,0,0,1,0,0.0,0
158,24,train,"Give me the native of the administration, that is a country, of Nicholas II of Russia and native of the administration of Alexander II, Grand Duke of Finland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v0 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Nicholas_II_of_Russia> . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Alexander_II,_Grand_Duke_of_Finland> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfNicholasII ?nativeOfAlexanderII
WHERE {
  # Nicholas II of Russia
  dbr:Nicholas_II_of_Russia dbo:nativePlace ?nativeOfNicholasII .

  # Alexander II, Grand Duke of Finland
  dbr:Alexander_II,_Grand_Duke_of_Finland dbo:nativePlace ?nativeOfAlexanderII .
}
```",4,5,5,2,2,2,3,28,0,0,126,0,0.0,0
119,14,train,"Give me the entity in the residence, that is a country, of the native, that is Polish and an athlete, of Łódź.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Poland>. ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/residence> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Łódź> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:nationality dbr:Poland ;
          dbo:sport dbr:Athletics ; # Assuming Athletics as a placeholder for sports
          dbo:birthPlace dbr:Łódź .
  
  ?person dbp:residenceCountry ?country .

  FILTER (isLiteral(?entity))
  BIND(?person AS ?entity)
}
```

This query does the following:
- Filters individuals who are Polish (`dbo:nationality`) and involved in sports (`dbo:sport`).
- Ensures they were born in Łódź (`dbo:birthPlace`).
- Retrieves their country of residence (`dbp:residenceCountry`).

Note: The `dbo:sport` property might need to be adjusted based on the specific sport or a more general category if available.",3,6,4,3,1,3,2,20,0,0,108,0,0.0,0
668,25,train,Give me the person born as the birth name of Joey B and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . <http://dbpedia.org/resource/Joey_B> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person WHERE {
  ?person foaf:givenName ""Joey"" .
  ?person foaf:surname ""B"" .
  ?person dbo:profession dbr:Musician .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
737,38,train,"Give me the child of the child of Duke Philipp of Württemberg and child of the child, that is a royalty, of Archduke Charles Louis of Austria.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchildOfDukePhilipp ?royalGrandchildOfArchdukeCharlesLouis
WHERE {
  # Duke Philipp of Württemberg's grandchildren
  ?parent1 dbo:spouse ?dukePhilipp .
  ?dukePhilipp dbp:name ""Philipp of Württemberg"" .
  ?parent1 dbo:child ?childOfDukePhilipp .
  ?childOfDukePhilipp dbo:child ?grandchildOfDukePhilipp .

  # Archduke Charles Louis's grandchildren who are royalty
  ?parent2 dbo:spouse ?archdukeCharlesLouis .
  ?archdukeCharlesLouis dbp:name ""Charles Louis, Archduke of Austria"" .
  ?parent2 dbo:child ?childOfArchdukeCharlesLouis .
  ?childOfArchdukeCharlesLouis dbo:child ?grandchildOfArchdukeCharlesLouis .
  ?grandchildOfArchdukeCharlesLouis a dbo:RoyalFamilyMember .

}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
347,16,train,Give me the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Find Archduke Charles Joseph of Austria's parent(s)
  dbr:Archduke_Charles_Joseph_of_Austria dbo:parent ?parent .

  # Step 2: Find the children of that parent
  ?parent dbo:child ?child .
}
```

This query assumes that `dbo:parent` and `dbo:child` are the correct properties used in DBpedia to represent familial relationships. Adjustments might be necessary if different properties are used.",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
871,57,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v3 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby's child who is a politician
  ?child1 dbo:parent ?frederickStanley .
  ?frederickStanley rdfs:label ""Frederick Stanley, 16th Earl of Derby""@en .
  ?child1 dbo:occupation ?politicianOccupation .
  FILTER(CONTAINS(LCASE(?politicianOccupation), ""politician""))

  # Edward Stanley, 17th Earl of Derby's parent who is a politician and office holder
  ?parent2 dbo:child ?edwardStanley .
  ?edwardStanley rdfs:label ""Edward Stanley, 17th Earl of Derby""@en .
  ?parent2 dbo:occupation ?officeHolderOccupation .
  FILTER(CONTAINS(LCASE(?officeHolderOccupation), ""politician"") && CONTAINS(LCASE(?officeHolderOccupation), ""office holder""))

  # Victor Stanley's parent
  ?victorParent dbo:child ?victorStanley .
  ?victorStanley rdfs:label ""Victor Stanley (Royal Navy officer)""@en .

  # Linking the relationships
  ?parent2 dbp:spouse ?father .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
392,4,train,Give me the member of 1. FC Magdeburg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?playerLabel WHERE {
  ?team rdf:type dbo:SportsTeam .
  ?team rdfs:label ""1. FC Magdeburg""@en .
  ?team dbo:member ?player .
  ?player rdfs:label ?playerLabel .
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
293,33,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v0 <http://dbpedia.org/property/starring> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse WHERE {
  # Step 1: Find films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .

  # Step 2: Find actors of these films
  ?film dbo:starring ?actor .

  # Step 3: Check if the actor is a member of the Republican Party (United States)
  ?actor dbp:politicalAffiliation dbr:Republican_Party_(United_States) .

  # Step 4: Get the spouse of this actor
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
198,30,train,"Give me the force of Quincy Adams Gillmore and war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreForce ?tracyForce ?lewisBirthplace
WHERE {
  # Quincy Adams Gillmore's military rank or force
  OPTIONAL { 
    dbr:Quincy_Adams_Gillmore dbo:militaryRank ?gillmoreForce .
  }
  
  # Amasa Tracy's military rank or force
  OPTIONAL { 
    dbr:Amasa_Tracy dbo:militaryRank ?tracyForce .
  }

  # Henry Clay Lewis's birthplace, which is a settlement and American
  {
    dbr:Henry_Clay_Lewis dbo:birthPlace ?lewisBirthplace .
    ?lewisBirthplace rdf:type dbo:Settlement .
    ?lewisBirthplace dbo:country dbr:United_States .
  }
}
```",4,6,5,2,3,3,3,71,0,1,1,0.0,0.0,0
198,32,train,Give me the force of the awardee of Gillmore Medal and war of the awardee of Medal of Honor.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?result <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?recipient ?force WHERE {
  # Find individuals who received the Gillmore Medal
  ?gillmoreRecipient dbo:award dbr:Gillmore_Medal .
  
  # Ensure these individuals also received the Medal of Honor
  ?medalOfHonorRecipient dbo:award dbr:Medal_of_Honor .

  # Match recipients of both medals
  FILTER (?gillmoreRecipient = ?medalOfHonorRecipient)

  # Retrieve the military force associated with these recipients
  ?recipient dbo:militaryService ?force .
  
  # Ensure the recipient is one of those who received both medals
  FILTER (?recipient = ?gillmoreRecipient)
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
943,17,train,"Who is the father, that is a royalty and an office holder, of the child of Baeda Maryam I?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Baeda Maryam I
  VALUES ?baedaMaryamI { dbr:Baeda_Maryam_I }

  # Step 2: Find his children
  ?child dbo:parent ?baedaMaryamI .
  
  # Step 3: For each child, identify their father
  ?child dbo:father ?father .

  # Step 4: Filter fathers who are royalty and have held an office
  ?father a dbo:Monarch ; 
          dbo:officeHolderOf ?office .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
668,18,train,Give me the professional in Musician and person born as Darryl Paa Kwesi Bannerman-Martin and associated musical artist of $pacely.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?musician ?birthName ?associatedArtist WHERE {
  VALUES ?musician { dbr:D'banj }
  
  ?musician dbo:profession dbr:Musician .
  ?musician foaf:name ""Darryl Paa Kwesi Bannerman-Martin""@en .

  OPTIONAL {
    ?association dbo:artist dbr:$pacely ;
                 dbo:associatedMusicalArtist ?musician .
    BIND(dbr:$pacely AS ?associatedArtist)
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
769,17,train,"Give me the player in Ye Jia and player in the manager, that is a sports manager and a soccer manager, of the reference, that is an organisation and a sports club and a sports team and a soccer club, to Hong Kong C.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Hong Kong C""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?manager WHERE {
  # Identify Hong Kong C as an organization, sports club, team, and soccer club
  VALUES ?club { dbr:Hong_Kong_C }

  # Find Ye Jia as a player in the club
  ?player dbo:team ?club .
  ?player rdfs:label ""Ye Jia""@en .

  # Find the manager who is both a sports manager and a soccer manager for the club
  ?manager dbo:worksFor ?club ;
           rdf:type dbo:SportsManager, dbo:SoccerManager .
}
```",4,10,5,3,2,3,2,20,0,0,2,0,0.0,0
557,46,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a work, of Cora Sue Collins.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v4 <http://dbpedia.org/ontology/producer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?author rdfs:label ""Kent Allard""@en .
  ?work dbo:creator ?author ;
        dbo:character ?fictionalCharacter .
  ?fictionalCharacter rdfs:label ?alterEgoLabel .
  ?collaboration dbo:producer ?author ;
                 dbo:claimToFame ?work .
  ?collaboration dbo:subject dbr:Cora_Sue_Collins .
  
  FILTER (lang(?alterEgoLabel) = ""en"")
}
```

This query attempts to:

- Identify an author named Kent Allard.
- Find works created by him that involve a fictional character.
- Determine the alter ego of that fictional character.
- Link this work to Cora Sue Collins through a collaboration or production.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
687,24,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v2 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player WHERE {
  # Find the TV show resource for ""All or Nothing: Manchester City""
  ?show dcterms:title ""All or Nothing: Manchester City""@en .
  
  # Identify players who are both actors and soccer players/athletes
  ?player dbo:profession dbo:Actor ;
          dbo:occupation dbo:SoccerPlayer ;
          dbo:occupation dbo:Athlete .

  # Ensure the player is associated with the TV show
  ?show dbo:castMember ?player .

  # Find association with Pablo Aimar
  ?pablo dcterms:title ""Pablo Aimar""@en .
  ?team dbo:member ?pablo ;
        dbo:member ?player .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
398,14,train,Give me the player in the writer of the work of Aleksandr Filimonov.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://dbpedia.org/property/writer> ?v0 . ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Aleksandr_Filimonov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find a work by Aleksandr Filimonov
  ?work dbo:author dbr:Aleksandr_Filimonov .
  
  # Find the writer of that work (if any)
  OPTIONAL { 
    ?work dbo:writer ?writer .
    
    # Find players associated with the writer
    ?player dbo:worksFor ?writer .
  }
}
```",3,3,4,3,1,3,2,20,0,0,17,0,0.0,0
140,15,train,"Give me the commander in the war, that is a societal event, of the military force of Pickett's Charge and party member of Republican Party (United States).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?charge dbo:event = dbr:Battle_of_Gettysburg .
  ?charge dbo:partOfEvent = dbr:Picketts_Charge .

  ?commander dbo:commandedMilitaryForce ?force ;
             dbo:memberParty dbr:Republican_Party_(United_States) .

  ?force dbo:involvedIn ?charge .
}
```",4,5,5,3,2,3,2,20,0,0,4,0,0.0,0
557,19,train,Give me the producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?producer ?alterEgo
WHERE {
  # Find the producer of ""The Adventures of Tom Sawyer"" (1938 film)
  ?film a dbo:Film ;
        foaf:name ""The Adventures of Tom Sawyer""@en .
  
  FILTER(YEAR(?film) = 1938)

  ?film dbo:producer ?producer .

  # Find The Shadow's alter ego
  ?shadow a dbo:Character ;
          foaf:name ""The Shadow""@en .
  
  ?shadow dbo:alterEgo ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
557,48,train,"Give me the professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print) and producer of the claim to fame, that is a movie and a work, of Janet Gaynor.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?movie WHERE {
  # Find the professional role of Kent Allard
  dbr:Kent_Allard dbo:profession ?professionalRole .
  
  # Find a movie or work associated with Janet Gaynor
  dbr:Janet_Gaynor dbo:film ?movie .
  
  # Assuming there's a connection between the professional role and the movie
  ?professionalRole dbo:associatedWith ?movie .
}
```

This query assumes that:
- There is an entry for ""Kent Allard"" with a profession.
- Janet Gaynor has associated films or works.
- There is some association between Kent Allard's profession and Janet Gaynor's work.",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
595,44,train,"Give me the author of the work, that is a written work and a book and a work, of Bill Clinton and commander in the war, that is a disease and a societal event, of United States Navy and spouse of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v4 <http://dbpedia.org/property/author> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?work WHERE {
  ?work dbo:author dbr:Bill_Clinton ;
        a dbo:Book .
  OPTIONAL { ?work rdfs:label ?title . FILTER (lang(?title) = 'en') }
  ?author foaf:name ""Bill Clinton""@en .
}
```",5,10,6,2,3,3,3,71,0,8,1,0.0,0.0,0
198,1,train,Give me the force of Quincy Adams Gillmore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rank WHERE {
  VALUES ?gillmore { dbr:Quincy_A._Gillmore }
  ?gillmore dbo:militaryRank ?rank .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
557,53,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and producer of The Adventures of Tom Sawyer (1938 film) and professional in the alter ego of the reference, that is a fictional character, to Kent Allard (print).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Kent Allard (print)""@en . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Janet Gaynor's claim to fame
  VALUES (?gaynorWork) { 
    dbr:Seventh_Heaven_(1927_film)
  }
  
  # Producer of ""The Adventures of Tom Sawyer"" (1938 film)
  ?tomSawyerFilm dbo:producer ?producer .
  FILTER(STRSTARTS(STR(?tomSawyerFilm), STR(dbr:The_Adventures_of_Tom_Sawyer_(1938_film))))

  # Professional in the alter ego's reference
  VALUES (?supermanWork) {
    dbr:Superman_(1978_film)
    dbr:Superman_(1987_film)
    dbr:Superman_(2006_film)
  }
  
  ?supermanWork dbo:producer ?producer .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
609,23,train,Give me the birth place of the awardee of the award of Vince Gilligan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?birthPlace WHERE {
  # Find the award Vince Gilligan received
  dbr:Vince_Gilligan dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series .

  # Find other awardees of this award
  ?award dbr:Primetime_Emmy_Award_for_Outstanding_Drama_Series .
  ?award dbo:recipient ?awardee .

  # Get the birthplace of these awardees
  ?awardee dbo:birthPlace ?birthPlace .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
782,37,train,"Give me the associated musical artist of Nick Curran and band of the band member of the person born, that is a musical artist, on 1945-03-30.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1945-03-30""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?bandMember ?personBorn1945 WHERE {
  # Find Nick Curran as a musical artist
  dbr:Nick_Curran dbo:musicalArtistOf ?associatedArtist .

  OPTIONAL {
    # Check if the associated artist is also a band member of another artist
    ?associatedArtist dbo:member ?bandMember .
  }

  OPTIONAL {
    # Find any person born on March 30, 1945 who is a musical artist
    ?personBorn1945 dbo:birthday ""1945-03-30""^^xsd:date ;
                   rdf:type dbo:MusicalArtist .

    # Check if this person is the same as an associated artist or band member
    FILTER (?associatedArtist = ?personBorn1945 || ?bandMember = ?personBorn1945)
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
943,33,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Find Lamont Cranston and his alter ego
  ?lamontCranston a dbo:Agent ;
                  foaf:name ""Lamont Cranston"" ;
                  dbo:aliasName ?shadowAlias .
  
  OPTIONAL { ?shadowAlias rdfs:label ?alterEgo . FILTER (lang(?alterEgo) = 'en') }

  # Find Dawit I and his child
  ?dawitI a dbo:Person ;
          foaf:name ""Dawit I"" .

  ?child dbo:parent ?dawitI .
  
  # Match the alter ego with the child of Dawit I
  FILTER (?alterEgo = ?child)
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
687,14,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1979-11-03""^^xsd:date ;
          dbo:managerOf ?team .
  
  OPTIONAL { 
    ?person dbo:sportManagerOf ?team .
  }
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and properties.
- **SELECT ?team**: We are interested in retrieving the team(s) associated with the person.
- **?person a dbo:SoccerPlayer**: Ensure the individual is classified as a soccer player.
- **dbo:birthDate ""1979-11-03""^^xsd:date**: Filter by birthdate.
- **dbo:managerOf ?team**: Retrieve teams where the person is listed as a manager.
- **OPTIONAL { ?person dbo:sportManagerOf ?team }**: Optionally include teams related to their role as a sports manager.

This query assumes that DBpedia has structured data linking individuals to their roles and associated teams. Adjustments might be necessary based on actual schema details in DBpedia.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
941,2,train,"Give me the child of Ferdinand Albert II, Duke of Brunswick-Lüneburg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""Ferdinand_Albert_II,_Duke_of_Brunswick-Lüneburg"")
  
  OPTIONAL { ?person dbo:child ?child . }
}
```

This query looks for the `dbo:child` property of Ferdinand Albert II, Duke of Brunswick-Lüneburg.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
859,11,train,"Give me the associated musical artist of Phantomsmasher and band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Phantomsmasher> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?member ?band 
WHERE {
  # Step 1: Find the artist associated with ""Phantomsmasher""
  ?phantomsmasher dbo:musicalArtist dbr:Phantomsmasher .
  
  # Step 2: Get band members of this artist
  ?phantomsmasher dbo:bandMember ?member .

  # Step 3: Ensure these members are part of a band and group that is an organization
  ?member dbo:associatedBand ?band .
  ?band rdf:type dbo:MusicalGroup ;
        dbo:genre dbr:Burnt_by_the_Sun_(band) ;
        dbo:organization true .

}
```

This query does the following:
- Identifies ""Phantomsmasher"" as a musical artist.
- Retrieves band members associated with this artist.
- Ensures these members are part of a band that is both a group and an organization, specifically related to ""Burnt by the Sun (band).""",3,6,4,2,2,3,2,20,0,0,5,0,0.0,0
756,52,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Theodor Heuss's native country
  dbr:Theodor_Heuss dbo:nationality ?person1 .
  ?person1 dbo:nativePlace ?place1 .
  ?place1 dbo:country ?nativeCountry .

  # Manager of VfL Bochum in the successor season (2007–08)
  OPTIONAL {
    dbr:VfL_Bochum_2006%E2%80%9307_season dbo:succeededBy ?successorSeason .
    ?successorSeason dbo:manager ?manager1 .
  }

  # Manager of SBV Vitesse in the 2020–21 season
  OPTIONAL {
    dbr:SBV_Vitesse_2020%E2%80%9321_season dbo:manager ?manager2 .
  }

  # Linking managers to find a common one
  FILTER (?manager1 = ?manager2)

  # Get native country of the manager
  ?manager1 dbo:nationality ?person2 .
  ?person2 dbo:nativePlace ?place2 .
  ?place2 dbo:country ?nativeCountry .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
706,16,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of the actor of Akaler Shandhaney.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Akaler_Shandhaney> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthplaceBismillahKhan ?birthplaceUttamKumar WHERE {
  # Birthplace of Ustad Bismillah Khan (Sangeet Natak Akademi Fellowship awardee)
  wd:Q123456 wdt:P19 ?birthplaceBismillahKhan .
  
  # Birthplace of Uttam Kumar (actor in ""Akaler Shandhaney"")
  wd:Q654321 wdt:P19 ?birthplaceUttamKumar .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Ustad Bismillah Khan and `wd:Q654321` with the identifier for Uttam Kumar. You can find these identifiers by searching their names on DBpedia.",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
203,32,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find wars involving William Bayne
  ?bayneEvent a dbo:MilitaryConflict ;
              dbo:agent dbr:William_Bayne_(Royal_Navy_officer) .
  
  # Find wars involving the 30th (Cambridgeshire) Regiment of Foot
  ?regimentEvent a dbo:MilitaryConflict ;
                 dbo:agent dbr:30th_(Cambridgeshire)_Regiment_of_Foot .

  # Ensure both entities were involved in the same military conflict
  FILTER (?bayneEvent = ?regimentEvent)

  # Retrieve the military force associated with these events
  ?bayneEvent dbo:militaryForce ?militaryForce .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
419,4,train,Give me the alma mater of Chennupati Jagadish and entity in Andhra Pradesh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chennupati_Jagadish> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Andhra_Pradesh> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entityInAndhraPradesh WHERE {
  # Find alma mater of Chennupati Jagadish
  dbr:Chennupati_Jagadish dbo:almaMater ?almaMater .

  # Find an entity in Andhra Pradesh
  ?entityInAndhraPradesh a dbo:Place .
  ?entityInAndhraPradesh dbo:country dbr:India .
  ?entityInAndhraPradesh dbo:stateOrProvince dbr:Andhra_Pradesh .
}
```",2,2,3,1,2,2,2,9,0,0,2,0,0.0,0
103,8,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  wd:Q1234568 wdt:P1700 ?alterEgo .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"". You can find this by searching DBpedia or using a SPARQL endpoint to look up the correct QID.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
270,2,train,"Who is the person born, that is a politician, as Ada Jane Low?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/birthName> ""Ada Jane Low""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Ada Jane Low""@en .
  ?person dbo:occupation dbo:Politician .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
687,54,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of Pablo Aimar.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . ?v3 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?person a dbo:Athlete ;
          dbo:birthDate ""1955-02-22""^^xsd:date ;
          dbo:sportTeam ?team .
  
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?team ;
        a dbo:Film .

  ?team dbp:name ""Pablo Aimar""@en .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
557,54,train,"Give me the producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?producer WHERE {
  ?film dbpedia-owl:director ?director .
  ?film dbpedia-owl:producer ?producer .
  FILTER(?film = dbpedia:Gone_with_the_Wind_(1939_film))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
19,2,train,Give me the birth name of John Boxer.,SELECT ?result WHERE { <http://dbpedia.org/resource/John_Boxer> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 foaf:name ""John Boxer""@en .
  OPTIONAL { wd:Q123456 schema:givenName ?birthName . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for John Boxer.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
609,7,train,"Give me the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""El Deafo""@en .
  FILTER NOT EXISTS { ?author dbo:nationality ?nationality . FILTER (?nationality != dbr:United_States) }
}
```",1,2,2,1,1,3,3,71,0,1,1,0.0,0.0,0
213,16,train,"Give me the country of the work of Lao She and birth place of the child, that is a politician, of Chiang Ching-kuo.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Lao_She> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Chiang_Ching-kuo> . ?v3 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?countryOfWork ?birthPlaceOfChild
WHERE {
  # Lao She's work and its country
  dbr:Lao_She dbo:nationality dbr:China .
  OPTIONAL { 
    ?work dbo:author dbr:Lao_She .
    ?work dbo:location dbr:China . # Assuming the work is associated with China
    BIND(dbr:China AS ?countryOfWork)
  }

  # Chiang Ching-kuo's child who is a politician
  dbr:Chiang_Ching-kuo dbo:child ?child .
  ?child rdf:type dbo:Politician .
  OPTIONAL {
    ?child dbo:birthPlace ?birthPlace .
    BIND(?birthPlace AS ?birthPlaceOfChild)
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
246,16,train,"Give me the parent of the child, that is a royalty, of Prince Faisal bin Hussein and parent of the child, that is a royalty, of Prince Faisal bin Hussein.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Faisal_bin_Hussein> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Find Prince Faisal bin Hussein
  ?person a dbo:Person ;
          dbp:name ""Faisal bin Hussein""@en .
  
  # Identify his children who are royalty
  ?child dbo:spouseOrPartnerOf ?person ;
         a dbo:Royalty .

  # Find the parent of this child (who is also royalty)
  ?parent dbo:child ?child .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
345,6,train,Give me the region of the time zone of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Japan> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
SELECT ?region WHERE {
  wd:Q12219 wdt:P421 ?timeZone.
  ?timeZone wdt:P131* ?region.
}
```",2,2,3,2,1,2,2,9,0,0,2255,0,0.0,0
687,61,train,"Give me the player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v5 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/coach> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Find actors in those films who are also soccer players and athletes
  ?film dbo:starring ?actor .
  ?actor dbo:occupation dbr:Soccer_player ;
         dbo:occupation dbr:Athlete .

  # Find the person born on Marcelo Sarmiento's birthday who is a soccer player and manager
  ?person dbp:birthday ?birthday ;
          dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .
  
  # Get Marcelo Sarmiento's birthday
  ?marceloSarmiento dbp:birthday ?birthday ;
                   rdfs:label ""Marcelo Sarmiento""@en .

}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
293,38,train,"Give me the person born as the birth name of Ann Sothern and spouse of the actor of 1,000 Dollars a Minute.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find Ann Sothern's birth name
  dbr:Ann_Sothern dbo:birthName ?birthName .

  # Find the actor of ""1,000 Dollars a Minute""
  dbr:""1,_000_Dollars_a_Minute"" dbo:actor ?actor .

  # Find the spouse of that actor
  ?actor foaf:mbox ?actorEmail .
  ?spouse foaf:mbox ?actorEmail .
  
  FILTER(?birthName = ?actor)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
353,10,train,"Give me the child of Elvira of Castile, Queen of Sicily and child of Roger II of Sicily.","SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Elvira of Castile, Queen of Sicily
  ?elvira dbo:spouse dbr:Roger_II_of_Sicily .
  ?elvira dbo:child ?child .

  # Ensure the child is also a child of Roger II of Sicily
  OPTIONAL { ?roger dbo:spouse ?elvira . }
  ?roger dbo:child ?child .

  FILTER (?elvira = dbr:Elvira_of_Castile)
  FILTER (?roger = dbr:Roger_II_of_Sicily)
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
103,60,train,"Give me the professional in the alter ego of the series, that is a comics character, of The Shadow (video game) and actor of the movie, that is a television show, with the person born as Richard Grant Esterhuysen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/birthName> ""Richard Grant Esterhuysen""@en . <http://dbpedia.org/resource/The_Shadow_(video_game)> <http://dbpedia.org/ontology/series> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # The Shadow in comics
  dbr:The_Shadow (dbo:alterEgo) ?comicsCharacter .

  # Actor who played this character and starred in a TV show
  ?movie dbo:starring ?actor .
  ?actor dbo:birthName ""Richard Grant Esterhuysen"" .
  ?tvShow dbo:starring ?actor .

  # Ensure the actor is linked to both the movie and TV show
  ?movie dbr:The_Shadow .
  ?tvShow ?p ?o .
}
```",6,8,7,3,2,3,3,71,0,0,13,0,0.0,0
557,21,train,Give me the professional in the alter ego of The Shadow and producer of A Star Is Born (1937 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the alter ego of The Shadow
  OPTIONAL { 
    ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
    ?shadowAlterEgo rdfs:label ""Lamont Cranston""@en .
  }
  
  # Find the producer of A Star Is Born (1937)
  OPTIONAL {
    ?producer dbo:produced dbr:A_Star_Is_Born_(1937_film) .
    ?producer rdfs:label ""David O. Selznick""@en .
  }

  # Check if there is a single person who fits both roles
  FILTER (?shadowAlterEgo = ?producer)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,29,train,"Give me the child of Roger II of Sicily and child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Roger II of Sicily and Elvira of Castile's child
  ?roger2 dbo:spouse ?elvira .
  ?elvira dbo:child ?child .

  # Ensure the child is also a child of Roger II
  ?roger2 dbo:child ?child .

  # The child must be the father of William I of Sicily
  ?child dbo:child dbr:William_I_of_Sicily .

  # Check if the person holds a royal title
  ?child a dbo:Monarch .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
742,4,train,"Give me the region, that is a settlement, of Eastern European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Eastern_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?timeZone dbo:timezoneName ""Eastern European Time"" .
  ?region dbo:timeZone ?timeZone .
  ?region a dbo:PopulatedPlace .
  BIND(?region AS ?settlement)
}
```

This query does the following:
- It looks for entities that have a `timezoneName` of ""Eastern European Time"".
- It then finds regions associated with this time zone.
- Filters these regions to ensure they are populated places (i.e., settlements).
- Returns the settlement names.",1,2,2,1,1,3,2,20,0,0,20665,0,0.0,0
198,60,train,"Give me the war of the awardee of the show, that is an award, of United States Congress and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v2 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  ?person dbo:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace ?settlement .
  ?settlement a dbo:Settlement .
  
  ?award dbo:awardee ?person ;
         dbo:givenBy dbr:United_States_Congress ;
         rdf:type dbo:Award .

  ?war dbo:relatedAward ?award .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
347,31,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander dbo:commandedMilitaryForce dbr:Algerian_War .
  ?commander dbo:fatherOf dbr:Eleonore_of_Austria_? .
  ?commander dbo:participatedInEvent dbr:The_Great_War .
}
```

This query assumes that:
- `dbo:commandedMilitaryForce` is used to link a person to the Algerian War.
- `dbo:fatherOf` links a person to Eleonore of Austria.
- `dbo:participatedInEvent` connects a person to The Great War, which fits the societal event, event, and television show criteria.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
633,11,train,"Give me the parent of Francis I, Duke of Lorraine and spouse of the parent, that is a royalty and a noble, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Noble>. <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent ?spouse WHERE {
  # Identify the parent of Francis I, Duke of Lorraine
  ?francisI dbo:parent ?parent .
  
  FILTER(STRSTARTS(STR(?francisI), ""http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine""))

  # Find the spouse of this parent who is royalty and noble
  ?parent dbo:spouse ?spouse .

  # Ensure the spouse is both a royalty and a noble
  ?spouse rdf:type ?type1 .
  ?spouse rdf:type ?type2 .
  
  FILTER(STRSTARTS(STR(?type1), ""http://dbpedia.org/ontology/Royal"") && 
         STRSTARTS(STR(?type2), ""http://dbpedia.org/ontology/Noble""))
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
386,7,train,Give me the war of Alexander Lvovich Davydov and entity in Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find Alexander Lvovich Davydov
  ?davydov a dbo:Person ;
           foaf:name ""Alexander Lvovich Davydov""@en .
  
  # Look for wars he was involved in
  ?davydov dbo:militaryConflict ?war .

  # Ensure the war is related to the Russian Empire
  ?war dbo:country dbr:Russian_Empire .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
943,7,train,Who is the child of Baeda Maryam I?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Baeda_Maryam_I> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?baedaMaryamI .
  ?baedaMaryamI dbo:child ?child .
  FILTER (str(?baedaMaryamI) = ""Baeda_Maryam_I"")
}
```

This query assumes that Baeda Maryam I is linked to a spouse and children through the `dbo:spouse` and `dbo:child` properties. Adjustments might be necessary if the data model differs.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
23,15,train,"Give me the party of Gustavo Petro and party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gustavoPetroParty ?royBarrerasParty WHERE {
  # Gustavo Petro's political party
  OPTIONAL { 
    dbr:Gustavo_Petro dbo:partyAffiliation ?gustavoPetroParty .
  }
  
  # Roy Leonardo Barreras Montealegre's political party
  OPTIONAL { 
    dbr:Roy_Leonardo_Barreras_Montealegre dbo:partyAffiliation ?royBarrerasParty .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
905,16,train,"Give me the father, that is a royalty, of the spouse of Maria of Bytom.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Maria_of_Bytom> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Maria of Bytom
  ?maria a dbo:Person ;
         foaf:name ""Maria of Bytom""@en .
  
  # Find her spouse
  ?maria dbo:spouse ?spouse .

  # Find the father of the spouse
  ?spouse dbo:father ?father .

  # Ensure the father is royalty
  ?father a dbo:Monarch ;
          dbp:title ?title .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
38,8,train,"Give me the author of the work, that is a written work and a work, of Joe Biden.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Joe_Biden> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?title WHERE {
  ?author dbr:Joe_Biden .
  ?author dbo:author ?work .
  ?work rdfs:label ?title .
  FILTER (LANG(?title) = 'en')
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
87,8,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring dbr:Iliza_Shlesinger ;
         a dbo:Film ;
         a dbo:Work .
  
  ?movie dbo:starring ?actor .
}
```",2,4,3,2,1,2,3,28,7,31,0,0.18421052631578946,1.0,0.3111111111111111
412,23,train,Give me the war of the awardee of 30 and war of the leader of National Party of Greece.,"SELECT ?result WHERE { <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 WHERE {
  # Find the awardee from 1930
  ?person dbo:award ""Nobel Prize"" .
  ?person dbo:dateOfBirth ?dob .
  FILTER (YEAR(?dob) <= 1930 && YEAR(?dob) >= 1900) .

  OPTIONAL { 
    ?person dbo:awardYear ?year .
    FILTER (?year = 1930)
  }

  # Find wars involving the awardee
  ?war1 dbo:participant ?person .

  # Find the leader of the National Party of Greece
  ?leader dbo:party dbr:National_Party_of_Greece ;
          dbo:position ""Leader"" .

  # Find wars involving the leader
  ?war2 dbo:participant ?leader .
}
```",4,4,5,2,2,2,3,28,0,0,11,0,0.0,0
943,40,train,"Give me the reference to  and child of the parent, that is a royalty, of the commander, that is a royalty, in Siege of Mukha and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Mukha> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?parent ?child WHERE {
  # Find the commander who is royalty and involved in Siege of Mukha
  ?commander a dbo:RoyalFamily ;
             dbo:spouseOrPartner ?parent ;
             dbo:child ?baedaMaryamI .
  
  ?event dbo:eventParticipant ?commander ;
         rdfs:label ""Siege of Mukha""@en .

  # Baeda Maryam I is the child
  ?baedaMaryamI rdfs:label ""Baeda Maryam I""@en .
  
  # The parent must also be royalty
  ?parent a dbo:RoyalFamily .
  
  # Find the child of this royal parent
  ?parent dbo:child ?child .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
347,26,train,Give me the father of the child of the parent of Archduke Charles Joseph of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Archduke Charles Joseph of Austria
  ?archduke a dbo:Person ;
            foaf:name ""Charles Joseph, Archduke of Austria"" .

  # Step 2: Find his parent(s)
  ?parent dbo:child ?archduke .

  # Step 3: Identify any children of this parent
  ?child dbo:parent ?parent .

  # Step 4: Find the father of this child
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
871,13,train,"Give me the parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             foaf:name ""Frederick Stanley"" ;
             dbo:title dbr:Earl_of_Derby .

  # Step 2: Find his children
  ?child dbo:parent ?frederick .
  
  # Step 3: For each child, find their parents
  ?child dbo:parent ?parent .
}
```

This query assumes that the DBpedia ontology uses `dbo:Person` for people, `foaf:name` for names, and `dbo:title` for titles. Adjustments might be necessary based on actual data availability and structure in DBpedia.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
159,25,train,"Give me the reference to George Ducas and commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""George Ducas""@en . <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference
WHERE {
  # George Ducas and The War (TV Show)
  OPTIONAL { 
    dbr:George_Ducas dbo:spouse ?person .
    ?person dbo:profession dbr:The_War_(television_series) .
  }
  
  # Jean Baptiste, Comte d'Arco and war
  OPTIONAL {
    dbr:Jean_Baptiste_Comte_d%27Arco dbo:occupation ?occupation .
    ?occupation rdfs:label ""war""@en .
  }

  # Find common reference to war as a societal event
  OPTIONAL {
    ?reference dbo:wikiPageRedirects ?relatedEntity .
    ?relatedEntity rdfs:label ""War""@en .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
392,0,train,Give me the member of 1. FC Magdeburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/1._FC_Magdeburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:member ?player .
  FILTER (str(?team) = ""http://dbpedia.org/resource/1._FC_Magdeburg"")
}
```",1,1,2,1,1,2,2,9,0,0,616,0,0.0,0
198,0,train,Give me the war of Amasa Tracy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event ?description WHERE {
  ?person rdfs:label ""Amasa Tracy""@en .
  OPTIONAL { 
    ?event dbo:agent ?person ;
           rdfs:comment ?description .
  }
}
```

This query does the following:
- It looks for a resource labeled ""Amasa Tracy"" in English.
- It then tries to find any events (`?event`) where Amasa Tracy is an agent (`dbo:agent`).
- If such events exist, it retrieves their descriptions (`rdfs:comment`).",1,1,2,1,1,3,3,71,0,0,18,0,0.0,0
353,31,train,"Give me the child of the parent of the child, that is a royalty, of Roger II of Sicily and father of William II of Sicily.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Roger II of Sicily
  dbr:Roger_II_of_Sicily dbo:child ?child .
  
  # Parent of the child (should be Roger II)
  ?child dbo:parent ?parent .

  # Ensure the parent is a royalty
  ?parent rdf:type dbo:Monarch .

  # Check if this person is also the father of William II
  ?parent dbo:child dbr:William_II_of_Sicily .
  
  BIND(?parent AS ?person)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
557,35,train,"Give me the producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  # Find a work associated with Janet Gaynor
  ?work dbo:starring dbr:Janet_Gaynor .
  
  # Ensure the work is a movie
  ?work rdf:type dbo:Film .

  # Find the producer of this movie
  ?work dbo:producer ?producer .

  # Check if The Shadow's alter ego, Lamont Cranston, is associated with the same work
  OPTIONAL { 
    ?work dbo:starring dbr:Lamont_Cranston .
  }
}
```",4,6,5,2,2,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
258,11,train,Give me the alma mater of Eleonora Menicucci and establishment of the founding date of Federal University of Paraíba.,SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . <http://dbpedia.org/resource/Eleonora_Menicucci> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?foundingDate
WHERE {
  # Eleonora Menicucci's alma mater
  OPTIONAL { 
    dbr:Eleonora_Menicucci dbo:almaMater ?almaMater .
  }
  
  # Federal University of Paraíba's founding date
  OPTIONAL { 
    dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
  }
}
```",3,3,4,2,2,3,2,20,1,3,0,0.25,1.0,0.4
513,16,train,Give me the entity in the award of George H. Cameron and residence of the leader of Ulster Unionist Party.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_H._Cameron> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Ulster_Unionist_Party> <http://dbpedia.org/ontology/leader> ?v3 . ?v3 <http://dbpedia.org/ontology/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the award received by George H. Cameron
  ?award dbo:recipient dbr:George_H._Cameron .
  
  # Find the residence of a leader of the Ulster Unionist Party
  ?leader dbo:memberOf dbr:Ulster_Unionist_Party ;
          dbo:residence ?residence .

  # Match the award and residence to find common entities
  OPTIONAL { ?award rdfs:label ?awardLabel . FILTER (lang(?awardLabel) = ""en"") }
  OPTIONAL { ?residence rdfs:label ?residenceLabel . FILTER (lang(?residenceLabel) = ""en"") }

  # Find a common entity between the award and residence
  ?entity dbo:awardedBy ?award .
  ?entity dbo:location ?residence .

}
```

This query attempts to find an entity that is both associated with the award received by George H. Cameron and the residence of a leader of the Ulster Unionist Party.",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
859,13,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of the reference, that is a group, to Burnt by the Sun.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Burnt by the Sun""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the musical artist associated with the film ""Burnt by the Sun""
  ?film dbo:musicalArtist ?artist .
  
  FILTER (str(?film) = str(dbr:Burnt_by_the_Sun_(2009_film)))

  # Ensure the artist is a band, group, and organization
  ?artist rdf:type dbo:Band ;
          rdf:type dbo:MusicalGroup ;
          rdf:type dbo:Organization .

  # Find members of this band
  ?member dbo:bandMemberOf ?artist .
  
  # Return the member's name
  ?member rdfs:label ?bandMember .
}
ORDER BY ?bandMember",3,7,4,3,1,3,2,20,0,0,18,0,0.0,0
80,25,train,Give me the professional in the alter ego of The Shadow and actor of ATL (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgoOf dbr:The_Shadow .
  
  # Find the actor who played in ATL (film)
  ?atlFilm dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?atlFilm), ""http://dbpedia.org/resource/ATL_(2006_film)""))

  # Ensure the actor is the same person
  VALUES ?shadowAlterEgo { dbr:The_Shadow }
  
  # Link the alter ego to the actor
  ?actor dbo:birthName ?shadowAlterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
143,8,train,Give me the associated musical artist of the person born as Cynthia Ikponmwenosa Morgan.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Cynthia Ikponmwenosa Morgan""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Ciara""@en .
  OPTIONAL { ?person dbo:associatedBandOrMusicalGroup ?band . }
  FILTER (?person = dbr:Ciara)
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
353,25,train,Give me the child of the child of Alfonso VI of León and Castile and father of William II of Sicily.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_II_of_Sicily> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childOfChild WHERE {
  # Alfonso VI of León and Castile
  ?alfonso vi:spouse|dbo:child ?person1 .
  FILTER (str(?alfonso) = ""Alfonso_VI_of_León_and_Castile"")

  # Child of Alfonso VI
  ?person1 dbo:child ?childOfChild .

  # William II of Sicily
  ?william2 rdfs:label ""William II of Sicily""@en .
  
  # Father of William II of Sicily is the child of Alfonso VI's child
  ?childOfChild dbo:spouse|dbo:child ?william2 .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
353,14,train,Give me the child of the child of Alfonso VI of León and Castile.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Alfonso_VI_of_León_and_Castile> . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild ?grandchildLabel WHERE {
  # Find Alfonso VI of León and Castile
  dbr:Alfonso_VI_of_León_and_Castile dbo:spouse ?spouse .
  
  # Find his children
  ?child dbo:parent dbr:Alfonso_VI_of_León_and_Castile ;
         a dbo:Person .

  # Find the grandchildren (children of his children)
  ?grandchild dbo:parent ?child ;
              a dbo:Person .

  # Get labels for better readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
943,35,train,"Give me the child of the parent, that is a royalty, of Yeshaq I and father of the father, that is a royalty and an office holder, of Na'od.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Yeshaq_I> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Na'od> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Find Yeshaq I's parent who is royalty
  ?yeshaqI a dbr:Yeshaq_I ;
           dbo:parent ?parent .

  FILTER EXISTS { ?parent a dbo:Monarch } .

  # Step 2: Find the child of this parent (who is royalty)
  ?parent dbo:child ?child .
  
  FILTER EXISTS { ?child a dbo:Monarch } .

  # Step 3: Ensure this child is also the father of Na'od's grandfather
  ?naod dbr:Na'ad ;
        dbo:father ?grandfather .

  ?grandfather dbo:father ?child .

  FILTER EXISTS { ?grandfather a dbo:Monarch . 
                 ?grandfather dbo:officeHolder ?office } .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
513,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:United_Kingdom .
}
```",1,1,2,1,1,3,2,20,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
140,0,train,Give me the commander in Pickett's Charge.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pickett's_Charge> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dcterms:subject dbc:Pickett's_Charge ;
         dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
347,3,train,Give me the military force of Algerian War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?event dbo:militaryConflictOf ?country .
  ?event rdfs:label ""Algerian War""@en .
  
  OPTIONAL { ?event dbo:participatedInMilitaryOperation ?operation . }
  OPTIONAL { ?operation dbo:hasParticipant ?militaryForce . }

  FILTER (lang(?militaryForce) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,119,0,0.0,0
414,17,train,Give me the show of Royal Swedish Academy of Sciences and award of the awardee of the reference to Nobel Prize in Physics.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Nobel Prize in Physics""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Royal_Swedish_Academy_of_Sciences> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?awardee ?awardYear WHERE {
  # Find shows related to the Royal Swedish Academy of Sciences
  ?show dbo:organizer dbr:Royal_Swedish_Academy_of_Sciences .
  
  # Find Nobel Prize in Physics awardees and their award years
  ?nobelAward a dbo:NobelPrizeInPhysics ;
              dbo:laureate ?awardee ;
              dbo:year ?awardYear .

  # Link the show to the Nobel Prize in Physics
  ?show dbo:subject ?nobelAward .
}
ORDER BY ?awardYear",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
816,45,train,Give me the parent of the child of the spouse of Mariclare Costello and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Amy Arbus.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Mariclare_Costello> <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Mariclare Costello's spouse
  ?mariclare a dbo:Person ;
             foaf:name ""Mariclare Costello""@en .
  
  ?spouse a dbo:Person ;
          dbo:spouse ?mariclare .

  # Step 2: Find the child of this spouse
  ?child dbo:parent ?spouse .

  # Step 3: Determine the parent of this child
  ?parent dbo:child ?child .

  # Step 4: Identify the actor of ""Judgment: The Trial of Julius and Ethel Rosenberg""
  ?actor a dbo:Person ;
         foaf:name ?name .
  
  ?film a dbo:Film ;
        foaf:title ""Judgment: The Trial of Julius and Ethel Rosenberg""@en ;
        dbo:starring ?actor .

  # Step 5: Find the parent of Amy Arbus
  ?amyArbusParent a dbo:Person ;
                  dbo:child <http://dbpedia.org/resource/Amy_Arbus> .
  
  FILTER(?parent = ?amyArbusParent)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
472,8,train,"Give me the territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory WHERE {
  # Step 1: Identify the DBpedia resource for Christian Ditlev Ammentorp Hansen
  dbr:Christian_Ditlev_Ammenhorst_Hansen dbo:deathPlace ?deathPlace .

  # Step 2: Ensure that this death place is classified as a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Step 3: Find out which territory administers this settlement
  ?deathPlace dbp:country ?territory .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
609,9,train,Give me the birth place of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Glenn_Youngkin 
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
246,15,train,"Give me the parent of Prince Omar bin Faisal and parent of the child, that is a royalty, of the parent, that is a royalty, of Princess Aisha bint Faisal.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Aisha_bint_Faisal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Omar_bin_Faisal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOmar ?royalChildParent

WHERE {
  # Step 1: Find Princess Aisha bint Faisal's parent who is royalty
  ?princessAisha a dbo:Person ;
                 dbp:parent ?parentAisha .
  
  FILTER EXISTS { ?parentAisha a dbo:Monarch } .

  # Step 2: Find a child of that parent who is also royalty
  ?royalChildParent a dbo:Monarch ;
                    dbp:parent ?parentAisha .

  # Step 3: Identify the parent of Prince Omar bin Faisal
  ?princeOmar a dbo:Person ;
              rdfs:label ""Prince Omar bin Faisal""@en ;
              dbp:parent ?parentOmar .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
756,24,train,"Give me the native of the administration, that is a country, of Theodor Heuss and manager of 2020–21 SBV Vitesse season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Theodor_Heuss> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeCountry
WHERE {
  # Theodor Heuss's native country
  OPTIONAL {
    dbr:Theodor_Heuss dbo:nationality ?heussNationality .
    ?heussNationality rdfs:label ?nativeCountry ;
                     owl:sameAs ?countryResource .
  }
  
  # Manager of SBV Vitesse for the 2020–21 season
  OPTIONAL {
    dbr:SBV_Vitesse dbp:managerDuringSeason ""2020–21"" ?manager .
    ?manager dbo:nationality ?managerNationality .
    ?managerNationality rdfs:label ?nativeCountry ;
                       owl:sameAs ?countryResource .
  }
}
```

This query uses optional blocks to find the native country of both Theodor Heuss and the manager of SBV Vitesse during the specified season. It assumes that DBpedia has structured data for these entities, including their nationality.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
293,44,train,"Give me the spouse of the actor of 1,000 Dollars a Minute and party member of Republican Party (United States) and person born as the birth name of Ann Sothern.","SELECT ?result WHERE { <http://dbpedia.org/resource/1,000_Dollars_a_Minute> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Ann Sothern""@en ;
         dbo:birthName ""Ann Sothern"" ;
         dbo:memberOf dbr:Republican_Party_(United_States) .
  
  ?film dbo:starring ?actor ;
        rdfs:label ""1,000 Dollars a Minute""@en .

  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```

This query does the following:
- It identifies an actor (`?actor`) with the birth name Ann Sothern.
- Ensures this actor is a member of the Republican Party (United States).
- Confirms their participation in the film ""1,000 Dollars a Minute.""
- Retrieves the spouse of this actor if available.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
723,6,train,Give me the band member of Stone Sour and band member of Mudvayne.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Stone_Sour> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Mudvayne> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  ?band1 dbp:member ?person .
  ?band2 dbp:member ?person .
  
  FILTER (str(?band1) = ""Stone_Sour""^^xsd:string)
  FILTER (str(?band2) = ""Mudvayne""^^xsd:string)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
23,17,train,Give me the entity in the country of Daniel Elahi Galán and party of Gustavo Petro.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find entities related to Colombia (Daniel Elahi Galán's country)
  ?entity dbo:country dbr:Colombia .
  
  # Find entities related to the political party ""Colombia Humana"" (Gustavo Petro's party)
  OPTIONAL { 
    ?entity dbo:party dbr:Colombia_Humana .
  }
}
```

This query selects entities that are associated with Colombia and optionally checks if they have a connection to the ""Colombia Humana"" political party.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
39,51,train,"Give me the band of the person born, that is a musical artist, as the birth name of Bob Thompson (musician) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Bob_Thompson_(musician)> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?band WHERE {
  # Find the DBpedia resource for Bob Thompson (musician)
  ?person a dbo:MusicalArtist ;
          rdfs:label ""Bob Thompson""@en .
  
  # Check if he has an alias or pseudonym
  OPTIONAL { 
    ?person dbo:pseudonym dbr:The_Shadow .
  }
  
  # Find the band associated with Bob Thompson
  ?person dbo:band ?band .
}
```

This query does the following:
- It looks for a resource that is a `MusicalArtist` and has ""Bob Thompson"" as its label.
- It optionally checks if this person has an alias or pseudonym of ""The Shadow.""
- It retrieves the band associated with Bob Thompson.",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
737,4,train,"Give me the child of Philipp Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philipp_Albrecht,_Duke_of_Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""Philipp_Albrecht,_Duke_of_Württemberg"")
  
  OPTIONAL { ?spouse dbo:child ?child . }
  OPTIONAL { ?person dbo:child ?child . }

  FILTER (!isBlank(?child))
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
198,28,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina and war of the awardee of Medal of Honor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?location ?war WHERE {
  # Identify Quincy Adams Gillmore
  VALUES ?gillmore { dbr:Quincy_A._Gillmore }
  
  # Find the force he commanded in Charleston, SC
  ?gillmore dbo:militaryCommanderOf ?command.
  ?command dbo:place ?location .
  FILTER(CONTAINS(LCASE(STR(?location)), ""charleston south carolina""))

  # Get the name of the force/command
  ?command rdfs:label ?force .

  # Determine the war during which he was awarded the Medal of Honor
  ?gillmore dbp:awardedMedalOfHonorDuring ?war .
  
  # Ensure labels are in English
  FILTER(LANG(?force) = 'en')
  FILTER(LANG(?location) = 'en')
  FILTER(LANG(?war) = 'en')
}
```

This query does the following:
- It identifies Quincy Adams Gillmore using his DBpedia resource.
- It looks for any military command he had, specifically filtering for those associated with Charleston, South Carolina.
- It retrieves the name of the force or command and the location.
- It finds out during which war he was awarded the Medal of Honor.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
293,7,train,Give me the parent of Tisha Sterling.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbp:name ""Tisha Sterling""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  FILTER(?child = ?person)
  ?child dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
557,55,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of Janet Gaynor and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Janet_Gaynor> <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Cora Sue Collins' notable work
  OPTIONAL {
    ?work dbo:author dbr:Cora_Sue_Collins .
    ?work dbo:producer ?producer .
  }
  
  # Janet Gaynor's notable movie
  OPTIONAL {
    ?movie dbo:starring dbr:Janet_Gaynor .
    ?movie dbo:producer ?producer .
  }

  # The Shadow's professional role
  OPTIONAL {
    ?person rdfs:label ""The Shadow""@en .
    ?person dbo:profession ?role .
    FILTER(?role IN (dbr:Actor, dbr:Writer)) # Assuming roles like Actor or Writer
    ?work dbo:author ?person .
    ?work dbo:producer ?producer .
  }
}
```",6,9,7,2,3,3,3,71,1,10,0,0.09090909090909091,1.0,0.16666666666666669
198,42,train,"Give me the force of Quincy Adams Gillmore and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and war of the awardee of Medal of Honor.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?settlement ?war
WHERE {
  # Quincy Adams Gillmore's military rank or force
  dbr:Quincy_A._Gillmore dbo:militaryRank ?rank .
  BIND (str(?rank) AS ?force)

  # Henry Clay Lewis' birthplace, which is a settlement and American
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:United_States .

  BIND (str(?birthPlace) AS ?settlement)

  # Medal of Honor awardee's war
  ?awardee dbo:award dbr:Medal_of_Honor .
  ?awardee dbo:servedInMilitaryConflict ?war .
  
  BIND (str(?war) AS ?war)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
103,29,train,Give me the actor of Dispatches from Elsewhere and professional in  and professional in the profession of Shatrughan Sinha.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Dispatches_from_Elsewhere> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actors of the TV series ""Dispatches from Elsewhere""
  ?series dbo:title ""Dispatches from Elsewhere""@en .
  ?series dbo:starring ?actor .

  # Ensure the actor is also a professional in the same field as Shatrughan Sinha
  ?actor dbo:occupation dbr:Actor .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
23,3,train,"Who is the person born, that is a politician, as Roy Leonardo Barreras Montealegre?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Roy Leonardo Barreras Montealegre"" .
  ?person a dbo:Politician .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
293,12,train,Give me the person born as Harriette Arlene Lake and spouse of Roger Pryor (actor).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Harriette Arlene Lake""@en . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Harriette Arlene Lake"" .
  ?person dbo:spouse ?rogerPryor .
  ?rogerPryor foaf:name ""Roger Pryor""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,24,train,"Give me the predecessor of Myat Hpone Pyo and spouse of the father, that is a royalty, of Myat Hpone Pyo.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?spouse WHERE {
  # Find Myat Hpone Pyo and his predecessor
  VALUES (?myatHponePyo) { dbr:Myat_Hpone_Pyo }
  
  ?myatHponePyo dbo:predecessor ?predecessor .
  
  # Find the father of Myat Hpone Pyo who is royalty
  ?myatHponePyo dbo:father ?father .
  ?father a dbo:Monarch .

  # Find the spouse of Myat Hpone Pyo's royal father
  ?father dbo:spouse ?spouse .
}
```

This query assumes that:
- `dbr:Myat_Hpone_Pyo` is the correct DBpedia resource for Myat Hpone Pyo.
- The ontology classes and properties used (`dbo:predecessor`, `dbo:father`, `dbo:Monarch`, `dbo:spouse`) are correctly mapped in DBpedia.

Please note that you might need to adjust the resource identifier or property paths based on the actual data available in DBpedia, as this query is constructed with assumptions about the structure and availability of data. If Myat Hpone Pyo's specific details aren't directly available, additional research may be needed to find the correct identifiers.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
159,20,train,Give me the successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?writer
WHERE {
  # Find the successor of Yurii Khmelnytsky
  OPTIONAL {
    ?yuriiKhmelnytsky dbo:office ?office .
    ?yuriiKhmelnytsky dbo:successor ?successor .
    FILTER(?yuriiKhmelnytsky = dbr:Yurii_Khmelnytsky)
  }

  # Find the writer of ""Always the Love Songs""
  OPTIONAL {
    ?album dbo:author ?writer .
    ?album rdfs:label ?albumLabel .
    FILTER(CONTAINS(LCASE(?albumLabel), ""always the love songs""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
198,14,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthplace WHERE {
  # Find Henry Clay Lewis's resource
  dbr:Henry_Clay_Lewis dbo:nationality dbr:United_States ;
                       dbo:birthPlace ?birthplace .

  # Ensure the birthplace is a settlement and American
  ?birthplace a dbo:Settlement .
  OPTIONAL { ?birthplace dbo:nationality dbr:United_States . }
}
```

This query does the following:
- It identifies Henry Clay Lewis's resource using `dbr:Henry_Clay_Lewis`.
- Retrieves his birthplace with `dbo:birthPlace`.
- Ensures that the birthplace is a settlement (`a dbo:Settlement`).
- Optionally checks if the birthplace has an American nationality.",2,4,3,2,1,3,3,71,0,0,12,0,0.0,0
609,52,train,"Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell and birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceVinceGilligan ?birthPlaceCeceBell ?birthPlaceGovernorVirginia WHERE {
  # Vince Gilligan's birthplace
  OPTIONAL { 
    dbr:Vince_Gilligan dbo:award dbr:Primetime_Emmy_Award_for_Outstanding_Original_Main_Title_Theme_Music_Composition .
    dbr:Vince_Gilligan dbo:birthPlace ?birthPlaceVinceGilligan .
  }

  # Cece Bell's birthplace
  OPTIONAL {
    dbr:Cecilie_Caroline_Bell dbo:birthPlace ?birthPlaceCeceBell .
  }
  
  # Governor of Virginia's birthplace (as of the latest data)
  OPTIONAL {
    dbr:Glenn_York_Tyler_VIII dbo:governmentRole dbr:Governor_of_Virginia ;
                              dbo:birthPlace ?birthPlaceGovernorVirginia .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
347,23,train,"Give me the commander in the war, that is a societal event and an event and a television show, of the military force of Algerian War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Algerian_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?commanderLabel WHERE {
  ?event dbo:wikiPageRedirects dbr:Algerian_War .
  ?event dbo:agent ?commander .
  
  ?commander a dbo:Person ;
             rdfs:label ?commanderLabel .

  OPTIONAL { 
    ?commander dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdf:type ?type .
    FILTER (?type IN (dbr:Societal_event, dbr:Event, dbr:Television_show))
  }
  
  FILTER(LANG(?commanderLabel) = 'en')
}
ORDER BY ?commanderLabel
```",3,6,4,3,1,3,3,71,0,0,124,0,0.0,0
871,61,train,"Give me the parent of the child of the parent, that is a politician and an office holder, of Edward Stanley, 17th Earl of Derby and father of the child, that is a politician, of the alumnus of Eton College.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eton_College> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalParent WHERE {
    # Step 1: Edward Stanley, 17th Earl of Derby's children
    ?child1 dbo:parent dbr:Edward_Stanley,_17th_Earl_of_Derby .
    
    # Step 2: Child who is a politician
    ?child1 dbo:occupation dbr:Politician .

    # Step 3: Alumnus of Eton College and their children
    ?alumnus dbo:almaMater dbr:Eton_College .
    ?child2 dbo:parent ?alumnus .

    # Step 4: Child who is a politician
    ?child2 dbo:occupation dbr:Politician .

    # Step 5: Parent of the child from step 4, who is a politician and office holder
    ?parent1 dbo:parent ?child2 .
    ?parent1 dbo:occupation dbr:Politician ;
             dbo:officeHolder true .

    # Step 6: Parent of the child from step 2
    ?parent2 dbo:parent ?child1 .

    # Step 7: Child of the parent from step 6
    ?child3 dbo:parent ?parent2 .

    # Step 8: Parent of the child from step 7
    ?finalParent dbo:parent ?child3 .
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
706,2,train,Give me the reference to Sangeet Natak Akademi Fellowship.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Sangeet Natak Akademi Fellowship""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?recipientLabel WHERE {
  ?award dbo:awardedTo ?recipient .
  ?award rdfs:label ""Sangeet Natak Akademi Fellowship""@en .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
158,2,train,Give me the native of Russian Empire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Russian_Empire> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthPlace dbr:Russian_Empire .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,2,3,28,5474,5420,1,0.5024784284927483,0.9998173515981735,0.6688252184006352
295,1,train,Give me the native of Birmingham.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Birmingham> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Birmingham .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,10,10,1521,0.5,0.006531678641410843,0.01289490651192779
531,41,train,"Give me the office of Miguel Maura and tenant of the residence of Alberto Ruiz-Gallardón and office of the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/headquarter> ?v2 . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v4 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?miguelOffice ?albertoResidence ?commanderOffice
WHERE {
  # Miguel Maura's office
  dbr:Miguel_Maura dbo:office ?miguelOffice .

  # Alberto Ruiz-Gallardón's residence
  dbr:Alberto_Ruiz-Gallardón dbo:residence ?albertoResidence .

  # Commander involved in the Central African Republic Civil War
  ?commander a dbo:Politician ;
             dbo:office ?commanderOffice ;
             dbo:memberOf ?war .
  
  # Ensure the war is the Central African Republic Civil War
  ?war rdfs:label ""Central African Republic Civil War""@en .

}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
288,3,train,Give me the show with Anumta Qureshi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Anumta_Qureshi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?actor dbo:name ""Anumta Qureshi""@en.
  ?actor dbo:actedIn ?show.
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
595,36,train,"Give me the commander in the war, that is a disease and a societal event, of the owner of USS Arcadia (ID-1605) and spouse of Hillary Clinton.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/USS_Arcadia_(ID-1605)> <http://dbpedia.org/ontology/owner> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. <http://dbpedia.org/resource/Hillary_Clinton> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Bill Clinton as President during the AIDS epidemic
  dbr:Bill_Clinton dbo:positionHeld dbr:President_of_the_United_States .
  
  # Commander associated with Bill Clinton in this context
  ?commander dbo:spouse dbr:Hillary_Clinton ;
            dbo:positionHeld dbr:Commander_in_Chief_of_the_Armed_Forces_of_the_United_States .

}
```

This query assumes:
- The role of ""Commander"" is metaphorically linked to the President's role during a significant societal event like the AIDS crisis.
- Bill Clinton, as President, was the commander-in-chief during this period.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
628,17,train,"Give me the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?award a dbo:Award .
  
  # Award is a region, American, state, and settlement
  ?award dbo:country dbr:United_States ;
         dbo:stateOrProvince dbr:New_York_(state) .

  # Awardee is a band from New York (state)
  ?award dbo:recipient ?band .
  ?band a dbo:Band ;
        dbo:location dbr:New_York_City ; # Assuming the band is located in NYC, which is part of NY state
        dbo:country dbr:United_States .

}
```

This query does the following:
- Selects awards that are associated with the United States and specifically New York as a state.
- Ensures the recipient of the award is a band located in New York City (as a proxy for being from New York State).",2,7,3,2,1,3,3,71,0,0,3,0,0.0,0
412,16,train,Give me the war of the awardee of 30 and war of Napoleon Zervas.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 WHERE {
  # John Randle and World War I
  dbr:John_Randle dbo:award dbr:Victoria_Cross_30th .
  dbr:World_War_I dbo:participant dbr:United_Kingdom ;
                 dbo:hasPart ?battle .

  # Napoleon Zervas and Greek Civil War
  dbr:Napoleon_Zervas dbo:participatedIn dbr:Greek_Civil_War .

  # Bind wars to variables
  OPTIONAL { ?battle dbo:war ?war1 . }
  BIND(dbr:Greek_Civil_War AS ?war2)
}
```",3,3,4,2,2,2,3,28,0,0,11,0,0.0,0
628,61,train,"Give me the person born as the birth name of the native, that is a musical artist, of Florida and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find a musical artist native to Florida
  ?artist dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Florida ;
          rdf:type dbo:MusicalArtist .

  # Step 2: Identify an award associated with a region that is also a state and settlement
  ?award dbo:location dbr:New_York_City ; # New York City as an example of a settlement in New York State
         dbo:recipient ?band .

  # Step 3: Find a band from New York (state) that received this award
  ?band dbo:nationality dbr:United_States ;
        dbo:birthPlace dbr:New_York_City ;
        rdf:type dbo:Band .
  
  # Link the artist to the person born with the same name as the award's region
  ?person rdfs:label ?artistLabel .
  FILTER (CONTAINS(LCASE(?award), LCASE(dbo:location ?region)) && CONTAINS(LCASE(?region), ""new york""))
}
```",6,12,7,3,2,3,3,71,0,0,59,0,0.0,0
859,12,train,Give me the associated musical artist of the associated musical artist of James Plotkin and band member of Human Remains (band).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Human_Remains_(band)> . <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?secondLevelArtist WHERE {
  # Step 1: Find artists associated with James Plotkin
  ?artist dbo:associatedMusicalArtist dbr:James_Plotkin .

  # Step 2: For each artist found, find their associated artists
  ?secondLevelArtist dbo:associatedMusicalArtist ?artist .

  # Step 3: Check if any of these second-level artists are members of Human Remains
  ?member dbo:band dbr:Human_Remains ;
          rdf:type dbo:BandMember ;
          dbo:musicBrainzArtistId ?secondLevelMusicBrainzID .
  
  FILTER EXISTS {
    ?secondLevelArtist dbo:musicBrainzArtistId ?secondLevelMusicBrainzID .
  }
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
375,19,train,Give me the entity in the birth place of Yamaza Enjirō and war of Toyotomi Hidenaga and war of Hashiba Hidekatsu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Hashiba_Hidekatsu> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Yamaza_Enjirō> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Toyotomi_Hidenaga> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceEntity ?war1 ?war2 WHERE {
  # Yamaza Enjirō's birthplace
  OPTIONAL {
    dbr:Yamaza_Enjirō dbo:birthPlace ?birthPlaceEntity .
  }

  # Wars involving Toyotomi Hidenaga
  OPTIONAL {
    dbr:Toyotomi_Hidenaga dbo:participatedIn ?war1 .
  }

  # Wars involving Hashiba Hidekatsu (also known as Tokugawa Ieyasu)
  OPTIONAL {
    dbr:Tokugawa_Ieyasu dbo:participatedIn ?war2 .
  }
}
```",4,4,5,2,3,2,3,28,0,2,2,0.0,0.0,0
203,31,train,"Give me the commander in the war, that is a military conflict and an event, of the figure known as The Triple X's and military force of Battle of Fort Royal.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/nickname> ""The Triple X's""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?unit rdfs:label ""The Triple X's""@en .
  ?battle rdfs:label ""Battle of Fort Royal""@en .
  
  ?unit dbo:participatedIn ?conflict .
  ?battle dbo:participatedIn ?conflict .

  ?conflict dbo:commander ?commander .
}
```

This query assumes:
- ""The Triple X's"" and the Battle of Fort Royal are labeled in DBpedia.
- They participated in a common conflict, which has a commander.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
687,56,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento and player in Sergio Agüero and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Sergio_Agüero> <http://dbpedia.org/ontology/team> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Step 1: Get Marcelo Sarmiento's birthday
  VALUES (?marceloSarmientoBirthday) { 
    SELECT ?birthday WHERE { 
      dbr:Marcelo_Sarmiento dbo:birthday ?birthday .
    }
  }

  # Step 2: Find soccer players and managers born on that date
  ?person dbo:birthday ?marceloSarmientoBirthday ;
          (dbo:sportTeam|dbo:managerSportTeam) ?team .

  # Ensure the person is a soccer player or manager
  FILTER EXISTS { 
    ?person dbo:sport ""Association football"" .
  }

  # Step 3: Get Sergio Agüero's team(s)
  VALUES (?agueroTeam) {
    SELECT ?team WHERE {
      dbr:Sergio_Agüero dbo:sportTeam ?team .
    }
  }

  # Ensure the person is a player in one of Sergio Agüero's teams
  FILTER EXISTS { 
    ?person dbo:memberOfTeam ?agueroTeam .
  }

  # Step 4: Find athletes born on 1955-02-22
  VALUES (?athleteBirthday) {
    ""1955-02-22""^^xsd:date
  }
  
  ?athlete dbo:birthday ?athleteBirthday .

  # Ensure the person is also an athlete
  FILTER EXISTS { 
    ?person dbo:sport ?athlete .
  }

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
472,9,train,Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?monarch ?administration
WHERE {
  VALUES ?monarch { 
    dbr:Christian_IX_of_Denmark 
    dbr:Olaf_I_of_Denmark 
  }
  
  OPTIONAL {
    ?monarch dbo:reignStart ?start.
    ?monarch dbo:reignEnd ?end.
    ?monarch dbo:country ?country.
    
    # Assuming administration is related to reign or country
    ?administration dbo:headOfState ?monarch .
    ?administration dbo:country ?country .
  }
  
  FILTER(?administration != dbr:)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
140,9,train,"Give me the war, that is a societal event, of the military force of Pickett's Charge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Pickett's_Charge> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  dbr:Pickett%27s_Charge dbo:partOf ?event .
  ?event dbo:isPartOf ?war .
}
```",2,3,3,2,1,3,2,20,0,0,19,0,0.0,0
816,29,train,Give me the parent of the professional in Photographer and actor of Judgment: The Trial of Julius and Ethel Rosenberg and parent of Doon Arbus.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Judgment:_The_Trial_of_Julius_and_Ethel_Rosenberg> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Doon_Arbus> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/occupation> ""Photographer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # For Robert Redford
  { 
    ?redford a dbo:Actor ;
             dbo:birthName ""Robert Redford"" .
    OPTIONAL { ?redford dbo:spouse ?spouse . }
    OPTIONAL { ?spouse dbp:child ?child . }
    FILTER(?child = <http://dbpedia.org/resource/Robert_Redford> || ?spouse = <http://dbpedia.org/resource/Sally_Hunter>)
  } UNION
  # For Doon Arbus
  {
    ?doonArbus a dbo:Person ;
               dbp:name ""Doon Arbus"" .
    OPTIONAL { ?doonArbus dbo:parent ?parent . }
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
816,19,train,"Give me the actor of the movie, that is a work, with Herschel Bernardi and parent of Amy Arbus.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Amy_Arbus> . ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Herschel_Bernardi> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie dbo:starring dbr:Herschel_Bernardi .
  ?movie dbo:parent dbr:Amy_Arbus .
  ?movie dbo:starring ?actor .
  FILTER(?actor != dbr:Herschel_Bernardi)
}
```

This query does the following:
- It selects movies (`?movie`) where Herschel Bernardi is a starring actor.
- It checks if these movies have Amy Arbus as a parent.
- It retrieves other actors (`?actor`) from these movies, excluding Herschel Bernardi himself.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
68,14,train,"Give me the father of Isabella of Austria and child of the commander, that is a royalty, in Siege of Padua.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Isabella of Austria and her father
  dbr:Isabella_of_Austria dbo:father ?father .

  # The father must be a commander in the Siege of Padua
  ?siege dbo:eventParticipant ?commander .
  ?commander rdf:type dbo:Person ;
             rdfs:label ""Charles V, Holy Roman Emperor""@en .
  
  FILTER(?father = ?commander)

  # Ensure the person is royalty
  ?father rdf:type dbo:Monarch .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
198,35,train,"Give me the war of the awardee of Medal of Honor and entity in the birthplace, that is a settlement and American, of Henry Clay Lewis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Medal_of_Honor> . ?result <http://dbpedia.org/ontology/place> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war WHERE {
  # Find Henry Clay Lewis's birthplace
  dbr:Henry_Clay_Lewis dbo:birthPlace ?birthPlace .
  
  # Ensure the birthplace is a settlement in America
  ?birthPlace a dbo:Settlement ;
             dbp:country ""United States""^^xsd:string .

  # Find Medal of Honor awardees from this place
  ?medalOfHonorAwardee dbo:birthPlace ?birthPlace .
  
  # Get the wars associated with these awardees
  ?medalOfHonorAwardee dbo:award ?medalOfHonor .
  ?medalOfHonor dbp:conferralEvent ?war .
}
```",4,6,5,2,2,3,3,71,0,0,2,0,0.0,0
246,17,train,"Give me the parent of the child, that is a royalty, of the child, that is a royalty, of Princess Muna al-Hussein and parent of Princess Sara bint Faisal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Princess_Muna_al-Hussein> <http://dbpedia.org/ontology/child> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Sara_bint_Faisal> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonParent WHERE {
  # Find children of Princess Muna al-Hussein who are royalty
  ?child1 dbp:parent dbr:Princess_Muna_al-Hussein .
  ?child1 dbo:nationality dbr:RoyalFamily .

  # Find parent of Princess Sara bint Faisal who is royalty
  ?saraParent dbp:child dbr:Princess_Sara_bint_Faisal .
  ?saraParent dbo:nationality dbr:RoyalFamily .

  # Find a common parent between the two sets of royals
  ?commonParent dbp:parent ?child1 .
  ?commonParent dbp:parent ?saraParent .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
668,40,train,Give me the professional in Musician and associated musical artist of the person born as the birth name of $pacely and person born as Darryl Paa Kwesi Bannerman-Martin.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ""Musician""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?profession ?associatedArtist
WHERE {
  VALUES (?birthName) { ""Tupac Shakur"" ""Darryl Paa Kwesi Bannerman-Martin"" }
  
  ?person dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:occupation ?profession . FILTER(CONTAINS(LCASE(?profession), ""musician"")) }
  OPTIONAL {
    ?artist dbp:associatedBandOrMusicalArtist ?person ;
            a dbo:MusicArtist .
    BIND(?artist AS ?associatedArtist)
  }
}
ORDER BY ?birthName
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
87,5,train,"Give me the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?movie WHERE {
  ?movie dbo:starringAudience ""Audrey Hepburn""@en .
  ?movie rdf:type dbo:Film .
  ?movie dbo:workExample ?film .
}
```",1,3,2,1,1,2,3,28,0,0,15,0,0.0,0
293,56,train,"Give me the party member of the ruling party in Central, Louisiana and person born as the birth name of the parent of Tisha Sterling and spouse of Roger Pryor (actor).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Roger_Pryor_(actor)> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Central,_Louisiana> <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Tisha_Sterling> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember ?person
WHERE {
  # Find the ruling party in Central, Louisiana
  ?centralLocation a dbo:PopulatedPlace ;
                   dbo:country dbr:United_States ;
                   dbo:stateOrProvince dbr:Louisiana ;
                   dbp:name ""Central, Louisiana"" .
  
  ?partyMember dbo:memberOfParty ?rulingParty ;
               dbo:location ?centralLocation .

  # Find the ruling party
  ?rulingParty a dbo:PoliticalParty ;
               dbo:country dbr:United_States ;
               dbo:stateOrProvince dbr:Louisiana .

  # Find Tisha Sterling's parent with a specific birth name
  ?tishaSterling a dbo:Person ;
                 dbp:name ""Tisha Sterling"" .
  
  ?parent a dbo:Parent ;
          dbo:child ?tishaSterling ;
          dbp:birthName ?birthName .

  # Find the person with the same birth name and spouse of Roger Pryor
  ?person a dbo:Person ;
          dbp:birthName ?birthName ;
          dbo:spouse dbr:Roger_Pryor_(actor) .
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
557,51,train,"Give me the producer of the claim to fame, that is a work, of Cora Sue Collins and producer of the claim to fame, that is a movie and a work, of the actor of High Society Blues.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/High_Society_Blues> <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer1 ?producer2
WHERE {
  # Cora Sue Collins' work and its producer
  ?workCollins dbo:composer dbr:Cora_Sue_Collins .
  ?workCollins dbo:producer ?producer1 .

  # Actor in ""High Society Blues""
  ?actor dbo:actedIn dbr:High_Society_Blues .

  # Movie and work associated with the actor
  ?movie dbo:starring ?actor ;
         a dbo:Film .
  
  ?movie dbo:producer ?producer2 .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
293,50,train,"Give me the spouse of the actor of the product, that is a film, of Nat Levine and person born as the birth name of Ann Sothern.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Nat_Levine> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?spouse WHERE {
  # Films produced by Nat Levine
  ?film dbo:producer dbr:Nat_Levine .
  
  # Ann Sothern's birth name
  ?annSothern foaf:name ""Ann Sothern""@en ;
              dbo:birthName ?birthName .

  # People born with the same birth name as Ann Sothern
  ?person dbo:birthName ?birthName .

  # Actors of the film
  ?film dbo:actor ?actor .
  
  # Spouse of the actor
  ?actor foaf:mbox ?actorEmail ;
         foaf:name ?actorName .
  OPTIONAL { ?actor dbo:spouse ?spouse . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
595,19,train,"Give me the spouse of the author, that is a politician and an office holder, of An Invitation to the White House and author of Back to Work (book).",SELECT ?result WHERE { <http://dbpedia.org/resource/An_Invitation_to_the_White_House> <http://dbpedia.org/property/author> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Back_to_Work_(book)> <http://dbpedia.org/property/author> ?result . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Bill Clinton as the author of ""An Invitation to the White House"" and ""Back to Work (book)""
  dbr:Bill_Clinton dbo:author dbr:An_Invitation_to_the_White_House .
  dbr:Bill_Clinton dbo:author dbr:Back_to_Work_(book) .

  # Find his spouse
  dbr:Bill_Clinton dbo:spouse ?spouse .

  # Ensure the spouse is a politician and an office holder
  ?spouse rdf:type dbo:Politician .
  OPTIONAL { ?spouse dbo:officeHolderOf ?office . }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
80,60,train,Give me the professional in the alter ego of the series of The Golden Master and actor of the movie with the author of Smartbomb (book).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/Smartbomb_(book)> <http://dbpedia.org/property/author> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the alter ego in ""The Golden Master"" series
  ?character dbo:alterEgoOf dbr:The_Golden_Master_Series .
  
  # Find the actor who played this character
  ?character dbo:portrayedBy ?actor .

  # Find the author of ""Smartbomb""
  dbr:Smartbomb dbo:author dbr:Jane_Smith .

  # Find a movie that features both the actor and Jane Smith
  ?movie dbo:starring ?actor .
  ?movie dbo:starring dbr:Jane_Smith .
}
```

This query assumes:
- The DBpedia resource for ""The Golden Master Series"" is `dbr:The_Golden_Master_Series`.
- The author of ""Smartbomb"" is represented as `dbr:Jane_Smith`.",6,6,7,3,2,3,3,71,0,0,7802,0,0.0,0
871,24,train,"Give me the father of Arthur Stanley (politician) and parent of the child of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Arthur_Stanley_(politician)> <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Arthur Stanley (politician)
  ?arthur a dbo:Person ;
          dbp:name ""Arthur Stanley"" ;
          dbo:father ?fatherOfArthur .

  # Frederick Stanley, 16th Earl of Derby
  ?frederick a dbo:Person ;
             dbp:name ""Frederick Stanley, 16th Earl of Derby"" ;
             dbo:child ?childOfFrederick .
  
  # Parent of the child of Frederick Stanley
  ?parentOfChild a dbo:Person ;
                 dbo:child ?childOfFrederick .

  # Find common ancestor
  FILTER (?fatherOfArthur = ?parentOfChild)
  BIND(?fatherOfArthur AS ?commonAncestor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
89,17,train,"Give me the child of the spouse, that is a royalty, of Saw Min Phyu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Saw Min Phyu's resource
  VALUES ?sawMinPhyu { dbr:Saw_Min_Phu }

  # Get the spouse of Saw Min Phyu
  ?spouse dbo:spouseOf ?sawMinPhyu .

  # Check if the spouse is royalty (e.g., has a royal title)
  OPTIONAL {
    ?spouse dbo:title ?title .
    FILTER regex(?title, ""King|Queen|Prince|Princess"", ""i"")
  }

  # Get children of this spouse
  ?child dbo:parent ?spouse .

}
```

This query assumes that the DBpedia resource for Saw Min Phyu is `dbr:Saw_Min_Phu`. If it's different, you'll need to adjust the resource identifier accordingly. The query checks if the spouse has a royal title and then retrieves their children.",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
941,10,train,"Who is the spouse of the child, that is a royalty, of Princess Antoinette of Brunswick-Wolfenbüttel?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Princess_Antoinette_of_Brunswick-Wolfenbüttel> <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Princess Antoinette of Brunswick-Wolfenbüttel
  dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel dbo:child ?child .
  
  # Filter children who are royalty
  ?child a dbo:Monarch ;
         dbo:spouse ?spouse .

}
```

This query assumes that Princess Antoinette of Brunswick-Wolfenbüttel is represented in DBpedia as `dbr:Princess_Antoinette_of_Brunswick-Wolfenbüttel`. It retrieves her children, filters those who are royalty (using the class `dbo:Monarch`), and then selects their spouse.",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
39,25,train,"Give me the band of the person born, that is a musical artist, as Robert Lamar Thompson and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/birthName> ""Robert Lamar Thompson""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Robert Lamar Thompson""@en .
  
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```

This query does the following:
- Uses `dbo:MusicalArtist` to ensure we are dealing with a musical artist.
- Searches for an individual named ""Robert Lamar Thompson"".
- Optionally retrieves any band (`?band`) that this person is associated with through the property `dbo:memberOfBand`.",3,4,4,2,2,3,3,71,0,0,4,0,0.0,0
103,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:location dbr:CityName .
  ?professional rdf:type dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
68,5,train,"Who is the child, that is a royalty, of Philip I of Castile?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Philip_I_of_Castile> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (?spouse = dbr:Philip_I_of_Castile) .

  ?person dbo:child ?child .
  
  OPTIONAL { 
    ?child dbo:title ?title .
    FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess""))
  }
}
```

This query does the following:
- Identifies individuals (`?person`) who are spouses of Philip I of Castile.
- Finds children (`?child`) of these individuals.
- Checks if any of these children have a title indicating royalty (e.g., king, queen, prince, princess).",1,2,2,1,1,2,3,28,0,0,5,0,0.0,0
412,17,train,"Give me the entity in the death place, that is a settlement, of Antonios Varthalitis and war of Konstantinos Ventiris.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInDeathPlace WHERE {
  # Antonios Varthalitis
  OPTIONAL {
    VALUES ?person { dbr:Apostolos_Varthalitis }
    ?person dbo:deathPlace ?deathPlace1 .
    ?deathPlace1 a ?type1 .
    FILTER (?type1 IN (dbo:Settlement, dbo:City, dbo:Town))
    ?entityInDeathPlace1 dbo:location ?deathPlace1 .
    BIND(?entityInDeathPlace1 AS ?entityInDeathPlace)
  }

  # Konstantinos Ventiris
  OPTIONAL {
    VALUES ?person { dbr:Konstantinos_Ventiris }
    ?person dbo:deathPlace ?deathPlace2 .
    ?deathPlace2 a ?type2 .
    FILTER (?type2 IN (dbo:Settlement, dbo:City, dbo:Town))
    ?entityInDeathPlace2 dbo:location ?deathPlace2 .
    BIND(?entityInDeathPlace2 AS ?entityInDeathPlace)
  }
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and resources.
- **SELECT DISTINCT**: Ensure unique results are returned.
- **OPTIONAL**: Use OPTIONAL to handle cases where data might be missing for either individual.
- **VALUES**: Specify the individuals of interest using their DBpedia resource identifiers.
- **dbo:deathPlace**: Retrieve the death place of each person.
- **a ?type**: Check if the death place is a type of settlement (e.g., `dbo:Settlement`, `dbo:City`, `dbo:Town`).
- **FILTER**: Ensure only settlements are considered.
- **?entityInDeathPlace**: Find an entity located in the death place.

This query will return entities associated with the settlements where Antonios Varthalitis and Konstantinos Ventiris died. Adjust the resource identifiers if they differ from those assumed here (`dbr:Apostolos_Varthalitis` and `dbr:Konstantinos_Ventiris`).",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
687,41,train,"Give me the player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City and team of Pablo Aimar and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v4 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Pablo_Aimar> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  ?actor dbo:starringIn dbr:All_or_Nothing:_Manchester_City .
  ?actor dbo:sport dbr:Soccer .
  ?actor dbo:occupation dbr:Athlete .
  
  ?team dbo:member ?actor .
  ?team dbo:member dbr:Pablo_Aimar .

  ?actor dbp:birthday ""1955-02-22""^^xsd:date .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
531,43,train,"Give me the tenant of Madrid and office of the commander, that is an office holder and a politician, in the force, that is a military conflict and a societal event, of Manuel Pinto da Costa and office of Miguel Maura.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Manuel_Pinto_da_Costa> . ?v4 <http://dbpedia.org/property/office> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Madrid> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tenantOfMadrid ?officeOfCommander ?force
WHERE {
  ?person dbo:officeHolder true .
  ?person dbo:politician true .
  
  ?person dbo:heldOffice ?office1 .
  ?office1 rdfs:label ""Tenant of Madrid""@en .

  ?person dbo:heldOffice ?office2 .
  ?office2 rdfs:label ""Office of the Commander""@en .

  ?conflict dbo:participant ?person ;
            a dbo:MilitaryConflict ;
            a dbo:SocietalEvent .

  ?conflict dbo:participant dbr:Manuel_Pinto_da_Costa .

  ?miguelMauraOffice dbo:heldBy dbr:Miguel_Maura .
  
  FILTER (lang(?office1Label) = ""en"" && lang(?office2Label) = ""en"")
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
78,16,train,Give me the associated musical artist of Stuart Tosh and band member of the associated musical artist of David Paton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Stuart Tosh's associated musical artist
  ?stuartTosh dbo:musicalArtist dbr:Stuart_Tosh .
  
  # Get the band of that musical artist
  ?musicalArtist dbo:member ?bandMember .

  # Ensure this band member is also associated with David Paton
  ?davidPaton dbo:musicalArtist dbr:David_Paton ;
              dbo:member ?bandMember .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
23,6,train,Give me the entity in Colombia and party of Roy Barreras.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . <http://dbpedia.org/resource/Roy_Barreras> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Roy Barreras""@en .
  OPTIONAL { ?person dbo:memberOfParty ?party . }
  FILTER (lang(?person) = 'en')
}
```

This query does the following:
- Uses `dbo:Politician` to identify Roy Barreras as a politician.
- Utilizes `foaf:name` to match ""Roy Barreras"" with the English language tag.
- Attempts to find any political party (`?party`) that Roy Barreras is associated with using `dbo:memberOfParty`.",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
263,17,train,"Give me the parent of Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne and parent of the person born as Hon. Mary Frances Bowes-Lyon.","SELECT ?result WHERE { <http://dbpedia.org/resource/Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Identify Patrick Bowes-Lyon, 15th Earl of Strathmore and Kinghorne
  dbr:Patrick_Bowes-Lyon,_15th_Earl_of_Strathmore_and_Kinghorne dbo:child ?patrickChild .
  
  # Identify Hon. Mary Frances Bowes-Lyon
  dbr:Hon._Mary_Frances_Bowes-Lyon dbo:child ?maryChild .

  # Find the common parent of both individuals
  ?parent dbo:child ?patrickChild ;
          dbo:child ?maryChild .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
782,44,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds and band of the band member of Eric Clapton.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Step 1: Identify Nicholas Michael Curran who is a musical artist
  ?person dbo:birthName ""Nicholas Michael Curran""@en .
  ?person rdf:type dbo:MusicalArtist .

  # Step 2: Find associated musical artists of this person
  ?association dbo:associatedBandOrMusicArtist ?associatedArtist .
  
  # Step 3: Reference The Fabulous Thunderbirds and Eric Clapton's band
  OPTIONAL { ?associatedArtist dbr:The_Fabulous_Thunderbirds . }
  OPTIONAL {
    ?claptonBandMember dbo:memberOf ?band .
    ?band dbr:Eric_Clapton .
    ?association dbo:associatedBandOrMusicArtist ?claptonBandMember .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
871,1,train,"Give me the parent of Edward Stanley, 17th Earl of Derby.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edward_Stanley,_17th_Earl_of_Derby> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Edward Stanley, 17th Earl of Derby""@en .
  OPTIONAL { ?person dbo:childOf ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
769,16,train,"Give me the player in the person born, that is an athlete and a soccer player and a sports manager and a soccer manager, on 1981-12-01 and player in the manager, that is a sports manager and a soccer manager, of Hong Kong C Team.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1981-12-01""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Hong_Kong_C_Team> <http://dbpedia.org/ontology/manager> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:birthDate ""1981-12-01""^^xsd:date .
  ?person dbo:occupation [a dbo:SportsManager, dbo:SoccerManager] .
  
  ?managerTeam dbp:team dbr:Hong_Kong_C_Team .
  ?managerTeam dbo:player ?person .
}
```

This query does the following:
- Selects a person who is an athlete and plays soccer.
- Ensures the person's birth date matches December 1, 1981.
- Confirms the person has occupations as both a sports manager and a soccer manager.
- Checks if this person is associated with managing the Hong Kong C Team.",4,10,5,2,2,3,2,20,0,0,2,0,0.0,0
119,49,train,"Give me the tenant of the administration, that is Spanish, of the reference to Spanish Socialist Workers' Party and office of the leader of 2009 Galician regional election.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain>. ?result <http://dbpedia.org/ontology/headquarter> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ?v0 . <http://dbpedia.org/resource/2009_Galician_regional_election> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Spanish Socialist Workers' Party""@en . ?v2 <http://dbpedia.org/property/office> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Spanish Socialist Workers' Party""@en .
  
  ?election dbo:winner ?party ;
            dbo:electionDate ?date .

  FILTER(YEAR(?date) = 2009 && CONTAINS(LCASE(STR(?election)), ""galicia""))

  ?administration dbo:leader ?leader ;
                  dbo:politicalParty ?party .

}
```

This query does the following:
- Identifies the Spanish Socialist Workers' Party.
- Finds elections where this party was a winner, specifically filtering for those in Galicia in 2009.
- Retrieves the leader of the administration associated with that election and political party.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
398,5,train,Who is the writer of The First Glove?,SELECT ?result WHERE { <http://dbpedia.org/resource/The_First_Glove> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?work dcterms:title ""The First Glove""@en .
  ?work dbo:author ?person .
  ?person foaf:name ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
203,24,train,"Give me the military force of Battle of Cape Finisterre (1805) and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForce ?bayneConflict ?conflictForce WHERE {
  # Retrieve military forces involved in the Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_(1805) dbo:militaryConflicts [
      a dbo:MilitaryConflict ;
      dbo:participatingMilitaryUnit ?battleForce .
    ]
  }
  
  # Retrieve military conflicts associated with William Bayne
  OPTIONAL {
    dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryConflicts ?bayneConflict .
    
    # Get the forces involved in those conflicts
    ?bayneConflict a dbo:MilitaryConflict ;
                   dbo:participatingMilitaryUnit ?conflictForce .
  }
}
```",3,5,4,2,2,3,3,71,0,0,4,0,0.0,0
103,13,train,Give me the professional in the profession of Shatrughan Sinha.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Shatrughan_Sinha> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  # Find Shatrughan Sinha's profession
  dbr:Shatrughan_Sinha dbo:occupation ?profession .
  
  # Find other people with the same profession
  ?person a dbo:Person ;
          dbo:occupation ?sameProfession ;
          rdfs:label ?name .
  
  FILTER(?sameProfession = ?profession)
  FILTER(LANG(?name) = 'en')
  
  # Exclude Shatrughan Sinha from results
  FILTER(?person != dbr:Shatrughan_Sinha)
}
ORDER BY ?name
LIMIT 10
```",2,2,3,2,1,3,3,71,0,0,58032,0,0.0,0
706,11,train,Give me the birthplace of the awardee of Sangeet Natak Akademi Fellowship and birthplace of Smita Patil.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Sangeet_Natak_Akademi_Fellowship> . <http://dbpedia.org/resource/Smita_Patil> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthplace ?smitaPatilBirthplace WHERE {
  # Find a Sangeet Natak Akademi Fellowship awardee
  ?awardee dbo:award ""Sangeet_Natak_Akademi_Fellowship"" .
  ?awardee dbo:birthPlace ?awardeeBirthplace .

  # Find Smita Patil and her birthplace
  dbr:Smita_Patil dbo:birthPlace ?smitaPatilBirthplace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
687,27,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/coach> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find Marcelo Sarmiento's birthdate
  VALUES ?marceloSarmientoBirthDate {
    (dbr:Marcelo_Sarmiento dbo:birthday ""1975-10-23""^^xsd:date)
  }
  
  # Find individuals who are both soccer players and managers
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager ;
          dbp:birthday ?birthDate .
  
  # Filter by birthdate matching Marcelo Sarmiento's
  FILTER (?birthDate = ?marceloSarmientoBirthDate)
  
  # Retrieve the team associated with that individual
  OPTIONAL { ?person dbo:team ?team }
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
375,5,train,"Give me the native, that is an artist and a musical artist, of London.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  ?artist dbo:nationality dbr:United_Kingdom .
  ?artist dbo:birthPlace dbr:London .
  ?artist a dbo:MusicalArtist .
}
```",1,3,2,1,1,3,2,20,13,2,644,0.8666666666666667,0.0197869101978691,0.03869047619047619
782,24,train,Give me the associated musical artist of Nick Curran and band of the band member of Eric Clapton.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nick_Curran> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Eric_Clapton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickCurranArtist ?ericClaptonBandMember ?band 
WHERE {
  # Find associated musical artists of Nick Curran
  OPTIONAL {
    ?nickCurran a dbo:MusicalArtist ;
                foaf:name ""Nick Curran"" .
    ?nickCurran dbo:associatedMusicalArtist ?nickCurranArtist .
  }

  # Find band members of Eric Clapton and their bands
  OPTIONAL {
    ?ericClapton a dbo:MusicalArtist ;
                 foaf:name ""Eric Clapton"" .
    ?bandMember dbo:memberOfBand ?band ;
                dbo:associatedMusicalArtist ?ericClapton .
    ?band dbo:bandName ?bandName .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
23,24,train,Give me the party of the father of Sofía Petro and entity in the country of Daniel Elahi Galán.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Sofía_Petro> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Daniel_Elahi_Galán> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?entityInCountry
WHERE {
  # Part 1: Find Sofía Petro's father and his political party
  dbr:Sof%C3%ADa_Petro dbo:parent dbr:Gustavo_Petro .
  dbr:Gustavo_Petro dbo:party ?fatherParty .

  # Part 2: Identify Daniel Elahi Galán's country and find an entity from there
  dbr:Daniel_El%C3%A1i_Gal%C3%A1n dbo:nationality dbr:Colombia .
  dbr:Colombia dbo:wikiPageRedirects ?entityInCountry .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
87,22,train,"Give me the actor of the movie, that is a work and a film, with Iliza Shlesinger and spouse of the awardee of List of awards and nominations received by Janusz Kamiński.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/List_of_awards_and_nominations_received_by_Janusz_Kamiński> . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find movies that are both a work and a film
  ?movie dbo:type/dbo:subClassOf* dbo:Film .
  
  # Ensure Iliza Shlesinger acted in the movie
  ?movie dbo:starring dbr:Iliza_Shlesinger .

  # Find Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbp:spouse ?spouse .

  # Ensure the actor is from a film that fits all criteria
  ?movie dbo:starring ?actor .
  
  FILTER(?actor != dbr:Iliza_Shlesinger)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
203,38,train,"Give me the military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bayneMilitaryForce ?calderMilitaryForce WHERE {
  # Find William Bayne's military force during a war
  ?bayneEvent dbo:type dbr:Military_conflict ;
              dbo:agent dbr:William_Bayne_(Royal_Navy_officer) .
  ?bayneEvent dbo:military_force ?bayneMilitaryForce .

  # Find Robert Calder's military force during an event
  ?calderEvent dbo:type ?eventType ;
               dbo:agent dbr:Robert_Calder .
  FILTER(?eventType IN (dbr:Military_conflict, dbr:Societal_event)) .
  ?calderEvent dbo:military_force ?calderMilitaryForce .

}
```",4,8,5,2,2,3,3,71,0,0,5,0,0.0,0
412,7,train,Give me the war of Konstantinos Ventiris and war of Napoleon Zervas.,SELECT ?result WHERE { <http://dbpedia.org/resource/Napoleon_Zervas> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  VALUES ?war { 
    dbr:Greek_Civil_War
  }
  
  OPTIONAL {
    ?war dbo:participatedIn [
      a dbo:MilitaryConflict ;
      rdfs:label ?participantLabel .
    ]
    FILTER(CONTAINS(LCASE(?participantLabel), ""konstantinos ventiris"") || CONTAINS(LCASE(?participantLabel), ""napoleon zervas""))
  }
  
  OPTIONAL {
    ?war dbo:description ?description .
  }
}
```

This query attempts to find the Greek Civil War and then checks for participants or related entities that might be associated with Konstantinos Ventiris and Napoleon Zervas. It retrieves a description of the war if available.",2,2,3,1,2,2,3,28,0,0,9,0,0.0,0
871,35,train,"Give me the parent of the awardee of Commander of the Royal Victorian Order and father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/awards> ""Commander of the Royal Victorian Order""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Find the awardee of Commander of the Royal Victorian Order
  ?awardee dbo:award <http://dbpedia.org/resource/Commander_of_the_Royal_Victorian_Order> .

  # Step 2: Find the parent of this awardee
  ?parent dbo:child ?awardee .

  # Step 3: Identify the child of Frederick Stanley, 16th Earl of Derby who is a politician
  ?politician dbo:child dbr:Fredrick_Stanley_16th_Earl_of_Derby ;
              rdf:type dbo:Politician .

  # Step 4: Find the father of that child
  ?parent2 dbo:child ?politician .
  
  # Ensure the parent from step 2 is the same as the parent from step 4
  FILTER (?parent = ?parent2)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
103,47,train,"Give me the actor of the movie, that is a television show, with Richard E. Grant and professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Richard_E._Grant> . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find a movie that is also a television show featuring Richard E. Grant
  ?movie dbo:type dbr:Television_show ;
         dbo:starring dbr:Richard_E._Grant .

  # Find an actor from this movie who is also a politician and acted in ""Ab Kya Hoga""
  ?actor dbo:profession dbr:Actor ;
         dbo:actedIn ?movie, dbr:Ab_Kya_Hoga ;
         dbo:occupation dbr:Politician .
}
```",5,7,6,3,2,3,3,71,0,0,28,0,0.0,0
472,24,train,"Give me the administration of the person born, that is a royalty, as Prince Christian of Schleswig-Holstein-Sonderburg-Beck and administration of the mayor of Duchy of Schleswig.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Duchy_of_Schleswig> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Prince Christian of Schleswig-Holstein-Sonderburg-Beck""@en . ?result <http://dbpedia.org/property/leader> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?administration WHERE {
  # Find Prince Christian of Schleswig-Holstein-Sonderburg-Beck
  VALUES ?person { 
    dbr:Prince_Christian_of_Schleswig-Holstein-Sonderburg-Beck 
  }
  
  OPTIONAL {
    ?person dbo:positionHeld ?administration .
  }

  # Find the mayor of Duchy of Schleswig
  ?mayor a dbo:Mayor ;
         dbo:officeHolderOf dbr:Duchy_of_Schleswig .

  BIND(?mayor AS ?person)
  
  OPTIONAL {
    ?mayor dbo:positionHeld ?administration .
  }
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
347,37,train,"Give me the father of the child of the parent of Archduke Charles Joseph of Austria and child of Ferdinand II, Holy Roman Emperor.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Charles_Joseph_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
    # Step 1: Find the parent of Archduke Charles Joseph of Austria
    ?parent dbo:child dbr:Archduke_Charles_Joseph_of_Austria .

    # Step 2: Find any child of this parent
    ?child dbo:parent ?parent .

    # Step 3: Identify a child of Ferdinand II, Holy Roman Emperor
    ?ferdinandChild dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .

    # Step 4: Check if the child from step 2 is the same as the child from step 3
    FILTER (?child = ?ferdinandChild)

    # Find the father of this overlapping child
    ?father dbo:parent ?child .
}
```

This query assumes that DBpedia has structured data for these historical figures and their relationships. The `FILTER` clause ensures we are looking at a common child between the parent of Archduke Charles Joseph and Ferdinand II.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
68,0,train,Give me the father of Isabella of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1247 wdt:P22 ?father .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
258,16,train,"Give me the alma mater of the person born, that is a politician, as Eleonora Menicucci de Oliveira and establishment of the founding date of Federal University of Paraíba.","SELECT ?result WHERE { <http://dbpedia.org/resource/Federal_University_of_Paraíba> <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/foundingDate> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Eleonora Menicucci de Oliveira""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?foundingDate
WHERE {
  # Find Eleonora Menicucci de Oliveira's alma mater
  dbr:Eleonora_Menicucci_de_Oliveira dbo:almaMater ?almaMater .

  # Find the founding date of Federal University of Paraíba
  dbr:Federal_University_of_Paraíba dbo:foundingDate ?foundingDate .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
249,4,train,Give me the native of Jamshedpur and native of India.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/India> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jamshedpur> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  # Find people native to Jamshedpur
  { 
    ?person dbo:nativePlace dbr:Jamshedpur .
    ?person rdfs:label ?name .
    FILTER (LANG(?name) = 'en')
  }
  
  UNION
  
  # Find people native to India
  { 
    ?person dbo:nativePlace dbr:India .
    ?person rdfs:label ?name .
    FILTER (LANG(?name) = 'en')
  }
}
ORDER BY ?name",2,2,3,1,2,2,2,9,0,0,21,0,0.0,0
399,8,train,Give me the band member of Emilia (Bulgarian singer) and professional in the profession of Jamie T.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jamie_T> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Emilia_(Bulgarian_singer)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Emilia's band members
  ?emilia dbo:member ?bandMember .
  
  FILTER (str(?emilia) = ""Emilia_(Bulgarian_singer)"")

  # Get Jamie T's profession
  dbr:Jamie_T dbo:profession ?jamieTProfession .

  # Check if the band member has a similar profession to Jamie T
  OPTIONAL { ?bandMember dbo:profession ?bandMemberProfession . }
  
  FILTER (?bandMemberProfession = ?jamieTProfession)
}
```

This query does the following:
- It identifies Emilia's band members using the `dbo:member` property.
- It retrieves Jamie T's profession with `dbo:profession`.
- It checks if any of Emilia's band members have a profession that matches Jamie T's.",3,3,4,2,2,2,2,9,0,0,4,0,0.0,0
198,12,train,"Give me the force of Quincy Adams Gillmore and entity in Charleston, South Carolina.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Charleston,_South_Carolina> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Quincy_Adams_Gillmore> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gillmoreForce ?charlestonEntity WHERE {
  # Find Quincy Adams Gillmore and his military force or rank
  ?gillmore a dbo:MilitaryPerson ;
            foaf:name ""Quincy Adams Gillmore"" ;
            dbo:militaryRank ?rank .
  
  OPTIONAL { ?gillmore dbo:commanded ?force . }
  
  # Find an entity related to Charleston, South Carolina
  ?charlestonEntity a dbo:Place ;
                   foaf:name ""Charleston, South Carolina"" .

  # Optional: Check if Gillmore had any connection to Charleston
  OPTIONAL {
    ?gillmore dbo:placeOfBirth ?birthPlace .
    FILTER(?birthPlace = dbr:Charleston,_South_Carolina)
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
859,8,train,Give me the associated musical artist of the associated musical artist of James Plotkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Plotkin> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?secondLevelArtist WHERE {
  # Find artists associated with James Plotkin
  ?plotkin dbr:James_Plotkin .
  ?plotkin dbo:associatedMusicalArtist ?firstLevelArtist .

  # For each of those artists, find their associated artists
  ?firstLevelArtist dbo:associatedMusicalArtist ?secondLevelArtist .
}
```",2,2,3,2,1,3,2,20,0,0,13,0,0.0,0
687,35,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1979-11-03 and player in the person born, that is an athlete, on 1955-02-22.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/birthDate> ""1979-11-03""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/coach> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Find the person born on 1979-11-03 who is a soccer player and manager
  ?person1 dbo:birthDate ""1979-11-03""^^xsd:date ;
           dbo:sport dbr:Soccer ;
           dbo:occupation dbr:Soccer_manager .
  
  # Ensure this person is also a soccer player
  ?person1 dbo:playerFor ?team .

  # Find the athlete born on 1955-02-22
  ?person2 dbo:birthDate ""1955-02-22""^^xsd:date ;
           dbo:sport ?sport .
  
  FILTER(?person1 != ?person2)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
687,6,train,"Give me the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find the TV show resource for ""All or Nothing: Manchester City""
  ?show dbr:All_or_Nothing:_Manchester_City .
  
  # Identify actors associated with this show
  ?show dbo:starring ?actor .

  # Ensure the actor is also a soccer player and an athlete
  ?actor dbo:sport ?sport .
  FILTER (?sport = dbr:Soccer || ?sport = dbr:Athletics)

  # Optionally, ensure they are specifically known as athletes (if needed)
  OPTIONAL { 
    ?athlete dbo:occupation dbr:Athlete .
    ?actor owl:sameAs ?athlete .
  }
}
```

This query does the following:
- Identifies the TV show ""All or Nothing: Manchester City"" using its DBpedia resource.
- Retrieves actors (`dbo:starring`) associated with this show.
- Filters these actors to ensure they are involved in soccer and athletics, either directly through their sports involvement or by being recognized as athletes.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
871,15,train,Who is the awardee of the award of Rodney Lees?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Rodney_Lees> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award ;
        rdfs:label ""Rodney Lees""@en .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
557,6,train,"Give me the claim to fame, that is a work, of Cora Sue Collins.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Cora_Sue_Collins> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person a dbo:Writer .
  ?person foaf:name ""Cora Sue Collins"" .
  ?person dbo:notableWork ?work .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
353,0,train,Give me the child of Roger II of Sicily.,SELECT ?result WHERE { <http://dbpedia.org/resource/Roger_II_of_Sicily> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  OPTIONAL { ?person dbo:child ?child . }
  FILTER (?person = dbr:Roger_II_of_Sicily)
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
468,12,train,"Give me the child of the father, that is a royalty, of Peter IV of Aragon and reference to Peter IV.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peter_IV_of_Aragon> <http://dbpedia.org/property/father> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Peter IV""@en . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Reference to Peter IV of Aragon
  dbr:Peter_IV_of_Aragon dbo:father dbr:James_II_of_Aragon .
  
  # Find children of James II of Aragon who are royalty
  dbr:James_II_of_Aragon dbo:child ?child .
  ?child a dbo:Monarch .

  # Bind the father to the query result for reference
  BIND(dbr:James_II_of_Aragon AS ?father)
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
58,6,train,Give me the spouse of Linda Bruckheimer and producer of 12 Strong.,SELECT ?result WHERE { <http://dbpedia.org/resource/12_Strong> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Linda_Bruckheimer> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?linda a dbo:Person ;
         foaf:name ""Linda Bruckheimer""@en .
  
  ?linda dbo:spouse ?spouse .

  ?movie dbo:producer ?spouse ;
         dbp:title ""12 Strong""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
905,8,train,"Give me the child, that is a royalty, of Béla IV of Hungary.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Béla_IV_of_Hungary> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?belav4 dbo:child ?child .
  FILTER (strstarts(str(?belav4), ""http://dbpedia.org/resource/B%C3%A9la_IV_of_Hungary""))
  OPTIONAL { ?child dbo:royalty ?isRoyalty . }
  FILTER EXISTS { ?child dbo:royalty ?isRoyalty . }
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
609,30,train,Give me the birth place of Vince Gilligan and birth place of the author of El Deafo and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/El_Deafo> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Vince_Gilligan 
    dbr:Cecily_Bell 
    dbr:Glenn_Youngkin
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```

This query uses the `dbo:birthPlace` property to find the birthplaces of the specified individuals. The `VALUES` clause is used to specify the entities for Vince Gilligan, Cece Bell (listed as Cecily Bell in DBpedia), and Glenn Youngkin.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
80,56,train,Give me the professional in the alter ego of the series of The Golden Master and actor of ATL (film) and actor of the movie with .,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Golden_Master> <http://dbpedia.org/ontology/series> ?v0 . <http://dbpedia.org/resource/ATL_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Assuming ""The Golden Master"" is a series with a known alter ego or main character
  ?series rdfs:label ""The Golden Master""@en .
  
  # Find the professional or character associated with this series
  ?character dbo:associatedWith ?series ;
             dbo:profession dbr:Actor .

  # Check if this person acted in the film ""ATL""
  ?atlFilm dbo:title ""ATL""@en ;
           dbo:starring ?actor .
  
  # Ensure they also acted in another movie
  ?otherMovie dbo:title ?title ;
              dbo:starring ?actor .
  
  FILTER(?title != ""ATL"")
}
```

This query assumes that:
- The series ""The Golden Master"" has a known alter ego or main character.
- The film ""ATL"" is correctly identified in DBpedia with the title ""ATL.""
- The actor's involvement in another movie is checked by ensuring the title is not ""ATL.""",6,6,7,3,3,3,3,71,0,0,4,0,0.0,0
288,4,train,Give me the theme of Dikhawa and native of Lahore.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dikhawa> <http://dbpedia.org/ontology/openingTheme> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Lahore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?theme WHERE {
  ?work rdfs:label ""Dikhawa""@en .
  FILTER (LANG(?work) = 'en') .

  OPTIONAL { ?work dbo:genre ?theme . }
  
  OPTIONAL {
    ?person dbo:birthPlace dbr:Lahore .
    ?person dbo:associatedWith ?work .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
225,15,train,Give me the entity in the region of the time zone in Kiyosu and birthplace of Chieko Asakawa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Chieko_Asakawa> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Kiyosu> <http://dbpedia.org/ontology/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Find Kiyosu's time zone
  OPTIONAL { 
    dbr:Kiyosu dbo:timeZone ?tz .
    ?tz dbo:region ?region1 .
  }

  # Find Chieko Asakawa's birthplace and its region
  OPTIONAL {
    dbr:Chieko_Asakawa dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:region ?region2 .
  }
  
  # Match the regions to find a common entity
  VALUES ?entity { ?region1 ?region2 }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
203,22,train,"Give me the military force of the force, that is an event and a societal event, of Robert Calder and commander in French campaign in Egypt and Syria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find Robert Calder
  ?calder a dbo:Person ;
          foaf:name ""Robert Calder""@en .
  
  # Identify his role in the French campaign in Egypt and Syria
  ?event dbo:participatedIn dbr:French_campaign_in_Egypt_and_Syria ;
         dbo:commander ?calder .

  # Retrieve the military force associated with him during this event
  ?event dbo:militaryForce ?militaryForce .
}
```

This query does the following:
- It identifies Robert Calder as a person.
- It looks for events where he was a commander, specifically in the French campaign in Egypt and Syria.
- It retrieves the military force associated with that event.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
412,15,train,Give me the war of Konstantinos Ventiris and war of the leader of National Party of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/Konstantinos_Ventiris> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/National_Party_of_Greece> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Konstantinos Ventiris and his wars
  OPTIONAL {
    dbr:Konstantinos_Ventiris dbo:participatedIn ?ventirisWar .
    ?ventirisWar rdf:type dbo:MilitaryConflict ;
                 rdfs:label ?warLabelVentiris .
  }
  
  # Leader of the National Party of Greece and their wars
  OPTIONAL {
    ?leader a dbo:Person ;
            foaf:name ""Leader of the National Party of Greece"" ;
            dbo:memberOf dbr:National_Party_of_Greece .
    ?leader dbo:participatedIn ?partyWar .
    ?partyWar rdf:type dbo:MilitaryConflict ;
              rdfs:label ?warLabelParty .
  }
  
  # Combine results
  BIND(COALESCE(?warLabelVentiris, ?warLabelParty) AS ?war)
}
ORDER BY ?war",3,3,4,2,2,2,3,28,0,0,9,0,0.0,0
78,7,train,Give me the band member of The Alan Parsons Project and associated musical artist of Stuart Tosh.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Alan_Parsons_Project> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find band members of The Alan Parsons Project
  ?bandMember dbo:memberOf dbr:The_Alan_Parsons_Project .
  
  # Find associated musical artists of Stuart Tosh
  ?stuartTosh a dbo:MusicalArtist ;
              foaf:name ""Stuart Tosh"" .

  OPTIONAL {
    ?associatedArtist dbo:associatedWith ?stuartTosh .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
347,18,train,"Give me the commander in Thirty Years' War and child of Ferdinand II, Holy Roman Emperor and father of Eleonore of Austria, Queen of Poland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eleonore_of_Austria,_Queen_of_Poland> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find a person who is a child of Ferdinand II, Holy Roman Emperor
  ?person dbo:parent dbr:Ferdinand_II,_Holy_Roman_Emperor .
  
  # Ensure this person was involved as a commander in the Thirty Years' War
  ?person dbo:occupation dbr:Commander_in_the_Thirty_Years'_War .

  # Verify that this person is the father of Eleonore of Austria, Queen of Poland
  ?eleonore dbo:father ?person .
  FILTER (strstarts(str(?eleonore), ""Eleonore_of_Austria,_Queen_of_Poland""))
}
```

This query uses DBpedia's ontology to find a person who matches all the specified criteria. It assumes that relevant properties like `dbo:parent`, `dbo:occupation`, and `dbo:father` are used in DBpedia to represent these relationships.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
23,19,train,"Give me the party of the person born, that is a politician, as Roy Leonardo Barreras Montealegre and party of Gustavo Petro and entity in Colombia.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Colombia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustavo_Petro> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Roy Leonardo Barreras Montealegre""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
  VALUES (?person ?label) { 
    (dbr:Roy_Leonardo_Barreras_Montealegre ""Roy Leonardo Barreras Montealegre"")
    (dbr:Gustavo_Petro ""Gustavo Petro"")
  }
  
  ?person dbo:nationality dbr:Colombia .
  ?person dbo:party ?party .
  FILTER(LANG(?label) = 'en')
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
203,30,train,"Give me the military force of Battle of Fort Royal and commander in French campaign in Egypt and Syria and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?campaignCommander ?calderEvent ?militaryForce ?forceMilitary
WHERE {
  # Battle of Fort Royal
  dbr:Battle_of_Fort_Royal dbo:militaryCommander ?commander .
  
  # French campaign in Egypt and Syria
  dbr:French_campaign_in_Egypt_and_Syria dbo:militaryCommander ?campaignCommander .

  # Event involving Robert Calder
  {
    SELECT ?calderEvent WHERE {
      ?calderEvent dbo:agent dbr:Robert_Calder .
      ?calderEvent a dbo:Event .
      ?calderEvent dbo:socialEvent true .
    }
  }

  # Military force involved in the Battle of Fort Royal
  OPTIONAL { 
    ?battle dbo:militaryForce ?militaryForce .
  }

  # Military force involved in Robert Calder's event
  OPTIONAL {
    ?calderEvent dbo:militaryForce ?forceMilitary .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
905,27,train,"Give me the child of the child, that is a royalty, of the predecessor of Stephen V of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Stephen_V_of_Hungary> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Find Stephen V of Hungary
  ?stephenV a dbo:Monarch ;
            dbp:country ""Kingdom of Hungary""^^xsd:string ;
            dbp:name ""Stephen V of Hungary""@en .

  # Find his predecessor
  ?predecessor dbo:successor ?stephenV .

  # Find a child of the predecessor
  ?child dbo:parent ?predecessor ;
         a dbo:Person .

  # Find a grandchild (child of that child) who is royalty
  ?grandchild dbo:parent ?child ;
              a dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
311,14,train,"Give me the band member of the writer of the album, that is a musical work and a work and an album, of Sappy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v0 . <http://dbpedia.org/resource/Sappy> <http://dbpedia.org/ontology/album> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the album ""Sappy""
  ?album a dbo:Album ;
         rdfs:label ""Sappy""@en .
  
  # Find the writer(s) of the album
  ?album dbo:composer ?writer .

  # Check if the writer is part of any band
  OPTIONAL { 
    ?bandMember dbo:member ?band .
    ?band dbo:member ?writer .
  }
}
```

This query does the following:
- Identifies an entity labeled ""Sappy"" as an album.
- Finds the composer(s) or writers associated with this album.
- Checks if these composers are members of any band and retrieves those band members.",3,6,4,3,1,3,2,20,0,0,123,0,0.0,0
37,7,train,"Give me the birthplace of Scott LaFaro and birthplace of the writer, that is an artist, of The Miseducation of Lauryn Hill.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Miseducation_of_Lauryn_Hill> <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Scott_LaFaro> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  { 
    # Scott LaFaro
    VALUES ?person { dbr:Scott_LaFaro }
    ?person dbo:birthPlace ?birthPlace .
  } UNION {
    # Lauryn Hill
    VALUES ?person { dbr:Lauryn_Hill }
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",3,4,4,2,2,2,2,9,1,3,0,0.25,1.0,0.4
731,17,train,"Give me the force of William Tennant (Royal Navy officer) and war of the commander in the reference, that is a societal event and a military conflict, to Sinking of Prince of Wales and Repulse.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Sinking of Prince of Wales and Repulse""@en . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/William_Tennant_(Royal_Navy_officer)> . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?command ?event ?conflict WHERE {
  # Find William Tennant as a Royal Navy officer
  ?tennant a dbo:NavyOfficer ;
           foaf:name ""William Tennant"" .

  # Identify his command or role in events
  OPTIONAL { ?tennant dbo:commanderOf ?ship . }
  
  # Link to societal events and military conflicts
  OPTIONAL { ?event dbo:relatedEvent ?tennant .
             ?conflict dbo:participatedIn ?tennant ;
                       a dbo:MilitaryConflict } .

  # Specifically relate to the Sinking of HMS Prince of Wales and HMS Repulse
  FILTER EXISTS {
    ?sinking dbr:Sinking_of_HMS_Prince_of_Wales_and_HMS_Repulse .
    OPTIONAL { ?sinking dbo:involvedShip ?ship . }
  }

  # Return relevant information
  BIND(?tennant AS ?command)
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
609,2,train,Give me the birth place of Cece Bell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q2075010 dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
595,48,train,"Give me the spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton and commander in the war, that is a disease and a societal event, of United States Navy.",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/property/author> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find a book written by Hillary Clinton
  ?book dbo:author dbr:Hillary_Clinton .
  
  # Ensure the work is a book and a written work
  ?book rdf:type dbo:Book .

  # Find the spouse of Hillary Clinton who is also a politician and office holder
  ?spouse dbo:spouse dbr:Hillary_Clinton ;
          rdf:type dbo:Politician ;
          dbo:officeHolder true .
  
  # Optional: Connect to a societal event involving the United States Navy
  OPTIONAL {
    ?event dbo:commander ?spouse ;
           dbo:participatingOrganisation dbr:United_States_Navy .
  }
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
361,6,train,Give me the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?director WHERE {
  ?actor a dbo:Actor .
  ?actor dbp:profession ?actorProfession .

  ?director a dbo:Director .
  ?director dbp:profession ?directorProfession .
}
```

This query selects individuals who are classified as an ""Actor"" and a ""Director"", retrieving their respective professions. You can modify the class `dbo:Director` to any other profession you're interested in.",2,2,3,1,2,2,3,28,0,0,4210,0,0.0,0
628,58,train,"Give me the band member of Uncle Murda and person born as the birth name of Bobby Shmurda and native of the award, that is a region and American and a state and a settlement, of the awardee, that is a band, of New York (state).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Uncle_Murda> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/New_York_(state)> . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Uncle Murda member
  ?uncleMurdaMember dbo:memberOf dbr:Uncle_Murda .
  
  # Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?bobbyBirthName .
  
  # Person with the same birth name as Bobby Shmurda
  ?person dbo:birthName ?bobbyBirthName .

  # Award related to a region, state, and settlement in New York
  ?award dbo:recipient ?band ;
         dbo:location dbr:New_York_(state) .
  
  # The band is from the same place as the award
  ?band dbo:hometown ?place .
  ?place rdf:type/(dbo:Country|dbo:StateOrProvince|dbo:Settlement) .

  # Ensure the person is related to both Uncle Murda and the award-winning band
  ?person dbo:memberOf ?uncleMurdaMember ;
          dbo:memberOf ?band .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
198,23,train,"Give me the war of the awardee of the show, that is an award, of United States Congress.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/United_States_Congress> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?war WHERE {
  ?award dbo:givenBy dbr:United_States_Congress .
  ?show dbo:recipient ?awardee .
  ?awardee dbo:participatedIn ?war .
}
```",3,4,4,3,1,3,3,71,0,0,611,0,0.0,0
203,42,train,"Give me the commander in the war, that is a military conflict and an event, of 30th (Cambridgeshire) Regiment of Foot and military force of Battle of Fort Royal and military force of the force, that is an event and a societal event, of Robert Calder.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Robert_Calder> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/30th_(Cambridgeshire)_Regiment_of_Foot> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the commander for the 30th Regiment in a military conflict
  ?conflict dbo:militaryConflictOf dbr:30th_(Cambridgeshire)_Regiment_of_Foot .
  ?conflict dbo:commander ?commander .

  # Ensure this commander is also linked to the Battle of Fort Royal
  ?battle dbo:commander ?commander ;
          rdf:type dbo:MilitaryEngagement ;
          rdfs:label ""Battle of Fort Royal""@en .

  # Link the commander to an event involving Robert Calder
  ?event dbo:agent ?commander ;
         dbo:agent dbr:Robert_Calder .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
19,3,train,Give me the person born as Caroline Louise Bevan Symonds.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Caroline Louise Bevan Symonds""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbp:birthName ""Caroline Louise Bevan Symonds"" . }
}
```",1,1,2,1,1,2,2,9,1,1048575,0,9.5367431640625e-07,1.0,1.9073468138248312e-06
595,52,train,"Give me the commander in Third Taiwan Strait Crisis and author of the work, that is a written work and a book and a work, of Bill Clinton and spouse of the author, that is a politician and an office holder, of the work, that is a book and a written work, of Hillary Clinton.",SELECT ?result WHERE { <http://dbpedia.org/resource/Third_Taiwan_Strait_Crisis> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/property/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Hillary_Clinton> . ?v3 <http://dbpedia.org/property/author> ?v2 . ?v5 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Clinton> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?author ?spouse WHERE {
  # Find the commander in the Third Taiwan Strait Crisis
  ?crisis dbo:wikiPageRedirects dbr:Third_Taiwan_Strait_Crisis .
  ?crisis dbo:commander ?commander .

  # Find works authored by Bill Clinton that are books and written works
  ?work dbo:author dbr:Bill_Clinton ;
        a dbo:Book ;
        a dbo:WrittenWork .

  # Check if Hillary Clinton is an author of the work
  OPTIONAL { ?work dbo:author dbr:Hillary_Clinton . }

  # Find spouse of Bill Clinton who is a politician and office holder
  ?spouse dbo:spouse dbr:Bill_Clinton ;
          a dbo:Politician, dbo:OfficeHolder .

  # Ensure Hillary Clinton is the spouse
  FILTER (?spouse = dbr:Hillary_Clinton)
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
737,7,train,Give me the parent of Archduchess Margarete Sophie of Austria.,SELECT ?result WHERE { <http://dbpedia.org/resource/Archduchess_Margarete_Sophie_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Margarete_Sophie_of_Austria }
  ?person dbo:property:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
293,8,train,Give me the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?birthName .
  FILTER (lang(?birthName) = ""en"")
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Ann Sothern. You can find this by searching for her on DBpedia or using a SPARQL endpoint to query for her entity.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
557,43,train,"Give me the professional in  and producer of the claim to fame, that is a work, of the actor of Johnny Doughboy and producer of A Star Is Born (1937 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Johnny_Doughboy> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/A_Star_Is_Born_(1937_film)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?producer ?work WHERE {
  # Find the actor who played Johnny Doughboy in ""A Guy Named Joe""
  ?role dbo:characterName ""Johnny Doughboy"" .
  ?role dbo:film dbr:A_Guy_Named_Joe .
  ?role dbo:actor ?actor .

  # Find the producer of A Star Is Born (1937)
  ?producerRole dbo:film dbr:A_Star_Is_Born_(1937_film) .
  ?producerRole dbo:producer ?producer .

  # Identify a common work that is their claim to fame
  ?work dbo:actor ?actor ;
        dbo:producer ?producer .

}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
39,26,train,"Give me the professional in the alter ego of the creation, that is a fictional character and a comics character, of Walter B. Gibson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Walter_B._Gibson> . ?result <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character dbo:creator dbr:Walter_B._Gibson .
  ?character dbo:fictionalWork dbr:The_Shadow .
  ?character dbo:alterEgo ?alterEgo .
}
```

This query does the following:
- It looks for a character created by Walter B. Gibson.
- It identifies that this character is associated with ""The Shadow.""
- It retrieves the alter ego of this character.",3,5,4,3,1,3,3,71,0,0,39640,0,0.0,0
609,31,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Glenn Youngkin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Glenn_Youngkin> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  # Awardee related to Vince Gilligan (e.g., Breaking Bad)
  {
    SELECT DISTINCT ?person WHERE {
      VALUES ?award { 
        dbr:Primetime_Emmy_Award_for_Outstanding_Directing_for_a_Single_Camera_Half-Hour_Comedy
        dbr:Primetime_Emmy_Award_for_Outstanding_Writing_for_a_Drama_Series
        # Add more relevant awards if needed
      }
      ?person dbo:award ?award .
    }
  }

  UNION

  # Awardee related to Glenn Youngkin (e.g., political awards)
  {
    SELECT DISTINCT ?person WHERE {
      VALUES ?award { 
        dbr:Order_of_the_Thistle
        # Add more relevant awards if needed
      }
      ?person dbo:award ?award .
    }
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?person dbo:birthPlace ?birthPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
263,14,train,Give me the native of Middlesex and parent of the person born as Hon. Mary Frances Bowes-Lyon.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Middlesex> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Hon. Mary Frances Bowes-Lyon""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?nativePlace WHERE {
  # Identify Princess Elizabeth (Queen Mother)
  VALUES ?princess { dbr:Princess_Elizabeth_(1900-2002) }

  # Find her parents
  ?princess dbo:mother ?mother .
  ?princess dbo:father ?father .

  # Check if either parent is native of Middlesex
  OPTIONAL {
    ?parent dbo:nativePlace dbr:Middlesex .
    BIND(?parent AS ?nativeParent)
  }

  # Return the parent who is native to Middlesex and their native place
  VALUES ?parent { ?mother ?father }
  FILTER(EXISTS { ?nativeParent })
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
203,51,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v4 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Step 1: Identify William Bayne and his military involvement
  ?bayne a dbo:MilitaryPerson ;
         foaf:name ""William Bayne"" ;
         dbo:militaryConflict ?war .

  # Step 2: Find the award of Knight Commander of the Order of the Bath
  ?award a dbo:Award ;
         dbo:recipient ?awardee .
  
  FILTER (?awardee = ?bayne) 
  FILTER (str(?award) = ""Knight Commander of the Order of the Bath"")

  # Step 3: Identify military force involved in the war
  ?war dbo:militaryForce ?militaryForce .

  # Step 4: Ensure the event is both a military and societal event
  ?event a dbo:MilitaryEvent, dbo:SocietalEvent ;
         dbo:relatedWar ?war .
  
  FILTER (?event = ?war)
}
```",5,9,6,3,2,3,3,71,0,0,24,0,0.0,0
270,4,train,Give me the person decedent at Melbourne and predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Melbourne> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorName WHERE {
  ?ada dbr:Ada_Watson . # Assuming Ada Watson is represented by this resource
  ?predecessor dbo:successor ?ada .
  ?predecessor dbo:deathPlace dbr:Melbourne .
  ?predecessor rdfs:label ?predecessorName .
  FILTER(LANG(?predecessorName) = ""en"")
}
```

This query assumes:
- Ada Watson is represented by `dbr:Ada_Watson`.
- The relationship between predecessors and successors is captured using `dbo:successor`.
- The death place is specified with `dbo:deathPlace`.

Adjust the resource URI for Ada Watson if it differs in DBpedia.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
633,10,train,"Give me the father of the child, that is a royalty, of Francis I, Duke of Lorraine.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Francis_I,_Duke_of_Lorraine> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Identify Francis I, Duke of Lorraine
  dbr:François_Ier,_Duke_of_Lorraine a dbo:Monarch ;
    dbo:spouse ?spouse .

  # Find children who are royalty
  ?child dbo:parent dbr:François_Ier,_Duke_of_Lorraine ;
         a dbo:Monarch .

  # Determine the father of each child
  OPTIONAL { ?child dbo:father ?father . }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
687,49,train,"Give me the player in the person born, that is an athlete, on 1955-02-22 and team of the person born, that is a soccer player and a soccer manager, on the birthday of Marcelo Sarmiento.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/ontology/coach> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ""1955-02-22""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Marcelo_Sarmiento> <http://dbpedia.org/ontology/birthDate> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athleteTeam WHERE {
  # Find Marcelo Sarmiento's birthday
  VALUES ?marceloSarmientoBirthday {
    (dbr:Marcelo_Sarmiento dbo:birthday ""1955-02-22""^^xsd:date)
  }

  # Find the athlete born on 1955-02-22
  ?athlete a dbo:Athlete ;
           dbp:birthday ?birthday .
  FILTER (?birthday = ""1955-02-22""^^xsd:date)

  # Find the soccer player and manager with the same birthday as Marcelo Sarmiento
  ?soccerPerson a dbo:SoccerPlayer, dbo:SportsManager ;
                dbp:birthday ?marceloSarmientoBirthday .

  # Get the team of the athlete
  ?athleteTeam dbo:team ?athlete .
  
  # Ensure the soccer person is associated with the same team as the athlete
  ?soccerPerson dbo:team ?athleteTeam .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
347,10,train,"Give me the child of Ferdinand II, Holy Roman Emperor and commander in Thirty Years' War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ferdinand_II,_Holy_Roman_Emperor> . <http://dbpedia.org/resource/Thirty_Years'_War> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?childName WHERE {
  # Find Ferdinand II, Holy Roman Emperor
  ?ferdinand2 a dbo:HolyRomanEmperor ;
              foaf:name ""Ferdinand II"" .

  # Find his children
  ?ferdinand2 dbo:spouse ?spouse .
  ?spouse dbo:child ?child .

  # Check if the child was a commander in the Thirty Years' War
  ?child dbo:occupation dbr:Thirty_Years_War_commander ;
         foaf:name ?childName .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
68,20,train,"Give me the child of the commander, that is a royalty, in Siege of Padua and father of Catherine of Austria, Queen of Portugal and father of Isabella of Austria.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Isabella_of_Austria> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Catherine_of_Austria,_Queen_of_Portugal> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Siege_of_Padua> <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?event dbo:event = dbr:Siege_of_Padua .
  ?commander dbo:commanderOf ?event .
  ?child dbo:parent ?commander ;
         a dbo:RoyalFamilyMember .

  ?catherine dbo:father ?person ;
             a dbo:Catherine_of_Austria,_Queen_of_Portugal .
  
  ?isabella dbo:father ?person ;
            a dbo:Isabella_of_Austria .

  FILTER(?child = ?person)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
119,18,train,Give me the office of Alberto Núñez Feijóo and tenant of Santiago de Compostela and tenant of Spain.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Santiago_de_Compostela> . <http://dbpedia.org/resource/Alberto_Núñez_Feijóo> <http://dbpedia.org/property/office> ?result . ?result <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Spain> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  VALUES ?person { dbr:Alberto_Núñez_Feijóo }
  
  # Find offices held in Santiago de Compostela
  OPTIONAL {
    ?person dbo:officeLocation dbr:Santiago_de_Compostela .
    ?person dbo:honoraryTitle ?office .
  }

  # Find offices held in Spain
  OPTIONAL {
    ?person dbo:country dbr:Spain .
    ?person dbo:honoraryTitle ?office .
  }
  
  FILTER(?office != """")
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
198,44,train,"Give me the entity in the birthplace, that is a settlement and American, of Henry Clay Lewis and force of the awardee of Gillmore Medal and war of Amasa Tracy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Henry_Clay_Lewis> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Gillmore_Medal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement WHERE {
  # Henry Clay Lewis's birthplace
  VALUES (?henryClayLewis) { dbr:Henry_Clay_Lewis }
  ?henryClayLewis dbo:nationality dbr:United_States .
  ?henryClayLewis dbo:birthPlace ?birthPlace .

  # Gillmore Medal Awardee and associated war
  ?gillmoreAwardee dbo:award dbr:Gillmore_Medal .
  ?gillmoreAwardee dbo:nationality dbr:United_States .
  ?gillmoreAwardee dbo:servedInMilitaryConflict ?war .

  # Amasa Tracy and associated war
  VALUES (?amasaTracy) { dbr:Amasa_Tracy }
  ?amasaTracy dbo:nationality dbr:United_States .
  ?amasaTracy dbo:servedInMilitaryConflict ?tracyWar .

  # Ensure the wars are the same
  FILTER(?war = ?tracyWar)

  # Check if birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Bind the settlement to the result
  BIND(?birthPlace AS ?settlement)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
203,39,train,"Give me the military force of the force, that is an event and a societal event, of the awardee of Knight Commander of the Order of the Bath and military force of Battle of Fort Royal.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Fort_Royal> . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Commander_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?event WHERE {
  ?person dbo:honourReceived dbr:Knight_Commander_of_the_Order_of_the_Bath .
  ?person dbo:militaryService ?militaryForce .
  ?militaryForce dbo:event dbr:Battle_of_Fort_Royal .

  OPTIONAL { ?person dbo:relatedEvent ?event . }
}
```

This query attempts to:

- Identify a person (`?person`) who has received the honor of Knight Commander of the Order of the Bath.
- Ensure this person was involved in a military force (`?militaryForce`) that participated in the Battle of Fort Royal.
- Optionally find any related event or societal event (`?event`) associated with this person.",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
628,52,train,"Give me the person born as the birth name of Bobby Shmurda and band member of the associated musical artist, that is a musical artist, of the member, that is an artist and a musical artist, of GS9 and native of Florida.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/GS9> <http://dbpedia.org/ontology/bandMember> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Florida> . <http://dbpedia.org/resource/Bobby_Shmurda> <http://dbpedia.org/property/birthName> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Bobby Shmurda's birth name
  dbr:Bobby_Shmurda dbo:birthName ?birthName .

  # Find a band member of an associated musical artist with Bobby Shmurda
  ?associatedArtist dbo:member ?bandMember .
  ?bandMember dbp:name ?personName .
  
  # Ensure the person is a musical artist
  ?person dbr:Bobby_Shmurda dbo:associatedMusicalArtist ?associatedArtist ;
          dbo:birthPlace ?birthPlace .

  # Check if the person is a member of GS9
  ?gs9Member dbo:member ?person .
  ?gs9Member dbp:name ""GS9""@en .

  # Ensure the person is native to Florida
  ?birthPlace rdfs:label ?placeLabel .
  FILTER (CONTAINS(LCASE(?placeLabel), ""florida""))

  # Bind the person's name to ensure it matches
  FILTER (?personName = ?person)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
80,29,train,Give me the actor of the album of What You Know (T.I. song) and professional in  and actor of Shelby Oaks.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the album ""Urban Legend"" by T.I.
  dbr:T.I._discography dbo:album dbr:Urban_Legend_(T.I.album) .
  
  # Find the actor associated with the album
  OPTIONAL { 
    dbr:Urban_Legend_(T.I.album) dbo:artist ?actor .
  }
  
  # Find the film ""Shelby Oaks"" and its actors
  OPTIONAL {
    dbr:Shelby_Oaks dbo:starring ?actor .
  }

  FILTER(?actor != dbr:T.I.)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
531,28,train,Give me the office of Miguel Maura and office of Mariano Rajoy and tenant of the residence of Alberto Ruiz-Gallardón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Miguel_Maura> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Mariano_Rajoy> <http://dbpedia.org/property/office> ?result . <http://dbpedia.org/resource/Alberto_Ruiz-Gallardón> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/headquarter> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office WHERE {
  VALUES ?person { 
    dbr:Miguel_Maura 
    dbr:Mariano_Rajoy 
    (SELECT ?tenant WHERE {
      ?residence dbo:resident ?tenant .
      FILTER (?tenant = dbr:Alberto_Ruiz-Gallardón)
    })
  }
  
  ?person dbo:office ?office .
}
```

This query does the following:
- It uses `PREFIX` to define common namespaces for DBpedia ontology (`dbo`) and resources (`dbr`).
- The `SELECT` statement retrieves two variables: `?person` (the person) and `?office` (the office they hold).
- The `VALUES` clause specifies the individuals of interest: Miguel Maura, Mariano Rajoy, and a subquery to find the tenant of Alberto Ruiz-Gallardón's residence.
- The subquery `(SELECT ?tenant WHERE { ... })` finds the person who is the resident (`dbo:resident`) of the residence associated with Alberto Ruiz-Gallardón.
- Finally, it retrieves the office held by each specified individual using `?person dbo:office ?office`.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
687,46,train,"Give me the player in the person born, that is an athlete, on the birthday of Marty Pollio and player in the actor, that is a soccer player and an athlete, of All or Nothing: Manchester City.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. <http://dbpedia.org/resource/Marty_Pollio> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/All_or_Nothing:_Manchester_City> <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athletePlayer ?actorSoccerPlayer
WHERE {
  # Find Marty Pollio's birthday
  VALUES ?martyPollio (dbr:Marty_Polio) { 
    ?martyPollio dbo:birthday ?birthday .
  }

  # Find a person born on the same day as Marty Pollio who is an athlete and a player
  ?person dbo:birthDate ?sameBirthday ;
          rdf:type dbo:Athlete ;
          dbo:sport dbr:Soccer ; # Assuming soccer, adjust if needed
          dbo:playerOfTeam ?team .
  
  FILTER (YEAR(?sameBirthday) = YEAR(?birthday) && MONTH(?sameBirthday) = MONTH(?birthday) && DAY(?sameBirthday) = DAY(?birthday))

  # Find an actor from ""All or Nothing: Manchester City"" who is also a soccer player and athlete
  ?actor dbo:role dbr:All_or_Nothing:_Manchester_City ;
         rdf:type dbo:Athlete ;
         dbo:sport dbr:Soccer ; # Assuming soccer, adjust if needed
         dbo:playerOfTeam ?team2 .

  # Ensure the same person is both an athlete player and actor soccer player
  FILTER (?athletePlayer = ?actorSoccerPlayer)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
531,6,train,"Give me the commander, that is an office holder and a politician, in Central African Republic Civil War.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Central_African_Republic_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find individuals involved as commanders in the Central African Republic Civil War
  ?commander dbo:occupation dbr:Commander .
  ?commander dbo:wikiPageWikiLink dbr:Central_African_Republic_Civil_War .

  # Ensure they are office holders
  ?commander dbo:officeHolderOf ?office .

  # Ensure they are politicians
  ?commander dbo:politicalParty ?party .
  
  FILTER NOT EXISTS { 
    ?commander rdf:type dbo:NonPolitician .
  }
}
```

This query does the following:
- Selects individuals (`?commander`) who have an occupation of ""Commander"" and are linked to the Central African Republic Civil War.
- Ensures these individuals hold some office (`dbo:officeHolderOf`).
- Confirms they are associated with a political party (`dbo:politicalParty`), indicating their role as politicians.",1,3,2,1,1,3,3,71,0,0,179,0,0.0,0
706,10,train,"Who is the actor of the movie, that is a movie and Indian, with Dipankar De?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Dipankar_De> . ?v0 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/India>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie dbo:country dbr:India ;
         dbo:starring ?coActor .
  
  FILTER EXISTS { ?coActor rdfs:label ""Dipankar De""@en }
  
  ?movie dbo:starring ?actor .
  
  FILTER (?actor != ?coActor)
}
```

This query does the following:
- Selects movies that are Indian (`dbo:country dbr:India`).
- Ensures Dipankar De is one of the actors in these movies.
- Finds other distinct actors (`?actor`) who starred in the same movie but are not Dipankar De.",2,4,3,2,1,3,2,20,0,0,17,0,0.0,0
87,21,train,"Give me the actor of Paradise (2013 film) and spouse of Janusz Kamiński and actor of the movie, that is a work and a film, with Audrey Hepburn.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Janusz_Kamiński> . ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ""Audrey Hepburn""@en . <http://dbpedia.org/resource/Paradise_(2013_film)> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?spouse WHERE {
  # Find the actor of ""Paradise"" (2013 film)
  ?movie dbo:title ""Paradise""@en .
  ?movie dbo:releaseDate ?date .
  FILTER(YEAR(?date) = 2013) .
  ?movie dbo:starring ?actor .

  # Find Janusz Kamiński's spouse
  dbr:Janusz_Kamiński dbo:spouse ?spouse .

  # Check if the actor of ""Paradise"" is also the spouse and acted with Audrey Hepburn
  ?spouse rdfs:label ?actorLabel .
  FILTER(CONTAINS(LCASE(?actorLabel), LCASE(str(?actor)))) .
  
  # Find a movie where this person acted with Audrey Hepburn
  ?film dbo:starring ?spouse, dbr:Audrey_Hepburn .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
87,15,train,"Give me the actor of Always (1989 film) and actor of the movie, that is a work and a film, with Iliza Shlesinger.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Iliza_Shlesinger> . <http://dbpedia.org/resource/Always_(1989_film)> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alwaysActor ?ilizaMovieActor WHERE {
  # Find actors in ""Always"" (1989 film)
  ?movie a dbo:Film ;
         rdfs:label ""Always""@en .
  FILTER(YEAR(?movie) = 1989)
  
  ?actor dbo:actedIn ?movie .

  BIND(?actor AS ?alwaysActor)

  # Find movies that are both works and films featuring Iliza Shlesinger
  ?ilizaMovie a dbo:Film ;
              dbo:starring dbr:Iliza_Schlesinger .
  
  ?ilizaActor dbo:actedIn ?ilizaMovie .

  BIND(?ilizaActor AS ?ilizaMovieActor)
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
353,41,train,"Give me the child of Elvira of Castile, Queen of Sicily and father of the child, that is a royalty, of William I of Sicily and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v2 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Elvira of Castile and her child who is a royalty
  dbr:Elvira_of_Castile dbo:spouse dbr:Roger_I_of_Sicily .
  
  # Roger II of Sicily, the child of Elvira and Roger I
  ?child dbo:parent dbr:Elvira_of_Castile ;
         dbo:parent dbr:Roger_I_of_Sicily ;
         dbo:spouse ?spouse . # To ensure he is a royalty

  # Roger II of Sicily fathered William I of Sicily
  dbr:William_I_of_Sicily dbo:parent ?child .

  # Roger III, Duke of Apulia's parent relationship
  ?rogerIII dbo:parent ?parent .
  ?parent dbo:spouse ?spouse2 . # To ensure the lineage

  # Ensure the child is related to Roger III through his parent
  ?parent dbr:Roger_I_of_Sicily ;
          dbo:child ?child .

}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
293,23,train,Give me the party member of the ruling party in the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v2 <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/party> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyMember WHERE {
  # Find the landmark by elevation
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  
  FILTER(?elevation >= 20.1167 && ?elevation <= 20.117)

  # Get the country where this landmark is located
  ?landmark dbo:country ?country .

  # Find the ruling party in that country
  ?rulingParty dbp:country ?country ;
               a dbo:PoliticalParty .
  
  # Check if it's currently in power (this might require additional data or assumptions)
  OPTIONAL { 
    ?government dbp:party ?rulingParty ;
                a dbo:Government .
  }

  # Get a member of the ruling party
  ?partyMember dbo:memberOf ?rulingParty .
}
LIMIT 1",3,3,4,3,1,3,3,71,0,0,21514,0,0.0,0
668,16,train,"Give me the profession of the writer, that is a musical artist, of The Live Anthology.",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Live_Anthology> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?profession WHERE {
  # Find the author of ""The Live Anthology""
  ?work dbo:author ?author .
  
  # Ensure the work is ""The Live Anthology""
  VALUES ?work { dbr:The_Live_Anthology }
  
  # Check if the author is also a musical artist
  OPTIONAL { ?artist dbo:wikiPageRedirects ?author . FILTER EXISTS { ?artist rdf:type dbo:MusicalArtist } }

  # Get the profession of the author who is a musical artist
  OPTIONAL { ?author dbo:occupation ?profession }
  
  FILTER EXISTS { ?artist rdf:type dbo:MusicalArtist }
}
```",2,3,3,2,1,3,3,71,0,0,23,0,0.0,0
782,7,train,Give me the persona of Nick Curran.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nick_Curran> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?name ?description WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Nick Curran""@en .
  OPTIONAL { ?person rdfs:comment ?description . }
  FILTER (LANG(?description) = 'en')
}
```",1,1,2,1,1,3,3,71,0,2,1,0.0,0.0,0
293,3,train,Give me the landmark at elevation of 20.116800000000001347.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""20.116800000000001347""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Lighthouse .
  ?landmark dbo:elevation ?elevation .
  FILTER (?elevation = ""20.116800000000001347""^^xsd:float)
}
```",1,1,2,1,1,3,3,71,0,0,192,0,0.0,0
557,1,train,Give me the producer of The Adventures of Tom Sawyer (1938 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer_(1938_film)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  dbr:The_Adventures_of_Tom_Sawyer_(1938_film) dbo:productionCompany ?company .
  ?company foaf:name ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
198,36,train,"Give me the war of Amasa Tracy and entity in the birthplace, that is a settlement and American, of the person deceased on 1850-08-05.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. ?result <http://dbpedia.org/ontology/place> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/deathDate> ""1850-08-05""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Amasa_Tracy> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?birthplace WHERE {
  # Find Amasa Tracy's war
  dbr:Amasa_Tracy dbo:militaryConflict ?war .
  
  # Find the person who died on 1850-08-05
  ?person dbp:dateOfDeath ""1850-08-05""^^xsd:date ;
          dbp:birthPlace ?birthplace .

  # Ensure the birthplace is a settlement and American
  ?birthplace a dbo:Settlement ;
              dbo:country dbr:United_States .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
943,43,train,"Give me the reference to the alter ego of the reference to Lamont Cranston (radio, film and television) and child of Dawit I and father of Baeda Maryam I.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Dawit_I> . <http://dbpedia.org/resource/Baeda_Maryam_I> <http://dbpedia.org/property/father> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Lamont Cranston (radio, film and television)""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?description WHERE {
  VALUES ?lamontCranston { dbr:Lamont_Cranston }
  
  # Find the alter ego of Lamont Cranston
  ?lamontCranston dbo:alias ?alterEgo .
  
  # Ensure that the alter ego is related to radio, film, or television
  OPTIONAL {
    ?alterEgo dbo:wikiPageWikiLink ?mediaType .
    FILTER (
      ?mediaType IN (dbr:Radio, dbr:Film, dbr:Television)
    )
  }
  
  # Get a description of the alter ego
  ?alterEgo dbo:description ?description .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
492,22,train,Give me the death place of the actor of Color Me Dead and death place of the actor of The Sky Ranger (1928 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Color_Me_Dead> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/The_Sky_Ranger_(1928_film)> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorName (GROUP_CONCAT(?deathPlace; separator="", "") AS ?deathPlaces)
WHERE {
  # Find actors for ""Color Me Dead""
  {
    ?film dbr:Color_Me_Dead .
    ?film dbo:starring ?actor1 .
    ?actor1 rdfs:label ?actorName ;
            dbo:deathPlace ?deathPlace1 .
    FILTER (LANG(?actorName) = 'en')
  }
  
  UNION
  
  # Find actors for ""The Sky Ranger (1928 film)""
  {
    ?film dbr:The_Sky_Ranger_(1928_film) .
    ?film dbo:starring ?actor2 .
    ?actor2 rdfs:label ?actorName ;
            dbo:deathPlace ?deathPlace2 .
    FILTER (LANG(?actorName) = 'en')
  }
  
  # Bind death places to variables
  BIND(COALESCE(?deathPlace1, """") AS ?deathPlace)
}
GROUP BY ?actorName",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
80,55,train,Give me the professional in the alter ego of The Shadow and actor of the movie with  and actor of the album of What You Know (T.I. song).,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> """"@en . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v5 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # The Shadow's alter ego
  VALUES (?shadow) { dbr:The_Shadow }
  
  # Find the professional identity of The Shadow
  ?shadow dbo:alterEgo ?professionalIdentity .
  
  # Actor in a movie with ""and"" in its title
  ?movie dbo:title ?title ;
         dbo:starring ?actor1 .
  FILTER CONTAINS(LCASE(?title), ""and"") .

  # Actor associated with an album of T.I.'s song ""What You Know""
  ?album dbo:artist ?actor2 ;
         dbo:song dbr:What_You_Know_(T.I._song) .
  
  # Ensure the same person is linked to all three
  FILTER (?professionalIdentity = ?actor1 && ?actor1 = ?actor2)
}
```",6,6,7,2,3,3,3,71,0,0,4,0,0.0,0
782,22,train,"Give me the associated musical artist of the person born, that is a musical artist, as Nicholas Michael Curran and reference to The Fabulous Thunderbirds.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Nicholas Michael Curran""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://xmlns.com/foaf/0.1/name> ""The Fabulous Thunderbirds""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Nick Curran as a musical artist
  dbr:Nick_Curran dbo:birthName ""Nicholas Michael Curran"" .
  
  # Link Nick Curran to The Fabulous Thunderbirds through his role or association
  OPTIONAL { 
    ?association dbo:associatedBand dbr:The_Fabulous_Thunderbirds .
    ?association dbo:person dbr:Nick_Curran .
  }
  
  # Retrieve the associated musical artist
  ?association dbo:musicalArtist ?artist .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
472,19,train,"Give me the administration of Christian IX of Denmark and administration of Olaf I of Denmark and territory administered from the death place, that is a settlement, of Christian Ditlev Ammentorp Hansen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Christian_Ditlev_Ammentorp_Hansen> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Olaf_I_of_Denmark> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationChristianIX ?administrationOlafI ?deathPlaceSettlement ?administeredTerritory
WHERE {
  # Administration of Christian IX of Denmark
  OPTIONAL { 
    dbr:Christian_IX_of_Denmark dbo:positionHeld ?administrationChristianIX .
  }
  
  # Administration of Olaf I of Denmark
  OPTIONAL { 
    dbr:Olaf_I_of_Denmark dbo:positionHeld ?administrationOlafI .
  }

  # Death place of Christian Ditlev Ammentorp Hansen, which is a settlement
  OPTIONAL {
    dbr:Christian_Ditlev_Ammertorp_Hansen dbo:deathPlace ?deathPlaceSettlement .
    FILTER (isLiteral(?deathPlaceSettlement) && strstarts(str(?deathPlaceSettlement), ""http://dbpedia.org/resource/Category:Settlements_in_""))
  }

  # Territory administered from the death place
  OPTIONAL {
    ?administeredTerritory dbo:administrativeCenter ?deathPlaceSettlement .
  }
}
```",4,5,5,2,3,2,3,28,0,331,1,0.0,0.0,0
668,12,train,Give me the person born as Darryl Paa Kwesi Bannerman-Martin and professional in Musician.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Musician""@en . ?result <http://dbpedia.org/property/birthName> ""Darryl Paa Kwesi Bannerman-Martin""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Darryl Paa Kwesi Bannerman-Martin"" .
  ?person rdf:type dbo:Musician .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
270,0,train,Give me the predecessor of Ada Watson.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ada_Watson> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?person dbo:successor dbr:Ada_Lovelace .
  ?person rdfs:label ?predecessorLabel .
  FILTER (LANG(?predecessorLabel) = ""en"")
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
816,15,train,"Give me the movie, that is a work, with the person decedent at Los Angeles.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?movie ?person WHERE {
  ?movie a dbo:Film .
  ?movie dbo:director ?person ; 
         dbo:starring ?person . # Assuming director or starring roles
  OPTIONAL { ?person dbo:deathPlace dbr:Los_Angeles, California . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for common DBpedia namespaces.
- **SELECT**: We want to retrieve the movie and associated person.
- **?movie a dbo:Film**: This ensures we are selecting entities classified as films.
- **?movie dbo:director ?person ; dbo:starring ?person**: Links movies to persons through director or starring roles. You can adjust this based on specific relationships you're interested in (e.g., writer, producer).
- **OPTIONAL { ?person dbo:deathPlace dbr:Los_Angeles, California . }**: Filters persons who died in Los Angeles.

This query assumes that the death place is directly linked to a DBpedia resource for Los Angeles. Adjustments might be needed based on actual data availability and structure.",2,3,3,2,1,3,3,71,0,0,6475,0,0.0,0
412,4,train,"Give me the death place, that is a settlement, of Antonios Varthalitis.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antonios_Varthalitis> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Antonios Varthalitis""@en .
  ?person dbo:deathPlace ?location .
  ?location a dbo:Settlement .
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?location))) AS ?deathPlace)
}
```",1,2,2,1,1,2,3,28,0,1,1,0.0,0.0,0
311,16,train,"Give me the band member of the writer of No Alternative and associated musical artist of the associated musical artist, that is an artist, of R.E.M..",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/R.E.M.> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/No_Alternative> <http://dbpedia.org/property/writer> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify the writer of ""No Alternative""
  ?album dbo:writer ?writer .
  
  # Step 2: Find the album ""No Alternative""
  VALUES ?album { dbr:No_Alternative }
  
  # Step 3: Get band members associated with this writer
  ?bandMember dbo:member ?writer .

  # Step 4: Find associated musical artist of the band member
  ?associatedArtist dbo:associatedMusicalArtist ?bandMember .
  
  # Step 5: Ensure the associated artist is also an artist and connected to R.E.M.
  ?remBand dbo:member ?associatedArtist .
  VALUES ?remBand { dbr:R.E.M. }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
737,53,train,"Give me the child of the child, that is a royalty, of Archduke Charles Louis of Austria and predecessor of the child of the spouse, that is a royalty, of Archduchess Helena of Austria and child of Albrecht, Duke of Württemberg.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Albrecht,_Duke_of_Württemberg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Charles_Louis_of_Austria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduchess_Helena_of_Austria> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/property/father> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
    # Step 1: Archduke Charles Louis of Austria's child and their royal child
    ?charlesChild dbo:parent dbr:Archduke_Charles_Louis_of_Austria .
    ?royalGrandchild dbo:parent ?charlesChild ;
                     a dbo:Monarch .

    # Step 2: Albrecht, Duke of Württemberg's child who is royalty
    ?albrechtChild dbo:parent dbr:Albrecht,_Duke_of_W%C3%BCrttemberg .
    ?royaltyChild dbo:parent ?albrechtChild ;
                  a dbo:Monarch .

    # Step 3: Predecessor of the royalty child from step 2
    ?predecessor dbo:successor ?royaltyChild .

    # Final condition: Match the royal grandchild with the predecessor
    FILTER (?royalGrandchild = ?predecessor)
    
    # Return the result
    BIND(?royalGrandchild AS ?childOfChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
203,29,train,"Give me the commander in French campaign in Egypt and Syria and military force of the war, that is a military conflict and an event, of William Bayne (Royal Navy officer) and military force of Battle of Cape Finisterre (1805).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Cape_Finisterre_(1805)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_campaign_in_Egypt_and_Syria> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/William_Bayne_(Royal_Navy_officer)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?campaignMilitaryForce ?bayneWarMilitaryForce ?capeFinisterreMilitaryForce WHERE {
  # French campaign in Egypt and Syria commander
  OPTIONAL { 
    dbr:French_campaign_in_Egypt_and_Syria dbo:commander ?commander .
    ?commander dbo:militaryRank ?rank .
  }
  
  # Military force of the War involving William Bayne
  OPTIONAL {
    ?bayneWar a dbo:MilitaryConflict ;
              dbo:participatingMilitaryForce ?bayneWarMilitaryForce .
    dbr:William_Bayne_(Royal_Navy_officer) dbo:militaryRank ?bayneRank .
  }
  
  # Military force of the Battle of Cape Finisterre (1805)
  OPTIONAL {
    dbr:Battle_of_Cape_Finisterre_1805 dbo:participatingMilitaryForce ?capeFinisterreMilitaryForce .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
159,44,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco and successor of Yurii Khmelnytsky and reference to the writer of Always the Love Songs.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Jean Baptist, Comte d'Arco
  ?jeanBaptist a dbo:Person ;
               foaf:name ""Jean Baptist, Comte d'Arco""@en .

  # Identify the war that is both a TV show and a societal event
  ?war dbo:wikiPageRedirects ?tvShow .
  ?war dbo:wikiPageDisambiguates ?historicalEvent .

  # Find Yurii Khmelnytsky's successor
  ?yuriiKhmelnytsky a dbo:Person ;
                   foaf:name ""Yurii Khmelnytsky""@en .
  ?successor dbo:succeededBy ?yuriiKhmelnytsky ;
             foaf:name ?name .

  # Find the writer of ""Always the Love Songs""
  ?writer a dbo:Writer ;
          foaf:name ?writerName .
  ?book dbo:author ?writer ;
        foaf:name ""Always the Love Songs""@en .

  # Connect these elements to find the commander
  ?commander dbo:commanded ?war ;
             foaf:name ?name .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
80,44,train,Give me the actor of Shelby Oaks and actor of the album of What You Know (T.I. song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/What_You_Know_(T.I._song)> <http://dbpedia.org/ontology/album> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Shelby_Oaks> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor1Label ?actor2Label ?professionalLabel WHERE {
  # Actor of Shelby Oaks
  OPTIONAL {
    ?shelbyOaks dbr:Shelby_Oaks .
    ?shelbyOaks dbo:starring ?actor1 .
    ?actor1 rdfs:label ?actor1Label .
    FILTER(LANG(?actor1Label) = ""en"")
  }

  # Actor of the album of What You Know (T.I. song)
  OPTIONAL {
    ?album dbr:Urban_Cowboys_(album) .
    ?album dbo:artist ?actor2 .
    ?actor2 rdfs:label ?actor2Label .
    FILTER(LANG(?actor2Label) = ""en"")
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    ?shadow dbr:The_Shadow .
    ?shadow dbo:alterEgoOf ?professional .
    ?professional rdfs:label ?professionalLabel .
    FILTER(LANG(?professionalLabel) = ""en"")
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
353,24,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of Elvira of Castile, Queen of Sicily.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Elvira_of_Castile,_Queen_of_Sicily> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Identify children of William I of Sicily and Elvira of Castile
  ?child dbo:parent dbr:William_I_of_Sicily .
  ?child dbo:parent dbr:Elvira_of_Castile,_Queen_of_Sicily .

  # Ensure the child is royalty
  ?child a dbo:Monarch ;
         dbo:country dbr:Sicily .

  # Retrieve the father of this child (who should be William I of Sicily)
  ?child dbo:parent ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
270,6,train,"Give me the person decedent at the birth place, that is a settlement, of Mark Tournier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Mark_Tournier> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent WHERE {
  # Find Mark Tournier's birthplace
  dbr:Mark_Tournier dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Find persons who died at this location
  ?decedent dbo:deathPlace ?birthPlace .
}
```",2,3,3,2,1,2,2,9,809,0,0,1.0,1.0,1.0
353,7,train,"Who is the spouse, that is a royalty, of Constance of Burgundy?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Constance_of_Burgundy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?constance a dbo:Person ;
             dbp:name ""Constance of Burgundy""@en .
  ?constance dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""princess"")) }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
353,46,train,"Give me the father of the child, that is a royalty, of William I of Sicily and child of the parent of the child, that is a royalty, of Roger II of Sicily.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Roger_II_of_Sicily> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_I_of_Sicily> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
    # Step 1: Identify William I of Sicily's child who is royalty
    ?child1 dbo:parent dbr:William_I_of_Sicily .
    ?child1 a dbo:Monarch .

    # Step 2: Identify Roger II of Sicily's child who is royalty and find their parent
    ?child2 dbo:parent dbr:Roger_II_of_Sicily .
    ?child2 a dbo:Monarch .
    ?parent2 dbo:child ?child2 .

    # Step 3: Find the father of the child identified in step 1
    ?father dbo:child ?child1 .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
159,14,train,"Give me the commander in the war, that is a television show and a societal event, of Jean Baptist, Comte d'Arco.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jean_Baptist,_Comte_d'Arco> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:agent dbr:Jean_Baptiste,_Comte_d'Arco .
  ?tvShow dbo:genre dbr:Military_Drama .
  ?tvShow dbo:basedOn dbr:Historical_Figure .
  ?tvShow dbo:character dbr:Jean_Baptiste,_Comte_d'Arco .
  
  OPTIONAL { ?event dbo:commander ?commander . }
  OPTIONAL { ?tvShow dbo:commander ?commander . }

  FILTER(?commander != dbr:Jean_Baptiste,_Comte_d'Arco)
}
```

This query does the following:
- It looks for events where Jean Baptiste, Comte d'Arco is an agent.
- It searches for TV shows that are military dramas and based on historical figures, specifically involving Jean Baptiste, Comte d'Arco as a character.
- It attempts to find a commander associated with both the event and the TV show, ensuring it's not Jean Baptiste himself.",2,4,3,2,1,3,3,71,0,0,40,0,0.0,0
609,13,train,"Give me the birth place of the governor, that is a politician, of Virginia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?governor a dbo:Governor ;
            dbo:stateOrProvinceServed dbr:Virginia ;
            foaf:name ""Glenn Youngkin""@en .
  ?governor dbo:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
687,16,train,"Give me the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . ?v1 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga .
  
  # Identify actors in these films
  ?film dbo:starring ?actor .

  # Ensure the actor is a soccer player and an athlete
  ?actor dbo:sport dbr:Soccer ;
         dbo:occupation dbr:Athlete .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
756,22,train,"Give me the manager of the team, that is a soccer club season and a sports season and a sports team season, of Thomas Letsch and manager of VfL Bochum.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v1 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Thomas_Letsch> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the team managed by Thomas Letsch
  ?team dbo:manager dbr:Thomas_Letsch .
  
  # Ensure it's a sports club season and a sports team season
  ?team rdf:type dbo:SoccerClub ;
        dbo:sportsTeamSeason ?season .

  # Find VfL Bochum's manager
  dbr:VfL_Bochum dbo:manager ?bochumManager .
  
  # Check if the same person manages both teams
  FILTER (?manager = ?bochumManager)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
159,29,train,Give me the reference to the writer of Always the Love Songs and commander in Great Turkish War and successor of Yurii Khmelnytsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Turkish_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Yurii_Khmelnytsky> <http://dbpedia.org/ontology/successor> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Always_the_Love_Songs> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:author dbr:Always_the_Love_Songs .
  ?person dbo:militaryCommanderOf dbr:Great_Turkish_War .
  ?person dbo:succeededBy dbr:Yurii_Khmelnytsky .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
859,10,train,"Give me the associated musical artist of the member, that is a musical artist, of Khlyst (band).",SELECT ?result WHERE { <http://dbpedia.org/resource/Khlyst_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?memberArtist ?associatedArtist WHERE {
  # Identify the band ""Khlyst""
  VALUES ?band { dbr:Khlyst }

  # Find members of the band
  ?band dbo:bandMember ?member .

  # Filter members who are also musical artists
  ?member a dbo:MusicalArtist .

  # Retrieve associated musical artists for each member-artist
  ?member dbo:associatedBand ?associatedArtist .
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
687,33,train,"Give me the player in Juan Carlos Molina (footballer) and player in the actor, that is a soccer player and an athlete, of the film, that is a work, of Manuel Huerga.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Juan_Carlos_Molina_(footballer)> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Manuel_Huerga> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInJuanCarlosMolina ?actorSoccerPlayerAthlete WHERE {
  # Find players associated with Juan Carlos Molina
  dbr:Juan_Carlos_Molina_(footballer) dbo:player ?playerInJuanCarlosMolina .

  # Find films directed by Manuel Huerga
  ?film dbo:director dbr:Manuel_Huerga ;
        dbo:actor ?actorSoccerPlayerAthlete .

  # Ensure the actor is also a soccer player and athlete
  ?actorSoccerPlayerAthlete dbo:sport dbr:Soccer ;
                           dbo:athlete ?actorSoccerPlayerAthlete .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
103,26,train,"Give me the professional in the profession of the actor, that is a politician, of Ab Kya Hoga.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ab_Kya_Hoga> <http://dbpedia.org/ontology/starring> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:film dbr:Ab_Kya_Hoga .
  ?actor dbo:occupation dbr:Politician .
}
```",3,4,4,3,1,3,3,71,0,0,58032,0,0.0,0
756,23,train,"Give me the manager of the player, that is a sports club and an organisation and a soccer club, in the successor, that is a football league season and a sports team season and a sports season, of 2006–07 VfL Bochum season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2006–07_VfL_Bochum_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballLeagueSeason>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>. ?v2 <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the 2006–07 VfL Bochum season
  dbr:VfL_Bochum_season_2006%E2%80%9307 dbo:sportsTeamSeasonInLeague dbr:2._Bundesliga.

  # Determine its successor season (2007–08)
  ?successorSeason a dbo:SoccerClubSeason ;
                  dbo:predecessor dbr:VfL_Bochum_season_2006%E2%80%9307 ;
                  dbo:sportsTeamInLeague dbr:2._Bundesliga .

  # Find the soccer club associated with that season
  ?successorSeason dbo:club ?soccerClub .
  
  # Ensure the club is a sports club and an organization
  ?soccerClub rdf:type dbo:SoccerClub ;
              rdf:type dbo:SportsOrganization ;
              rdf:type dbo:Organisation .

  # Retrieve the manager of that club
  ?soccerClub dbo:manager ?manager .
}",3,9,4,3,1,3,3,71,0,0,1,0,0.0,0
38,10,train,"Give me the work, that is a written work and a work, of the commander, that is an office holder, in Korean conflict.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Korean_conflict> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?work ?title WHERE {
  ?commander a dbo:OfficeHolder ;
             dbo:office ?office .
  
  FILTER EXISTS { 
    ?office dbo:startDate ?start ;
            dbo:endDate ?end .
    FILTER (?start <= ""1953-07-27""^^xsd:date && ?end >= ""1950-06-25""^^xsd:date)
  }
  
  OPTIONAL {
    ?commander dbo:work ?work .
    ?work a dbo:CreativeWork ;
          rdfs:label ?title .
  }
}
ORDER BY ?title
LIMIT 10",2,5,3,2,1,3,2,20,0,0,52,0,0.0,0
609,34,train,Give me the birth place of the awardee of the award of Vince Gilligan and birth place of Cece Bell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Cece_Bell> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  {
    # Vince Gilligan
    VALUES ?person { dbr:Vince_Gilligan }
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  } UNION {
    # Cece Bell
    VALUES ?person { dbr:Cecily_Bell }
    OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  }
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
119,15,train,"Give me the entity in Poland and war of the commander in the force, that is a television show and a military conflict, of Maria I of Portugal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Maria_I_of_Portugal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Poland> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find entities related to Maria I of Portugal
  ?relatedEntity dbo:wikiPageRedirects dbr:Maria_I_of_Portugal .
  
  # Look for a commander role or military force association
  ?relatedEntity dbo:commanderInForce ?force .
  
  # Ensure the entity is both a television show and a military conflict
  ?entity rdf:type dbo:TelevisionShow ;
          rdf:type dbo:MilitaryConflict .
  
  # Link the entity to the related entity found above
  ?relatedEntity dbo:wikiPageRedirects ?entity .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
386,15,train,Give me the entity in the birth place of Elena Žalinkevičaitė-Petrauskienė and war of Alexander Lvovich Davydov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Alexander_Lvovich_Davydov> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Elena_Žalinkevičaitė-Petrauskienė> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceElena ?birthPlaceAlexander WHERE {
  # Elena Žalinkevičaitė-Petrauskienė's birthplace
  OPTIONAL { 
    dbr:Elena_Žalinkevičaitė-Petrauskienė dbo:birthPlace ?birthPlaceElena .
  }
  
  # Alexander Lvovich Davydov's birthplace
  OPTIONAL {
    dbr:Aleksandr_Lvovich_Davydov dbo:birthPlace ?birthPlaceAlexander .
  }
}
```",3,3,4,2,2,2,3,28,0,3,2,0.0,0.0,0
628,8,train,"Give me the award, that is a region and American and a state and a settlement, of Coro de la Pontificia Universidad Católica de Puerto Rico.",SELECT ?result WHERE { <http://dbpedia.org/resource/Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico> <http://dbpedia.org/property/awards> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?coro dbo:associatedWith dbr:Coro_de_la_Pontificia_Universidad_Católica_de_Puerto_Rico .
  ?coro dbo:awarded ?award .
  
  ?state a dbo:State ;
         dbo:partOf dbr:United_States_of_America ;
         dbo:location dbr:Puerto_Rico .

  ?settlement a dbo:Settlement ;
              dbo:locatedIn ?state .

  ?award dbo:relatedPlace ?settlement .
}
```

This query does the following:
- It identifies an entity (`?coro`) associated with ""Coro de la Pontificia Universidad Católica de Puerto Rico.""
- It looks for awards (`?award`) related to this entity.
- It ensures that the award is connected to a settlement within a state that is part of the United States and located in Puerto Rico.",1,5,2,1,1,3,3,71,0,0,3,0,0.0,0
78,6,train,Give me the associated musical artist of Stuart Tosh and associated musical artist of Billy Lyall.,SELECT ?result WHERE { <http://dbpedia.org/resource/Billy_Lyall> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Stuart_Tosh> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist (GROUP_CONCAT(?associatedArtist; separator="", "") AS ?associatedArtists)
WHERE {
  VALUES (?person) { 
    dbc:Stuart_Tosh 
    dbc:Billy_Lyall
  }
  
  ?person dbo:musicalArtist ?artist .
  OPTIONAL {
    ?artist dbp:associatedBandOrMusicalArtist ?associatedArtist .
  }
}
GROUP BY ?artist
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
89,46,train,"Give me the spouse of the father, that is a royalty, of Myat Hpone Pyo and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . <http://dbpedia.org/resource/Myat_Hpone_Pyo> <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Myat Hpone Pyo
  ?myathpone_pyo a dbo:Person ;
                 rdfs:label ""Myat Hpone Pyo""@en .

  # Step 2: Find the father of Myat Hpone Pyo
  ?father dbo:child ?myathpone_pyo .

  # Step 3: Check if the spouse of the father is royalty
  ?spouse dbo:spouse ?father ;
          a dbo:Monarch .

  # Step 4: Identify Minye Kyawswa
  ?minye_kyawswa a dbo:Person ;
                 rdfs:label ""Minye Kyawswa""@en .

  # Step 5: Find the child of Minye Kyawswa
  ?child dbo:parent ?minye_kyawswa .

  # Step 6: Ensure the parent of this child is Myat Hpone Pyo's father
  ?parent dbo:child ?child .
  FILTER (?parent = ?father)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
769,6,train,Give me the player in Ye Jia and player in Lai Sun Cheung.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lai_Sun_Cheung> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Ye_Jia> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?yeJiaPlayer ?laiSunCheungPlayer
WHERE {
  # Assuming Ye Jia and Lai Sun Cheung are sports teams or clubs
  ?yeJiaTeam a dbo:SoccerClub ; 
             dbo:member ?yeJiaPlayer .
  
  ?laiSunCheungTeam a dbo:SoccerClub ; 
                    dbo:member ?laiSunCheungPlayer .

  # Replace these with the actual DBpedia resources for Ye Jia and Lai Sun Cheung
  VALUES ?yeJiaTeam { dbr:Ye_Jia }
  VALUES ?laiSunCheungTeam { dbr:Lai_Sun_Cheung }
}
```

This query assumes that Ye Jia and Lai Sun Cheung are represented as soccer clubs in DBpedia, which is a common scenario for sports teams. The `dbo:SoccerClub` class and `dbo:member` property are used to find players associated with these teams.

Please replace `dbr:Ye_Jia` and `dbr:Lai_Sun_Cheung` with the correct resource identifiers if they differ in DBpedia.",2,2,3,1,2,3,2,20,0,0,2,0,0.0,0
293,22,train,Give me the party member of Republican Party (United States) and person born as the birth name of Ann Sothern.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ann_Sothern> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Republican_Party_(United_States)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:partyMemberOf dbr:Republican_Party_(United_States) .
  ?person dbo:birthName ""Ann Sothern""@en .
}
```

This query does the following:
- Uses `dbo:partyMemberOf` to find individuals who are members of the Republican Party.
- Uses `dbo:birthName` to filter those whose birth name is Ann Sothern.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
609,27,train,"Give me the birth place of the author of the reference, that is American, to El Deafo.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""El Deafo""@en . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?author a dbo:Writer ;
          foaf:name ""Cece Bell""@en ;
          dbo:nationality dbr:United_States .
  OPTIONAL { ?author dbo:birthPlace ?birthPlace . }
  ?book dbo:author ?author ;
        rdfs:label ""El Deafo""@en .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
353,11,train,"Give me the child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Roger III, Duke of Apulia
  ?roger3 a dbo:Person ;
          dbp:name ""Roger III, Duke of Apulia""@en .
  
  # Find his parent(s)
  ?parent dbo:spouse|dbo:child ?roger3 .

  # Find the children of that parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
89,60,train,"Give me the predecessor of the child of the spouse, that is a royalty, of Saw Min Phyu and child of the parent of the child of Minye Kyawswa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Min_Phyu> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?predecessor WHERE {
  # Step 1: Identify Saw Min Phyu's spouse
  ?sawMinPhyu dbo:spouse ?spouse .

  # Step 2: Find the child of this spouse who is royalty
  ?spouse dbo:child ?royalChild .
  ?royalChild rdfs:label ?royaltyTitle .
  FILTER(CONTAINS(LCASE(?royaltyTitle), ""king"") || CONTAINS(LCASE(?royaltyTitle), ""queen""))

  # Step 3: Determine the predecessor of this royal child
  ?royalChild dbo:predecessor ?predecessor .

  # Step 4: Identify Minye Kyawswa's child
  ?minyeKyawswa dbo:child ?minyeChild .

  # Step 5: Find the parent of Minye Kyawswa's child
  ?minyeChild dbo:parent ?parentOfMinyeChild .

  # Step 6: Identify the child of this parent
  ?parentOfMinyeChild dbo:child ?finalChild .
  
  FILTER(?royalChild = ?finalChild)
}
```

This query assumes that DBpedia has structured data for these historical figures and their relationships. Adjustments may be necessary based on actual data availability.",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
737,6,train,Give me the child of Duke Philipp of Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Duke_Philipp_of_Württemberg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?philipp .
  ?philipp foaf:name ""Philipp of Württemberg""@en ;
           dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```

This query assumes that Duke Philipp is linked to his spouse and parent entries, which in turn link to his children. Adjustments might be necessary based on the exact structure of DBpedia's data.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
859,7,train,"Give me the band member of the associated musical artist, that is a band and a group and an organisation, of Burnt by the Sun (band).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Burnt_by_the_Sun_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Identify ""Burnt by the Sun"" band
  VALUES ?band { dbr:Burnt_by_the_Sun_(band) }
  
  # Find members of the band
  ?band dbo:bandMember ?member .
  
  # Ensure the member is also classified as a band, group, and organization
  ?member rdf:type ?type1 .
  FILTER (?type1 IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))
  
  OPTIONAL {
    ?member rdf:type ?type2 .
    FILTER (?type2 IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))
  }
  
  OPTIONAL {
    ?member rdf:type ?type3 .
    FILTER (?type3 IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))
  }
}
ORDER BY ?member",2,5,3,2,1,3,2,20,0,0,18,0,0.0,0
668,46,train,Give me the professional in the profession of Rod Argent and associated musical artist of the person born as the birth name of $pacely.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Rod_Argent> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/$pacely> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?associatedArtist WHERE {
  dbr:Rod_Argent dbo:occupation ?profession .

  # Replace 'dbr:$pacely' with the actual DBpedia resource for the artist
  dbr:$pacely foaf:name ?birthName .
  
  ?artist foaf:name ?birthName .
  ?artist dbo:associatedMusicalArtist ?associatedArtist .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
386,16,train,Give me the war of the awardee of Golden Sword for Bravery and entity in Russian Empire.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Sword_for_Bravery> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Russian_Empire> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war WHERE {
  ?award dbo:recipient ?person .
  ?person dbo:honorificTitle ?title .
  FILTER(CONTAINS(LCASE(?title), ""golden sword for bravery"")) .
  
  ?person dbo:nationality dbr:Russian_Empire .
  
  ?person dbo:militaryConflict ?war .
}
```

This query does the following:
- Searches for awards (`?award`) with recipients (`?person`).
- Filters those whose titles contain ""Golden Sword for Bravery"".
- Ensures the recipient's nationality is linked to the Russian Empire.
- Retrieves the military conflicts (`?war`) associated with these individuals.",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
353,47,train,"Give me the father of the child, that is a royalty, of the reference, that is a royalty and an office holder, to William I and child of the parent of Roger III, Duke of Apulia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Roger_III,_Duke_of_Apulia> . ?v4 <http://dbpedia.org/property/father> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""William I""@en . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?reference a dbo:Monarch ;
             dbo:officeHolderOf ?office .
  
  ?williamI dbo:parent ?parentWilliamI ;
           a dbo:Monarch .

  ?rogerIII dbo:parent ?parentRogerIII ;
            a dbo:Duke ;
            dbr:Roger_III,_Duke_of_Apulia .

  ?reference dbo:child ?childRoyalty .
  
  ?parentWilliamI owl:sameAs ?parentRogerIII .
  
  ?childRoyalty dbo:father ?father .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
905,13,train,"Give me the parent of the father, that is a royalty, of Charles I of Hungary.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_I_of_Hungary> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Charles I of Hungary
  ?charles a dbo:Monarch ;
           dbp:name ""Charles I of Hungary""@en ;
           dbp:father ?father .

  # Step 2: Ensure the father is associated with royalty
  ?father a dbo:Monarch .

  # Step 3: Retrieve the parent (likely mother) of this royal father
  ?father dbo:parent ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
609,46,train,"Give me the birth place of the governor, that is a politician, of Virginia and birth place of the awardee of the award of Vince Gilligan.",SELECT ?result WHERE { <http://dbpedia.org/resource/Virginia> <http://dbpedia.org/property/governor> ?v4 . <http://dbpedia.org/resource/Vince_Gilligan> <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governorBirthPlace ?awardeeBirthPlace WHERE {
  # Birthplace of Glenn Youngkin, Governor of Virginia
  dbr:Glenn_Youngkin dbo:nativePlace ?governorBirthPlace .

  # Birthplace of Bryan Cranston, an awardee associated with Vince Gilligan's work
  dbr:Bryan_Cranston dbo:nativePlace ?awardeeBirthPlace .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
347,11,train,"Give me the commander in the war, that is a societal event and an event and a television show, of 2nd Dragoon Regiment (France).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/2nd_Dragoon_Regiment_(France)> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the war involving the 2nd Dragoon Regiment of France
  ?war dbo:participatingUnit dbr:2nd_Dragoon_Regiment_(France) .
  
  # Find the commander of that war
  ?war dbo:commander ?commander .

  # Ensure the commander is linked to a societal event
  ?societalEvent dbo:agent ?commander ;
                rdf:type dbo:SocietalEvent .

  # Ensure the commander is linked to an event
  ?event dbo:agent ?commander ;
         rdf:type dbo:Event .

  # Ensure the commander is linked to a television show
  ?tvShow dbo:actor ?commander ;
          rdf:type dbo:TelevisionSeries .
}
```",2,5,3,2,1,3,3,71,0,0,42,0,0.0,0
756,10,train,Give me the manager of 2020–21 SBV Vitesse season and manager of VfL Bochum.,SELECT ?result WHERE { <http://dbpedia.org/resource/VfL_Bochum> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2020–21_SBV_Vitesse_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?vitesseManager ?bochumManager WHERE {
  # Manager of SBV Vitesse for the 2020–21 season
  OPTIONAL {
    ?vitesseTeam a dbo:SoccerClub ;
                dbo:seasons ?vitesseSeason .
    ?vitesseSeason dbo:manager ?vitesseManager .
    FILTER(CONTAINS(LCASE(STR(?vitesseTeam)), ""sbv vitesse"") && CONTAINS(LCASE(STR(?vitesseSeason)), ""2020–21""))
  }

  # Manager of VfL Bochum
  OPTIONAL {
    ?bochumTeam a dbo:SoccerClub ;
                dbo:manager ?bochumManager .
    FILTER(CONTAINS(LCASE(STR(?bochumTeam)), ""vfl bochum""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
89,40,train,Give me the predecessor of Myat Hpone Pyo and spouse of Saw Shwe Khet and child of the parent of the child of Minye Kyawswa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Minye_Kyawswa> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Myat_Hpone_Pyo> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Saw_Shwe_Khet> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Predecessor of Myat Hpone Pyo
  ?successor dbo:predecessor dbr:Myat_Hpone_Pyo .
  
  # Spouse of Saw Shwe Khet
  ?spouse dbo:spouse dbr:Saw_Shwe_Khet ;
          dbo:spouse ?individual .

  # Child of the parent of the child of Minye Kyawswa
  ?child dbo:parent ?grandparent .
  ?grandchild dbo:parent ?child .
  ?grandparent dbo:parent dbr:Minye_Kyawswa .

  # Combine all conditions to find the individual
  FILTER (?successor = ?spouse && ?grandchild = ?individual)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
871,22,train,"Give me the father of the child, that is a politician, of Frederick Stanley, 16th Earl of Derby and parent of Victor Stanley (Royal Navy officer).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Victor_Stanley_(Royal_Navy_officer)> . ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Frederick_Stanley,_16th_Earl_of_Derby> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Frederick Stanley, 16th Earl of Derby
  dbr:Frederick_Stanley_16th_Earl_of_Derby dbo:child ?child .

  # The child who is a politician and parent of Victor Stanley
  ?child a dbo:Politician ;
         dbo:parent dbr:Victor_Stanley_(Royal_Navy_officer) .

  # Find the father of that child
  ?child dbo:father ?father .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
