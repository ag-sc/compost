{
  "predictor.predict": {
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "question": "Give me the manager of 2013 J\u00fabilo Iwata season.",
        "reasoning": "Not supplied for this particular example.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/2013_J\u00fabilo_Iwata_season> <http:\/\/dbpedia.org\/ontology\/manager> ?result . }"
      },
      {
        "augmented": true,
        "question": "Give me the parent of Henuttawy (19th dynasty).",
        "reasoning": "Not supplied for this particular example.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Henuttawy_(19th_dynasty)> <http:\/\/dbpedia.org\/ontology\/parent> ?result . }"
      },
      {
        "augmented": true,
        "question": "Give me the awardee of the award of Aleksey Petrovich Yermolov.",
        "reasoning": "To find the awardee of the award of Aleksey Petrovich Yermolov, we first need to identify the awards received by Aleksey Petrovich Yermolov and then find the awardees of those awards.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Aleksey_Petrovich_Yermolov> <http:\/\/dbpedia.org\/property\/awards> ?award . ?result <http:\/\/dbpedia.org\/property\/awards> ?award . }"
      },
      {
        "question": "Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/ontology\/country> <http:\/\/dbpedia.org\/resource\/United_Kingdom> . <http:\/\/dbpedia.org\/resource\/Sylvia_Pankhurst> <http:\/\/dbpedia.org\/ontology\/almaMater> ?result . }",
        "id": 645,
        "subid": 6,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 1,
        "breadth": 2,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the work, that is a song, of Amba Shepherd.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/property\/writer> <http:\/\/dbpedia.org\/resource\/Amba_Shepherd> . ?result <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Song>. }",
        "id": 747,
        "subid": 5,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 2,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",
        "sparql_query": "SELECT ?result WHERE { ?v1 <http:\/\/dbpedia.org\/ontology\/associatedMusicalArtist> ?result . ?v1 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Artist>. ?v1 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/MusicalArtist>. ?v1 <http:\/\/dbpedia.org\/ontology\/associatedMusicalArtist> <http:\/\/dbpedia.org\/resource\/YU_Grupa> . }",
        "id": 838,
        "subid": 7,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 4,
        "num_nodes": 3,
        "depth": 2,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the father of Lizzie Spaulding.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Lizzie_Spaulding> <http:\/\/dbpedia.org\/property\/father> ?result . }",
        "id": 915,
        "subid": 1,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the child of William Haliburton.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/property\/father> \"William Haliburton\"@en . }",
        "id": 547,
        "subid": 3,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the band member of Kerber and band of Ra\u0161a \u0110elma\u0161.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/ontology\/associatedMusicalArtist> <http:\/\/dbpedia.org\/resource\/Kerber> . <http:\/\/dbpedia.org\/resource\/Ra\u0161a_\u0110elma\u0161> <http:\/\/dbpedia.org\/ontology\/associatedMusicalArtist> ?result . }",
        "id": 838,
        "subid": 6,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 1,
        "breadth": 2,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      },
      {
        "question": "Give me the author of Iceland.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Iceland> <http:\/\/dbpedia.org\/property\/author> ?result . }",
        "id": 435,
        "subid": 5,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 2,
        "base_breadth": 3,
        "subgraphs": 28
      },
      {
        "question": "Give me the administration of the father of Emperor Go-Mizunoo.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Emperor_Go-Mizunoo> <http:\/\/dbpedia.org\/property\/father> ?v1 . ?result <http:\/\/dbpedia.org\/property\/leader> ?v1 . }",
        "id": 488,
        "subid": 14,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 2,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the claim to fame of the commander in Great Siege of Gibraltar.",
        "sparql_query": "SELECT ?result WHERE { <http:\/\/dbpedia.org\/resource\/Great_Siege_of_Gibraltar> <http:\/\/dbpedia.org\/ontology\/commander> ?v1 . ?v1 <http:\/\/dbpedia.org\/ontology\/knownFor> ?result . }",
        "id": 378,
        "subid": 14,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 2,
        "num_nodes": 3,
        "depth": 2,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the figure known as QUB.",
        "sparql_query": "SELECT ?result WHERE { ?result <http:\/\/dbpedia.org\/property\/nickname> \"QUB\"@en . }",
        "id": 9,
        "subid": 2,
        "split": "train",
        "num_edges": 1,
        "num_edges_full": 1,
        "num_nodes": 2,
        "depth": 1,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 3,
        "subgraphs": 71
      },
      {
        "question": "Give me the party of the commander, that is a politician, in United States invasion of Panama.",
        "sparql_query": "SELECT ?result WHERE { ?v1 <http:\/\/dbpedia.org\/ontology\/party> ?result . ?v1 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Politician>. <http:\/\/dbpedia.org\/resource\/United_States_invasion_of_Panama> <http:\/\/dbpedia.org\/ontology\/commander> ?v1 . }",
        "id": 303,
        "subid": 8,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 3,
        "num_nodes": 3,
        "depth": 2,
        "breadth": 1,
        "base_depth": 2,
        "base_breadth": 3,
        "subgraphs": 28
      },
      {
        "question": "Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",
        "sparql_query": "SELECT ?result WHERE { ?v0 <http:\/\/dbpedia.org\/ontology\/location> ?result . <http:\/\/dbpedia.org\/resource\/Joo_Don-sik> <http:\/\/dbpedia.org\/property\/office> ?v0 . ?v0 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Organisation>. }",
        "id": 177,
        "subid": 6,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 3,
        "num_nodes": 3,
        "depth": 2,
        "breadth": 1,
        "base_depth": 2,
        "base_breadth": 2,
        "subgraphs": 9
      },
      {
        "question": "Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",
        "sparql_query": "SELECT ?result WHERE { ?v0 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/Organisation>. ?v0 <http:\/\/www.w3.org\/1999\/02\/22-rdf-syntax-ns#type> <http:\/\/dbpedia.org\/ontology\/MilitaryUnit>. ?v0 <http:\/\/dbpedia.org\/ontology\/country> ?result . ?v0 <http:\/\/dbpedia.org\/ontology\/battle> <http:\/\/dbpedia.org\/resource\/Vyoshenskaya_Uprising> . }",
        "id": 712,
        "subid": 9,
        "split": "train",
        "num_edges": 2,
        "num_edges_full": 4,
        "num_nodes": 3,
        "depth": 2,
        "breadth": 1,
        "base_depth": 3,
        "base_breadth": 2,
        "subgraphs": 20
      }
    ],
    "signature": {
      "instructions": "Given a natural language question about an entity or relationship in DBpedia, generate a step-by-step reasoning process to construct a SPARQL query that retrieves the relevant information from DBpedia, including the specific entities, relationships, or attributes mentioned in the question, and produce the corresponding SPARQL query as output.",
      "fields": [
        {
          "prefix": "Question:",
          "description": "question about something"
        },
        {
          "prefix": "Reasoning: Let's think step by step in order to",
          "description": "${reasoning}"
        },
        {
          "prefix": "Sparql Query:",
          "description": "sparql query for DBpedia"
        }
      ]
    },
    "lm": null
  },
  "metadata": {
    "dependency_versions": {
      "python": "3.10",
      "dspy": "2.6.12",
      "cloudpickle": "3.1"
    }
  }
}