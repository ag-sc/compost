id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?region ?residence ?province WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2006/time#during> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/ontology/administrativeTerritory> ?region .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
    FILTER (lang(?residence) = 'it' && ?residence a <http://dbpedia.org/class/yago/SettlementsInItaly>)
  }
  
  OPTIONAL {
    ?residence <http://dbpedia.org/property/province> ?province .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find person born as Dino Merlin
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/birthName> ""Dino Merlin"" .
  }
  
  # Find native of Samir Bekrić's birthplace
  OPTIONAL {
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?person <http://dbpedia.org/ontology/nativePlace> ?birthPlace .
  }
  
  # Ensure both conditions are met
  FILTER(?person != ?person)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?prodiParty ?ipepReference ?fatherParty WHERE {
  # Party of Romano Prodi
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalAffiliation> ?prodiParty .
    FILTER EXISTS { 
      <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Office_holders> .
      <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politician> [] .
    }
  }

  # Reference to Italian People's Party (1994)
  OPTIONAL {
    ?ipepReference <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en .
  }

  # Party of Lamberto Andreotti's Father
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/familyName> ?fatherName .
    ?father <http://xmlns.com/foaf/0.1/name> ?fatherName .
    ?father <http://dbpedia.org/ontology/politicalAffiliation> ?fatherParty .
  }
}
```",6,8,7,2,3,3,3,71,1,0,0,1.0,1.0,1.0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?force ?awardEntity WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/year> ""1778"" .
    ?awardee <http://dbpedia.org/property/force> ?force .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Palestine_(region)> .
    ?award <http://dbpedia.org/ontology/recipient> ?person .
    ?award <http://dbpedia.org/property/entity> ?awardEntity .
  }
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?commonParent WHERE {
  # Step 1 & 2: Archduchess Margaret's parent and their child
  OPTIONAL { 
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentMargaret .
    ?parentMargaret <http://www.w3.org/2006/vcard/ns#hasChild> ?childOfParentMargaret .
  }

  # Step 3: Parent of the child from step 2
  OPTIONAL {
    ?childOfParentMargaret <http://www.w3.org/2006/vcard/ns#hasParent> ?parentOfChild .
  }

  # Step 4 & 5: Archduke Joseph August's child and native landmark at elevation 96.0
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_August_of_Austria> <http://www.w3.org/2006/vcard/ns#hasChild> ?childJosephAugust .
  }

  OPTIONAL {
    ?settlement a <http://dbpedia.org/ontology/Settlement> ;
                <http://dbpedia.org/property/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?native <http://dbpedia.org/ontology/nationality> ?settlement .
    ?childJosephAugust <http://www.w3.org/2006/vcard/ns#hasParent> ?parentOfNative .
  }

  # Step 7: Find common parent
  FILTER (?parentOfChild = ?parentOfNative)
  BIND(?parentOfChild AS ?commonParent)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?decedent WHERE {
  # Step 1: Find the author of ""French Algeria""
  ?author <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/French_Algeria_(book)> .

  # Step 2: Identify works associated with this author
  ?work <http://dbpedia.org/property/creator> ?author .
  
  # Step 3: Find the person decedent at these works
  OPTIONAL { 
    ?decedent <http://dbpedia.org/ontology/deathPlace> ?work .
  }

  # Step 4: Identify the military conflict and event commanded by Frédéric-Georges Herr
  ?conflict <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .

  # Step 5: Find the commander of this conflict
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/commander> ?conflict .
  }

  # Ensure decedent is also the commander in the war
  FILTER (?decedent = ?commander)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?reference ?party WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Partito_Popolare_Italiano> <http://xmlns.com/foaf/0.1/page> ?reference .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/politicalParty> ?party .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandShena ?bandAuthor WHERE {
  OPTIONAL {
    # Band of the person born as Shèna
    ?shena <http://dbpedia.org/ontology/birthName> ""Shèna"" .
    ?shena <http://dbpedia.org/property/associatedMusicalArtist> ?bandShena .
  }
  
  OPTIONAL {
    # Band of the writer of a song by Amba Shepherd
    ?song <http://purl.org/dc/terms/creator> ?author .
    ?song <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Amba_Shepherd> .
    ?author <http://dbpedia.org/property/associatedMusicalArtist> ?bandAuthor .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?awardee ?commander ?leader WHERE {
  OPTIONAL {
    ?order <http://dbpedia.org/ontology/recipient> ?awardee .
    FILTER (STR(?order) = ""Order_of_Suvorov"")
  }
  
  OPTIONAL {
    ?szalasi <http://dbpedia.org/ontology/commandedBy> ?commander .
    FILTER (STR(?szalasi) = ""Ferenc_Szálasi"")
  }

  OPTIONAL {
    ?stalinOffice <http://dbpedia.org/ontology/leader> ?leader .
    ?stalinOffice <http://www.w3.org/2002/07/owl#sameAs> ?governmentAgency .
    FILTER (STR(?stalinOffice) = ""Joseph_Stalin"")
    FILTER (STR(?governmentAgency) IN (""Government_agency""))
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
SELECT ?architectRestingPlace ?marionEntity ?politicianRestingPlace WHERE {
  # Part 1: Resting place of the architect of P.D. Houston Jr. House
  OPTIONAL {
    <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
    ?architect <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://dbpedia.org/ontology/burialPlace> ?architectRestingPlace .
  }

  # Part 2: Entity in the birthplace, that is a settlement, of Marion James
  OPTIONAL {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/type> ""Settlement"" .
    ?birthPlace ?property ?marionEntity .
  }

  # Part 3: Resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)
  OPTIONAL {
    ?politician <http://dbpedia.org/ontology/politicalParty> ?party .
    ?awards <http://dbpedia.org/property/recipient> ?politician .
    ?awards <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
    ?politician <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://dbpedia.org/ontology/burialPlace> ?politicianRestingPlace .
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?warOfPisagua ?warOfLaRinconada ?forceOfCampero WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce1> ?militaryForce1 .
    ?militaryForce1 <http://dbpedia.org/property/war> ?warOfPisagua .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander1> ?commander1 .
    ?commander1 <http://dbpedia.org/property/war> ?warOfLaRinconada .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?forceOfCampero .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?almaMater ?nickname WHERE {
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politician> _:a .
    ?mayor <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  
  OPTIONAL {
    ?institution <http://www.w3.org/2002/07/owl#sameAs> _:b .
    ?institution <http://dbpedia.org/ontology/organisationLocation> <http://dbpedia.org/resource/Northern_Ireland> .
    ?institution <http://dbpedia.org/ontology/educationalInstitution> _:c .
    ?institution <http://purl.org/dc/terms/nickname> ?nickname .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?country ?war WHERE {
  # Find the birthplace of Bob Heffron that is a country
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
  FILTER(LANG(?countryLabel) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STRDT(STR(?countryLabel), xsd:string))) AS ?country)

  # Find wars involving the awardee of Knight Grand Cross of the Order of the Bath in New Zealand Army
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/New_Zealand> .
  ?person <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?person <http://dbpedia.org/ontology/war> ?war .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?region1 ?entity2 WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?region1 .
    FILTER EXISTS { ?region1 a <http://dbpedia.org/class/yago/Region100000001>. }
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace2 .
    ?birthPlace2 <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/United_Kingdom> .
    BIND(?birthPlace2 AS ?entity2)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war1 ?war2 WHERE {
  OPTIONAL {
    ?battle <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> .
    ?battle <http://dbpedia.org/property/war> ?war1 .
  }
  
  OPTIONAL {
    ?event <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Societal_events_in_Chile> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?force .
    ?force <http://dbpedia.org/property/war> ?war2 .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
SELECT ?birthPlace ?headquarter WHERE {
  # Step 1: Find child who is a politician and office holder
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/birthName> ""Desmond FitzGerald"" .
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/politicalParty> ?party .
    ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  }
  
  # Step 2: Get birthplace of the identified child
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  # Step 3: Identify venue and architectural structure for 2012 Pro12 Grand Final
  OPTIONAL {
    ?location <http://dbpedia.org/property/event> <http://dbpedia.org/resource/2012_Pro12_Grand_Final> .
    ?location <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?location <http://purl.org/dc/terms/type> ?type .
    FILTER(?type = ""venue"" && ?type = ""architectural structure"")
  }

  # Step 4: Find owner of the location
  OPTIONAL {
    ?location <http://dbpedia.org/ontology/owner> ?owner .
  }
  
  # Step 5: Get headquarter of the owner
  OPTIONAL {
    ?owner <http://www.w3.org/2006/vcard/ns#hasAddress> ?ownerAddress .
    ?ownerAddress <http://purl.org/dc/terms/description> ?headquarter .
  }
}
```",5,9,6,3,2,3,2,20,1,109572,0,9.126335867412592e-06,1.0,1.8252505156332706e-05
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Filter by birthplace (Compton, California)
SELECT ?filteredSpouse WHERE {
  ?filteredSpouse <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  FILTER(?filteredSpouse IN {<SPONS>}) # Replace <SPONS> with the result from Step 1
}

# Step 3: Find claim to fame (work) of the filtered spouse
SELECT ?work WHERE {
  ?filteredSpouse <http://dbpedia.org/ontology/claimToFame> ?work .
}

# Step 4: Identify actors in that work
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```

Note: The placeholder `<SPONS>` should be replaced with the actual URI of Sherry Hormann's spouse obtained from the first query. Similarly, replace `<WORK>` with the result from Step 3 when executing the final query.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find the child of this father
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Identify Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?ameittaThiriMahaDhammaDewiOfAva <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 4: Find the parent of this predecessor
  ?predecessor <http://www.w3.org/2002/07/owl#sameAs> ?parent .

  # Step 5: Identify Thado Minsaw of Prome's child
  ?thadoMinsawOfProme <http://dbpedia.org/ontology/child> ?thadoChild .

  # Step 6: Find the parent of this child
  ?thadoChild <http://www.w3.org/2002/07/owl#sameAs> ?parent .
}
```",6,6,7,3,3,3,3,71,0,1891,1,0.0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?sharonProfessional ?mattAssociatedArtist ?vibertBandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sharon_Kao> <http://xmlns.com/foaf/0.1/birthName> ?birthName .
    ?birthName <http://purl.org/dc/terms/profession> ?sharonProfessional .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?mattAssociatedArtist .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://xmlns.com/foaf/0.1/birthName> ?birthName .
    ?birthName <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?vibertBandMember <http://dbpedia.org/property/memberOf> ?lukeVibert .
  }
}
```",5,6,6,2,3,2,3,28,1,3,0,0.25,1.0,0.4
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
SELECT ?battleWar ?commanderWar ?narcisoForce WHERE {
  # Part 1: War of the military force in the Battle of Pisagua
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/foughtBy> ?force .
    ?force <http://dbpedia.org/ontology/war> ?battleWar .
  }

  # Part 2: War of the commander in a work with date --01-09
  OPTIONAL {
    # Assuming there's an entity for this specific work or event
    <http://dbpedia.org/resource/Specific_Work_or_Event> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?commanderWar .
  }

  # Part 3: Force of the person born as Narciso Campero Leyes
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes"" .
    ?narcisoForce <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Narciso_Campero_Leyes> .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?decedent WHERE {
  # Step 1: Identify the author of ""French Algeria""
  ?work <http://purl.org/dc/terms/creator> ?author .
  ?work <http://dbpedia.org/ontology/title> ""French Algeria"" .

  # Step 2 & 3: Find the commander in a military conflict and event, and Battle of Verdun
  ?conflict <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Battle_of_Verdun> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event> .
  ?conflict <http://dbpedia.org/ontology/commander> ?commander .

  # Step 4: Find the person decedent at the work of the author
  ?decedent <http://www.w3.org/2006/vcard/ns#death> ?deathDate .
  ?work <http://purl.org/dc/terms/subject> ?decedent .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace ?deathPlace WHERE {
  OPTIONAL {
    # Administration of the Father of the Spouse (Royalty) of Tokugawa Masako
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
    FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty"")) .
    ?spouse <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  OPTIONAL {
    # Birth Place of Enomoto Takeaki
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  OPTIONAL {
    # Death Place of the Father (Politician) of Yūki Hideyasu
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?father .
    ?father <http://www.w3.org/2000/01/rdf-schema#label> ?fatherLabel .
    FILTER(CONTAINS(LCASE(?fatherLabel), ""politician"")) .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",6,8,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?producer ?professionalRole ?associatedArtist WHERE {
  # Producer of ""Westside Story"" (song)
  OPTIONAL { 
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://purl.org/dc/terms/creator> ?producer .
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/profession> ?professionalRole .
  }

  # Associated musical artist of the writer, who is both a musical artist and an artist, of ""What U See Is What U Get""
  OPTIONAL {
    <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify John Pertwee
  ?johnPertwee <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  ?johnPertwee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .

  # Step 2: Find his child
  ?child <http://dbpedia.org/ontology/father> ?johnPertwee .

  # Step 3: Determine the claim to fame involving a film and military conflict
  ?claimToFame <http://dbpedia.org/ontology/subjectOf> ?film .
  ?claimToFame <http://dbpedia.org/ontology/subjectOf> ?militaryConflict .
  ?child <http://dbpedia.org/property/claimToFame> ?claimToFame .

  # Step 4: Retrieve the actor associated with this claim to fame
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?parentIlona ?parentGéza ?childJoseph WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parentIlona .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/parent> ?parentGéza .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childJoseph .
  }
}
```",3,3,4,1,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandFredrikArtist ?sASlayerArtist WHERE {
  OPTIONAL {
    # Find Fredrik Thordendal's band
    ?band a <http://dbpedia.org/ontology/Band> ;
          <http://www.w3.org/2000/01/rdf-schema#member> <http://dbpedia.org/resource/Fredrik_Thordendal> ;
          <http://purl.org/dc/terms/isPartOf> ?organisation .
    # Find associated musical artists for Fredrik Thordendal's band
    ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandFredrikArtist .
  }
  
  OPTIONAL {
    # Identify S.A. Slayer as a band and find its associated musical artist
    <http://dbpedia.org/resource/S._A._Slayer> a <http://dbpedia.org/ontology/Band> ;
          <http://purl.org/dc/terms/isPartOf> ?sASlayerOrganisation .
    # Find associated musical artists for S.A. Slayer
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?sASlayerArtist .
  }
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?parentOfNative WHERE {
  # Step 1: Find the parent(s) who are royalty
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this parent
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  
  # Step 3: Check if this child is a native of Budapest
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER (CONTAINS(LCASE(str(?birthPlace)), ""budapest""))
  }
  
  # Step 4: Find the parent of this native
  ?nativeParent <http://dbpedia.org/ontology/child> ?child .

  BIND(?nativeParent AS ?parentOfNative)
}
```",5,6,6,3,2,3,3,71,0,2,1,0.0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find Antiochus II Theos' successor who is a royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this successor who is a royalty
  ?child1 <http://dbpedia.org/ontology/parent> ?successor .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the commander in Battle of Panium and their child
  ?battleCommander <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Battle_of_Panium> .
  ?child2 <http://dbpedia.org/ontology/parent> ?battleCommander .

  # Step 4: Identify the parent of the commander's child
  ?parentOfChild2 <http://dbpedia.org/ontology/child> ?child2 .

  # Step 5: Find the child of step 2 whose parent matches step 4
  ?finalChild <http://dbpedia.org/ontology/parent> ?child1 .
  ?finalChild <http://dbpedia.org/ontology/parent> ?parentOfChild2 .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?parent1 ?parent2 WHERE {
  # Parent of the child of Archduke Joseph Francis of Austria
  OPTIONAL {
    ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    ?child1 <http://www.w3.org/2006/vcard/ns#hasParent> ?parent1 .
  }

  # Parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria
  OPTIONAL {
    ?grandChild <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
    ?child2 <http://www.w3.org/2006/vcard/ns#hasParent> ?grandChild .
    ?child2 <http://dbpedia.org/ontology/birthParent> ?parentOfChild2 .
    ?parentOfChild2 <http://www.w3.org/2006/vcard/ns#hasParent> ?parent2 .
    ?parentOfChild2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?actorBand WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STRSTARTS(LCASE(?film), LCASE(""return_to_nuke_em_high_volume_1"")))

  # Step 2: Check if the actor is also a musical artist
  OPTIONAL {
    ?actor <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?artist <http://dbpedia.org/ontology/birthName> ?birthName .
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?musicalArtist .

    # Step 3: Find Joseph Michael's band
    OPTIONAL {
      ?musicalArtist <http://dbpedia.org/property/memberOf> ?band .
      FILTER(STRSTARTS(LCASE(?band), LCASE(""joseph_michael"")))
      ?band <http://www.w3.org/2000/01/rdf-schema#label> ?actorBand .
    }
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?forceNarcisoCampero ?warLaRinconadaDeAte ?warSocietalEvent WHERE {
  # Force of Narciso Campero
  OPTIONAL {
    ?narciso <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
    ?narciso <http://dbpedia.org/property/militaryForce> ?forceNarcisoCampero .
  }

  # War of the Commander in Battle of La Rinconada de Ate
  OPTIONAL {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate""))
    ?commander <http://dbpedia.org/property/war> ?warLaRinconadaDeAte .
  }

  # War of the Military Force of a Societal Event in Chile
  OPTIONAL {
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
    FILTER(STRSTARTS(STR(?societalEvent), ""http://dbpedia.org/resource/"") && EXISTS { ?societalEvent <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> })
    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/property/war> ?warSocietalEvent .
  }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT DISTINCT ?actorBand ?writerBand WHERE {
  # Part 1: Actor in a show with Stacey Dash who is also a musical artist
  OPTIONAL {
    ?show dbo:starring <http://dbpedia.org/resource/Stacey_Dash> .
    ?show dbo:starring ?actor .
    ?actor rdf:type dbo:Actor ;
           dbo:musicalArtist true ;
           dbo:band ?actorBand .
  }

  # Part 2: Writer of a work by Shellback who is also a musical artist
  OPTIONAL {
    ?work dbo:producer <http://dbpedia.org/resource/Shellback_(record_producer)> .
    ?work dbo:writer ?writer .
    ?writer rdf:type dbo:Writer ;
            dbo:musicalArtist true ;
            dbo:band ?writerBand .
  }
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
SELECT ?event ?awardee WHERE {
  ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
  ?societalEvent rdf:type <http://dbpedia.org/class/yago/SocialEvents1000000010> .
  
  ?event <http://dbpedia.org/ontology/awardee> ?awardee .
  ?award <http://dbpedia.org/property/number> ""30""^^xsd:integer .
  ?awardee <http://dbpedia.org/ontology/award> ?award .

  ?awardee <http://dbpedia.org/ontology/profession> ?profession .
  ?profession rdfs:label ""Commander""@en .

  OPTIONAL {
    ?event <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Lisa_Gavrić> .
  }
  
  OPTIONAL {
    ?deceasedPerson <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
    ?event <http://dbpedia.org/property/person> ?deceasedPerson .
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander ?militaryForce WHERE {
  OPTIONAL {
    # Find the predecessor of Indalecio Prieto
    ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    
    # Identify a societal event and military conflict involving this predecessor
    ?event <http://dbpedia.org/ontology/associatedWith> ?predecessor ;
           <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent ;
           <http://dbpedia.org/ontology/type> ?conflictType .
    
    FILTER(?conflictType = <http://dbpedia.org/resource/Military_conflict>) .

    # Find the military force involved in this event
    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
  
  OPTIONAL {
    # Identify an event where Emilio Mola was a commander
    ?emilioEvent <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> ;
                 <http://dbpedia.org/property/militaryForce> ?militaryForce .
    
    # Find the commander of Emilio Mola's force in this event
    ?emilioEvent <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?settlement ?alterEgo ?almaMater WHERE {
  OPTIONAL {
    ?green <http://dbpedia.org/ontology/administration> ?admin .
    ?admin <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlement .
    FILTER(?settlement != """")
  }
  
  OPTIONAL {
    ?burland <http://dbpedia.org/ontology/fictionalCharacter> ?character .
    ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }

  OPTIONAL {
    ?nashAdmin <http://dbpedia.org/resource/Administration_of_George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"```sparql
SELECT ?warJagathDias ?nationalityTamaraKunanayakam ?warMaheshSenanayake WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/war> ?warJagathDias .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ?nationalityTamaraKunanayakam .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/war> ?warMaheshSenanayake .
  }
}
```",4,4,5,2,3,2,3,28,0,1,1,0.0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
SELECT ?actorMusicalArtist ?bandMemberMusicalArtist ?josephBandMusicalArtist WHERE {
  # Step 1: Actor of ""Return to Nuke 'Em High Volume 1""
  OPTIONAL {
    <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/property/birthName> ?birthNameActor .
    ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?actorMusicalArtist .
  }

  # Step 2: Band member related to ""Nevermore (2006 film)""
  OPTIONAL {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/property/reference> ?reference .
    ?reference <http://dbpedia.org/ontology/member> ?bandMember .
    ?bandMember <http://dbpedia.org/ontology/band> ?band .
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMemberMusicalArtist .
  }

  # Step 3: Band of Joseph Michael
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?joseph <http://dbpedia.org/ontology/member> ?band .
    ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?josephBandMusicalArtist .
  }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?band WHERE {
  # Step 1: Identify Joseph Michael Furney
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  
  # Step 2: Find bands he is a member of
  ?person <http://dbpedia.org/ontology/memberOf> ?bandMember .

  # Step 3: Verify band membership in Nevermore
  FILTER(?bandMember = <http://dbpedia.org/resource/Nevermore_(band)>)

  # Step 4: Identify Jim Sheppard and his associated musical artists
  ?sheppard <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard"" .
  ?sheppard <http://dbpedia.org/ontology/memberOf> ?associatedBand .

  # Step 5: Cross-reference bands
  FILTER(?bandMember = ?associatedBand)
  
  BIND(?bandMember AS ?band) 
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
SELECT ?person WHERE {
  # Find band members of Metallica
  ?metallicaMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .
  
  # Find band members of Guns N' Roses
  ?gunsNrosesMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .

  # Ensure the person is a member of both bands
  FILTER (?metallicaMember = ?gunsNrosesMember)

  # Check for reference to ""Newsted""
  OPTIONAL {
    ?person rdfs:label ""Newsted""@en .
    ?reference <http://dbpedia.org/ontology/reference> ?person .
    ?reference <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?band .
    ?band a <http://dbpedia.org/ontology/Band> .
  }

  # Bind the person to the variable
  BIND(?metallicaMember AS ?person)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?writer ?associatedArtist WHERE {
  # Find the writer of ""40 Dayz & 40 Nightz"" who is both a MusicalArtist and an Artist
  <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Find associated musical artists of the identified writer
  OPTIONAL { 
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Michael Ballhaus's claim to fame (work)
  OPTIONAL { 
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/work> ?work .
  }
  
  # Step 2: Find actors of this work
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/starring> ?actor .
  }

  # Step 3: Identify the nickname of Jackson, Tennessee
  OPTIONAL {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickname> ?nickname .
  }
  
  # Step 4: Find a native figure associated with this nickname
  OPTIONAL {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ?nickname ;
            <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Jackson,_Tennessee> .
  }
  
  # Step 5: Find an actor common to both contexts
  OPTIONAL {
    ?figure <http://dbpedia.org/property/starring> ?actor .
  }
}
```",5,6,6,3,2,3,3,71,0,3596,1,0.0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?peninsularWarCommanderWars ?carlPontusGahnWars ?gibraltarCommanderClaimToFame WHERE {
  OPTIONAL {
    # Wars of the commander in Peninsular War
    ?commander <http://dbpedia.org/ontology/commanded> <http://dbpedia.org/resource/Peninsular_War> .
    ?commander <http://dbpedia.org/ontology/warsInvolvedIn> ?peninsularWarCommanderWars .
  }
  
  OPTIONAL {
    # Wars of Carl Pontus Gahn
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/warsInvolvedIn> ?carlPontusGahnWars .
  }
  
  OPTIONAL {
    # Claim to fame of the commander in Great Siege of Gibraltar
    ?commander <http://dbpedia.org/ontology/commanded> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?commander <http://dbpedia.org/property/famousFor> ?gibraltarCommanderClaimToFame .
  }
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find producer of ""Used to Love Her""
  ?song <http://dbpedia.org/ontology/producer> ?producer .
  FILTER(STR(?song) = ""Used_to_Love_Her"")

  # Step 2: Check if the producer is part of a band
  OPTIONAL { 
    ?producer <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
  }

  # Step 3: Find Metallica member related to the above context
  OPTIONAL {
    ?metallicaBand <http://dbpedia.org/ontology/member> ?metallicaMember .
    FILTER(STR(?metallicaBand) = ""Metallica"")
  }

  # Step 4: Reference to Newsted and his bands
  OPTIONAL {
    ?newstedBand <http://dbpedia.org/ontology/member> ""Jason_Newsted"" .
    ?bandReference <http://dbpedia.org/ontology/reference> ?newstedBand .
    FILTER(STR(?bandReference) = ""Newsted"")
  }

  # Combine results to find the final band member
  OPTIONAL {
    ?finalBand <http://dbpedia.org/ontology/member> ?bandMember .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?militaryForce ?commander WHERE {
  # Find military forces involved in the Spanish Civil War
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?event <http://dbpedia.org/property/military_force> ?militaryForce .

  # Find commanders of these forces known as ""El Director""
  ?commander <http://dbpedia.org/ontology/commanderOfMilitaryUnit> ?militaryForce ;
              <http://xmlns.com/foaf/0.1/knows> ?nickname .
  ?nickname <http://www.w3.org/2004/02/skos/core#prefLabel> ""El Director""@en .

  # Ensure the commander is a person
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify Yōichi Masuzoe's residence country
  OPTIONAL { 
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2006/vcard/ns#country-name> ?country .
  }

  # Step 2: Find a person born in 1958 native to that country
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER (YEAR(?birthDate) = 1958)
    ?person <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?nativePlace .
    ?nativePlace <http://www.w3.org/2006/vcard/ns#country-name> ?country .
  }

  # Step 3: Determine their alma mater
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2, ?type3 .
    FILTER (?type1 = <http://dbpedia.org/class/yago/JapaneseOrganizations> &&
            ?type2 = <http://dbpedia.org/class/yago/UniversitiesAndColleges> &&
            ?type3 = <http://dbpedia.org/class/yago/EducationalInstitutions>)
  }

  # Step 4: Identify Takashi Sekizuka's team manager
  OPTIONAL {
    ?team <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    ?team <http://dbpedia.org/property/manager> ?manager .
  }

  # Step 5: Check if the alma mater member is the manager
  OPTIONAL {
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#member> ?member .
    FILTER (?member = ?manager)
  }
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?managerOfTeam ?member WHERE {
  # Step 1: Find the sports manager of the 1998 Kashima Antlers season
  OPTIONAL { 
    <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/sportsManager> ?sportsManager .
  }
  
  # Step 2 and 3: Find the team managed by this sports manager and its manager
  OPTIONAL {
    ?sportsManager <http://dbpedia.org/ontology/teamManaged> ?team .
    ?team <http://dbpedia.org/ontology/manager> ?managerOfTeam .
  }

  # Step 4: Identify Eiji Ōtsuka’s alma mater
  OPTIONAL {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER (
      ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ""Japan"" &&
      ?almaMater <http://purl.org/dc/terms/type> ?type .
      VALUES ?type { <http://dbpedia.org/class/yago/YagoLegalEntity4325> <http://dbpedia.org/class/yago/YagoEducationalInstitution4652> }
    )
  }

  # Step 5: Find members of this alma mater
  OPTIONAL {
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#member> ?member .
  }
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Michael Ballhaus's claim to fame (work)
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Michael_Ballhaus> .
  
  # Step 2: Get actors of this work
  ?work <http://dbpedia.org/ontology/starring> ?actor .

  # Step 3: Identify Hub City and its notable native
  OPTIONAL {
    <http://dbpedia.org/resource/Hub_City> <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City"" .
    <http://dbpedia.org/resource/Notable_Figure_From_Hub_City> <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Hub_City> .
  }

  # Step 4: Match actor with native of Hub City
  ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Notable_Figure_From_Hub_Cistory>.
}
```

Note: The placeholders like `Notable_Figure_From_Hub_City` and `Hub_City` need to be replaced with actual DBpedia resources once identified.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?predecessor ?parentOfChildOfParent ?childOfFatherOfChild WHERE {
  # Part 1: Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  OPTIONAL { 
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://www.w3.org/2002/07/owl#sameAs> ?ameitta .
    ?ameitta <http://dbpedia.org/ontology/predecessor> ?predecessor .
  }

  # Part 2: Parent of the child of the parent of Thado Minsaw of Prome
  OPTIONAL {
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://www.w3.org/2002/07/owl#sameAs> ?thado .
    ?thado <http://dbpedia.org/ontology/parent> ?parentOfThado .
    ?parentOfThado <http://dbpedia.org/ontology/child> ?childOfParent .
    ?childOfParent <http://dbpedia.org/ontology/parent> ?parentOfChildOfParent .
  }

  # Part 3: Child of the father of the child of Thinkhaya of Pagan
  OPTIONAL {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://www.w3.org/2002/07/owl#sameAs> ?thinkhaya .
    ?thinkhaya <http://dbpedia.org/ontology/child> ?childOfThinkhaya .
    ?childOfThinkhaya <http://dbpedia.org/ontology/father> ?fatherOfChild .
    ?fatherOfChild <http://dbpedia.org/ontology/child> ?childOfFatherOfChild .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?birthPlace ?administration WHERE {
  OPTIONAL {
    # Find the birth place of a commander in the Boshin War
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?boshinWar <http://dbpedia.org/property/commander> ?commander .
    FILTER(STRSTARTS(LCASE(?boshinWar), ""boshin war""))
  }
  
  OPTIONAL {
    # Find the administration of the father of the spouse (royalty) of Tokugawa Masako
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/2002/07/owl#sameAs> ?royalSpouse .
    ?royalSpouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    
    ?royalSpouse <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
# Step 1: Find Amba Shepherd's song
SELECT ?song WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://purl.org/dc/terms/creator> ?work .
  ?work a <http://dbpedia.org/class/yago/Song108069068> .
}

# Step 2: Find the writer of the song
SELECT ?writer WHERE {
  ?song <http://dbpedia.org/ontology/writer> ?writer .
}

# Step 3: Find the band associated with persona ""Shèna""
SELECT ?band WHERE {
  ?persona rdfs:label ""Shèna""@en .
  ?persona <http://dbpedia.org/property/band> ?band .
  FILTER EXISTS { ?writer <http://www.w3.org/2002/07/owl#sameAs> ?persona }
}

# Step 4: Find an athlete and soccer player born in Zolotonosha
SELECT ?athlete WHERE {
  ?athlete a <http://dbpedia.org/class/yago/Athlete108069068> .
  ?athlete a <http://dbpedia.org/class/yago/SoccerPlayer108069068> .
  ?athlete <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha> .
}

# Step 5: Find the birth date of this athlete's decedent
SELECT ?birthDate WHERE {
  ?athlete <http://dbpedia.org/ontology/decedent> ?decedent .
  ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 6: Find a person born on that date
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
}

# Step 7: Find the band of this person
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/band> ?band .
}
```

Note: This query is a conceptual framework and may require adjustments based on actual data availability in DBpedia. Some steps might not yield results if certain relationships or entities are missing.",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
SELECT ?commander WHERE {
  # Find military conflicts where Frédéric-Georges Herr was a commander
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> .
  
  # Identify the capital of Algeria
  <http://dbpedia.org/resource/Algeria> <http://www.geonames.org/ontology#capital> ?capital .

  # Find individuals who died in the capital of Algeria and are linked to the author of ""French Algeria""
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
  ?author <http://purl.org/dc/terms/creator> ?work .
  ?work <http://dbpedia.org/property/title> ""French Algeria"" .
  
  # Link the commander to these individuals
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  ?commander <http://dbpedia.org/ontology/deathPlace> ?capital .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbpedia-owl:childOf <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Find his child
  ?child dbpedia-owl:parent ?antiochus .

  # Step 3: Find the parent of that child
  ?parent dbpedia-owl:child ?child .

  # Step 4: Identify successor of Antiochus II Theos who is royalty
  ?successor dbpedia-owl:succeededBy <http://dbpedia.org/resource/Antiochus_II_theos> .
  ?successor a dbo:Royalty .

  # Step 5: Find the child of that successor who is royalty
  ?royalChild dbpedia-owl:parent ?successor .
  ?royalChild a dbo:Royalty .

  # Step 6: Identify the spouse of this royal child
  ?spouse dbpedia-owl:spouse ?royalChild .

  # Step 7: Find the child of Antiochus and the spouse identified in step 6
  ?commonChild dbpedia-owl:parent ?antiochus .
  ?commonChild dbpedia-owl:parent ?spouse .

  # Step 8: Identify the parent of this common child
  ?finalParent dbpedia-owl:child ?commonChild .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Kamikaze_Girls> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?beautyQueen .
  ?beautyQueen a <http://dbpedia.org/ontology/BeautyQueen> .
  ?person <http://dbpedia.org/property/entityInRegion> <http://dbpedia.org/resource/Time_in_Indonesia> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"```sparql
SELECT ?war ?birthName ?claimToFame WHERE {
  # Find the war involving Thomas Trigge as a commander
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Thomas_Trigge> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
  ?societalEvent rdf:type <http://dbpedia.org/class/yago/SocialEvents100000000> .
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflicts100000000> .
  ?war rdf:type <http://www.w3.org/2002/07/owl#Thing> .

  # Find Carl Pontus Gahn's birth name
  <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Retrieve Thomas Trigge's claim to fame in the war
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/property/claimToFame> ?claimToFame .
  }
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?awardee ?almaMater WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Royal_Medals> <http://dbpedia.org/ontology/awardee> ?awardee .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",4,5,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?timeZone .
  }
  
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
          a <http://dbpedia.org/ontology/BeautyQueen> ;
          <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?timeZone .

  FILTER(?timeZone = ?timeZone)
}
```",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?child ?predecessor WHERE {
  # Step 1: Identify Soe Min Wimala Dewi's father
  ?soeMin <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find the child of this father
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Ensure the child is an office holder and a royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the predecessor of this child
  OPTIONAL { 
    ?child <http://dbpedia.org/property/predecessor> ?predecessor .
  }

  # Reference to Thihapate of Mohnyin (assuming a connection through properties)
  ?thihapate <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  OPTIONAL {
    ?child <http://dbpedia.org/ontology/reference> ?thihapate .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify the societal event/military conflict related to Francoist Spain
  ?event a <http://dbpedia.org/ontology/SocietalEvent> ;
         a <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://dbpedia.org/property/decedent> <http://dbpedia.org/resource/Francoist_Spain> .

  # Step 2: Identify Emilio Mola's command event
  ?commandEvent a <http://dbpedia.org/ontology/Event> ;
                <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Emilio_Mola> .

  # Step 3: Find the military force involved in both events
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?commandEvent <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?endaraParty ?ariasParty ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?endaraParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?ariasBirth <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> .
    ?ariasBirth <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Birth> .
    ?ariasParty <http://dbpedia.org/property/party> ?ariasPerson .
    FILTER(?ariasPerson = <http://dbpedia.org/resource/Arnulfo_Arias_Madrid>) .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?country .
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?addressEntity .
    FILTER(?addressEntity = ?address) .
  }
}
```",5,7,6,2,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace ?deathPlace WHERE {
  OPTIONAL {
    # Administration of the father of the spouse (royalty) of Tokugawa Masako
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
    FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty"")) .
    ?spouse <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  OPTIONAL {
    # Birthplace of Enomoto Takeaki
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  OPTIONAL {
    # Death place of Tokugawa Ieyasu
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",5,6,6,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"```sparql
SELECT ?war WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales State Election
  ?leader a dbo:Politician ;
          dbo:electedDuring <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .

  # Step 2: Determine the birthplace country of this leader
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:countryName ?country .

  # Step 3: Find an entity in this birthplace country (assuming we need any entity)
  ?entity a dbo:Thing ;
          dbo:country <http://dbpedia.org/resource/Category:Countries_by_continent> ;
          rdfs:label ?entityLabel .
  FILTER(CONTAINS(LCASE(?entityLabel), LCASE(?country)))

  # Step 4: Identify a professional who is both an office holder and politician in New Zealand Army
  ?professional dbo:officeHolder <http://dbpedia.org/resource/New_Zealand_Army> ;
                a dbo:Politician .

  # Step 5: Determine the profession's military unit
  ?professional dbo:militaryUnit ?militaryUnit .

  # Step 6: Find wars associated with this military unit
  ?militaryUnit dbo:participatedInWar ?war .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT ?person WHERE {
  # Step 1: Get Dino Merlin's birth name
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?birthName .

  # Step 2: Find awardees and their band members
  ?awardee <http://dbpedia.org/ontology/award> ?award .
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?awardee .
  ?bandMember <http://dbpedia.org/property/birthName> ?personBirthName .

  # Step 3: Link the birth name of Dino Merlin to a band member
  FILTER (?birthName = ?personBirthName)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer ?profession WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://purl.org/dc/terms/creator> ?producer .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
      <http://xmlns.com/foaf/0.1/alternativeName> ""The Shadow"" ;
      <http://purl.org/dc/terms/profession> ?profession .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?dokkenBandMember ?meshuggahArtist ?saSlayerArtist WHERE {
  # Step 1: Find band members of Donald Maynard Dokken
  OPTIONAL {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?dokkenBandMember .
  }

  # Step 2: Find associated musical artists of Meshuggah
  OPTIONAL {
    <http://dbpedia.org/resource/Meshuggah> a <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/Group> .
    ?bandMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Meshuggah> .
    ?bandMember a <http://dbpedia.org/ontology/MusicalArtist> .
    ?bandMember <http://dbpedia.org/ontology/name> ?meshuggahArtist .
  }

  # Step 3: Find associated musical artist of S.A. Slayer
  OPTIONAL {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?saSlayerArtist .
  }
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?child ?nativePlace WHERE {
  # Step 1: Find children of Jon Pertwee
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Jon_Pertwee> .
  
  # Step 2: Determine the native place (birthplace) of each child
  ?child <http://dbpedia.org/ontology/birthPlace> ?residence .

  # Step 3: Ensure the residence is a settlement and located in Britain
  ?residence <http://www.w3.org/2004/02/skos/core#broader> ?settlement .
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 4: Find politicians who are office holders from this settlement
  ?politician <http://dbpedia.org/ontology/birthPlace> ?residence .
  ?politician <http://www.w3.org/2002/07/owl#sameAs> ?officeHolder .
  
  # Step 5: Ensure the politician is native to France
  ?officeHolder <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
  ?nativePlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/France> .

}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  
  # Step 2: Find the Spouse of Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Determine the Father of the Spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 4: Identify the Child of This Father
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Step 5: Find the Birth Name of Princess Victoria Louise of Prussia
  ?princessBirthName <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Ensure birth name matches
  FILTER(?birthName = ""Princess Victoria Louise of Prussia"")

  # Step 6: Determine the Spouse of the Person with the Birth Name as a Royalty
  ?personBirthName <http://dbpedia.org/ontology/birthName> ?birthName .
  ?personBirthName <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?personBirthName <http://dbpedia.org/property/spouse> ?spousePerson .

  # Step 7: Identify Parent of Prince Ernest Augustus of Hanover (born 1914)
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)> .
  
  # Step 8: Combine Results
  FILTER(?child = ?spousePerson && ?child = ?parent)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Find natives of Compton, California
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  
  # Step 2: Identify movies that are also television shows
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110769069> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow1000000010> .
  
  # Step 3: Find actors in these movies
  ?movie <http://dbpedia.org/ontology/castMember> ?actor .
  
  # Ensure the actor is a person
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Person> .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?almaMaterRoyalMedal ?nicknameQueenUniversityBelfast ?almaMaterMayor WHERE {
  # Alma Mater of Awardee of Royal Medal
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Royal_Medal> .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMaterRoyalMedal .
  }
  
  # Figure Known as Nickname of Queen's University Belfast
  OPTIONAL {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://xmlns.com/foaf/0.1/knows> ?nickname .
    ?nickname <http://purl.org/dc/terms/title> ?nicknameQueenUniversityBelfast .
  }
  
  # Alma Mater of Mayor, that is a Politician, of Northern Ireland Forum
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politicianForParty> ?party .
    ?mayor <http://dbpedia.org/ontology/memberOfParliament> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .
  }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?person <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/ontology/awardee> [
    <http://dbpedia.org/ontology/award> ?award ;
    <http://dbpedia.org/property/campaign> ?campaign
  ] .
  FILTER (
    ?campaign = <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign>
  )
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?awardee ?commanderInForce WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/awardee> ?awardee .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    ?conflict <http://dbpedia.org/ontology/commanderInForce> ?commanderInForce .
    FILTER(?commanderInForce = <http://dbpedia.org/resource/Alexander_I_of_Russia>)
  }
}
```",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?administration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    ?leader <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Leader_of_the_Chamber_of_Deputies_of_the_Czech_Republic> ;
           <http://purl.org/dc/terms/type> ?type .
    FILTER (?type = <http://dbpedia.org/class/yago/PoliticalParty108069068> || ?type = <http://dbpedia.org/class/yago/Organisation106951786>)
    OPTIONAL { 
      ?leader <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
      ?address <http://purl.org/dc/terms/description> ?administration .
    }
  }
}
```",3,5,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  # Death place of Matsudaira Tadamasa's grandfather
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://www.w3.org/2002/07/owl#sameAs> ?mat .
    ?mat <http://dbpedia.org/ontology/father> ?father1 .
    ?father1 <http://dbpedia.org/ontology/father> ?grandfather .
    ?grandfather <http://dbpedia.org/ontology/politician> true .
    ?grandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }

  # Administration of Emperor Go-Mizunoo's father
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://www.w3.org/2002/07/owl#sameAs> ?goMizunoo .
    ?goMizunoo <http://dbpedia.org/ontology/father> ?father2 .
    ?father2 <http://dbpedia.org/ontology/officeHolder> ?administration .
  }

  # Birth place of a Boshin War commander
  OPTIONAL {
    <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",7,9,8,3,3,3,3,71,1,14,0,0.06666666666666667,1.0,0.125
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"```sparql
SELECT ?birthPlaceSaito ?administrationFatherGoMizunoo ?deathPlaceGrandfatherTadamasa WHERE {
  # Birth place of Saitō Hajime
  OPTIONAL {
    <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceSaito .
  }

  # Administration of the father of Emperor Go-Mizunoo
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?fatherGoMizunoo .
    ?fatherGoMizunoo <http://dbpedia.org/property/administration> ?administrationFatherGoMizunoo .
  }

  # Death place of the father (politician) of Matsudaira Tadamasa's father
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?fatherTadamasa .
    ?fatherTadamasa <http://dbpedia.org/ontology/father> ?grandfatherTadamasa .
    FILTER EXISTS { ?grandfatherTadamasa <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:Politicians> }
    ?grandfatherTadamasa <http://dbpedia.org/ontology/deathPlace> ?deathPlaceGrandfatherTadamasa .
  }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?grandChild WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> ?spouse .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/ontology/child> ?ladislaus .
  ?ladislaus <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .

  ?parent <http://dbpedia.org/ontology/child> ?gezaParent .
  ?gezaParent <http://dbpedia.org/resource/Géza_von_Habsburg> .

  ?josephChild <http://dbpedia.org/ontology/child> ?joseph .
  ?joseph <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  ?gezaParent = ?parent .
  ?ladislausChild <http://dbpedia.org/ontology/child> ?ladislaus .
  ?ladislausChild <http://dbpedia.org/ontology/child> ?grandChild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace ?administration WHERE {
  # Step 1: Find Matsudaira Tadamasa's father who is an office holder
  ?mat_office_holder <http://dbpedia.org/ontology/father> ?mat_father .
  ?mat_office_holder a <http://dbpedia.org/class/yago/OfficeHolder100000001> .

  # Step 2: Find the politician father of Matsudaira Tadamasa's office holder
  ?mat_father <http://dbpedia.org/ontology/father> ?politician_father .
  ?politician_father a <http://dbpedia.org/class/yago/Politician1000000> .

  # Step 3: Get the death place of this politician father
  ?politician_father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .

  # Step 4: Find Emperor Go-Mizunoo's father who is an office holder
  ?go_office_holder <http://dbpedia.org/ontology/father> ?go_father .
  ?go_office_holder a <http://dbpedia.org/class/yago/OfficeHolder100000001> .

  # Step 5: Find the administration of this office holder
  ?go_office_holder <http://dbpedia.org/property/administration> ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?prodiParty ?andreottiParty ?ippReference WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en .
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://purl.org/dc/terms/description> ?ippReference .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT DISTINCT ?native WHERE {
  # Step 1: Identify Sean Pertwee
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  
  # Step 2: Find Sean Pertwee's claim to fame (films and military conflicts)
  ?claimToFame a <http://dbpedia.org/ontology/Film> ;
               a <http://dbpedia.org/ontology/MilitaryConflict> ;
               <http://dbpedia.org/property/claimToFame> <http://dbpedia.org/resource/Sean_Pertwee> .
  
  # Step 3: Identify actors of these claims to fame
  ?actor <http://dbpedia.org/ontology/starring> ?claimToFame ;
         a <http://dbpedia.org/ontology/Actor> .

  # Step 4: Find native politician/office holder from France among these actors
  ?politician <http://www.w3.org/ns/prov#wasDerivedFrom> ?actor ;
              <http://dbpedia.org/property/nationality> ""French"" ;
              a <http://dbpedia.org/ontology/Politician>, <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 5: Determine residence of this French politician
  ?residence <http://www.w3.org/2006/vcard/ns#hasAddress> ?address ;
             <http://purl.org/dc/terms/description> ?politician .
  
  FILTER (CONTAINS(LCASE(?address), ""british"") && CONTAINS(LCASE(?address), ""settlement""))

  # Step 6: Find native of this residence
  ?native <http://dbpedia.org/ontology/nationality> ?residence .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?war ?triggeClaimToFame ?blakeClaimToFame WHERE {
  # Find the person born as Carl Pontus Gahn
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" .

  # Identify wars involving Thomas Trigge and Joaquín Blake
  ?war a dbo:MilitaryConflict, dbo:SocietalEvent, dbo:Event ;
       dbo:commander ?trigge ;
       dbo:commander ?blake .
  
  # Ensure the commanders are Thomas Trigge and Joaquín Blake
  ?trigge foaf:name ""Thomas Trigge"" .
  ?blake foaf:name ""Joaquín Blake"" .

  # Retrieve claim to fame for each commander in these wars
  OPTIONAL { ?trigge dbo:claimToFame ?triggeClaimToFame . }
  OPTIONAL { ?blake dbo:claimToFame ?blakeClaimToFame . }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?almaMater ?nickname WHERE {
  # Find the current mayor of Belfast who is also a politician
  ?mayor <http://dbpedia.org/ontology/politician> _:b1 .
  ?mayor <http://dbpedia.org/property/mayorFor> <http://dbpedia.org/resource/Belfast> .

  # Retrieve the alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Find Queen's University Belfast and its nickname
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","```sparql
SELECT ?battleWar ?workWar ?narcisoForce WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryConflicts> ?battleWar .
  }
  
  OPTIONAL {
    ?work <http://purl.org/dc/terms/date> ""----01-09""^^xsd:date ;
          <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/militaryConflicts> ?workWar .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryCommanderForces> ?narcisoForce .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?force1 ?force2 WHERE {
  OPTIONAL {
    ?event1 <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?event1 <http://www.w3.org/2004/02/skos/core#broader> ?societalEvent .
    ?event1 <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
    ?event1 <http://dbpedia.org/property/militaryForce> ?force1 .
  }
  
  OPTIONAL {
    ?decedent <http://www.w3.org/2002/07/owl#death> ?deathEvent .
    ?deathEvent <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Francoist_Spain> .
    ?event2 <http://dbpedia.org/ontology/person> ?decedent .
    ?event2 <http://www.w3.org/2004/02/skos/core#broader> ?societalEvent .
    ?event2 <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
    ?event2 <http://dbpedia.org/property/militaryForce> ?force2 .
  }
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?childOfJosephAugust ?parentOfChildOfJosephFrancis WHERE {
  # Find the child of Archduke Joseph August of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephAugust .

  # Find the children of Archduke Joseph Francis of Austria and their parents
  {
    SELECT ?childOfJosephFrancis ?parentOfChildOfJosephFrancis WHERE {
      <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephFrancis .
      ?childOfJosephFrancis <http://www.w3.org/2000/01/rdf-schema#label> ?parentLabel .
      ?parentLabel <http://dbpedia.org/ontology/birthName> ?parentOfChildOfJosephFrancis .
    }
  }

  # Match the child of Joseph August with a parent from the children of Joseph Francis
  FILTER (?childOfJosephAugust = ?parentOfChildOfJosephFrancis)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?finalCommander WHERE {
  # Step 1: Identify the 'Polish Horse'
  ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
  ?polishHorse a <http://dbpedia.org/ontology/MilitaryUnit> ;
               a <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find the commander in the war involving 'Polish Horse'
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://dbpedia.org/ontology/participant> ?polishHorse .
  ?war <http://dbpedia.org/property/commander> ?commanderInWar .

  # Step 3: Identify the military conflict involving Rutger Jan Schimmelpenninck
  ?event a <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?event <http://dbpedia.org/property/commander> ?commanderInEvent .

  # Step 4: Find the commander in the German campaign of 1813
  ?campaign a <http://dbpedia.org/ontology/MilitaryConflict> ;
            <http://dbpedia.org/ontology/name> ""German campaign of 1813""@en .
  ?campaign <http://dbpedia.org/property/commander> ?finalCommander .

  # Link the commanders from different steps
  FILTER(?commanderInWar = ?commanderInEvent)
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?spouse ?personBornAsGigiRice ?actorOfUnnatural WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Gigi Rice"" .
    BIND(?person AS ?personBornAsGigiRice)
  }
  OPTIONAL {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
    ?actor <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?series = <http://dbpedia.org/resource/Unnatural_(TV_series)>)
    BIND(?actor AS ?actorOfUnnatural)
  }
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?person1 ?person2 ?commander WHERE {
  # Person decedent at the capital of Khemis Miliana District
  OPTIONAL {
    ?district <http://dbpedia.org/ontology/capital> ?capital .
    FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>)
    ?person1 <http://dbpedia.org/ontology/deceasedAt> ?capital .
  }

  # Person decedent at the work of Joseph C. Satterthwaite
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/workLocation> ?workLocation .
    ?person2 <http://dbpedia.org/ontology/deceasedAt> ?workLocation .
  }

  # Commander in Franco-Hova Wars
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/nationality> ?nationality .
    ?commander <http://dbpedia.org/property/commandedIn> ""Franco-Hova_Wars"" .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
# Step 1: Find Nie Rongzhen's Award
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/ontology/honoraryTitle> ?award .
}

# Step 2: Find Landmark at Elevation of the Award (Assuming elevation data is available)
SELECT ?landmark WHERE {
  ?award <http://www.w3.org/2006/vcard/ns#hasElevation> ?elevation .
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
}

# Step 3: Find Birthplace of The Boils' Associated Musical Artist Member
SELECT ?birthPlace WHERE {
  # Identify the associated musical artist for ""The Boils""
  ?boils <http://dbpedia.org/ontology/member> ?member .
  ?member <http://dbpedia.org/ontology/memberOf> ?associatedArtist .
  
  # Ensure it is an organization, group, and band
  ?associatedArtist <http://www.w3.org/2002/07/owl#sameAs> ?organization .
  ?organization a <http://dbpedia.org/class/yago/Organisation100000000> ;
                a <http://dbpedia.org/class/yago/MusicalGroup100000000> ;
                a <http://dbpedia.org/class/yago/Band100000000> .

  # Get the birthplace of a member from this associated artist
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?finalLeader WHERE {
  # Step 1: Find Gustav Jonson's leader
  ?gustavJonson dbo:leader ?leader .
  FILTER (EXISTS { ?leader a dbo:OfficeHolder . ?leader a dbo:Politician . })

  # Step 2: Identify the government agency of this leader
  ?agency dbo:head ?leader .

  # Step 3: Find Bruce Fraser's award and its awardee
  ?fraserAward dbo:recipient ?awardee .
  FILTER (EXISTS { ?fraserAward dbo:awarder <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> })

  # Step 4: Find the leader of the awardee's office
  ?awardeeOffice a dbo:GovernmentAgency .
  ?awardeeOffice dbo:head ?finalLeader .

  # Ensure the agency is related to the initial leader's agency
  FILTER (?agency = ?awardeeOffice)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
# Step 1: Identify the author of Pushd and popd
SELECT ?author WHERE {
  ?software <http://dbpedia.org/ontology/creator> ?author .
  FILTER(?software IN (<http://dbpedia.org/resource/Pushd>, <http://dbpedia.org/resource/Popd>)).
}

# Step 2: Find the work that is a software by this author
SELECT DISTINCT ?work WHERE {
  ?author <http://dbpedia.org/ontology/work> ?work .
  ?work <http://www.w3.org/2004/02/skos/core#prefLabel> ""software"" .
}

# Step 3: Determine the awardee of the Wolf Prize in Medicine who is American
SELECT DISTINCT ?awardee WHERE {
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Category:American_people> .
  ?awardee <http://dbpedia.org/property/award> ?prize .
  FILTER(?prize = <http://dbpedia.org/resource/Wolf_Prize_in_Medicine>)
}

# Step 4: Find the award entity related to this American awardee
SELECT DISTINCT ?entity WHERE {
  ?awardee <http://dbpedia.org/property/award> ?prize .
  ?prize <http://dbpedia.org/ontology/entity> ?entity .
  FILTER(?prize = <http://dbpedia.org/resource/Wolf_Prize_in_Medicine>)
}

# Step 5: Identify the work of the author from step 1 that is associated with the award entity found in step 4
SELECT DISTINCT ?work WHERE {
  ?author <http://dbpedia.org/ontology/work> ?work .
  ?entity <http://www.w3.org/2004/02/skos/core#related> ?work .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
SELECT ?partyFather ?partyProdi ?referenceIPP WHERE {
  
  # Assuming a notable MIT alumnus, e.g., Bill Gates (for demonstration purposes)
  OPTIONAL {
    <http://dbpedia.org/resource/Bill_Gates> <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?father <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Bill_Gates> .
    ?father <http://dbpedia.org/ontology/memberOf> ?partyFather .
  }
  
  # Party of Romano Prodi
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/politicalParty> ?partyProdi .
  }

  # Reference to Italian People's Party (1994)
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> .
    ?reference <http://www.w3.org/2000/01/rdf-schema#label> ?referenceIPP .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?emilioMolaCommander ?francoistSpainMilitaryForce WHERE {
  # Find Emilio Mola's commander in a force that is an event
  OPTIONAL {
    ?event rdf:type dbo:Event .
    ?event dbo:commanderEmilioMola <http://dbpedia.org/resource/Emilio_Mola> .
    ?event dbo:commander ?emilioMolaCommander .
  }

  # Find the military force associated with Francoist Spain and Spanish Civil War
  OPTIONAL {
    ?francoEvent rdf:type dbo:SocietalEvent ;
                 dbo:militaryConflict <http://dbpedia.org/resource/Spanish_Civil_War> ;
                 dbo:militaryForce ?francoistSpainMilitaryForce .
  }

  # Ensure the commander is linked to the military force from Francoist Spain and Spanish Civil War
  OPTIONAL {
    ?emilioMolaCommander dbo:commandedMilitaryForce ?francoistSpainMilitaryForce .
  }
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?almaMater ?country WHERE {
  # Step 1 & 2: Find Adela Pankhurst's parent and their child
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Adela_Pankhurst> .
  ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .

  # Step 3: Retrieve the alma mater of this child
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 4 & 5: Find the commander in Battle of Diamond Rock and their residence country
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?country .
  
  # Ensure the residence is a country
  ?country <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT DISTINCT ?war1 ?war2 WHERE {
  # War associated with Gotabhaya Rajapaksa's work
  OPTIONAL {
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/work> ?work .
    ?work <http://dbpedia.org/property/war> ?war1 .
    FILTER EXISTS { ?war1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sri_Lanka> }
  }

  # War associated with the author of ""2019 Sri Lanka Easter bombings""
  OPTIONAL {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?author .
    ?author <http://dbpedia.org/ontology/work> ?work2 .
    ?work2 <http://dbpedia.org/property/war> ?war2 .
    FILTER EXISTS { ?war2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sri_Lanka> }
  }

  # Ensure both wars are related to Sri Lanka
  FILTER (?war1 != UNDEF && ?war2 != UNDEF)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT DISTINCT ?professional WHERE {
  # Find an actor of Unnatural TV series
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
  
  # Get the profession of that actor
  ?actor <http://dbpedia.org/ontology/profession> ?profession .

  # Find any professional in that same profession
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT DISTINCT ?grandchild ?parentOfChild ?parentOfGéza WHERE {
  # Step 1: Find the child of Archduke Joseph Karl of Austria
  ?child1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: Find the grandchild (child of the child)
  ?grandchild <http://dbpedia.org/ontology/child> ?child1 .

  # Step 3: Find the parent of the child of Archduke Joseph Francis of Austria
  ?child2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?parentOfChild <http://dbpedia.org/ontology/child> ?child2 .

  # Step 4: Find the parent of Géza von Habsburg
  ?parentOfGéza <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
  
  # Combine conditions to find a common person or relationship
  FILTER (?grandchild = ?parentOfChild || ?grandchild = ?parentOfGéza)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Step 1: Find band members of YU Grupa who are artists and musical artists
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa> .
  ?member a <http://dbpedia.org/class/yago/MusicalArtist115069068> ; # MusicalArtist
          a <http://dbpedia.org/class/yago/Artist100007846> . # Artist

  # Step 2: Find bands associated with these members
  ?member <http://dbpedia.org/ontology/member> ?band .

  # Step 3: Identify band members of each band found in step 2 who are part of a group
  ?bandMember <http://dbpedia.org/ontology/member> ?band .
  ?bandMember a <http://dbpedia.org/class/yago/MusicalGroup115069068> . # Group

}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?prodiParty ?andreottiParty WHERE {
  # Step 1: Get Romano Prodi's birth name
  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/birthName> ?birthName .
  }
  
  # Step 2 & 3: Find a person with that birth name who is an office holder and politician, and get their party
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en .
    ?person <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
    ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  }
  
  # Step 4: Get Giulio Andreotti's party
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
  }

  # Ensure Partito Popolare Italiano is referenced if applicable
  FILTER(?prodiParty = <http://dbpedia.org/resource/Partito_Popolare_Italiano> || ?andreottiParty = <http://dbpedia.org/resource/Partito_Popolare_Italiano>)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT DISTINCT ?commonArtist WHERE {
  # Step 1: Associated Musical Artists of Watchtower
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .

  # Step 2: Associated Musical Artists of the Artists from Step 1
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
  
  # Step 3: Band Members of Don Dokken
  ?donDokkenMember <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Don_Dokken> .

  # Step 4: Bands that are both a band and an organization for members from Step 3
  ?band1 <http://dbpedia.org/ontology/member> ?donDokkenMember .
  ?band1 <http://www.w3.org/2002/07/owl#sameAs> ?organization1 .
  
  # Ensure the band is classified as both a band and an organization
  ?organization1 <http://dbpedia.org/ontology/band> ?band1 .
  ?organization1 <http://dbpedia.org/ontology/group> ?group1 .

  # Step 5: Associated Musical Artists of Bands from Step 4
  ?artist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?band1 .

  # Step 6: Band of Fredrik Thordendal that is an organization
  ?fredrikBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?fredrikBand <http://www.w3.org/2002/07/owl#sameAs> ?organization2 .
  ?organization2 <http://dbpedia.org/ontology/band> ?fredrikBand .

  # Step 7: Find common associated musical artists
  FILTER (?artist1 = ?artist2)
  BIND(?artist1 AS ?commonArtist)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?bandMemberNevermore ?bandOfFurney WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?reference .
    ?reference <http://dbpedia.org/ontology/bandMember> ?bandMemberNevermore .
    FILTER EXISTS { ?bandMemberNevermore <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> }
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"" .
    ?furney <http://dbpedia.org/ontology/memberOfBand> ?bandOfFurney .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
# Step 1: Find child of Seti I
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find grandchild of Seti I (child of the child)
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  FILTER(?child IN {<result_of_step_1>})
}

# Step 3: Find parent of grandchild
SELECT ?parent WHERE {
  ?grandchild <http://www.w3.org/2000/01/rdf-schema#label> ?grandchildLabel .
  ?parent <http://dbpedia.org/ontology/child> ?grandchild .
}

# Step 4: Identify commander in Battle of Perire who is royalty
SELECT ?commander WHERE {
  ?battle <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Perire>)
}

# Step 5: Find father of commander
SELECT ?father WHERE {
  ?commander <http://dbpedia.org/property/father> ?father .
  FILTER(?commander IN {<result_of_step_4>})
}

# Step 6: Find spouse of father
SELECT ?spouse WHERE {
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER(?father IN {<result_of_step_5>})
}

# Step 7: Identify child of Nefertari
SELECT ?childOfNefertari WHERE {
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?childOfNefertari .
}

# Step 8: Find parent of child of Nefertari
SELECT ?parentOfChild WHERE {
  ?childOfNefertari <http://www.w3.org/2000/01/rdf-schema#label> ?childLabel .
  ?parentOfChild <http://dbpedia.org/ontology/child> ?childOfNefertari .
}

# Final step: Find intersection or relationship
SELECT DISTINCT ?result WHERE {
  VALUES (?entity) { (<result_of_step_3>) (<result_of_step_6>) (<result_of_step_8>) }
}
```

Note: This query assumes that all necessary entities and relationships are available in DBpedia. Some historical details might not be explicitly linked, requiring assumptions or additional data sources.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Identify Beauchamp Seymour, 1st Baron Alcester
  ?beauchamp a dbo:Person ;
             foaf:name ""Beauchamp Seymour"" ;
             schema:birthName ""Beauchamp Seymour"" .

  # Step 2: Find wars associated with Beauchamp Seymour
  ?beauchamp dbo:participatedIn ?war .

  # Step 3: Locate New Zealand Army units involved in those wars
  ?unit a dbo:MilitaryUnit ;
        dbo:participatedIn ?war ;
        dbo:country dbr:New_Zealand .

  # Step 4: Identify office holders and politicians in those military units
  ?person a dbo:Person, dbo:Politician ;
          dbo:officeHolderOf ?unit ;
          dbo:memberOf ?unit .

  # Step 5: Determine entities in Colony of New Zealand related to these wars
  ?entity dbo:participatedIn ?war ;
          dbo:country dbr:Colony_of_New_Zealand .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital ?restingPlace WHERE {
  OPTIONAL {
    # Find the country associated with Armed Forces of South Russia
    <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?country .
    
    # Get the capital of that country
    ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  }
  
  OPTIONAL {
    # Find awardees from Soviet Union shows
    ?show <http://dbpedia.org/ontology/show> ?sowjetUnionShow .
    ?sowjetUnionShow <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Soviet_Union> .
    
    # Get the resting place of those awardees
    ?show <http://dbpedia.org/ontology/awardee> ?awardee .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?nativeManager WHERE {
  OPTIONAL {
    # Step 1: Find the manager of the 1998 Kashima Antlers season
    ?season <http://dbpedia.org/ontology/team> ?team .
    FILTER (STRSTARTS(STR(?season), ""http://dbpedia.org/resource/1998_Kashima_Antlers_season""))
    
    # Step 2: Find the manager of that team
    ?manager <http://dbpedia.org/ontology/teamManaged> ?team ;
             <http://www.w3.org/2000/01/rdf-schema#label> ?managerLabel .
    
    # Step 3: Ensure the manager is a native of Japan and a sports manager
    ?nativeManager <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> ;
                   <http://dbpedia.org/ontology/teamManaged> ?team ;
                   <http://www.w3.org/2000/01/rdf-schema#label> ?managerLabel .
    FILTER EXISTS { ?nativeManager <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Sports_manager> }
  }

  OPTIONAL {
    # Step 4: Find the alma mater of Eiji Ōtsuka
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    
    # Ensure it is a Japanese university
    FILTER EXISTS { 
      ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?universityLabel ;
                 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
      FILTER (STRSTARTS(STR(?almaMater), ""http://dbpedia.org/resource/"") &&
              STRSTARTS(STR(?almaMater), ""http://dbpedia.org/resource/"") && 
              ?almaMater <http://www.w3.org/2002/07/owl#sameAs> ?university .
      FILTER EXISTS { ?university a <http://dbpedia.org/class/yago/YahooCategoryUniversity100000001> }
    }

    # Step 5: Find members of this alma mater who are also natives of Japan and managers
    ?nativeManager <http://dbpedia.org/ontology/almaMater> ?almaMater ;
                   <http://www.w3.org/2000/01/rdf-schema#label> ?managerLabel .
    FILTER EXISTS { ?nativeManager <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> }
}
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find spouse of Princess Victoria Louise of Prussia
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
  
  # Step 2: Find father of this spouse
  ?father <http://dbpedia.org/ontology/father> ?spouse .

  # Step 3: Find child of this father
  ?child <http://dbpedia.org/ontology/father> ?father .

  # Step 4: Identify parent (royalty) of Prince George William of Hanover
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .

  # Step 5: Find child (royalty) of this royal parent
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalChild <http://dbpedia.org/ontology/parent> ?parent .

  # Step 6: Determine the parent of this royal child
  ?finalParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?finalParent <http://dbpedia.org/ontology/child> ?royalChild .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT DISTINCT ?settlement WHERE {
  # Step 1: Retrieve birth place of Marion James
  OPTIONAL { 
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?birthPlace != null)
  }
  
  # Step 2: Ensure the birth place is a settlement
  OPTIONAL {
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/resource/Settlement> .
  }

  # Step 3: Retrieve resting place of architect of P.D. Houston Jr. House
  OPTIONAL {
    ?architect <http://dbpedia.org/ontology/architectOf> <http://dbpedia.org/resource/P._D._Houston_Jr._House> .
    ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlaceArchitect .
  }

  # Step 4: Retrieve resting place of Luke Lea (American politician, born 1879)
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Lea_(politician)> <http://dbpedia.org/ontology/deathPlace> ?restingPlaceLukeLea .
  }
  
  # Step 5: Identify common entity
  FILTER(?birthPlace = ?settlement && (?restingPlaceArchitect = ?settlement || ?restingPlaceLukeLea = ?settlement))
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?associatedArtist ?bandMember ?band WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    ?film <http://dbpedia.org/ontology/references> ?bandRef .
    ?film <http://dbpedia.org/ontology/filmName> ""Nevermore (2006 film)"" .
    ?bandRef <http://dbpedia.org/ontology/member> ?bandMember .
  }
  
  OPTIONAL {
    ?person2 <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
    ?person2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person2 <http://dbpedia.org/property/memberOfBand> ?band .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  # Find Ramesses II as the father of Merneptah
  <http://dbpedia.org/resource/Merneptah> <http://www.w3.org/2002/07/owl#sameAs> ?merneptah .
  ?merneptah <http://dbpedia.org/ontology/father> ?ramessesII .

  # Find the spouse of Ramesses II who is also a parent of Meritamen
  ?ramessesII <http://dbpedia.org/property/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?jonathonWar ?electionCountry ?heatherRoyWar WHERE {
  OPTIONAL {
    ?jonathonAward <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Jonathon_Band> .
    ?jonathonAward <http://dbpedia.org/property/war> ?jonathonWar .
  }
  
  OPTIONAL {
    ?electionLeader <http://dbpedia.org/ontology/leader> ?electionEvent .
    ?electionEvent <http://dbpedia.org/ontology/electionDate> ""1962""^^xsd:gYear .
    ?electionLeader <http://www.w3.org/2000/01/rdf-schema#label> ?leaderLabel .
    FILTER(CONTAINS(LCASE(?leaderLabel), ""politician""))
    
    ?birthPlace <http://dbpedia.org/ontology/birthPlace> ?electionLeader .
    ?country <http://dbpedia.org/ontology/country> ?birthPlace .
  }
  
  OPTIONAL {
    ?heatherRoyProfession <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Heather_Roy> .
    ?heatherRoyProfession <http://www.w3.org/2006/vcard/ns#organization-name> ?militaryUnit .
    
    ?war <http://dbpedia.org/property/militaryUnit> ?militaryUnit .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Identify societal event that is also a military conflict
  ?event rdf:type <http://dbpedia.org/ontology/SocietalEvent> .
  ?event rdf:type <http://dbpedia.org/ontology/Event> .
  ?event rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .

  # Find decedent associated with Francoist Spain and Spanish Civil War
  ?person dbpedia-owl:deathPlace <http://dbpedia.org/resource/Francoist_Spain> ;
          dbpedia-owl:causeOfDeath ?event .
  
  # Retrieve military force of the societal event (military conflict)
  ?event dbpedia-owl:militaryForce ?militaryForce1 .

  # Retrieve military force associated with Spanish Civil War
  <http://dbpedia.org/resource/Spanish_Civil_War> dbpedia-owl:militaryForce ?militaryForce2 .
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?child WHERE {
  ?scott a <http://dbpedia.org/ontology/Actor> ;
         <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
  
  FILTER (str(?scott) = ""http://dbpedia.org/resource/Scott_McCloud"")

  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?francoistMilitaryForce ?prietoPredecessorMilitaryForce ?emilioMolaCommander WHERE {
  # Part 1: Military Force of Francoist Spain
  OPTIONAL {
    ?francoistSpain <http://dbpedia.org/ontology/type> ?type .
    FILTER (?type IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    ?francoistSpain <http://dbpedia.org/property/militaryForce> ?force .
    ?decedent <http://dbpedia.org/ontology/decedent> ?francoistSpain .
    ?decedent <http://dbpedia.org/ontology/militaryForce> ?francoistMilitaryForce .
  }

  # Part 2: Military Force of Predecessor of Indalecio Prieto
  OPTIONAL {
    ?indalecioPrieto <http://dbpedia.org/ontology/predecessor> ?prietoPredecessor .
    ?prietoPredecessor <http://dbpedia.org/ontology/type> ?type .
    FILTER (?type IN (<http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    ?prietoPredecessor <http://dbpedia.org/property/militaryForce> ?prietoPredecessorMilitaryForce .
  }

  # Part 3: Commander in the Force of Emilio Mola
  OPTIONAL {
    ?emilioMolaEvent <http://dbpedia.org/ontology/type> <http://dbpedia.org/ontology/Event> .
    ?emilioMolaEvent <http://dbpedia.org/property/commander> ?emilioMolaCommander .
    ?emilioMola <http://dbpedia.org/ontology/event> ?emilioMolaEvent .
  }
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
SELECT ?actorProfession ?gigiRiceProfession WHERE {
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/character> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
    ?actor <http://purl.org/dc/terms/profession> ?actorProfession .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
    ?person <http://purl.org/dc/terms/profession> ?gigiRiceProfession .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child ?predecessor WHERE {
  # Find the child who is both an office holder and royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/officeHolder> ?office .

  # Find the predecessor of this child in their office
  OPTIONAL { 
    ?office <http://dbpedia.org/property/predecessor> ?predecessor .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT DISTINCT ?commonWar WHERE {
  # Step 1: Find commander in Battle of Verdun
  ?verdunCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Verdun> .
  
  # Step 2: Find wars involving the Verdun commander
  ?verdunCommander <http://dbpedia.org/ontology/war> ?war1 .

  # Step 3: Identify capital of Algeria and decedent person
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  ?decedentPerson <http://dbpedia.org/ontology/deathPlace> ?capital .
  
  # Step 4: Find wars involving the decedent commander
  ?decedentCommander <http://dbpedia.org/ontology/commander> ?decedentPerson .
  ?decedentCommander <http://dbpedia.org/ontology/war> ?war2 .

  # Step 5: Identify common war(s)
  FILTER (?war1 = ?war2)
  BIND(?war1 AS ?commonWar)

  # Ensure the wars are military conflicts and events
  ?commonWar <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/resource/Military_conflict> .
  ?commonWar a <http://dbpedia.org/class/yago/YAGO2Event104069834> .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"```sparql
SELECT ?birthPlaceEnomoto ?administrationFatherSpouse ?deathPlacePolitician WHERE {
  # Birthplace of Enomoto Takeaki
  OPTIONAL { 
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceEnomoto .
  }

  # Administration of the father of the spouse (royalty) of Tokugawa Masako
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/property/spouse> ?spouseMasako .
    ?spouseMasako <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?spouseMasako <http://dbpedia.org/ontology/father> ?fatherSpouse .
    ?fatherSpouse <http://dbpedia.org/property/administration> ?administrationFatherSpouse .
  }

  # Death place of the father (politician) of the father (office holder) of Matsudaira Tadamasa
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?fatherTadamasa .
    ?fatherTadamasa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?fatherTadamasa <http://dbpedia.org/ontology/father> ?grandFatherTadamasa .
    ?grandFatherTadamasa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?grandFatherTadamasa <http://dbpedia.org/ontology/deathPlace> ?deathPlacePolitician .
  }
}
```",7,10,8,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the royal parent of Archduke Ladislaus Philipp of Austria
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://www.w3.org/2002/07/owl#sameAs> ?ladislaus .
    ?ladislaus <http://dbpedia.org/ontology/birthParent> ?parentRoyalty .
    ?parentRoyalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }

  # Step 2: Find the child of this royal parent
  OPTIONAL {
    ?parentRoyalty <http://dbpedia.org/ontology/birthChild> ?childOfRoyalParent .
  }
  
  # Step 3: Find the grandchild (child of the child)
  OPTIONAL {
    ?childOfRoyalParent <http://dbpedia.org/ontology/birthChild> ?grandchild .
  }

  # Step 4: Identify the landmark at elevation 96.0
  OPTIONAL {
    ?landmark <http://www.w3.org/2006/vcard/ns#hasGPE> ?settlement .
    ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float .
    ?landmark <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/LandmarksInSettlements100000001> .
  }

  # Step 5: Find the native parent of this landmark
  OPTIONAL {
    ?nativePerson <http://dbpedia.org/ontology/birthPlace> ?settlement .
    ?nativeParent <http://www.w3.org/2002/07/owl#sameAs> ?nativePerson .
    ?nativeParent <http://dbpedia.org/ontology/birthChild> ?parentOfNative .
  }

  # Step 6: Find the final child
  OPTIONAL {
    ?grandchild <http://dbpedia.org/ontology/birthChild> ?finalChild .
    ?parentOfNative <http://www.w3.org/2002/07/owl#sameAs> ?finalChildParent .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbpedia-owl:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Find his successor
  OPTIONAL { 
    ?successor dbpedia-owl:predecessor ?antiochus .
    
    # Step 3: Identify the child of the successor
    OPTIONAL {
      ?child dbpedia-owl:parent ?successor .
      
      # Step 4: Determine the spouse of that child
      ?child dbpedia-owl:spouse ?spouse .
    }
  }

  # Step 5: Find the parent of Antiochus's child
  OPTIONAL {
    ?antiochusChild dbpedia-owl:parent ?antiochus .
    ?antiochusChild dbpedia-owl:parent ?parent .
  }

  # Step 6: Identify the child of Antiochus III the Great
  OPTIONAL {
    ?childOfAntiochusIII dbpedia-owl:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Get Ted McGinley's birth name
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?birthName .

  # Step 2: Find the actor of ""Unnatural"" (TV series)
  OPTIONAL {
    <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/starring> ?actor .
  }

  # Step 3: Confirm the profession is acting
  FILTER EXISTS { 
    ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  }

  # Step 4: Find a person with the same birth name and profession as the actor
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  }

  # Step 5: Retrieve the spouse of this person
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find associated musical artists of Donald Maynard Dokken
  VALUES (?dokken) { <http://dbpedia.org/resource/Don_Dokken> }
  
  OPTIONAL {
    ?dokken <http://dbpedia.org/ontology/associatedMusicalArtist> ?artistDokken .
    
    # Step 2: Find associated musical artists of Red Tide
    VALUES (?redTide) { <http://dbpedia.org/resource/Red_Tide_(band)> }
    OPTIONAL {
      ?redTide <http://dbpedia.org/ontology/associatedMusicalArtist> ?artistRedTide .
      
      # Step 3: Find associated musical artists of the artist from Red Tide that reference Watchtower
      OPTIONAL {
        ?artistRedTide <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerRef .
        
        FILTER regex(?watchtowerRef, ""Watchtower"", ""i"")
        
        # Step 4: Find common band members between Dokken's artists and those linked through Red Tide
        OPTIONAL {
          ?artistDokken <http://dbpedia.org/ontology/memberOf> ?bandMember .
          ?watchtowerRef <http://dbpedia.org/ontology/memberOf> ?bandMember .
        }
      }
    }
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?nevermoreMember ?jimSheppardArtist ?josephMichaelBand WHERE {
  # Find a band member of Nevermore who is also an artist
  ?band rdf:type dbo:MusicalGroup ;
        rdfs:label ""Nevermore""@en .
  ?nevermoreMember dbo:memberOf ?band ;
                   dbo:occupation dbr:Artist .

  # Find associated musical artists of Jim Sheppard
  ?jimSheppard dbo:associatedMusicalArtist ?jimSheppardArtist .

  # Find the band of Joseph Michael using his birth name
  ?person foaf:name ""Joseph Michael""@en ;
          dbp:birthdayYear ?year .
  ?person dbo:birthName ?birthName .
  ?band2 dbo:member ?person .
  
  FILTER(?birthName = ""Joseph Michael"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?landmark WHERE {
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Dropkick_Murphys> .
    ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commandedBattle> <http://dbpedia.org/resource/Battle_of_Chishui_River> .
    ?award <http://dbpedia.org/property/receivedBy> ?commander .
    ?landmark <http://www.geonames.org/ontology#elevation> ?elevation .
    FILTER(?elevation = ?awardElevation)  # Assuming we have a way to link elevation with the award
    ?landmark <http://dbpedia.org/property/name> ?landmarkName .
    BIND(STR(?landmarkName) AS ?landmark)
  }
}
```

Note: The second part of the query assumes there is some logical connection between an award's elevation and a landmark, which might require additional context or assumptions not directly available in DBpedia. Adjustments may be necessary based on actual data availability.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
# Query 1: Figure known as Stolz von Liechtenstein
SELECT ?figure WHERE {
  ?figure <http://dbpedia.org/ontology/nickName> ""Stolz von Liechtenstein"" .
}

# Query 2: Team of a soccer player and manager born on Eiður Guðjohnsen's birth date
SELECT DISTINCT ?team WHERE {
  # Get Eiður Guðjohnsen's birth date
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Find individuals who are both soccer players and managers born on that date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://dbpedia.org/ontology/profession> ?profession1 .
  ?person <http://dbpedia.org/ontology/profession> ?profession2 .
  FILTER (?profession1 = <http://dbpedia.org/resource/Soccer_player> && ?profession2 = <http://dbpedia.org/resource/Soccer_manager>) .

  # Get the team associated with these individuals
  ?person <http://dbpedia.org/property/team> ?team .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find countries in the region of Central European Time
  ?cet <http://dbpedia.org/ontology/timeZone> ?region .
  ?region <http://www.w3.org/2004/02/skos/core#hasTopConcept> ?country .

  # Step 2: Identify a writer who was decedent at Sremska Kamenica
  ?writer <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .

  # Step 3: Find the alma mater of this writer
  ?writer <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 4: Link the country to the alma mater
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
  FILTER (lang(?countryLabel) = ""en"")
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?organisation ?mayor ?almaMater ?qub WHERE {
  # Find an organisation in Belfast
  ?organisation <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Belfast"" .

  # Identify the mayor who is a politician of this organisation
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party ;
         <http://dbpedia.org/ontology/mayorFor> ?organisation .
  
  # Retrieve the alma mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Identify the figure known as QUB
  ?qub <http://www.w3.org/2000/01/rdf-schema#label> ""QUB"" .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parentOfGrandchild ?spouse WHERE {
  # Step 1: Find Seti I's child
  ?childSetiI <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Seti_I> .

  # Step 2: Find the grandchild of Seti I
  ?grandChildOfSetiI <http://dbpedia.org/ontology/parent> ?childSetiI .

  # Step 3: Determine the parent of this grandchild
  ?parentOfGrandchild <http://dbpedia.org/ontology/child> ?grandChildOfSetiI .

  # Step 4: Identify Ramesses II's spouse
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Check if the parent of the grandchild is also a spouse of Ramesses II
  FILTER(?parentOfGrandchild = ?spouse)
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
SELECT ?team WHERE {
  # Step 1: Identify Gary Williams' Birthplace
  ?birthPlace <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> ;
              a <http://dbpedia.org/class/yago/EnglishSettlements100000001> .

  # Step 2: Find Native Soccer Players and Managers
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
          (<http://dbpedia.org/ontology/soccerPlayer> ; <http://dbpedia.org/ontology/soccerManager>) ?role .

  # Step 3: Determine Team Association in 2015 Sacramento Republic FC Season
  ?person <http://dbpedia.org/property/team> ?team .
  FILTER EXISTS { 
    ?season <http://dbpedia.org/property/year> ""2015"" ;
            <http://dbpedia.org/ontology/team> ?team .
  }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?emilioCommanderEvent ?franciscoMilitaryForce WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
    ?event rdf:type <http://dbpedia.org/ontology/Event> .
    BIND(?event AS ?emilioCommanderEvent)
  }
  
  OPTIONAL {
    ?conflict <http://dbpedia.org/ontology/militaryForce> ?force .
    ?conflict rdf:type <http://dbpedia.org/ontology/SocietalEvent> .
    ?conflict rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .
    ?conflict <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    BIND(?force AS ?franciscoMilitaryForce)
  }
}
```",4,7,5,2,2,3,3,71,0,10,32,0.0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?finalBandMember WHERE {
  # Step 1: Identify Don Dokken
  ?donDokken <http://dbpedia.org/ontology/persona> ""Don Dokken"" .
  
  # Step 2: Find associated musical artist of Watchtower (band)
  ?watchtower <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .

  # Step 3: Identify Fredrik Thordendal's band
  ?fredrikBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?fredrikBand a <http://dbpedia.org/class/yago/YAGO2ClassGroup1000000010> ; # Group
               a <http://dbpedia.org/class/yago/YAGO2ClassOrganization1000000010> . # Organization

  # Step 4: Chain together to find the final band member
  ?associatedArtist <http://dbpedia.org/property/member> ?finalBandMember .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
    ?predecessor <http://dbpedia.org/ontology/predecessor> ?child .
    ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?predecessor <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",4,6,5,2,2,3,3,71,0,2,1,0.0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?spouse WHERE {
  # Step 1: Find children of Ernest Augustus, Crown Prince of Hanover
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Check if the child is royalty and has a parent who is Ernest Augustus, Duke of Brunswick
  OPTIONAL {
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  }

  # Step 3: Find the spouse of Princess Victoria Louise of Prussia
  OPTIONAL {
    ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> ;
              <http://xmlns.com/foaf/0.1/name> ""Princess Victoria Louise of Prussia""@en .
    ?princess <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",6,8,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
SELECT ?actor WHERE {
  OPTIONAL {
    # Find Sean Pertwee's claim to fame (film and military conflict)
    ?pertwee <http://dbpedia.org/ontology/birthName> ""Sean Pertwee"" .
    ?claimToFame <http://dbpedia.org/ontology/subjectOf> ?pertwee ;
                 a <http://dbpedia.org/class/yago/Film150000001> , <http://dbpedia.org/class/yago/MilitaryConflict1000000> .

    # Find actor of the claim to fame
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
  }
  
  OPTIONAL {
    # Verify Sean Pertwee as child of John Devon Roland Pertwee
    ?johnPertwee <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
    ?johnPertwee <http://dbpedia.org/ontology/child> ?pertwee .
  }
  
  OPTIONAL {
    # Find Sylvie Bermann's residence
    ?bermann <http://dbpedia.org/ontology/birthName> ""Sylvie Bermann"" .
    ?residence <http://dbpedia.org/ontology/residence> ?bermann ;
               a <http://dbpedia.org/class/yago/Settlement1000000> ;
               <http://www.w3.org/2006/vcard/ns#country-name> ""United Kingdom"" .
  }
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .

  # Find spouse of Ted McGinley
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse1 .
  }

  # Find spouse of Georgeanne Marie Rice
  OPTIONAL {
    <http://dbpedia.org/resource/Georgeanne_Marie_Rice> <http://dbpedia.org/property/spouse> ?spouse2 .
  }

  # Ensure the professional matches Satomi Ishihara's profession and is a common spouse
  FILTER (?spouse1 = ?spouse2)
  BIND(?spouse1 AS ?professional)

  # Check if the professional has the same profession as Satomi Ishihara
  VALUES ?profession { <http://dbpedia.org/resource/Satomi_Ishihara> }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","```sparql
SELECT ?qub ?almaMaterRoyalMedalist ?mayorAlmaMater WHERE {
  # Figure known as QUB
  <http://dbpedia.org/resource/Queen's_University_Belfast> rdfs:label ""QUB""@en .

  # Alma mater of the awardee of Royal Medal
  ?person dbpedia-owl:award <http://dbpedia.org/resource/Royal_Medal> .
  ?person dbo:almaMater ?almaMaterRoyalMedalist .

  # Alma mater of the mayor, who is a politician, of an organization in Belfast
  ?organization dbo:location <http://dbpedia.org/resource/Belfast> .
  ?mayor dbo:position ""Mayor""@en ;
         rdf:type dbo:Politician .
  ?mayor dbo:almaMater ?mayorAlmaMater .
  ?organization dbo:mayor ?mayor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
SELECT ?player ?nickname WHERE {
  OPTIONAL {
    # Find the manager of the 2016–17 Hull City A.F.C. season who is a sports manager
    <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> <http://dbpedia.org/ontology/coach> ?manager .
    ?manager <http://www.w3.org/2000/01/rdf-schema#label> ?managerLabel .
    FILTER(CONTAINS(LCASE(?managerLabel), ""sports manager""))
    
    # Find players associated with this manager
    ?team <http://dbpedia.org/ontology/coach> ?manager .
    ?player <http://dbpedia.org/ontology/teamMember> ?team .
  }
  
  OPTIONAL {
    # Find organisations that are soccer clubs and sports clubs related to England
    ?club <http://www.w3.org/2002/07/owl#sameAs> ?reference .
    ?reference <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> .
    ?club <http://dbpedia.org/ontology/sportsTeam> ?team .
    ?team <http://www.w3.org/2000/01/rdf-schema#label> ?teamLabel .
    FILTER(CONTAINS(LCASE(?teamLabel), ""soccer club"") && CONTAINS(LCASE(?teamLabel), ""sports club""))
    
    # Find the nickname of these clubs
    ?club <http://dbpedia.org/ontology/nickname> ?nickname .
  }
}
```",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","```sparql
SELECT ?warCommander ?forceCommander WHERE {
  # Find the war involving both entities
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://dbpedia.org/ontology/participatedIn> [
         a <http://dbpedia.org/ontology/MilitaryUnit> ;
         rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en
       ] ;
       <http://dbpedia.org/ontology/participatedIn> ?schimmelpenninckForce .
  
  # Ensure the war is also a societal event
  ?war a <http://dbpedia.org/ontology/SocialEvent> .

  # Find Rutger Jan Schimmelpenninck's military force
  ?schimmelpenninckForce a <http://dbpedia.org/ontology/MilitaryUnit> ;
                         <http://dbpedia.org/ontology/commandedBy> ?rjSchimmelpenninck .
  
  # Ensure the war is also associated with Rutger Jan Schimmelpenninck
  ?schimmelpenninckForce <http://dbpedia.org/ontology/participatedIn> ?war .

  # Find the commander of the identified war
  ?war <http://dbpedia.org/ontology/commandedBy> ?warCommander .

  # Identify Arthur Wellesley's military force
  ?welForce a <http://dbpedia.org/ontology/MilitaryUnit> ;
            <http://dbpedia.org/ontology/commandedBy> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  
  # Ensure the same war involves Arthur Wellesley's force
  ?welForce <http://dbpedia.org/ontology/participatedIn> ?war .

  # Find the commander of Arthur Wellesley's military force
  ?welForce <http://dbpedia.org/ontology/commandedBy> ?forceCommander .
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceSaito ?deathPlaceTokugawa WHERE {
  OPTIONAL {
    ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Saitō_Hajime> .
    ?conflict a <http://dbpedia.org/class/yago/MilitaryConflict108067069> ;
              a <http://dbpedia.org/ontology/Event> ;
              a <http://dbpedia.org/ontology/SocietalEvent> .
    <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceSaito .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceTokugawa .
  }
}
```",4,7,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
# Step 1: Find actors of ""The Departed""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
}

UNION

# Step 2: Identify native actor from ""Hub City"" (Pittsburgh)
SELECT ?nativeActor WHERE {
  <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/nativeOf> ?person .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actor""))
  BIND(?person AS ?nativeActor)
}

UNION

# Step 3: Find actors of movies that are both a work and a television show
SELECT ?movieActor WHERE {
  ?movie <http://dbpedia.org/ontology/work> ?work .
  ?movie <http://dbpedia.org/ontology/televisionShow> ?tvShow .
  ?movie <http://dbpedia.org/ontology/starring> ?movieActor .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Kamikaze_Girls> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?beautyQueen .
  ?beautyQueen a <http://dbpedia.org/ontology/BeautyQueen> .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Indonesia> ;
           <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Part 1: Band member of the producer of ""Used to Love Her""
  OPTIONAL {
    ?song <http://dbpedia.org/ontology/producer> ?producer .
    FILTER(STR(?song) = ""Used_to_Love_Her"")
    ?producer <http://dbpedia.org/ontology/memberOf> ?band1 .
    ?band1 <http://dbpedia.org/ontology/member> ?bandMember .
  }

  # Part 2: Band member of a band member of the San Francisco Symphony
  OPTIONAL {
    ?symphony <http://dbpedia.org/ontology/member> ?member .
    FILTER(STR(?symphony) = ""San_Francisco_Symphony"")
    ?member <http://dbpedia.org/ontology/memberOf> ?band2 .
    ?band2 <http://dbpedia.org/ontology/member> ?subMember .
    ?subMember <http://dbpedia.org/ontology/memberOf> ?band3 .
    ?band3 <http://dbpedia.org/ontology/member> ?bandMember .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?war1 ?war2 WHERE {
  # Query for Jonathon Band's award and related war
  OPTIONAL {
    <http://dbpedia.org/resource/Jonathan_Band> <http://dbpedia.org/ontology/honours> ?award .
    ?award <http://dbpedia.org/property/war> ?war1 .
  }

  # Query for military units in New Zealand Army and related wars
  OPTIONAL {
    ?unit <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/New_Zealand_Army> ;
          <http://dbpedia.org/ontology/profession> ?profession .
    ?officeHolder <http://dbpedia.org/ontology/officeHolder> ?unit ;
                   <http://www.w3.org/2002/07/owl#sameAs> ?politician .
    ?politician a <http://dbpedia.org/ontology/Politician> .
    ?unit <http://dbpedia.org/property/war> ?war2 .
  }
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the royal parent of Archduke Ladislaus Philipp
  ?parent rdf:type dbo:Royalty .
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> dbo:parent ?parent .

  # Step 2: Find the child of that royal parent
  ?child1 dbo:parent ?parent .

  # Step 3: Identify the parent of Archduchess Margaret's child
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> dbo:child ?grandChild .
  ?grandChild dbo:parent ?parent2 .

  # Step 4: Determine Géza von Habsburg's parent
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> dbo:parent ?parent3 .

  # Step 5: Find the common descendant (child) from these relationships
  ?finalChild dbo:parent ?child1 .
  ?finalChild dbo:parent ?parent2 .
  ?finalChild dbo:parent ?parent3 .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?parentOfThadoMinsaw ?childOfThinkhaya ?predecessor ?officeHolderRoyalty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://www.w3.org/2002/07/owl#sameAs> ?thadoMinsaw .
    ?thadoMinsaw <http://dbpedia.org/ontology/birthParent> ?parentOfThadoMinsaw .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://www.w3.org/2002/07/owl#sameAs> ?thinkhaya .
    ?thinkhaya <http://dbpedia.org/ontology/child> ?childOfThinkhaya .
    
    OPTIONAL {
      ?childOfThinkhaya <http://dbpedia.org/ontology/predecessor> ?predecessor .
    }
  }

  OPTIONAL {
    ?officeHolderRoyalty <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
    ?officeHolderRoyalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/OfficeHolder> <http://dbpedia.org/ontology/Royalty>) .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?election <http://dbpedia.org/property/electionLeader> ?leader .
  FILTER (str(?election) = ""2010_Japanese_House_of_Councillors_election"")

  # Step 2: Determine the country of residence for this leader
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2004/02/skos/core#prefLabel> ?country .

  # Step 3: Find a person born in 1958 and native to this country
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gYear .
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?nationality <http://www.w3.org/2004/02/skos/core#prefLabel> ?country .

  # Step 4: Identify the alma mater of this person
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?institutionName .
  FILTER (CONTAINS(LCASE(?institutionName), ""university""))
  ?almaMater <http://dbpedia.org/ontology/country> ?countryAlmaMater .
  ?countryAlmaMater <http://www.w3.org/2004/02/skos/core#prefLabel> ""Japan"" .

  # Step 5: Find members associated with this alma mater
  ?almaMater <http://dbpedia.org/ontology/member> ?member .
}
```",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?solaceBand ?memberBand WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Solace_of_Requiem> <http://www.w3.org/2002/07/owl#sameAs> ?band .
    ?band <http://dbpedia.org/ontology/band> ?solaceBand .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://www.w3.org/2002/07/owl#sameAs> ?artist .
    ?artist <http://dbpedia.org/ontology/band> ?memberBand .
  }
}
```",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","```sparql
SELECT ?grandchildRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child's child (grandchild) of William Haliburton
  OPTIONAL {
    ?childOfHaliburton <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?childOfHaliburton .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }

  # Resting place of Alan Cunningham
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/deathPlace> ?alanCunninghamRestingPlace .
  }
  
  # Resting place of the actor in a show with Emily Richard
  OPTIONAL {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
    ?actor <http://dbpedia.org/ontology/starring> ?show .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?administration ?warLocation ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  OPTIONAL {
    ?musnier <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
    FILTER(?musnier = <http://dbpedia.org/resource/Louis_François_Félix_Musnier>)
    ?militaryConflict <http://dbpedia.org/ontology/location> ?warLocation .
  }
  
  OPTIONAL {
    ?book <http://purl.org/dc/terms/creator> ?author .
    FILTER(?book = <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant>)
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Find band members of Nevermore who are artists
  OPTIONAL { 
    ?bandMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?bandMember <http://www.w3.org/2002/07/owl#sameAs> ?artist .
    ?artist a <http://dbpedia.org/ontology/Artist> .
  }
  
  # Find the band associated with Joseph Michael
  OPTIONAL {
    ?josephMichael <http://dbpedia.org/property/member> ?bandOfJosephMichael .
    ?josephMichael <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Joseph_Michael_(musician)> .
  }
  
  # Find associated musical artists of Jim Sheppard
  OPTIONAL {
    ?jimSheppard <http://dbpedia.org/ontology/member> ?associatedBandOfJimSheppard .
    ?jimSheppard <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .
  }
  
  # Ensure the band member is part of both bands
  FILTER EXISTS { 
    ?bandMember <http://dbpedia.org/ontology/member> ?bandOfJosephMichael .
  }
  FILTER EXISTS {
    ?bandMember <http://dbpedia.org/ontology/member> ?associatedBandOfJimSheppard .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?greatGrandfatherDeathPlace ?emperorAdministration ?commanderBirthPlace WHERE {
  # Part 1: Death place of Matsudaira Tadamasa's great-grandfather
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://xmlns.com/foaf/0.1/family_name> ?father .
    ?father <http://xmlns.com/foaf/0.1/family_name> ?grandfather .
    ?grandfather <http://www.w3.org/2002/07/owl#sameAs> ?officeHolder .
    ?officeHolder <http://dbpedia.org/ontology/politician> true .
    ?officeHolder <http://dbpedia.org/property/deathPlace> ?greatGrandfatherDeathPlace .
  }

  # Part 2: Administration of Emperor Go-Yōzei
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/ontology/administration> ?emperorAdministration .
  }

  # Part 3: Birth place of commander in Boshin War
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Boshin_War> .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?commanderBirthPlace .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Find Sherry Hormann's Spouse
  ?sherry <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Identify the Claim to Fame (Work) of Sherry Hormann's Spouse
  ?spouse <http://dbpedia.org/property/claimToFame> ?work .
  
  # Ensure the work is categorized as a 'work'
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108930068> .

  # Step 3: Identify Roz Ryan's Movie
  ?movie <http://dbpedia.org/ontology/starring> ?roz .
  ?roz rdfs:label ""Roz Ryan""@en .
  
  # Ensure the movie is categorized as both a 'movie' and a 'television show'
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108930068> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108930068> .

  # Step 4: Find the Actor of Both Identified Works
  ?work <http://dbpedia.org/ontology/starring> ?actor .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?desiredParent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?thadoParent .
    ?thadoParent <http://dbpedia.org/ontology/child> ?thadoChild .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?thihapateChild .
    ?thihapateChild <http://dbpedia.org/ontology/predecessor> ?predecessor .
    FILTER (?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>)
    FILTER (?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>)
  }
  
  ?thadoChild <http://dbpedia.org/ontology/parent> ?desiredParent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?administration ?location WHERE {
  OPTIONAL {
    ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/PoliticalParty108069068> .
    ?party <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/resource/Sicily> .
    ?party <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  OPTIONAL {
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts108069068> .
    ?war <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
    ?war <http://dbpedia.org/ontology/location> ?location .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","```sparql
SELECT ?awardee ?agencyLeader ?commanderDecedent WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/awardee> ?awardee .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/leaderOf> ?agency .
    ?agency <http://www.w3.org/2000/01/rdf-schema#label> ?agencyLeader .
    FILTER (CONTAINS(LCASE(?agencyLeader), ""government agency""))
  }
  
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/commanderInForce> ?force .
    ?force <http://dbpedia.org/property/location> ?location .
    FILTER(CONTAINS(LCASE(STR(?location)), ""budapest""))
    ?commander <http://dbpedia.org/ontology/decedent> ?decedent .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?location ?deathPlace WHERE {
  OPTIONAL {
    ?conflict <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
    ?conflict <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
    ?militaryConflict <http://dbpedia.org/ontology/location> ?location .
  }
  
  OPTIONAL {
    ?book <http://purl.org/dc/terms/creator> ?author .
    ?book <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
    ?author <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?warPisagua ?forceCampero ?warAte WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/conflict> ?conflict .
    ?conflict <http://www.w3.org/2004/02/skos/core#prefLabel> ?warPisagua .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""Narciso Campero"")
    ?camperoForce <http://dbpedia.org/property/militaryForce> ?forceCampero .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/conflict> ?conflictAte .
    ?conflictAte <http://www.w3.org/2004/02/skos/core#prefLabel> ?warAte .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?restingPlaceGeraldAwardee ?restingPlaceJamesChild ?restingPlaceActor WHERE {
  OPTIONAL {
    # Resting place of Gerald Graham's awardee
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/receivedAward> ?award .
    ?award <http://dbpedia.org/property/awardee> ?awardee .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlaceGeraldAwardee .
  }
  
  OPTIONAL {
    # Resting place of James Burton's child
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/deathPlace> ?restingPlaceJamesChild .
  }
  
  OPTIONAL {
    # Resting place of actor in ""Enemy at the Door""
    <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlaceActor .
  }
}
```",7,7,8,3,3,3,3,71,0,7,1,0.0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
# Step 1: Find settlement at elevation 96.0
SELECT ?settlement WHERE {
  ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
}

# Step 2: Identify native landmark of this settlement
SELECT ?landmark WHERE {
  ?settlement <http://dbpedia.org/property/nativeOf> ?landmark .
}

# Step 3: Find parent of the landmark
SELECT ?parent WHERE {
  ?landmark <http://www.w3.org/2002/07/owl#sameAs> ?parent .
}

# Step 4: Find child of Archduke Joseph Francis of Austria
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
}

# Step 5: Find grandchild of Archduke Ladislaus Philipp of Austria
SELECT ?grandchild WHERE {
  ?parentChild <http://dbpedia.org/ontology/child> ?grandchild .
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/child> ?parentChild .
}

# Step 6: Find parent of this grandchild who is royalty
SELECT ?royalParent WHERE {
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?royalParent .
}

# Step 7: Find the parent of both entities from steps 3 and 6
SELECT ?finalParent WHERE {
  OPTIONAL { ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?finalParent . }
  OPTIONAL { ?royalParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?finalParent . }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater ?settlement WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?admin <http://dbpedia.org/property/administrationOf> <http://dbpedia.org/resource/Green> .
    ?settlement <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?admin .
    ?settlement a <http://dbpedia.org/class/yago/Settlements100000>.
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band1 ?associatedArtist ?bandMember WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/property/band> ?band1 .
  }
  
  OPTIONAL {
    ?artist <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?artist <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Jim_Sheppard_(musician)> .
    ?artist <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore> .
    ?member <http://dbpedia.org/ontology/bandMember> ?bandMember .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?member ?team WHERE {
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> .
    BIND(?person AS ?member)
  }
  OPTIONAL {
    ?manager <http://dbpedia.org/property/teamManaged> ?team .
    FILTER (?manager = <http://dbpedia.org/resource/Takashi_Sekizuka>)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?nysaParent ?spouse WHERE {
  # Step 1: Find the parent of Nysa (wife of Pharnaces I of Pontus)
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharma)ches_I_of_Pontus> <http://www.w3.org/2002/07/owl#sameAs> ?nysa .
  ?nysa <http://dbpedia.org/ontology/birthParent> ?nysaParent .

  # Step 2: Find the spouse of a child of Antiochus III the Great
  OPTIONAL {
    ?childAntiochusIII <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> .
    ?childAntiochusIII <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?childAntiochusIII <http://dbpedia.org/ontology/spouse> ?spouse .
  }

  # Step 3: Find the child of a child that is royalty, of the successor (royalty) of Antiochus II Theos
  OPTIONAL {
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_theos> .
    ?childSuccessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> .
    ?childSuccessor <http://dbpedia.org/ontology/birthParent> ?successor .
    ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?childSuccessor .
  }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMemberNevermore ?associatedArtistJimSheppard ?bandJosephMichael WHERE {
  OPTIONAL {
    # Band member of Nevermore (2006 film)
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?reference .
    ?reference <http://dbpedia.org/property/bandMember> ?bandMemberNevermore .
  }
  
  OPTIONAL {
    # Associated musical artist of Jim Sheppard
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistJimSheppard .
  }
  
  OPTIONAL {
    # Band of Joseph Michael
    ?person2 <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en .
    ?person2 <http://dbpedia.org/ontology/band> ?bandJosephMichael .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandShena ?bandWriter WHERE {
  OPTIONAL {
    # Find band of Shèna
    ?shena <http://dbpedia.org/ontology/birthName> ""Shèna"" .
    ?shena <http://dbpedia.org/property/associatedMusicalArtist> ?bandShena .
  }
  
  OPTIONAL {
    # Find writer(s) of Apollo (Hardwell song)
    ?song <http://dbpedia.org/ontology/writtenBy> ?writer .
    ?song <http://dbpedia.org/resource/Apollo_(Hardwell_song)> .
    
    # Find band associated with the writer
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?bandWriter .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Nickname of Queen's University Belfast
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .

  # Alma Mater of Allen Hill (scientist)
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .

  # Organisation in Belfast
  ?organisation <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""belfast"") && CONTAINS(LCASE(?label), ""organisation"")) .

  # Mayor of the organisation who is a politician
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party ;
         <http://dbpedia.org/ontology/mayorFor> ?organisation .
  
  # Alma Mater of the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Find the spouse of Amun-her-khepeshef
  OPTIONAL { 
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .
    
    # Step 2: Find a child of this spouse
    ?child <http://www.w3.org/ns/prov#wasDerivedFrom> ?spouse .
    
    # Step 3: Determine the parent of this child
    ?parent <http://dbpedia.org/ontology/child> ?child .
  }
  
  # Step 4: Find a child of Ramesses II and their parent
  OPTIONAL {
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/child> ?ramChild .
    ?parent2 <http://dbpedia.org/ontology/child> ?ramChild .
  }
  
  # Step 5: Find the father of Merneptah and his spouse
  OPTIONAL {
    ?merneptahFather <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Merneptah> .
    ?merneptahFather <http://dbpedia.org/ontology/spouse> ?spouse2 .
    
    # Step 6: Determine the parent of this child
    ?parent3 <http://dbpedia.org/ontology/child> ?child2 .
  }
  
  # Combine results to find common entities
  FILTER(?parent = ?parent2 || ?parent = ?parent3)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?peninsularWarCommander ?carlPontusGahnWar ?thomasTriggeClaimToFame WHERE {
  OPTIONAL {
    ?peninsularWar <http://dbpedia.org/ontology/commander> ?peninsularWarCommander .
    FILTER(STRSTARTS(LCASE(?peninsularWar), ""peninsular war""))
  }
  
  OPTIONAL {
    ?carlPontusGahn <http://dbpedia.org/ontology/war> ?carlPontusGahnWar .
    FILTER(STRSTARTS(LCASE(?carlPontusGahn), ""carl pontus gahn""))
  }

  OPTIONAL {
    ?thomasTrigge <http://dbpedia.org/property/claimToFame> ?thomasTriggeClaimToFame .
    ?event <http://dbpedia.org/ontology/event> ?thomasTriggeClaimToFame .
    FILTER(STRSTARTS(LCASE(?thomasTrigge), ""thomas trigge""))
  }
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?partyFather ?partyMichelePinto ?partyProdi WHERE {
  # Party of the father of an alumnus of MIT
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?father <http://dbpedia.org/ontology/father> ?alumnus .
    ?father <http://dbpedia.org/property/politicalParty> ?partyFather .
  }

  # Reference to the name of the party of Michele Pinto
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?michelePintoParty .
    ?michelePintoParty <http://www.w3.org/2000/01/rdf-schema#label> ?partyMichelePinto .
  }

  # Party of Romano Prodi
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?prodiParty .
    ?prodiParty <http://www.w3.org/2000/01/rdf-schema#label> ?partyProdi .
  }
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .

  # Step 2: Identify the claim to fame of the spouse
  ?work <http://dbpedia.org/property/claimToFame> ?spouse .
  
  # Step 3: Determine the professional role in this work
  ?role <http://dbpedia.org/ontology/profession> ?actor .
  ?role <http://dbpedia.org/ontology/work> ?work .

  # Step 4: Identify movies that are also works and television shows
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108069068> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108069068> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .

  # Step 5: Find actors of these movies
  ?actor <http://dbpedia.org/ontology/actor> ?movie .
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war1 ?war2 ?force WHERE {
  # Part 1: War of the commander in the work of --01-09
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/creator> ?commander .
    FILTER(CONTAINS(str(?work), ""--01-09""))
    ?commander <http://dbpedia.org/ontology/commanded> ?force1 .
    ?force1 <http://dbpedia.org/ontology/warFought> ?war1 .
  }

  # Part 2: War of Irene Morales
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Irene Morales""@en .
    ?person <http://dbpedia.org/ontology/commanded> ?force2 .
    ?force2 <http://dbpedia.org/ontology/warFought> ?war2 .
  }

  # Part 3: Force of Narciso Campero Leyes
  OPTIONAL {
    ?individual <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero Leyes""@en .
    ?individual <http://dbpedia.org/ontology/commanded> ?force .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?writerBand ?actorBand WHERE {
  # Part 1: Band of the writer of ""Emotion"" (Carly Rae Jepsen album)
  OPTIONAL {
    <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://dbpedia.org/ontology/memberOfBand> ?writerBand .
  }

  # Part 2: Band of the actor, who is a musical artist, in a show with Stacey Dash
  OPTIONAL {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Stacey_Dash> .
    ?show <http://dbpedia.org/property/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?actor <http://dbpedia.org/ontology/memberOfBand> ?actorBand .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?movieActor ?claimToFameActor ?hubCityNative WHERE {
  OPTIONAL {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108069068> .
    ?movie <http://dbpedia.org/ontology/workType> <http://dbpedia.org/resource/Work> .
    ?movie <http://dbpedia.org/ontology/workType> <http://dbpedia.org/resource/Television_show> .
    ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    BIND(?actor AS ?movieActor)
  }
  
  OPTIONAL {
    ?spouse <http://xmlns.com/foaf/0.1/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
    ?spouseClaimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108069068> .
    ?spouse <http://purl.org/dc/terms/references> ?spouseClaimToFame .
    ?spouseClaimToFame <http://dbpedia.org/ontology/starring> ?claimToFameActor .
  }
  
  OPTIONAL {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City""@en .
    ?figure <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
    BIND(?nativePlace AS ?hubCityNative)
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?result WHERE {
  # Step 1: Child of Seleucus II Callinicus who is royalty
  ?child1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Parent of the child of the commander in Battle of Panium
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?child2 <http://dbpedia.org/ontology/parent> ?commander .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?result <http://dbpedia.org/ontology/child> ?child2 .
  }

  # Step 3: Spouse of the child of Antiochus III the Great
  OPTIONAL {
    ?child3 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
    ?result <http://dbpedia.org/property/spouse> ?child3 .
  }

  # Step 4: Combine the conditions
  FILTER (?child1 = ?result)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?deathPlace ?administration ?battleLocation WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?author .
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?battleLocation .
  }
}
```",4,4,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
SELECT ?band1 ?person ?band2 ?shenaBand WHERE {
  # Part 1: Band of the writer of a song by Amba Shepherd
  OPTIONAL {
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    ?song <http://purl.org/dc/terms/creator> ""Amba Shepherd"" .
    ?writer <http://dbpedia.org/property/band> ?band1 .
  }

  # Part 2: Person born on the birth date of Pavlo Khudzik and their band
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ""Pavlo Khudzik"" <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://dbpedia.org/property/band> ?band2 .
  }

  # Part 3: Band of Shèna
  OPTIONAL {
    ""Shèna"" <http://dbpedia.org/property/band> ?shenaBand .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?child WHERE {
  OPTIONAL { 
    ?ernestAugustus <http://dbpedia.org/ontology/father> ?father .
    FILTER(?ernestAugustus = <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>)
  }
  
  OPTIONAL {
    ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
  }

  OPTIONAL {
    ?parent <http://dbpedia.org/property/birthName> ""Victoria Louise Marie Elisabeth Anna Feodora"" .
    ?parent <http://dbpedia.org/ontology/child> ?ernestAugustus1914 .
    FILTER(?ernestAugustus1914 = <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)>)
  }

  ?father <http://www.w3.org/2002/07/owl#sameAs> ?spouse .
  ?child <http://dbpedia.org/ontology/father> ?father ;
         <http://dbpedia.org/ontology/mother> ?spouse .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find children of Ernest Augustus who are royalty
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find spouse of Princess Victoria Louise of Prussia
  ?spouse <http://dbpedia.org/property/spouse> ?princess .
  ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .

  # Step 3: Find father of Ernest Augustus
  ?father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .

  # Step 4: Find child of this father who is royalty
  ?royalChild <http://dbpedia.org/ontology/child> ?father .
  ?royalChild a <http://dbpedia.org/ontology/Royalty> .

  # Ensure the child from step 1 and step 4 are the same
  FILTER (?child = ?royalChild)

  # Step 5: Find parent of this common child
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's band
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  
  # Step 2: Find the band members who are bands/groups and organizations
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?member a <http://dbpedia.org/class/yago/MusicalGroup115069627> ;
          a <http://www.w3.org/2002/07/owl#Thing> .

  # Step 3: Identify Don Dokken's persona
  ?persona <http://dbpedia.org/ontology/birthName> ""Don_Dokken"" .
  
  # Step 4: Find associated musical artists of the band members linked to Don Dokken's persona
  ?member <http://dbpedia.org/ontology/associatedBand> ?artist .
  ?artist = ?persona .

  BIND(?member AS ?bandMember)
  BIND(?artist AS ?associatedArtist)
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"```sparql
SELECT ?warJagathDias ?nationalityTamaraKunanayakam ?warAuthor2019SriLankaBombs WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/war> ?warJagathDias .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2006/vcard/ns#hasNationality> ?nationalityTamaraKunanayakam .
  }
  OPTIONAL {
    ?author <http://dbpedia.org/property/author> <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> .
    ?author <http://dbpedia.org/ontology/war> ?warAuthor2019SriLankaBombs .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?child ?spouse WHERE {
  # Step 1: Find children of Ernest Augustus, Crown Prince of Hanover
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  
  # Step 2: Identify the parent of that child who is royalty
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?parent a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the child of that royal parent who is also royalty
  ?royalChild <http://dbpedia.org/ontology/birthParent> ?parent .
  ?royalChild a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the spouse of Princess Victoria Louise of Prussia
  ?princessBirthName <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
  ?princessBirthName a <http://dbpedia.org/ontology/Royalty> .
  ?princessBirthName <http://dbpedia.org/property/spouse> ?spouse .

  # Step 5: Ensure the child from step 3 is the same as the spouse found in step 4
  FILTER(?royalChild = ?spouse)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find the birthplace of Edin Dervišhalidović
  <http://dbpedia.org/resource/Edin_Dervišhalidović> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Check if this is also the native place of Samir Bekrić
  OPTIONAL { 
    <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?sameBirthPlace .
    FILTER(?birthPlace = ?sameBirthPlace)
  }

  # Step 3: Find an award-winning band and its members
  OPTIONAL {
    ?band <http://dbpedia.org/property/awards> ?award .
    ?band <http://dbpedia.org/ontology/member> ?member .
    
    # Step 4: Check if Edin Dervišhalidović is a member of this band
    FILTER(?member = <http://dbpedia.org/resource/Edin_Dervišhalidović>)
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
SELECT ?commander ?claimToFame WHERE {
  # Step 1: Identify the War
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
       a <http://dbpedia.org/ontology/SocietalEvent> ;
       a <http://dbpedia.org/ontology/Event> .

  # Thomas Trigge and Joaquín Blake were involved in this war
  ?triggeWarParticipant a <http://dbpedia.org/ontology/MilitaryPerson> ;
                        foaf:name ""Thomas Trigge"" .
  ?blakeWarParticipant a <http://dbpedia.org/ontology/MilitaryPerson> ;
                       foaf:name ""Joaquín Blake"" .

  # Carl Pontus Gahn was involved in this war
  ?gahnWarParticipant a <http://dbpedia.org/ontology/MilitaryPerson> ;
                      foaf:birthName ""Carl Pontus Gahn"" .

  # All participants are part of the same war
  ?triggeWarParticipant dbp:participatedIn ?war .
  ?blakeWarParticipant dbp:participatedIn ?war .
  ?gahnWarParticipant dbp:participatedIn ?war .

  # Step 2: Find Commanders in the War
  ?commander a <http://dbpedia.org/ontology/MilitaryPerson> ;
             dbp:commanded ?war .

  # Step 3: Retrieve Claim to Fame for Commanders
  OPTIONAL { ?commander dbo:famousFor ?claimToFame }
}
```",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?finalArtist WHERE {
  OPTIONAL { 
    ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
    ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?intermediateArtist .
    
    ?meshuggahMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> ;
                      <http://www.w3.org/2000/01/rdf-schema#label> ?meshuggahLabel .
    FILTER(CONTAINS(LCASE(?meshuggahLabel), ""band"") && CONTAINS(LCASE(?meshuggahLabel), ""group"") && CONTAINS(LCASE(?meshuggahLabel), ""organization""))
    
    ?intermediateArtist <http://dbpedia.org/ontology/member> ?meshuggahMember .
    
    ?donDokkenMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> ;
                     <http://www.w3.org/2000/01/rdf-schema#label> ?donDokkenLabel .
    
    ?finalArtist <http://dbpedia.org/ontology/member> ?donDokkenMember .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?personBornOnPavloDate ?bandOfAmbaShepherd ?bandOfTraceyMcSween WHERE {
  # Retrieve birth date of Pavlo Khudzik
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?pavloBirthDate .

  # Find other persons born on the same date as Pavlo Khudzik
  ?personBornOnPavloDate <http://dbpedia.org/ontology/birthDate> ?pavloBirthDate .
  
  # Retrieve band of Amba Shepherd
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandOfAmbaShepherd .

  # Identify person born as Tracey Elizabeth McSween and retrieve their band
  ?traceyMcSween a dbo:Person ;
                 foaf:name ""Tracey Elizabeth McSween"" ;
                 <http://dbpedia.org/ontology/birthName> ""Tracey Elizabeth McSween"" .
  
  ?traceyMcSween <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandOfTraceyMcSween .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?country WHERE {
  # Retrieve the birthplace of Bob Heffron which is a country
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Country108067124> .

  # Retrieve the war associated with Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/personInvolvedInBattleOrWar> <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> .
    ?war <http://dbpedia.org/ontology/location> ?location .
    FILTER (?birthPlace = ?location)
  }

  # Bind the birthplace as a country
  BIND(?birthPlace AS ?country)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person ?bandOfShena ?writerBand WHERE {
  # Find person born on 1985-04-29
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  
  # Find band associated with Shèna
  OPTIONAL {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/property/associatedBand> ?bandOfShena .
  }
  
  # Find the song by Amba Shepherd and its writer
  ?song <http://purl.org/dc/terms/creator> ?writer ;
        <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Amba_Shepherd> .

  # Find band associated with the writer of the song
  OPTIONAL {
    ?writer <http://dbpedia.org/property/associatedBand> ?writerBand .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?finalManager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  ?season <http://dbpedia.org/ontology/team> ?kashimaAntlers .
  FILTER(STRSTARTS(LCASE(?season), ""http://dbpedia.org/resource/1998_kashima_antlers_season""))
  
  # Step 2: Find the team managed by this manager
  ?season <http://dbpedia.org/ontology/manager> ?sportsManager .
  ?sportsManager <http://dbpedia.org/ontology/teamManaged> ?team .

  # Step 3: Find the manager of that team
  ?team <http://dbpedia.org/ontology/manager> ?finalManager .
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  OPTIONAL {
    # Death place of Yūki Hideyasu's father who is a politician
    <http://dbpedia.org/resource/Yuki_Hideyasu> <http://xmlns.com/foaf/0.1/family_name> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Administration of Emperor Go-Yōzei
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/ontology/administration> ?administration .
  }

  OPTIONAL {
    # Birth place of Enomoto Takeaki
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",4,5,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?band1 ?musicalArtist ?band2 WHERE {
  # Band of Joseph Michael Furney
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
    ?person <http://dbpedia.org/property/memberOfBand> ?band1 .
  }

  # Associated Musical Artist of the Actor from Return to Nuke 'Em High Volume 1
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?actor <http://dbpedia.org/property/associatedMusicalArtist> ?musicalArtist .
  }

  # Band Member Reference from Nevermore (2006 film)
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/referenceName> ""Nevermore"" .
    ?reference <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Nevermore_(2006_film)> .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?reference <http://dbpedia.org/property/memberOfBand> ?band2 .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?childOfJosephAugust .
  ?childOfJosephAugust <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .

  ?person <http://www.w3.org/2002/07/owl#sameAs> ?parentOfChildOfJosephFrancis .
  ?childOfJosephFrancis <http://dbpedia.org/property/parent> ?parentOfChildOfJosephFrancis .
  ?childOfJosephFrancis <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
SELECT ?commander ?leader WHERE {
  OPTIONAL {
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    ?commander rdfs:label ""Ferenc Szálasi""@en .
  }
  
  OPTIONAL {
    ?office <http://dbpedia.org/ontology/leader> ?leader .
    ?office a <http://dbpedia.org/class/yago/GovernmentAgency108069068> .
    ?leader rdfs:label ""Joseph Stalin""@en .
  }
}
```",4,5,5,2,2,3,3,71,0,1,1,0.0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?producer WHERE {
  ?work <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> .
  ?work <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/The_Shadow> .
  ?work <http://www.w3.org/2002/07/owl#sameAs> ?song .
  ?song a <http://dbpedia.org/class/yago/MusicalWork108069068> ;
        a <http://dbpedia.org/class/yago/Song106067786> .
  ?work <http://purl.org/dc/terms/creator> ?producer .
}
```",5,8,6,3,2,3,3,71,0,0,27,0,0.0,0
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sean Pertwee's claim to fame (film and military conflict)
  ?claimToFame rdf:type dbo:Film .
  ?claimToFame rdf:type dbo:MilitaryConflict .
  <http://dbpedia.org/resource/Sean_Pertwee> dbo:claimToFame ?claimToFame .

  # Step 2: Find Jon Pertwee's child who is an actor in the claim to fame
  ?child dbo:parent <http://dbpedia.org/resource/Jon_Pertwee> .
  ?child rdf:type dbo:Actor .
  ?filmRole dbo:actor ?child .
  ?filmRole dbo:movie ?claimToFame .

  # Step 3: Find the residence of a politician native to France
  ?politician dbo:nationality dbr:France .
  ?politician rdf:type dbo:Politician .
  ?politician dbo:officeHolder true .
  ?residence dbo:settlement <http://dbpedia.org/resource/United_Kingdom> .
  ?politician dbo:birthPlace ?residence .

  # Step 4: Ensure the actor is linked to the residence
  ?actor rdf:type dbo:Actor .
  ?actor dbo:nativeOf ?residence .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  # Step 1: Find the spouse of Princess Pauline who is a royalty
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER(?princess = <http://dbpedia.org/resource/Pauline_of_Saxe-Weimar-Eisenach>)
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this spouse who is a royalty
  ?spouse <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the children of Charles Alexander
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?charlesChild .

  # Step 4: Match the child from step 2 with a child from step 3 and find the father
  FILTER(?royalChild = ?charlesChild)
  ?charlesChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?charlesChild <http://dbpedia.org/ontology/father> ?father .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
SELECT ?commanderInForce ?commanderInWar WHERE {
  # Step 1: Find an office holder native to the Kingdom of Ireland
  ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  
  # Step 2: Get the commander in force for this office holder
  ?force <http://dbpedia.org/property/commander> ?commanderInForce .
  ?officeHolder <http://dbpedia.org/ontology/memberOf> ?force .

  # Step 3: Find a war event involving 'Polish Horse'
  ?warEvent <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Polish_Horse> .
  ?warEvent rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> .

  # Step 4: Get the commander in war for 'Polish Horse'
  ?warEvent <http://dbpedia.org/property/commander> ?commanderInWar .
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"```sparql
SELECT ?professional WHERE {
  # Get Satomi Ishihara's profession
  OPTIONAL { 
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
  }
  
  # Find Ted McGinley's spouse
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ""Ted McGinley"" .
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse1 .
  }
  
  # Find Gigi Rice's birth name
  OPTIONAL {
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/spouse> ?spouse2 .
  }
  
  # Ensure the professional matches all criteria
  FILTER (?professional = ?spouse1 && ?professional = ?spouse2)
  FILTER (?profession = ?professionalProfession)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?warGahn ?warPeninsular WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/participatedIn> ?warGahn .
  }
  
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/commanded> ?peninsularWar .
    FILTER(?peninsularWar = <http://dbpedia.org/resource/Peninsular_War>) .
    ?commander <http://dbpedia.org/ontology/participatedIn> ?warPeninsular .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?player WHERE {
  # Step 1: Identify the predecessor of the 2015 Sacramento Republic FC season
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> .
  
  # Step 2: Find the successor of this predecessor
  ?successor <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 3: Identify a player in this successor season
  ?player1 <http://dbpedia.org/property/team> ?successor .
  
  # Step 4: Determine Gary Williams' birthplace
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Ensure the birthplace is an English settlement
  ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ""England"" .
  ?birthPlace a <http://dbpedia.org/class/yago/SettlementsInEngland100000Link> .

  # Step 5: Find the native team of this birthplace
  ?team1 <http://dbpedia.org/ontology/location> ?birthPlace .

  # Step 6: Identify a player from both teams
  ?player2 <http://dbpedia.org/property/team> ?team1 .
  
  FILTER (?player1 = ?player2)
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Identify Adela Pankhurst's parent(s)
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Adela_Pankhurst> .
  
  # Step 2: Find the child(ren) of that parent
  ?child <http://www.w3.org/ns/prov#wasDerivedFrom> ?parent .

  # Step 3: Determine alma mater of the child
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMeter .
  
  # Step 4: Filter by entities in the United Kingdom
  ?almaMeter <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""united kingdom""))
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?landmark ?elevation ?birthPlace WHERE {
  OPTIONAL {
    # Assuming there is a property linking the battle to an award and elevation
    ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Chishui_River> .
    ?award <http://dbpedia.org/property/commanderAward> ?battle .
    ?landmark <http://www.w3.org/2006/vcard/ns#hasElevation> ?elevation .
    # This part is speculative and may need adjustment based on actual DBpedia data
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",4,4,5,3,2,3,2,20,1,0,0,1.0,1.0,1.0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?parentIlona ?grandchildLadislaus ?parentBudapest WHERE {
  # Step 1: Parent of Archduchess Ilona of Austria
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parentIlona .
  }

  # Step 2: Child of the child of the parent (that is royalty) of Archduke Ladislaus Philipp
  OPTIONAL {
    ?parentLadislaus <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
    FILTER(?parentLadislaus <http://www.w3.org/2002/07/owl#sameAs> ?royalty) # Assuming a way to filter royalty
    ?childOfParent <http://dbpedia.org/ontology/child> ?parentLadislaus .
    ?grandchildLadislaus <http://dbpedia.org/ontology/child> ?childOfParent .
  }

  # Step 3: Parent of the native of Budapest
  OPTIONAL {
    ?nativeBudapest <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""Budapest"" .
    ?parentBudapest <http://dbpedia.org/ontology/child> ?nativeBudapest .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"```sparql
SELECT ?alterEgo ?almaMater ?settlement WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alsoKnownAs> ?alterEgo .
  }
  
  OPTIONAL {
    ?administration <http://dbpedia.org/property/administrationOf> <http://dbpedia.org/resource/George_K._Nash> .
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Dustin_Lynch_(singer)> <http://dbpedia.org/property/writerOfAlbum> <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> .
    ?administration <http://dbpedia.org/ontology/member> ?writerEntity .
    FILTER(?writerEntity = <http://dbpedia.org/resource/Dustin_Lynch_(singer)>) .
    ?entityInAdmin <http://www.w3.org/2002/07/owl#sameAs> ?administration .
    ?entityInAdmin a <http://dbpedia.org/class/yago/Settlement_100000001> .
    ?entityInAdmin rdfs:label ?settlement .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parentOfThadoMinsaw ?childOfThinkhayaChild ?predecessor WHERE {
  # Step 1: Parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://www.w3.org/2002/07/owl#sameAs> ?thadoMinsaw .
  ?thadoMinsaw <http://dbpedia.org/ontology/birthParent> ?parentOfThadoMinsaw .

  # Step 2: Child of the Father of the Child of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://www.w3.org/2002/07/owl#sameAs> ?thinkhaya .
  ?thinkhaya <http://dbpedia.org/ontology/child> ?childOfThinkhaya .
  ?childOfThinkhaya <http://www.w3.org/2002/07/owl#sameAs> ?fatherChild .
  ?fatherChild <http://www.w3.org/2002/07/owl#sameAs> ?childOfThinkhayaChild .

  # Step 3: Predecessor of the Child that is an Office Holder and Royalty
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://www.w3.org/2002/07/owl#sameAs> ?thihapate .
  ?thihapate <http://dbpedia.org/ontology/child> ?officeHolderRoyalty .
  ?officeHolderRoyalty a <http://dbpedia.org/class/yago/Royalty108000001> ;
                       a <http://dbpedia.org/class/yago/OfficeHolder108000001> .
  ?officeHolderRoyalty <http://www.w3.org/2002/07/owl#sameAs> ?predecessor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
SELECT ?commander ?rifWarForce WHERE {
  # Identify Francisco Largo Caballero as ""El Director""
  ?elDirector a dbo:Person ;
              foaf:name ""Francisco Largo Caballero"" .

  # Find the military conflict involving El Director and its commander
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?commander ;
            dbo:militaryForce ?militaryForce .
  
  FILTER(?elDirector = <http://dbpedia.org/resource/Francisco_Largo_Caballero>)

  # Identify the military force involved in the Rif War
  ?rifWar a dbo:MilitaryConflict, dbo:SocietalEvent ;
          dbo:militaryForce ?rifWarForce .

  FILTER(STRSTARTS(LCASE(?rifWar), ""rif war""))
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?almaMaterJohnAlderdice ?awardee ?almaMaterAwardee WHERE {
  # Alma Mater of John Alderdice, Baron Alderdice
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterJohnAlderdice .

  # Awardees of Royal Medals (QUB)
  OPTIONAL {
    ?award <http://www.w3.org/2004/02/skos/core#prefLabel> ""Royal Medal""@en .
    ?award <http://dbpedia.org/ontology/awardee> ?awardee .
    
    # Alma Mater of each awardee
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAwardee .
  }
}
```",5,6,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  OPTIONAL {
    # Residence country of James Wilkes Maurice
    <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
    BIND(?residence AS ?entity)
  }
  
  OPTIONAL {
    # Alma mater of the child of the parent of Adela Pankhurst
    <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(?almaMater AS ?entity)
  }
}
```",5,6,6,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child ?spouse WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { 
    ?child <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",3,3,4,2,2,3,3,71,4,5,0,0.4444444444444444,1.0,0.6153846153846153
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?alanCunninghamRestingPlace ?actorRestingPlace ?jamesBurtonRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham_(British_officer)> <http://dbpedia.org/ontology/deathPlace> ?alanCunninghamRestingPlace .
  }
  
  OPTIONAL {
    ?movie <http://dbpedia.org/property/castMember> ?actor .
    ?actor rdfs:label ""Enemy at the Door""@en .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?jamesBurtonRestingPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find Fredrik Thordendal's Band
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band a <http://dbpedia.org/class/yago/YAGO2ClassOrganization1000000010> .

  # Step 2: Identify Donald Maynard Dokken
  ?dokken <http://www.w3.org/2000/01/rdf-schema#label> ""Donald Maynard Dokken""@en .
  ?dokken a <http://dbpedia.org/class/yago/MusicalArtist100000001> .

  # Step 3: Find the Band Member of Donald Maynard Dokken
  ?bandMember <http://dbpedia.org/ontology/member> ?dokkenBand .
  ?dokkenBand <http://dbpedia.org/ontology/member> ?dokken .

  # Step 4: Retrieve Associated Musical Artist for this Band Member
  ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?birthPlace ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  OPTIONAL {
    ?yukiHideyasu dbo:father ?father .
    ?father rdf:type dbo:Politician .
    ?father dbp:deathPlace ?deathPlace .
    FILTER EXISTS { 
      <http://dbpedia.org/resource/Yūki_Hideyasu> = ?yukiHideyasu
    }
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country ?province ?region WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2006/time#during> ?timePeriod .
    ?timePeriod <http://dbpedia.org/ontology/country> ?country .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/resource/Settlement> .
    ?address <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
    ?residence <http://dbpedia.org/ontology/province> ?province .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2006/time#during> ?timePeriod2 .
    ?timePeriod2 <http://dbpedia.org/ontology/region> ?region .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
SELECT ?associatedArtist1 ?associatedArtist2 ?associatedArtist3 WHERE {
  # Associated Musical Artist of S.A. Slayer
  OPTIONAL { 
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist1 .
  }

  # Band Member and Associated Musical Artist for Fredrik Thordendal's band
  OPTIONAL {
    ?band a <http://dbpedia.org/ontology/Organisation> ;
          <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
    ?member a <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Group>, <http://dbpedia.org/ontology/Organisation> ;
            <http://dbpedia.org/ontology/member> ?band .
    ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist2 .
  }

  # Band Member of Donald Maynard Dokken
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Donald Maynard Dokken""@en ;
            <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
    ?bandMember <http://dbpedia.org/ontology/member> ?band ;
                <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist3 .
  }
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?bandMember WHERE {
  # Identify YU Grupa as a group/organization
  ?yuGrupa rdf:type <http://dbpedia.org/class/yago/YugoslavMusicalGroup100000001> .
  ?yuGrupa rdfs:label ""YU Grupa""@en .

  # Find Raša Đelmaš's band
  ?rašaĐelmaš dbo:bandMember ?band .
  ?rašaĐelmaš foaf:name ""Raša Đelmaš"" .

  # Determine common group/organization referencing both YU Grupa and the band of Raša Đelmaš
  ?commonGroup rdf:type <http://dbpedia.org/class/yago/MusicalGroup100000001> .
  ?commonGroup dbo:reference ?yuGrupa .
  ?commonGroup dbo:reference ?band .

  # Find band members of this common group/organization
  ?commonGroup dbo:member ?bandMember .
}
```",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?awardeeWar ?nzArmyWar ?birthCountry WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/honours> ?honour .
    ?honour <http://www.w3.org/2004/02/skos/core#prefLabel> ""Knight Grand Cross of the Order of the Bath""@en .
    ?person <http://dbpedia.org/ontology/war> ?awardeeWar .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/war> ?nzArmyWar .
  }

  OPTIONAL {
    ?election <http://dbpedia.org/property/leader> ?leader .
    ?election <http://dbpedia.org/ontology/electionDate> ?date .
    FILTER (YEAR(?date) = 1962 && CONTAINS(LCASE(STR(?election)), ""new south wales""))
    
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER (LANG(?countryLabel) = ""en"")
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    BIND(STR(?countryLabel) AS ?birthCountry)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT DISTINCT ?grandparent ?parent WHERE {
  # Step 1: Find children of Seti I
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Seti_I> .
  
  # Step 2: For each child, find their children (Seti I's grandchildren)
  OPTIONAL { 
    ?grandchild <http://dbpedia.org/ontology/father> ?child .
    
    # Step 3: Find the parent of each grandchild
    OPTIONAL {
      ?parent <http://dbpedia.org/ontology/mother> ?grandchild .
      BIND(<http://dbpedia.org/resource/Seti_I> AS ?grandparent)
    }
    OPTIONAL {
      ?parent <http://dbpedia.org/ontology/father> ?grandchild .
      BIND(<http://dbpedia.org/resource/Seti_I> AS ?grandparent)
    }
  }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?childRestingPlace ?actorRestingPlace ?alanCunninghamRestingPlace WHERE {
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/James_Burton_(property_developer)> .
    ?child <http://dbpedia.org/ontology/deathPlace> ?childRestingPlace .
  }
  
  OPTIONAL {
    ?show <http://dbpedia.org/ontology/starring> ?emilyRichard .
    ?emilyRichard <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Emily_Richard> .
    ?actor <http://dbpedia.org/ontology/starring> ?show .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/deathPlace> ?alanCunninghamRestingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlaceAwardee ?restingPlaceArchitect WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/politicalParty> ?party .
    ?person <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""distinguished service medal (u.s. army)""))
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlaceAwardee .
  }
  
  OPTIONAL {
    ?house <http://dbpedia.org/property/architect> ?architect .
    FILTER(STR(?house) = ""P._D._Houston_Jr._House"")
    ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlaceArchitect .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify John Devon Roland Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee"" .

  # Step 2: Find his child who is an actor, narrator, and producer
  ?child dbo:parent ?john ;
         rdf:type dbo:Actor ;
         rdf:type dbo:Narrator ;
         rdf:type dbo:Producer .

  # Step 3: Determine claim to fame involving a film and military conflict
  ?claimToFame dbo:actor ?child ;
               rdf:type dbo:Film ;
               rdf:type dbo:MilitaryConflict .

  # Step 4: Identify the actor associated with this claim to fame
  ?claimToFame dbo:actor ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commanderBiscay ?militaryForceRifWar ?conflict ?forceLargoCaballero WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commanderBiscay .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?militaryForceRifWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/associatedWith> ?conflict .
    ?conflict <http://dbpedia.org/ontology/militaryForce> ?forceLargoCaballero .
    FILTER(?conflict <http://www.w3.org/2002/07/owl#Thing>) # Ensures it's a societal event or military conflict
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
SELECT ?actorProfession ?spouseProfession WHERE {
  # Find the actor of ""Unnatural (TV series)""
  OPTIONAL {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?series <http://dbpedia.org/resource/Unnatural_(TV_series)> .
    
    # Get the profession of this actor
    ?actor <http://dbpedia.org/ontology/profession> ?actorProfession .
  }
  
  # Find the spouse of Ted Martin McGinley
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ted Martin McGinley""@en .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
    
    # Get the profession of this spouse
    ?spouse <http://dbpedia.org/ontology/profession> ?spouseProfession .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?prodiParty ?father ?fathersParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/politicalParty> ?fathersParty .
  }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the album
  ?album <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> .
  
  # Step 2: Find the writer who is also a musical artist, an artist, and producer of Westside Story (song)
  ?writer <http://purl.org/dc/terms/creator> ?album ;
          <http://dbpedia.org/ontology/profession> ?profession1, ?profession2, ?producerRole .
  
  FILTER(?profession1 = <http://dbpedia.org/resource/Musical_artist> &&
         ?profession2 = <http://dbpedia.org/resource/Artist_(art)> &&
         ?producerRole = <http://dbpedia.org/resource/Producer>)

  # Ensure the writer is a producer of Westside Story (song)
  ?writer <http://purl.org/dc/terms/contributor> <http://dbpedia.org/resource/Westside_Story_(song)> .

  # Step 3: Determine associated musical artist
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find decedent's birth date
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:deathDate ?decedentDeathDate .
  
  BIND (YEAR(?decedentDeathDate) AS ?year)
  BIND (MONTH(?decedentDeathDate) AS ?month)
  BIND (DAY(?decedentDeathDate) AS ?day)

  # Step 2: Find person born on that date
  ?person dbo:birthDate ?birthDate .
  FILTER (
    YEAR(?birthDate) = ?year &&
    MONTH(?birthDate) = ?month &&
    DAY(?birthDate) = ?day
  )

  # Step 3: Identify bands and works
  OPTIONAL {
    ?ambaShepherd dbo:band ?ambaBand .
    ?ambaBand dbo:member ?writer .
    ?writer dbo:work ?song .
    FILTER (rdf:type(?song, dbo:Song))
    
    ?shena dbo:song ?shenaSong .
    ?shenaSong dbo:writer ?sameWriter .
  }

  # Step 4: Ensure the person is linked through bands
  OPTIONAL {
    ?person dbo:band ?ambaBand ;
            dbo:band ?sameWriterBand .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?awardee ?leaderOfAgency WHERE {
  # Find commanders on the Eastern Front during World War II
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  
  # Check if they were awarded the Order of Suvorov
  OPTIONAL { 
    ?awardee <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
    FILTER(?commander = ?awardee)
  }
  
  # Determine if they led a government agency
  OPTIONAL {
    ?leaderOfAgency <http://www.w3.org/2004/02/skos/core#broader> ?agency .
    ?agency <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Government_agency> .
    FILTER(?awardee = ?leaderOfAgency)
  }
  
  # Find office holders and politicians related to Gustav Jonson
  OPTIONAL {
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?officeHolder <http://dbpedia.org/ontology/politician> <http://dbpedia.org/resource/Gustav_Jonson> .
    
    # Check if they lead a government agency
    OPTIONAL {
      ?leaderOfAgency <http://www.w3.org/2004/02/skos/core#broader> ?agency .
      ?agency <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Government_agency> .
      FILTER(?officeHolder = ?leaderOfAgency)
    }
  }
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?personKhemisMiliana ?personFrenchAlgeria WHERE {
  OPTIONAL {
    # Find capital of Khemis Miliana District
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://www.geonames.org/ontology#capital> ?capital .
    
    # Find person decedent at the capital
    ?personKhemisMiliana <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER (?deathPlace = ?capital)
  }
  
  OPTIONAL {
    # Find person decedent in French Algeria
    ?personFrenchAlgeria <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/French_Algeria> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:American_actresses> .
  ?person <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  OPTIONAL { 
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Georgeanne Marie Rice""@en .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?finalChild WHERE {
  # Step 1: Identify the father of Ernest Augustus, Duke of Brunswick
  ?father <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  
  # Step 2: Find the spouse of Princess Victoria Louise of Prussia
  ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Determine the child of this spouse
  ?spouse <http://dbpedia.org/ontology/child> ?child1 .
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the parent of Prince George William of Hanover
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
  
  # Step 5: Find the child of this parent
  ?parent <http://dbpedia.org/ontology/child> ?child2 .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Find the child of the father identified in step 1
  ?father <http://dbpedia.org/ontology/child> ?finalChild .
}
```",7,10,8,3,3,3,3,71,0,3,1,0.0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"```sparql
SELECT ?member WHERE {
  # Step 1: Find Eiji Ōtsuka's Alma Mater
  OPTIONAL { 
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER (lang(?almaMater) = ""ja"") # Ensure it is Japanese
    ?almaMater a <http://dbpedia.org/class/yago/JapaneseOrganizations1000000010> ;
               a <http://dbpedia.org/ontology/Organisation> ;
               a <http://dbpedia.org/ontology/EducationalOrganization> .
  }

  # Step 2: Find Members of the Alma Mater
  OPTIONAL {
    ?almaMater <http://xmlns.com/foaf/0.1/member> ?member .
  }
  
  # Step 3: Identify Leader's Residence from 2010 Election
  OPTIONAL {
    ?election <http://dbpedia.org/ontology/electionDate> ?date .
    FILTER (YEAR(?date) = 2010)
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    ?leader a <http://dbpedia.org/ontology/Politician> .
    ?leader <http://dbpedia.org/ontology/residence> ?residence .
    ?residence a <http://dbpedia.org/ontology/Country> .
  }

  # Step 4: Find Native Members
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/nationality> ?nationality .
    FILTER (?nationality = ?residence) # Ensure native to the leader's residence country
  }
}
```",5,11,6,3,2,3,3,71,0,144562,84,0.0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?partyFather ?partyMichelePinto ?partyProdi WHERE {
  OPTIONAL {
    # Party of Lamberto Andreotti's father
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/politicalParty> ?partyFather .
  }
  
  OPTIONAL {
    # Party of Michele Pinto
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/property/politicalParty> ?partyMichelePinto .
  }

  OPTIONAL {
    # Party of Romano Antonio Prodi
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/politicalParty> ?partyProdi ;
       <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician> .
  }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?awardEntity ?software WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/awards> ?award .
    ?award <http://purl.org/dc/terms/creator> ?awardEntity .
  }
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Joy> .
    ?work <http://www.w3.org/2002/07/owl#sameAs> ?software .
    FILTER EXISTS { ?software a <http://dbpedia.org/ontology/Software> }
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
SELECT ?mayorAlmaMater ?awardeeAlmaMater ?nickname WHERE {
  # Alma mater of the mayor of Northern Ireland Forum
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politician> _:a .
    ?mayor <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }

  # Alma mater of the awardee of Royal Medal
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }

  # Nickname of an entity that is both an organisation and educational institution in Northern Ireland
  OPTIONAL {
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
            <http://dbpedia.org/ontology/EducationalInstitution> ;
            <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
    ?entity <http://xmlns.com/foaf/0.1/nick> ?nickname .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?country ?war1 ?war2 WHERE {
  # Step 1: Find the birthplace of Bob Heffron which is a country
  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER (lang(?countryLabel) = ""en"")
    OPTIONAL { 
      ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
      BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?countryLabel), "" "", ""_""))) AS ?country)
    }
  }

  # Step 2: Find the war associated with a military unit of an office holder and politician in New Zealand Army
  OPTIONAL {
    ?officeHolder <http://dbpedia.org/ontology/politicalParty> ?party .
    ?officeHolder <http://dbpedia.org/ontology/memberOfParliament> ?mp .
    ?mp <http://dbpedia.org/property/country> <http://dbpedia.org/resource/New_Zealand> .
    ?officeHolder <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/2000/01/rdf-schema#label> ""New Zealand Army""@en .
    ?profession <http://dbpedia.org/property/war> ?war1 .
  }

  # Step 3: Find the war associated with Knight Grand Cross of the Order of the Bath
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> ?title .
    FILTER (CONTAINS(LCASE(?title), ""knight grand cross of the order of the bath""))
    ?awardee <http://dbpedia.org/property/war> ?war2 .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
# Step 1: Find the decedent's birth date
SELECT ?decedentBirthDate WHERE {
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:dateOfBirth ?birthDate .
  ?athlete dbo:deathDate ?deathDate .
  
  BIND(?birthDate AS ?decedentBirthDate)
}

# Step 2: Find person born on the decedent's birth date
SELECT DISTINCT ?person WHERE {
  VALUES (?birthDate) { (<decedentBirthDate>) } # Replace <decedentBirthDate> with actual value from step 1

  ?person dbo:dateOfBirth ?birthDate .
}

# Step 3: Find Shèna's band member who wrote Apollo (Hardwell song)
SELECT DISTINCT ?bandMember WHERE {
  ?shena foaf:name ""Shèna"" ;
         dbo:memberOfBand ?band .

  ?apolloSong dbo:lyricsBy ?writer .
  ?writer dbo:memberOfBand ?band .

  BIND(?writer AS ?bandMember)
}

# Combine results
SELECT DISTINCT ?person ?bandMember WHERE {
  # Include sub-query results here, assuming they are stored in variables or temporary bindings
}
```

Note: This query is a conceptual framework. Actual implementation requires executing each step separately and combining the results programmatically due to SPARQL's limitations on chaining complex queries directly.",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Find members of Nevermore
  { 
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?member .
    BIND(?member AS ?bandMember)
  }
  
  UNION
  
  # Find bands associated with Joseph Michael and their members
  {
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/associatedBand> ?band .
    ?band <http://dbpedia.org/ontology/member> ?member .
    BIND(?member AS ?bandMember)
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?elDirectorCommander ?francoCommander ?prietoPredecessorCommander WHERE {
  # El Director's military force commander
  OPTIONAL {
    ?elDirector a dbo:Person ;
               foaf:name ""El Director"" .
    ?event1 a dbo:Event ;
            dbo:commander ?elDirectorCommander ;
            dbo:militaryForce ?force1 .
    ?force1 a dbo:MilitaryConflict .
  }

  # Francisco Franco's military force commander
  OPTIONAL {
    ?franco a dbo:Person ;
            foaf:name ""Francisco Franco"" .
    ?event2 a dbo:Event, dbo:MilitaryConflict ;
            dbo:militaryForce ?force2 ;
            dbo:commander ?francoCommander .
  }

  # Predecessor of Indalecio Prieto's military force commander
  OPTIONAL {
    ?prietoPredecessor a dbo:Person ;
                       foaf:name ?predecessorName .
    ?event3 a dbo:Event, dbo:MilitaryConflict ;
            dbo:militaryForce ?force3 ;
            dbo:commander ?prietoPredecessorCommander .
    ?indalecioPrieto a dbo:Person ;
                     foaf:name ""Indalecio Prieto"" .
    ?predecessorRole a dbo:role ;
                     dbo:agent ?prietoPredecessor ;
                     dbo:hasOccupant ?indalecioPrieto .
  }
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?election <http://dbpedia.org/property/electionLeader> ?leader .
  FILTER (str(?election) = ""2010_Japanese_House_of_Councillors_election"")

  # Step 2: Determine the country of residence for this leader
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2004/02/skos/core#prefLabel> ?country .

  # Step 3: Find the person native to this country and manager of 2013 Júbilo Iwata season
  ?person <http://dbpedia.org/ontology/nationality> _:b .
  ?nationality <http://www.w3.org/2004/02/skos/core#prefLabel> ?country .
  FILTER (str(?person) = ""Manager_of_2013_Júbilo_Iwata_season"")
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^xsd:gYear .

  # Step 4: Identify the alma mater of this person
  ?person <http://dbpedia.org/property/almaMater> ?almaMater .
  FILTER (str(?almaMater) = ""Japanese_university"")

  # Step 5: Find a member of this alma mater
  ?member <http://dbpedia.org/ontology/member> ?almaMater .
  ?almaMater <http://www.w3.org/2004/02/skos/core#prefLabel> ?universityName .
  FILTER (str(?universityName) = ""Japanese_university"")
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?parent WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> ;
         <http://dbpedia.org/ontology/fatherOrMother> ?spouse .
  OPTIONAL { ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> ;
             <http://dbpedia.org/ontology/fatherOrMother> <http://dbpedia.org/resource/Aristotle_Onassis> . }
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> ;
          <http://dbpedia.org/ontology/fatherOrMother> ?child .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?grandChild ?father WHERE {
  # Step 1: Find royal children of Grand Duchess Maria Pavlovna
  ?royalChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)> .
  ?royalChild a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find children of the royal child
  ?grandChild <http://dbpedia.org/ontology/father> ?royalChild .
  ?grandChild a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find royal children of Charles Augustus
  ?childOfCharlesAugustus <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach> .
  ?childOfCharlesAugustus a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the father of these children
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?mother <http://dbpedia.org/ontology/mother> ?childOfCharlesAugustus .

  # Match grandChild with father
  FILTER(?grandChild = ?childOfCharlesAugustus)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandAmbaShepherd ?bandShena WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOf> ?bandAmbaShepherd .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna""@en .
    ?person <http://dbpedia.org/ontology/memberOf> ?bandShena .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?war WHERE {
  # Step 1: Find Bob Heffron's birthplace country
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Step 2: Find a professional in New Zealand Army
  ?professional <http://dbpedia.org/ontology/profession> ?militaryUnit ;
                <http://dbpedia.org/ontology/officeHolder> ?office ;
                <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?professional <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:New_Zealand_politicians> .

  # Step 3: Find the war associated with this military unit
  ?militaryUnit <http://dbpedia.org/ontology/war> ?war .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlaceAwardee ?restingPlaceArchitect WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/politicalParty> ?party .
    ?person <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""distinguished service medal (u.s. army)""))
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlaceAwardee .
  }
  
  OPTIONAL {
    ?house <http://dbpedia.org/property/architect> ?architect .
    FILTER(STR(?house) = ""P._D._Houston_Jr._House"")
    ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlaceArchitect .
  }
  
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    FILTER(CONTAINS(LCASE(STR(?name)), ""nashville, tennessee""))
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?carlPontusGahnWars ?peninsularWarCommanderWars ?crillonClaimToFame WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?carlPontusGahnWars .
  }
  
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Peninsular_War> .
    ?commander <http://dbpedia.org/ontology/participatedIn> ?peninsularWarCommanderWars .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?crillonClaimToFame .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?arnulfoParty ?guillermoParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/party> ?arnulfoParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?guillermoParty .
  }
}
```",4,5,5,2,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the Battle of Perire
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .

  # Step 2: Find the Commander who is Royalty
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Identify the Father of the Commander
  ?commander <http://dbpedia.org/ontology/father> ?father .

  # Step 4: Find the Spouse of the Father
  ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?teamManager WHERE {
  # Step 1: Get the manager of the 1998 Kashima Antlers season
  OPTIONAL { 
    <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/coach> ?manager .
    
    # Step 2: Find the team managed by this manager
    ?team <http://dbpedia.org/property/teamManager> ?manager .
    
    # Step 3: Get the current manager of that team
    ?team <http://dbpedia.org/property/currentTeamManager> ?teamManager .
  }
  
  # Step 4: Identify Yōichi Masuzoe’s country of residence
  OPTIONAL {
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/nationality> ?country .
    
    # Step 5: Find a University of Tsukuba member from that country
    ?person <http://www.w3.org/ns/org#memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> ;
            <http://dbpedia.org/ontology/nationality> ?country .
  }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Find band members of Senidah
  OPTIONAL { 
    ?senidah <http://dbpedia.org/ontology/member> ?bandMember .
    FILTER(STRSTARTS(STR(?senidah), ""http://dbpedia.org/resource/Senidah""))
  }
  
  # Get birthplace of Samir Bekrić and find natives
  OPTIONAL {
    ?samirBekric <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(STRSTARTS(STR(?samirBekric), ""http://dbpedia.org/resource/Samir_Bekrić""))
    
    ?native <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
  }
  
  # Find person born as Edin Dervišhalidović
  OPTIONAL {
    ?person <http://xmlns.com/foaf/0.1/name> ""Edin Dervišhalidović"" .
  }

  # Combine results to find common entities
  FILTER(?bandMember = ?native && ?bandMember = ?person)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?almaMater ?alterEgo ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood_(comics)> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Baden-Württemberg> .
  }
}
```",5,5,6,2,3,3,3,71,0,1,1,0.0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Step 1: Find associated musical artists of Watchtower
SELECT ?watchtowerArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: Find associated musical artists of Red Tide
SELECT ?redTideArtist WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
}

# Step 3: Find common associated musical artist
SELECT DISTINCT ?commonArtist WHERE {
  VALUES ?artist1 { ?watchtowerArtist }
  VALUES ?artist2 { ?redTideArtist }
  ?artist1 = ?artist2 .
  BIND(?artist1 AS ?commonArtist)
}

# Step 4: Find band members of Don Dokken who are musical artists
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://dbpedia.org/ontology/member> ?person .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}

# Step 5: Combine results to find the final associated musical artist
SELECT DISTINCT ?finalArtist WHERE {
  VALUES ?commonArtist { ?commonArtist }
  VALUES ?bandMember { ?bandMember }
  ?commonArtist = ?bandMember .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?birthPlaceSaito ?commanderWar ?administrationFatherSpouse ?deathPlaceIeyasu WHERE {
  # Birth place of Saitō Hajime
  <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceSaito .

  # Commander in a war that is also an event and societal event
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event rdf:type <http://dbpedia.org/class/yago/MilitaryConflictEvent108069068> .
  ?war <http://dbpedia.org/ontology/commander> ?commanderWar .

  # Administration of the father of the spouse of Tokugawa Masako
  ?masakoSpouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Royalty108069068> .
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?masakoSpouse .
  ?masakoSpouse <http://dbpedia.org/property/father> ?fatherSpouse .
  ?fatherSpouse <http://dbpedia.org/ontology/administration> ?administrationFatherSpouse .

  # Death place of Tokugawa Ieyasu
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceIeyasu .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
SELECT ?force ?war WHERE {
  OPTIONAL {
    # Find the force associated with Narciso Campero
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
    ?person <http://dbpedia.org/property/militaryForce> ?force .
  }
  
  OPTIONAL {
    # Find the war associated with the commander in Battle of La Rinconada de Ate
    ?battle <http://dbpedia.org/ontology/battleCommander> ?commander .
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Battle of La Rinconada de Ate""@en .
    ?battle <http://dbpedia.org/property/war> ?war .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist ?band WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/band> ?band .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Find children of Seleucus II Callinicus who are royalty
  ?royaltyChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?royaltyChild a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the parent of Antiochus's child
  ?antiochusChild <http://dbpedia.org/ontology/parent> ?parentOfAntiochusChild .
  ?antiochusChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .

  # Step 3: Find the spouse of Laodice IV
  ?spouseOfLaodice <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Laodice_IV> .
  
  # Combine conditions to find a common entity
  FILTER (?royaltyChild = ?parentOfAntiochusChild && ?royaltyChild = ?spouseOfLaodice)
  BIND(?royaltyChild AS ?child)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","```sparql
SELECT ?actorMusicalArtist ?bandMemberMusicalArtist WHERE {
  OPTIONAL {
    # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STR(?film) = ""Return_to_Nuke_'Em_High_Volume_1"")
    
    # Step 2: Find associated musical artist for this actor
    ?actor <http://dbpedia.org/property/bandMember> ?band .
    ?band <http://www.w3.org/2000/01/rdf-schema#label> ?bandLabel .
    OPTIONAL {
      ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?actorMusicalArtist .
    }
  }

  OPTIONAL {
    # Step 3: Find the band member of ""Nevermore""
    ?nevermoreBand <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore"" .
    ?bandMember <http://dbpedia.org/property/bandMember> ?nevermoreBand .

    # Step 4: Identify the band associated with Joseph Michael Furney
    ?jmf <http://dbpedia.org/resource/Joseph_Michael_Furney> .
    ?jmf <http://dbpedia.org/ontology/memberOf> ?bandFurney .

    # Find associated musical artist for this person
    OPTIONAL {
      ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMemberMusicalArtist .
    }
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
SELECT ?band WHERE {
  ?person foaf:givenName ""Joseph"" .
  ?person foaf:surname ""Furney"" .
  ?person dbp:birthName ""Joseph Michael Furney"" .
  
  ?person dbo:bandMemberOf ?band .
  ?band rdfs:label ""Nevermore""@en .

  OPTIONAL {
    ?band a <http://dbpedia.org/ontology/Band> .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
SELECT ?team WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2006/vcard/ns#bday> ?birthDate .

  # Step 2: Find soccer players and managers born on that date
  ?person <http://www.w3.org/2006/vcard/ns#bday> ?birthDate .
  ?person <http://dbpedia.org/ontology/soccerPlayer> ?player .
  ?person <http://dbpedia.org/ontology/soccerManager> ?manager .

  # Step 3: Get FC Vaduz's nickname
  OPTIONAL {
    <http://dbpedia.org/resource/Football_Club_Vaduz> <http://dbpedia.org/property/nickname> ?nickname .
  }

  # Step 4: Find the team associated with the person
  ?person <http://dbpedia.org/ontology/team> ?team .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?associatedArtist ?workProducer WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    ?song a <http://dbpedia.org/ontology/Song> ;
          <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> ;
          <http://dbpedia.org/ontology/producer> ?workProducer .
  }
}
```",4,7,5,2,3,3,3,71,1,35,0,0.027777777777777776,1.0,0.05405405405405406
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?parentOfMargaretChild ?childOfJosephKarlParent ?nativeParent WHERE {
  # Step 1: Archduchess Margaret of Austria (born 1925)
  ?margaret <http://dbpedia.org/ontology/birthDate> ?date .
  FILTER(YEAR(?date) = 1925)
  ?margaret <http://www.w3.org/2006/vcard/ns#hasParent> ?parentMargaret .
  
  # Step 2: Child of Margaret's parent
  ?parentMargaret <http://dbpedia.org/ontology/child> ?parentOfMargaretChild .

  # Step 3: Archduke Joseph Karl of Austria
  ?josephKarl <http://www.w3.org/2006/vcard/ns#hasParent> ?parentJosephKarl .
  
  # Step 4: Child of Joseph Karl's child
  ?childOfJosephKarl <http://dbpedia.org/ontology/child> ?josephKarl .
  ?childOfJosephKarl <http://www.w3.org/2006/vcard/ns#hasParent> ?childOfJosephKarlParent .

  # Step 5: Landmark at elevation 96.0
  ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
  FILTER(?elevation = ""96.0""^^xsd:float)
  ?landmark <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/type> ?type .
  FILTER(CONTAINS(LCASE(STR(?type)), ""settlement""))

  # Step 6: Native of the landmark
  ?native <http://dbpedia.org/ontology/birthPlace> ?landmark .
  ?native <http://www.w3.org/2006/vcard/ns#hasParent> ?nativeParent .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?nickname .
  }
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
    ?spouse <http://dbpedia.org/property/famousFor> ?work .
    FILTER(?work = <http://dbpedia.org/resource/All_About_the_Andersons>) .
  }
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/starring> ?work .
    FILTER(?work = <http://dbpedia.org/resource/All_About_the_Andersons>) .
  }
  ?native <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?nickname .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?movie WHERE {
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
  ?actor <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  ?actor <http://dbpedia.org/ontology/actor> _:b0 .
  _:b0 <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/The_Departed> .
  
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie105936069> .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> ?work .
  ?work <http://www.w3.org/2002/07/owl#sameAs> ?tvShow .
  
  ?actor <http://dbpedia.org/ontology/actor> ?movie .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?micheleParty ?fatherParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalAffiliation> ?micheleParty .
  }
  
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/politicalAffiliation> ?fatherParty .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
SELECT ?greatGrandparent ?childParent WHERE {
  OPTIONAL {
    # Find Min Linka's great-grandparent
    ?minLinka <http://dbpedia.org/ontology/birthName> ""Min Linka"" .
    ?minLinka <http://dbpedia.org/ontology/father> ?parent1 .
    ?parent1 <http://dbpedia.org/ontology/father> ?grandparent .
    ?grandparent <http://dbpedia.org/ontology/father> ?greatGrandparent .
  }
  
  OPTIONAL {
    # Find the parent of a child of Ram Khamhaeng
    ?ramKhamhaeng <http://dbpedia.org/ontology/birthName> ""Ram Khamhaeng"" .
    ?ramKhamhaeng <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/father> ?childParent .
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?warGahn ?claimToFame ?warPeninsular WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?warGahn .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?claimToFame .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/war> ?warPeninsular .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
SELECT ?grandchild ?merneptahFatherSpouse ?nefertariChildParent WHERE {
  # Seti I's grandchildren
  ?setiIChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seti_I> .
  ?grandchild <http://dbpedia.org/ontology/parent> ?setiIChild .

  # Merneptah's father and spouse
  ?merneptahFather <http://dbpedia.org/property/offspring> <http://dbpedia.org/resource/Merneptah> .
  ?merneptahFatherSpouse <http://dbpedia.org/ontology/spouse> ?merneptahFather .

  # Nefertari's child and parent
  ?nefertariChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Nefertari> .
  ?nefertariChildParent <http://dbpedia.org/ontology/child> ?nefertariChild .

  # Find common entity
  FILTER (?grandchild = ?merneptahFatherSpouse && ?merneptahFatherSpouse = ?nefertariChildParent)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
SELECT ?priscillaBandMember ?samuelBandMember ?associatedArtist WHERE {
  OPTIONAL {
    ?priscilla a <http://dbpedia.org/ontology/MusicalArtist> ;
               <http://www.w3.org/2006/vcard/ns#hasName> ""Priscilla Opoku-Kwarteng"" ;
               <http://dbpedia.org/property/bandMember> ?priscillaBandMember .
    ?priscillaBandMember a <http://dbpedia.org/ontology/MusicalArtist> ;
                         <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    ?samuel a <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://www.w3.org/2006/vcard/ns#hasName> ""Samuel Ofori Amponsah"" ;
            <http://dbpedia.org/property/bandMember> ?samuelBandMember .
    ?samuelBandMember a <http://dbpedia.org/ontology/MusicalArtist> ;
                      <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"```sparql
SELECT DISTINCT ?member WHERE {
  OPTIONAL {
    ?leader <http://dbpedia.org/ontology/politician> true .
    ?election <http://dbpedia.org/property/electionLeader> ?leader .
    FILTER(?election = <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election>) .

    ?residence <http://www.w3.org/ns/prov#location> ?country .
    ?leader <http://dbpedia.org/ontology/residence> ?residence .

    ?manager <http://dbpedia.org/property/teamManager> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    
    ?universityMember <http://www.w3.org/ns/org#memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?universityMember <http://dbpedia.org/ontology/nativePlace> ?residence .

    BIND(?universityMember AS ?member)
  }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardee ?commander WHERE {
  OPTIONAL {
    ?campaign <http://dbpedia.org/ontology/award> ?award .
    ?campaign <http://dbpedia.org/property/name> ""Volcano and Ryukyu Islands campaign"" .
    ?recipient <http://dbpedia.org/ontology/receivesAward> ?award .
    ?recipient <http://www.w3.org/2000/01/rdf-schema#label> ?awardee .
  }
  OPTIONAL {
    ?szalasi <http://dbpedia.org/property/commanderOf> ?force .
    ?szalasi <http://dbpedia.org/resource/Ferenc_Szálasi> .
    ?commander <http://dbpedia.org/ontology/memberOfMilitaryOrganization> ?force .
    ?commander <http://www.w3.org/2000/01/rdf-schema#label> ?commanderLabel .
  }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia"" .

  # Step 2: Find Her Spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the Father of Her Spouse
  ?spouse dbo:childOf ?father .

  # Step 4: Identify the Child of This Father Who is a Royalty and Parent to Ernest Augustus, Duke of Brunswick
  ?father dbo:child ?child .
  ?child a dbo:Royalty ;
         dbo:parent ?ernestAugustus .
  ?ernestAugustus foaf:name ""Ernest Augustus, Duke of Brunswick"" .

  # Step 5: Find the Spouse of This Child
  ?child dbo:spouse ?finalSpouse .

  BIND(?finalSpouse AS ?spouse)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
SELECT ?elDirectorCommander ?francoConflictCommander ?caballeroConflictCommander WHERE {
  # El Director's military force
  OPTIONAL { 
    <http://dbpedia.org/resource/El_Director> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    
    # Commander of the event associated with this military force
    ?event <http://dbpedia.org/ontology/event> ?militaryConflict .
    ?militaryConflict <http://dbpedia.org/ontology/commander> ?elDirectorCommander .
  }
  
  # Francisco Franco's military conflict and its commander
  OPTIONAL {
    <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/ontology/militaryForce> ?francoMilitaryForce .
    
    ?francoEvent <http://dbpedia.org/ontology/event> ?francoConflict .
    ?francoConflict <http://dbpedia.org/ontology/commander> ?francoConflictCommander .
  }
  
  # Francisco Largo Caballero's military conflict and its commander
  OPTIONAL {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/militaryForce> ?caballeroMilitaryForce .
    
    ?caballeroEvent <http://dbpedia.org/ontology/event> ?caballeroConflict .
    ?caballeroConflict <http://dbpedia.org/ontology/commander> ?caballeroConflictCommander .
  }
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?ilonaParent ?budaParent WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://www.w3.org/2006/vcard/ns#hasParent> ?ilonaParent .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
    ?person <http://www.w3.org/2006/vcard/ns#hasParent> ?budaParent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
SELECT ?native WHERE {
  OPTIONAL {
    ?politician <http://dbpedia.org/ontology/politicalParty> ?party .
    ?election <http://dbpedia.org/property/electionLeader> ?politician .
    FILTER(?election = ""2010 Japanese House of Councillors election"") .

    ?politician <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2006/vcard/ns#country-name> ?country .

    ?native <http://dbpedia.org/property/nationality> ?country .
  }

  OPTIONAL {
    ?manager <http://dbpedia.org/ontology/sportsManagerForTeam> ?team .
    ?season <http://dbpedia.org/property/teamManager> ?manager .
    FILTER(?season = ""1998 Kashima Antlers season"") .

    ?team <http://dbpedia.org/ontology/teamManagedBy> ?sportsManager .
  }

  OPTIONAL {
    ?eiji <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER(?eiji = ""Eiji Ōtsuka"") .

    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?institutionLabel .
    FILTER(CONTAINS(LCASE(?institutionLabel), ""japanese"")) .
    FILTER(STRSTARTS(STR(?almaMater), ""http://dbpedia.org/resource/"") &&
           (CONTAINS(STR(?almaMater), ""university"") ||
            CONTAINS(STR(?almaMater), ""educational institution""))) .

    ?member <http://dbpedia.org/ontology/alumni> ?almaMater .
  }

  FILTER(?native = ?member)
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?childRestingPlace ?awardeeRestingPlace WHERE {
  OPTIONAL {
    ?jamesBurton <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/restingPlace> ?childRestingPlace .
    FILTER(?jamesBurton = <http://dbpedia.org/resource/J._W._Burrard_Burton>)
  }
  
  OPTIONAL {
    ?geraldGraham <http://dbpedia.org/property/award> ?award .
    ?recipient <http://dbpedia.org/ontology/receivedAward> ?award .
    ?recipient <http://dbpedia.org/ontology/restingPlace> ?awardeeRestingPlace .
    FILTER(?geraldGraham = <http://dbpedia.org/resource/Gerald_Graham>)
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?carlWar ?peninsularCommander ?commanderFame ?thomasWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
    FILTER(?war <http://www.w3.org/2002/07/owl#Thing>)
    BIND(?war AS ?carlWar)
  }
  
  OPTIONAL {
    ?peninsularCommander <http://dbpedia.org/ontology/commanded> <http://dbpedia.org/resource/Peninsular_War> .
    ?peninsularCommander <http://dbpedia.org/ontology/famousFor> ?commanderFame .
    BIND(?peninsularCommander AS ?peninsularCommander)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/war> ?war .
    FILTER(?war <http://www.w3.org/2002/07/owl#Thing>)
    FILTER(STRSTARTS(STR(?war), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?war <http://dbpedia.org/ontology/type> ?type . 
                    FILTER((?type = <http://dbpedia.org/class/yago/MilitaryConflict108067> ||
                            ?type = <http://dbpedia.org/class/yago/SocietalEvent108068>) &&
                           ?war <http://www.w3.org/2002/07/owl#Thing>)
                  }
           )
    BIND(?war AS ?thomasWar)
  }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?allenHillAlmaMater ?organisationNickname ?mayorAlmaMater WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .
  }
  
  OPTIONAL {
    ?organisation a <http://dbpedia.org/ontology/Organisation> ;
                  <http://www.w3.org/2006/vcard/ns#hasAddress> ?address ;
                  <http://purl.org/dc/terms/description> ?nickname .
    ?address <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> .
    FILTER EXISTS { ?organisation a <http://dbpedia.org/ontology/EducationalInstitution> }
    BIND(?nickname AS ?organisationNickname)
  }

  OPTIONAL {
    ?mayor a <http://dbpedia.org/ontology/Politician> ;
           <http://dbpedia.org/ontology/mayorFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
}
```",6,9,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
SELECT ?entityInAdmin ?entityInBirthplace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Democratic_Party_(Italy)> <http://dbpedia.org/ontology/administration> ?adminEntity .
    ?adminEntity <http://www.w3.org/2002/07/owl#sameAs> ?entityInAdmin .
    FILTER EXISTS { ?entityInAdmin a <http://dbpedia.org/class/yago/Settlement108069068>. }
    FILTER EXISTS { ?entityInAdmin a <http://dbpedia.org/class/yago/Region108069068>. }
    OPTIONAL { ?entityInAdmin <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Italy> . }
    OPTIONAL { ?entityInAdmin a <http://dbpedia.org/class/yago/State108069068>. }
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthEntity .
    ?birthEntity <http://www.w3.org/2002/07/owl#sameAs> ?entityInBirthplace .
  }
}
```",4,8,5,2,2,2,2,9,0,21,587,0.0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Find the native politician and office holder from France
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?politician a <http://dbpedia.org/ontology/Politician> ;
             a <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 2: Find their residence in Britain
  ?residence <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?settlement .
  ?settlement a <http://dbpedia.org/ontology/Settlement> ;
              <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 3: Determine Jon Pertwee's birth name
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?birthName .

  # Step 4: Identify Sean Pertwee's child with the same birth name as Jon Pertwee
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Sean_Pertwee> ;
         <http://dbpedia.org/property/birthName> ?birthName .

  # Step 5: Find the claim to fame involving a film and military conflict for this child
  ?claimToFame <http://dbpedia.org/ontology/actor> ?child ;
               a <http://dbpedia.org/ontology/Film>, <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 6: Identify the actor of this claim to fame
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .

  # Step 2: Identify the claim to fame of Sherry Hormann's spouse
  ?work <http://dbpedia.org/ontology/claimToFame> ?spouse .
  
  # Step 3: Find the actor of this work
  ?actor <http://dbpedia.org/ontology/performedIn> ?work .

  # Step 4: Identify Hub City and its native professional
  ?hubCity <http://dbpedia.org/property/kindOfPlace> ""Hub City"" .
  ?professional <http://dbpedia.org/ontology/nationality> ?hubCity ;
                 <http://www.w3.org/2000/01/rdf-schema#label> ?professionLabel .

  # Step 5: Find a movie involving both the actor and the professional
  ?movie <http://dbpedia.org/ontology/starring> ?actor, ?professional .
  ?movie <http://dbpedia.org/ontology/movie> [] ;
         <http://www.w3.org/2002/07/owl#sameAs> ?work ; # Assuming work is also a movie/show
         <http://purl.org/dc/terms/type> ""Movie"" .

}
```

Note: This query assumes certain properties and relationships that may not be directly available in DBpedia, such as the specific identification of ""Hub City"" or the exact nature of ""claim to fame."" Adjustments might be necessary based on actual data availability.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?spanishCivilWarForce ?francoEvent ?biscayCommander ?commanderForce WHERE {
  # Military forces in the Spanish Civil War
  ?event <http://dbpedia.org/ontology/event> ?spanishCivilWar .
  ?spanishCivilWar <http://dbpedia.org/property/militaryForce> ?spanishCivilWarForce .

  # Societal event related to Francisco Franco that is also a military conflict
  ?francoEvent <http://www.w3.org/2000/01/rdf-schema#label> ""Spanish Civil War"" .
  ?francoEvent <http://dbpedia.org/ontology/event> ?event .
  ?francoEvent <http://purl.org/dc/terms/type> ?type1, ?type2 .
  FILTER (?type1 = <http://dbpedia.org/class/yago/SocietalEvent108069068> && 
          ?type2 = <http://dbpedia.org/ontology/Event> &&
          EXISTS { ?francoEvent <http://dbpedia.org/property/person> <http://dbpedia.org/resource/Francisco_Franco> } .
  FILTER (?type3 = <http://dbpedia.org/class/yago/MilitaryConflict108069068>)

  # Commander in the Biscay Campaign
  ?biscayCampaign <http://dbpedia.org/ontology/commander> ?biscayCommander .

  # Military force of the commander
  ?biscayCommander <http://dbpedia.org/property/militaryForce> ?commanderForce .
}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?ebonyBandMember ?samuelBandMember WHERE {
  # Step 1: Identify Ebony Reigns by birth name
  OPTIONAL {
    ?ebony a <http://dbpedia.org/ontology/MusicalArtist> ;
           <http://www.w3.org/2006/vcard/ns#hasName> ""Ebony Reigns"" ;
           <http://dbpedia.org/property/birthName> ""Samuel Owusu Amponsah"" .
  }

  # Step 2: Find band members associated with Ebony Reigns
  OPTIONAL {
    ?ebonyBandMember a <http://dbpedia.org/ontology/MusicalArtist> ;
                     <http://dbpedia.org/ontology/associatedMusicalArtist> ?ebony .
  }

  # Step 3: Identify Samuel Ofori Amponsah by birth name
  OPTIONAL {
    ?samuel a <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://www.w3.org/2006/vcard/ns#hasName> ""Samuel Ofori Amponsah"" ;
            <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah"" .
  }

  # Step 4: Find band members associated with Samuel Ofori Amponsah
  OPTIONAL {
    ?samuelBandMember a <http://dbpedia.org/ontology/MusicalArtist> ;
                      <http://dbpedia.org/ontology/associatedMusicalArtist> ?samuel .
  }
}
```",6,8,7,3,2,3,2,20,1,31105,0,3.214813862277374e-05,1.0,6.429421030636192e-05
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?warOfAwardee ?warOfProfession WHERE {
  OPTIONAL {
    # Find the war associated with Jonathon Band's awards
    ?jonathonBand a dbo:Person ;
                 foaf:name ""Jonathon Band"" .
    ?award dbo:recipient ?jonathonBand ;
           dbo:relatedWorkOrEvent ?warOfAwardee .
  }
  
  OPTIONAL {
    # Find the war associated with a military unit profession of an office holder and politician in New Zealand Army
    ?officeHolder a dbo:Person ;
                 dbo:positionHeld ?office ;
                 dbo:memberOf <http://dbpedia.org/resource/New_Zealand_Army> .
    ?officeHolder dbo:occupation ?profession .
    ?profession a dbo:MilitaryUnit ;
                dbo:relatedWorkOrEvent ?warOfProfession .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the writer of ""40 Dayz & 40 Nightz""
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  FILTER(STR(?album) = ""40 Dayz & 40 Nightz"")

  # Step 2: Ensure the writer is both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 3: Find the producer of this writer's work
  ?work <http://dbpedia.org/ontology/writer> ?writer .
  ?work <http://dbpedia.org/ontology/producer> ?producer .

  # Step 4: Identify the professional in ""Rapper""
  ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?producer <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(STR(?profession) = ""Rapper"")

  # Step 5: Retrieve the associated musical artist
  ?producer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
SELECT ?work ?administeredTerritory ?timeZoneRegion WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Constitution_of_Iceland> <http://dbpedia.org/ontology/article> ?article .
    ?article <http://dbpedia.org/property/section> ""IV"" .
    ?article <http://dbpedia.org/property/part> ""Article 62"" .
    ?article <http://purl.org/dc/terms/description> ?work .
  }
  
  OPTIONAL {
    ?territory <http://dbpedia.org/ontology/administrativeCenter> <http://dbpedia.org/resource/Reykjavík> .
    ?territory <http://www.w3.org/2004/02/skos/core#prefLabel> ?administeredTerritory .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2004/02/skos/core#broader> ?region .
    ?region <http://www.w3.org/2004/02/skos/core#prefLabel> ?timeZoneRegion .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?actor ?native WHERE {
  # Step 1: Find Jon Pertwee's child
  ?child <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
  
  # Step 2: Identify the politician who is a native of France and an office holder
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> ;
              <http://dbpedia.org/ontology/officeHolder> ?office ;
              <http://dbpedia.org/ontology/nativeOf> ?settlement .
  
  # Step 3: Ensure the settlement is British
  ?settlement <http://www.w3.org/2006/vcard/ns#country-name> <http://dbpedia.org/resource/United_Kingdom> .

  # Link child to politician
  ?child <http://dbpedia.org/ontology/parent> ?politician .
  
  # Step 4: Find the actor of ""Dog Soldiers""
  ?film <http://dbpedia.org/property/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> ;
        <http://dbpedia.org/ontology/starring> ?actor .

  # Step 5: Determine who is native to the settlement
  ?native <http://dbpedia.org/ontology/nativeOf> ?settlement .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify John Devon Roland Pertwee
  ?pertwee <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  
  # Step 2: Find his child
  ?pertwee <http://dbpedia.org/ontology/child> ?child .

  OPTIONAL {
    # Step 3: Determine the native of his residence
    ?pertwee <http://dbpedia.org/ontology/residence> ?residence .
    
    FILTER EXISTS { ?residence a <http://dbpedia.org/class/yago/SettlementsInEnglandThatArePopulatedPlaces> }
    FILTER EXISTS { ?residence <http://www.w3.org/2006/vcard/ns#country-name> ""United Kingdom"" }

    # Find a native of this settlement who is both a politician and an office holder
    ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
    ?native <http://dbpedia.org/ontology/birthPlace> ?residence .
    ?native <http://www.w3.org/2002/07/owl#sameAs> ?politician .
    ?politician a <http://dbpedia.org/class/yago/PoliticiansByCountryYAGO> ;
               a <http://dbpedia.org/class/yago/OfficeHoldersByCountryYAGO> .

    # Step 4: Identify the native's native place in France
    ?native <http://dbpedia.org/ontology/birthPlace> ?frenchPlace .
    
    FILTER EXISTS { ?frenchPlace <http://www.w3.org/2006/vcard/ns#country-name> ""France"" }
    
    # Step 5: Find the child of John Pertwee from this place
    ?child <http://dbpedia.org/ontology/birthPlace> ?frenchPlace .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchildParent ?merneptahFatherSpouse WHERE {
  # Part 1: Parent of the child of the child of Seti I
  ?setiChild <http://dbpedia.org/ontology/child> ?setiGrandchild .
  ?setiGrandchild <http://dbpedia.org/ontology/parent> ?grandchildParent .

  # Part 2: Spouse of the father of Merneptah
  ?merneptahFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Merneptah> .
  ?merneptahFather <http://dbpedia.org/property/spouse> ?merneptahFatherSpouse .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
SELECT ?awardee ?commander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/receivedAward> ?award .
    ?award <http://dbpedia.org/property/awardee> ?awardee .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/commanderInForce> ?force .
    ?force <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Budapest> .
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?deceasedPerson .
    ?deceasedPerson <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"```sparql
SELECT ?bandShena ?bandApolloWriter ?personBirthDatePavlo WHERE {
  OPTIONAL {
    # Band of the person born as Shèna
    ?shena <http://dbpedia.org/ontology/birthName> ""Shèna"" .
    ?shena <http://dbpedia.org/property/associatedMusicalArtist> ?bandShena .
  }
  
  OPTIONAL {
    # Band of the writer of Apollo (Hardwell song)
    ?apolloSong <http://purl.org/dc/terms/creator> ?writerApollo .
    ?writerApollo <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandApolloWriter .
    FILTER(?apolloSong = <http://dbpedia.org/resource/Apollo_(Hardwell_song)>)
  }
  
  OPTIONAL {
    # Person born on the birth date of Pavlo Khudzik
    ?pavloKhudzik <http://dbpedia.org/ontology/birthDate> ?birthDatePavlo .
    ?personBirthDatePavlo <http://dbpedia.org/ontology/birthDate> ?birthDatePavlo .
    FILTER(?pavloKhudzik = <http://dbpedia.org/resource/Pavlo_Khudzik>)
  }
}
```",7,7,8,3,3,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?personDecedent1 ?personDecedent2 ?commander WHERE {
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/author> ?author .
    ?author rdfs:label ""French Algeria""@en .
    ?work <http://dbpedia.org/property/decedent> ?personDecedent1 .
  }
  
  OPTIONAL {
    ?district <http://dbpedia.org/ontology/capital> ?capital .
    ?district rdfs:label ""Khemis Miliana District""@en .
    ?capital a <http://dbpedia.org/class/yago/Settlements100000001> .
    ?capital <http://dbpedia.org/property/decedent> ?personDecedent2 .
  }
  
  OPTIONAL {
    ?war rdfs:label ""Franco-Hova Wars""@en .
    ?commander <http://dbpedia.org/ontology/commander> ?war .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?childOfJosephAugust ?parentOfNative ?parentOfChildOfJosephFrancis WHERE {
  # Step 1: Child of Archduke Joseph August of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephAugust .

  # Step 2: Parent of the Native of a Landmark at Elevation 96.0
  ?landmark <http://www.w3.org/2006/vcard/ns#hasAltitude> ""96.0"" .
  ?native <http://dbpedia.org/ontology/nationality> ?landmark .
  ?parentOfNative <http://dbpedia.org/ontology/child> ?native .

  # Step 3: Parent of the Child of Archduke Joseph Francis of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephFrancis .
  ?parentOfChildOfJosephFrancis <http://dbpedia.org/ontology/child> ?childOfJosephFrancis .

  # Find common entity
  FILTER (?childOfJosephAugust = ?parentOfNative)
  FILTER (?childOfJosephAugust = ?parentOfChildOfJosephFrancis)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Find the spouse of Amun-her-khepeshef
  ?amunHerKhepeshef <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Find the child of this spouse
  OPTIONAL { 
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    
    # Step 3: Determine the parent of this child
    OPTIONAL {
      ?child <http://dbpedia.org/ontology/parent> ?parent .
    }
  }

  # Step 4: Identify Henuttawy (19th dynasty)
  ?henuttawy <http://www.w3.org/2000/01/rdf-schema#label> ""Henuttawy (19th dynasty)""@en .

  # Step 5: Find the parent of Henuttawy
  OPTIONAL {
    ?henuttawy <http://dbpedia.org/ontology/parent> ?parent .
  }

  FILTER(?amunHerKhepeshef = <http://dbpedia.org/resource/Amun-her-khepeshef>)
}
```",4,4,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT ?commander ?leader WHERE {
  # Find the decedent who died in Budapest
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  
  # Get the commander of that person's force
  OPTIONAL { 
    ?force <http://dbpedia.org/property/commander> ?commander .
    ?person <http://dbpedia.org/ontology/memberOf> ?force .
  }
  
  # Find Joseph Stalin's government agency and its leader
  ?agency <http://www.w3.org/ns/org#head> ?leader ;
          <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Joseph_Stalin> .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?grandParent ?sirikitParent WHERE {
  # Step 1: Find Vajiralongkorn's parent
  ?vajiralongkorn <http://dbpedia.org/ontology/birthName> ""Vajiralongkorn"" .
  ?vajiralongkorn <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find the child of Vajiralongkorn's parent
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/child> ?grandChild .
    FILTER(?grandChild = ?vajiralongkorn)
  }

  # Step 3: Identify Sirikit by birth name
  ?sirikit <http://dbpedia.org/ontology/birthName> ""Sirikit"" .

  # Step 4: Find the parent of Sirikit
  OPTIONAL {
    ?sirikit <http://dbpedia.org/ontology/father> ?sirikitParent .
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?force ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Mayor_of_Congress_Poland> <http://dbpedia.org/ontology/force> ?force .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/award> ?award .
    ?award <http://dbpedia.org/ontology/war> ?war .
  }
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Find the country of El Valle de Antón
  <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://www.w3.org/2006/vcard/ns#country-name> ?country .

  # Find parties associated with Guillermo Endara and Arnulfo Arias
  OPTIONAL {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/politicalParty> ?party1 .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?party2 .
  }

  # Ensure the entity is in the same country and matches one of the parties
  FILTER (?entity = ?party1 || ?entity = ?party2)
  OPTIONAL {
    ?entity <http://www.w3.org/2006/vcard/ns#country-name> ?country .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?native WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence a <http://dbpedia.org/class/yago/Country108069> . # Assuming yago classification for countries
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/nativeOf> ?residence .
    ?person <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
  }
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"```sparql
# Step 1: Find Antiochus II Theos' successor who is royalty
SELECT ?successor WHERE {
  <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?successor .
  ?successor a <http://dbpedia.org/ontology/Royalty> .
}

# Step 2: Find the child of this successor who is royalty
SELECT ?child WHERE {
  ?successor <http://dbpedia.org/ontology/child> ?child .
  ?child a <http://dbpedia.org/ontology/Royalty> .
}

# Step 3: Identify Laodice IV's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouse .
}

# Step 4: Find the commander in Battle of Panium and their child
SELECT ?commanderChild WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Panium>)
  ?commander <http://dbpedia.org/ontology/child> ?commanderChild .
}

# Note: The final step requires combining these results, which may need manual intervention or additional logic outside of a single SPARQL query.
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  OPTIONAL {
    # Step 1: Identify the leader of the 1962 New South Wales state election
    ?election <http://dbpedia.org/ontology/politicalLeader> ?leader .
    FILTER(?election = <http://dbpedia.org/resource/1962_New_South_Wales_state_election>)
    FILTER(CONTAINS(STR(?leader), ""politician""))

    # Step 2: Determine the birthplace country of this leader
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ?country .

    # Step 5: Find an entity in the birthplace country that is a country
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
    FILTER(?entity != ?birthPlace)
    OPTIONAL { ?entity <http://www.w3.org/2006/vcard/ns#country-name> ?sameCountry . }
    FILTER(?sameCountry = ?country)
  }

  OPTIONAL {
    # Step 3: Identify the awardee of Jonathon Band's award
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    FILTER(STRSTARTS(STR(?award), ""Jonathon Band""))

    # Step 4: Determine the war associated with this awardee
    ?awardee <http://dbpedia.org/ontology/war> ?war .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?administration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?timeZone .
  }
  
  OPTIONAL {
    ?country <http://dbpedia.org/ontology/timeZone> ?timeZone .
  }

  OPTIONAL {
    ?party <http://dbpedia.org/ontology/country> ?country ;
           a <http://dbpedia.org/ontology/PoliticalParty> ;
           <http://dbpedia.org/property/rulingParty> ""true""^^<http://www.w3.org/2001/XMLSchema#boolean> .
  }

  OPTIONAL {
    ?party <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commonEntity WHERE {
  # Commander in Eastern Front (World War II)
  ?easternFront <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STR(?easternFront) = ""Eastern_Front_(World_War_II)"")

  # Leader of the Office (Government Agency) of Joseph Stalin
  ?stalinAgency <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Joseph_Stalin> .
  ?stalinAgency <http://dbpedia.org/ontology/leader> ?leader .

  # Awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraserAward <http://purl.org/dc/terms/relation> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  ?fraserAward <http://dbpedia.org/ontology/awardee> ?awardee .

  # Find common entity
  FILTER(?commander = ?leader && ?leader = ?awardee)
  BIND(?commander AS ?commonEntity)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?deathPlaceYukiFather ?birthPlaceBoshinCommander ?adminSpouseFather WHERE {
  # Death place of Yūki Hideyasu's father (politician)
  OPTIONAL {
    <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://www.w3.org/2002/07/owl#sameAs> ?yuki .
    ?yuki <http://dbpedia.org/ontology/father> ?fatherYuki .
    ?fatherYuki <http://dbpedia.org/ontology/politician> true .
    ?fatherYuki <http://dbpedia.org/ontology/deathPlace> ?deathPlaceYukiFather .
  }

  # Birth place of Boshin War commander
  OPTIONAL {
    ?boshinWarCommander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Boshin_War> .
    ?boshinWarCommander <http://dbpedia.org/ontology/birthPlace> ?birthPlaceBoshinCommander .
  }

  # Administration of spouse's father (royalty) of Tokugawa Masako
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://www.w3.org/2002/07/owl#sameAs> ?masako .
    ?masako <http://dbpedia.org/ontology/spouse> ?spouseMasako .
    ?spouseMasako <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?spouseMasako <http://dbpedia.org/ontology/father> ?fatherSpouseMasako .
    ?fatherSpouseMasako <http://dbpedia.org/ontology/administration> ?adminSpouseFather .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/bandMember> ?bandMember .
  }
}
```",4,6,5,2,2,2,3,28,1,3,0,0.25,1.0,0.4
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1 & 2: Find associated musical artist of Jim Sheppard
  ?sheppard <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?sheppard <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""artist"")) # Ensure Jim Sheppard is an artist
  ?sheppard <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Step 3 & 4: Find band member reference in Nevermore (2006 film)
  ?film <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore"" .
  FILTER(CONTAINS(LCASE(?film), ""2006 film"")) # Ensure it's the 2006 film
  ?film <http://dbpedia.org/ontology/reference> ?reference .
  ?reference <http://dbpedia.org/ontology/bandMember> ?associatedArtist .

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?almaMater ?settlement ?reference WHERE {
  OPTIONAL {
    # Alma mater of George K. Nash's administration
    ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/George_K._Nash> .
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
  }
  
  OPTIONAL {
    # Entity in the administration related to Dustin Lynch album writer
    ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> .
    ?administration <http://dbpedia.org/ontology/administration> ?writer .
    ?settlement <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlementDescription .
    FILTER(CONTAINS(LCASE(?settlementDescription), ""settlement""))
  }
  
  OPTIONAL {
    # Reference to alter ego of Matthew Burland's persona
    ?fictionalCharacter <http://dbpedia.org/ontology/fictionalAlterEgo> <http://dbpedia.org/resource/Matthew_Burland> .
    ?reference <http://www.w3.org/2004/02/skos/core#related> ?fictionalCharacter .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?person WHERE {
  # Person born as Gigi Rice
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/birthName> ""Gigi Rice"" .
  }
  
  # Spouse of Ted McGinley
  OPTIONAL {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
    FILTER(?person = ?spouse)
  }

  # Professional in the profession of Satomi Ishihara
  OPTIONAL {
    ?professionPerson <http://dbpedia.org/ontology/profession> ?profession .
    ?satomi <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?sameProfession .
    FILTER(?profession = ?sameProfession)
    FILTER(?person = ?professionPerson)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?administration WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  OPTIONAL {
    # Find the spouse of Tokugawa Masako who is a royalty
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Find the father of this royal spouse
    ?spouse <http://dbpedia.org/property/father> ?father .
    
    # Retrieve the administration or domain associated with this father
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",4,5,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
SELECT ?indalecioPredecessor ?indalecioMilitaryForce ?emilioEvent ?rifWarForce WHERE {
  # Find predecessor of Indalecio Prieto
  ?indalecio <http://dbpedia.org/ontology/predecessor> ?indalecioPredecessor .
  FILTER(?indalecio = <http://dbpedia.org/resource/Indalecio_Prieto>) .

  # Find military force related to the predecessor's societal event or conflict
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/agent> ?indalecioPredecessor ;
           (<http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> ;
            <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict>) .
    ?event <http://dbpedia.org/property/militaryForce> ?indalecioMilitaryForce .
  }

  # Find event involving Emilio Mola as a commander
  OPTIONAL {
    ?emilioEvent <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> ;
                 (<http://www.w3.org/2002/07/owl#sameAs> ?eventType) .
  }

  # Find military force involved in the Rif War
  OPTIONAL {
    ?rifWarEvent <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Rif_War> ;
                 <http://dbpedia.org/property/militaryForce> ?rifWarForce .
  }
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity WHERE {
  # Find entities related to Green's administration
  ?green <http://dbpedia.org/ontology/administrativeUnit> ?adminEntity .
  
  # Ensure the administrative entity is a settlement
  ?adminEntity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000001> .

  # Find George K. Nash's alma mater
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Ensure the administrative entity is also an alma mater of George K. Nash
  FILTER(?adminEntity = ?almaMater)
  
  BIND(?adminEntity AS ?entity)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","```sparql
SELECT ?native WHERE {
  ?entity <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee"" .
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/nativeOf> ?native .
  }
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?child WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?father .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
  }
  FILTER (?father = ?spouse)
  
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?partyLambertoFather ?partyRomanoProdi WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/familyName> ""Andreotti"" .
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://www.w3.org/2002/07/owl#sameAs> ?lambertoResource .
    ?lambertoResource <http://xmlns.com/foaf/0.1/father> ?fatherLamberto .
    ?fatherLamberto <http://dbpedia.org/ontology/memberOf> ?partyLambertoFather .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://xmlns.com/foaf/0.1/familyName> ""Prodi"" ;
      <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" ;
      <http://www.w3.org/2002/07/owl#sameAs> ?prodiResource .
    ?prodiResource <http://xmlns.com/foaf/0.1/isPrimaryTopicOf> ?referenceProdi .
    ?referenceProdi <http://dbpedia.org/ontology/references> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
    ?prodiResource <http://dbpedia.org/ontology/memberOf> ?partyRomanoProdi .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parentOfChild ?spouseOfFather WHERE {
  # Step 1: Find a child of Ramesses II
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Step 2: Find the parent(s) of this child (could be mother or father)
  OPTIONAL { 
    ?parentOfChild <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?child .
  }
  
  # Step 3: Identify the father of Merneptah
  ?merneptahFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Merenptah> .

  # Step 4: Find the spouse of this father
  OPTIONAL {
    ?spouseOfFather <http://www.w3.org/2002/07/owl#sameAs> ?merneptahFather .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?awardee ?country WHERE {
  
  # Wars involving the New Zealand Army
  OPTIONAL { 
    ?nzArmy <http://dbpedia.org/ontology/war> ?war .
    FILTER(STRSTARTS(STR(?nzArmy), ""http://dbpedia.org/resource/New_Zealand_Army""))
  }
  
  # Awardee of Jonathon Band's award
  OPTIONAL {
    ?award <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Jonathan_Band> .
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  }
  
  # Country in the birthplace of a politician leader from the 1962 New South Wales state election
  OPTIONAL {
    ?election <http://dbpedia.org/ontology/politicalLeader> ?leader .
    FILTER(STRSTARTS(STR(?election), ""http://dbpedia.org/resource/1962_New_South_Wales_state_election""))
    ?leader <http://www.w3.org/2000/01/rdf-schema#label> ?leaderLabel .
    FILTER(CONTAINS(LCASE(?leaderLabel), ""politician""))
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.geonames.org/ontology#countryCode> ?countryCode .
    ?country <http://www.w3.org/2006/vcard/ns#country-name> ?countryName .
    FILTER(?countryCode = ?countryName)
  }
  
  # Combine results
  VALUES (?war) { ?war }
  VALUES (?awardee) { ?awardee }
  VALUES (?country) { ?country }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Don Dokken""@en ;
            <http://dbpedia.org/ontology/bandMember> ?bandMember .
  }
}
```",4,5,5,3,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Georgeanne Marie Rice
  ?rice a dbo:Person ;
        foaf:name ""Georgeanne Marie Rice"" ;
        dbp:birthName ""Georgeanne Marie Rice"" .

  # Step 2: Find Ted McGinley's birth name and profession
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley"" ;
       dbp:birthName ?birthName .
  
  ?role a dbo:Role ;
        dbo:actor ?ted ;
        dbo:title dbr:Unnatural_(TV_series) .

  # Step 3: Find spouse of Georgeanne Marie Rice who matches Ted McGinley
  ?rice dbo:spouse ?spouse .
  FILTER (?spouse = ?ted)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?narcisoForce ?pisaguaWar WHERE {
  OPTIONAL {
    # Find the force related to Narciso Campero using his birth name
    ?person <http://www.w3.org/2006/vcard/ns#hasName> ""Narciso Campero"" .
    ?person <http://dbpedia.org/ontology/militaryForce> ?narcisoForce .
  }
  
  OPTIONAL {
    # Find the war associated with the military force in Battle of Pisagua
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/property/militaryForce> ?pisaguaForce .
    ?pisaguaForce <http://dbpedia.org/ontology/war> ?pisaguaWar .
  }
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandApolloWriter ?bandShena ?personBornOnSameDate WHERE {
  # Band of the writer of ""Apollo"" (Hardwell song)
  OPTIONAL {
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://dbpedia.org/ontology/band> ?bandApolloWriter .
  }

  # Band of Shèna
  OPTIONAL {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?bandShena .
  }
  
  # Person born on the birth date of a decedent athlete and soccer player from Zolotonosha
  OPTIONAL {
    ?athlete <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
    ?athlete <http://dbpedia.org/ontology/SoccerPlayer> [] .
    ?athlete <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER EXISTS { ?deathPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Zolotonosha"" }
    ?athlete <http://dbpedia.org/ontology/birthDate> ?birthDate .
    
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?war WHERE {
  OPTIONAL {
    # Find leader of 1962 NSW state election and their birthplace country
    ?leader a dbo:Politician ;
            dbo:electedAsLeaderOf <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .
    ?leader foaf:birthPlace ?birthPlace .
    ?birthPlace a dbo:Country .

    # Find awardee of Knight Grand Cross of the Order of the Bath and their war
    ?awardee dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> ;
             dbo:participatedInWar ?war .
  }
  
  OPTIONAL {
    # Find profession that is an office holder, politician in New Zealand Army and their military unit
    ?profession a dbo:OfficeHolder, dbo:Politician ;
                dbo:militaryUnit ?militaryUnit .
    ?militaryUnit dbo:participatedInWar ?war .

    # Ensure the military unit is part of the New Zealand Army
    ?militaryUnit dbo:partOf <http://dbpedia.org/resource/New_Zealand_Army> .
  }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  ?childAntiochusIII <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Step 2: Find spouse of one of these children
  ?childAntiochusIII <http://dbpedia.org/property/spouse> ?spouse .

  OPTIONAL {
    # Step 3: Identify successor of Antiochus II Theos
    ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_theos> .
    
    # Step 4: Find child of this successor that is a royalty
    ?royalChild <http://dbpedia.org/ontology/birthParent> ?successor ;
                <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 5: Determine parent of the child of the commander in Battle of Panium
    ?commander <http://dbpedia.org/property/commandedBattle> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?childCommander <http://dbpedia.org/ontology/birthParent> ?commander .
    ?parentChildCommander <http://dbpedia.org/ontology/birthParent> ?childCommander .

    # Linking all together
    FILTER(?spouse = ?royalChild || ?spouse = ?parentChildCommander)
  }
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","```sparql
SELECT ?professional WHERE {
  # Step 1: Find the writer of the album ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  FILTER (str(?album) = ""What_U_See_Is_What_U_Get"")

  # Step 2: Find a rapper associated with this writer
  ?rapper <http://dbpedia.org/ontology/associatedMusicalArtist> ?writer .

  # Step 3: Identify a song by the rapper and its producer
  ?song <http://dbpedia.org/ontology/producer> ?producer .
  ?song <http://dbpedia.org/ontology/musicalArtist> ?rapper .

  # Step 4: Find The Shadow's alter ego's true self
  ?shadow <http://dbpedia.org/ontology/alterEgo> ?trueSelf .

  # Step 5: Identify the professional link between the true self and the producer
  ?professional <http://dbpedia.org/ontology/profession> ?trueSelf .
  ?professional <http://dbpedia.org/ontology/profession> ?producer .
}
```",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","```sparql
SELECT ?nashReference ?almaMater ?settlement ?greenReference WHERE {
  # Step 1: Identify George Kilbon Nash's resource
  <http://dbpedia.org/resource/George_Kilbon_Nash> ?p ?nashReference .

  # Step 2: Retrieve the alma mater of his administration
  OPTIONAL { 
    ?nashReference <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  # Step 3: Find a settlement linked to this administration
  OPTIONAL {
    ?adminEntity ?p1 ?settlement .
    FILTER (?p1 = <http://dbpedia.org/ontology/location> || ?p1 = <http://dbpedia.org/ontology/place) 
    FILTER EXISTS { ?settlement <http://www.w3.org/2006/vcard/ns#hasAddress> ?address }
  }

  # Step 4: Reference the entity ""Green""
  OPTIONAL {
    <http://dbpedia.org/resource/Green> ?p2 ?greenReference .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Bhumibol Adulyadej's child
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Bhumibol_Adulyadej>.

  # Step 2: Find the parent of that child
  ?child <http://dbpedia.org/ontology/parent> ?parent.

  # Step 3: Identify Sirikit's birth name
  <http://dbpedia.org/resource/Sirikit_of_Thailand> <http://dbpedia.org/property/birthName> ?sirikitBirthName.

  # Step 4: Find the person born with that birth name
  ?person <http://dbpedia.org/ontology/birthName> ?sirikitBirthName.
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?producer ?professional ?associatedArtist WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://purl.org/dc/terms/creator> ?producer .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
    ?alterEgo <http://dbpedia.org/property/profession> ?professional .
  }

  OPTIONAL {
    ?writer <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> ;
            a <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","```sparql
SELECT ?bandApolloWriter ?bandTraceyMcSween ?personBirthDatePavloKhudzik ?bandPersonBirthDatePavloKhudzik WHERE {
  # Band of the writer of ""Apollo"" (Hardwell song)
  OPTIONAL {
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://dbpedia.org/ontology/band> ?bandApolloWriter .
  }

  # Band of the person born as Tracey Elizabeth McSween
  OPTIONAL {
    ?person <http://www.w3.org/2006/vcard/ns#hasName> ?name .
    ?name <http://xmlns.com/foaf/0.1/name> ""Tracey Elizabeth McSween"" .
    ?person <http://dbpedia.org/ontology/band> ?bandTraceyMcSween .
  }

  # Person born on the birth date of Pavlo Khudzik
  OPTIONAL {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDatePavloKhudzik .
    ?personBirthDatePavloKhudzik <http://dbpedia.org/ontology/birthDate> ?birthDatePavloKhudzik .
    ?personBirthDatePavloKhudzik <http://dbpedia.org/ontology/band> ?bandPersonBirthDatePavloKhudzik .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find the parent (royalty) of Prince George William of Hanover
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .

  # Step 2: Find the child (royalty) of this parent
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Identify the spouse of Princess Victoria Louise of Prussia
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .

  # Step 4: Find the child of Ernest Augustus, Crown Prince of Hanover
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child2 .

  # Step 5: Determine the parent of this child (from step 2)
  ?parentOfChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?parentOfChild <http://dbpedia.org/ontology/child> ?child .

  FILTER(?spouse = ?child2)
}
```",6,9,7,3,3,3,3,71,0,1,1,0.0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?region ?awardeeBirthPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#hasSubdivision> ?region .
    FILTER EXISTS { ?region a <http://dbpedia.org/class/yago/Region108069068> }
  }

  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Writers100001501> ,
                             <http://dbpedia.org/class/yago/PoetsByPeriodOfActivity1000001> .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
SELECT ?almaMater ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2003/01/geo/wgs84_pos#lat> ?lat ;
            <http://www.w3.org/2003/01/geo/wgs84_pos#long> ?long .
    FILTER (
      EXISTS { 
        ?place <http://dbpedia.org/ontology/location> ?entity .
        ?place <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Baden-Württemberg> .
      }
    )
  }
}
```",3,3,4,1,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","```sparql
SELECT ?professional WHERE {
  ?shadow <http://dbpedia.org/ontology/trueSelf> ?trueSelf .
  FILTER(?shadow = <http://dbpedia.org/resource/The_Shadow_(character)>)
  
  ?trueSelf <http://www.w3.org/2004/02/skos/core#altLabel> ?professional .
}
```",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?country ?regionWhitaker ?regionWarner WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Western_European_Time> <http://www.w3.org/2006/vcard/ns#location> ?location .
    ?location <http://dbpedia.org/ontology/locationCountry> ?country .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceWhitaker .
    ?birthPlaceWhitaker <http://www.w3.org/2006/vcard/ns#location> ?regionWhitaker .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceWarner .
    ?birthPlaceWarner <http://www.w3.org/2006/vcard/ns#location> ?regionWarner .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","```sparql
SELECT ?writer ?authorReference ?native WHERE {
  OPTIONAL {
    ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Dave_Flett> .
    ?album <http://purl.org/dc/terms/creator> ?writer .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://dbpedia.org/ontology/author> ?author .
    BIND(<http://dbpedia.org/resource/Blinded_by_the_Light_(song)> AS ?authorReference)
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Settlements100000001> .
    ?native <http://dbpedia.org/ontology/birthPlace> ?deathPlace .
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","```sparql
SELECT ?warGahn ?warCrillon ?peninsularWar WHERE {
  # Wars involving Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/war> ?warGahn .
  }
  
  # Wars associated with Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/fame> ?fame .
    FILTER(?fame = ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"")
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/war> ?warCrillon .
  }
  
  # Wars related to the Peninsular War
  OPTIONAL {
    <http://dbpedia.org/resource/Peninsular_War> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?peninsularWar .
    FILTER(?peninsularWar != <http://dbpedia.org/resource/Peninsular_War>)
  }
}
```",7,8,8,3,3,3,3,71,0,3,2,0.0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?ireneWar ?battleCommander ?battleWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?ireneWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?battleCommander .
    ?battleCommander <http://dbpedia.org/ontology/war> ?battleWar .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?admin ?deathPlace WHERE {
  # Step 1: Tokugawa Masako's spouse who is royalty
  ?tokugawaMasako <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER(?tokugawaMasako = <http://dbpedia.org/resource/Tokugawa_Masako>)
  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ""Royalty"" .

  # Step 2: Spouse's father
  ?spouse <http://dbpedia.org/ontology/father> ?fatherOfSpouse .

  # Step 3: Father's administration
  OPTIONAL { 
    ?fatherOfSpouse <http://dbpedia.org/property/administration> ?admin .
  }

  # Step 4: Matsudaira Tadamasa's father who is an office holder
  ?matsudairaTadamasa <http://dbpedia.org/ontology/father> ?officeHolderFather .
  FILTER(?matsudairaTadamasa = <http://dbpedia.org/resource/Matsudaira_Tadamasa>)
  
  # Step 5: Office Holder's father who is a politician
  ?officeHolderFather <http://dbpedia.org/ontology/father> ?politicianFather .

  # Step 6: Politician's death place
  OPTIONAL {
    ?politicianFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
SELECT ?bandAmbaShepherd ?personBirthDatePavloKhudzik ?sameBirthDatePerson ?bandShena WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandAmbaShepherd .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDatePavloKhudzik .
    ?personBirthDatePavloKhudzik <http://dbpedia.org/ontology/birthDate> ?birthDatePavloKhudzik .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Shèna> <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna"" .
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandShena .
  }
}
```",6,6,7,3,3,3,3,71,1,41,0,0.023809523809523808,1.0,0.046511627906976744
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
# Step 1: Find the child of Thinkhaya of Pagan
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the predecessor of that child (assuming a royal or political context)
SELECT ?predecessor WHERE {
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 3: Identify Thihapate of Mohnyin's child who is an office holder and royalty
SELECT ?thihapateChild WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?thihapateChild .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

# Combine the results to get the final answer
SELECT ?predecessor WHERE {
  # Find Thinkhaya's child
  ?thinkhayaChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Find the predecessor of that child
  ?thinkhayaChild <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Ensure the predecessor is related to Thihapate's child who is an office holder and royalty
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?thihapateChild <http://dbpedia.org/ontology/child> ?relatedChild .
  ?relatedChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?relatedChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Link the predecessor to Thihapate's child
  FILTER(?predecessor = ?relatedChild)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?fatherParty ?ppiReference ?prodiParty WHERE {
  # Party of Lamberto Andreotti's father
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/family_name> ?father .
    ?father <http://dbpedia.org/ontology/politicalAffiliation> ?fatherParty .
  }
  
  # Reference to Partito Popolare Italiano
  OPTIONAL {
    ?ppiReference <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
  }

  # Party of Romano Prodi
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalAffiliation> ?prodiParty .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?decedent1 ?decedent2 WHERE {
  OPTIONAL {
    # Find the author of ""French Algeria""
    ?work <http://dbpedia.org/ontology/author> ?author .
    FILTER(STR(?work) = ""French_Algeria"")
    
    # Find the commander in Franco-Hova Wars
    ?commander <http://dbpedia.org/property/commanded> ?francoHovaWars .
    FILTER(STR(?commander) = ""Franco_Hova_Wars"")

    # Get person decedent associated with both roles
    ?author <http://dbpedia.org/ontology/deceased> ?decedent1 .
    ?commander <http://dbpedia.org/ontology/deceased> ?decedent2 .

    FILTER(?decedent1 = ?decedent2)
  }
  
  OPTIONAL {
    # Find the capital of Algeria
    <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
    
    # Get person decedent associated with the capital
    ?capital <http://dbpedia.org/ontology/deceased> ?decedent2 .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?country ?nottinghamshireEntity ?birthPlace WHERE {
  # Find country in region of Western European Time
  ?timeZone <http://dbpedia.org/ontology/country> ?country .
  FILTER (str(?timeZone) = ""Western European Time"")

  # Find an entity in Nottinghamshire
  ?entity <http://www.w3.org/2004/02/skos/core#inScheme> <http://dbpedia.org/resource/Category:Places_in_Nottighamshire> .

  # Find birthplace of a writer and poet who received the Eric Gregory Award
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?awardRecipient .
  ?awardRecipient <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://purl.org/dc/terms/type> ?type .
  FILTER (CONTAINS(LCASE(?type), ""writer"") && CONTAINS(LCASE(?type), ""poet""))
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
# Step 1: Find band members of Donald Maynard Dokken
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
}

# Step 2: For each band member found in step 1, find their associated musical artists
SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Replace ?bandMember with the actual URI of each band member from step 1
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Step 3: Find band members of Meshuggah who are also bands/groups/organizations
SELECT ?meshuggahBandMember WHERE {
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/associatedMusicalArtist> ?meshuggahBandMember .
  ?meshuggahBandMember a <http://dbpedia.org/class/yago/Band115069769> ;
                       a <http://dbpedia.org/class/yago/Group115070000> ;
                       a <http://dbpedia.org/class/yago/Organisation115071000> .
}

# Step 4: For each band member found in step 3, find their associated musical artists
SELECT DISTINCT ?meshuggahBandMember ?associatedArtist WHERE {
  # Replace ?meshuggahBandMember with the actual URI of each band member from step 3
  ?meshuggahBandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```

Note: The above SPARQL script is structured to be executed in parts. You will need to replace `?bandMember` and `?meshuggahBandMember` with actual URIs obtained from the results of previous queries.",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?associatedArtist ?bandMember ?professional WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/bandMember> ?bandMember .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Sharon Kao"" .
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?professional .
  }
}
```",4,4,5,2,3,2,3,28,1,3,0,0.25,1.0,0.4
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?birthPlaceSaito ?administrationFatherSpouse ?deathPlaceYuki WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceSaito .
  }
  
  OPTIONAL {
    ?spouse rdf:type dbo:Royalty ;
            dbo:spouse <http://dbpedia.org/resource/Tokugawa_Masako> .
    ?father dbo:child ?spouse .
    ?administration dbo:administrator ?father .
    BIND(?administration AS ?administrationFatherSpouse)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?yukiFather .
    ?yukiFather rdf:type dbo:Politician ;
                dbo:deathPlace ?deathPlaceYuki .
  }
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Thinkhaya of Pagan's child
  ?thinkhayasChild <http://dbpedia.org/ontology/child> ?thinkhaya .
  VALUES ?thinkhaya { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> } .

  # Step 2: Father of this child
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?thinkhayasChild <http://dbpedia.org/ontology/birthParent> ?father .

  # Step 3: Predecessor of the father
  ?predecessor <http://dbpedia.org/ontology/successor> ?father .

  # Step 4: Thihapate of Mohnyin's child that is an office holder and royalty
  ?thihapatessChild <http://dbpedia.org/ontology/child> ?thihapate .
  VALUES ?thihapate { <http://dbpedia.org/resource/Thihapate_of_Mohnyin> } .
  ?thihapatessChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER (?types = <http://dbpedia.org/ontology/OfficeHolder> && ?types = <http://dbpedia.org/ontology/Royalty>) .

  # Step 5: Parent of this child
  ?parent <http://dbpedia.org/ontology/birthParent> ?thihapatessChild .

  # Step 6: Thado Minsaw of Prome's parent
  ?thadoMinsawsParent <http://dbpedia.org/ontology/birthParent> ?thadoMinsaw .
  VALUES ?thadoMinsaw { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> } .

  # Step 7: Child of this parent
  ?finalChild <http://dbpedia.org/ontology/birthParent> ?thadoMinsawsParent .

  # Final condition to link all parts together
  FILTER (?predecessor = ?parent)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?prodiParty ?pintoParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> 
      <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?prodiType .
    FILTER (
      (EXISTS { ?prodiType rdfs:subClassOf* <http://dbpedia.org/ontology/OfficeHolder> }) &&
      (EXISTS { ?prodiType rdfs:subClassOf* <http://dbpedia.org/ontology/Politician> })
    )
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/party> ?prodiParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto_(politician)> 
      <http://dbpedia.org/property/party> ?pintoParty .
  }
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?warJonathonBand ?entityNewZealand ?warHeatherRoy WHERE {
  OPTIONAL {
    # Part 1: War of the Awardee of Jonathon Band
    ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Jonathan_Band> .
    ?award <http://dbpedia.org/property/relatedToWar> ?warJonathonBand .
  }
  
  OPTIONAL {
    # Part 2: Entity in Colony of New Zealand
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?entityNewZealand .
  }
  
  OPTIONAL {
    # Part 3: War of the Profession (Military Unit) of Heather Roy
    ?profession <http://dbpedia.org/ontology/memberOf> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/property/relatedToWar> ?warHeatherRoy .
    ?profession <http://dbpedia.org/ontology/associatedWith> <http://dbpedia.org/resource/Heather_Roy> .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a <http://dbpedia.org/ontology/Royalty> ;
            <http://www.w3.org/2006/vcard/ns#hasName> ""Princess Victoria Louise of Prussia"" ;
            <http://dbpedia.org/property/birthName> ""Victoria Louise of Prussia"" .

  # Step 2: Find her spouse
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Identify her child who is royalty and parented by Ernest Augustus, Duke of Brunswick
  ?child a <http://dbpedia.org/ontology/Royalty> ;
         <http://dbpedia.org/property/parent> ?princess ;
         <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?resident ?father WHERE {
  OPTIONAL {
    # Step 1: Identify the director of ""Pipe Dreams"" (1976 film)
    ?film <http://dbpedia.org/ontology/director> ?director .
    FILTER(STR(?film) = ""Pipe_Dreams_(1976_film)"")

    # Step 2: Find the birthplace of the director
    ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Step 3: Determine a notable resident or entity associated with this birthplace
    ?birthPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?resident .
    
    FILTER(STR(?birthPlace) = ""Settlement"") # Ensure it's a settlement

  }
  
  OPTIONAL {
    # Step 4: Identify Phillip Spaulding's child who is both fictional and a soap character
    ?spaulding <http://dbpedia.org/ontology/child> ?child .
    FILTER(STR(?spaulding) = ""Phillip_Spaulding"")

    # Ensure the child is a fictional character and a soap character
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?child <http://dbpedia.org/ontology/soapCharacter> [] .

    # Step 5: Determine the father of this child
    ?child <http://dbpedia.org/property/father> ?father .
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"```sparql
SELECT ?country ?administration WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?country .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Phil Scott"" .
    ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_player> .
    ?person <http://dbpedia.org/ontology/officeHolder> ?position .
    ?position <http://dbpedia.org/property/administration> ?administration .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?trueSelf ?associatedArtist ?producer ?song WHERE {
  # The Shadow's true self
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/allegedAlterEgo> ?trueSelf .

  # Chris Taylor's associated musical artist
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .

  # Rapper who is a professional musical artist and has produced a song
  ?rapper a <http://dbpedia.org/ontology/Rapper> ;
          a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/property/producers> ?producer .
  
  # The work that is both a musical work and a song
  ?song a <http://dbpedia.org/ontology/Song> , <http://dbpedia.org/ontology/MusicalWork> ;
        <http://dbpedia.org/ontology/work> ?producer .

}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?almaMater ?nickname WHERE {
  OPTIONAL {
    # Find the mayor of Belfast who is a politician
    ?mayor <http://dbpedia.org/ontology/politician> _:b1 .
    ?mayor <http://dbpedia.org/property/mayorFor> <http://dbpedia.org/resource/Belfast> .
    
    # Get the alma mater of the mayor
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  
  OPTIONAL {
    # Find an organisation in Northern Ireland that is also an educational institution with a nickname
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> ;
            <http://dbpedia.org/ontology/EducationalInstitution> _:b2 ;
            <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
    
    # Get the nickname of this entity
    ?entity <http://dbpedia.org/property/nickname> ?nickname .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtistSASlayer ?bandMemberDonDokken ?associatedArtistMeshuggah WHERE {
  # Step 1: Find associated musical artist of S.A. Slayer
  OPTIONAL { 
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistSASlayer .
  }

  # Step 2: Find band member who is a persona of Don Dokken
  OPTIONAL {
    ?persona <http://www.w3.org/2000/01/rdf-schema#label> ""Don Dokken"" .
    ?bandMember <http://dbpedia.org/ontology/member> ?persona .
    BIND(?bandMember AS ?bandMemberDonDokken)
  }

  # Step 3: Find associated musical artist of the band member who is a band and group and organization in Meshuggah
  OPTIONAL {
    ?meshuggahBand <http://dbpedia.org/ontology/member> ?bandMember .
    FILTER(?bandMember = ?bandMemberDonDokken)
    ?meshuggahBand <http://www.w3.org/2000/01/rdf-schema#label> ""Meshuggah"" .
    ?meshuggahBand <http://dbpedia.org/ontology/type> ?type .
    FILTER((?type = <http://dbpedia.org/class/yago/MusicalGroup108069068>) || (?type = <http://dbpedia.org/class/yago/Organisation106501067>))
    ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistMeshuggah .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Reference to Watchtower
  ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
  
  # Step 2: Associated musical artist of the above result
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Step 3: Band member of Meshuggah who is a band, group, and organization
  ?meshuggah <http://dbpedia.org/ontology/member> ?member .
  FILTER(?meshuggah = <http://dbpedia.org/resource/Meshuggah>)
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER(CONTAINS(str(?types), ""Band"") && CONTAINS(str(?types), ""Group"") && CONTAINS(str(?types), ""Organization""))

  # Step 4: Associated musical artist of the above result
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist3 .

  # Step 5: Person born as Donald Maynard Dokken
  ?dokken <http://www.w3.org/2000/01/rdf-schema#label> ""Donald Maynard Dokken"" .
  FILTER(CONTAINS(str(?dokken), ""Person""))
  
  # Step 6: Band member of the above result
  ?dokken <http://dbpedia.org/ontology/member> ?member2 .

  # Step 7: Associated musical artist of the above result
  ?member2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Identify Hub City
  ?city <http://dbpedia.org/ontology/nickname> ""Hub City"" .
  
  # Step 2: Find professionals and natives of Hub City
  ?person <http://dbpedia.org/ontology/profession> ?profession ;
          <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (?birthPlace = ?city) .

  # Step 3: Identify movies that are works and television shows
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110769069> ;
         <http://www.w3.org/2002/07/owl#sameAs> ?work ;
         <http://dbpedia.org/ontology/tvSeries> ?tvShow .

  # Step 4: Find actors in these movies
  ?actor <http://dbpedia.org/ontology/starring> ?movie .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?shenaBand ?ambaShepherdWriterBand ?person1985Band WHERE {
  OPTIONAL {
    ?persona <http://dbpedia.org/ontology/birthName> ""Shèna"" .
    ?persona <http://dbpedia.org/property/memberOf> ?shenaBand .
  }
  
  OPTIONAL {
    ?song <http://purl.org/dc/terms/title> ""Amba Shepherd"" ;
          <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://dbpedia.org/property/memberOf> ?ambaShepherdWriterBand .
  }

  OPTIONAL {
    ?person <http://www.w3.org/2006/vcard/ns#bday> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> ;
          <http://dbpedia.org/property/memberOf> ?person1985Band .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceSaito ?deathPlaceYukiFather ?administrationGoMizunooFather WHERE {
  OPTIONAL {
    # Birthplace of Saitō Hajime in a specific war
    ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Military_conflict> .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocialEvent108069068> .
    ?war <http://www.w3.org/2000/01/rdf-schema#label> ""Societal event"" .
    ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Saitō_Hajime> .
    ?commander <http://dbpedia.org/ontology/war> ?war .
    <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceSaito .
  }
  
  OPTIONAL {
    # Death place of the father of Yūki Hideyasu, who is a politician
    ?yukiFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
    ?yukiFather <http://dbpedia.org/ontology/father> ?yukiHideyasu .
    ?yukiHideyasu <http://www.w3.org/2000/01/rdf-schema#label> ""Yūki Hideyasu"" .
    ?yukiFather <http://dbpedia.org/ontology/deathPlace> ?deathPlaceYukiFather .
  }
  
  OPTIONAL {
    # Administration of the father of Emperor Go-Mizunoo
    ?goMizunooFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Father108069068> .
    ?goMizunooFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Emperor_Go-Mizunoo> .
    ?goMizunooFather <http://dbpedia.org/ontology/administration> ?administrationGoMizunooFather .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band
  ?band rdf:type dbo:Band ;
        dbo:member <http://dbpedia.org/resource/Fredrik_Thordendal> ;
        rdf:type dbo:Organization .

  # Step 2: Identify a band member of this band who is also in another band (group, band, organization)
  ?otherBandMember dbo:bandMemberOf ?band ;
                   dbo:member <http://dbpedia.org/resource/Some_Band_Member> .
  ?otherBand rdf:type dbo:Group , dbo:Band , dbo:Organization ;
             dbo:member ?otherBandMember .

  # Step 3: Find associated musical artist for this band member
  ?associatedArtist dbo:associatedMusicalArtist ?otherBandMember .

  # Step 4: Identify the persona of Don Dokken who is a musical artist
  ?persona dbo:birthName ""Don Dokken"" ;
           rdf:type dbo:MusicalArtist .

  # Step 5: Find associated musical artist of S.A. Slayer
  ?sASlaveArtist dbo:associatedMusicalArtist <http://dbpedia.org/resource/S.A._Slayer> .

  # Combine results to find the final associated artist
  FILTER(?associatedArtist = ?sASlaveArtist)
}
```

Note: The query assumes certain DBpedia properties and may need adjustments based on actual data availability. The placeholders like `<http://dbpedia.org/resource/Some_Band_Member>` should be replaced with specific resource identifiers if known.",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Get Dino Merlin's birth name
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find a person with that birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 3: Check if this person is a band member of an awardee
  ?bandMemberOfAwardee <http://dbpedia.org/ontology/member> ?person .
  ?bandMemberOfAwardee <http://dbpedia.org/property/awards> ?award .

  # Step 4: Confirm nativity to the Socialist Federal Republic of Yugoslavia
  ?person <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
SELECT ?carlBirthName ?commanderClaimToFame ?war WHERE {
  # Step 1: Find Carl Pontus Gahn's birth name
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?carlBirthName .

  # Step 2: Identify the commander in the Great Siege of Gibraltar and their claim to fame
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?commander <http://dbpedia.org/ontology/claimToFame> ?commanderClaimToFame .
  }

  # Step 3: Link the commander's claim to fame to Peninsular War
  OPTIONAL {
    ?commanderClaimToFame <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Peninsular_War> .
  }

  # Step 4: Find wars involving both Carl Pontus Gahn and the commander
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/participatedIn> ?carlBirthName ;
         <http://dbpedia.org/ontology/participatedIn> ?commander .
  }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
SELECT ?author ?album WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://dbpedia.org/property/author> ?author .
  }
  OPTIONAL {
    ?author <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
  }
  OPTIONAL {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?writer rdfs:label ""Dave Flett""@en .
    ?album rdf:type <http://dbpedia.org/class/yago/MusicalAlbum100000001> .
    ?author <http://dbpedia.org/property/contributor> ?album .
  }
}
```",5,6,6,2,3,2,3,28,1,999,0,0.001,1.0,0.0019980019980019984
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?work WHERE {
  # Step 1: Identify ""Land of fire and ice"" as Iceland
  <http://dbpedia.org/resource/Iceland> <http://www.w3.org/2000/01/rdf-schema#label> ""Iceland""@en .
  
  # Step 2: Find the author of works related to Iceland
  ?work <http://purl.org/dc/terms/about> <http://dbpedia.org/resource/Iceland> .
  ?work <http://purl.org/dc/terms/creator> ?author .

  # Step 3: Identify GMT region and territories administered from it
  OPTIONAL {
    ?gmtRegion <http://www.w3.org/2006/timezone#timeZoneName> ""Greenwich Mean Time"" .
    ?territory <http://dbpedia.org/ontology/administrativeTerritory> ?gmtRegion .
    
    # Step 4: Find works by the author related to these regions or territories
    ?work2 <http://purl.org/dc/terms/about> ?territory .
    FILTER(?author = ?work2.<http://purl.org/dc/terms/creator>)
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party1 ?fatherParty ?politicianParty WHERE {
  # Reference to the name of Italian People's Party (1994)
  OPTIONAL { 
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ?party1 .
  }

  # Party of the father of an alumnus of Massachusetts Institute of Technology
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> ;
             <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/memberOf> ?fatherParty .
  }

  # Party of a person born with the birth name Romano Prodi, who is both an office holder and a politician
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en ;
             <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" ;
             <http://dbpedia.org/ontology/memberOf> ?politicianParty .
    FILTER EXISTS { ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> }
    FILTER EXISTS { ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> }
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?reference ?nativePerson ?writer WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Manfred_Mann> <http://xmlns.com/foaf/0.1/page> ?reference .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlementDescription .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?birthAddress .
    ?birthAddress <http://purl.org/dc/terms/description> ?nativeSettlementDescription .
    FILTER(?settlementDescription = ?nativeSettlementDescription)
    BIND(?person AS ?nativePerson)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/ontology/author> ?writer .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT ?nevermoreMember ?jimSheppardArtist ?bandOfJosephMichael WHERE {
  # Band members of Nevermore
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?person <http://www.w3.org/2006/vcard/ns#fn> ?nevermoreMember .
  }
  
  # Associated musical artists of Jim Sheppard
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    ?artist <http://www.w3.org/2006/vcard/ns#fn> ?jimSheppardArtist .
  }
  
  # Band of the person born as Joseph Michael
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/member> ?band .
    ?band <http://www.w3.org/2006/vcard/ns#fn> ?bandOfJosephMichael .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
SELECT ?commander WHERE {
  OPTIONAL { 
    ?elDirector <http://dbpedia.org/ontology/kind> <http://dbpedia.org/resource/El_Director> .
  }
  OPTIONAL {
    ?rifWar <http://dbpedia.org/ontology/militaryForce> ?militaryRif .
    ?civilWar <http://dbpedia.org/ontology/militaryForce> ?militaryCivil .
  }
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commander> ?militaryRif ;
               <http://dbpedia.org/property/commander> ?militaryCivil .
  }
}
```",5,6,6,3,3,3,3,71,0,18596,11,0.0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Find the child of Jon Pertwee
  OPTIONAL { 
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  }

  # Step 2: Identify the native place of Sylvie Bermann's residence
  OPTIONAL {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?residence .
    ?residence <http://dbpedia.org/ontology/type> ?type .
    FILTER (?type IN (<http://dbpedia.org/class/yago/Settlement108069068>, <http://dbpedia.org/class/yago/BritishSettlements>))
  }

  # Step 3: Find the actor of Sean Pertwee's claim to fame
  OPTIONAL {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?fame .
    ?fame <http://www.w3.org/2000/01/rdf-schema#isClassOf> ?film .
    ?fame <http://www.w3.org/2000/01/rdf-schema#isClassOf> ?conflict .
    FILTER (?film IN (<http://dbpedia.org/class/yago/Films>,) && 
            ?conflict IN (<http://dbpedia.org/class/yago/MilitaryConflicts>))
  }

  # Ensure all conditions are met
  FILTER(?child != '' && ?residence != '' && ?fame != '')
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parentOfNysa ?spouse WHERE {
  # Step 1: Find the parent of Nysa (wife of Pharnaces I of Pontus)
  OPTIONAL { 
    <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentOfNysa .
  }

  # Step 2: Find the successor of Antiochus (son of Antiochus III the Great) who is a royalty
  OPTIONAL {
    ?antiochus <http://dbpedia.org/ontology/successor> ?successor .
    FILTER(?antiochus = <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)>)
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    
    # Step 3: Find the child of this successor
    ?successor <http://dbpedia.org/ontology/child> ?child .

    # Step 4: Find the spouse of this child
    ?child <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",4,5,5,3,2,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thado Minsaw of Prome's parent
  ?thadoMinsaw <http://dbpedia.org/ontology/father> ?parentOfThado .

  # Step 2: Identify the child of this parent
  ?parentOfThado <http://dbpedia.org/ontology/child> ?childOfParent .

  # Step 3: Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?fatherOfSoeMinWimalaDewi .

  # Step 4: Identify Thihapate of Mohnyin and their child who is an office holder and royalty
  ?thihapate <http://dbpedia.org/ontology/child> ?childOfThihapate .
  ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the predecessor of this child
  ?childOfThihapate <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",8,10,9,3,3,3,3,71,0,1,1,0.0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?actorBand ?carlFalkBand WHERE {
  
  # Find shows featuring Stacey Dash
  ?show dbo:starring <http://dbpedia.org/resource/Stacey_Dash> .
  
  # Identify actors in these shows who are also musical artists
  ?show dbo:starring ?actor .
  ?actor dbo:musicalArtist true .
  
  # Get the band of these musical artist actors
  ?actor dbp:band ?actorBand .

  # Find Carl Falk's band
  <http://dbpedia.org/resource/Carl_Falk> dbp:band ?carlFalkBand .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
SELECT ?almaMaterMayor ?nicknameQUB ?almaMaterAwardee WHERE {
  # Step 1: Identify the Mayor of Belfast who is a politician
  ?mayor <http://dbpedia.org/ontology/politician> _:b0 .
  ?mayor <http://www.w3.org/ns/org#memberOf> ?organization .
  ?organization <http://www.geonames.org/ontology#featureClass> ""P""^^<http://www.w3.org/2001/XMLSchema#string> ;
                 <http://dbpedia.org/property/name> ""Belfast"" .

  # Step 2: Find the Alma Mater of the Mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMaterMayor .

  # Step 3: Determine Queen's University Belfast's Nickname
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://xmlns.com/foaf/0.1/knowsAs> ?nicknameQUB .

  # Step 4: Identify the Awardee of Royal Medals
  ?awardee <http://purl.org/dc/terms/references> _:b1 .
  _:b1 <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> .

  # Step 5: Find the Alma Mater of the Awardee
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMaterAwardee .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?actorBand ?writerBand WHERE {
  OPTIONAL {
    # Find actor who is a musical artist for ""Honor Up""
    ?work <http://dbpedia.org/ontology/starring> ?actor .
    ?work <http://purl.org/dc/terms/title> ""Honor Up"" .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?actor <http://dbpedia.org/property/band> ?actorBand .
  }
  
  OPTIONAL {
    # Find writer of ""Emotion"" by Carly Rae Jepsen
    ?album <http://purl.org/dc/terms/title> ""Emotion"" ;
           <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Carly_Rae_Jepsen> .
    ?album <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://dbpedia.org/property/band> ?writerBand .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?professional ?associatedArtist WHERE {
  # Step 1: Find The Shadow's true self
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?trueSelf .
    
    # Step 2: Find professional role of The Shadow's true self
    ?trueSelf <http://dbpedia.org/property/profession> ?professional .
  }
  
  # Step 3: Identify writer of ""40 Dayz & 40 Nightz""
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/MusicalArtist> <http://dbpedia.org/ontology/Artist>) .
    
    # Step 4: Find associated musical artist
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthPlaceEnomoto ?deathPlaceGreatGrandfather ?administrationFatherGoMizunoo WHERE {
  # Birth place of Enomoto Takeaki
  OPTIONAL { 
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceEnomoto .
  }

  # Death place of Matsudaira Tadamasa's great-grandfather (politician)
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?fatherTadamasa .
    ?fatherTadamasa <http://dbpedia.org/ontology/father> ?grandfatherTadamasa .
    ?grandfatherTadamasa <http://dbpedia.org/ontology/father> ?greatGrandfatherTadamasa .
    ?greatGrandfatherTadamasa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?greatGrandfatherTadamasa <http://dbpedia.org/ontology/deathPlace> ?deathPlaceGreatGrandfather .
  }

  # Administration of Emperor Go-Mizunoo's father
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?fatherGoMizunoo .
    ?fatherGoMizunoo <http://dbpedia.org/property/administration> ?administrationFatherGoMizunoo .
  }
}
```",6,8,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
SELECT ?partyOfFather ?partyOfProdi WHERE {
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?father <http://dbpedia.org/property/father> ?alumnus .
    ?father <http://dbpedia.org/ontology/memberOf> ?partyOfFather .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
        <http://dbpedia.org/ontology/politicianOf> ?partyOfProdi .
  }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
# Find person decedent at French Algeria
SELECT ?decedent WHERE {
  ?deathEvent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  ?deathEvent <http://dbpedia.org/ontology/person> ?decedent .
}

# Find person decedent at the capital of Khemis Miliana District
SELECT ?capitalDecedent WHERE {
  ?district <http://dbpedia.org/property/capital> ?capitalCity .
  FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>)
  
  ?deathEvent2 <http://dbpedia.org/ontology/deathPlace> ?capitalCity .
  ?deathEvent2 <http://dbpedia.org/ontology/person> ?capitalDecedent .
}

# Find commanders in the Battle of Verdun and their involvement in other wars
SELECT DISTINCT ?commander ?otherWar WHERE {
  ?battle <http://dbpedia.org/property/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Verdun>)
  
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?war != <http://dbpedia.org/resource/Battle_of_Verdun>)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find commander who is royalty in Battle of Perire
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find father of this commander
  ?father <http://dbpedia.org/ontology/child> ?commander .
  
  # Step 3: Find spouse of the father
  ?spouse1 <http://dbpedia.org/property/spouse> ?father .

  # Step 4: Identify Amun-her-khepeshef's spouse and their child
  ?amunSpouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child <http://dbpedia.org/ontology/parent> ?amunSpouse .

  # Step 5: Find parent of this child
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 6: Retrieve spouse of this parent
  ?spouse2 <http://dbpedia.org/property/spouse> ?parent .
  
  FILTER(?spouse1 = ?spouse2)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
SELECT ?bandShena ?personBirthDateMatch ?bandAmba WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandShena .
  }
  
  OPTIONAL {
    # Retrieve the birth date of Pavlo Khudzik
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/property/birthDate> ?birthDatePavlo .
    
    # Find any person with the same birth date
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDateMatch .
    FILTER (?birthDateMatch = ?birthDatePavlo)
    BIND(?person AS ?personBirthDateMatch)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandAmba .
  }
}
```",4,4,5,2,3,3,3,71,1,48,0,0.02040816326530612,1.0,0.039999999999999994
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?commander WHERE {
  OPTIONAL { 
    ?polishHorse <http://dbpedia.org/ontology/nickName> ""Polish Horse"" .
  }
  
  OPTIONAL {
    ?schimmelpenninckEvent <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?schimmelpenninckEvent <http://dbpedia.org/ontology/type> ?type .
    FILTER (?type IN (<http://dbpedia.org/class/yago/SocietalEvent108930068>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    
    OPTIONAL {
      ?militaryForce <http://dbpedia.org/ontology/participatedIn> ?schimmelpenninckEvent .
    }
  }

  OPTIONAL {
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
    ?war <http://dbpedia.org/ontology/type> ?typeWar .
    FILTER (?typeWar IN (<http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event>)).
    
    OPTIONAL {
      ?polishHorse <http://dbpedia.org/ontology/participatedIn> ?war .
    }
    
    OPTIONAL {
      ?militaryForce <http://dbpedia.org/ontology/participatedIn> ?war .
    }

    ?war <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war1 ?workWar ?entity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/participatedIn> ?war1 .
  }
  
  OPTIONAL {
    ?work <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> ;
          <http://dbpedia.org/property/subject> ?war2 .
    BIND(?war2 AS ?workWar)
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ?nationalityLabel ;
          <http://dbpedia.org/ontology/nationality> ?entity .
  }
}
```",5,5,6,2,3,2,3,28,0,1,1,0.0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?parentHenuttawy ?childParent ?spouseOfFather WHERE {
  # Parent of Henuttawy (19th dynasty)
  OPTIONAL { 
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://www.w3.org/2002/07/owl#sameAs> ?henuttawy .
    ?henuttawy <http://dbpedia.org/ontology/birthParent> ?parentHenuttawy .
  }

  # Parent of the child of the spouse of Amun-her-khepeshef
  OPTIONAL {
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?childSameAs .
    ?childSameAs <http://dbpedia.org/ontology/birthParent> ?childParent .
  }

  # Spouse of the father of the commander, who is royalty, in Battle of Perire
  OPTIONAL {
    ?commander <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?commander <http://www.w3.org/2002/07/owl#sameAs> ?commanderSameAs .
    ?commanderSameAs <http://dbpedia.org/ontology/birthParent> ?father .
    ?father <http://dbpedia.org/ontology/spouse> ?spouseOfFather .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?native WHERE {
  OPTIONAL {
    # Step 1: Find Sylvie Bermann's British settlement residence
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?residence .
    ?residence <http://dbpedia.org/ontology/type> ?type .
    FILTER(?type = <http://dbpedia.org/resource/Settlement> && 
           EXISTS { ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> } )
    
    # Step 2: Find actor of Dog Soldiers
    OPTIONAL {
      <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?actor .
      
      # Step 3: Find child of Jon Pertwee
      OPTIONAL {
        <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?birthName .
        ?person <http://dbpedia.org/ontology/birthName> ?birthName .
        ?person <http://dbpedia.org/ontology/child> ?actor .
      }
    }

    # Step 4: Find native of the residence
    OPTIONAL {
      ?native <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    }
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?steeleAwardeeBirthPlace ?dumitruNaduBirthPlace WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Leroy_P._Steele_Prize> .
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?steeleAwardeeBirthPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?dumitruNaduBirthPlace .
  }
}
```",3,3,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?person1985 ?bandAmbaShepherd ?personaShena ?bandPersonaShena WHERE {
  # Find person born on 1985-04-29
  OPTIONAL {
    ?person1985 <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  }

  # Find band associated with Amba Shepherd
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedBand> ?bandAmbaShepherd .
  }
  
  # Identify persona of Shèna and their associated band
  OPTIONAL {
    ?personaShena <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna"" .
    ?personaShena <http://dbpedia.org/ontology/birthName> ?birthName .
    ?personShena <http://dbpedia.org/ontology/birthName> ?birthName .
    ?personShena <http://dbpedia.org/ontology/associatedBand> ?bandPersonaShena .
  }
}
```",5,5,6,3,3,3,3,71,1,41,0,0.023809523809523808,1.0,0.046511627906976744
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","```sparql
SELECT ?party ?administration WHERE {
  ?party a <http://dbpedia.org/ontology/PoliticalParty> ;
         <http://www.w3.org/ns/org#hasMemberOrEmployee> ?person .
  
  OPTIONAL { 
    ?party <http://dbpedia.org/property/location> ?location .
    ?location <http://dbpedia.org/ontology/postalCode> ""21205""^^<http://www.w3.org/2001/XMLSchema#gYear> .
  }
  
  OPTIONAL {
    ?party <http://purl.org/dc/terms/administrativeRoles> ?administration .
  }

  FILTER EXISTS { 
    ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> .
  }
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
SELECT ?native ?actor WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/property/filmography> ?work .
    ?work <http://dbpedia.org/ontology/starring> ?actor .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Hub_City> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://xmlns.com/foaf/0.1/nationality> ?native .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?country ?sportsEvent WHERE {
  OPTIONAL {
    ?timeZone <http://dbpedia.org/ontology/country> ?country .
    ?timeZone <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/description> ""Central European Time"" .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://dbpedia.org/ontology/region> ?region .
    ?region <http://dbpedia.org/ontology/sportEvent> ?sportsEvent .
  }
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?almaMater ?nickname WHERE {
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politician> _:a .
    ?mayor <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
  }
}
```",4,5,5,2,2,3,3,71,0,1,1,0.0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?saitoBirthPlace ?emperorAdministration ?grandfatherDeathPlace WHERE {
  # Birth place of Saitō Hajime
  OPTIONAL {
    <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/birthPlace> ?saitoBirthPlace .
  }

  # Administration of Emperor Go-Yōzei
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/property/administration> ?emperorAdministration .
  }

  # Death place of Matsudaira Tadamasa's grandfather
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/father> ?grandfather .
    ?grandfather <http://dbpedia.org/ontology/deathPlace> ?grandfatherDeathPlace .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?grandparentParent WHERE {
  # Step 1: Find a child of Archduke Joseph Francis of Austria
  ?childOfJoseph <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Step 2: Find the parent of that child (which should be Archduke Joseph Francis)
  ?parentOfChild <http://dbpedia.org/ontology/birthChild> ?childOfJoseph .

  # Step 3: Identify a grandchild who is royalty
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?parentOfChild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the child of this grandchild
  ?grandchildChild <http://dbpedia.org/ontology/birthParent> ?grandchild .

  # Step 5: Find the parent of that grandchild's child
  ?grandparentParent <http://dbpedia.org/ontology/birthChild> ?grandchildChild .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify the military conflict involving Francisco Franco
  ?conflict a <http://dbpedia.org/ontology/MilitaryConflict> ;
            <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Francisco_Franco> .

  # Step 2: Determine the military force associated with this conflict
  ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce .

  # Step 3: Identify the event involving ""El Director"" and his command role
  ?event a <http://dbpedia.org/ontology/Event> ;
         <http://dbpedia.org/ontology/commander> ?elDirector .
  
  # Assuming ""El Director"" is an alias for Francisco Franco or another identifiable figure
  ?elDirector rdfs:label ""El Director""@en .

  # Step 4: Link the military force to both events
  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?restingPlaceGeraldAwardee ?restingPlaceActorEmilyShow ?restingPlaceChildJamesBurton WHERE {
  OPTIONAL {
    # Resting place of awardee(s) of Gerald Graham's award
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?award <http://dbpedia.org/property/holder> <http://dbpedia.org/resource/Gerald_Graham> .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlaceGeraldAwardee .
  }
  
  OPTIONAL {
    # Resting place of actor(s) in a show with Emily Richard
    ?show <http://dbpedia.org/ontology/starring> ?actor .
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlaceActorEmilyShow .
  }
  
  OPTIONAL {
    # Resting place of child(ren) of James Burton (property developer)
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/deathPlace> ?restingPlaceChildJamesBurton .
  }
}
```",8,8,9,3,3,3,3,71,0,10,1,0.0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceSaito ?administrationFatherGoMizunoo ?deathPlaceTokugawa WHERE {
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/type> ?type .
    FILTER (?type IN (<http://dbpedia.org/class/yago/MilitaryConflict108069068>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/SocietalEvent>)).
    ?war <http://dbpedia.org/property/commander> ?commander .
    ?commander rdfs:label ""Saitō Hajime""@en .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlaceSaito .
  }
  
  OPTIONAL {
    ?emperor rdfs:label ""Emperor Go-Mizunoo""@en .
    ?emperor <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administrationFatherGoMizunoo .
  }
  
  OPTIONAL {
    ?tokugawa rdfs:label ""Tokugawa Ieyasu""@en .
    ?tokugawa <http://dbpedia.org/ontology/deathPlace> ?deathPlaceTokugawa .
  }
}
```",6,9,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?commonEntity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/child> ?commonEntity .
  }
  OPTIONAL {
    ?commonEntity <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Loe_Thai> .
  }
}
```",4,4,5,3,2,3,2,20,0,2,1,0.0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT DISTINCT ?newstedBand ?commonMember ?commonMemberBand WHERE {
  # Find the band of Newsted
  OPTIONAL { 
    <http://dbpedia.org/resource/Jason_Newsted> <http://dbpedia.org/ontology/memberOf> ?newstedBand .
  }

  # Find members of San Francisco Symphony and Guns N' Roses
  OPTIONAL {
    ?commonMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/San_Francisco_Symphony> .
  }
  OPTIONAL {
    ?commonMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Guns_N%27_Roses> .
  }

  # Find the band of these common members
  OPTIONAL {
    ?commonMember <http://dbpedia.org/ontology/memberOf> ?commonMemberBand .
    FILTER(?commonMemberBand != <http://dbpedia.org/resource/San_Francisco_Symphony>)
    FILTER(?commonMemberBand != <http://dbpedia.org/resource/Guns_N%27_Roses>)
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Archduchess ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthday ?birthday .
  FILTER(YEAR(?birthday) = 1925)

  # Step 2: Find her parent
  ?parent1 dbo:child ?margaret .

  # Step 3: Find the child of this parent (Archduchess Margaret's sibling)
  OPTIONAL { 
    ?sibling dbo:parent ?parent1 .
  }

  # Step 4: Find the parent of these siblings
  OPTIONAL {
    ?grandParent dbo:child ?sibling .
  }

  # Step 5: Identify native of Budapest and child of Archduke Joseph August
  ?josephAugust a dbo:Archduke ;
                foaf:name ""Joseph August of Austria"" .

  OPTIONAL {
    ?budaChild dbo:parent ?josephAugust ;
               dbo:birthPlace ?place .
    FILTER(CONTAINS(LCASE(?place), ""budapest""))
  }

  # Step 6: Find the parent of this individual
  OPTIONAL {
    ?parent2 dbo:child ?budaChild .
  }

  # Step 7: Combine results to find a common parent
  VALUES ?commonParent { ?grandParent ?parent2 }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?partyMichelePinto ?partyFatherLambertoAndreotti ?partyRomanoProdi WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?partyMichelePinto .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?fatherLambertoAndreotti .
    ?fatherLambertoAndreotti <http://dbpedia.org/ontology/politicalParty> ?partyFatherLambertoAndreotti .
  }
  
  OPTIONAL {
    ?romanoProdi <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en ;
                 <http://xmlns.com/foaf/0.1/name> ?birthName .
    FILTER(?birthName = ""Romano Prodi"")
    ?romanoProdi <http://dbpedia.org/ontology/politicalParty> ?partyRomanoProdi .
  }
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Identify which child is a parent of Nysa
  ?parent <http://www.w3.org/2000/01/rdf-schema#label> ""Nysa""@en .
  ?child <http://dbpedia.org/ontology/mother|<http://dbpedia.org/ontology/father>> ?parent .

  # Step 3: Find the child of this parent who is royalty
  ?royalChild <http://dbpedia.org/ontology/father|<http://dbpedia.org/ontology/mother>> ?child .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the spouse of this royal child
  ?royalChild <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
SELECT ?native WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?residence .
    ?residence <http://dbpedia.org/ontology/type> ?type .
    FILTER (?type = <http://dbpedia.org/resource/Settlement> && 
            EXISTS { ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> })
  }
  
  OPTIONAL {
    ?native <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?residence .
    FILTER (?residence = ?residence)
  }

  OPTIONAL {
    <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  }
  
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers> .
    FILTER (?actor = ?child)
  }

  FILTER (EXISTS { ?native = ?child })
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?father WHERE {
  # Step 1: Find Lizzie Spaulding's parent who is a fictional character and soap character
  ?lizzieParent <http://dbpedia.org/ontology/fictionalCharacter> _:a .
  ?lizzieParent <http://dbpedia.org/ontology/soapCharacter> _:b .
  ?lizzieParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Lizzie_Spaulding> .

  # Step 2: Find the child of this parent who is a fictional character and soap character
  ?child <http://dbpedia.org/ontology/fictionalCharacter> _:c .
  ?child <http://dbpedia.org/ontology/soapCharacter> _:d .
  ?lizzieParent <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Determine the birthplace of Stephen Verona
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .

  # Step 4: Identify the resident of this settlement
  ?resident <http://dbpedia.org/ontology/resident> ?settlement .

  # Step 5: Find the father of the child identified in step 2
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?fatherParty ?partyReference ?prodiParty WHERE {
  OPTIONAL {
    # Party of Lamberto Andreotti's father
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/family_name> ?father .
    ?father <http://dbpedia.org/ontology/politicalAffiliation> ?fatherParty .
  }
  
  OPTIONAL {
    # Reference to Italian People's Party (1994)
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://purl.org/dc/terms/description> ?partyReference .
  }

  OPTIONAL {
    # Party of Romano Prodi
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalAffiliation> ?prodiParty .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?militaryForceLargoCaballero ?militaryForceFranco ?biscayCampaignCommander WHERE {
  OPTIONAL {
    ?conflictLargo a <http://dbpedia.org/ontology/SocietalEvent> ;
                   a <http://dbpedia.org/ontology/MilitaryConflict> ;
                   <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?conflictLargo <http://dbpedia.org/ontology/militaryForce> ?militaryForceLargoCaballero .
  }
  
  OPTIONAL {
    ?conflictFranco a <http://dbpedia.org/ontology/SocietalEvent> ;
                   a <http://dbpedia.org/ontology/Event> ;
                   a <http://dbpedia.org/ontology/MilitaryConflict> ;
                   <http://dbpedia.org/property/personInvolved> <http://dbpedia.org/resource/Francisco_Franco> .
    ?conflictFranco <http://dbpedia.org/ontology/militaryForce> ?militaryForceFranco .
  }
  
  OPTIONAL {
    ?campaign a <http://dbpedia.org/ontology/MilitaryConflict> ;
              <http://dbpedia.org/property/name> ""Biscay Campaign"" ;
              <http://dbpedia.org/ontology/commander> ?biscayCampaignCommander .
    FILTER(?biscayCampaignCommander = <http://dbpedia.org/resource/Francisco_Franco>)
  }
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a <http://dbpedia.org/ontology/Royalty> ;
            <http://www.w3.org/2006/vcard/ns#hasBirthName> ""Princess Victoria Louise of Prussia"" ;
            <http://dbpedia.org/property/birthPlace> ?birthPlace .

  # Step 2: Find her spouse
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .

  OPTIONAL {
    # Step 3: Identify Prince George William of Hanover's parent (a royalty)
    ?parent a <http://dbpedia.org/ontology/Royalty> ;
            <http://dbpedia.org/property/child> ?princeGeorgeWilliam .
    
    # Find the child of this parent who is also a royalty
    ?parentChild a <http://dbpedia.org/ontology/Royalty> ;
                 <http://dbpedia.org/property/child> ?parent .

  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
SELECT ?manager ?nativeCountry ?member WHERE {
  OPTIONAL {
    ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    ?team <http://dbpedia.org/property/manager> ?manager .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2006/vcard/ns#country-name> ?nativeCountry .
  }

  OPTIONAL {
    ?almaMater <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Eiji_Ōtsuka> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizations100000001> ,
                               <http://dbpedia.org/class/yago/JapaneseUniversitiesAndColleges100000001> ,
                               <http://dbpedia.org/class/yago/EducationalInstitutions100000001> .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#member> ?member .
  }
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
SELECT ?commonParent WHERE {
  # Step 1: Find Vajiralongkorn's parent
  ?vajiralongkorn <http://dbpedia.org/ontology/birthName> ""Vajiralongkorn"" .
  ?parent1 <http://dbpedia.org/ontology/child> ?vajiralongkorn .

  # Step 2: Find the child of Vajiralongkorn's parent (should be Vajiralongkorn)
  ?parent1 <http://dbpedia.org/ontology/child> ?vajiralongkorn .

  # Step 3: Identify Mom Rajawongse Sirikit Kitiyakara
  ?sirikit <http://dbpedia.org/ontology/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
  
  # Step 4: Find the parent of Mom Rajawongse Sirikit Kitiyakara
  ?parent2 <http://dbpedia.org/ontology/child> ?sirikit .

  # Step 5: Identify the common parent
  FILTER (?parent1 = ?commonParent)
  FILTER (?parent2 = ?commonParent)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
SELECT ?arnulfoParty ?countryEntity ?commanderParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/politicalParty> ?arnulfoParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2006/vcard/ns#adr;country> ?countryEntity .
  }

  OPTIONAL {
    ?invasion <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/politicalParty> ?commanderParty .
    FILTER(CONTAINS(LCASE(?invasion), ""united states invasion of panama""))
  }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commanderInWar ?commanderInForce WHERE {
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/event> ?event .
    ?event <http://www.w3.org/2000/01/rdf-schema#label> ""military conflict"" .
    ?war <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
    ?war <http://dbpedia.org/ontology/commander> ?commanderInWar .
  }
  
  OPTIONAL {
    ?force <http://dbpedia.org/ontology/event> ?event2 .
    ?event2 <http://www.w3.org/2000/01/rdf-schema#label> ""societal event"" .
    ?event2 <http://www.w3.org/2000/01/rdf-schema#label> ""military conflict"" .
    ?force <http://dbpedia.org/property/participant> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?force <http://dbpedia.org/ontology/commander> ?commanderInForce .
  }
  
  OPTIONAL {
    ?commanderInForce <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  }
}
```",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Find military units in New Zealand Army
  ?unit <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
  
  # Step 2: Identify office holders and politicians within these units
  ?person <http://dbpedia.org/ontology/profession> ?unit ;
          <http://dbpedia.org/ontology/officeHolder> ?office ;
          <http://dbpedia.org/ontology/politician> ?politician .
  
  # Step 3: Determine wars associated with these individuals
  ?person <http://dbpedia.org/ontology/war> ?war1 .

  # Step 4: Identify awardees of Knight Grand Cross of the Order of the Bath and their wars
  ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> ;
           <http://dbpedia.org/ontology/war> ?war2 .

  # Step 5: Find common wars
  FILTER(?war1 = ?war2)
  BIND(?war1 AS ?war)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  ?child <http://dbpedia.org/property/parent> ?parent .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"```sparql
SELECT ?authorDecedent ?commanderDecedent WHERE {
  # Step 1: Find the author of ""French Algeria""
  OPTIONAL {
    <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?author .
    
    # Step 2: Find the commander in the war related to Battle of Verdun
    ?battle <http://dbpedia.org/ontology/conflict> ?conflict .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Verdun>)
    ?commander <http://dbpedia.org/ontology/commander> ?battle .
    
    # Step 3: Find person decedent at Algiers
    OPTIONAL {
      ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
      
      # Match with author or commander
      FILTER(?decedent = ?author || ?decedent = ?commander)
      BIND(?decedent AS ?authorDecedent)
    }
    
    # Step 4: Find person decedent related to the work of the author
    OPTIONAL {
      ?work <http://dbpedia.org/property/author> ?author .
      ?relatedDecedent <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
      
      # Assuming some relation between work and death place
      FILTER(?relatedDecedent = ?author)
      BIND(?relatedDecedent AS ?commanderDecedent)
    }
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .

  # Step 2: Find the claim to fame of Sherry Hormann's spouse
  ?work <http://dbpedia.org/property/claimToFame> ?spouse .
  
  # Step 3: Determine the actor of this work
  ?actor <http://dbpedia.org/ontology/performedIn> ?work .

  # Step 4: Identify a movie that is also a work and television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108069068> .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> ?work .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> ?tvShow .

  # Step 5: Find an actor from this movie who is a professional and native of Compton, California
  ?actor <http://dbpedia.org/ontology/performedIn> ?movie .
  ?actor <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER EXISTS { ?actor <http://dbpedia.org/property/profession> ?profession . }
  FILTER EXISTS { ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }

}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  OPTIONAL {
    # Find actors of ""Enemy at the Door""
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STR(?movie) = ""http://dbpedia.org/resource/Enemy_at_the_Door"")
    
    # Get resting place for each actor
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
    BIND(?restingPlace AS ?actorRestingPlace)
  }
  
  OPTIONAL {
    # Find award associated with Gerald Graham
    ?person <http://dbpedia.org/property/award> ?award .
    FILTER(STR(?person) = ""http://dbpedia.org/resource/Gerald_Graham"")
    
    # Get awardees of the identified award
    ?award <http://dbpedia.org/ontology/receiver> ?awardee .
    
    # Get resting place for each awardee
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
    BIND(?restingPlace AS ?awardeeRestingPlace)
  }
}
```",5,5,6,3,2,3,3,71,1,5,1,0.16666666666666666,0.5,0.25
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the author of ""Understanding Comics""
  ?author <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/Understanding_Comics> .

  # Step 2: Find an award associated with this author
  ?award <http://dbpedia.org/property/recipient> ?author .
  
  # Step 3: Identify the professional role in the award (e.g., Actor)
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> ;
                <http://dbpedia.org/ontology/recipient> ?award .

  # Step 4: Find the parent of this professional
  ?parent <http://www.w3.org/ns/person#child> ?professional .
  
  # Step 5: Determine the child of this parent
  ?parent <http://www.w3.org/ns/person#child> ?child .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parent WHERE {
  # Find Seti I's grandchildren
  ?grandChild <http://dbpedia.org/ontology/father> ?childOfSeti .
  ?childOfSeti <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Seti_I> .

  # Identify Ramesses II's spouse who is also a parent of Nefertari's child
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  ?childOfNefertari <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Nefertari> .
  ?childOfNefertari <http://dbpedia.org/ontology/father> ?spouse .

  # Find the parent of this spouse
  ?parent <http://www.w3.org/2002/07/owl#sameAs> ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?grandchildRestingPlace ?knightRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child's child of William Haliburton
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?knight <http://dbpedia.org/property/honours> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Knight Grand Cross of the Order of St Michael and St George""@en .
    ?knight <http://dbpedia.org/ontology/deathPlace> ?knightRestingPlace .
  }

  # Resting place of the actor of ""Enemy at the Door""
  OPTIONAL {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://www.w3.org/2000/01/rdf-schema#label> ""Enemy at the Door""@en .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,6,1,0.0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?commander WHERE {
  ?officeHolder <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?officeHolder <http://dbpedia.org/ontology/commander> ?militaryForce .
  ?militaryForce <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?event <http://dbpedia.org/ontology/militaryConflict> ?militaryForce ;
         a <http://dbpedia.org/ontology/SocietalEvent>, <http://dbpedia.org/ontology/Event> .
}
```",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?ebonyBandMember ?oforiBandMember WHERE {
  # Step 1: Identify Ebony Reigns by birth name
  ?ebony a dbo:MusicalArtist ;
         foaf:name ""Ebony Reigns"" ;
         dbp:birthdayYear ?year .
  
  # Step 2: Find band members associated with Ebony Reigns
  OPTIONAL { 
    ?ebonyBandMember dbo:associatedMusicalArtist ?ebony .
  }
  
  # Step 3: Identify Ofori Amponsah by birth name
  ?ofori a dbo:MusicalArtist ;
         foaf:name ""Ofori Amponsah"" ;
         dbp:birthdayYear ?yearOfori .

  # Step 4: Find band members associated with Ofori Amponsah
  OPTIONAL {
    ?oforiBandMember dbo:associatedMusicalArtist ?ofori .
  }
  
  # Step 5: Cross-reference results to find common or related entities
  FILTER(?ebonyBandMember = ?oforiBandMember)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?child ?actor ?native WHERE {
  # Step 1: Get children of Jon Pertwee
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find actors in ""Dog Soldiers"" film
  ?actor <http://dbpedia.org/ontology/film> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  
  # Step 3: Get residence of Sylvie Bermann that is a settlement and British
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""british"") && CONTAINS(LCASE(?settlementLabel), ""settlement""))

  # Step 4: Find natives of the residence
  ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?native <http://dbpedia.org/ontology/placeOfBirth> ?residence .

  # Combine conditions to find matching individuals
  FILTER (?child = ?actor && ?actor = ?native)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"```sparql
SELECT ?personDecedentFrenchAlgeria ?personDecedentCapitalAlgeria ?warCommander WHERE {
  # Person decedent at French Algeria
  OPTIONAL { 
    ?personDecedentFrenchAlgeria <http://dbpedia.org/ontology/deceasedPlace> <http://dbpedia.org/resource/French_Algeria> .
  }
  
  # Person decedent at the capital of Algeria
  OPTIONAL {
    <http://dbpedia.org/resource/Algiers> <http://www.w3.org/2006/vcard/ns#kind> ""city"" .
    ?personDecedentCapitalAlgeria <http://dbpedia.org/ontology/deceasedPlace> <http://dbpedia.org/resource/Algiers> .
  }
  
  # Commander in the war involving Frédéric-Georges Herr
  OPTIONAL {
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/property/commander> ?warCommander .
    ?warCommander <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
    ?militaryConflict a <http://dbpedia.org/class/yago/MilitaryConflicts1000000000> ;
                      a <http://dbpedia.org/class/yago/Events1000000000> .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMaterNash ?settlement ?writerAlmaMater WHERE {
  # Step 1: Alma mater of George Kilbon Nash
  OPTIONAL {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMaterNash .
  }

  # Step 2: Entity in his administration that is a settlement
  OPTIONAL {
    ?administration <http://dbpedia.org/property/member> <http://dbpedia.org/resource/George_Kilbon_Nash> .
    ?administration <http://dbpedia.org/ontology/entity> ?settlement .
    FILTER(?settlement <http://www.w3.org/2002/07/owl#Thing>)
  }

  # Step 3: Writer of ""Where It's At"" (Dustin Lynch album)
  OPTIONAL {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
  }

  # Step 4: Alma mater of the writer
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/almaMater> ?writerAlmaMater .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?actorProfession ?professional WHERE {
  # Step 1: Find the actor of ""Unnatural (TV series)"" and their profession
  OPTIONAL { 
    ?unnaturalSeries <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STRSTARTS(LCASE(?unnaturalSeries), ""http://dbpedia.org/resource/unnatural_(tv_series)""))
    ?actor <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?actorProfession .
  }

  # Step 2: Find Ted McGinley's spouse
  OPTIONAL {
    ?tedMcGinley <http://dbpedia.org/ontology/birthName> ""Ted McGinley"" .
    FILTER(STRSTARTS(LCASE(?tedMcGinley), ""http://dbpedia.org/resource/ted_mcginley""))
    ?tedMcGinley <http://dbpedia.org/property/spouse> ?spouse1 .
  }

  # Step 3: Find an alumnus of Ohio State University and their birth name
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
  }

  # Step 4: Find the spouse of the alumnus identified in step 3
  OPTIONAL {
    ?personBirthName <http://dbpedia.org/ontology/birthName> ?birthName .
    ?personBirthName <http://dbpedia.org/property/spouse> ?spouse2 .
  }

  # Step 5: Find a professional with the same profession as the actor from step 1
  OPTIONAL {
    ?professional <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?actorProfession .
  }
}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  OPTIONAL {
    # Find the professional associated with Stan Lee's award
    ?award <http://dbpedia.org/ontology/receiver> ?professional .
    ?award <http://dbpedia.org/resource/Stan_Lee> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?relatedEntity .

    # Find the spouse of this professional
    ?professional <http://dbpedia.org/property/spouse> ?spouse .
  }
  
  OPTIONAL {
    # Identify a child of Tina Onassis Niarchos
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .

    # Find the parent of this child
    ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  }

  FILTER (?spouse = ?parent)
}
```",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?native WHERE {
  # Step 1: Get the nickname for Jackson, Tennessee
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://www.w3.org/2006/vcard/ns#nickname> ?nickname .

  # Step 2: Find an actor of ""The Departed""
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/The_Departed> .
  
  # Step 3: Identify a movie that is also a work and television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> ;
         <http://www.w3.org/2002/07/owl#sameAs> ?work .
  ?work <http://www.w3.org/2002/07/owl#sameAs> ?tvShow .

  # Step 4: Find the native of the nickname
  ?native <http://dbpedia.org/ontology/nationality> ?country ;
          <http://dbpedia.org/ontology/birthPlace> ?place .
  FILTER (?nickname = ""Nickname"" && ?actor = ?native)
}
```

Note: The query assumes that there is a direct link between the nickname and the native person, which may require additional context or assumptions to be fully accurate.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?warOrozimbo ?warIrene ?forceNarciso WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?warOrozimbo .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/participatedIn> ?warIrene .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2006/vcard/ns#hasName> ""Narciso Campero""@en .
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/force> ?forceNarciso .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"```sparql
SELECT ?warLocation ?partyAdministration ?deathPlace WHERE {
  OPTIONAL {
    ?musnier dbo:participatedIn ?militaryConflict .
    ?militaryConflict rdf:type <http://dbpedia.org/ontology/MilitaryConflict> ;
                      dbo:location ?warLocation .
    FILTER(CONTAINS(LCASE(STR(?musnier)), ""louis françois félix musnier""))
  }
  
  OPTIONAL {
    ?party dbo:rulingIn ?region .
    ?party rdf:type <http://dbpedia.org/ontology/PoliticalParty> ;
           rdf:type <http://dbpedia.org/ontology/Organization> .
    ?administration dbo:administers ?party .
    FILTER(CONTAINS(LCASE(STR(?region)), ""sicily""))
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Laura_Mancinelli> dbo:deathPlace ?deathPlace .
  }
}
```",5,8,6,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT DISTINCT ?professionWar ?awardeeWar WHERE {
  # Step 1: Find professionals in New Zealand Army who are office holders and politicians
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?person <http://dbpedia.org/ontology/politicalParty> ?party .
    ?person <http://dbpedia.org/ontology/officeHolder> ?office .

    # Step 2: Find wars associated with these military unit professions
    ?militaryUnit <http://dbpedia.org/property/war> ?professionWar .
  }

  # Step 3: Identify awardees of Knight Grand Cross of the Order of the Bath
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of the Bath""@en .
    
    # Step 4: Find wars associated with these awardees
    ?awardee <http://dbpedia.org/property/war> ?awardeeWar .
  }
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?mayorAlmaMater ?qubAlmaMater WHERE {
  OPTIONAL {
    # Find the mayor of Belfast who is a politician
    ?mayor <http://dbpedia.org/ontology/politician> _:b1 .
    ?mayor <http://www.w3.org/ns/org#post> _:b2 .
    _:b2 <http://www.w3.org/ns/org#org> <http://dbpedia.org/resource/Belfast> .
    # Get the alma mater of this mayor
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
  
  OPTIONAL {
    # Find the entity known as QUB (Queen's University Belfast)
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://www.w3.org/2000/01/rdf-schema#label> ""QUB""@en .
    # Get the alma mater of individuals associated with QUB
    ?qubPerson <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Queen%27s_University_Belfast> .
    ?qubPerson <http://www.w3.org/ns/org#memberOf> _:b3 .
    _:b3 <http://www.w3.org/ns/org#org> ?qubAlmaMater .
  }
  
  OPTIONAL {
    # Find the award entity for Royal Medals
    ?award <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Royal_Medal> .
    # Get the alma mater of awardees of this award
    ?awardee <http://dbpedia.org/ontology/recipient> ?award .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?qubAlmaMater .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT DISTINCT ?bandMember ?meshuggahMember WHERE {
  # Step 1: Identify Don Dokken's persona
  ?donDokken <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
  
  # Step 2: Find band members of Don Dokken
  ?donDokken <http://dbpedia.org/property/memberOf> ?band .
  ?bandMember <http://dbpedia.org/ontology/member> ?band .

  # Step 3: Identify Meshuggah as a band and group
  ?meshuggah <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Meshuggah> .
  ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band115930069> .
  ?meshuggah <http://www.w3.org/2000/01/rdf-schema#label> ""Meshuggah"" .

  # Step 4: Find associated musical artists of Meshuggah's members
  ?bandMember <http://dbpedia.org/property/memberOf> ?meshuggah .
  ?meshuggahMember <http://dbpedia.org/ontology/member> ?meshuggah .
  
  FILTER(?donDokken != ?bandMember) # Ensure Don Dokken is not listed as his own band member
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?warOrozimbo ?forcePisagua ?birthNameNarciso ?militaryForceNarciso WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?warOrozimbo .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/participatingMilitaryForce> ?forcePisagua .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ?birthNameNarciso .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/militaryForce> ?militaryForceNarciso .
  }
}
```",6,6,7,3,3,3,3,71,0,1,2,0.0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember1 ?bandMember2 WHERE {
  OPTIONAL {
    # Part 1: Band member of a band member in San Francisco Symphony
    ?symphony <http://dbpedia.org/ontology/member> ?member .
    ?member <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?band .
    ?band rdf:type <http://dbpedia.org/class/yago/Band115930069> ;
          rdf:type <http://dbpedia.org/class/yago/MusicalGroup100000001> .
    ?band <http://dbpedia.org/ontology/member> ?bandMember1 .

    # Part 2: Band of reference to Newsted
    ?newstedRef <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?band2 .
    ?band2 rdf:type <http://dbpedia.org/class/yago/Band115930069> .
    ?band2 <http://dbpedia.org/ontology/member> ?bandMember2 .
  }
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","```sparql
SELECT DISTINCT ?professional WHERE {
  # Step 1: Find the profession of actors in ""Unnatural (TV series)""
  ?series <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STRSTARTS(LCASE(?series), ""unnatural (tv series)""))
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
         <http://purl.org/dc/terms/profession> ?profession .

  # Step 2: Find the spouse of Ted Martin McGinley
  OPTIONAL {
    ?ted <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
         <http://xmlns.com/foaf/0.1/name> ""Ted Martin McGinley"" ;
         <http://dbpedia.org/property/spouse> ?spouse .
  }

  # Step 3: Find the alumnus of Ohio State University by birth name
  OPTIONAL {
    ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
             <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
             <http://dbpedia.org/property/birthName> ?birthName .
  }

  # Step 4: Find professionals in the same profession as the actor(s)
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
                 <http://purl.org/dc/terms/profession> ?profession .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Royalty ;
           foaf:name ""Princess Victoria Louise of Prussia"" ;
           dbo:birthName ""Princess Victoria Louise of Prussia"" .

  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Identify the father of Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Royalty ;
                 foaf:name ""Ernest Augustus, Duke of Brunswick"" .
  ?father dbo:child ?ernestAugustus .

  # Step 4: Find his child who is royalty
  ?royalChild dbo:parent ?father ;
              a dbo:Royalty .

  # Step 5: Identify the parent of this royal child
  ?parent dbo:child ?royalChild ;
          a dbo:Royalty .

  # Step 6: Identify Prince George William of Hanover's parent who is royalty
  ?princeGeorgeWilliam a dbo:Royalty ;
                       foaf:name ""Prince George William of Hanover"" .
  ?parent dbo:child ?princeGeorgeWilliam .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?parentOfNysa ?finalChild WHERE {
  # Step 1: Identify Nysa and her parent
  ?nysa <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
  ?nysa <http://www.w3.org/2006/vcard/ns#hasParent> ?parentOfNysa .

  # Step 2: Identify the successor of Antiochus II Theos
  ?antiochusII <http://dbpedia.org/ontology/successor> ?successorAntiochusII .
  
  # Step 3: Find the child of this successor that is a royalty
  ?successorAntiochusII <http://dbpedia.org/ontology/child> ?royaltyChild1 .
  ?royaltyChild1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the successor of Antiochus (son of Antiochus III the Great)
  ?antiochusIII <http://dbpedia.org/ontology/successor> ?successorAntiochusIII .
  
  # Step 5: Find the spouse of this successor's child
  ?successorAntiochusIII <http://dbpedia.org/ontology/child> ?childOfSuccessorAntiochusIII .
  ?childOfSuccessorAntiochusIII <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 6: Find the child of this spouse
  ?spouse <http://dbpedia.org/ontology/child> ?finalChild .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?battleOfLeipzigCommander ?germanCampaignCommander WHERE {
  OPTIONAL {
    ?napoleonicWar <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    FILTER(CONTAINS(LCASE(STR(?napoleonicWar)), ""napoleonic wars""))
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/property/commander> ?battleOfLeipzigCommander .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/property/commander> ?germanCampaignCommander .
  }
}
```",3,3,4,1,3,3,3,71,0,39,5,0.0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Get a work associated with Michael Ballhaus
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Michael_Ballhaus> .
  
  # Step 2: Find the nickname for Jackson, Tennessee
  OPTIONAL { 
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?nickname .
  }
  
  # Step 3: Find an actor associated with both the work and the nickname-related entity
  ?actor <http://dbpedia.org/ontology/starring> ?work .
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?tvShow <http://dbpedia.org/ontology/starring> ?actor .
    
    # Assuming the movie or TV show is related to Jackson, Tennessee's nickname
    ?movie <http://dbpedia.org/ontology/location> ?location .
    ?tvShow <http://dbpedia.org/ontology/location> ?location .
    FILTER(?location = ?nickname)
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","```sparql
SELECT ?teamManager WHERE {
  # Step 1: Find the sports manager for the 1998 Kashima Antlers season
  ?season <http://dbpedia.org/ontology/team> ?team .
  FILTER(STRSTARTS(STR(?season), ""http://dbpedia.org/resource/1998_Kashima_Antlers_season""))
  
  # Step 2: Identify the sports manager of this team
  ?team <http://dbpedia.org/property/sportsManager> ?sportsManager .
  FILTER(EXISTS { ?sportsManager <http://www.w3.org/2000/01/rdf-schema#label> ""Sports Manager""@en })

  # Step 3: Find the team managed by this sports manager
  ?team2 <http://dbpedia.org/property/sportsManager> ?sportsManager .
  
  # Step 4: Identify the manager of that team
  ?team2 <http://dbpedia.org/ontology/teamManager> ?teamManager .

  # Step 5: Find a person born in 1958 and their alma mater
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Person""@en .
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gYear .

  # Step 6: Retrieve the alma mater of this person, ensuring it is Japanese and an organization/university
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  FILTER(?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ""Japanese""@en)
  FILTER(EXISTS { ?almaMater <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/JapaneseOrganizations100000001> })
  FILTER(EXISTS { ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ""University""@en })
  FILTER(EXISTS { ?almaMater <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/EducationalInstitutions100000001> })

  # Step 7: Find members of this alma mater
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/alumniOf> ?almaMater .
  }
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?country ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?country .
    FILTER(?country <http://dbpedia.org/ontology/Country>)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://dbpedia.org/property/militaryUnit> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/ontology/war> ?war .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find royal children of Ernest Augustus, Duke of Brunswick
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find spouse of the royal child
  OPTIONAL { 
    ?spouse <http://dbpedia.org/property/spouse> ?child .
    
    # Step 3: Identify person born as Princess Victoria Louise of Prussia
    ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia""^^<http://www.w3.org/2001/XMLSchema#string> .
    
    # Check if the spouse is the identified person
    FILTER(?spouse = ?person)
    
    # Step 4: Find parent of the spouse
    ?parent <http://dbpedia.org/ontology/child> ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
SELECT ?currentManager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  ?sportsManager <http://dbpedia.org/ontology/teamManaged> <http://dbpedia.org/resource/1998_Kashima_Antlers_season> .
  
  # Ensure this sports manager is a native of Japan and a member of University of Tsukuba
  ?sportsManager <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?location .
  FILTER(CONTAINS(LCASE(?location), ""japan""))
  
  ?sportsManager <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/University_of_Tsukuba> .

  # Step 2: Find the team managed by this sports manager
  ?sportsManager <http://dbpedia.org/ontology/teamManaged> ?team .
  
  # Step 3: Determine the current manager of that team
  ?currentManager <http://dbpedia.org/ontology/teamManaged> ?team .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?claimToFame ?joaquinBlakeWar ?carlGahnBirthName ?carlGahnWar WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joaquín_Blake_y_Jordán> <http://dbpedia.org/ontology/participatedIn> ?joaquinBlakeWar .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?carlGahnBirthName .
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?carlGahnWar .
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Amun-her-khepeshef's spouse
  OPTIONAL { 
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouseA .
    
    # Step 2: Child of this spouse
    ?spouseA <http://dbpedia.org/ontology/child> ?childA .
    
    # Step 3: Parent of this child
    ?childA <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?childA <http://dbpedia.org/ontology/birthParent> ?parentA .
  }
  
  # Step 4: Ramesses II's spouse
  OPTIONAL { 
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouseB .
    
    # Step 5: Child of this spouse
    ?spouseB <http://dbpedia.org/ontology/child> ?childB .
    
    # Step 6: Parent of this child
    ?childB <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?childB <http://dbpedia.org/ontology/birthParent> ?parentB .
  }
  
  # Step 7: Seti I's child
  OPTIONAL { 
    <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?childC .
    
    # Step 8: Grandchild (child of the child)
    ?childC <http://dbpedia.org/ontology/child> ?grandChild .
    
    # Step 9: Parent of this grandchild
    ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
    ?grandChild <http://dbpedia.org/ontology/birthParent> ?parentC .
  }
  
  # Step 10: Combine results
  FILTER (?parentA = ?parentB || ?parentA = ?parentC)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT DISTINCT ?producer WHERE {
  # Step 1: Find the album ""What U See Is What U Get""
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Identify associated musical artists of the writer
  ?writer <http://xmlns.com/foaf/0.1/knows> ?associatedArtist .
  
  # Step 3: Filter for rappers among these associated artists
  ?associatedArtist <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?profession = <http://dbpedia.org/resource/Rapper>) .

  # Step 4: Find works by this rapper that are musical works and songs
  ?rapperWork <http://purl.org/dc/terms/creator> ?associatedArtist ;
              a <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> .

  # Step 5: Identify professionals involved as producers in these works
  ?rapperWork <http://dbpedia.org/property/producers> ?producer .
}
```",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
SELECT ?band WHERE {
  # Step 1: Find the song written by Amba Shepherd
  ?song <http://dbpedia.org/ontology/writtenBy> ?writer .
  ?song <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Amba_Shepherd> .

  # Step 2 & 3: Find the band associated with the writer of the song
  OPTIONAL { 
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
  }

  # Step 4: Identify Pavlo Khudzik's birth date
  ?pavlo <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER (?pavlo = <http://dbpedia.org/resource/Pavlo_Khudzik>) .

  # Step 5: Find a person born on the same date as Pavlo Khudzik
  ?person <http://dbpedia.org/ontology/birthDate> ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate) .

  # Ensure the band is linked to the person found in step 5, if applicable
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?force WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/war> ?war .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Warsaw> <http://dbpedia.org/ontology/administeredBy> ?organisation .
    ?organisation <http://www.w3.org/2006/vcard/ns#hasMember> ?force .
  }
}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
SELECT DISTINCT ?meshuggahArtist ?watchtowerRelatedArtist ?finalAssociatedArtist WHERE {
  # Step 1: Identify Meshuggah as a band, group, and organization
  <http://dbpedia.org/resource/Meshuggah> 
    <http://www.w3.org/2002/07/owl#sameAs>* ?meshuggahEntity .
  
  # Ensure it is a band, group, and organization
  ?meshuggahEntity 
    <http://dbpedia.org/ontology/band> ?band ;
    <http://dbpedia.org/ontology/group> ?group ;
    <http://dbpedia.org/ontology/Organisation> ?organisation .

  # Step 2: Find associated musical artists of Meshuggah
  ?meshuggahEntity 
    <http://dbpedia.org/property/associatedMusicalArtist> ?meshuggahArtist .
  
  # Step 3: Identify Watchtower as an associated musical artist
  ?watchtowerEntity <http://www.w3.org/2002/07/owl#sameAs>* <http://dbpedia.org/resource/Watchtower> .
  ?watchtowerEntity 
    <http://dbpedia.org/ontology/band> ?band ;
    <http://dbpedia.org/ontology/group> ?group ;
    <http://dbpedia.org/ontology/Organisation> ?organisation .

  # Find associated musical artists of Watchtower
  ?watchtowerEntity 
    <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerRelatedArtist .
  
  # Step 4: Retrieve the associated musical artists of these entities
  OPTIONAL {
    ?meshuggahArtist 
      <http://dbpedia.org/property/associatedMusicalArtist> ?finalAssociatedArtist .
  }
  OPTIONAL {
    ?watchtowerRelatedArtist 
      <http://dbpedia.org/property/associatedMusicalArtist> ?finalAssociatedArtist .
  }
}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?decedent WHERE {
  OPTIONAL {
    ?francoHovaWar <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(CONTAINS(LCASE(STR(?francoHovaWar)), ""franco-hova wars""))
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://www.geonames.org/ontology#capital> ?capital .
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER((STR(?deathPlace) = STR(?capital)) || (CONTAINS(LCASE(STR(?deathPlace)), ""french algeria"")))
    BIND(?person AS ?decedent)
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild1 ?commonLink WHERE {
  # Step 1 & 2: Find the child of the royalty parent of Archduke Ladislaus Philipp
  ?parent rdf:type dbo:Royalty .
  ?parent dbo:child <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
  
  # Step 3: Find the grandchild (child of the child)
  ?child1 dbo:parent ?parent ;
          dbo:child ?grandchild1 .

  # Step 4 & 5: Find the parent and grandparent of Archduchess Margaret
  ?parent2 dbo:child <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria> .
  ?grandparent dbo:parent ?parent2 .

  # Step 6: Find the child of this grandparent
  ?commonLink dbo:parent ?grandparent .

  # Ensure the common link is a royalty
  ?commonLink rdf:type dbo:Royalty .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find an alumnus of Ohio State University
  ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/Ohio_State_University> .
  
  # Step 2: Get the birth name of this alumnus
  ?alumnus <http://dbpedia.org/property/birthName> ?birthName .

  # Step 3: Find Ted Martin McGinley's spouse
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Step 4: Get the birth name of this spouse and match it with the alumnus' birth name
  ?spouse <http://dbpedia.org/property/birthName> ?birthName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Get Gigi Rice's birth name
  OPTIONAL { 
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
  }

  # Step 2: Get Ted Martin McGinley's spouse
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse .
  }

  # Step 3: Find the actor in ""Unnatural"" and their profession
  OPTIONAL {
    ?unnaturalActor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> ;
                     <http://dbpedia.org/ontology/profession> ?profession .
  }

  # Step 4: Find a person matching all criteria
  ?person <http://dbpedia.org/ontology/birthName> ?birthName ;
          <http://dbpedia.org/property/spouse> ?spouse ;
          <http://dbpedia.org/ontology/profession> ?profession .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find Ted McGinley's spouse
  ?ted <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Step 2: Get the birth name of Ted McGinley's spouse
  ?spouse <http://dbpedia.org/property/birthName> ?birthName .

  # Step 3: Find an alumnus of Ohio State University with this birth name
  ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus <http://dbpedia.org/property/birthName> ?birthName .

  # Step 4: Find the person born with this birth name
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",6,6,7,3,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
SELECT ?restingPlaceGeraldAwardee ?greatGrandchildRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/receivesAward> ?award .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/burialPlace> ?restingPlaceGeraldAwardee .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child1 .
    ?child1 <http://dbpedia.org/ontology/child> ?grandchild .
    ?grandchild <http://dbpedia.org/ontology/child> ?greatGrandchild .
    ?greatGrandchild <http://dbpedia.org/ontology/burialPlace> ?greatGrandchildRestingPlace .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?commander ?militaryForce WHERE {
  OPTIONAL {
    # Part 1: Commander in the force of Arthur Wellesley
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commandedMilitaryUnit> ?force .
    ?force <http://dbpedia.org/ontology/commander> ?commander .
  }
  
  OPTIONAL {
    # Part 2: Military force of a societal event related to Rutger Jan Schimmelpenninck
    ?event <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?event <http://purl.org/dc/terms/type> ?eventType .
    FILTER (?eventType = <http://dbpedia.org/class/yago/SocietalEvent108069068> || 
            ?eventType = <http://dbpedia.org/ontology/Event> ||
            ?eventType = <http://dbpedia.org/class/yago/MilitaryConflict108069068>)
    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"```sparql
SELECT ?burtonRestingPlace ?awardeeRestingPlace ?actorRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .
  }
  
  OPTIONAL {
    ?award <http://dbpedia.org/property/awardee> ?awardee ;
           <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Gerald_Graham> .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }
  
  OPTIONAL {
    ?show <http://dbpedia.org/ontology/starring> ?actor ;
          <http://dbpedia.org/property/starredWith> <http://dbpedia.org/resource/E._Richard> .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band (organization)
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?band a <http://dbpedia.org/class/yago/YAGO2_Organization1000000010> .

  # Step 2: Find band members who are part of a group or organization
  ?member <http://dbpedia.org/ontology/member> ?band .
  ?member a ?type .
  FILTER (?type IN (<http://dbpedia.org/class/yago/YAGO2_MusicalGroup1000000010>, <http://dbpedia.org/class/yago/YAGO2_Organization1000000010>) )

  # Step 3: Find associated musical artists for these band members
  ?member <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .

  # Step 4: Identify the band member of Don Dokken among these artists
  ?dokkenMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
  FILTER (?artist = ?dokkenMember)

  # Step 5: Find associated musical artist of this band member
  ?dokkenMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?nextArtist .

  # Step 6: Find associated musical artist of the associated musical artist linked to a reference to Watchtower
  ?watchtowerRef <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower> .
  ?watchtowerRef <http://dbpedia.org/ontology/associatedMusicalArtist> ?nextNextArtist .

  # Final step: Find the associated musical artist of this final artist
  ?nextNextArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?finalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify Gustav Jonson's leadership role
  ?gustavJonson <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/politician> _:politician .

  # Step 2: Find the government agency he leads
  ?agency <http://dbpedia.org/ontology/leader> ?gustavJonson .
  ?agency a <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 3: Identify the commander in Budapest
  ?budaCommander <http://dbpedia.org/property/commanderInForce> ?force .
  ?force <http://dbpedia.org/ontology/decedentAt> ""Budapest""^^<http://www.w3.org/2001/XMLSchema#string> .

  # Step 4: Find the awardee of the Volcano and Ryukyu Islands campaign
  ?campaignAwardee <http://dbpedia.org/property/commanderInForce> ?volcanoRyukyuCampaign .
  ?volcanoRyukyuCampaign <http://dbpedia.org/ontology/campaignAwardedTo> ""Volcano and Ryukyu Islands""^^<http://www.w3.org/2001/XMLSchema#string> .

  # Step 5: Link the commander to Gustav Jonson's agency
  ?budaCommander = ?campaignAwardee .
  ?agency <http://dbpedia.org/ontology/commander> ?commander .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","```sparql
SELECT ?actor WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/work> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work> .
  }
  
  OPTIONAL {
    ?claimToFame <http://dbpedia.org/ontology/actor> ?actor .
  }

  OPTIONAL {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
           <http://www.w3.org/2002/07/owl#sameAs> ?claimToFame ;
           <http://dbpedia.org/ontology/work> ?work .
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>, <http://dbpedia.org/ontology/TelevisionShow> .
  }

  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/actor> ?actor .
  }
  
  FILTER EXISTS { 
    ?actor <http://dbpedia.org/property/nativeOf> <http://dbpedia.org/resource/Hub_City> .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/title> ""What U See Is What U Get"" .
  
  # Step 2: Find the writer of the album who is a musical artist and an artist
  ?writer <http://dbpedia.org/ontology/writer> ?album ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .
  
  # Step 3: Identify The Shadow's alter ego
  ?alterEgo <http://dbpedia.org/property/profession> ""The Shadow"" ;
             <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Step 4: Find associated musical artist
  ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?writer ;
                    <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .
  
  # Step 5: Identify the song by 50 Cent
  ?song <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> .
  
  # Step 6: Find the producer of the song
  ?song <http://dbpedia.org/property/producer> ?producer .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?commander ?birthPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administeredBy> ?administration .
  }
  
  OPTIONAL {
    ?boshinWarCommander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?boshinWarCommander <http://dbpedia.org/property/commandedIn> <http://dbpedia.org/resource/Boshin_War> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?country1 ?country2 WHERE {
  OPTIONAL {
    # Country of the military force for Camden Expedition
    <http://dbpedia.org/resource/Camden_Expedition> <http://dbpedia.org/ontology/militaryForce> ?military .
    ?military <http://www.w3.org/2006/vcard/ns#hasAddress> ?address1 .
    ?address1 <http://purl.org/dc/terms/description> ?country1 .
  }
  
  OPTIONAL {
    # Administration country of Martha Johnson Patterson's father
    <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://xmlns.com/foaf/0.1/familyName> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://www.w3.org/2006/vcard/ns#hasAddress> ?address2 .
    ?address2 <http://purl.org/dc/terms/description> ?country2 .
  }
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","```sparql
SELECT ?micheleParty ?giulioParty ?romanoParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?micheleParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?giulioParty .
  }
  OPTIONAL {
    ?romano a <http://dbpedia.org/ontology/OfficeHolder> ;
            a <http://dbpedia.org/ontology/Politician> ;
            rdfs:label ""Romano Antonio Prodi""@en .
    ?romano <http://dbpedia.org/ontology/politicalParty> ?romanoParty .
  }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT ?stanLeeSpouse ?onassisParentSpouse WHERE {
  OPTIONAL {
    # Assuming there's a property linking Stan Lee to another professional via an award
    ?award <http://dbpedia.org/ontology/receiver> ?professional .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?professional <http://dbpedia.org/property/spouse> ?stanLeeSpouse .
  }
  
  OPTIONAL {
    # Find the parent of Alexander Onassis
    <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/birthParent> ?onassisParent .
    
    # Get the spouse of that parent
    ?onassisParent <http://dbpedia.org/property/spouse> ?onassisParentSpouse .
  }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Jon Pertwee's child who is a French politician and office holder
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
  ?child <http://www.w3.org/2000/01/rdf-schema#label> ?nameChild .
  FILTER CONTAINS(LCASE(?nameChild), ""france"") .
  FILTER EXISTS { ?child <http://dbpedia.org/ontology/politicalParty> ?party . }
  FILTER EXISTS { ?child <http://dbpedia.org/ontology/officeHolder> ?office . }

  # Step 2: Determine the native residence in Britain
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/type> ?type .
  FILTER CONTAINS(LCASE(?type), ""settlement"") .
  FILTER EXISTS { ?address <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . }

  # Step 3: Find the professional actor, narrator, and producer
  ?professional <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?professional <http://purl.org/dc/terms/type> ?typeProfessional .
  FILTER CONTAINS(LCASE(?typeProfessional), ""actor"") .
  FILTER CONTAINS(LCASE(?typeProfessional), ""narrator"") .
  FILTER CONTAINS(LCASE(?typeProfessional), ""producer"") .

  # Step 4: Identify the claim to fame (film and military conflict)
  ?professional <http://dbpedia.org/ontology/film> ?film .
  ?professional <http://dbpedia.org/ontology/militaryConflict> ?conflict .

  # Step 5: Retrieve actor of the film
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?entity WHERE {
  OPTIONAL {
    ?leader <http://dbpedia.org/ontology/politician> _:a .
    ?election <http://dbpedia.org/property/leader> ?leader .
    FILTER(STRSTARTS(STR(?election), ""http://dbpedia.org/resource/1962_New_South_Wales_state_election""))
    
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?country <http://www.w3.org/2000/01/rdf-schema#label> ?birthPlaceLabel .
    FILTER(LANG(?birthPlaceLabel) = ""en"")
    FILTER(CONTAINS(STR(?birthPlaceLabel), ""Country""))
    
    OPTIONAL {
      ?officeHolder <http://dbpedia.org/ontology/politician> _:b .
      ?officeHolder <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
      
      ?unit <http://dbpedia.org/property/profession> ?officeHolder .
      FILTER(STRSTARTS(STR(?unit), ""http://dbpedia.org/resource/Military_unit""))
      
      ?war <http://dbpedia.org/ontology/warOf> ?unit .
      ?war <http://dbpedia.org/ontology/warOf> <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> .
    }
    
    ?entity <http://www.w3.org/2000/01/rdf-schema#location> ?birthPlace .
  }
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?administration ?country WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Philip Brian Scott"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person <http://dbpedia.org/property/administration> ?administration .
  }
  
  OPTIONAL {
    ?admin <http://dbpedia.org/property/administration> ?patriciaAdministration .
    ?patriciaAdministration <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Patricia_McCoy> .
    ?admin <http://dbpedia.org/ontology/country> ?country .
  }
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?native ?actor WHERE {
  OPTIONAL {
    # Step 1: Find Sylvie Bermann's residence that is a settlement and British.
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://xmlns.com/foaf/0.1/residence> ?residence .
    ?residence <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/type> ?type .
    FILTER (?type = <http://dbpedia.org/resource/Settlement>)
    OPTIONAL { 
      ?residence <http://dbpedia.org/ontology/country> ?country .
      FILTER (CONTAINS(LCASE(?country), ""united kingdom""))
    }
    
    # Step 2: Find the native of this residence.
    ?native <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    FILTER (?address = ?residence)
  }

  OPTIONAL {
    # Step 3: Identify claim to fame that is both a film and a military conflict.
    ?professional <http://dbpedia.org/ontology/profession> ?profession .
    FILTER (CONTAINS(LCASE(?profession), ""actor"") && CONTAINS(LCASE(?profession), ""narrator"") && CONTAINS(LCASE(?profession), ""producer""))
    
    ?claimToFame <http://purl.org/dc/terms/relation> ?professional .
    ?claimToFame <http://dbpedia.org/ontology/type> ?type1 .
    ?claimToFame <http://dbpedia.org/ontology/type> ?type2 .
    FILTER (?type1 = <http://dbpedia.org/resource/Film> && ?type2 = <http://dbpedia.org/resource/Military_conflict>)
    
    # Step 4: Find the actor associated with this claim to fame.
    ?actor <http://purl.org/dc/terms/subject> ?claimToFame .
    FILTER (CONTAINS(LCASE(?actor), ""actor""))
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?war1 ?countryEntity ?war2 WHERE {
  OPTIONAL {
    ?jonathonBand <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/war> ?war1 .
  }
  
  OPTIONAL {
    ?electionLeader <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ;
                     <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER (isBlank(?birthPlace) || ?birthPlace != """")
    OPTIONAL { ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel . }
    FILTER (CONTAINS(LCASE(?countryLabel), ""country""))
    ?countryEntity <http://dbpedia.org/ontology/country> ?birthPlace .
  }

  OPTIONAL {
    ?officeHolder <http://dbpedia.org/ontology/profession> ?militaryUnit ;
                  <http://dbpedia.org/ontology/politician> true ;
                  <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?militaryUnit <http://dbpedia.org/property/war> ?war2 .
  }
}
```",9,14,10,3,3,3,3,71,0,2,1,0.0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?professional WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/profession> ?profession .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?native <http://dbpedia.org/ontology/nativeOf> ?birthPlace .
    FILTER(?professional = ?native)
  }
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?battleWar ?ireneWars ?narcisoForce WHERE {
  OPTIONAL {
    # War of the commander in Battle of La Rinconada de Ate
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/war> ?battleWar .
  }
  
  OPTIONAL {
    # Wars involving Irene Morales
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/property/war> ?ireneWars .
  }

  OPTIONAL {
    # Force of Narciso Campero
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2006/vcard/ns#hasName> ?birthName .
    FILTER(?birthName = ""Narciso Campero"")
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryUnit> ?narcisoForce .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?spouse ?childOfAntiochus ?parent WHERE {
  # Spouse of Laodice IV
  OPTIONAL { 
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  
  # Child of Antiochus III the Great
  OPTIONAL {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?childOfAntiochus .
  }

  # Commander in Battle of Panium and their child
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commandedBattle> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?commander <http://dbpedia.org/ontology/child> ?childOfCommander .
    
    # Parent of the child of the commander
    ?parent <http://dbpedia.org/ontology/child> ?childOfCommander .
  }
  
  FILTER(?spouse = ?childOfAntiochus && ?childOfAntiochus = ?childOfCommander)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?prietoPredecessorMilitaryForce ?francoDecedentMilitaryForce WHERE {
  # Part 1: Military force of the predecessor's conflict
  OPTIONAL {
    ?indalecioPrieto dbo:predecessor ?predecessor .
    ?predecessor dbo:militaryConflict ?conflict1 .
    ?conflict1 rdf:type/(dbo:SocietalEvent|dbo:MilitaryConflict) .
    ?conflict1 dbo:militaryForce ?prietoPredecessorMilitaryForce .
  }

  # Part 2: Military force of the decedent's conflict during Francoist Spain
  OPTIONAL {
    ?francoistSpain dbo:decedent ?decedent .
    ?decedent dbo:militaryConflict ?conflict2 .
    ?conflict2 rdf:type/(dbo:SocietalEvent|dbo:Event|dbo:MilitaryConflict) .
    ?conflict2 dbo:militaryForce ?francoDecedentMilitaryForce .
  }
}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT ?associatedMusicalArtist WHERE {
  # Step 1: Find the professional with alter ego ""The Shadow""
  ?professional <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
  ?professional <http://dbpedia.org/property/alterEgo> ""The Shadow"" .

  # Step 2: Identify the work produced by this professional
  ?work <http://dbpedia.org/ontology/producer> ?professional .
  ?work a <http://dbpedia.org/ontology/Song> ;
       a <http://dbpedia.org/ontology/MusicalWork> .

  # Step 3: Find the album associated with this work
  ?album <http://dbpedia.org/ontology/work> ?work .
  ?album a <http://dbpedia.org/ontology/MusicalAlbum> ;
         a <http://dbpedia.org/ontology/MusicalWork> .

  # Step 4: Identify the writer of this album who is also an artist and musical artist
  ?writer <http://dbpedia.org/ontology/writer> ?album .
  ?writer a <http://dbpedia.org/ontology/MusicalArtist> ;
          a <http://dbpedia.org/ontology/Artist> .

  # Step 5: Find the associated musical artist of this writer
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedMusicalArtist .
}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?birthPlace WHERE {
  # Find the author of Kamikaze Girls
  ?author <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Kamikaze_Girls> .
  
  # Ensure this person is also a beauty queen
  ?author <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .

  # Find the time zone for Salak, North Sumatra and its region
  <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/timezone#timezone> ?timeZone .
  ?region <http://www.w3.org/2006/timezone#hasTimezone> ?timeZone .

  # Get the birthplace of this person in that region
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2006/vcard/ns#adr> ?address .
  ?address <http://www.w3.org/2006/vcard/ns#region> ?region .
}
```",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"```sparql
SELECT ?nickname ?player WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?nickname .
  }
  
  OPTIONAL {
    ?manager <http://dbpedia.org/ontology/sportsManagerForTeam> <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.F.C._season> ;
             <http://dbpedia.org/property/player> ?player .
    ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager> .
  }
}
```",4,5,5,2,2,3,2,20,0,1,2,0.0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
SELECT ?reference ?party WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Partito_Popolare_Italiano> <http://www.w3.org/2002/07/owl#sameAs> ?reference .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi>
      <http://dbpedia.org/ontology/politicalParty> ?party ;
      <http://purl.org/dc/terms/type> ?type1, ?type2 .
    FILTER (?type1 = <http://dbpedia.org/class/yago/OfficeHolder108069068> && ?type2 = <http://dbpedia.org/class/yago/Politician108070067>)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?societalEventWar ?orozimboBarbosaWar ?narcisoCamperoForce WHERE {
  # Military force of a societal event in Chile
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> .
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
    ?societalEvent <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?societalEventWar .
  }
  
  # War involving Orozimbo Barbosa
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/war> ?orozimboBarbosaWar .
  }

  # Force associated with Narciso Campero
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/militaryForce> ?narcisoCamperoForce .
  }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander ?leader ?awardee WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/ontology/commanderInForce> ?commander .
  }
  OPTIONAL {
    ?office <http://dbpedia.org/ontology/leader> ?leader ;
            <http://www.w3.org/2000/01/rdf-schema#label> ""government agency"" .
    ?stalin <http://dbpedia.org/ontology/officeHolder> ?office .
    FILTER(CONTAINS(LCASE(?stalin), ""joseph stalin""))
  }
  OPTIONAL {
    ?campaign <http://dbpedia.org/property/commanderInForce> ?commander ;
              <http://dbpedia.org/ontology/awardee> ?awardee .
    FILTER(CONTAINS(LCASE(STR(?campaign)), ""volcano and ryukyu islands campaign""))
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT ?commander1 ?commander2 WHERE {
  OPTIONAL {
    ?regiment <http://dbpedia.org/ontology/militaryConflict> ?war .
    FILTER(?regiment = <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>)
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
    ?event <http://dbpedia.org/ontology/commander> ?commander1 .
  }
  
  OPTIONAL {
    ?campaign <http://dbpedia.org/resource/German_campaign_of_1813> .
    ?campaign <http://dbpedia.org/ontology/commander> ?commander2 .
  }
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?commander WHERE {
  # Find native office holder of Kingdom of Ireland
  ?officeHolder <http://dbpedia.org/ontology/nationality> ?native .
  ?officeHolder <http://dbpedia.org/ontology/officeHolder> ?kingdomOfIreland .
  ?kingdomOfIreland rdfs:label ""Kingdom of Ireland""@en .

  # Find military force associated with Napoleonic Wars
  ?militaryForce <http://dbpedia.org/ontology/militaryConflict> ?napoleonicWars .
  ?napoleonicWars rdfs:label ""Napoleonic Wars""@en .

  # Identify commanders in both contexts
  ?commander <http://dbpedia.org/ontology/commander> ?militaryForce .
  
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/commander> ?lancersRegiment .
    ?lancersRegiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
    
    # Identify war event
    ?warEvent <http://dbpedia.org/ontology/event> ?lancersRegiment .
    ?warEvent rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
  }
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess rdf:type dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia"" ;
            foaf:givenName ""Victoria Louise"" .

  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the father of her spouse
  ?spouse dbo:childOf ?father .

  # Step 4: Identify a child of this father who is royalty
  ?father dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Royalty .

  # Step 5: Find the parent of this royal child
  ?royalChild dbo:parent ?parent .
  ?parent rdf:type dbo:Royalty .

  # Step 6: Identify Prince George William of Hanover and his parent
  ?georgeWilliam foaf:name ""Prince George William of Hanover"" ;
                 dbo:childOf ?parent .

}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?person WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_Martin_McGinley> <http://dbpedia.org/property/birthName> ?spouseBirthName .
    ?spouse <http://dbpedia.org/property/birthName> ?spouseBirthName .
    ?person <http://dbpedia.org/ontology/spouse> ?spouse .
  }
}
```",6,6,7,2,3,3,3,71,1,0,0,1.0,1.0,1.0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  # Step 1: Find spouse of Princess Victoria Louise of Prussia
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .

  # Step 2: Find father of that spouse
  ?father <http://dbpedia.org/ontology/father> ?spouse .

  # Step 3: Find child of this father
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Find royal child of Ernest Augustus, Duke of Brunswick
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?royalChild .

  # Step 5: Find parent of this royal child
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?royalChild <http://dbpedia.org/ontology/parent> ?parent .

  # Find commonality between step 3 and step 5
  FILTER (?child = ?parent)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?caballeroMilitaryForce ?rifWarMilitaryForce WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/militaryForce> ?caballeroMilitaryForce .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarMilitaryForce .
  }
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","```sparql
SELECT ?professionWar ?sirBobCountry ?baronAlcesterWar WHERE {
  # Step 1: Identify the military unit in New Zealand Army
  OPTIONAL { 
    ?militaryUnit <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?militaryUnit <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit> .
  }

  # Step 2: Find the professional who is an office holder and politician
  OPTIONAL {
    ?professional <http://dbpedia.org/ontology/memberOf> ?militaryUnit .
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?professional <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Category:New_Zealand_politicians> .
  }

  # Step 3: Determine the birthplace country of Bob Heffron
  OPTIONAL {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?sirBobCountry .
    FILTER(?sirBobCountry IN (<http://dbpedia.org/resource/New_Zealand>, <http://dbpedia.org/resource/Australia>))
  }

  # Step 4: Identify the war of Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    ?baronAlcesterWar <http://dbpedia.org/ontology/memberOf> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/War> .
    ?baronAlcester <http://dbpedia.org/ontology/memberOf> ?baronAlcesterWar .
    FILTER(?baronAlcester = <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester>)
  }

  # Step 5: Identify the war of the professional and their profession
  OPTIONAL {
    ?professionWar <http://dbpedia.org/ontology/memberOf> ?war .
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/War> .
    FILTER(?profession = ?professional)
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT DISTINCT ?yuGrupaBandMember WHERE {
  # Step 1: Identify YU Grupa reference
  ?yugrupaRef rdf:type <http://dbpedia.org/ontology/Organisation> .
  ?yugrupaRef rdf:type <http://dbpedia.org/ontology/Band> .
  ?yugrupaRef foaf:name ""YU Grupa""@en .

  # Step 2: Find band members of YU Grupa
  ?yuGrupaBandMember dbp:band ?yugrupaRef .
  
  # Step 3: Identify Žika Jelić's band
  ?zikajelic rdf:type <http://dbpedia.org/ontology/MusicalArtist> ;
             foaf:name ""Žika Jelić""@en .
  ?zikajelic dbp:band ?zikasBand .

  # Step 4: Find band members of Žika Jelić's band
  ?zikasBandMember dbp:band ?zikasBand ;
                   rdf:type <http://dbpedia.org/ontology/MusicalArtist> .
  
  # Final step: Find band members of the bands from YU Grupa and Žika Jelić's band
  ?finalBandMember dbp:band ?yuGrupaBandMember ;
                   rdf:type <http://dbpedia.org/ontology/MusicalArtist> .
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(CONTAINS(LCASE(?birthName), ""joseph michael"")) .
  
  OPTIONAL { 
    ?person <http://dbpedia.org/property/memberOf> ?band .
  }
  
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> ?artist .
    ?artist <http://www.w3.org/2000/01/rdf-schema#label> ""Nevermore (2006 film)""@en .
  }
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father1 ?father2 WHERE {
  # Step 1 & 2: Princess Pauline of Saxe-Weimar-Eisenach's spouse who is royalty and their child
  ?spouse rdf:type <http://dbpedia.org/ontology/Royalty> .
  ?princess dbo:spouse ?spouse .
  FILTER(STR(?princess) = ""Princess_Pauline_of_Saxe-Weimar-Eisenach"") .
  
  ?child1 dbo:parent ?spouse ;
          rdf:type <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Father of the child from step 2
  ?father1 dbo:child ?child1 .

  # Step 4 & 5: Parent and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  ?parent dbo:child <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
  
  ?child2 dbo:parent ?parent ;
          rdf:type <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Father of the child from step 5
  ?father2 dbo:child ?child2 .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Thinkhaya's children
  ?thinkhayaChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?thinkhayaChild .

  # Step 2: Find Narapati I's children
  ?narapatiChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatiChild .

  # Step 3: Find the parent of Narapati I's child
  ?parentOfNarapatiChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?narapatiChild <http://dbpedia.org/ontology/father> ?parentOfNarapatiChild .

  # Step 4: Find the child of Thinkhaya who is also a parent of Narapati I's child
  FILTER (?thinkhayaChild = ?parentOfNarapatiChild)
  
  BIND(?thinkhayaChild AS ?child)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band
  ?band rdf:type dbo:Band ;
        dbo:member <http://dbpedia.org/resource/Fredrik_Thordendal> ;
        rdf:type dbo:Organization .

  # Step 2: Associated musical artist of this band
  ?band dbo:associatedMusicalArtist ?artist1 .

  # Step 3: Find Don Dokken's persona
  ?persona dbo:birthName ""Don_Dokken"" ;
           rdf:type dbo:MusicalArtist .

  # Step 4: Associated musical artist of Don Dokken's persona
  ?persona dbo:associatedMusicalArtist ?artist2 .

  # Step 5: Reference to Watchtower
  ?reference rdfs:seeAlso <http://dbpedia.org/resource/Watchtower> ;
             dbo:associatedMusicalArtist ?artist3 .

  # Step 6: Associated musical artist of this reference
  ?artist3 dbo:associatedMusicalArtist ?finalArtist .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?person WHERE {
  # Step 1: Find Vajiralongkorn's parent
  ?vajiralongkorn <http://dbpedia.org/ontology/birthName> ""Vajiralongkorn"" .
  ?vajiralongkorn <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find the child of Vajiralongkorn's parent
  ?child <http://dbpedia.org/ontology/father> ?parent .
  
  # Step 3: Find Nakkhatra Mangala's royal child
  ?nakChild <http://dbpedia.org/ontology/child> ?royalChild .
  ?nakChild <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Get the birth name of this royal child
  ?royalChild <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 5: Find any person born with that birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlace1 ?grandchild ?restingPlace2 ?simonRestingPlace WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/knightOf> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace1 .
  }
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace2 .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?simonRestingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus3 <http://dbpedia.org/ontology/spouse> ?mother .
  ?mother <http://dbpedia.org/ontology/offspring> ?antiochus .

  # Step 2: Find his child
  ?antiochus <http://dbpedia.org/ontology/child> ?child1 .

  # Step 3: Identify the successor of Antiochus II Theos who is royalty
  ?antiochus2 <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the child of this successor who is royalty
  ?successor <http://dbpedia.org/ontology/child> ?child2 .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Determine the parent of the child from step 2
  ?child1 <http://dbpedia.org/ontology/parent> ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?officeHolder ?commander WHERE {
  ?officeHolder <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?officeHolder a <http://dbpedia.org/ontology/OfficeHolder> .
  OPTIONAL { 
    ?militaryForce <http://dbpedia.org/property/commander> ?commander .
    ?officeHolder <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
}
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
  OPTIONAL {
    # Find predecessor of Indalecio Prieto
    ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    
    # Find societal event and military conflict associated with the predecessor
    ?event1 <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
            <http://dbpedia.org/property/relatedTo> ?predecessor .
    ?event2 <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/MilitaryConflict> ;
            <http://dbpedia.org/property/relatedTo> ?predecessor .

    # Find military force involved in these events
    ?event1 <http://dbpedia.org/property/militaryForce> ?militaryForce .
    ?event2 <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
  
  OPTIONAL {
    # Identify ""El Director"" and his command role
    ?elDirector <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en ;
                <http://dbpedia.org/ontology/commanderInMilitaryConflict> ?commandEvent .
    
    # Find military force in the event commanded by El Director
    ?commandEvent <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find ""El Director"" and its associated military force
  ?elDirector <http://dbpedia.org/ontology/knows> ?figure .
  FILTER (str(?figure) = ""El_Director"") .

  # Step 2: Identify the decedent at Francoist Spain who was a commander in the event related to ""El Director""
  ?decedent <http://dbpedia.org/property/deathPlace> ?francoistSpain .
  FILTER (str(?francoistSpain) = ""Francoist_Spain"") .

  ?decedent <http://dbpedia.org/ontology/commanderOf> ?commandedForce .
  
  # Step 3: Find the military force of the societal event involving this person
  ?societalEvent <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
  ?societalEvent a <http://dbpedia.org/class/yago/SocialEvents100000001> .
  ?societalEvent a <http://dbpedia.org/ontology/Event> .

  ?commandedForce <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .

  # Retrieve the military force
  ?societalEvent <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","```sparql
SELECT ?bandMember1 ?bandMember2 WHERE {
  OPTIONAL {
    # Part 1: Band member of the producer of ""Used to Love Her""
    ?song <http://dbpedia.org/ontology/producer> ?producer .
    FILTER(STR(?song) = ""Used_to_Love_Her"")
    
    ?producer <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember1 .
  }
  
  OPTIONAL {
    # Part 2: Band member of the band referenced by ""Newsted""
    ?reference <http://dbpedia.org/ontology/reference> ?newstedEntity .
    FILTER(STR(?reference) = ""Newsted"")
    
    ?newstedEntity <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember2 .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify the 'Polish Horse'
  ?polishHorse a <http://dbpedia.org/ontology/MilitaryUnit> ;
               a <http://dbpedia.org/ontology/Organisation> ;
               <http://dbpedia.org/property/reference> ""Polish Horse"" .

  # Step 2: Find the war associated with 'Polish Horse'
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> , <http://dbpedia.org/ontology/Event> ;
       <http://dbpedia.org/ontology/participatedIn> ?polishHorse .

  # Step 3: Identify Rutger Jan Schimmelpenninck's reference
  ?schimmelpenninck a <http://dbpedia.org/ontology/Person> ;
                    <http://dbpedia.org/property/reference> ""Rutger Jan Schimmelpenninck"" .
  
  ?societalEvent a <http://dbpedia.org/ontology/SocialEvent> , <http://dbpedia.org/ontology/Event> ;
                 <http://dbpedia.org/ontology/involves> ?schimmelpenninck .

  # Step 4: Determine the military force
  ?militaryConflict a <http://dbpedia.org/ontology/MilitaryConflict> , <http://dbpedia.org/ontology/Event> ;
                    <http://dbpedia.org/property/commander> ?schimmelpenninck .
  
  ?societalEvent <http://dbpedia.org/ontology/involves> ?militaryConflict .

  ?militaryForce <http://dbpedia.org/ontology/militaryForce> ?societalEvent .
}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
SELECT ?leader ?awardee WHERE {
  OPTIONAL {
    # Leader of the office (government agency) associated with Joseph Stalin
    ?office <http://dbpedia.org/ontology/leader> ?leader .
    ?office <http://www.w3.org/2000/01/rdf-schema#label> ""Office of Joseph Stalin""@en .
    ?office a <http://dbpedia.org/class/yago/GovernmentAgency108069068> .
  }
  
  OPTIONAL {
    # Awardee of the award associated with Bruce Fraser, 1st Baron Fraser of North Cape
    ?award <http://dbpedia.org/ontology/awardee> ?awardee .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Award of Bruce Fraser""@en .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?gustavLeader ?ferencCommander ?agencyLeader WHERE {
  # Step 1: Find Gustav Jonson's leader
  ?gustavLeader <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Gustav_Jonson> .
  FILTER EXISTS { ?gustavLeader a <http://dbpedia.org/ontology/OfficeHolder> . }
  FILTER EXISTS { ?gustavLeader a <http://dbpedia.org/ontology/Politician> . }

  # Step 2: Find Ferenc Szálasi's commander in force
  ?ferencCommander <http://dbpedia.org/property/commanderInForce> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .

  # Step 3: Identify the government agency led by Gustav Jonson's leader
  ?agency a <http://dbpedia.org/ontology/GovernmentAgency> ;
          <http://www.w3.org/2006/vcard/ns#hasOrgStructure> ?gustavLeader .

  # Step 4: Find the leader of this office (government agency)
  ?agencyLeader <http://dbpedia.org/property/head> ?agency .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
SELECT ?actorBand ?josephMichaelBand ?nevermoreArtistMember ?associatedMusicalArtist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STR(?movie) = ""Return_to_Nuke_'Em_High_Volume_1"")

  # Step 2: Find bands associated with this actor
  OPTIONAL {
    ?actor <http://dbpedia.org/property/band> ?actorBand .
  }

  # Step 3: Identify Joseph Michael's band
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/memberOf> ?josephMichaelBand .
  }

  # Step 4: Find Nevermore's members who are artists
  ?nevermoreMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
  OPTIONAL {
    ?nevermoreMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    BIND(?nevermoreMember AS ?nevermoreArtistMember)
  }

  # Step 5: Find associated musical artists born as artists
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthPlace> ?birthPlace .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?person .
    BIND(?associatedArtist AS ?associatedMusicalArtist)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT DISTINCT ?awardee ?war ?nzEntity WHERE {
  # Find awardees of Knight Grand Cross of the Order of the Bath
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of the Bath""@en .
  
  # Find wars associated with these awardees
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/war> ?war .
  }
  
  # Identify entities related to the Colony of New Zealand
  ?nzEntity <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Colony_of_New_Zealand> .

  # Find common wars between awardees and NZ entities
  OPTIONAL {
    ?nzEntity <http://dbpedia.org/ontology/war> ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the claim to fame (work) of Sherry Hormann's spouse
SELECT ?work WHERE {
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
}

# Step 3: Determine the actor associated with this work
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/property/actor> ?actor .
}

# Step 4: Identify a movie involving Roz Ryan that is both a movie and a television show
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110769069> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow455> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
}

# Step 5: Find an actor from this movie
SELECT ?actor WHERE {
  ?movie <http://dbpedia.org/property/actor> ?actor .
}

# Step 6: Locate the nickname of Jackson, Tennessee
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .
}

# Step 7: Identify a native figure associated with this nickname
SELECT ?figure WHERE {
  ?figure <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Jackson,_Tennessee> .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find parent of Prince George William of Hanover who is royalty
  ?princeGeorge <http://dbpedia.org/ontology/father> ?parent1 .
  FILTER(?princeGeorge = <http://dbpedia.org/resource/Prince_George_William_of_Hanover>)
  ?parent1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find spouse of Princess Victoria Louise of Prussia
  ?princessVictoria <http://dbpedia.org/property/spouse> ?spouse .
  FILTER(?princessVictoria = <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia>)
  
  # Step 3: Identify father of this spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 4: Find child of this father who is royalty
  ?father <http://dbpedia.org/ontology/child> ?child .
  FILTER(?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>) .

  # Step 5: Find parent of this child
  ?child <http://dbpedia.org/ontology/father> ?finalParent .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?militaryForce WHERE {
  ?event <http://www.w3.org/2000/01/rdf-schema#label> ""War of the Sixth Coalition"" .
  ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
         a <http://dbpedia.org/class/yago/Event108069068> ;
         a <http://dbpedia.org/class/yago/MilitaryConflict108069068> .

  ?person <http://dbpedia.org/ontology/commander> ?event .
  FILTER (?person = <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>)

  ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?francoMilitaryForce ?prietoPredecessorMilitaryForce WHERE {
  OPTIONAL {
    ?francoEvent <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco> .
    ?francoEvent <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
    ?militaryConflict <http://dbpedia.org/property/militaryForce> ?francoMilitaryForce .
  }
  
  OPTIONAL {
    ?prietoPredecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
    ?event <http://dbpedia.org/ontology/person> ?prietoPredecessor .
    ?militaryConflict <http://dbpedia.org/property/militaryForce> ?prietoPredecessorMilitaryForce .
  }
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Identify the actor of ""Dog Soldiers""
  ?dogSoldiersFilm <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STR(?dogSoldiersFilm) = ""Dog_Soldiers_(film)"")

  # Step 2: Find Jon Pertwee as a parent
  ?actor <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent rdfs:label ""Jon Pertwee""@en .

  # Step 3: Identify the child who is a politician and office holder of France
  ?actor2 <http://dbpedia.org/ontology/birthChild> ?politician .
  ?politician <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""politician"") && CONTAINS(LCASE(?name), ""office holder""))
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .

  # Step 4: Find the birthplace of this politician
  ?politician <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 5: Identify their residence
  ?politician <http://dbpedia.org/ontology/residence> ?residence .

  # Step 6: Ensure the residence is a settlement and British
  ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?settlementName .
  FILTER(CONTAINS(LCASE(?settlementName), ""settlement""))
  ?residence <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 7: Find the native of that residence
  ?native <http://dbpedia.org/ontology/birthPlace> ?residence .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"```sparql
SELECT ?parentOfAntiochusChild ?spouseOfAntiochusIIIChild ?royalChild WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             dbo:child <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Step 2: Find the parent of Antiochus's child
  ?antiochusChild dbo:parent ?parentOfAntiochusChild .
  ?antiochus dbo:child ?antiochusChild .

  # Step 3: Identify the spouse of a child of Antiochus III the Great
  ?antiochusIIIChild dbo:spouse ?spouseOfAntiochusIIIChild ;
                    dbo:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Step 4: Find the child of Seleucus II Callinicus who is royalty
  ?royalChild dbo:child <http://dbpedia.org/resource/Seleucus_II_Callinicus> ;
              a dbo:Royalty .
}
```",6,7,7,2,3,3,3,71,2,7,0,0.2222222222222222,1.0,0.3636363636363636
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Identify the person native to Compton, California and actor of ""All About the Andersons""
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> ;
          <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  OPTIONAL { 
    ?film <http://dbpedia.org/ontology/starring> ?person .
    FILTER(CONTAINS(LCASE(STR(?film)), ""all about the andersons""))
  }
}

# Step 3: Find the claim to fame (work) of this person
SELECT ?work WHERE {
  ?person <http://dbpedia.org/property/claimToFame> ?work .
}

# Step 4: Identify the actor of that work
SELECT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
# Step 1: Archduchess Margaret of Austria (born 1925)
SELECT ?parentMargaret WHERE {
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentMargaret .
}

SELECT ?childOfParentMargaret WHERE {
  ?parentMargaret <http://www.w3.org/2006/vcard/ns#hasChild> ?childOfParentMargaret .
}

# Step 2: Landmark at Elevation 96.0
SELECT ?settlement WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float .
  ?landmark <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/resource/Settlement> .
}

SELECT ?nativeLandmark WHERE {
  ?settlement <http://dbpedia.org/ontology/nativeOf> ?nativeLandmark .
}

SELECT ?parentNative WHERE {
  ?nativeLandmark <http://www.w3.org/2006/vcard/ns#hasParent> ?parentNative .
}

# Step 3: Archduke Ladislaus Philipp of Austria
SELECT ?royaltyParent WHERE {
  <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentLadislaus .
  ?parentLadislaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}

SELECT ?childOfRoyalty WHERE {
  ?royaltyParent <http://www.w3.org/2006/vcard/ns#hasChild> ?childOfRoyalty .
}

SELECT ?grandchild WHERE {
  ?childOfRoyalty <http://www.w3.org/2006/vcard/ns#hasChild> ?grandchild .
}

SELECT ?parentGrandchild WHERE {
  ?grandchild <http://www.w3.org/2006/vcard/ns#hasParent> ?parentGrandchild .
}

# Final Step: Combine Results
SELECT DISTINCT ?finalResult WHERE {
  { ?finalResult = ?childOfParentMargaret }
  UNION
  { ?finalResult = ?parentNative }
  UNION
  { ?finalResult = ?parentGrandchild }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find Richeza's father who is a royalty
  ?richeza <http://dbpedia.org/ontology/father> ?father .
  FILTER(?richeza = <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary>)
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the parent of Richeza's father
  ?parentOfFather <http://dbpedia.org/ontology/child> ?father .
  
  # Step 3: Identify Mlada (Abbess) and her parent
  ?mlada <http://dbpedia.org/ontology/father> ?parentOfMlada .
  FILTER(?mlada = <http://dbpedia.org/resource/Mlada_(abbess)>)
  
  # Step 4: Find the child of Mlada's parent who is a royalty
  ?royalChild <http://dbpedia.org/ontology/child> ?parentOfMlada .
  FILTER(?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>)
  
  # Step 5: Determine the parent of this royal child
  ?finalParent <http://dbpedia.org/ontology/child> ?royalChild .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?entity WHERE {
  OPTIONAL {
    ?election <http://dbpedia.org/ontology/politicalLeader> ?leader .
    FILTER(STRSTARTS(STR(?election), ""1962 New South Wales state election""))
    ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  }
  
  OPTIONAL {
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER(LANG(?countryLabel) = ""en"")
  }

  OPTIONAL {
    ?awardee <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross of the Order of the Bath"" .
    ?awardee <http://dbpedia.org/ontology/war> ?war .
  }
  
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?entityLabel .
    FILTER(LANG(?entityLabel) = ""en"")
    ?entity <http://dbpedia.org/ontology/country> ?birthPlace .
    ?entity <http://dbpedia.org/ontology/war> ?war .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
  }
  OPTIONAL {
    ?award <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Sergei_Makovetsky> ;
           <http://dbpedia.org/property/recipient> ?person .
  }
  OPTIONAL {
    ?profession <http://dbpedia.org/ontology/commander> ?person .
  }
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/event> ?person ;
           <http://dbpedia.org/ontology/societalEvent> ?societalEvent .
    ?societalEvent <http://dbpedia.org/property/relatedTo> <http://dbpedia.org/resource/Lisa_Gavrić> .
  }
}
```",5,7,6,2,3,2,3,28,0,1346,1,0.0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","```sparql
SELECT ?awardEntity ?force WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Ekrem_Akurgal> <http://purl.org/dc/terms/relation> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardEntity .
  }
  
  OPTIONAL {
    ?awardYear <http://dbpedia.org/ontology/year> ""1778""^^xsd:integer .
    ?awardYear <http://purl.org/dc/terms/relation> ?awardee .
    ?awardee <http://dbpedia.org/ontology/memberOf> ?force .
  }
}
```",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the Commander in Battle of Perire who is royalty
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the Father of this Commander
  ?father <http://dbpedia.org/ontology/child> ?commander .
  
  # Step 3: Determine the Spouse of the Father
  ?father <http://dbpedia.org/property/spouse> ?spouse .

  # Step 4: Verify Parental Connections to Ramesses II and Nefertari
  ?child <http://dbpedia.org/ontology/father> ?commander .
  ?ramessesChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  ?nefertariChild <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Nefertari> .

  # Ensure the child is a parent of both Ramesses II's and Nefertari's children
  ?child <http://dbpedia.org/ontology/father> ?ramessesChild .
  ?child <http://dbpedia.org/ontology/mother> ?nefertariChild .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?triggeFame ?peninsularCommander ?peninsularFame WHERE {
  # Step 1: Find the war involving Thomas Trigge as a commander
  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Thomas_Trigge> .
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
    ?militaryConflict a <http://dbpedia.org/class/yago/MilitaryConflicts100000001> ;
                      a <http://dbpedia.org/class/yago/SocietalEvents100000001> ;
                      a <http://dbpedia.org/class/yago/Events100000001> .

    # Step 2: Find the claim to fame for Thomas Trigge in this war
    ?triggeFame <http://dbpedia.org/ontology/claimToFame> ?war .
  }

  # Step 3: Identify a reference war related to Peninsular War
  OPTIONAL {
    ?referenceWar <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Peninsular_War> .

    # Step 4: Find the commander of this reference war
    ?peninsularCommander <http://dbpedia.org/ontology/commander> ?referenceWar .

    # Step 5: Find the claim to fame for this second commander
    ?peninsularFame <http://dbpedia.org/ontology/claimToFame> ?referenceWar .
  }
}
```",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?almaMater ?settlement WHERE {
  # Alma mater of George K. Nash
  OPTIONAL { 
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  # Entities in the administration that are settlements
  OPTIONAL {
    ?adminEntity <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/George_K._Nash> .
    ?adminEntity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlement .
    FILTER EXISTS { ?settlement a <http://dbpedia.org/class/yago/Settlements100000007> }
  }

  # Writer of ""Where It's At"" by Dustin Lynch
  OPTIONAL {
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    ?album <http://dbpedia.org/property/title> ""Where It's At""@en .
    ?album <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Dustin_Lynch_(singer)> .
  }
}
```",6,7,7,3,3,3,3,71,0,1,1,0.0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?war1 ?force2 ?war3 WHERE {
  # Part 1: War of the Commander in the Work of --01-09
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/date> ""-01-09"" .
    ?work <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war1 .
  }

  # Part 2: Force of the Person Born as Narciso Campero
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero"" ;
            <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
    ?person <http://dbpedia.org/property/militaryForce> ?force2 .
  }

  # Part 3: War of the Military Force of Battle of Pisagua
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/foughtBy> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war3 .
  }
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  ?princess a <http://dbpedia.org/ontology/Royalty> ;
            <http://www.w3.org/2006/vcard/ns#hasName> ""Victoria Louise of Prussia"" ;
            <http://dbpedia.org/property/birthName> ?birthName .
  
  OPTIONAL {
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  
  ?father a <http://dbpedia.org/ontology/Royalty> ;
          <http://dbpedia.org/ontology/father> ?ernestAugustusFather .

  ?ernestAugustusFather <http://dbpedia.org/property/name> ""Ernest Augustus, Duke of Brunswick"" .
  
  ?princess <http://dbpedia.org/ontology/father> ?father .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Get spouse of this child
  ?child <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Identify Antiochus, son of Antiochus III the Great
  ?antiochus <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Ensure this Antiochus is a child of one of the children from step 1
  ?child <http://dbpedia.org/ontology/child> ?antiochus .

  # Step 4: Find parent of this specific Antiochus
  ?parent <http://dbpedia.org/ontology/child> ?antiochus .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?force1 ?warChile ?warLaRinconada WHERE {
  # Force of Narciso Campero Leyes
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force1 .
  }
  
  # War of the military force in Chile (societal event)
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Chile> ;
           <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?force2 .
    ?force2 <http://dbpedia.org/property/war> ?warChile .
  }
  
  # War of the commander in Battle of La Rinconada de Ate
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?battle <http://dbpedia.org/property/war> ?warLaRinconada .
  }
}
```",7,8,8,3,3,3,3,71,0,533,2,0.0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?restingPlace ?capital WHERE {
  OPTIONAL {
    ?hero <http://dbpedia.org/ontology/title> ""Hero of the Soviet Union"" .
    ?hero <http://dbpedia.org/property/restingPlace> ?restingPlace .
  }
  
  OPTIONAL {
    ?uprising <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    FILTER(?uprising = <http://dbpedia.org/resource/Vyoshenskaya_Uprising>)
    ?militaryForce <http://www.w3.org/2000/01/rdf-schema#label> ?forceLabel .
    ?country <http://dbpedia.org/ontology/militaryBranch> ?militaryForce .
    ?country <http://dbpedia.org/ontology/capital> ?capital .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?warOfAwardee ?newZealandEntity ?warOfHeatherRoy WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of the Bath"" .
    ?awardee <http://dbpedia.org/property/war> ?warOfAwardee .
  }
  
  OPTIONAL {
    ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?entity ?p ?newZealandEntity .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/ns/org#hasMember> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/property/war> ?warOfHeatherRoy .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?writerOfRoaringSilence ?nativeOfDeathPlace ?authorOfBlindedByLight WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writerOfRoaringSilence .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER (isBlank(?deathPlace) || ?deathPlace != """")
    ?deathPlace <http://www.w3.org/2004/02/skos/core#broader> ?settlement .
    OPTIONAL {
      ?person <http://dbpedia.org/ontology/birthPlace> ?deathPlace .
      ?person <http://xmlns.com/foaf/0.1/nationality> ?nativeOfDeathPlace .
    }
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Blinded_by_the_Light_(film)> <http://purl.org/dc/terms/creator> ?authorOfBlindedByLight .
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent1 ?spouseOfFather WHERE {
  # Step 1: Find Amun-her-khepeshef's spouse and their child
  ?amun_spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child_amun_spouse <http://www.w3.org/2002/07/owl#sameAs> ?amun_spouse ;
                     <http://dbpedia.org/ontology/birthParent> ?parent1 .

  # Step 2: Find Ramesses II's child and their parent
  ?ram_child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  ?parent_ram_child <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?ram_child .

  # Step 3: Find the commander in Battle of Perire who is royalty
  ?commander <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/Battle_of_Perire> ;
             <http://www.w3.org/2002/07/owl#sameAs> ?royalty .
  
  # Step 4: Find the father of this commander and his spouse
  ?father_commander <http://dbpedia.org/ontology/birthParent> ?commander .
  ?spouseOfFather <http://dbpedia.org/ontology/spouse> ?father_commander .

  FILTER(?parent1 = ?parent_ram_child) # Ensure the parent from step 2 matches with step 3
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?war ?force WHERE {
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/date> ""----01-09""^^xsd:date .
    ?work <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/force> ?force .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"```sparql
SELECT ?professional ?person WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
    ?individual <http://purl.org/dc/terms/subject> ?profession .
    FILTER(?individual != <http://dbpedia.org/resource/Satomi_Ishihara>)
    BIND(?individual AS ?professional)
  }
  
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?person != ?alumnus)
    BIND(?person AS ?person)
  }
}
```",5,5,6,3,2,3,3,71,2,1048535,1,1.907419576037851e-06,0.6666666666666666,3.814828237358613e-06
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
# Step 1: Get Carl Pontus Gahn's birth name
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
}

# Step 2: Find commanders in the Great Siege of Gibraltar and Peninsular War
SELECT DISTINCT ?commanderGibraltar ?commanderPeninsula WHERE {
  # Commander for Great Siege of Gibraltar
  ?eventGibraltar a <http://dbpedia.org/ontology/Battle> ;
                  <http://dbpedia.org/ontology/commander> ?commanderGibraltar .
  FILTER(?eventGibraltar = <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>) .

  # Commander for Peninsular War
  ?eventPeninsula a <http://dbpedia.org/ontology/Battle> ;
                  <http://dbpedia.org/ontology/commander> ?commanderPeninsula .
  FILTER(?eventPeninsula IN (<http://dbpedia.org/resource/Peninsular_War>)) .
}

# Step 3: Get claim to fame for these commanders
SELECT DISTINCT ?claimToFameGibraltar ?claimToFamePeninsula WHERE {
  OPTIONAL {
    ?commanderGibraltar <http://dbpedia.org/ontology/claimToFame> ?claimToFameGibraltar .
  }
  OPTIONAL {
    ?commanderPeninsula <http://dbpedia.org/ontology/claimToFame> ?claimToFamePeninsula .
  }
}

# Step 4: Get wars involving these commanders
SELECT DISTINCT ?warGibraltar ?warPeninsula WHERE {
  OPTIONAL {
    ?commanderGibraltar <http://dbpedia.org/ontology/war> ?warGibraltar .
  }
  OPTIONAL {
    ?commanderPeninsula <http://dbpedia.org/ontology/war> ?warPeninsula .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?alterEgo WHERE {
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Matthew_Burland> .
  ?character <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?war1 ?war2 WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?war1 .
  }
  
  OPTIONAL {
    ?heatherRoy <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/ontology/war> ?war2 .
    FILTER(?heatherRoy = <http://dbpedia.org/resource/Heather_Roy>)
  }
  
  OPTIONAL {
    ?nzEntity <http://dbpedia.org/ontology/entityInColony> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?nzEntity <http://dbpedia.org/ontology/war> ?war2 .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?birthPlaceCommander ?deathPlaceIeyasu ?administrationFather WHERE {
  OPTIONAL {
    # Birth place of the commander in Boshin War
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlaceCommander .
    ?boshinWar <http://dbpedia.org/property/commander> ?commander .
    FILTER(CONTAINS(LCASE(STR(?boshinWar)), ""boshin war""))
  }
  
  OPTIONAL {
    # Death place of Tokugawa Ieyasu
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceIeyasu .
  }

  OPTIONAL {
    # Administration of the father of the spouse, who is a royalty, of Tokugawa Masako
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?spouse <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administrationFather .
  }
}
```",6,7,7,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?decedentFrenchAlgeria ?decedentAlgiers WHERE {
  OPTIONAL {
    # Find the author of ""French Algeria""
    <http://dbpedia.org/resource/French_Algeria> <http://purl.org/dc/terms/creator> ?author .
    
    # Find a work by this author and its decedent
    ?work <http://purl.org/dc/terms/creator> ?author .
    ?work <http://dbpedia.org/ontology/decedent> ?decedentFrenchAlgeria .
  }
  
  OPTIONAL {
    # Find the person decedent at Algiers
    <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/decedent> ?decedentAlgiers .
  }
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandMember ?associatedArtist ?professional WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOf> ?bandMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
    FILTER EXISTS { ?associatedArtist a <http://dbpedia.org/ontology/Artist> . }
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Sharon_Kao> <http://xmlns.com/foaf/0.1/birthName> ""Sharon Kao""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?professional <http://dbpedia.org/ontology/profession> ?sharonKao .
  }
}
```",5,6,6,2,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?mayorAlmaMater ?awardeeAlmaMater WHERE {
  OPTIONAL {
    # Alma mater of the mayor of Belfast who is a politician
    ?belfast <http://dbpedia.org/ontology/mayor> ?mayor .
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?mayor <http://dbpedia.org/property/almaMater> ?mayorAlmaMater .
  }
  
  OPTIONAL {
    # Alma mater of awardees of Royal Medals
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medal""@en .
    ?recipient <http://dbpedia.org/ontology/awardedBy> ?award .
    ?recipient <http://dbpedia.org/property/almaMater> ?awardeeAlmaMater .
  }
}
```",6,9,7,3,2,3,3,71,0,58,1,0.0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?vCerronAlmaMater ?awardee ?awardeeAlmaMater WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?vCerronAlmaMater .
  }
  
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/nationalOrderOfScientificMeritAwardee> true .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
}
```",3,3,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sylvie Bermann's residence
  ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
  ?sylvie <http://dbpedia.org/ontology/residence> ?residence .
  FILTER(?sylvie = <http://dbpedia.org/resource/Sylvie_Bermann>) .

  # Step 2: Find John Pertwee
  ?john <http://www.w3.org/2000/01/rdf-schema#label> ""John Devon Roland Pertwee""@en .
  ?john <http://dbpedia.org/ontology/birthPlace> ?residence .

  # Step 3: Identify his child with relevant professions
  ?child <http://dbpedia.org/ontology/father> ?john .
  ?child <http://www.w3.org/2000/01/rdf-schema#label> ?labelChild .
  FILTER(CONTAINS(LCASE(?labelChild), ""actor"") && CONTAINS(LCASE(?labelChild), ""narrator"") && CONTAINS(LCASE(?labelChild), ""producer"")) .

  # Step 4: Find their claim to fame as a film or military conflict
  ?claim <http://dbpedia.org/ontology/subject> ?child .
  FILTER((?claim = <http://dbpedia.org/resource/Film>) || (?claim = <http://dbpedia.org/resource/Military_conflict>)) .

  # Step 5: Retrieve the actor associated with this claim
  ?actor <http://dbpedia.org/ontology/starring> ?claim .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?leader ?commander WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/property/commandedBy> ?commander .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?nickname ?mayorAlmaMater ?royalMedalAwardeeAlmaMater WHERE {
  # Nickname of Queen's University Belfast
  <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://www.w3.org/2006/vcard/ns#hasNickname> ?nickname .

  # Alma mater of the mayor (politician) in Belfast
  OPTIONAL {
    ?belfastOrg a <http://dbpedia.org/ontology/Organisation> ;
                <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
    ?mayor a <http://dbpedia.org/ontology/Politician> ;
           <http://dbpedia.org/ontology/memberOf> ?belfastOrg ;
           <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }

  # Alma mater of the awardee of Royal Medal
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> ;
             <http://dbpedia.org/ontology/almaMater> ?royalMedalAwardeeAlmaMater .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandTraceyMcSween ?band1985Person ?bandAmbaShepherdSong WHERE {
  OPTIONAL {
    ?person foaf:name ""Tracey Elizabeth McSween"" .
    ?person dbo:birthName ""Tracey Elizabeth McSween"" .
    ?person dbo:associatedMusicalArtist ?bandTraceyMcSween .
  }
  
  OPTIONAL {
    ?person dbo:birthday ""1985-04-29""^^xsd:date .
    ?person dbo:associatedMusicalArtist ?band1985Person .
  }

  OPTIONAL {
    ?song dbo:creator <http://dbpedia.org/resource/Amba_Shepherd> ;
          rdf:type dbo:Song .
    ?writer dbo:worksForCreativeWork ?song .
    ?writer dbo:associatedMusicalArtist ?bandAmbaShepherdSong .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander WHERE {
  OPTIONAL {
    # Step 1: Identify Gustav Jonson
    ?gustav a <http://dbpedia.org/ontology/OfficeHolder> ;
           a <http://dbpedia.org/ontology/Politician> ;
           foaf:name ""Gustav Jonson"" .

    # Step 2: Find the government agency he leads
    OPTIONAL {
      ?agency a <http://dbpedia.org/ontology/GovernmentAgency> ;
              <http://dbpedia.org/property/leader> ?gustav .
      
      # Step 3: Identify the force at Budapest and its commander
      OPTIONAL {
        ?event dbp:location <http://dbpedia.org/resource/Budapest> ;
               dbp:involvedForce ?force .

        ?force dbp:commander ?commander .
      }
    }
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
# Step 1: Find Donald Maynard Dokken's associated musical artists
SELECT ?dokkenArtist WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/associatedMusicalArtist> ?dokkenArtist .
}

# Step 2: Identify Watchtower and its associated musical artists
SELECT ?watchtowerArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 3: Find band members of the associated musical artists of Watchtower
SELECT DISTINCT ?artistBandMember WHERE {
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?artistBandMember .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
SELECT ?awardeeAlmaMater ?mayorAlmaMater WHERE {
  # Step 1: Identify Royal Medals as an award
  ?royalMedals a <http://dbpedia.org/ontology/Award> .
  
  # Step 2: Find awardees of Royal Medals
  ?awardee <http://purl.org/dc/terms/references> ?royalMedals .
  
  # Step 3: Determine alma mater for each awardee
  ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .

  # Step 4: Identify Queen's University Belfast by nickname
  ?queensUni a <http://dbpedia.org/ontology/EducationalInstitution> .
  ?queensUni <http://xmlns.com/foaf/0.1/nick> ""Queen's University Belfast""^^<http://www.w3.org/2001/XMLSchema#string> .

  # Step 5: Find mayor of Northern Ireland Forum
  ?mayor a <http://dbpedia.org/ontology/Politician> .
  ?mayor <http://dbpedia.org/property/politicalParty> ?party .
  FILTER(?party = ""Northern Ireland Forum"") .

  # Step 6: Determine alma mater for the mayor
  ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT ?native ?member WHERE {
  # Step 1: Find Yōichi Masuzoe's residence that is a country
  OPTIONAL { 
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://xmlns.com/foaf/0.1/residence> ?residence .
    ?residence <http://www.w3.org/2002/07/owl#sameAs> ?country .
  }
  
  # Step 2: Find natives of this country
  OPTIONAL {
    ?native <http://dbpedia.org/ontology/nativeCountry> ?country .
  }

  # Step 3: Identify alma mater for a person born in 1958
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Person""@en ;
            <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gYear .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    
    # Ensure alma mater is Japanese, an organization, a university, and an educational institution
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label ;
               <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> .
    FILTER(CONTAINS(LCASE(?label), ""university""))
  }
  
  # Step 4: Find members of this alma mater
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/memberOf> ?almaMater .
  }
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?grandchildRestingPlace ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Resting place of the child's child of William Haliburton
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/father> ?child .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }

  # Resting place of the actor in a show with Emily Richard
  OPTIONAL {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/E._Richard> .
    ?actor <http://dbpedia.org/ontology/starring> ?show .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/honours> ""Knight Grand Cross of the Order of St Michael and St George""@en .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
SELECT ?commander ?war WHERE {
  # Step 1: Identify 'Polish Horse'
  ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
  ?polishHorse a <http://dbpedia.org/ontology/MilitaryUnit> ;
               a <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find its Military Force in Napoleonic Wars
  OPTIONAL {
    ?force <http://dbpedia.org/property/militaryForce> ?polishHorse .
    ?force <http://dbpedia.org/property/event> ?napoleonicWar .
    ?napoleonicWar a <http://dbpedia.org/ontology/MilitaryConflict> ;
                  a <http://dbpedia.org/ontology/Event> .
  }

  # Step 3: Identify Commander of this Force
  OPTIONAL {
    ?force <http://dbpedia.org/property/commander> ?commander .
  }

  # Step 4: Link to Native Office Holder of Kingdom of Ireland
  OPTIONAL {
    ?officeHolder a <http://dbpedia.org/ontology/OfficeHolder> ;
                  <http://dbpedia.org/ontology/nationality> ?ireland .
    ?ireland <http://www.w3.org/2000/01/rdf-schema#label> ""Kingdom of Ireland""@en .
    ?officeHolder <http://dbpedia.org/property/commander> ?commander .
  }

  # Step 5: Identify War as Event and Military Conflict
  OPTIONAL {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/Event> .
    ?force <http://dbpedia.org/property/event> ?war .
  }
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find Thinkhaya's child
  ?thinkhayaChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: Predecessor of Thinkhaya's child
  ?predecessor <http://dbpedia.org/ontology/successor> ?thinkhayaChild .

  # Step 3: Find Thihapate of Mohnyin's reference
  ?thihapate <http://www.w3.org/2004/02/skos/core#exactMatch> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  
  # Step 4: Child of Thihapate who is an office holder and royalty
  ?thihapateChild <http://dbpedia.org/ontology/father> ?thihapate ;
                  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/OfficeHolder> <http://dbpedia.org/ontology/Royalty>) .

  # Step 5: Child of the predecessor
  ?child <http://dbpedia.org/ontology/father> ?predecessor .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?prodiParty ?pintoParty ?andreottiParty WHERE {
  # Find Romano Prodi's birth name
  <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2006/vcard/ns#fn> ?birthName .

  # Find an office holder and politician with the same birth name
  ?person <http://www.w3.org/2006/vcard/ns#fn> ?birthName .
  ?person <http://dbpedia.org/ontology/politician> [] .
  ?person <http://dbpedia.org/ontology/officeHolder> [] .

  # Get the party of this person
  OPTIONAL { ?person <http://dbpedia.org/property/party> ?prodiParty . }

  # Get the party of Michele Pinto
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/property/party> ?pintoParty .
  }

  # Get the party of Giulio Andreotti
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/property/party> ?andreottiParty .
  }
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?mayorAlmaMater ?awardeeAlmaMater WHERE {
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politician> _:politician .
    ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
  
  OPTIONAL {
    ?award <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Royal_Medals> .
    ?award <http://purl.org/dc/terms/references> ?reference .
    ?awardee <http://dbpedia.org/ontology/recipient> ?award .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
SELECT ?grandchild1 ?parentOfNative ?grandparent WHERE {
  # Step 1: Find the child of Archduke Joseph Karl of Austria
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: Find the grandchild (child of this child)
  ?grandchild1 <http://dbpedia.org/ontology/birthParent> ?child1 .

  # Step 3: Identify a settlement at elevation 96.0
  ?settlement <http://www.w3.org/2006/vcard/ns#hasAltitude> ""96.0""^^xsd:float .
  
  # Find a native of this settlement
  ?native <http://dbpedia.org/ontology/birthPlace> ?settlement .

  # Determine the parent of this native
  ?parentOfNative <http://dbpedia.org/ontology/birthChild> ?native .

  # Step 4: Identify the child of Archduke Joseph Francis of Austria
  ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Step 5: Find the grandparent (parent of this child)
  ?grandparent <http://dbpedia.org/ontology/birthChild> ?child2 .

  # Final condition: The entity must satisfy both conditions
  FILTER (?grandchild1 = ?parentOfNative && ?grandchild1 = ?grandparent)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band
  ?band rdf:type dbo:Band ;
        dbo:member <http://dbpedia.org/resource/Fredrik_Thordendal> ;
        rdf:type dbo:Group, dbo:Organization .

  # Step 2: Find Donald Maynard Dokken's associated musical artists
  ?dokkenPerson foaf:name ""Donald Maynard Dokken"" ;
                rdf:type dbo:MusicalArtist .
  ?dokkenPerson dbo:associatedBand ?dokkenBand .
  ?dokkenBand dbo:associatedMusicalArtist ?dokkenArtist .

  # Step 3: Find Watchtower's associated musical artist
  <http://dbpedia.org/resource/Watchtower_(band)> dbo:associatedMusicalArtist ?watchtowerArtist .
  
  # Step 4: Find the associated musical artist of the watchtowerArtist
  ?watchtowerArtist dbo:associatedMusicalArtist ?intermediateArtist .

  # Step 5: Find the associated musical artist of the band member from step 1
  ?band dbo:associatedMusicalArtist ?finalArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT ?decedent1 ?decedent2 WHERE {
  OPTIONAL {
    # Find the author of ""French Algeria""
    ?book <http://dbpedia.org/ontology/author> ?author .
    ?book <http://purl.org/dc/terms/title> ""French Algeria"" .
    
    # Get a work associated with this author
    ?work <http://dbpedia.org/property/creator> ?author .
    
    # Find the person decedent related to this work
    ?work <http://dbpedia.org/ontology/personDecedent> ?decedent1 .
  }
  
  OPTIONAL {
    # Identify the capital of Algeria
    <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
    
    # Ensure it is a settlement
    ?capital <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000001> .
    
    # Find the person decedent related to this capital
    ?capital <http://dbpedia.org/ontology/personDecedent> ?decedent2 .
  }
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent ?spouse WHERE {
  OPTIONAL {
    # Step 1: Find commander in Battle of Panium
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Panium>) .

    # Step 2: Find child of the commander
    ?commander <http://dbpedia.org/ontology/child> ?child .

    # Step 3: Determine parent of this child (should be the commander)
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?parentLabel .
    FILTER(?parentLabel = ?commanderLabel) .
    BIND(?commander AS ?parent)
  }
  
  OPTIONAL {
    # Step 4: Find children of Antiochus III the Great
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?antiochusChild .

    # Step 5: Find spouse of one of these children
    ?antiochusChild <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",5,5,6,3,2,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
SELECT ?professional WHERE {
  # Step 1: Find the actor of ""Unnatural (TV series)""
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
  
  # Step 2: Get the profession of this actor
  ?actor <http://dbpedia.org/ontology/profession> ?profession .

  # Step 3: Find an alumnus of Ohio State University and their birth name
  ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> .
  ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 4: Find a professional in the same profession as the actor
  ?professional <http://dbpedia.org/ontology/profession> ?profession .
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?commander ?claimToFame WHERE {
  # Find wars associated with Carl Pontus Gahn
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
  
  # Ensure the war is a military conflict, societal event, and an event involving Thomas Trigge
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
       rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
       rdf:type <http://dbpedia.org/ontology/Event> .
  
  # Find the commander of Thomas Trigge in this war
  ?war <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/resource/Thomas_Trigge> .

  # Retrieve the claim to fame for the commander
  ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify The Shadow's true self or alter ego
  ?shadow <http://dbpedia.org/ontology/alterEgo> ?trueSelf .
  
  # Step 2: Find the professional in Rapper who is the true self of The Shadow
  ?rapper a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> ;
          <http://dbpedia.org/ontology/alias> ?trueSelf .
  
  # Step 3: Determine the musical work produced by this rapper
  ?work a <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song> ;
        <http://dbpedia.org/ontology/producer> ?rapper .
  
  # Step 4: Identify the writer of ""40 Dayz & 40 Nightz""
  ?writer a <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> ;
          <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  
  # Step 5: Find the associated musical artist of this writer
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?grandchildRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  OPTIONAL {
    # Resting place of the child's child (grandchild) of William Haliburton
    ?childOfHaliburton <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?childOfHaliburton .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }
  
  OPTIONAL {
    # Resting place of Alan Cunningham
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/deathPlace> ?alanCunninghamRestingPlace .
  }

  OPTIONAL {
    # Resting place of the actor in ""Enemy at the Door""
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","```sparql
SELECT ?force ?battleMilitaryForce ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryService> ?service .
    ?service <http://dbpedia.org/property/force> ?force .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryForce> ?battleMilitaryForce .
    ?battleMilitaryForce <http://dbpedia.org/ontology/war> ?war .
  }
}
```",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  # Step 1: Find Joseph Michael's birth name
  ?person rdfs:label ""Joseph Michael""@en .
  ?person dbp:birthName ?josephBirthName .

  # Step 2: Identify band member of Nevermore who is an artist
  ?artist rdfs:label ?name .
  ?artist dbo:bandMember <http://dbpedia.org/resource/Nevermore> .
  ?artist a dbo:Artist .

  # Step 3: Find actor of Return to Nuke 'Em High Volume 1 and their birth name
  ?actor rdfs:label ?actorName .
  ?actor dbo:film <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> .
  ?actor dbp:birthName ?actorBirthName .

  # Step 4: Find associated musical artist of the actor
  ?musicalArtist rdfs:label ?artistName .
  ?musicalArtist dbo:associatedMusicalArtist ?actor .

  # Step 5: Determine common band
  ?bandMember a dbo:Band ;
              dbo:bandMember ?artist, ?musicalArtist .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?parentIlona ?nativeLandmark ?grandChildLadislaus WHERE {
  # Parent of Archduchess Ilona of Austria
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentIlona .
  }

  # Native of a landmark at elevation 96.0
  OPTIONAL {
    ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?landmark <http://dbpedia.org/ontology/location> ?settlement .
    ?native <http://dbpedia.org/ontology/birthPlace> ?landmark .
    BIND(?native AS ?nativeLandmark)
  }

  # Child of the child of the parent, that is royalty, of Archduke Ladislaus Philipp
  OPTIONAL {
    ?parentLadislaus <http://www.w3.org/2006/vcard/ns#hasParent> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
    FILTER(?parentLadislaus <http://dbpedia.org/ontology/Royalty>)
    ?childLadislaus <http://www.w3.org/2006/vcard/ns#hasParent> ?parentLadislaus .
    ?grandChildLadislaus <http://www.w3.org/2006/vcard/ns#hasParent> ?childLadislaus .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"```sparql
SELECT ?party ?entity WHERE {
  OPTIONAL {
    # Find the commander of the United States invasion of Panama who is a politician
    ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commander <http://dbpedia.org/property/politicalParty> ?party .
  }
  
  OPTIONAL {
    # Find the country of El Valle de Antón and entities within that country
    <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://www.w3.org/2004/02/skos/core#inScheme> ?country .
    ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> ;
            <http://www.w3.org/2004/02/skos/core#inScheme> ?country .
  }
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actorRestingPlace ?burtonRestingPlace ?knightRestingPlace WHERE {
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STRSTARTS(LCASE(?movie), ""enemy at the door""))
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .
  }

  OPTIONAL {
    ?person <http://dbpedia.org/property/honours> ?honour .
    FILTER(STRSTARTS(LCASE(?honour), ""knight grand cross of the order of st michael and st george""))
    ?person <http://dbpedia.org/ontology/deathPlace> ?knightRestingPlace .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  # Step 1: Find commanders in Battle of Verdun
  ?verdunCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Verdun> .
  
  # Step 2: Find wars where these commanders were involved
  ?war <http://dbpedia.org/ontology/commander> ?verdunCommander .

  # Step 3: Ensure the war is a military conflict and an event
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
  ?war rdf:type <http://dbpedia.org/ontology/Event> .
}
```",3,5,4,3,1,3,3,71,0,0,92,0,0.0,0
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?father WHERE {
  # Step 1: Identify Princess Olga's parent(s)
  ?olgaParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Olga_of_Greece_and_Denmark> .

  # Step 2: Find the child of this parent
  ?olgaParentChild <http://dbpedia.org/ontology/child> ?olgaParent .

  # Step 3: Ensure this child is also a child of George I of Greece
  ?georgeIChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/George_I_of_Greece> .
  FILTER (?olgaParentChild = ?georgeIChild)

  # Step 4: Retrieve the father of this child
  ?olgaParentChild <http://dbpedia.org/ontology/father> ?father .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager ?almaMater WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/property/manager> ?manager .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER (CONTAINS(LCASE(?label), ""japan""))
    ?almaMater <http://dbpedia.org/ontology/type> ?type1 .
    ?almaMater <http://dbpedia.org/ontology/type> ?type2 .
    ?almaMater <http://dbpedia.org/ontology/type> ?type3 .
    FILTER (
      (CONTAINS(LCASE(?type1), ""organization"") && CONTAINS(LCASE(?type2), ""university"") && CONTAINS(LCASE(?type3), ""educational institution""))
      || 
      (CONTAINS(LCASE(?type1), ""organization"") && CONTAINS(LCASE(?type3), ""university"") && CONTAINS(LCASE(?type2), ""educational institution""))
      ||
      (CONTAINS(LCASE(?type2), ""organization"") && CONTAINS(LCASE(?type1), ""university"") && CONTAINS(LCASE(?type3), ""educational institution""))
      ||
      (CONTAINS(LCASE(?type2), ""organization"") && CONTAINS(LCASE(?type3), ""university"") && CONTAINS(LCASE(?type1), ""educational institution""))
      ||
      (CONTAINS(LCASE(?type3), ""organization"") && CONTAINS(LCASE(?type1), ""university"") && CONTAINS(LCASE(?type2), ""educational institution""))
      ||
      (CONTAINS(LCASE(?type3), ""organization"") && CONTAINS(LCASE(?type2), ""university"") && CONTAINS(LCASE(?type1), ""educational institution""))
    )
  }
}
```",3,7,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?mitAlumnusFatherParty ?michelePintoParty ?romanoProdiParty WHERE {
  # Part 1: Party of the father of an alumnus of MIT
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/memberOf> ?party .
    BIND(?party AS ?mitAlumnusFatherParty)
  }

  # Part 2: Party of Michele Pinto
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/memberOf> ?michelePintoParty .
  }

  # Part 3: Party of Romano Prodi
  OPTIONAL {
    ?prodi <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en ;
           <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
    ?prodi <http://dbpedia.org/ontology/memberOf> ?romanoProdiParty .
  }
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?heatherWar ?knightWar ?birthCountry WHERE {
  OPTIONAL {
    # Heather Roy's military unit and associated war
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession <http://dbpedia.org/ontology/MilitaryUnit) .
    ?profession <http://dbpedia.org/property/war> ?heatherWar .
  }
  
  OPTIONAL {
    # Knight Grand Cross of the Order of the Bath and associated war
    ?knight <http://dbpedia.org/ontology/title> ?title .
    FILTER(CONTAINS(LCASE(str(?title)), ""knight grand cross of the order of the bath"")) .
    ?knight <http://dbpedia.org/property/war> ?knightWar .
  }
  
  OPTIONAL {
    # Bob Heffron's birthplace country
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER(?birthPlace a <http://dbpedia.org/class/yago/Country108069>) .
    BIND(str(?birthPlace) AS ?birthCountry)
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?professional ?spouse WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
    ?entity <http://purl.org/dc/terms/subject> ?profession .
    ?entity <http://xmlns.com/foaf/0.1/name> ?professional .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Ted McGinley"" .
    ?person <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",5,5,6,3,2,3,3,71,0,819667,1,0.0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?manager ?nativeCountry WHERE {
  OPTIONAL {
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    FILTER(STRSTARTS(STR(?election), ""2010 Japanese House of Councillors election""))
    
    ?leader <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2002/07/owl#sameAs> ?country .
    FILTER(EXISTS { ?country a <http://dbpedia.org/ontology/Country> })
    BIND(?country AS ?nativeCountry)
  }
  
  OPTIONAL {
    ?team <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    
    ?team <http://dbpedia.org/ontology/teamManager> ?manager .
  }
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?emilioMolaCommander ?francoMilitaryForce ?prietoPredecessorMilitaryForce WHERE {
  OPTIONAL {
    ?event1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
    ?event1 <http://dbpedia.org/property/militaryForce> ?emilioMolaCommander .
  }
  
  OPTIONAL {
    ?event2 rdf:type <http://dbpedia.org/ontology/SocietalEvent> ;
            rdf:type <http://dbpedia.org/ontology/MilitaryConflict> ;
            <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
    ?event2 <http://dbpedia.org/property/militaryForce> ?francoMilitaryForce .
  }
  
  OPTIONAL {
    ?prietoPredecessor <http://www.w3.org/wiki/Indalecio_Prieto#Predecessor> ?indalecioPrieto .
    ?event3 rdf:type <http://dbpedia.org/ontology/SocietalEvent> ;
            rdf:type <http://dbpedia.org/ontology/MilitaryConflict> ;
            <http://dbpedia.org/ontology/commander> ?prietoPredecessor .
    ?event3 <http://dbpedia.org/property/militaryForce> ?prietoPredecessorMilitaryForce .
  }
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Identify the military conflict involving Frédéric-Georges Herr as a commander
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> .
  
  # Step 2: Find the author of ""French Algeria""
  ?author <http://purl.org/dc/terms/title> ""French Algeria""@en .

  # Step 3: Identify a person who died at the location associated with the author
  ?decedent1 <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  ?deathPlace <http://www.w3.org/2000/01/rdf-schema#label> ?authorLabel .

  # Step 4: Determine the capital of Khemis Miliana District
  ?district <http://dbpedia.org/property/country> ?country .
  ?capital <http://dbpedia.org/ontology/administrativeUnit> ?district .
  
  # Step 5: Identify a person who died in this capital city
  ?decedent2 <http://dbpedia.org/ontology/deathPlace> ?capital .

  # Final step: Ensure the commander is linked to the war identified
  ?commander <http://dbpedia.org/ontology/commander> ?war .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?childOfThinkhaya WHERE {
  # Step 1: Child of Thinkhaya of Pagan
  ?thinkhayaChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: Parent of the child of the parent of Thado Minsaw of Prome
  ?thadoMinsawParent <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?childOfThadoMinsawParent <http://dbpedia.org/ontology/birthParent> ?thadoMinsawParent .
  ?parentOfChildOfThadoMinsawParent <http://dbpedia.org/ontology/birthChild> ?childOfThadoMinsawParent .

  # Step 3: Predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin
  ?thihapateChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?thihapateChild <http://www.w3.org/2002/07/owl#sameAs> ?officeHolderRoyalty .
  ?officeHolderRoyalty a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .
  
  ?predecessor <http://dbpedia.org/ontology/successor> ?thihapateChild .

  # Final condition: The child of Thinkhaya must match the parent from step 2 and predecessor from step 3
  FILTER (?thinkhayaChild = ?parentOfChildOfThadoMinsawParent && ?thinkhayaChild = ?predecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
SELECT ?entityInBadenWurttemberg ?alterEgo ?almaMater WHERE {
  OPTIONAL {
    ?entity <http://www.geonames.org/ontology#locatedWithin> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
    ?entity <http://dbpedia.org/ontology/name> ?entityInBadenWurttemberg .
  }
  
  OPTIONAL {
    ?fictionalCharacter <http://dbpedia.org/property/personaOf> <http://dbpedia.org/resource/Matthew_Burland> .
    ?fictionalCharacter <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  }

  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/administration> ?entity .
    ?administration <http://dbpedia.org/property/person> <http://dbpedia.org/resource/George_Kilbon_Nash> .
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?conflict WHERE {
  ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
  ?conflict <http://dbpedia.org/ontology/eventParticipant> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> .
  ?conflict <http://dbpedia.org/ontology/eventParticipant> ?person .
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?authorReference ?nativePlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Blinded_by_the_Light_(film)> <http://dbpedia.org/property/author> ?author .
    ?author <http://xmlns.com/foaf/0.1/page> ?authorReference .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Settlements1000000075> .
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/birthPlace> ?nativePlace .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"```sparql
SELECT ?currentManager WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/teamManager> ?manager .
    ?manager <http://dbpedia.org/ontology/teamManaged> ?team .
    ?team <http://dbpedia.org/ontology/currentManager> ?currentManager .
    ?currentManager <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""sports manager""))
    OPTIONAL {
      ?currentManager <http://dbpedia.org/property/nationality> ?nationality .
      FILTER(CONTAINS(LCASE(STR(?nationality)), ""japan"") || CONTAINS(LCASE(STR(?nationality)), ""japanese""))
    }
  }
}
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?grandchild ?siblingChild ?father WHERE {
  # Step 1: Find children of Christian IX
  ?childOfChristian <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Christian_IX_of_Denmark> .

  # Step 2: Find grandchildren (children of the child)
  ?grandchild <http://dbpedia.org/ontology/parent> ?childOfChristian .

  # Step 3: Identify parent of Princess Olga
  ?parentOfOlga <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Olga_of_Greece_and_Denmark> .

  # Step 4: Find a child of that parent (could be Olga or another sibling)
  ?siblingChild <http://dbpedia.org/ontology/parent> ?parentOfOlga .

  # Step 5: Determine the father of this child
  ?father <http://dbpedia.org/ontology/spouse> ?mother .
  ?mother <http://dbpedia.org/ontology/child> ?siblingChild .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?commonBandMember WHERE {
  # Step 1: Band member of San Francisco Symphony
  ?symphony <http://dbpedia.org/ontology/member> ?sfSymphonyMember .

  # Step 2: Bands associated with Newsted
  ?newsted <http://dbpedia.org/ontology/memberOfBand> ?bandNewsted .

  # Step 3: Producer of ""Used to Love Her""
  ?usedToLoveHer <http://dbpedia.org/property/producer> ?producer .
  
  # Check if the producer is part of a band
  OPTIONAL { 
    ?producer <http://dbpedia.org/ontology/memberOfBand> ?bandProducer .
  }

  # Step 4: Find common band member across these entities
  ?sfSymphonyMember <http://dbpedia.org/ontology/memberOfBand> ?commonBand .
  ?bandNewsted = ?commonBand .
  OPTIONAL { 
    ?bandProducer = ?commonBand .
  }
  
  BIND(?sfSymphonyMember AS ?commonBandMember)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actorRestingPlace ?jamesBurtonRestingPlace ?awardeeRestingPlace WHERE {
  OPTIONAL {
    # Resting place of the actor in ""Enemy at the Door""
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STR(?film) = ""http://dbpedia.org/resource/Enemy_at_the_Door"")
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
  
  OPTIONAL {
    # Resting place of James Burton (Egyptologist)
    ?jamesBurton a <http://dbpedia.org/ontology/Egyptologist> ;
                 <http://dbpedia.org/ontology/birthName> ""James Burton"" ;
                 <http://dbpedia.org/ontology/deathPlace> ?jamesBurtonRestingPlace .
  }
  
  OPTIONAL {
    # Resting place of the awardee of Gerald Graham's award
    ?geraldGraham <http://dbpedia.org/property/award> ?award .
    ?recipient <http://dbpedia.org/ontology/receivedAward> ?award ;
               <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,6,1,0.0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceSaito ?deathPlaceGrandfather WHERE {
  OPTIONAL {
    # Find Saitō Hajime's birthplace
    <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceSaito .
    
    # Identify the military conflict where he was a commander
    OPTIONAL {
      ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
      ?conflict <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
      FILTER (CONTAINS(STR(?militaryConflict), ""Military conflict"") && CONTAINS(STR(?militaryConflict), ""Event"") && CONTAINS(STR(?militaryConflict), ""Societal event""))
    }
  }

  OPTIONAL {
    # Find Matsudaira Tadamasa's father
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
    
    # Identify the office holder role of this father
    ?father <http://dbpedia.org/ontology/officeHolder> ?officeHolderRole .

    # Find the grandfather (politician)
    ?father <http://dbpedia.org/ontology/father> ?grandfather .
    FILTER EXISTS { ?grandfather <http://dbpedia.org/ontology/politician > true }

    # Retrieve the death place of this grandfather
    ?grandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlaceGrandfather .
  }
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
SELECT ?force ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?force .
  }
  
  OPTIONAL {
    ?event a <http://dbpedia.org/ontology/SocietalEvent> ;
           <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
    ?militaryForce <http://dbpedia.org/ontology/event> ?event .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
  }
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?deathPlace ?administration WHERE {
  OPTIONAL {
    # Death place of Yūki Hideyasu's father who is a politician
    <http://dbpedia.org/resource/Yuki_Hideyasu> <http://xmlns.com/foaf/0.1/family_name> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Administration of Tokugawa Masako's spouse's father who is royalty
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://xmlns.com/foaf/0.1/spouse> ?spouse .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?spouse <http://xmlns.com/foaf/0.1/family_name> ?fatherOfSpouse .
    ?fatherOfSpouse <http://dbpedia.org/property/administration> ?administration .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
SELECT ?partitoPopolareReference ?fatherParty ?prodiParty WHERE {
  # Reference to Partito Popolare Italiano
  <http://dbpedia.org/resource/Partito_Popolare_Italiano> ?partitoPopolareReference .

  # Party of the father of an alumnus of MIT
  ?alumnus <http://www.w3.org/2006/vcard/ns#hasParent> ?father .
  ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  ?father <http://dbpedia.org/property/politicalParty> ?fatherParty .

  # Party of Romano Prodi
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalAffiliation> ?prodiParty .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?member WHERE {
  # Find members of Mortician who are also artists
  <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Check if the same member is part of Malevolent Creation
  OPTIONAL {
    <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/member> ?member .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?countryEntity ?regionEntity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Western_European_Time> <http://www.w3.org/2006/vcard/ns#location> ?location .
    ?location <http://dbpedia.org/ontology/country> ?country .
    ?country <http://www.w3.org/2000/01/rdf-schema#label> ?countryEntity .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?regionLabel .
    ?birthPlace <http://dbpedia.org/ontology/location> ?regionEntity .
  }
}
```",4,6,5,2,2,2,3,28,0,1,357,0.0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?burtonRestingPlace ?cadellRestingPlace ?knightRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?cadellRestingPlace .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/orderOfStMichaelAndStGeorge> ""Knight Grand Cross of the Order of St Michael and St George"" .
    ?person <http://dbpedia.org/ontology/deathPlace> ?knightRestingPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?authorDecedent ?algiersDecedent ?francoHovaCommander WHERE {
  # Step 1: Find author of ""French Algeria""
  ?work <http://dbpedia.org/ontology/author> ?author .
  FILTER(STR(?work) = ""http://dbpedia.org/resource/French_Algeria"")

  # Step 2: Find decedent place of the author
  OPTIONAL {
    ?author <http://dbpedia.org/ontology/deathPlace> ?decedentPlace .
    ?person <http://dbpedia.org/ontology/deathPlace> ?decedentPlace .
    BIND(?person AS ?authorDecedent)
  }

  # Step 3: Find person decedent at Algiers
  OPTIONAL {
    ?algiersPerson <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
    BIND(?algiersPerson AS ?algiersDecedent)
  }

  # Step 4: Find commander in Franco-Hova Wars
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/nationality> ?nationality .
    ?war <http://dbpedia.org/property/commander> ?commander .
    FILTER(STR(?war) = ""http://dbpedia.org/resource/Franco-Hova_Wars"")
    BIND(?commander AS ?francoHovaCommander)
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Narapati I of Ava's child
  ?narapatiChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  
  # Step 3: Soe Min Wimala Dewi's father
  ?soeminFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .

  # Linking Narapati I of Ava's child to Soe Min Wimala Dewi's father
  ?narapatiChild <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?soeminFather .

  # Step 4: Predecessor of Thihapate's child
  ?thihapateChild <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?actorMusicalArtist ?furneyBand WHERE {
  OPTIONAL {
    # Find the actor of ""Return to Nuke 'Em High Volume 1""
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?movie <http://dbpedia.org/property/title> ""Return to Nuke 'Em High Volume 1"" .
    
    # Ensure the actor is an artist
    ?actor <http://www.w3.org/2000/01/rdf-schema#label> ?actorName .
    ?actor <http://dbpedia.org/ontology/birthName> ?birthName .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

    # Find associated musical artists
    ?actor <http://dbpedia.org/property/associatedBandMember> ?actorMusicalArtist .
  }
  
  OPTIONAL {
    # Find the band associated with Joseph Michael Furney
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael Furney"" .
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
    
    # Retrieve any band association
    ?person <http://dbpedia.org/property/currentMemberOfBand> ?furneyBand .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin's children who are office holders and royalty
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
  
  # Ensure the child is both an OfficeHolder and Royalty
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 2: Find the predecessor of these children in their office
  ?child <http://dbpedia.org/property/predecessor> ?predecessor .
}
```",3,5,4,3,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"```sparql
SELECT ?awardee ?commander ?deceased WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://www.w3.org/2004/02/skos/core#subject> ?award .
    ?award <http://purl.org/dc/terms/creator> ?awardee .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Spanish_Civil_War> ;
            <http://www.w3.org/2004/02/skos/core#subject> <http://dbpedia.org/resource/Commander> .
    BIND(?person AS ?commander)
  }
  
  OPTIONAL {
    ?deceased <http://dbpedia.org/ontology/deathPlace> ?deathLocation .
    ?house <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""House of Sombrerete"" .
    FILTER(?deathLocation = ?house)
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
SELECT ?administrationEntity WHERE {
  OPTIONAL {
    # Step 1: Identify the writer of ""Where It's At"" (Dustin Lynch album)
    ?album <http://dbpedia.org/ontology/artist> ?writer .
    FILTER(STR(?album) = ""Where_It's_At_(Dustin_Lynch_album)"")

    # Step 2: Find the settlement related to this writer
    ?writer <http://dbpedia.org/ontology/birthPlace> ?settlement .
    
    # Step 3: Get administration entity of the settlement
    ?settlement <http://www.w3.org/ns/org#hasSubOrganization> ?administrationEntity .

    # Ensure it's a settlement
    ?settlement <http://www.w3.org/2002/07/owl#sameAs> ?settlementSameAs .
    FILTER(STR(?settlementSameAs) = ""Settlement"")
  }
  
  OPTIONAL {
    # Step 4: Identify Matthew Burland's alter ego
    ?burland <http://dbpedia.org/ontology/fictionalAlterEgo> ?alterEgo .

    # Ensure it's a fictional character
    ?alterEgo <http://www.w3.org/2002/07/owl#sameAs> ?fictionalCharacter .
    FILTER(STR(?fictionalCharacter) = ""Fictional_Character"")

    # Step 5: Find reference to this alter ego in relation to the administration entity
    ?administrationEntity <http://dbpedia.org/ontology/reference> ?alterEgoReference .
    FILTER(?alterEgoReference = ?alterEgo)
  }
}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?grandchildRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child's child of William Haliburton
  OPTIONAL {
    ?childOfWilliam <http://dbpedia.org/ontology/birth> ?williamHaliburton .
    ?williamHaliburton <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/William_Haliburton> .
    
    ?grandchild <http://dbpedia.org/ontology/birth> ?childOfChild .
    ?childOfChild <http://dbpedia.org/ontology/birth> ?childOfWilliam .
    
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }
  
  # Resting place of the actor in a show with Emily Richard
  OPTIONAL {
    ?show <http://dbpedia.org/property/starring> ?emilyRichard .
    ?emilyRichard <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/resource/Emily_Richard> .

    ?actor <http://dbpedia.org/ontology/starring> ?show .
    
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?deathPlace ?administration ?battleLocation WHERE {
  OPTIONAL {
    # Death place of the author of ""The Twelve Abbots of Challant""
    ?book <http://dbpedia.org/ontology/author> ?author .
    ?book <http://dbpedia.org/property/title> ""The Twelve Abbots of Challant"" .
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Administration of the ruling party in Sicily
    ?party <http://www.w3.org/2002/07/owl#sameAs> ?rulingParty .
    ?rulingParty <http://dbpedia.org/property/administration> ?administration .
    ?party <http://www.w3.org/2000/01/rdf-schema#label> ""political party"" ;
           <http://www.w3.org/2002/07/owl#sameAs> ?organization .
    ?organization <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sicily> .
  }
  
  OPTIONAL {
    # Location of the Battle of Marengo
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/property/location> ?battleLocation .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person ?band WHERE {
  # Find person born on 1985-04-29
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  }
  
  # Find band of the writer(s) of Apollo (Hardwell song)
  OPTIONAL {
    ?song <http://purl.org/dc/terms/creator> ?writer .
    ?song <http://dbpedia.org/ontology/song> ""Apollo_(Hardwell_song)"" .
    ?writer <http://dbpedia.org/property/band> ?band .
  }
}
```",3,3,4,2,2,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital ?restingPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://www.geonames.org/ontology#capital> ?capital .
  }
  OPTIONAL {
    ?award <http://dbpedia.org/property/awardee> ?person .
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
    FILTER EXISTS { 
      ?show <http://www.w3.org/2000/01/rdf-schema#label> ""Soviet Union"" .
      ?award <http://purl.org/dc/terms/relation> ?show .
    }
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  OPTIONAL { 
    ?alumnus <http://dbpedia.org/ontology/alumni> <http://dbpedia.org/resource/OHIO_State_University> .
    ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
  }
  
  OPTIONAL {
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Spouse> ;
            <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actress> .
    ?ted <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""^^<http://www.w3.org/2001/XMLSchema#string> .
    ?ted <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
         <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?member WHERE {
  # Alma Mater of Eiji Ōtsuka
  ?almaMater <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eiji_Ōtsuka> .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""university"") && CONTAINS(LCASE(?name), ""japanese""))
  
  # Leader of 2010 Japanese House of Councillors Election
  ?election <http://dbpedia.org/ontology/politician> ?leader .
  FILTER(STRSTARTS(STR(?election), ""http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election""))
  
  # Native Country of Leader
  ?leader <http://dbpedia.org/ontology/nationality> ?country .
  ?country <http://www.w3.org/2000/01/rdf-schema#label> ""Japan"" .

  # Manager of 2013 Júbilo Iwata Season
  ?manager <http://dbpedia.org/property/teamManager> <http://dbpedia.org/resource/Júbilo_Iwata> .
  FILTER(STRSTARTS(STR(?manager), ""http://dbpedia.org/resource/"")) .

  # Common Member
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#member> ?member .
  ?manager <http://www.w3.org/2000/01/rdf-schema#member> ?member .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Musical_artist> .
  ?person <http://dbpedia.org/property/alterEgo> ""The Shadow"" .
  
  ?work <http://purl.org/dc/terms/creator> ?person ;
        a <http://dbpedia.org/class/yago/MusicalWork108069068> , 
           <http://dbpedia.org/class/yago/Song106067786> ,
           <http://dbpedia.org/class/yago/Work108066936> .
  
  ?work <http://purl.org/dc/terms/producer> ?producer .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?administration ?birthPlace ?deathPlace WHERE {
  OPTIONAL {
    # Administration of the father of the spouse (royalty) of Tokugawa Masako
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?spouseLabel .
    FILTER(CONTAINS(LCASE(?spouseLabel), ""royalty"")) .
    ?spouse <http://dbpedia.org/property/father> ?fatherSpouse .
    ?fatherSpouse <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  OPTIONAL {
    # Birth place of the commander in Boshin War
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?commander <http://dbpedia.org/property/commanded> ?war .
    FILTER(CONTAINS(LCASE(?war), ""boshin war"")) .
  }
  
  OPTIONAL {
    # Death place of the father (politician) of the father (office holder) of Matsudaira Tadamasa
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?fatherOfficeHolder .
    ?fatherOfficeHolder <http://dbpedia.org/ontology/title> ?title .
    FILTER(CONTAINS(LCASE(?title), ""office holder"")) .
    ?fatherOfficeHolder <http://dbpedia.org/property/father> ?grandFatherPolitician .
    ?grandFatherPolitician <http://www.w3.org/2000/01/rdf-schema#label> ?politicianLabel .
    FILTER(CONTAINS(LCASE(?politicianLabel), ""politician"")) .
    ?grandFatherPolitician <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?otherChild .
  ?otherChild <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",4,4,5,2,2,3,2,20,0,0,2,0,0.0,0
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Identify 'Polish Horse'
  ?polishHorse a <http://dbpedia.org/ontology/MilitaryUnit> ;
               <http://www.w3.org/2004/02/skos/core#prefLabel> ""Polish Horse""@en .
  
  # Step 2: Find the war associated with 'Polish Horse'
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> , <http://dbpedia.org/ontology/SocialEvent> ;
       <http://dbpedia.org/property/involvesMilitaryUnit> ?polishHorse .
  
  # Step 3: Identify Arthur Wellesley's role
  ?welshWar a <http://dbpedia.org/ontology/MilitaryConflict> , <http://dbpedia.org/ontology/SocialEvent> ;
            <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  
  # Step 4: Find the force associated with Arthur Wellesley
  ?force a <http://dbpedia.org/ontology/MilitaryConflict> , <http://dbpedia.org/ontology/SocialEvent> ;
         <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> ;
         <http://dbpedia.org/property/involvesMilitaryUnit> ?welshWar .
  
  # Step 5: Identify Rutger Jan Schimmelpenninck's role
  ?schimmelpenninckForce a <http://dbpedia.org/ontology/MilitaryConflict> , <http://dbpedia.org/ontology/SocialEvent> ;
                         <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  
  # Step 6: Determine the military force of that force
  ?schimmelpenninckForce <http://dbpedia.org/ontology/involvesMilitaryUnit> ?militaryForce .
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?person ?commander WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/property/award> ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""volcano and ryukyu islands campaign"")) .
  
  OPTIONAL {
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    ?person <http://dbpedia.org/ontology/memberOf> ?force .
  }
}
```",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?result WHERE {
  # Step 1: Find Thinkhaya's child
  ?thinkhayasChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: Thinkhaya is the father of his own child, so we use him directly
  
  # Step 3: Find predecessor of Thinkhaya's child
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?thinkhayasChild .

  # Step 4: Reference to Thihapate of Mohnyin
  ?thihapateRef <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  
  # Step 5: Find the child that is an office holder and royalty of this reference
  ?officeHolderChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> ;
                     <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                     <http://dbpedia.org/ontology/parent> ?thihapateRef .

  # Step 6: Find the parent of Thado Minsaw of Prome
  ?thadoMinsawsParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  
  # Final step: Get the child of the predecessor (from Step 3) that matches the criteria from Step 5 and is related to Thado Minsaw's parent
  ?result <http://dbpedia.org/ontology/child> ?predecessor ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
          <http://dbpedia.org/ontology/parent> ?thihapateRef .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Identify the professional in Actor, narrator, and producer
  ?professional a <http://dbpedia.org/ontology/Actor> ;
                a <http://dbpedia.org/ontology/Narrator> ;
                a <http://dbpedia.org/ontology/Producer> .

  # Step 2: Find their claim to fame involving a film and military conflict
  ?fameClaim <http://dbpedia.org/ontology/film> ?film .
  ?fameClaim <http://dbpedia.org/ontology/militaryConflict> ?conflict .

  # Step 3: Identify the actor associated with these claims to fame
  ?actor a <http://dbpedia.org/ontology/Actor> ;
         <http://dbpedia.org/ontology/film> ?film ;
         <http://dbpedia.org/ontology/militaryConflict> ?conflict .

  # Step 4: Determine the native of France who is a politician and office holder
  ?politician a <http://dbpedia.org/ontology/Politician> ;
              <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> ;
              <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 5: Find their residence that is a settlement and British
  ?residence <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/resource/Settlement> ;
           <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .

  # Step 6: Finally, find the native of this residence
  ?native <http://dbpedia.org/ontology/nationality> ?residence .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?parentGéza ?grandChildParent ?childJosephAugust WHERE {
  # Parent of Géza von Habsburg
  OPTIONAL { 
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentGéza .
  }

  # Parent of the child of the parent of Archduchess Margaret of Austria (born 1925)
  OPTIONAL {
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentMargaret .
    ?parentMargaret <http://www.w3.org/2006/vcard/ns#hasChild> ?childOfParent .
    ?childOfParent <http://www.w3.org/2006/vcard/ns#hasParent> ?grandChildParent .
  }

  # Child of Archduke Joseph August of Austria
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_August_of_Austria> <http://www.w3.org/2006/vcard/ns#hasChild> ?childJosephAugust .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?person1985 ?bandApolloWriter ?bandShena WHERE {
  # Person born on 1985-04-29
  OPTIONAL {
    ?person1985 <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  }

  # Band of the writer of Apollo (Hardwell song)
  OPTIONAL {
    ?song <http://purl.org/dc/terms/creator> ?writerApollo ;
          <http://dbpedia.org/resource/Apollo_(Hardwell_song)> ?song .
    ?writerApollo <http://dbpedia.org/ontology/memberOfBand> ?bandApolloWriter .
  }

  # Band of the person born as the persona of Shèna
  OPTIONAL {
    ?shenaPerson <http://www.w3.org/2000/01/rdf-schema#label> ""Shèna"" ;
                 <http://dbpedia.org/ontology/memberOfBand> ?bandShena .
  }
}
```",6,6,7,3,3,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?birthPlace ?administration WHERE {
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Saito_Hajime> .
    ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
         a <http://dbpedia.org/class/yago/Event108069068> ;
         a <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Saito_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  OPTIONAL {
    ?spouse a <http://dbpedia.org/ontology/Royalty> ;
            <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> .
  }
  
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/spouse> ?spouse .
    ?administration <http://dbpedia.org/ontology/administration> ?father .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?commonEntity ?parent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?commonEntity .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://dbpedia.org/ontology/predecessor> ?commonEntity .
  }
  FILTER(?commonEntity != none)
  ?commonEntity <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?commander ?awardee ?agencyLeader WHERE {
  # Commander of Eastern Front (World War II)
  OPTIONAL { 
    <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .
  }
  
  # Awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  OPTIONAL {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/awardee> ?award .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
  }
  
  # Leader of a Government Agency Office
  OPTIONAL {
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/politicalPartyMember> ?party .
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/officeHolder> ?office .
    ?office <http://dbpedia.org/property/leader> ?agencyLeader .
    ?agencyLeader <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/resource/Government_agency> .
  }
}
```",6,9,7,3,3,3,3,71,1,62,0,0.015873015873015872,1.0,0.03125
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
SELECT ?birthPlace ?headquarter WHERE {
  # Get birthplace of Garret FitzGerald
  OPTIONAL { 
    <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  # Find the venue and architectural structure for the 2012 Pro12 Grand Final
  OPTIONAL {
    ?venue <http://dbpedia.org/property/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""2012 Pro12 Grand Final""@en .
    ?venue a <http://dbpedia.org/class/yago/Venue108069068> ; # Venue class
           a <http://dbpedia.org/class/yago/ArchitecturalStructure118067813> . # Architectural structure class
    
    # Find the owner of this venue
    ?venue <http://dbpedia.org/property/owner> ?owner .
    
    # Get headquarters of the owner
    ?owner <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
}
```",4,6,5,3,2,3,2,20,1,0,0,1.0,1.0,1.0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
# Step 1: Identify 'Polish Horse'
SELECT ?polishHorse WHERE {
  ?polishHorse <http://www.w3.org/2004/02/skos/core#prefLabel> ""Polish Horse""@en .
  ?polishHorse a <http://dbpedia.org/class/yago/MilitaryUnit100000001> ;
               a <http://dbpedia.org/ontology/Organisation> .
}

# Step 2: Find wars involving 'Polish Horse'
SELECT DISTINCT ?war WHERE {
  ?commander <http://dbpedia.org/property/commanded> ?polishHorse .
  ?commander <http://dbpedia.org/ontology/commanderOfMilitaryUnit> ?unit .
  ?unit <http://dbpedia.org/ontology/participatedInBattleOrWar> ?war .
  ?war a <http://dbpedia.org/class/yago/MilitaryConflict100000001> ;
       a <http://dbpedia.org/ontology/Event> .
}

# Step 3: Identify Arthur Wellesley's force
SELECT DISTINCT ?welForce WHERE {
  <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/property/commanded> ?welForce .
}

# Step 4: Identify Rutger Jan Schimmelpenninck's military force
SELECT DISTINCT ?schimForce WHERE {
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/militaryForce> ?schimForce .
  ?schimForce a <http://dbpedia.org/class/yago/MilitaryConflict100000001> ;
              a <http://dbpedia.org/ontology/SocialEvent> ;
              a <http://dbpedia.org/ontology/Event> .
}

# Step 5: Find common commander
SELECT DISTINCT ?commonCommander WHERE {
  ?commonCommander <http://dbpedia.org/property/commanded> ?polishHorse .
  ?commonCommander <http://dbpedia.org/property/commanded> ?welForce .
  ?commonCommander <http://dbpedia.org/ontology/militaryForce> ?schimForce .
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band
  ?band a <http://dbpedia.org/ontology/Band> ;
        <http://dbpedia.org/property/member> ?thordendal .
  ?thordendal foaf:name ""Fredrik Thordendal"" .

  # Step 2: Find a member of this band who is part of another band
  ?member a <http://dbpedia.org/ontology/BandMember> ;
          <http://dbpedia.org/property/member> ?band .
  ?otherBand a <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/Group>, <http://dbpedia.org/ontology/Organization> ;
             <http://dbpedia.org/property/member> ?member .

  # Step 3: Find the associated musical artist for ""Watchtower""
  ?watchtowerArtist a <http://dbpedia.org/ontology/MusicalArtist> ;
                    <http://dbpedia.org/ontology/reference> ?reference .
  ?reference foaf:name ""Watchtower"" .

  # Step 4: Find the associated musical artist of the band member
  ?memberArtist a <http://dbpedia.org/ontology/MusicalArtist> ;
                <http://dbpedia.org/property/associatedMusicalArtist> ?watchtowerArtist .
  
  # Final association
  ?finalArtist a <http://dbpedia.org/ontology/MusicalArtist> ;
               <http://dbpedia.org/property/associatedMusicalArtist> ?memberArtist .
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?restingPlace ?capital WHERE {
  # Step 1: Identify the awardee of a show in the Soviet Union
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> .
  
  # Step 2: Find the resting place of this awardee
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  
  # Step 3: Identify the military force related to Vyoshenskaya Uprising
  ?militaryForce <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> ;
                 a <http://dbpedia.org/ontology/Organisation>, <http://dbpedia.org/ontology/MilitaryUnit> .
  
  # Step 4: Determine the country of this military force
  ?militaryForce <http://dbpedia.org/ontology/country> ?country .
  
  # Step 5: Find the capital of that country
  OPTIONAL {
    ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  }
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?work ?region ?administeredTerritory WHERE {
  # Part 1: Work of the author of ""Iceland""
  OPTIONAL {
    ?book <http://dbpedia.org/ontology/author> ?author .
    ?book <http://purl.org/dc/terms/title> ""Iceland"" .
    ?author <http://www.w3.org/2002/07/owl#sameAs> ?work .
  }

  # Part 2: Region of the time zone in Bombali Shebora Chiefdom
  OPTIONAL {
    <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2006/vcard/ns#region> ?region .
  }

  # Part 3: Territory administered from ""Land of Fire and Ice"" (Iceland)
  OPTIONAL {
    <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/countryAdministered> ?administeredTerritory .
  }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?birthPlace ?headquarter WHERE {
  # Step 1: Find a politician native to Essex
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Essex> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Find the child of this politician who is also a politician and an office holder
  ?child <http://dbpedia.org/property/parent> ?politician .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Politician> <http://dbpedia.org/ontology/OfficeHolder>) .

  # Step 3: Get the birthplace of this child
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 4: Find the owner of RDS Arena and its headquarters
  OPTIONAL {
    <http://dbpedia.org/resource/RDS_Arena> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Step 1: Find children of Grand Duchess Elena Vladimirovna
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
}

# Step 2: Find the father of that child
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
}

# Step 3: Identify predecessor of Frederick VIII of Denmark
SELECT ?predecessor WHERE {
  <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .
}

# Step 4: Find children of the predecessor
SELECT ?child2 WHERE {
  ?predecessor <http://dbpedia.org/ontology/child> ?child2 .
}

# Step 5: Find child of that child (grandchild)
SELECT ?grandChild WHERE {
  ?child2 <http://dbpedia.org/ontology/child> ?grandChild .
}

# Note: The final step to find a common father would require additional historical context or assumptions.
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?nickname WHERE {
  # Step 1: Find Leonid Slutsky's team
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Lenid_Slutskiy> .
  
  # Step 2: Identify a player who became manager of this team
  ?player <http://dbpedia.org/ontology/teamManaged> ?team .
  
  # Step 3: Check if the player has any connection to an organization related to England
  ?org <http://dbpedia.org/ontology/player> ?player ;
       <http://www.w3.org/2006/vcard/ns#country-name> ""England""^^<http://www.w3.org/2001/XMLSchema#string> .
  
  # Step 4: Ensure the organization is a soccer club, sports club, and has a nickname
  ?org <http://dbpedia.org/ontology/sportsTeam> ?team ;
       <http://dbpedia.org/ontology/nickname> ?nickname .
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT ?actorProfession ?spouseProfession ?alumProfession WHERE {
  # Actor of ""Unnatural"" (TV series)
  OPTIONAL {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STR(?series) = ""http://dbpedia.org/resource/Unnatural_(TV_series)"")
    ?actor <http://purl.org/dc/terms/profession> ?actorProfession .
  }

  # Spouse of Ted McGinley
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://purl.org/dc/terms/profession> ?spouseProfession .
  }

  # Person born as the birth name of an alumnus of Ohio State University
  OPTIONAL {
    ?alum <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alum <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://purl.org/dc/terms/profession> ?alumProfession .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?peninsularWarCommanderWars ?crillonClaimToFame ?crillonWars ?gahnWars WHERE {
  OPTIONAL {
    # Wars of the commander in Peninsular War
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/warsFought> ?peninsularWarCommanderWars .
  }
  
  OPTIONAL {
    # Claim to fame and wars of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableWorks> ?crillonClaimToFame .
    ?crillon <http://dbpedia.org/ontology/warsFought> ?crillonWars .
  }
  
  OPTIONAL {
    # Wars of the person born as Carl Pontus Gahn
    <http://dbpedia.org/resource/C._P._Gahn> <http://www.w3.org/2006/vcard/ns#hasName> ""Carl Pontus Gahn"" .
    ?gahn <http://dbpedia.org/ontology/warsFought> ?gahnWars .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?awardee ?agencyLeader WHERE {
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?award <http://purl.org/dc/terms/description> ""Volcano and Ryukyu Islands campaign"" .
  }
  
  OPTIONAL {
    ?officeHolder <http://www.w3.org/ns/org#holds> ?office .
    ?officeHolder foaf:name ""Gustav Jonson"" .
    ?office <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Office_holder> .
    ?office <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Politician> .

    ?agency <http://www.w3.org/ns/org#hasPosition> ?position .
    ?position <http://www.w3.org/ns/org#post> ?office .
    ?agency a <http://dbpedia.org/resource/Government_agency> .

    ?leader <http://www.w3.org/ns/org#holds> ?leadershipPosition .
    ?leadershipPosition <http://www.w3.org/ns/org#post> ?agency .
    ?leader foaf:name ?agencyLeader .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?nickname ?actor ?native WHERE {
  # Step 1: Find the nickname of Jackson, Tennessee
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/ontology/nickName> ?nickname .

  # Step 2: Find a movie that is also a work and television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> ?work .
  ?movie <http://dbpedia.org/ontology/tvSeries> ?tvShow .

  # Find an actor of the movie
  ?actor <http://dbpedia.org/ontology/starring> ?movie .

  # Step 3: Determine the native associated with the nickname
  ?native <http://dbpedia.org/property/nickName> ?nickname .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find children of Archduke Joseph Karl of Austria
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .

  # Step 2: Find grandchildren (children of the child)
  ?grandchild <http://dbpedia.org/ontology/birthPlace> ?place .
  
  # Step 3: Identify settlements at elevation 96.0
  ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float .
  ?place <http://www.w3.org/2004/02/skos/core#exactMatch> ?settlement .

  # Step 4: Find the native landmark of that settlement
  ?landmark <http://dbpedia.org/ontology/nativeOf> ?native .
  ?native <http://dbpedia.org/ontology/birthPlace> ?place .

  # Step 5: Determine the parent of the native of this landmark
  ?native <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Merneptah's father
  ?merneptah <http://dbpedia.org/ontology/father> ?father .
  
  # Step 2: Find the spouse of Merneptah's father
  ?father <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Verify parentage of Henuttawy (19th dynasty)
  ?spouse <http://dbpedia.org/ontology/child> ?henuttawy .
  FILTER(CONTAINS(LCASE(?henuttawy), ""henuttawy""))

  # Step 4: Identify Amun-her-khepeshef's spouse
  ?amun_her_khepeshef <http://dbpedia.org/property/spouse> ?spouse2 .

  # Step 5: Find the child of Amun-her-khepeshef's spouse
  ?spouse2 <http://dbpedia.org/ontology/child> ?child .

  # Step 6: Verify parentage connection
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  
  FILTER(?merneptah = <http://dbpedia.org/resource/Merneptah>)
  FILTER(?amun_her_khepeshef = <http://dbpedia.org/resource/Amun-her-khepeshef>)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?deathPlace ?birthPlace WHERE {
  OPTIONAL {
    # Find Yūki Hideyasu's father who is a politician
    ?yuki <http://dbpedia.org/ontology/father> ?father .
    FILTER(?yuki = <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu>)
    ?father <http://www.w3.org/2000/01/rdf-schema#label> ""Yūki Hideyasu's Father"" .
    ?father <http://dbpedia.org/ontology/politician> [] .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Find the war involving Saitō Hajime as a commander
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?commander = <http://dbpedia.org/resource/Sait%C5%8D_Hajime>)
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
    ?militaryConflict a <http://dbpedia.org/class/yago/MilitaryConflicts100000001> .
    ?war a <http://dbpedia.org/ontology/Event> .
    ?war a <http://dbpedia.org/ontology/SocietalEvent> .
    
    # Find the birthplace of this commander
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryConflict WHERE {
  ?event rdf:type <http://dbpedia.org/ontology/SocietalEvent> .
  ?event rdf:type <http://dbpedia.org/ontology/Event> .
  ?event rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .

  ?event dbp:commanderIn ?welshCommander .
  ?welshCommander rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .

  ?event dbp:participatedIn ?schimmelpenninckParticipation .
  ?schimmelpenninckParticipation dbp:person <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

  BIND(?event AS ?militaryConflict)
}
```",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commander WHERE {
  OPTIONAL {
    ?officeHolder <http://dbpedia.org/ontology/nationality> ?native .
    ?officeHolder <http://dbpedia.org/ontology/officeHolder> ?office .
    ?office <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Kingdom_of_Ireland> .

    OPTIONAL {
      ?officeHolder <http://dbpedia.org/ontology/memberOfMilitaryForce> ?militaryForce .
      
      OPTIONAL {
        ?event <http://dbpedia.org/ontology/type> ?eventType .
        ?eventType <http://www.w3.org/2004/02/skos/core#broader> ?broadType .
        
        FILTER (?broadType IN (<http://dbpedia.org/resource/Societal_event>, <http://dbpedia.org/resource/Military_conflict>))
        
        ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
        ?event <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
      }
      
      ?militaryForce <http://dbpedia.org/ontology/commander> ?commander .
    }
  }
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?almaMater ?country WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?timeZone <http://www.w3.org/2006/time#during> ?region .
    ?country <http://www.geonames.org/ontology#locatedIn> ?region ;
              a <http://dbpedia.org/class/yago/Country108069627> .
    FILTER(?timeZone = <http://dbpedia.org/resource/Central_European_Time>)
  }
}
```",3,4,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?film ?actor WHERE {
  # Step 1: Find Sean Pertwee's claim to fame that is a film
  ?pertwee <http://dbpedia.org/ontology/film> ?film .
  
  FILTER(?pertwee = <http://dbpedia.org/resource/Sean_Pertwee>)
  FILTER(STRSTARTS(STR(?film), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?film a <http://dbpedia.org/ontology/Film> } )

  # Step 2: Find an actor from the film who is native to London
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ""London"" .

  # Step 3: Confirm Sean Pertwee is the child of John Devon Roland Pertwee
  OPTIONAL {
    ?pertwee <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee""@en .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Get actor from ""Return to Nuke 'Em High Volume 1""
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STRSTARTS(LCASE(?movie), ""return to nuke 'em high volume 1""))

  # Step 2: Find band of Joseph Michael
  ?joseph <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael"" .
  ?joseph <http://dbpedia.org/ontology/memberOf> ?band .

  # Step 3: Reference to Nevermore (2006 film)
  ?nevermoreFilm <http://dbpedia.org/ontology/reference> ?reference .
  FILTER(STRSTARTS(LCASE(?nevermoreFilm), ""nevermore"") && YEAR(?nevermoreFilm) = 2006)

  # Step 4: Find common associated musical artist
  OPTIONAL { ?actor <http://dbpedia.org/property/memberOf> ?associatedArtist . }
  OPTIONAL { ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> . FILTER(?band = ?associatedArtist) }
  OPTIONAL { ?reference <http://dbpedia.org/property/memberOf> ?associatedArtist . }

  # Ensure the artist is common across all parts
  FILTER(BOUND(?associatedArtist))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?native ?manager WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Japan> .
    ?person rdfs:label ?native .
    FILTER(LANG(?native) = 'en')
  }
  
  OPTIONAL {
    ?team <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    ?team <http://dbpedia.org/ontology/coach> ?manager .
    ?manager rdfs:label ?managerLabel .
    FILTER(LANG(?managerLabel) = 'en')
  }
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?prodiParty ?fatherParty WHERE {
  # Query for Romano Prodi's party
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?prodiType .
    FILTER (?prodiType IN (<http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Politician>)).
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/party> ?prodiParty .
  }
  
  # Query for the party of the father of an MIT alumnus
  OPTIONAL {
    ?alumnus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AlumniOf> ;
             <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/party> ?fatherParty .
  }
}
```",6,8,7,3,2,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee ?conflict WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/awardee> ?awardee .
  }
  
  OPTIONAL {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(STR(?battle) = ""Battle_of_Paris_(1814)"")
    
    ?conflict <http://dbpedia.org/ontology/commander> ?commander .
    FILTER NOT EXISTS { STR(?conflict) = ""Battle_of_Paris_(1814)"" }
  }
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","```sparql
SELECT ?member WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1958"" .
  ?person <http://dbpedia.org/property/teamManager> ?team .
  ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Takashi_Sekizuka> .

  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""japanese""))
  ?almaMater a <http://dbpedia.org/class/yago/YagoLegalEntity432> ; # Organization
             a <http://dbpedia.org/class/yago/YagoEducationalInstitution1000> ; # Educational Institution
             a <http://dbpedia.org/ontology/University> .

  ?almaMater <http://xmlns.com/foaf/0.1/member> ?member .
}
```",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","```sparql
SELECT ?grandParentOfMinLinka ?parentOfChildOfRamKhamhaeng WHERE {
  # Part 1: Parent of the Child of Ram Khamhaeng the Great
  OPTIONAL {
    ?child rdf:type <http://dbpedia.org/ontology/Person> .
    <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?parentOfChildOfRamKhamhaeng .
  }

  # Part 2: Parent of the Parent of the Parent of Min Linka
  OPTIONAL {
    ?minLinka rdf:type <http://dbpedia.org/ontology/Person> .
    <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?parentOfMinLinka .
    ?parentOfMinLinka <http://dbpedia.org/ontology/parent> ?grandParentOfMinLinka .
    ?grandParentOfMinLinka <http://dbpedia.org/ontology/parent> ?greatGrandParentOfMinLinka .
  }
}
```",6,6,7,3,2,3,2,20,0,1,1,0.0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?force ?chileWar ?commanderWar WHERE {
  OPTIONAL {
    ?narciso <http://dbpedia.org/ontology/commander> ?force .
    FILTER(?narciso = <http://dbpedia.org/resource/Narciso_Campero>)
  }
  
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
    ?event <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Chile> .
    ?event <http://dbpedia.org/ontology/conflict> ?chileWar .
  }
  
  OPTIONAL {
    # Placeholder for the third query, requires more context
    # Assuming a work with a specific date is involved
    ?work <http://purl.org/dc/terms/date> ""YYYY-MM-09""^^xsd:date .
    ?work <http://dbpedia.org/ontology/commander> ?commander .
    ?commanderWar <http://dbpedia.org/ontology/conflict> ?commanderWar .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
SELECT ?settlement ?alterEgo ?almaMater WHERE {
  OPTIONAL {
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?admin .
    ?admin rdf:type <http://dbpedia.org/class/yago/Settlement108069068> .
    BIND(?admin AS ?settlement)
  }
  
  OPTIONAL {
    ?burland <http://dbpedia.org/property/fictionalCharacter> ?character .
    ?character <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
  }

  OPTIONAL {
    ?nash <http://dbpedia.org/ontology/administrativeUnit> ?adminNash .
    ?adminNash <http://dbpedia.org/property/almaMater> ?almaMater .
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?province ?regionAguilar ?countryInRegion WHERE {
  # Province of Schio
  OPTIONAL { 
    <http://dbpedia.org/resource/Schio> <http://www.geonames.org/ontology#locatedIn> ?place .
    ?place <http://www.geonames.org/ontology#administrativeAreaLevel2> ?province .
  }

  # Region of the Time Zone for Aguilar de Segarra
  OPTIONAL {
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/property/timeZone> ?timeZone .
    ?timeZone <http://www.geonames.org/ontology#featureClass> ?regionAguilar .
  }

  # Entity in the Region, that is a Country, of Central European Time
  OPTIONAL {
    <http://dbpedia.org/resource/Central_European_Time> <http://www.geonames.org/ontology#featureClass> ?regionCET .
    ?country <http://www.geonames.org/ontology#locatedIn> ?placeInRegion .
    ?placeInRegion <http://www.geonames.org/ontology#featureClass> ?regionCET .
    ?country a <http://dbpedia.org/class/yago/Country108069465> .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?author ?album WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Blinded_by_the_Light> <http://purl.org/dc/terms/creator> ?author .
  }
  OPTIONAL {
    ?album <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Dave_Flett> .
    ?album <http://www.w3.org/2002/07/owl#sameAs> ?work .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?geraldGrahamRestingPlace ?jamesBurtonRestingPlace ?simonCadellRestingPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/deathPlace> ?geraldGrahamRestingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?jamesBurtonRestingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?simonCadellRestingPlace .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","```sparql
SELECT ?actor1 ?actor2 WHERE {
  # Part 1: Actor of Michael Ballhaus's claim to fame (work)
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/claimToFame> ?ballhaus .
    ?ballhaus foaf:name ""Michael Ballhaus"" .
    ?work dbo:starring ?actor1 .
  }

  # Part 2: Actor of a movie that is also a work and television show
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/work> ?work .
    ?movie <http://dbpedia.org/ontology/tvSeries> ?tvShow .
    ?movie dbo:starring ?actor2 .
  }
}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .

  # Step 2: Get the claim to fame (work) of the spouse
  ?spouse <http://dbpedia.org/property/claimToFame> ?work .

  # Step 3: Find actors associated with this work
  ?work <http://dbpedia.org/ontology/actor> ?actor .

  # Step 4: Identify Jackson, Tennessee's nickname
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickName> ?nickname .

  # Step 5: Determine the native of this nickname
  ?native <http://dbpedia.org/ontology/nationality> ?place .
  FILTER(?place = ?nickname)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?professional WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://www.w3.org/2006/vcard/ns#hasName> ?name .
    FILTER(CONTAINS(LCASE(?name), ""ted martin mcginley""))
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse1 .
  }
  
  OPTIONAL {
    ?alumnus <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Ohio_State_University> .
    ?alumnus <http://www.w3.org/2006/vcard/ns#hasName> ?birthName .
    ?alumnus <http://dbpedia.org/ontology/spouse> ?spouse2 .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?professional = ?person)
    
    UNION {
      ?person = ?spouse1
    }
    UNION {
      ?person = ?spouse2
    }
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","```sparql
SELECT ?native ?bandMember WHERE {
  # Step 1: Find birthplace of Samir Bekrić
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Find native of the birthplace
  OPTIONAL { 
    ?native <http://dbpedia.org/ontology/nativePlace> ?birthPlace .
  }

  # Step 3: Identify an awardee (assuming a specific award or entity is known)
  # This step requires more context about which awards or nominations are relevant.
  # For demonstration, let's assume we have an entity <http://dbpedia.org/resource/Some_Award>
  OPTIONAL {
    ?awardAwardee <http://purl.org/dc/terms/relation> <http://dbpedia.org/resource/Some_Award> .
  }

  # Step 4: Find band member of the awardee
  OPTIONAL {
    ?bandMember <http://dbpedia.org/ontology/bandMember> ?awardAwardee .
  }
}
```

Note: The query assumes a placeholder for ""Some Award"" in step 3, which would need to be replaced with an actual award or entity relevant to the context of the question. This part requires additional information about specific awards or nominations related to the entities involved.",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?individual ?predecessor WHERE {
  ?individual <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?individual <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .
  ?individual <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?individual <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  OPTIONAL { 
    ?individual <http://dbpedia.org/ontology/predecessor> ?predecessor .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?joaquinWars ?commanderFame ?carlWars WHERE {
  # Wars of Joaquín Blake
  OPTIONAL { 
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/participatedIn> ?joaquinWars .
  }
  
  # Claim to fame of the commander in the Great Siege of Gibraltar
  OPTIONAL {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/claimToFame> ?commanderFame .
  }
  
  # Wars of the person born as Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/participatedIn> ?carlWars .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify The Shadow's true self
  ?shadow <http://dbpedia.org/ontology/alsoKnownAs> ""The Shadow"" .
  
  # Step 2: Find the professional musical artist who is a rapper
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/profession> ""Rapper"" .
  
  # Link the artist to The Shadow
  ?shadow owl:sameAs ?artist .

  # Step 3: Identify a work that is a musical work, song, and work
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/Work> ;
        <http://dbpedia.org/property/artist> ?artist .

  # Step 4: Determine the producer of this work
  ?work <http://dbpedia.org/ontology/producer> ?producer .
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
SELECT ?alterEgo ?writer ?almaMater ?settlement WHERE {
  # Step 1: Find alter ego of Black Hood
  OPTIONAL { 
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  }

  # Step 2: Identify writer of ""Where It's At"" (Dustin Lynch album)
  OPTIONAL {
    ?song <http://purl.org/dc/terms/creator> ?writer ;
          <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> .
  }

  # Step 3: Find alma mater of administration
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  # Step 4: Identify settlement in the administration
  OPTIONAL {
    ?settlement <http://www.w3.org/2006/vcard/ns#hasAddress> ?address ;
                <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlements100000001> .
    ?administration <http://dbpedia.org/property/administration> ?settlement .
  }

  # Step 5: Reference to George Kilbon Nash
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/wikiPageRedirects> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  }
}
```",8,9,9,3,3,3,3,71,1,21293,0,4.6961585423123884e-05,1.0,9.391876027236441e-05
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?producer WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/work> ?work .
  ?album <http://www.w3.org/2000/01/rdf-schema#label> ""What U See Is What U Get""@en .

  # Step 2: Find the associated musical artist (writer) of the album
  ?album <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://www.w3.org/2000/01/rdf-schema#label> ?artistLabel .
  FILTER(LANG(?artistLabel) = 'en') .

  # Step 3: Identify the song involving 50 Cent and ""The Shadow""
  ?song <http://dbpedia.org/ontology/work> ?workSong .
  ?song <http://purl.org/dc/terms/contributor> ?contributor .
  ?contributor <http://www.w3.org/2000/01/rdf-schema#label> ?contribLabel .
  FILTER(?contribLabel IN (""50 Cent"", ""The Shadow"")) .

  # Step 4: Find the producer of this song
  ?song <http://dbpedia.org/ontology/producer> ?producer .
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?peninsularWarCommanderWars ?carlPontusGahnWars WHERE {
  OPTIONAL {
    # Wars of commanders in the Peninsular War
    ?commander <http://dbpedia.org/ontology/commanded> <http://dbpedia.org/resource/Peninsular_War> .
    ?commander <http://dbpedia.org/ontology/warsFought> ?peninsularWarCommanderWars .
  }
  
  OPTIONAL {
    # Wars of Carl Pontus Gahn
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/warsFought> ?carlPontusGahnWars .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"```sparql
SELECT ?almaMater WHERE {
  OPTIONAL {
    ?organisation <http://www.w3.org/2004/02/skos/core#inScheme> <http://dbpedia.org/resource/Belfast> .
    ?organisation a <http://dbpedia.org/ontology/Organisation> .
    
    ?mayor <http://dbpedia.org/ontology/politicianFor> ?organisation ;
           a <http://dbpedia.org/ontology/Politician> .

    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?commanderEasternFront ?leaderStalinOffice ?awardeeVolcanoRyukyu WHERE {
  # Commander in Eastern Front (World War II)
  OPTIONAL {
    ?campaign <http://dbpedia.org/ontology/commander> ?commanderEasternFront .
    FILTER(CONTAINS(LCASE(?campaign), ""eastern front world war ii""))
  }
  
  # Leader of the Office of Joseph Stalin
  OPTIONAL {
    ?stalinOffice <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?stalinOffice <http://dbpedia.org/ontology/leader> ?leaderStalinOffice .
    FILTER(?stalinOffice <http://dbpedia.org/ontology/GovernmentAgency>)
  }
  
  # Awardee of Commander in Volcano and Ryukyu Islands Campaign
  OPTIONAL {
    ?campaignVolcanoRyukyu <http://dbpedia.org/ontology/commander> ?awardeeVolcanoRyukyu .
    FILTER(CONTAINS(LCASE(?campaignVolcanoRyukyu), ""volcano ryukyu islands campaign""))
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","```sparql
SELECT ?personDecedentSatterthwaite ?commanderVerdun ?capitalKhemisMiliana ?personDecedentCapital ?warCommander WHERE {
  # Joseph C. Satterthwaite's decedent
  OPTIONAL { 
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://www.w3.org/2006/vcard/ns#decedent> ?personDecedentSatterthwaite .
  }

  # Commander in Battle of Verdun
  OPTIONAL {
    ?battleVerdun <http://dbpedia.org/ontology/commander> ?commanderVerdun .
    FILTER(STRSTARTS(STR(?battleVerdun), ""http://dbpedia.org/resource/Battle_of_Verdun""))
  }

  # Capital of Khemis Miliana District
  OPTIONAL {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/administrativeCapital> ?capitalKhemisMiliana .
  }

  # Person decedent at the capital
  OPTIONAL {
    ?capitalKhemisMiliana <http://www.w3.org/2006/vcard/ns#decedent> ?personDecedentCapital .
  }

  # Commander in a war that is both a military conflict and an event
  OPTIONAL {
    ?warCommander <http://dbpedia.org/ontology/commander> ?commanderVerdun .
    ?warCommander <http://www.w3.org/2002/07/owl#sameAs> ?battleVerdun .
    ?warCommander <http://dbpedia.org/ontology/type> ?typeWar .
    FILTER(STRSTARTS(STR(?typeWar), ""http://dbpedia.org/resource/Military_conflict"") && 
           STRSTARTS(STR(?typeWar), ""http://dbpedia.org/resource/Event""))
  }
}
```",8,11,9,3,3,3,3,71,0,19,1,0.0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Archduke Ladislaus Philipp's royal parent
  ?ladislaus <http://dbpedia.org/ontology/father> ?parentLadislaus .
  ?parentLadislaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this royal parent
  ?parentLadislaus <http://dbpedia.org/ontology/child> ?grandChildLadislaus .
  
  # Step 3: Identify Archduchess Margaret's parent and their child
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/father> ?parentMargaret .
  ?parentMargaret <http://dbpedia.org/ontology/child> ?grandChildMargaret .

  # Step 4: Find a native of Budapest
  ?budaNative <http://dbpedia.org/property/nativePlace> <http://dbpedia.org/resource/Budapest> .
  
  # Step 5: Attempt to find a common child or connection
  OPTIONAL {
    ?grandChildLadislaus <http://dbpedia.org/ontology/father> ?child .
    ?grandChildMargaret <http://dbpedia.org/ontology/father> ?child .
    ?budaNative <http://dbpedia.org/ontology/father> ?child .
  }
}
```

This query attempts to navigate through the described relationships, but due to potential data limitations in DBpedia, it may not yield results without further context or assumptions.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"```sparql
SELECT ?personDecedentFrenchAlgeria ?personDecedentKhemisMilianaCapital ?warCommander WHERE {
  # Person decedent at French Algeria
  OPTIONAL {
    ?personDecedentFrenchAlgeria <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  }
  
  # Person decedent at the capital of Khemis Miliana District
  OPTIONAL {
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://www.geonames.org/ontology#capital> ?capitalCity .
    ?personDecedentKhemisMilianaCapital <http://dbpedia.org/ontology/deathPlace> ?capitalCity .
  }
  
  # Commander in the war involving Frédéric-Georges Herr
  OPTIONAL {
    <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/property/commanderInWar> ?warCommander .
    ?warCommander <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
  }
}
```",6,9,7,3,3,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT DISTINCT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  <http://dbpedia.org/resource/Antiochus_IV_Epiphanes> :successor ?successor .
  
  # Step 2: Find children of the successor
  ?successor :child ?child .

  # Step 3: Determine spouse of this child
  ?child :spouse ?spouse .

  # Step 4: Identify parents of Antiochus's children
  <http://dbpedia.org/resource/Antiochus_IV_Epiphanes> :child ?antiochusChild .
  
  # Step 5: Find parent (Antiochus) of these children
  ?antiochusChild :parent <http://dbpedia.org/resource/Antiochus_IV_Epiphanes> .

  # Ensure the spouse is also a parent of Antiochus's child
  ?spouse :child ?antiochusChild .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?team ?sportsClub WHERE {
  # Step 1: Find the person born on 1978-09-15 who is a soccer player and manager
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^xsd:date .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?soccerPlayer .
  ?soccerPlayer <http://dbpedia.org/ontology/soccerPlayer> [] .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?soccerManager .
  ?soccerManager <http://dbpedia.org/ontology/soccerManager> [] .

  # Step 2: Find the team associated with this person
  OPTIONAL { 
    ?soccerPlayer <http://dbpedia.org/property/team> ?team .
  }

  # Step 3: Find the sports club known by the nickname ""Armando Heeb""
  ?sportsClub <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""armando heeb""))
  ?sportsClub a <http://dbpedia.org/ontology/SportsClub> ;
             a <http://dbpedia.org/ontology/Organisation> ;
             a <http://dbpedia.org/ontology/SoccerClub> .

}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","```sparql
SELECT ?warInChile ?workWithDate WHERE {
  # Part 1: War of the military force in Chile
  OPTIONAL {
    ?societalEvent a <http://dbpedia.org/ontology/SocietalEvent> ;
                   <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/location> ?location .
    FILTER (STR(?location) = ""Chile"") .
    BIND(?societalEvent AS ?warInChile)
  }
  
  # Part 2: War of the commander in a work with date --01-09
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/date> ?date ;
          <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
    FILTER (STRSTARTS(STR(?date), ""----01-09"")) .
    BIND(?work AS ?workWithDate)
  }
}
```",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?entityInBirthPlace WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales State Election
  ?leader <http://dbpedia.org/ontology/politicalParty> ?party .
  ?election <http://dbpedia.org/property/winner> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/1962_New_South_Wales_state_election>) .

  # Step 2: Determine the birthplace country of this leader
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  
  # Step 3: Find an entity in this birthplace country
  ?entityInBirthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Step 4: Identify Heather Roy's profession and related war
  <http://dbpedia.org/resource/Heather_Roy> <http://purl.org/dc/terms/subject> ?profession .
  ?war <http://dbpedia.org/ontology/war> ?profession .
  ?war <http://dbpedia.org/ontology/militaryUnit> ?militaryUnit .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"```sparql
SELECT ?country ?war WHERE {
  # Step 1: Get Bob Heffron's birthplace
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Find the country of his birthplace
  ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ?country .

  # Step 3: Get wars involving New Zealand Army
  ?nzWar <http://dbpedia.org/ontology/war> ?war .
  ?nzWar <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .

  # Step 4: Get awards of Jonathon Band and related wars
  ?award <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Jonathon_Band> .
  ?award <http://dbpedia.org/ontology/war> ?warBand .

  # Find common war entity
  FILTER (?war = ?warBand)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
SELECT ?stalinLeader ?awardAwardee WHERE {
  OPTIONAL {
    # Find the leader of a government agency associated with Joseph Stalin
    ?agency <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?agency <http://www.w3.org/2006/vcard/ns#hasRole> <http://dbpedia.org/ontology/GovernmentAgency> .
    ?agency <http://dbpedia.org/property/leader> ?stalinLeader .
  }
  
  OPTIONAL {
    # Find the awardee of a commander award in the Volcano and Ryukyu Islands campaign
    ?award <http://dbpedia.org/ontology/awards> ?campaign .
    ?campaign <http://dbpedia.org/property/name> ""Volcano and Ryukyu Islands campaign"" .
    ?award <http://dbpedia.org/ontology/recipient> ?awardAwardee .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?native WHERE {
  # Step 1: Find the nickname of Jackson, Tennessee
  ?jackson <http://dbpedia.org/ontology/nickName> ?nickname .

  # Step 2: Identify Sherry Hormann's spouse and their claim to fame
  ?sherry <http://xmlns.com/foaf/0.1/spouse> ?spouse .
  ?spouse <http://dbpedia.org/property/claimToFame> ?work .

  # Step 3: Find a movie that is also a television show where the spouse acted
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie105069068> .
  ?movie <http://dbpedia.org/ontology/work> ?work .
  ?movie <http://dbpedia.org/ontology/starring> ?spouse .

  # Step 4: Find an actor from Jackson, Tennessee in the identified movie
  ?actor <http://dbpedia.org/ontology/nationality> ?native .
  ?actor <http://dbpedia.org/ontology/placeOfBirth> ?jackson .
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander WHERE {
  ?regiment <http://dbpedia.org/ontology/participatedIn> ?war .
  ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
       <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Napoleonic_Wars> .

  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Jon Pertwee's child
  ?child <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
  
  # Step 2: Filter by professional role and native place
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?profession IN (Actor, Narrator, Producer))
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
  
  # Step 3: Identify claim to fame that is both a film and military conflict
  ?claimToFame <http://dbpedia.org/property/claimToFame> ?film .
  ?claimToFame <http://dbpedia.org/property/claimToFame> ?conflict .
  FILTER(?film <http://www.w3.org/2002/07/owl#sameAs> ?conflict)
  
  # Step 4: Find the actor of the film
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?finalMilitaryForce WHERE {
  # Step 1: Identify 'Polish Horse'
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  # Step 2: Find Commander in Polish Horse
  ?commanderInPolishHorse dbo:commanderOf ?polishHorse .

  # Step 3: Identify War Involving Commander
  ?war a dbo:MilitaryConflict, dbo:Event ;
       dbo:commander ?commanderInPolishHorse .
  
  # Step 4: Link to Rutger Jan Schimmelpenninck
  ?societalEvent a dbo:SocietalEvent, dbo:Event, dbo:MilitaryConflict ;
                 dbo:referenceTo <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  
  # Step 5: Find Military Force of This Event
  ?militaryForce dbo:militaryForceOf ?societalEvent .

  # Step 6: Identify Native Office Holder of Kingdom of Ireland
  ?officeHolder a dbo:OfficeHolder ;
                dbo:nativeCountry <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  
  # Step 7: Find Commander in Their Force
  ?commanderInForce dbo:commanderOf ?force ;
                    dbo:associatedWith ?officeHolder .

  # Step 8: Final Military Force
  ?finalMilitaryForce dbo:militaryForceOf ?force .
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"```sparql
SELECT ?micheleParty ?fatherName ?fatherParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalAffiliation> ?micheleParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    ?father rdfs:label ?fatherName .
    ?father <http://dbpedia.org/ontology/politicalAffiliation> ?fatherParty .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander ?force1 ?force2 WHERE {
  # Step 1: Find Indalecio Prieto's predecessor
  ?prieto dbo:predecessor ?predecessor .
  
  # Step 2: Identify societal event and military conflict for the predecessor
  ?event1 dbo:type dbr:Societal_event ;
         dbo:type dbr:Military_conflict ;
         dbo:militaryForce ?force1 .

  OPTIONAL { ?predecessor dbo:associatedWith ?event1 . }

  # Step 3: Find person decedent at Francoist Spain
  ?decedent dbo:deathPlace dbr:Francoist_Spain .
  
  # Step 4: Identify societal event and military conflict for the decedent
  ?event2 dbo:type dbr:Societal_event ;
         dbo:type dbr:Event ;
         dbo:type dbr:Military_conflict ;
         dbo:militaryForce ?force2 .

  OPTIONAL { ?decedent dbo:associatedWith ?event2 . }

  # Step 5: Find commander in Biscay Campaign
  ?campaign dbo:name ""Biscay_Campaign"" .
  ?campaign dbo:commander ?commander .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?territory WHERE {
  # Step 1: Find the settlement known as ""Land of fire and ice""
  <http://dbpedia.org/resource/Iceland> <http://www.w3.org/2006/vcard/ns#nickname> ""Land of fire and ice"" .

  # Step 2: Retrieve territories administered from Iceland
  ?territory <http://dbpedia.org/ontology/administrativeTerritory> <http://dbpedia.org/resource/Iceland> .
  
  # Step 3: Determine the time zone for Bombali Shebora Chiefdom
  OPTIONAL {
    <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://www.w3.org/2006/timezone#timeZone> ?bombaliTimeZone .
  }

  # Step 4: Identify regions in Iceland under the same time zone
  ?region <http://www.w3.org/2006/timezone#timeZone> ?bombaliTimeZone .

  FILTER EXISTS { ?territory <http://dbpedia.org/ontology/administrativeTerritory> <http://dbpedia.org/resource/Iceland> }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?warHeatherRoy ?warKnightGrandCross WHERE {
  OPTIONAL {
    # Find Heather Roy's profession that is a military unit
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?profession <http://dbpedia.org/ontology/MilitaryUnit) .
    
    # Find wars associated with this military unit
    ?profession <http://dbpedia.org/property/war> ?warHeatherRoy .
  }
  
  OPTIONAL {
    # Find individuals awarded Knight Grand Cross of the Order of the Bath
    ?person <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
    
    # Find wars associated with these awardees
    ?person <http://dbpedia.org/property/war> ?warKnightGrandCross .
  }
}
```",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?awardWar ?nzArmyWar ?countryEntity WHERE {
  OPTIONAL {
    # Jonathon Band's award war
    ?jonathonBand dbo:award ?award .
    ?award dbo:war ?awardWar .
    FILTER(STR(?jonathonBand) = ""Jonathon_Band"") 
  }
  
  OPTIONAL {
    # New Zealand Army professional's war
    ?professional rdf:type dbo:MilitaryUnit ;
                  dbo:country dbr:New_Zealand ;
                  dbo:officeHolder ?officeHolder ;
                  dbo:politician ?politician .
    ?professionWar dbo:militaryUnit ?professional .
    FILTER(STR(?profession) = ""Military_Unit"") 
  }
  
  OPTIONAL {
    # Bob Heffron's birthplace country entity
    ?bobHeffron dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?country .
    ?entityInCountry rdf:type ?type ;
                     dbo:country ?country .
    FILTER(STR(?bobHeffron) = ""Bob_Heffron"")
  }
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?grandchildRestingPlace ?awardeeRestingPlace ?actorRestingPlace WHERE {
  # Resting place of the child's child of William Haliburton
  OPTIONAL {
    ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child1 .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }

  # Resting place of the awardee of Gerald Graham's award
  OPTIONAL {
    ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Gerald_Graham> .
    ?awardee <http://dbpedia.org/ontology/receivesAward> ?award .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }

  # Resting place of the actor in ""Enemy at the Door""
  OPTIONAL {
    ?film <http://dbpedia.org/property/starring> ?actor .
    ?film <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?personDecedentSatterthwaite ?personDecedentAlgeriaCapital ?warCommander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
    ?work <http://dbpedia.org/property/decedent> ?personDecedentSatterthwaite .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Algeria> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?capital .
    ?capital <http://dbpedia.org/property/decedent> ?personDecedentAlgeriaCapital .
  }
  
  OPTIONAL {
    ?battleOfVerdun <http://dbpedia.org/ontology/commander> ?verdunCommander .
    ?militaryConflict <http://dbpedia.org/ontology/commander> ?verdunCommander ;
                      a <http://dbpedia.org/class/yago/MilitaryConflicts1000000000> .
    ?militaryConflict <http://dbpedia.org/ontology/commander> ?warCommander .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?entity WHERE {
  ?region <http://www.w3.org/2000/01/rdf-schema#label> ""Indonesia"" .
  ?timeRegion <http://dbpedia.org/ontology/timeZone> ?region .
  ?timeRegion <http://www.w3.org/2000/01/rdf-schema#label> ?entity .
}
```",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native ?movie WHERE {
  OPTIONAL {
    ?hubCity <http://dbpedia.org/ontology/nickName> ""Hub City"" .
    ?native <http://dbpedia.org/ontology/nativeOf> ?hubCity .
  }
  OPTIONAL {
    ?movie a <http://dbpedia.org/ontology/Film> ;
           <http://www.w3.org/2002/07/owl#sameAs> ?work ;
           <http://dbpedia.org/ontology/televisionShow> ?tvShow .
    ?actor <http://dbpedia.org/ontology/starring> ?movie .
    ?actor <http://dbpedia.org/property/nationality> ""Roz Ryan"" .
  }
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1 & 2: Find awardees who are writers and poets
  ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .

  # Step 3: Retrieve birthplace of these awardees
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 4 & 5: Check if the birth place is a region in the UK and matches Joseph Whitaker's birthplace
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?whitakerBirthPlace .
    ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?region .
    ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region> .
    ?region <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
    FILTER(?birthPlace = ?whitakerBirthPlace)
  }
}
```",5,8,6,2,3,2,3,28,1,7,0,0.125,1.0,0.2222222222222222
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
SELECT ?territory WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Iceland> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""Land of fire and ice"" .
  }
  OPTIONAL {
    ?author <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Iceland> .
    ?work <http://dbpedia.org/property/author> ?author .
    ?work <http://purl.org/dc/terms/about> ""Iceland"" .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/administrativeTerritory> ?territory .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?warOfGahn ?claimToFameBlake ?warOfBlake WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?warOfGahn .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/property/claimToFame> ?claimToFameBlake .
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/participatedIn> ?warOfBlake .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?writer WHERE {
  OPTIONAL {
    ?album <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Dave_Flett> .
    ?album <http://purl.org/dc/terms/creator> ?writer .
    FILTER EXISTS { ?album <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Manfred_Mann> }
  }

  OPTIONAL {
    ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Winnie_Madikizela-Mandela#Death_place> .
    FILTER EXISTS { ?deathPlace a <http://dbpedia.org/class/yago/Settlements100000001> }
    ?native <http://dbpedia.org/ontology/nativeOf> ?deathPlace .
  }

  VALUES ?writer {
    ?albumWriter
    ?native
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?profession ?person WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/subject> ?profession .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?foundingYear .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    FILTER (YEAR(?birthDate) = ?foundingYear)
  }
}
```",4,4,5,2,2,2,2,9,0,12,7,0.0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parentOfChildOfRamessesII ?spouseOfFatherOfMerneptah WHERE {
  # Step 1: Find a child of Ramesses II
  ?child rdf:type dbo:Person ;
         dbo:father <http://dbpedia.org/resource/Ramesses_II> .

  # Step 2: Find the parent of that child (should be Ramesses II)
  ?parentOfChildOfRamessesII dbo:child ?child .

  # Step 3: Identify the spouse of the father of Merneptah
  <http://dbpedia.org/resource/Merenptah> dbo:father <http://dbpedia.org/resource/Ramesses_II> .
  ?spouseOfFatherOfMerneptah dbo:spouse <http://dbpedia.org/resource/Ramesses_II> .

  # Step 4: Find the parent of a child of Nefertari
  OPTIONAL {
    ?childOfNefertari rdf:type dbo:Person ;
                      dbo:mother <http://dbpedia.org/resource/Nefertari> .
    ?parentOfChildOfNefertari dbo:child ?childOfNefertari .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parentOfChild ?spouseOfProfessional WHERE {
  # Step 1: Find Aristotle Onassis's spouse
  ?onassis <http://dbpedia.org/ontology/spouse> ?spouse .
  
  FILTER(?onassis = <http://dbpedia.org/resource/Aristotle_Onassis>) .

  # Step 2 and 3: Find the child of that spouse and their parent
  ?child <http://www.w3.org/ns/prov#wasDerivedFrom> ?spouse .
  ?parentOfChild <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Identify the professional in the award of Stan Lee
  ?award <http://dbpedia.org/property/receiver> ?professional .
  
  FILTER(?award = <http://dbpedia.org/resource/Award_of_Stan_Lee>) .

  # Step 5: Find the spouse of that professional
  ?professional <http://dbpedia.org/ontology/spouse> ?spouseOfProfessional .
}
```",6,6,7,3,2,3,2,20,0,0,3,0,0.0,0
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?admin1 ?country2 WHERE {
  OPTIONAL {
    # Find Philip Brian Scott's administration
    <http://dbpedia.org/resource/Philip_Brian_Scott> <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationality <http://dbpedia.org/property/administration> ?admin1 .
  }
  
  OPTIONAL {
    # Find the person born on 1955-01-26 and their administration's country
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?birthDateResource .
    ?birthDateResource <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^xsd:date .
    ?person <http://dbpedia.org/ontology/nationality> ?nationality2 .
    ?nationality2 <http://dbpedia.org/property/administration> ?admin2 .
    ?admin2 <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?country2 .
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Identify the leader of the Chamber of Deputies
  ?leader <http://dbpedia.org/ontology/leader> ?person .
  ?leader a <http://dbpedia.org/ontology/PoliticalParty> ;
          a <http://dbpedia.org/ontology/Organization> .

  # Step 2: Find administration details (assuming it's stored in an administrative property)
  OPTIONAL { 
    ?leader <http://dbpedia.org/property/administration> ?administration .
  }

  # Step 3: Identify a native of Prague
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (str(?birthPlace) = ""Prague"")

  # Step 4: Get the death place of this person
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce1 ?militaryForce2 ?commander WHERE {
  # Part 1: Military force of the decedent at Francoist Spain
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
    ?event <http://dbpedia.org/ontology/person> ?person ;
           <http://www.w3.org/2002/07/owl#sameAs> ?militaryForce1 .
    ?militaryForce1 a <http://dbpedia.org/class/yago/SocietalEvent108069068> , <http://dbpedia.org/class/yago/Event106067786> , <http://dbpedia.org/class/yago/MilitaryConflict108070000> .
  }

  # Part 2: Military force of Francisco Largo Caballero
  OPTIONAL {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/memberOf> ?militaryForce2 .
    ?militaryForce2 a <http://dbpedia.org/class/yago/SocietalEvent108069068> , <http://dbpedia.org/class/yago/MilitaryConflict108070000> .
  }

  # Part 3: Commander in the force known as ""El Director""
  OPTIONAL {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
    ?event <http://dbpedia.org/ontology/commander> ?commander ;
           <http://dbpedia.org/ontology/person> ?figure .
    ?event a <http://dbpedia.org/class/yago/Event106067786> .
  }
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?administration ?commanderBirthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/property/administration> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?commanderBirthPlace .
  }
}
```",4,4,5,2,3,3,3,71,1,15,0,0.0625,1.0,0.11764705882352941
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT DISTINCT ?parentOfGrandchild ?spouseOfFather ?parentOfChild WHERE {
  # Parent of the child of the child of Seti I
  OPTIONAL {
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I> .
    ?grandchild <http://www.w3.org/2006/vcard/ns#hasParent> ?parentOfGrandchild .
  }

  # Spouse of the father of Merneptah
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/birthChild> <http://dbpedia.org/resource/Merenptah> .
    ?father <http://www.w3.org/2006/vcard/ns#hasSpouse> ?spouseOfFather .
  }

  # Parent of the child of the spouse of Amun-her-khepeshef
  OPTIONAL {
    ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
    ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?spouse .
    ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?parentOfChild .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?grandParentMayHninHtapi ?parentChildRamKhamhaeng WHERE {
  OPTIONAL {
    # Find the parent of May Hnin Htapi
    <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/father> ?parent1 .
    # Then find the parent of that individual
    ?parent1 <http://dbpedia.org/ontology/father> ?grandParentMayHninHtapi .
  }
  
  OPTIONAL {
    # Find a child of Ram Khamhaeng the Great
    <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/child> ?childRamKhamhaeng .
    # Then find the parent of that child
    ?childRamKhamhaeng <http://dbpedia.org/ontology/father> ?parentChildRamKhamhaeng .
  }
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the commander in the Battle of Perire who is royalty
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the father of this commander
  ?father <http://dbpedia.org/ontology/father> ?commander .

  # Step 3: Determine the spouse of the father
  ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```

This query assumes that DBpedia has structured data for these historical figures and events in a way that allows such chaining. Note that due to potential gaps or inconsistencies in historical data, some parts of this query might not return results if the specific relationships are not well-documented.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band1 ?band2 WHERE {
  # Step 1: Find Tracey Elizabeth McSween by birth name
  ?tracey a dbo:Person ;
          foaf:name ""Tracey Elizabeth McSween"" ;
          dbo:birthName ""Tracey Elizabeth McSween"" .

  # Step 2: Get the band associated with her
  OPTIONAL { 
    ?tracey dbo:associatedBand ?band1 .
  }

  # Step 3: Find a decedent born on the same date as Tracey
  ?decedent a dbo:Person ;
            dbo:birthDate ?birthDate ;
            dbo:dateOfDeath ?deathDate .

  FILTER (?tracey dbo:birthDate = ?decedent dbo:birthDate)

  # Step 4: Find an athlete and soccer player from Zolotonosha
  ?athlete a dbo:Athlete, dbo:SoccerPlayer ;
           dbo:birthPlace <http://dbpedia.org/resource/Zolotonosha> .

  # Step 5: Get the band associated with this athlete/soccer player
  OPTIONAL {
    ?athlete dbo:associatedBand ?band2 .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","```sparql
SELECT ?manager ?nativePerson ?member WHERE {
  # Manager of 2013 Júbilo Iwata season
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?manager .

  # Native of residence (country) of Yōichi Masuzoe
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?country .
  ?nativePerson <http://dbpedia.org/ontology/nationality> ?nationality .
  FILTER(?nationality = ?country) .

  # Member of alma mater (Japanese university) of person born in 1958
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gYear .
  ?person <http://dbpedia.org/ontology/almaMater> ?university .
  FILTER(?university <http://dbpedia.org/resource/Japan>) .
  FILTER(STRSTARTS(STR(?university), ""http://dbpedia.org/resource/"") && 
         (CONTAINS(STR(?university), ""University"") || CONTAINS(STR(?university), ""College"")))
  ?member <http://dbpedia.org/ontology/alumni> ?person .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Get Gigi Rice's birth name
  OPTIONAL { 
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?gigiBirthName .
  }
  
  # Step 2: Find Ted McGinley's spouse using his birth name
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  }
  
  # Step 3: Find the actor of ""Unnatural"" TV series and their profession
  OPTIONAL {
    ?unnaturalActor <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
    ?unnaturalActor <http://purl.org/dc/terms/profession> ?profession .
  }
  
  # Step 4: Find a person professional in the same field as the actor
  OPTIONAL {
    ?person <http://purl.org/dc/terms/profession> ?profession .
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?awardee ?commander ?leader WHERE {
  # Awardee of Order of Suvorov
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> ""Order_of_Suvorov"" .
  }
  
  # Commander in the force at Budapest (decedent)
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commandedForce> ?force .
    ?force <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Budapest> .
    ?commander <http://www.w3.org/2002/07/owl#deprecated> ""true""^^xsd:boolean .
  }
  
  # Leader of the office, that is a government agency, of Joseph Stalin
  OPTIONAL {
    ?office <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Government_agency> .
    ?leader <http://dbpedia.org/ontology/leader> ?office .
    ?stalin <http://dbpedia.org/property/associatedWith> ?office .
    ?stalin <http://dbpedia.org/resource/Joseph_Stalin> .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?militaryForceFrancoistSpain ?militaryForcePredecessor ?commanderInElDirector WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Francoist_Spain> 
      <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForceFrancoistSpain .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Indalecio_Prieto>
      <http://www.w3.org/2002/07/owl#sameAs> ?predecessor .
    ?predecessor
      <http://dbpedia.org/ontology/militaryConflict> ?conflictPredecessor .
    ?conflictPredecessor 
      <http://dbpedia.org/property/militaryForce> ?militaryForcePredecessor .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/El_Director>
      <http://dbpedia.org/ontology/commanderIn> ?eventCommanded .
    ?eventCommanded
      <http://dbpedia.org/ontology/commander> ?commanderInElDirector .
  }
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?resident WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Lizzie_Spaulding> <http://www.w3.org/2002/07/owl#sameAs> ?lizzie .
    ?lizzie <http://dbpedia.org/ontology/father> ?parent .
    ?parent a <http://dbpedia.org/ontology/FictionalCharacter> ;
            a <http://dbpedia.org/ontology/SeriesRegular> .

    OPTIONAL {
      ?parent <http://dbpedia.org/ontology/child> ?child .
      ?child a <http://dbpedia.org/ontology/FictionalCharacter> ;
             a <http://dbpedia.org/ontology/SeriesRegular> .

      OPTIONAL {
        ?child <http://dbpedia.org/ontology/father> ?father .
        
        OPTIONAL {
          ?father <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
          ?address <http://purl.org/dc/terms/description> ?location .
          FILTER(CONTAINS(LCASE(?location), ""springfield, illinois""))
          
          BIND(?father AS ?resident)
        }
      }
    }
  }
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  ?child1 <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Get spouse of that child
  ?child1 <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Find successor of Antiochus II Theos who is royalty
  ?successor <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_II_theos> .
  ?successor a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find child of that successor who is royalty
  ?child2 <http://dbpedia.org/ontology/father> ?successor .
  ?child2 a <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Get spouse of the royal child found in step 4
  ?child2 <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?alterEgo ?almaMater WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Black_Hood> <http://www.w3.org/2004/02/skos/core#altLabel> ?alterEgo .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",4,4,5,2,2,3,3,71,0,1,2,0.0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?rifWarForce ?elDirectorCommander ?societalEventForce WHERE {
  # Military Force of Rif War
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce .

  # Commander in the force known as El Director
  OPTIONAL {
    ?rifWarForce <http://dbpedia.org/property/commander> ?elDirector .
    FILTER(CONTAINS(LCASE(?elDirector), ""el director""))
    ?elDirector <http://www.w3.org/2000/01/rdf-schema#label> ?elDirectorCommander .
  }

  # Predecessor of Indalecio Prieto
  OPTIONAL {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?prietoPredecessor .

    # Societal event or military conflict involving the predecessor
    ?societalEvent <http://dbpedia.org/ontology/societalEvent> ?prietoPredecessor .
    ?societalEvent <http://dbpedia.org/ontology/militaryConflict> ?societalEvent .
    
    # Military force of that event/conflict
    ?societalEvent <http://dbpedia.org/ontology/militaryForce> ?societalEventForce .
  }
}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?almaMater ?settlementEntity ?alterEgo WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Administration_of_George_K._Nash> .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Administration_of_George_K._Nash> .
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Settlement108069627> .
    BIND(?entity AS ?settlementEntity)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?administration ?country WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL {
    ?militaryForce a <http://dbpedia.org/ontology/Organisation> ;
                   <http://dbpedia.org/property/militaryForce> <http://dbpedia.org/resource/Camden_Expedition> .
    ?militaryForce <http://dbpedia.org/ontology/country> ?country .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Merneptah's Father
  ?merneptah <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find Amun-her-khepeshef's Spouse
  ?amun_her_khepeshef <http://dbpedia.org/property/spouse> ?spouse_amun .

  # Step 3: Identify the Child of Amun-her-khepeshef's Spouse
  ?spouse_amun <http://dbpedia.org/ontology/child> ?child .

  # Step 4: Determine Parent of This Child
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 5: Find the Spouse of This Parent
  ?parent <http://dbpedia.org/property/spouse> ?spouse .
  
  FILTER(?merneptah = <http://dbpedia.org/resource/Merneptah>)
  FILTER(?amun_her_khepeshef = <http://dbpedia.org/resource/Amun-her-khepeshef>)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT DISTINCT ?dokkenBandMember ?watchtowerArtist ?meshuggahBandMember ?associatedArtist WHERE {
  
  # Step 1: Band member of Donald Maynard Dokken
  OPTIONAL {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?dokkenBand .
    ?dokkenBand <http://dbpedia.org/ontology/member> ?dokkenBandMember .
  }
  
  # Step 2: Associated musical artist of Watchtower (band)
  OPTIONAL {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
  }

  # Step 3: Band member of Meshuggah
  OPTIONAL {
    <http://dbpedia.org/resource/Meshuggah> a <http://dbpedia.org/class/yago/Band115069769> ;
        a <http://dbpedia.org/ontology/Band, Group, Organization> .
    ?meshuggahBandMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Meshuggah> .
  }

  # Step 4: Associated musical artist of band members from Meshuggah
  OPTIONAL {
    ?meshuggahBandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?band WHERE {
  ?work <http://dbpedia.org/ontology/author> ?author .
  ?author rdfs:label ""Amba Shepherd""@en .
  ?work <http://purl.org/dc/terms/type> <http://dbpedia.org/resource/Song> .
  OPTIONAL { 
    ?author <http://dbpedia.org/property/bandMember> ?band .
  }
}
```",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?ireneWars ?narcisoForce ?orozimboWars WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?ireneWars .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/militaryForce> ?narcisoForce .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/war> ?orozimboWars .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?carlPontusGahnWars ?commanderClaimToFame ?joaquinBlakeWars WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?carlPontusGahnWars .
  }
  
  OPTIONAL {
    ?siege <http://dbpedia.org/property/commander> ?commander .
    FILTER(?siege = <http://dbpedia.org/resource/Great_Siege_of_Gibraltar>)
    ?commander <http://dbpedia.org/ontology/claimToFame> ?commanderClaimToFame .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/participatedIn> ?joaquinBlakeWars .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse ?profession ?person WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/profession> ?profession .
  }
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
             <http://xmlns.com/foaf/0.1/name> ?birthName .
    ?person <http://xmlns.com/foaf/0.1/birthName> ?birthName .
  }
}
```",6,6,7,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?child WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
  ?father <http://dbpedia.org/ontology/father> ?spouse .
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"```sparql
SELECT ?country ?commonWar WHERE {
  # Leader of 1962 New South Wales State Election
  ?leader a dbo:Politician ;
          dbo:electedDuring <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .

  # Birthplace as a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
  BIND(?birthPlace AS ?country)

  # Awardee of Knight Grand Cross of the Order of the Bath and their wars
  ?awardee dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> ;
           dbo:participatedInWar ?awardeeWar .

  # Heather Roy's profession as a military unit and her war involvement
  ?heatherRoy foaf:name ""Heather Roy"" .
  ?heatherRoy dbo:profession ?militaryUnit .
  ?militaryUnit rdf:type dbo:MilitaryUnit ;
                dbo:participatedInWar ?royWar .

  # Find common war entity
  FILTER(?awardeeWar = ?royWar)
  BIND(?awardeeWar AS ?commonWar)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"```sparql
SELECT ?professional ?associatedArtist WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    ?alterEgo <http://www.w3.org/2000/01/rdf-schema#label> ?professional .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/What_U_See_Is_What_U_Get_(album)> <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://www.w3.org/2002/07/owl#sameAs> ?musicalArtist .
    ?musicalArtist <http://xmlns.com/foaf/0.1/page> ?artistPage .
    ?artistPage <http://dbpedia.org/ontology/wikiPageRedirects> ?artist .
    ?writer <http://www.w3.org/2002/07/owl#sameAs> ?artist .
    
    ?writer <http://xmlns.com/foaf/0.1/knows> ?associatedArtist .
  }
}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?germanCampaignCommander ?forceMilitaryForce WHERE {
  # Step 1: Find societal events involving Rutger Jan Schimmelpenninck
  ?event rdf:type dbo:SocietalEvent ;
         dbo:reference <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

  # Step 2: Ensure the event is also a military conflict
  ?event rdf:type dbo:MilitaryConflict .

  # Step 3: Find the commander of these events
  ?event dbo:commander ?schimmelpenninckCommander .

  # Step 4: Identify the German campaign of 1813 and its commander
  ?germanCampaign rdf:type dbo:MilitaryConflict ;
                  rdfs:label ""German campaign of 1813"" .
  ?germanCampaign dbo:commander ?germanCampaignCommander .

  # Step 5: Find the military force associated with this commander
  ?forceMilitaryForce dbo:militaryForce ?germanCampaignCommander .

  # Step 6: Identify the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?war rdf:type dbo:MilitaryConflict ;
       dbo:reference <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .

  # Step 7: Find the commander in that war
  ?war dbo:commander ?lancerCommander .
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
SELECT ?restingPlaceKeeble ?settlementInBirthplace ?awardeeRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/deathPlace> ?restingPlaceKeeble .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceMarion .
    ?settlementInBirthplace <http://www.w3.org/2004/02/skos/core#broader*|<http://www.w3.org/2002/07/owl#sameAs> ?birthPlaceMarion .
    ?settlementInBirthplace a <http://dbpedia.org/class/yago/Settlements100000001> .
  }
  
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> ;
             <http://dbpedia.org/ontology/politicalParty> ?party ;
             <http://dbpedia.org/property/deathPlace> ?awardeeRestingPlace .
    ?award <http://purl.org/dc/terms/relation> ?awardee ;
           <http://www.w3.org/2004/02/skos/core#prefLabel> ""Distinguished Service Medal (U.S. Army)""@en .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?spouse ?person WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify the album
  ?album <http://dbpedia.org/ontology/work> ?work .
  FILTER (str(?work) = ""What U See Is What U Get"") .

  # Step 2: Find the writer of the album
  ?writer <http://dbpedia.org/ontology/writer> ?album ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> .

  # Step 3: Identify associated musical artists
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?rapper .

  # Step 4: Find the rapper
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  FILTER (CONTAINS(LCASE(str(?rapper)), ""rapper"")) .

  # Step 5: Identify professional musical artists
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .

  # Step 6: Determine the work by this rapper
  ?work2 <http://dbpedia.org/ontology/work> ?song ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/Work> .
  ?rapper <http://purl.org/dc/terms/contributor> ?work2 .

  # Step 7: Find the producer of the work
  ?producer <http://dbpedia.org/property/producer> ?song .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?war ?nationalityEntity WHERE {
  # Find the author of the 2019 Sri Lanka Easter bombings
  ?author <http://dbpedia.org/property/author> <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> .
  
  # Find wars associated with this author
  OPTIONAL { 
    ?author <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  
  # Find the nationality of Tamara Kunanayakam
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ""Tamara Kunanayakam"" ;
    <http://dbpedia.org/ontology/nationality> ?nationality .
  
  # Find entities related to this nationality
  OPTIONAL {
    ?nationalityEntity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Nationalities100000001> ;
      <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
SELECT ?partyArnulfo ?partyCommander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/politicalParty> ?partyArnulfo .
  }
  
  OPTIONAL {
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108069068> .
    ?event <http://dbpedia.org/ontology/commander> ?commander .
    ?event <http://dbpedia.org/property/name> ""United States invasion of Panama"" .
    ?commander <http://dbpedia.org/ontology/politicalParty> ?partyCommander .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?nashAlmaMater ?settlement1AlmaMater ?settlement2AlmaMater WHERE {
  # Step 1: Alma mater of George Kilbon Nash
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?nashAlmaMater .

  # Step 2: Administrative entity related to George Kilbon Nash that is a settlement
  OPTIONAL {
    ?adminEntity <http://dbpedia.org/property/administration> <http://dbpedia.org/resource/George_Kilbon_Nash> .
    ?adminEntity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address1 .
    ?address1 <http://purl.org/dc/terms/description> ?settlement1 .
    ?settlement1 <http://dbpedia.org/ontology/almaMater> ?settlement1AlmaMater .
  }

  # Step 3: Writer of ""Where It's At"" and their associated settlement
  OPTIONAL {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
    ?adminEntity2 <http://dbpedia.org/property/administration> ?writer .
    ?adminEntity2 <http://www.w3.org/2006/vcard/ns#hasAddress> ?address2 .
    ?address2 <http://purl.org/dc/terms/description> ?settlement2 .
    ?settlement2 <http://dbpedia.org/ontology/almaMater> ?settlement2AlmaMater .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify the album
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> a dbo:MusicalWork ;
    dbo:work <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> .

  # Step 2: Find writers of the album who are both musical artists and artists
  ?album dbo:writer ?writer .
  ?writer rdf:type dbo:MusicalArtist, dbo:Artist .

  # Step 3: Retrieve associated musical artists for these writers
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?spouse ?parent WHERE {
  # Find children of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .

  # Find spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouse .

  # Check if the child is also a spouse of Laodice IV
  FILTER (?child = ?spouse)

  # Find parent(s) of this individual (who is a child of Antiochus III)
  OPTIONAL { ?parent <http://dbpedia.org/ontology/child> ?child . }
}
```",4,4,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify ""The Shadow""
  ?shadow <http://dbpedia.org/ontology/wikiPageRedirects> ?alterEgo .
  
  # Step 2: Find the alter ego and its professional identity
  ?alterEgo <http://www.w3.org/2000/01/rdf-schema#label> ""The Shadow"" .
  ?alterEgo <http://dbpedia.org/ontology/profession> ?profession .

  # Step 3: Identify the album ""What U See Is What U Get""
  ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
  
  # Step 4: Confirm it's a musical work and find its writer
  ?album <http://dbpedia.org/ontology/work> ?work .
  ?album <http://dbpedia.org/ontology/musicArtist> ?writer .

  # Step 5: Ensure the writer is both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 6: Find the associated musical artist of this writer
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  # Find band members of Senidah
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Senidah> .
  
  # Ensure they are native to the Socialist Federal Republic of Yugoslavia
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .

  # Match their birth name with that of Dino Merlin
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?merlinBirthName .
  
  FILTER (?birthName = ?merlinBirthName)
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
SELECT ?bandShellback ?bandHonorUp WHERE {
  OPTIONAL {
    # Find works by Shellback
    ?work <http://dbpedia.org/ontology/writer> ?writer .
    ?work <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .

    # Get the band of the writer
    ?writer <http://dbpedia.org/ontology/memberOf> ?bandShellback .
  }
  
  OPTIONAL {
    # Find actor in ""Honor Up""
    ?work <http://dbpedia.org/property/storyBy> ?actor .
    ?work <http://dbpedia.org/resource/Honor_Up> .

    # Check if the actor is a musical artist and find their band
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?actor <http://dbpedia.org/ontology/memberOf> ?bandHonorUp .
  }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandShena ?bandAthlete ?bandAmba WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Shèna"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?bandShena .
  }
  
  OPTIONAL {
    ?athlete <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> ;
              <http://dbpedia.org/property/dateOfDeath> ?deathDate .
    ?person2 <http://dbpedia.org/ontology/birthDate> ?deathDate ;
             <http://www.w3.org/2000/01/rdf-schema#label> ?athleteLabel .
    FILTER(CONTAINS(LCASE(?athleteLabel), ""athlete"") && CONTAINS(LCASE(?athleteLabel), ""soccer player""))
    ?person2 <http://dbpedia.org/ontology/memberOfBand> ?bandAthlete .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/memberOfBand> ?bandAmba .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?childOfFather ?parentOfChild WHERE {
  # Step 1: Find Soe Min Wimala Dewi's father
  ?soeMin <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find the child of Soe Min Wimala Dewi's father
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/child> ?childOfFather .
  }

  # Step 3: Find Thado Minsaw of Prome's parent
  ?thadoMinsaw <http://dbpedia.org/ontology/parent> ?parent .

  # Step 4: Find the child of Thado Minsaw of Prome's parent
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/child> ?childOfParent .
  }

  # Step 5: Identify the parent of this child
  OPTIONAL {
    ?childOfParent <http://dbpedia.org/ontology/parent> ?parentOfChild .
  }
  
  FILTER(?soeMin = <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi>)
  FILTER(?thadoMinsaw = <http://dbpedia.org/resource/Thado_Minsaw_of_Prome>)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?childOfFather ?spouseWithBirthName WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Step 2: Determine the Father of Her Spouse
  ?spouse <http://dbpedia.org/ontology/father> ?father .

  # Step 3: Identify the Child of This Father
  ?father <http://dbpedia.org/ontology/child> ?childOfFather .
  
  # Step 4: Find the Birth Name of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?birthName .

  # Step 5: Determine the Spouse of the Person with This Birth Name as a Royalty
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouseWithBirthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?steeleBirthplace ?timisoaraMember ?timisoaraBirthplace WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?steeleBirthplace .
    ?prize <http://dbpedia.org/property/recipient> ?awardee .
    FILTER(STRSTARTS(LCASE(?prize), ""http://dbpedia.org/resource/leroy_p_steele_prize""))
  }
  
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/birthPlace> ?timisoaraBirthplace .
    ?team <http://dbpedia.org/property/member> ?member .
    FILTER(STRSTARTS(LCASE(?team), ""http://dbpedia.org/resource/fc_politehnica_timișoara""))
  }
}
```",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find a child of Thinkhaya of Pagan
  ?thinkhayaChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: Identify the father of this child
  ?father <http://dbpedia.org/ontology/child> ?thinkhayaChild .

  # Step 3: Find the children of this father
  ?fatherChild <http://dbpedia.org/ontology/father> ?father .
  
  # Step 4: Identify Thado Minsaw of Prome's parent
  OPTIONAL {
    ?thadoMinsawParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    
    # Final step: Match the child from Step 3 with Thado Minsaw of Prome's parent
    FILTER(?fatherChild = ?thadoMinsawParent)
    BIND(?fatherChild AS ?child)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?awardee ?almaMater WHERE {
  # Find the Royal Medals award entity
  <http://dbpedia.org/resource/Royal_Medals> <http://purl.org/dc/terms/subject> ?award .
  
  # Retrieve awardees of the Royal Medals
  ?award <http://www.w3.org/ns/org#awardedTo> ?awardee .

  # Get alma mater for each awardee
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
# Step 1: Find Sherry Hormann's spouse
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?spouse .
}

# Step 2: Find the claim to fame (work) of Sherry Hormann's spouse
SELECT ?work WHERE {
  ?spouse <http://dbpedia.org/ontology/work> ?work .
  FILTER(?work IN (<http://dbpedia.org/resource/All_About_the_Andersons>))
}

# Step 3: Find actors of ""All About the Andersons""
SELECT DISTINCT ?actor WHERE {
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
}

# Step 4: Identify which actor is native to Hub City
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Hub City"" .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"```sparql
SELECT ?nickname WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  ?eiður dbpedia-owl:birthday ?birthDate .
  FILTER(?eiður = <http://dbpedia.org/resource/Eiður_Guðjohnsen>) .

  # Step 2: Find soccer players and managers born on that date
  ?person dbpedia-owl:birthday ?birthDate ;
          a dbo:SoccerPlayer, dbo:SoccerManager .

  # Step 3: Determine teams associated with these individuals
  ?team dbo:player ?person .

  # Step 4: Identify sports clubs related to Armando Heeb
  ?club rdf:type dbo:SportsClub, dbo:Organization, dbo:SoccerClub ;
        dbo:member <http://dbpedia.org/resource/Armando_Heeb> .

  # Step 5: Find nicknames of players from these clubs
  ?player dbo:team ?club ;
          dbpedia-owl:nickName ?nickname .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Step 2: Identify which child is a parent of Nysa
  ?parent <http://www.w3.org/2000/01/rdf-schema#label> ""Nysa""@en .
  ?parent <http://dbpedia.org/ontology/birthParent> ?child .

  # Step 3: Find successor and their child who is royalty
  ?successor <http://dbpedia.org/ontology/successor> ?antiochusIII .
  ?royaltyChild <http://dbpedia.org/ontology/birthParent> ?successor .
  ?royaltyChild <http://www.w3.org/2002/07/owl#sameAs> ?child .

  # Step 4: Find spouse of the royalty child
  ?spouse <http://dbpedia.org/property/spouse> ?royaltyChild .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?work ?professionalIn ?producer WHERE {
  ?work <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> .
  ?work <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/MusicalWork108069068> . # Musical work
  ?work <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Song106936786> .   # Song

  OPTIONAL { 
    ?work <http://dbpedia.org/ontology/professionalIn> ?professionalIn .
  }
  
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/producer> ?producer .
  }
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?writer ?nativeOfJohannesburg ?blindedByTheLightAuthor WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
    BIND(?person AS ?nativeOfJohannesburg)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://purl.org/dc/terms/creator> ?blindedByTheLightAuthor .
  }
}
```",4,4,5,2,3,2,3,28,1,999,0,0.001,1.0,0.0019980019980019984
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/title> ""What U See Is What U Get"" .
  ?album a <http://dbpedia.org/class/yago/MusicalWork108069834> ;
         a <http://dbpedia.org/ontology/Work> .

  # Step 2: Find the writer of the album who is also a musical artist and an artist
  ?writer <http://purl.org/dc/terms/creator> ?album .
  ?writer a <http://dbpedia.org/class/yago/MusicalArtist108069834> ;
          a <http://dbpedia.org/ontology/Artist> .

  # Step 3: Identify the producer of ""Westside Story (song)""
  ?producer <http://dbpedia.org/property/producedAlbum> ?westsideSong .
  ?westsideSong <http://dbpedia.org/ontology/title> ""Westside Story"" .

  # Step 4: Find associated musical artist of the writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?personDeceased ?commander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/House_of_Sombrerete> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarterLocation .
    
    ?deathEvent a dbo:Death ;
      dbo:place ?headquarterLocation ;
      dbo:agent ?personDeceased .

  }
  
  OPTIONAL {
    ?event dbo:subject <http://dbpedia.org/resource/Lisa_Gavrić> ;
      a dbo:SocietalEvent .
      
    ?commanderRole dbo:roleName ""Commander"" ;
      dbo:relatedEvent ?event .
    
    ?commander dbo:occupation ?commanderRole .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?war1 ?country ?war2 WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?war1 .
  }
  
  OPTIONAL {
    ?election <http://dbpedia.org/property/electionDate> ""1962""^^xsd:gYear ;
              <http://dbpedia.org/ontology/politicalLeader> ?leader .
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER (lang(?countryLabel) = ""en"")
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?countryLabel), "" "", ""_""))) AS ?country)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    FILTER (?profession = <http://dbpedia.org/resource/Military_unit>)
    ?profession <http://dbpedia.org/ontology/war> ?war2 .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
SELECT ?native ?actor ?child WHERE {
  # Native of the residence of Sylvie Bermann
  OPTIONAL {
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlement .
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
    ?residence <http://www.w3.org/2006/vcard/ns#hasAddress> ?nativePlace .
    ?nativePlace <http://purl.org/dc/terms/description> ?native .
  }

  # Actor of the claim to fame of Sean Pertwee
  OPTIONAL {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/filmography> ?film .
    ?film <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    ?film <http://dbpedia.org/ontology/starring> ?actor .
  }

  # Child of Jon Pertwee
  OPTIONAL {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://www.w3.org/2006/vcard/ns#hasBirthName> ""Jon Pertwee"" .
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander1 ?commander2 ?force ?nativeCommander WHERE {
  OPTIONAL {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war dbpedia-owl:participatedIn [
      rdf:type <http://dbpedia.org/ontology/MilitaryUnit> ;
      rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en
    ] .
    ?war dbpedia-owl:commander ?commander1 .
  }
  
  OPTIONAL {
    ?war dbpedia-owl:participatedIn [
      rdf:type <http://dbpedia.org/ontology/MilitaryUnit> ;
      rdfs:label ""Rutger Jan Schimmelpenninck""@en
    ] .
    ?war dbpedia-owl:militaryForce ?force .
    ?force dbpedia-owl:commander ?commander2 .
  }
  
  OPTIONAL {
    ?nativeOfficeHolder a <http://dbpedia.org/ontology/OfficeHolder> ;
                        rdfs:label ""Kingdom of Ireland""@en .
    ?nativeOfficeHolder dbpedia-owl:nativeCountry ?country .
    ?country dbpedia-owl:commander ?nativeCommander .
  }
}
```",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor ?child WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Dog_Soldiers> <http://dbpedia.org/ontology/castMember> ?actor .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jon Pertwee""@en .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/child> ?child .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?force ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2006/vcard/ns#hasName> ?name .
    FILTER(?name = ""Narciso Campero"")
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
  }
  
  OPTIONAL {
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?chileEvent .
    FILTER(CONTAINS(LCASE(STR(?chileEvent)), ""chile""))
    ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/property/war> ?war .
  }
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?actor WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?film .
    ?film a <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
    ?film <http://dbpedia.org/property/starring> ?actor .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
SELECT ?nativeOfficeHolder ?commanderInLeipzig ?militaryForce WHERE {
  # Step 1: Find native office holder of Kingdom of Ireland
  ?officeHolder <http://dbpedia.org/ontology/nationality> ?nationality .
  ?officeHolder <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Kingdom_of_Ireland> .

  # Step 2: Find commander in Battle of Leipzig
  ?battle <http://dbpedia.org/ontology/battleCommander> ?commanderInLeipzig .
  ?battle <http://dbpedia.org/ontology/name> ""Battle of Leipzig"" .

  # Step 3: Find military force associated with Rutger Jan Schimmelpenninck
  ?schimmelpenninck <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/2000/01/rdf-schema#label> ?eventLabel .
  FILTER(CONTAINS(LCASE(?eventLabel), ""societal event"") && CONTAINS(LCASE(?eventLabel), ""event"") && CONTAINS(LCASE(?eventLabel), ""military conflict"")) .
  ?schimmelpenninck <http://dbpedia.org/ontology/name> ""Rutger Jan Schimmelpenninck"" .

  # Linking the entities
  OPTIONAL { ?officeHolder <http://dbpedia.org/ontology/commander> ?commanderInForce . }
}
```",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find Thinkhaya of Pagan's child
  ?thinkhayaChild <http://dbpedia.org/ontology/birthName> ""Thinkhaya of Pagan"" .
  
  # Step 2: Find the father of Thinkhaya of Pagan's child
  ?father <http://dbpedia.org/ontology/child> ?thinkhayaChild .
  
  # Step 3: Find Thado Minsaw of Prome's parent
  ?thadoParent <http://dbpedia.org/ontology/birthName> ""Thado Minsaw of Prome"" .
  ?thadoMinsaw <http://dbpedia.org/ontology/parent> ?thadoParent .

  # Step 4: Find the child of Thado Minsaw of Prome's parent
  ?childOfThadoParent <http://dbpedia.org/ontology/parent> ?thadoParent .
  
  # Step 5: Identify the parent of the child found in step 4
  ?parentOfChild <http://dbpedia.org/ontology/child> ?childOfThadoParent .

  # Step 6: Find the child of the father from step 2
  ?finalChild <http://dbpedia.org/ontology/parent> ?father .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember ?associatedArtist ?profession WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://purl.org/dc/terms/profession> ?profession .
  }
}
```",5,7,6,2,3,2,3,28,1,3,0,0.25,1.0,0.4
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify Chris Taylor (music producer)
  ?chrisTaylor rdf:type dbo:MusicProducer ;
               foaf:name ""Chris Taylor"" .

  # Step 2: Find associated musical artists of Chris Taylor
  ?artist dbo:associatedMusicalArtistOf ?chrisTaylor ;
          rdf:type dbo:MusicalArtist .

  # Step 3: Filter for Rapper among these artists
  ?rapper rdf:type dbo:Rapper ;
          foaf:name ?artistName .
  
  FILTER (?artist = ?rapper)

  # Step 4: Identify professional in alter ego of The Shadow
  ?shadowAlterEgo dbo:alterEgo ""The Shadow"" .

  # Step 5: Find producer of a musical work that is both a song and a general work
  ?producer rdf:type dbo:Producer ;
            dbo:producedWork ?musicalWork .
  
  ?musicalWork rdf:type dbo:Songs ;
               dbo:workType dbo:MusicalWork .

  # Step 6: Link the professional to all these elements
  FILTER (?shadowAlterEgo = ?producer)
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist1 ?associatedArtist2 ?bandMember WHERE {
  # Part 1: Associated musical artist of Watchtower's associated artists
  OPTIONAL {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist1 .
  }

  # Part 2: Band member of the person born as Don Dokken
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Don Dokken"" .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
  }
}
```",5,6,6,3,2,3,3,71,1,15,0,0.0625,1.0,0.11764705882352941
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?countryEntity ?sportsEventRegion ?province WHERE {
  # Part 1: Entity in the region that is a country of Central European Time
  OPTIONAL {
    <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?region .
    ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
    BIND(?region AS ?countryEntity)
  }

  # Part 2: Region of the time zone that is a sports event of Aguilar de Segarra
  OPTIONAL {
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?timeZoneRegion .
    ?timeZoneRegion <http://dbpedia.org/ontology/event> ?sportsEvent .
    FILTER EXISTS { ?sportsEvent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsEvents108067> }
    BIND(?timeZoneRegion AS ?sportsEventRegion)
  }

  # Part 3: Province of the residence that is a settlement and Italian of Sebastiano Bianchetti
  OPTIONAL {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
    FILTER EXISTS { ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlement108067> }
    FILTER EXISTS { ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> }
    ?residence <http://dbpedia.org/ontology/province> ?province .
  }
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
SELECT ?team WHERE {
  # Step 1: Identify the native soccer player/manager from Wolverhampton
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/nationality> wd:Q145> ; # Nationality of England (Wolverhampton is in England)
           <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> ;
           <http://dbpedia.org/ontology/profession> ?profession .
    FILTER (?profession IN (<http://dbpedia.org/ontology/SoccerPlayer>, <http://dbpedia.org/ontology/SoccerManager>)).
  }

  # Step 2: Determine their team
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/team> ?team .
  }
  
  # Step 3 & 4: Find the predecessor and successor of the 2015 Sacramento Republic FC season
  OPTIONAL {
    ?predecessorSeason <http://dbpedia.org/ontology/successor> ?successorSeason ;
                       <http://dbpedia.org/ontology/predecessor> ?2015Sacramento .
    FILTER (?2015Sacramento = <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season>) .
  }

  # Step 5: Identify a player in the successor season
  OPTIONAL {
    ?successorSeason <http://dbpedia.org/ontology/player> ?player .
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?birthEntity ?bergamoEntity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2004/02/skos/core#related> ?birthEntity .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Province_of_Bergamo> <http://www.w3.org/2004/02/skos/core#related> ?bergamoEntity .
  }
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
SELECT ?awardee ?deceasedPerson WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://purl.org/dc/terms/relation> ?award .
    ?award <http://www.w3.org/2004/02/skos/core#subject> ?awardee .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/House_of_Sombrerete> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
    
    ?person <http://dbpedia.org/ontology/deathPlace> ?headquarter ;
            <http://dbpedia.org/ontology/deathDate> ?deathDate .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find child of Thihapate who is an office holder and royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?child a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find parent of child of Narapati I
  ?grandChild <http://dbpedia.org/ontology/parent> ?parent .
  ?grandChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .

  # Step 3: Find predecessor of the individual who is both from step 1 and step 2
  FILTER (?child = ?parent)
  ?officeHolder <http://dbpedia.org/ontology/predecessor> ?predecessor .
  FILTER(?officeHolder = ?child)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
SELECT ?war1 ?entityInNationality ?war2 WHERE {
  
  # War of the work of Gotabhaya Rajapaksa
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
    ?work <http://dbpedia.org/property/war> ?war1 .
  }
  
  # Entity in the nationality of Tamara Kunanayakam
  OPTIONAL {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ""Tamara Kunanayakam""@en .
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?nationality .
    ?entityInNationality <http://www.w3.org/2000/01/rdf-schema#label> ?nationalityLabel .
    FILTER(LANG(?nationalityLabel) = ""en"")
  }
  
  # War of the author of 2019 Sri Lanka Easter bombings
  OPTIONAL {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?author .
    ?author <http://dbpedia.org/ontology/war> ?war2 .
  }
}
```",6,6,7,2,3,2,3,28,0,1048576,1,0.0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?teamManager WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  ?season <http://dbpedia.org/ontology/team> ?kashimaAntlers .
  FILTER(STRSTARTS(STR(?season), ""http://dbpedia.org/resource/1998_Kashima_Antlers_season""))
  ?season <http://dbpedia.org/property/manager> ?sportsManager .

  # Step 2: Find the team managed by this sports manager
  ?sportsManager <http://dbpedia.org/ontology/teamManaged> ?team .
  
  # Step 3: Determine the current manager of that team
  ?team <http://dbpedia.org/property/currentManager> ?teamManager .

  # Step 4: Identify the leader (politician) of the 2010 Japanese House of Councillors election
  ?election <http://dbpedia.org/ontology/electedOffice> ?office .
  FILTER(STRSTARTS(STR(?election), ""http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election""))
  ?election <http://dbpedia.org/property/winner> ?politician .

  # Step 5: Find the country of residence for this politician
  ?politician <http://dbpedia.org/ontology/nationality> ?country .
  
  # Step 6: Retrieve the native place of this country (assuming a property exists)
  OPTIONAL { 
    ?country <http://dbpedia.org/property/nativePlace> ?nativePlace .
  }
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?birthName WHERE {
  # Step 1: Find royalty child of Nakkhatra Mangala
  ?childNakkhatra a <http://dbpedia.org/ontology/Royalty> ;
                  <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Nakkhatra_Mangala> .

  # Step 2: Find parent of child of Bhumibol Adulyadej
  ?childBhumibol <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
                 <http://www.w3.org/2000/01/rdf-schema#parent> ?parent .

  # Step 3: Match the two results
  FILTER (?childNakkhatra = ?parent)

  # Step 4: Retrieve birth name of matched person
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  BIND(?childNakkhatra AS ?person)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?burtonRestingPlace ?awardeeRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .
  }
  OPTIONAL {
    ?award <http://dbpedia.org/property/giver> <http://dbpedia.org/resource/Gerald_Graham> ;
           <http://dbpedia.org/property/receiver> ?awardee .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?prodiParty ?fatherParty WHERE {
  OPTIONAL {
    # Find the party of Romano Prodi by his birth name
    <http://dbpedia.org/resource/Romano_Prodi> <http://www.w3.org/2006/vcard/ns#hasName> ?name .
    FILTER(CONTAINS(LCASE(?name), ""romano prodi""))
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  }
  
  OPTIONAL {
    # Find the party of Lamberto Andreotti's father
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?father .
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?fatherParty .
  }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?traceyBand ?writerBand WHERE {
  OPTIONAL {
    ?person <http://www.w3.org/2006/vcard/ns#hasName> ""Tracey Elizabeth McSween"" .
    ?person <http://dbpedia.org/ontology/band> ?traceyBand .
  }
  
  OPTIONAL {
    ?song <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Amba_Shepherd> ;
          <http://www.w3.org/2002/07/owl#sameAs> ?work .
    ?work <http://dbpedia.org/ontology/author> ?writer .
    ?writer <http://dbpedia.org/ontology/band> ?writerBand .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?mayorAlmaMater ?qubEntity ?allenHillAlmaMater WHERE {
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politician> _:a .
    ?mayor <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMeter .
  }
  
  OPTIONAL {
    ?qubEntity <http://xmlns.com/foaf/0.1/nick> ""QUB"" .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .
  }
}
```",4,5,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
SELECT ?nickname WHERE {
  OPTIONAL {
    ?institution <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland""@en .
    ?institution <http://dbpedia.org/ontology/type> ?type1 .
    ?institution <http://dbpedia.org/ontology/type> ?type2 .
    FILTER (?type1 = <http://dbpedia.org/class/yago/Organisation4650690> && 
            ?type2 = <http://dbpedia.org/class/yago/EducationalInstitution100000001>)
  }
  
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politicalParty> ?party .
    ?mayor <http://dbpedia.org/property/mayorFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?institution .
  }
  
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/reference> ?reference .
    FILTER CONTAINS(LCASE(?reference), ""royal medals"")
    ?awardee <http://dbpedia.org/property/recipientOf> ?award .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?institution .
  }
  
  ?institution <http://xmlns.com/foaf/0.1/nick> ?nickname .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
# Step 1: Retrieve the child of Archduke Joseph Karl
SELECT ?grandchild WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child .
  
  # Step 2: Find the child of that child (grandchildren)
  ?child <http://dbpedia.org/ontology/child> ?grandchild .

  # Step 3: Check if this grandchild is a parent of Archduchess Ilona
  OPTIONAL { 
    ?grandchild <http://dbpedia.org/ontology/spouse> ?ilonaParent .
    ?ilonaParent <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/birth> ?birth .
  }

  # Step 4: Find a settlement with a landmark at elevation 96.0
  OPTIONAL {
    ?settlement <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://dbpedia.org/ontology/elevation> ""96.0""^^xsd:float .
    ?landmark <http://dbpedia.org/ontology/location> ?settlement .
    ?native <http://dbpedia.org/ontology/birthPlace> ?settlement .
  }
  
  # Ensure the grandchild is a parent of Archduchess Ilona and native to the settlement
  FILTER(?ilonaParent && ?native)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find nickname of Jackson, Tennessee
  ?jackson <http://dbpedia.org/ontology/nickName> ?figure .
  
  # Step 2: Find actor in ""All About the Andersons""
  ?work <http://dbpedia.org/property/title> ""All About the Andersons"" .
  ?work <http://dbpedia.org/ontology/starring> ?actor .

  # Step 3: Find Michael Ballhaus' claim to fame
  ?ballhaus <http://dbpedia.org/ontology/claimToFame> ?fameWork .
  
  # Ensure the actor from step 2 is the same as the figure from step 1
  FILTER (?figure = ?actor)

  # Step 4: Find native of the actor
  ?actor <http://dbpedia.org/ontology/native> ?native .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT DISTINCT ?artist1 ?artist2 ?bandMemberArtist WHERE {
  # Step 1: Associated Musical Artist of Watchtower
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
  
  # Step 2: Associated Musical Artist of the Associated Musical Artist
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .

  # Step 3: Band Member of Fredrik Thordendal's Band
  ?fredrikBand <http://www.w3.org/2000/01/rdf-schema#member> ?bandMember .
  ?fredrikBand <http://dbpedia.org/ontology/band> ?isBand .
  ?fredrikBand <http://dbpedia.org/ontology/group> ?isGroup .
  ?fredrikBand <http://dbpedia.org/ontology/organization> ?isOrg .
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://www.w3.org/2000/01/rdf-schema#member> ?fredrikBand .

  # Step 4: Associated Musical Artist of the Band Member
  ?bandMember <http://dbpedia.org/ontology/band> ?isBand .
  ?bandMember <http://dbpedia.org/ontology/group> ?isGroup .
  ?bandMember <http://dbpedia.org/ontology/organization> ?isOrg .
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Step 5: Associated Musical Artist of the Band Member
  ?bandMember <http://www.w3.org/2000/01/rdf-schema#member> ?bandMemberPerson .
  ?bandMemberPerson <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMemberArtist .

}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
SELECT ?welshCommander ?societalEventMilitaryForce ?polishRegimentWarCommander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commanderOf> ?force .
    ?force <http://dbpedia.org/ontology/commander> ?welshCommander .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/reference> ?event .
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
    ?societalEvent <http://purl.org/dc/terms/type> ?eventType .
    FILTER (?eventType IN (<http://dbpedia.org/class/yago/SocialEvents>, <http://dbpedia.org/class/yago/MilitaryConflictsAndWars>))
    ?event <http://dbpedia.org/ontology/militaryForce> ?societalEventMilitaryForce .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/war> ?war .
    ?war <http://dbpedia.org/ontology/commander> ?polishRegimentWarCommander .
  }
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?actorRestingPlace ?awardeeRestingPlace ?childRestingPlace WHERE {
  OPTIONAL {
    # Resting place of an actor from a show with Emily Richard
    ?show dbo:starring <http://dbpedia.org/resource/Emily_Richard> .
    ?show dbo:castMember ?actor .
    ?actor dbo:deathPlace ?actorDeathPlace .
    OPTIONAL { ?actorDeathPlace rdfs:label ?actorRestingPlace . FILTER (lang(?actorRestingPlace) = ""en"") }
  }

  OPTIONAL {
    # Resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
    ?person dbo:honours <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?person dbo:deathPlace ?awardeeDeathPlace .
    OPTIONAL { ?awardeeDeathPlace rdfs:label ?awardeeRestingPlace . FILTER (lang(?awardeeRestingPlace) = ""en"") }
  }

  OPTIONAL {
    # Resting place of a child of James Burton (property developer)
    <http://dbpedia.org/resource/James_Burton_(property_developer)> dbo:child ?child .
    ?child dbo:deathPlace ?childDeathPlace .
    OPTIONAL { ?childDeathPlace rdfs:label ?childRestingPlace . FILTER (lang(?childRestingPlace) = ""en"") }
  }
}
```",7,7,8,3,3,3,3,71,0,16,1,0.0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","```sparql
SELECT ?restingPlaceGerald ?actorRestingPlace ?grandchildRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/deathPlace> ?restingPlaceGerald .
  }
  
  OPTIONAL {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
    ?show <http://dbpedia.org/property/starring> ?actor .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }
}
```",9,9,10,3,3,3,3,71,0,9,1,0.0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
  OPTIONAL {
    ?newsted <http://dbpedia.org/ontology/band> ?band1 .
    FILTER EXISTS { ?newsted rdfs:label ""Newsted"" . }
    
    OPTIONAL {
      ?song <http://dbpedia.org/property/producer> ?producer .
      FILTER EXISTS { ?song rdfs:label ""Used to Love Her"" . }
      
      ?producer <http://dbpedia.org/ontology/band> ?band2 .
      
      OPTIONAL {
        ?symphonyMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/San_Francisco_Symphony> .
        
        ?symphonyMember <http://dbpedia.org/ontology/band> ?band3 .
        FILTER EXISTS { ?band3 a <http://dbpedia.org/class/yago/MusicalGroup100000001> . }
      }
      
      FILTER (?band1 = ?band2 && ?band2 = ?band3)
    }
  }
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"```sparql
SELECT ?country ?arnulfoParty ?commander ?commanderParty WHERE {
  # Step 1: Find the country of El Valle de Antón
  <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?country .

  # Step 2: Find Arnulfo Arias's party
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?arnulfoParty .

  # Step 3: Identify the commander in the United States invasion of Panama
  ?commander a <http://dbpedia.org/ontology/Politician> ;
             <http://dbpedia.org/property/commandedEvent> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .

  # Step 4: Find the party of the commander
  ?commander <http://dbpedia.org/ontology/politicalParty> ?commanderParty .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia""@en ;
            dbp:birthName ""Victoria Louise of Prussia""@en ;
            dbo:royaltyType dbo:Royalty .

  # Step 2: Find her spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Determine the father of her spouse
  ?spouse dbo:parent ?father .

  # Step 4: Identify the child of this father
  ?father dbo:child ?child .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?michelePintoParty ?fatherOfAlumnusParty ?romanoProdiParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/politicalParty> ?michelePintoParty .
  }
  
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/politicalParty> ?fatherOfAlumnusParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?romanoProdiParty .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?grandchildRestingPlace ?awardeeRestingPlace WHERE {
  OPTIONAL {
    # Find the grandchildren of William Haliburton
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }
  
  OPTIONAL {
    # Find the resting place of awardees of Knight Grand Cross of the Order of St Michael and St George
    ?awardee <http://dbpedia.org/property/orderOfStMichaelAndStGeorge> ""Knight Grand Cross"" .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?professional ?person WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
    ?individual <http://purl.org/dc/terms/subject> ?profession .
    FILTER(?individual != <http://dbpedia.org/resource/Satomi_Ishihara>)
    BIND(?individual AS ?professional)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?person != <http://dbpedia.org/resource/Gigi_Rice>)
    BIND(?person AS ?person)
  }
}
```",4,4,5,2,2,3,3,71,1,1048536,0,9.537097880189255e-07,1.0,1.9074177569148665e-06
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?parent ?spouse WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Prince_Ernst_Augustus_of_Hanover> <http://dbpedia.org/ontology/birthYear> ""1914"" .
    <http://dbpedia.org/resource/Prince_Ernst_Augustus_of_Hanover> <http://dbpedia.org/ontology/parent> ?parent .
  }
  
  OPTIONAL {
    ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en ;
              <http://dbpedia.org/property/birthName> ""Victoria Louise of Prussia"" .
    ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
SELECT ?personDecedentCapital ?personDecedentWork WHERE {
  OPTIONAL {
    # Find the capital of Khemis Miliana District
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://www.geonames.org/ontology#capital> ?capital .
    
    # Find person decedent at this capital
    ?personDecedentCapital <http://dbpedia.org/property/deathPlace> ?capital .
  }
  
  OPTIONAL {
    # Identify the work location of Joseph C. Satterthwaite
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/workLocation> ?workLocation .
    
    # Find person decedent at this work location
    ?personDecedentWork <http://dbpedia.org/property/deathPlace> ?workLocation .
  }
}
```",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?professional ?associatedArtist ?bandMember WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/profession> ?professional .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/bandMember> ?bandMember .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","```sparql
SELECT ?commander ?awardee ?agencyLeader WHERE {
  # Commander in the force of Ferenc Szálasi
  OPTIONAL {
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    ?szalasi <http://dbpedia.org/property/militaryCommand> ?force .
    FILTER(?szalasi = <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi>)
  }

  # Awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape
  OPTIONAL {
    ?fraserAward <http://dbpedia.org/ontology/receiver> ?awardee .
    ?fraser <http://dbpedia.org/property/award> ?fraserAward .
    FILTER(?fraser = <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape>)
  }

  # Leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson
  OPTIONAL {
    ?gustav <http://dbpedia.org/ontology/politicalOffice> ?office .
    ?office <http://www.w3.org/2004/02/skos/core#broader> ?agency .
    FILTER(?gustav = <http://dbpedia.org/resource/Gustav_Jonson>)
    ?agencyLeader <http://dbpedia.org/ontology/leader> ?agency .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?partyProdi ?partyPinto WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?partyProdi .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?partyPinto .
  }
}
```",4,4,5,3,2,3,3,71,2,5,0,0.2857142857142857,1.0,0.4444444444444445
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbpedia-owl:parent <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Find his successor who is royalty
  ?successor dbpedia-owl:predecessor ?antiochus ;
             a dbo:Royalty .

  # Additional condition: Successor must be commander in Battle of Panium
  ?battle dbo:commander ?successor .
  FILTER (str(?battle) = ""Battle_of_Panium"")

  # Step 3: Determine the child of this successor
  ?child dbpedia-owl:parent ?successor ;
         a dbo:Royalty .

  # Additional condition: Child must be a descendant of Seleucus II Callinicus
  ?seleucus2 <http://dbpedia.org/ontology/child> ?intermediate .
  ?intermediate <http://dbpedia.org/ontology/child> ?child .
  FILTER (str(?seleucus2) = ""Seleucus_II_Callinicus"")

  # Step 4: Identify the spouse of this child
  ?child dbpedia-owl:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?commonChildParent WHERE {
  # Step 1: Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1925)

  # Step 2: Parent of Margaret
  ?parent1 dbo:child ?margaret .

  # Step 3: Child of this parent (could be Margaret or others)
  ?parent1Child dbo:parent ?parent1 .

  # Step 4: Géza von Habsburg
  ?geza a dbo:Person ;
        foaf:name ""Géza von Habsburg"" .

  # Step 5: Parent of Géza
  ?parent2 dbo:child ?geza .

  # Step 6: Child of this parent (common child)
  ?parent2Child dbo:parent ?parent2 .
  
  # Step 7: Archduke Joseph Karl of Austria
  ?josephKarl a dbo:Person ;
              foaf:name ""Joseph Karl of Austria"" .

  # Step 8: Child of Archduke Joseph Karl
  ?josephKarlChild dbo:parent ?josephKarl .

  # Find common child between parent2's children and Joseph Karl's children
  VALUES ?commonChild { ?parent2Child }
  FILTER(?parent2Child = ?josephKarlChild)

  # Step 9: Parent of the identified common child
  ?commonChildParent dbo:child ?commonChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            foaf:name ""Princess Victoria Louise of Prussia"" ;
            dbo:birthName ?birthName .

  # Step 2: Find Her Spouse
  ?princess dbo:spouse ?spouse .

  # Step 3: Identify Ernest Augustus, Duke of Brunswick's Child
  ?ernest a dbo:Person ;
          foaf:name ""Ernest Augustus, Duke of Brunswick"" .
  ?child dbo:parent ?ernest ;
         a dbo:Royalty .

  # Step 4: Determine the Father of Princess Victoria Louise’s Spouse
  ?spouse dbo:father ?fatherOfSpouse .

  # Step 5: Find the Common Child
  ?commonChild dbo:parent ?fatherOfSpouse ;
               dbo:parent ?child .

  # Step 6: Retrieve the Spouse of This Common Child
  ?commonChild dbo:spouse ?result .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parentOfIlona ?grandChild WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parentOfIlona .
  }
  
  OPTIONAL {
    # Find a child of Archduke Joseph Karl
    <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephKarl .
    
    # Find the grandchild (child of the above child)
    ?childOfJosephKarl <http://dbpedia.org/ontology/child> ?grandChild .
  }
}
```",3,3,4,2,2,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor ?parent ?child WHERE {
  ?actor <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> .
  ?actor <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,2,20,0,0,128,0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?alterEgoReference ?almaMater ?settlement WHERE {
  OPTIONAL {
    # Assuming Matthew Burland is associated with a fictional character
    ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Matthew_Burland> .
    ?character <http://dbpedia.org/ontology/alternateName> ?alterEgo .
    ?alterEgo <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?alterEgoReference .
  }
  
  OPTIONAL {
    # Alma mater of George Kilbon Nash
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  OPTIONAL {
    # Writer of ""Where It's At"" by Dustin Lynch
    ?song <http://dbpedia.org/property/writer> ?writer .
    FILTER(STRSTARTS(?song, ""http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)""))
    
    # Administrative entity of the writer
    ?adminEntity <http://dbpedia.org/ontology/administrativeUnit> ?entity .
    ?writer <http://www.w3.org/ns/prov#wasInfluencedBy> ?adminEntity .

    # Settlement in that administrative unit
    ?settlement <http://dbpedia.org/ontology/location> ?entity ;
                a <http://dbpedia.org/class/yago/Settlements100000007> .
  }
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?force ?war WHERE {
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Warsaw>;
           <http://dbpedia.org/property/force> ?force .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/war> ?war .
  }
}
```",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?childOfThinkhaya ?parentOfChild ?predecessor WHERE {
  # Step 1: Find children of Thinkhaya of Pagan
  ?childOfThinkhaya <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: For each child, find their parent who is a child of Narapati I of Ava
  ?parentOfChild <http://dbpedia.org/ontology/birthParent> ?childOfThinkhaya .
  ?parentOfChild <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .

  # Step 3: Check if this parent is the predecessor of an office holder and royalty who is a child of Thihapate of Mohnyin
  ?officeHolder <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?officeHolder <http://dbpedia.org/ontology/officelHolder> ?position .
  
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?officeHolder .
  FILTER (?parentOfChild = ?predecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?native ?movie ?claimToFame WHERE {
  # Step 1: Identify Hub City
  ?hubCity <http://dbpedia.org/ontology/nickname> ""Hub City"" .
  
  # Step 2: Find a movie involving Roz Ryan that is also a work and television show
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Movie> ;
         <http://dbpedia.org/ontology/work> ?work ;
         <http://dbpedia.org/ontology/tvShow> ?tvShow .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .

  # Step 3: Determine the native of Hub City who acted in this movie
  ?native <http://dbpedia.org/ontology/nationality> ?hubCity ;
          <http://dbpedia.org/ontology/starring> ?movie .
  
  # Step 4: Identify Michael Ballhaus's claim to fame and find an actor associated with it
  ?claimToFame <http://dbpedia.org/ontology/work> ?ballhausWork .
  ?ballhausWork <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Michael_Ballhaus> .
  
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/starring> ?claimToFame .
  }
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?henuttawyParent ?ramessesSpouse ?nefertariChild ?childParent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://www.w3.org/2006/vcard/ns#hasParent> ?henuttawyParent .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?ramessesSpouse .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Nefertari> <http://www.w3.org/2006/vcard/ns#hasChild> ?nefertariChild .
    ?nefertariChild <http://www.w3.org/2006/vcard/ns#hasParent> ?childParent .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?spouse ?person ?birthName WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
             <http://purl.org/dc/terms/profession> <http://dbpedia.org/resource/Category:Actresses> .
    ?alumnus <http://xmlns.com/foaf/0.1/name> ?person .
    ?alumnus <http://dbpedia.org/ontology/birthName> ?birthName .
  }
}
```",5,5,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?leader WHERE {
  # Step 1: Identify Gustav Jonson's associated leader
  ?gustavJonson a dbo:OfficeHolder ;
                dbo:office ?office .
  ?office dbo:head ?leader .

  # Step 2: Find Eastern Front Commander
  ?easternFrontCommander a dbo:MilitaryPerson ;
                         dbo:militaryConflict <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .

  # Step 3: Find Volcano and Ryukyu Islands Campaign Awardee
  ?awardee a dbo:AwardRecipient ;
           dbo:award <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .

  # Step 4: Ensure the leader is connected to both roles
  FILTER(?leader = ?easternFrontCommander || ?leader = ?awardee)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find child of Narapati I of Ava
  ?narapatiChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  
  # Step 2: Find father of Thinkhaya of Pagan and his child
  ?thinkhayaFather <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?thinkhayaChild <http://dbpedia.org/ontology/father> ?thinkhayaFather .

  # Step 3: Find predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .

  # Step 4: Find the common child and its parent
  ?commonChild rdf:type <http://dbpedia.org/ontology/Person> .
  FILTER (?narapatiChild = ?commonChild)
  FILTER (?thinkhayaChild = ?commonChild)

  ?parent <http://dbpedia.org/ontology/fatherOrMother> ?commonChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","```sparql
SELECT ?awardeeAlmaMater ?mayorAlmaMater ?qubAlmaMater WHERE {
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Royal_Medals> .
    ?award <http://dbpedia.org/property/awardee> ?awardee .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
  
  OPTIONAL {
    ?mayor <http://www.wikidata.org/entity/Q11424> :position ""Mayor of Northern Ireland Forum"" .
    ?mayor <http://dbpedia.org/ontology/politicianOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
  
  OPTIONAL {
    ?qub <http://www.wikidata.org/entity/Q11424> :figure ""QUB"" .
    ?qub <http://dbpedia.org/ontology/almaMater> ?qubAlmaMater .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
# Step 1: Retrieve the commander in Battle of Verdun
SELECT ?verdunCommander WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .
}

# Step 2: Identify the military conflict involving this commander
SELECT DISTINCT ?war WHERE {
  ?verdunCommander <http://dbpedia.org/ontology/commander> ?battle .
  ?battle <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?war .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
      a <http://dbpedia.org/ontology/Event> .
}

# Step 3: Find the capital of Algeria and persons decedent there
SELECT DISTINCT ?decedent WHERE {
  <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/capital> ?algeriaCapital .
  ?person <http://dbpedia.org/ontology/deathPlace> ?algeriaCapital ;
          a <http://dbpedia.org/ontology/Person> .
}

# Step 4: Link to works by the author of ""French Algeria""
SELECT DISTINCT ?decedent WHERE {
  ?author <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/French_Algeria> ;
          a <http://dbpedia.org/ontology/Person> .
  ?work <http://purl.org/dc/terms/creator> ?author .
  ?person <http://dbpedia.org/ontology/deathPlace> ?work ;
          a <http://dbpedia.org/ontology/Person> .
}

# Step 5: Combine information to find the commander
SELECT DISTINCT ?commander WHERE {
  # Assuming previous results are stored in variables or intermediate steps
  ?commander <http://dbpedia.org/ontology/commander> ?battle .
  ?battle <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?war .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
      a <http://dbpedia.org/ontology/Event> .
  
  # Link to decedents from previous steps
  OPTIONAL { 
    ?commander <http://dbpedia.org/ontology/deathPlace> ?decedentLocation .
    FILTER(?decedentLocation IN (?algeriaCapital, ?work))
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?deathPlace ?birthPlace ?administration WHERE {
  OPTIONAL {
    # Death place of Yūki Hideyasu's father (who is a politician)
    <http://dbpedia.org/resource/Yuki_Hideyasu> <http://www.w3.org/2002/07/owl#sameAs> ?yukiResource .
    ?yukiResource <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Birth place of the commander in Boshin War
    <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  OPTIONAL {
    # Administration of Emperor Go-Mizunoo's father
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://www.w3.org/2002/07/owl#sameAs> ?goMizunooResource .
    ?goMizunooResource <http://dbpedia.org/ontology/father> ?fatherGoMizunoo .
    ?fatherGoMizunoo <http://dbpedia.org/property/administration> ?administration .
  }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?peninsularCommanderWar ?commanderClaimToFame ?triggeWar ?gahnWar WHERE {
  # Part 1: War of the commander in reference to Peninsular War
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> <http://dbpedia.org/resource/Peninsular_War> .
    ?war <http://www.w3.org/2006/vcard/ns#hasName> ?peninsularCommanderWar .
  }

  # Part 2: Claim to fame of the commander in the war
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/war> ?war .
    ?commander <http://dbpedia.org/property/claimToFame> ?commanderClaimToFame .
  }

  # Part 3: War of Thomas Trigge
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/war> ?triggeWar .
  }

  # Part 4: War of Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthPlace> ?gahnBirthPlace .
    ?war <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/C._P._Gahn> .
    ?war <http://www.w3.org/2006/vcard/ns#hasName> ?gahnWar .
  }
}
```",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify the commander in Battle of Panium
  ?commander <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/Battle_of_Panium> .

  # Step 2: Find the child of the commander
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> .
  ?child <http://dbpedia.org/ontology/father> ?commander .

  # Step 3: Determine the successor to Antiochus (son of Antiochus III the Great)
  ?antiochusSon <http://dbpedia.org/resource/Antiochus_III_the_Great#Successor> ?successor .
  
  # Find the child of this successor who is a royalty
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalChild <http://dbpedia.org/ontology/father> ?successor .

  # Determine the spouse of this royal child
  ?spouse <http://dbpedia.org/ontology/spouse> ?royalChild .

  # Step 4: Identify the parent of the child from step 2
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> .
  ?parent <http://dbpedia.org/ontology/child> ?child .

}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
SELECT ?shenaBand ?athleteSoccerPlayerBand WHERE {
  # Find the band associated with Shèna
  OPTIONAL {
    ?person1 <http://dbpedia.org/property/birthName> ""Shèna"" .
    ?person1 <http://www.w3.org/2002/07/owl#sameAs> ?shena .
    ?shena <http://dbpedia.org/ontology/memberOfBand> ?band1 .
    BIND(?band1 AS ?shenaBand)
  }

  # Find the band associated with an athlete and soccer player who died in Zolotonosha
  OPTIONAL {
    ?person2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
    ?person2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
    ?person2 <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
    ?person2 <http://dbpedia.org/ontology/memberOfBand> ?band2 .
    BIND(?band2 AS ?athleteSoccerPlayerBand)
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?personDecedentCapital ?personDecedentWork ?commanderWar WHERE {
  OPTIONAL {
    ?district <http://dbpedia.org/ontology/capital> ?capital .
    FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>)
    ?deathEvent <http://dbpedia.org/property/decedent> ?personDecedentCapital ;
                <http://dbpedia.org/ontology/location> ?capital .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
    ?deathEvent2 <http://dbpedia.org/property/decedent> ?personDecedentWork ;
                 <http://dbpedia.org/ontology/location> ?work .
  }
  
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/commander> ?commanderWar .
    FILTER(?war = <http://dbpedia.org/resource/Military_conflict_involving_Frédéric-Georges_Herr>)
    ?person <http://dbpedia.org/property/name> ""Frédéric-Georges Herr"" .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?author WHERE {
  # Step 1: Find the author of ""Pushd"" and ""Popd""
  ?pushd <http://dbpedia.org/ontology/author> ?author .
  ?popd <http://dbpedia.org/ontology/author> ?author .
  
  FILTER(?pushd = <http://dbpedia.org/resource/Pushd> && ?popd = <http://dbpedia.org/resource/Popd>)
  
  # Step 2: Find a software work by this author
  ?softwareWork <http://dbpedia.org/ontology/author> ?author .
  ?softwareWork <http://www.w3.org/2004/02/skos/core#prefLabel> ?label .
  FILTER(CONTAINS(LCASE(?label), ""software""))
  
  # Step 3: Find an award associated with Ralph L. Brinster
  ?award <http://dbpedia.org/ontology/receiver> <http://dbpedia.org/resource/Ralph_L._Brinster> .

  # Step 4: Find entities related to this award
  ?entity <http://www.w3.org/2002/07/owl#sameAs> ?award .
  
  # Step 5: Determine the author of a work associated with these entities
  ?relatedWork <http://dbpedia.org/ontology/subject> ?entity .
  ?relatedWork <http://dbpedia.org/ontology/author> ?finalAuthor .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?writer WHERE {
  # Find the death place of Winnie Madikizela-Mandela, ensuring it's a settlement
  ?deathPlace <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> .
  ?deathPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  ?settlement a <http://dbpedia.org/class/yago/Settlements1000000InSouthAfrica> .

  # Find an album associated with Dave Flett
  ?album <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Dave_Flett> ;
         a <http://dbpedia.org/ontology/Album> .

  # Determine the writer of that album
  ?album <http://purl.org/dc/terms/creator> ?writer .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  OPTIONAL {
    # Step 1: Find Leonid Slutsky's team
    <http://dbpedia.org/resource/Leonid_Slutsky> <http://dbpedia.org/ontology/managedTeam> ?team .
    ?team a <http://dbpedia.org/class/yago/SoccerClub100000001> ;
          a <http://dbpedia.org/class/yago/SportsTeamSeason1000000> .

    # Step 2: Find England National Beach Soccer Team's nickname
    <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/ontology/nickname> ?nickname .
    
    # Step 3: Identify players in both teams
    ?player <http://dbpedia.org/property/team> ?team ;
            <http://dbpedia.org/property/team> ?beachTeam .
    FILTER(?beachTeam = <http://dbpedia.org/resource/England_national_beach_soccer_team>)
  }
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Find the parent of a child of Ramesses II
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?parent .

  # Find the parent of Meritamen
  OPTIONAL {
    <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/birthParent> ?parent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?militaryForce ?nativeOfficeHolder ?polishHorseCommander WHERE {
  OPTIONAL {
    ?event rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .
    ?event dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ""Rutger Jan Schimmelpenninck""@en .
    ?event dbp:militaryForce ?militaryForce .
  }
  
  OPTIONAL {
    ?officeHolder dbo:nationality <http://dbpedia.org/resource/Kingdom_of_Ireland> ;
                  rdf:type <http://dbpedia.org/ontology/OfficeHolder> .
    ?officeHolder dbo:commanderInWar ?event .
  }

  OPTIONAL {
    ?polishHorse rdf:type <http://dbpedia.org/ontology/MilitaryUnit>, <http://dbpedia.org/ontology/Organisation> ;
                 rdfs:label ""Polish Horse""@en .
    ?polishHorse dbp:commanderInWar ?event .
    ?polishHorseCommander dbp:commanderInWar ?polishHorse .
  }
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?almaMaterJohnAlderdice ?almaMaterAllenHill ?nickname WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMaterJohnAlderdice .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMaterAllenHill .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?entity <http://dbpedia.org/ontology/educationalInstitution> [] .
    ?entity <http://dbpedia.org/ontology/organisation> [] .
    ?entity <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2006/vcard/ns#country-name> ""Northern Ireland"" .
    ?entity <http://xmlns.com/foaf/0.1/nick> ?nickname .
  }
}
```",5,7,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?entityInNewZealand ?war WHERE {
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?entity ?p ?o .
    BIND(?o AS ?entityInNewZealand)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/property/war> ?war .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?nationality ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2006/vcard/ns#hasNationality> ?nationality .
  }
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/relatedWork> ?event .
    ?event <http://dbpedia.org/ontology/event> ?war .
    ?work <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> .
  }
}
```",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT DISTINCT ?artist WHERE {
  OPTIONAL {
    { 
      <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?intermediate1 .
      ?intermediate1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    }
    UNION
    {
      <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?intermediate2 .
      ?intermediate2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    }
  }
}
```",3,3,4,2,2,3,3,71,3,18,0,0.14285714285714285,1.0,0.25
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?bandShena ?bandWriter WHERE {
  # Step 1: Get Pavlo Khudzik's birth date
  BIND(<http://dbpedia.org/resource/Pavlo_Khudzik> AS ?pavloKhudzik)
  
  # Retrieve the birth date of Pavlo Khudzik
  ?pavloKhudzik <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Step 2: Find persons born on the same date as Pavlo Khudzik
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  FILTER(?person != ?pavloKhudzik) # Exclude Pavlo Khudzik himself

  # Step 3: Get band of Shèna
  BIND(<http://dbpedia.org/resource/Shèna> AS ?shena)
  ?shena <http://dbpedia.org/ontology/band> ?bandShena .

  # Step 4: Get writer of ""Apollo"" by Hardwell and their band
  BIND(<http://dbpedia.org/resource/Apollo_(Hardwell_song)> AS ?apolloSong)

  ?apolloSong <http://dbpedia.org/property/writer> ?writer .
  ?writer <http://dbpedia.org/ontology/band> ?bandWriter .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?resident ?child ?father WHERE {
  # Step 1: Find Stephen Verona's birthplace that is a settlement
  OPTIONAL { 
    <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?settlement a <http://dbpedia.org/class/yago/Settlement108069068> .
  }

  # Step 2: Find residents of the settlement
  OPTIONAL {
    ?resident <http://dbpedia.org/ontology/residence> ?settlement .
  }
  
  # Step 3: Find children of Phillip Spaulding who are fictional and soap characters
  OPTIONAL {
    <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/child> ?child .
    ?child a <http://dbpedia.org/class/yago/FictionalCharacter108069068> ;
           a <http://dbpedia.org/class/yago/SoapCharacter108069068> .
  }

  # Step 4: Identify the father of these children
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> ?father .
  }
}
```",4,7,5,2,2,3,2,20,1,37197,0,2.6883165761600087e-05,1.0,5.376488615285358e-05
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?commonParent WHERE {
  # Step 1: Identify Archduchess Margaret of Austria (born 1925)
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentMargaret .

  # Step 2: Find the child of this parent
  ?childOfParent <http://www.w3.org/2006/vcard/ns#hasParent> ?parentMargaret .

  # Step 3: Identify a native of Budapest
  ?nativeBudapest <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
  
  # Step 4: Find the parent of this native
  ?parentNativeBudapest <http://www.w3.org/2006/vcard/ns#hasParent> ?nativeBudapest .

  # Step 5: Determine the common parent
  ?commonParent <http://www.w3.org/2006/vcard/ns#hasChild> ?childOfParent .
  ?commonParent <http://www.w3.org/2006/vcard/ns#hasChild> ?parentNativeBudapest .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?finalArtist WHERE {
  # Step 1: Find associated musical artists of Watchtower
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .
  
  # Step 2: Find band members of Don Dokken
  ?donDokkenMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .

  # Step 3: Find associated musical artists of Meshuggah's band members
  ?meshuggahMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
  ?meshuggahArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?meshuggahMember .

  # Step 4: Connect the associations
  OPTIONAL { 
    ?watchtowerArtist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
    ?donDokkenArtist <http://dbpedia.org/ontology/member> ?donDokkenMember .
    ?finalArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?donDokkenArtist .
  }
  
  # Ensure the final entity is a band, group, and organization
  ?finalArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band115930069> ;
               <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicGroup118557068> ;
               <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?organization .
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
SELECT ?francoConflict ?francoCommander ?directorEvent ?spanishCivilWarForce WHERE {
  # Step 1: Identify the military conflict involving Francisco Franco
  ?conflict <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco> .
  ?conflict a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
           a <http://dbpedia.org/class/yago/Event106067786> ;
           a <http://dbpedia.org/class/yago/MilitaryConflict106067787> .

  # Step 2: Find the commander in this force
  ?conflict <http://dbpedia.org/ontology/commander> ?francoCommander .

  # Step 3: Identify the figure known as ""El Director""
  ?directorEvent <http://dbpedia.org/property/person> ?elDirector .
  ?elDirector rdfs:label ""El Director""@en .

  # Step 4: Determine the military force involved in the Spanish Civil War
  ?spanishCivilWar a <http://dbpedia.org/class/yago/MilitaryConflict106067787> ;
                  <http://dbpedia.org/ontology/militaryForce> ?spanishCivilWarForce .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?profession ?person WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/subject> ?profession .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?birthYear .
    FILTER (YEAR(?birthYear) = 1970)
  }
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?polishHorse ?war ?commander1813 ?commanderWar ?militaryForce WHERE {
  # Step 1: Identify the 'Polish Horse'
  { 
    ?polishHorse <http://www.w3.org/2004/02/skos/core#prefLabel> ""Polish Horse""@en .
    ?polishHorse a <http://dbpedia.org/class/yago/MilitaryUnit100000001> ;
                 a <http://dbpedia.org/class/yago/Organisation100000001> .
  }

  # Step 2: Find the war associated with 'Polish Horse'
  OPTIONAL {
    ?polishHorse <http://dbpedia.org/ontology/participatedIn> ?war .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/Event> .
  }

  # Step 3: Identify commanders
  OPTIONAL {
    ?commander1813 <http://dbpedia.org/property/commandedMilitaryForce> ?germanCampaign1813 .
    ?germanCampaign1813 <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/German_Campaign_of_1813> .
  }
  
  OPTIONAL {
    ?commanderWar <http://dbpedia.org/property/commandedMilitaryForce> ?war .
  }

  # Step 4: Determine military force in Napoleonic Wars
  OPTIONAL {
    ?militaryForce <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Napoleonic_Wars> .
  }
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?administration WHERE {
  # Step 1: Find the city or area associated with postal code ""21205""
  ?location <http://dbpedia.org/ontology/postalCode> ""21205"" .
  
  # Step 2: Identify countries in the Central European Time region
  ?country <http://www.w3.org/2006/time#during> ?cet .

  # Ensure CET is linked to this country
  ?cet <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  
  # Step 3: Find the ruling party in that location and its administration
  ?party <http://dbpedia.org/ontology/rulingParty> ?location .
  ?party a <http://dbpedia.org/ontology/PoliticalParty> .  # Ensure it's a political party
  
  # Retrieve the administration of this party
  ?party <http://dbpedia.org/property/administration> ?administration .

  FILTER EXISTS { ?country <http://www.w3.org/2006/time#during> ?cet }
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?nickname ?nativePlace WHERE {
  # Step 1: Find the nickname for Jackson, Tennessee
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickName> ?nickname .

  # Step 2: Identify the movie featuring Roz Ryan that is also a television show and work
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow100000001> .
  ?movie <http://www.w3.org/2002/07/owl#sameAs> ?work .

  # Step 3: Find actors of this movie
  ?movie <http://dbpedia.org/ontology/starring> ?actor .

  # Step 4: Check if the actor is also in The Departed
  ?departedMovie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie100000001> .
  ?departedMovie <http://dbpedia.org/resource/The_Departed> .
  ?departedMovie <http://dbpedia.org/ontology/starring> ?actor .

  # Step 5: Find the native place of this actor
  ?actor <http://dbpedia.org/property/nativePlace> ?nativePlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?nativeOfResidence WHERE {
  # Step 1: Identify John Pertwee
  ?johnPertwee a dbo:Person ;
               foaf:name ""John Devon Roland Pertwee"" .

  # Step 2: Find his child who is an actor, narrator, or producer
  ?child dbo:parent ?johnPertwee ;
         (dbo:actor | dbo:narrator | dbo:producer) _:role .

  # Step 3: Identify claim to fame as a film or military conflict
  ?claimToFame dbo:film|dbo:militaryConflict _:fame .
  ?child dbo:claimToFame ?claimToFame .

  # Step 4: Find actor/office holder/native of France related to these claims
  ?person dbo:actor|dbo:officeHolder _:role ;
          foaf:nationality <http://dbpedia.org/resource/France> ;
          dbo:birthPlace _:place .
  ?claimToFame dbo:film|dbo:militaryConflict _:fame .

  # Step 5: Determine the residence of this French individual
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country <http://dbpedia.org/resource/United_Kingdom> .

  # Step 6: Find native of this British settlement
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"```sparql
SELECT ?spouseTed ?spouseAlumnus WHERE {
  # Step 1: Find Ted McGinley's birth name
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .
  }
  
  # Step 2: Find spouse of Ted McGinley using his birth name
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ?tedBirthName .
    ?person <http://dbpedia.org/property/spouse> ?spouseTed .
  }

  # Step 3: Find Satomi Ishihara's profession
  OPTIONAL { 
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/profession> ?satomiProfession .
  }
  
  # Step 4: Find an alumnus of Ohio State University with the same profession as Satomi Ishihara
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
             <http://purl.org/dc/terms/profession> ?satomiProfession .
    
    # Step 5: Find spouse of this alumnus using their birth name
    ?alumnus <http://dbpedia.org/ontology/birthName> ?alumnusBirthName .
    ?person2 <http://dbpedia.org/ontology/birthName> ?alumnusBirthName .
    ?person2 <http://dbpedia.org/property/spouse> ?spouseAlumnus .
  }
}
```",8,8,9,3,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?battle <http://dbpedia.org/property/commander> ?commander .
  FILTER(STRSTARTS(STR(?battle), ""Battle of Perire""))
  
  ?commander <http://dbpedia.org/ontology/parent> ?meritamen .
  ?meritamen <http://www.w3.org/2000/01/rdf-schema#label> ""Meritamen"" .
  
  ?commander <http://dbpedia.org/ontology/parent> ?henuttawy .
  ?henuttawy <http://www.w3.org/2000/01/rdf-schema#label> ""Henuttawy (19th dynasty)"" .

  ?father <http://dbpedia.org/ontology/child> ?commander .
  
  ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Jon Pertwee
  ?jonPertwee <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
  
  # Step 2: Find Sylvie Bermann's Child
  ?sylvieBermann <http://dbpedia.org/ontology/spouse> ?child .

  # Step 3: Determine Sylvie Bermann's Residence
  ?sylvieBermann <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2006/vcard/ns#country-name> ""United Kingdom"" .
  
  # Step 4: Identify a Professional in Acting, Narration, and Production
  ?professional <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
                <http://dbpedia.org/ontology/profession> ?actorRole ;
                <http://dbpedia.org/ontology/birthPlace> ?residence .
  FILTER(?actorRole IN (<http://dbpedia.org/resource/Actor>, <http://dbpedia.org/resource/Narrator>, <http://dbpedia.org/resource/Producer>)).
  
  # Step 5: Find Claim to Fame (Film and Military Conflict)
  ?professional <http://dbpedia.org/ontology/notableWorks> ?claimToFame .
  ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/resource/Film>, <http://dbpedia.org/resource/Military_conflict>) .

  # Step 6: Identify Actor
  ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?triggeFame ?peninsularWarCommander ?peninsularFame WHERE {
  # Find Thomas Trigge's command in a war
  OPTIONAL {
    ?war rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .
    ?war rdf:type <http://dbpedia.org/ontology/SocietalEvent> .
    ?war rdf:type <http://dbpedia.org/ontology/Event> .
    ?triggeCommander dbp:commander ""Thomas Trigge"" .
    ?triggeCommander dbp:participatedIn ?war .
    ?triggeCommander dbp:claimToFame ?triggeFame .
  }

  # Find the commander in the Peninsular War
  OPTIONAL {
    <http://dbpedia.org/resource/Peninsular_War> rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .
    <http://dbpedia.org/resource/Peninsular_War> rdf:type <http://dbpedia.org/ontology/SocietalEvent> .
    <http://dbpedia.org/resource/Peninsular_War> rdf:type <http://dbpedia.org/ontology/Event> .
    ?peninsularCommander dbp:commander ?peninsularWarCommander .
    ?peninsularCommander dbp:participatedIn <http://dbpedia.org/resource/Peninsular_War> .
    ?peninsularCommander dbp:claimToFame ?peninsularFame .
  }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?warOrozimbo ?forceNarciso ?warPisagua WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?warOrozimbo .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/memberOfMilitaryOrganization> ?forceNarciso .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/participatedIn> ?warPisagua .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
# Step 1: Find the decedent's birth date
SELECT ?decedentBirthDate WHERE {
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:dateOfBirth ?birthDate .
  ?deathEvent dbo:agent ?athlete ;
              dbo:endedAtTime ?deathDate .
}

# Step 2: Find person born on decedent's death date
SELECT ?person WHERE {
  ?person dbo:dateOfBirth ?decedentBirthDate .
}

# Step 3: Find Tracey Elizabeth McSween's band
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> dbo:member ?band .
}

# Step 4: Find the writer of Amba Shepherd's song and their band
SELECT ?writerBand WHERE {
  ?song dbo:lyricsBy ?writer ;
        dbo:title ""Amba Shepherd"" .
  ?writer dbo:member ?writerBand .
}
```

Note: This query is conceptual and assumes certain properties and resources are available in DBpedia. Adjustments may be needed based on actual data availability.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?party ?reference WHERE {
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?father <http://xmlns.com/foaf/0.1/father> ?alumnus .
    ?father <http://dbpedia.org/property/politicalParty> ?party .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ?reference .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?donDokkenBandMember WHERE {
  # Step 1: Identify the persona of Don Dokken who is a musical artist
  ?person <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Don_Dokken> .
  
  # Step 2: Find associated musical artist of Watchtower
  ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .

  # Step 3: Identify Meshuggah's band members
  ?meshuggah <http://dbpedia.org/ontology/bandMember> ?meshuggahMember .
  ?meshuggah a <http://dbpedia.org/class/yago/MusicalGroup115069068> . # Ensures it is a group

  # Step 4: Find associated musical artist of Meshuggah's member
  ?meshuggahMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?meshuggahAssociatedArtist .

  # Step 5: Identify band member of Don Dokken persona through these associations
  ?donDokkenBandMember <http://dbpedia.org/ontology/bandMember> ?person .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?team WHERE {
  ?person <http://dbpedia.org/ontology/nationality> wd:Q1454 ; # Nationality as British (Wolverhampton is in England)
           <http://dbpedia.org/ontology/birthPlace> wd:Q1206 . # Birthplace as Wolverhampton
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (
    EXISTS { ?profession rdfs:label ""soccer player""@en }
    && EXISTS { ?profession2 rdfs:label ""soccer manager""@en }
    && ?person = ?person2
  )
  
  ?player <http://dbpedia.org/ontology/playerFor> ?team .
  ?player <http://www.w3.org/ns/prov#wasDerivedFrom> ?source .
  ?source <http://purl.org/dc/terms/subject> wd:Q1206 . # Subject as Sacramento Republic FC
  ?source <http://dbpedia.org/ontology/sportSeason> ?season .
  FILTER (?season > ""2014""^^xsd:gYear) .

  FILTER(?player = ?person)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?associatedArtist ?josephBand ?nevermoreBandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en ;
            <http://dbpedia.org/property/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/ontology/band> ?josephBand .
  }
  
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> ?artist ;
               <http://dbpedia.org/ontology/bandMember> ?nevermoreBandMember .
    FILTER(CONTAINS(LCASE(?reference), ""nevermore""))
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?meritamenParent ?ramessesSpouse ?child ?childParent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Meritamen> <http://www.w3.org/2006/vcard/ns#hasParent> ?meritamenParent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?ramessesSpouse .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ramesses_II> <http://www.w3.org/2006/vcard/ns#hasChild> ?child .
    ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?childParent .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus3 <http://dbpedia.org/ontology/child> ?antiochus .
  
  # Step 2: Find his child
  ?antiochus <http://dbpedia.org/ontology/child> ?child1 .

  # Step 3: Identify the successor of Antiochus II Theos who is a royalty
  ?antiochus2 <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the spouse of Laodice IV
  ?laodiceIV <http://dbpedia.org/property/spouse> ?successor .

  # Step 5: Identify the child of this successor (spouse of Laodice IV) who is a royalty
  ?successor <http://dbpedia.org/ontology/child> ?child2 .
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Find the parent of the child from step 2
  ?child1 <http://dbpedia.org/ontology/parent> ?parent .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?rifWarForce ?predecessorConflictForce WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce .
  }
  
  OPTIONAL {
    ?indalecio <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Indalecio_Prieto> ;
               <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    ?predecessorConflict <http://dbpedia.org/ontology/sameAs> ?predecessor ;
                         <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent ;
                         <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
    
    ?militaryConflict <http://dbpedia.org/ontology/militaryForce> ?predecessorConflictForce .
  }
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT DISTINCT ?producer WHERE {
  ?rapper a dbo:MusicalArtist ;
          dbo:profession ""Rapper"" .
  
  ?song dbo:artist ?rapper ;
        rdf:type dbo:Song, dbo:MusicalWork .

  ?song dbo:producer ?producer .
}
```",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?grandchildRestingPlace ?actorRestingPlace WHERE {
  OPTIONAL {
    # Find the child of William Haliburton
    <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
    
    # Find the grandchild (child's child)
    ?child <http://dbpedia.org/ontology/child> ?grandchild .
    
    # Get the resting place of the grandchild
    ?grandchild <http://dbpedia.org/ontology/restingPlace> ?grandchildRestingPlace .
  }
  
  OPTIONAL {
    # Find actors in ""Enemy at the Door""
    <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/starring> ?actor .
    
    # Get the resting place of each actor
    ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .
  }
}
```",5,5,6,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace ?settlement WHERE {
  OPTIONAL {
    # Query to find the resting place of the architect of P.D. Houston Jr. House
    <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
    ?architect <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://dbpedia.org/ontology/burialSite> ?restingPlace .
  }
  
  OPTIONAL {
    # Query to find entities in the birthplace of Marion James that are settlements
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?settlement .
    FILTER EXISTS { ?settlement a <http://dbpedia.org/class/yago/Settlements100000007>. }
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the capital of Khemis Miliana District's country
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://www.w3.org/2004/02/skos/core#broader> ?country .
  ?country <http://dbpedia.org/ontology/capital> ?capital .

  # Step 2: Find person decedent at this capital
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER (?deathPlace = ?capital) .

  # Step 3: Identify military conflict involving Frédéric-Georges Herr
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  ?war <http://dbpedia.org/property/commander> ?commander .
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .

  # Step 4: Ensure the person is decedent at the capital
  FILTER (?person = ?decedent)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?actorArtist ?bandMemberArtist WHERE {
  OPTIONAL {
    # Step 1: Find actor of ""Return to Nuke 'Em High Volume 1""
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STR(?film) = ""Return_to_Nuke_'Em_High_Volume_1"")
    
    # Step 2: Get associated musical artist for the actor
    ?actor <http://dbpedia.org/property/birthName> ?birthNameActor .
    ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?actorArtist .
  }
  
  OPTIONAL {
    # Step 3: Find band member of Nevermore
    ?bandMember <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
    
    # Step 4: Get birth name of Joseph Michael
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael""^^xsd:string .
    
    # Step 5: Get associated musical artist for the person with this birth name
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMemberArtist .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Find the war that is a military conflict, event, and societal event
  ?war <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Military_conflict> .
  ?war <http://purl.org/dc/terms/type> ?type1 .
  ?war <http://purl.org/dc/terms/type> ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/Event> && ?type2 = <http://dbpedia.org/ontology/Societal_event>)
  
  # Step 2: Check if Saitō Hajime was a commander in this war
  OPTIONAL {
    ?war <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Saito_Hajime> .
  }
  
  # Step 3: Identify the administration of Emperor Go-Mizunoo's father
  ?emperorFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Emperor_Go-Mizunoo> .
  ?administration <http://dbpedia.org/property/administrationOf> ?emperorFather .

  # Step 4: Retrieve the birthplace of Saitō Hajime
  OPTIONAL {
    <http://dbpedia.org/resource/Saito_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?child ?actor WHERE {
  # Step 1: Find Jon Pertwee's birth name
  OPTIONAL { 
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .
  }
  
  # Step 2: Find the child of Jon Pertwee using his birth name
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/child> ?child .
  }
  
  # Step 3: Identify the professional actor, narrator, and producer
  OPTIONAL {
    ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
                  <http://dbpedia.org/ontology/narrator> ?narrator ;
                  <http://dbpedia.org/ontology/producer> ?producer .
  }
  
  # Step 4: Find their claim to fame involving a film and military conflict
  OPTIONAL {
    ?professional <http://purl.org/dc/terms/references> ?claimToFame .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> , <http://dbpedia.org/ontology/MilitaryConflict>) .
  }
  
  # Step 5: Identify the actor of this film
  OPTIONAL {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?gotabhayaWar ?maheshWar ?sriLankaEntity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/work> ?work .
    ?work <http://dbpedia.org/ontology/relatedTo> ?gotabhayaWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/work> ?work .
    ?work <http://dbpedia.org/ontology/relatedTo> ?maheshWar .
  }
  OPTIONAL {
    { 
      ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Sri_Lanka> .
      FILTER (?gotabhayaWar = ?entity || ?maheshWar = ?entity)
    } UNION {
      ?entity <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Sri_Lanka> .
      FILTER (?gotabhayaWar = ?entity || ?maheshWar = ?entity)
    }
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # For the person involved in Francoist Spain and Biscay Campaign
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/decedentAt> <http://dbpedia.org/resource/Francoist_Spain> .
    ?person <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Biscay_Campaign> .
    ?event1 <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?event1 <http://dbpedia.org/ontology/type> ?type1 .
    FILTER (?type1 IN (<http://dbpedia.org/class/yago/SocietalEvent108930068>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    ?event1 <http://dbpedia.org/property/militaryForce> ?militaryForce1 .
  }

  # For Francisco Largo Caballero
  OPTIONAL {
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://www.w3.org/2002/07/owl#sameAs> ?event2 .
    ?event2 <http://dbpedia.org/ontology/type> ?type2 .
    FILTER (?type2 IN (<http://dbpedia.org/class/yago/SocietalEvent108930068>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    ?event2 <http://dbpedia.org/property/militaryForce> ?militaryForce2 .
  }
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor WHERE {
  # Find Michael Ballhaus's claim to fame
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work .
  
  # Find actors native to Compton, California
  ?actor a <http://dbpedia.org/ontology/Actor> ;
         <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .

  # Check if the actor is associated with Michael Ballhaus's claim to fame
  OPTIONAL { ?work <http://dbpedia.org/ontology/starring> ?actor . }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?nickname ?team WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?nickname .
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?birthDate .
    ?birthDate <http://purl.org/dc/terms/date> ""1978-09-15""^^xsd:date .
    ?person <http://dbpedia.org/ontology/birthPlace> ?place .
    ?person <http://dbpedia.org/ontology/team> ?team .
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?soccerPlayer .
    ?soccerPlayer <http://dbpedia.org/ontology/soccerPlayer> ?isSoccerPlayer .
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?soccerManager .
    ?soccerManager <http://dbpedia.org/ontology/soccerManager> ?isSoccerManager .
  }
}
```",4,6,5,2,2,3,2,20,0,3,1,0.0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?native WHERE {
  # Find the British settlement where Sylvie Bermann resides
  OPTIONAL { 
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?residence .
    ?residence <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Settlement> .
    ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .
  }
  
  # Find actors of Dog Soldiers and their native places
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Dog_Soldiers> .
    ?actor <http://dbpedia.org/ontology/nativePlace> ?native .
    
    # Ensure the actor's native place is the same as Sylvie Bermann's residence
    FILTER (?residence = ?native)
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find the parent who is a royalty of Prince George William of Hanover
  ?parent rdf:type dbo:Royalty .
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> dbo:childOf ?parent .

  # Step 2: Identify the child of this royal parent
  ?parentChild dbo:child ?child .

  # Step 3: Determine the father of Ernest Augustus, Duke of Brunswick
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .

  # Step 4: Identify the child of this father
  ?fatherChild dbo:child ?fatherChildIndividual .

  # Step 5: Find the parent of the child identified in step 2
  ?childParent rdf:type dbo:Royalty .
  ?child dbo:parent ?childParent .

  # Ensure that the final parent is related to both steps 2 and 4
  FILTER(?child = ?fatherChildIndividual)
  
  # Return the final parent
  BIND(?childParent AS ?finalParent)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?professional ?birthName WHERE {
  # Step 1: Find Ted McGinley's spouse
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  
  # Step 2: Get the birth name of Ted McGinley's spouse
  OPTIONAL {
    ?spouse <http://dbpedia.org/property/birthName> ?birthNameSpouse .
  }

  # Step 3: Find an alumnus of Ohio State University with that birth name
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
             <http://dbpedia.org/property/birthName> ?birthNameSpouse .
  }

  # Step 4: Get the professional roles and birth name of this alumnus
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/occupation> ?professional .
    FILTER (CONTAINS(LCASE(?professional), ""actress"") || CONTAINS(LCASE(?professional), ""person""))
  }
  
  # Retrieve the birth name of the alumnus
  OPTIONAL {
    ?alumnus <http://dbpedia.org/property/birthName> ?birthName .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","```sparql
SELECT ?ilonaParent ?nativeParent WHERE {
  # Query for Archduchess Ilona's parent
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://www.w3.org/2006/vcard/ns#hasParent> ?ilonaParent .
  }
  
  # Query for the native of a landmark at elevation 96.0
  OPTIONAL {
    ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?native <http://dbpedia.org/ontology/birthPlace> ?settlement .
    ?native <http://www.w3.org/2006/vcard/ns#hasParent> ?nativeParent .
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parent ?spouse WHERE {
  OPTIONAL {
    # Step 1: Commander in Battle of Panium
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Panium""))

    # Step 2: Child of the Commander
    ?commander <http://dbpedia.org/ontology/child> ?child .

    # Step 3: Parent of This Child
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?childLabel .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
  }

  OPTIONAL {
    # Step 4: Successor of Antiochus (son of Antiochus III the Great)
    ?antiochus <http://dbpedia.org/ontology/successor> ?successor .
    FILTER(STRSTARTS(STR(?antiochus), ""http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)""))
    ?successor <http://www.w3.org/2000/01/rdf-schema#label> ?successorLabel .
    FILTER(CONTAINS(LCASE(?successorLabel), ""royalty""))

    # Step 5: Child of This Successor
    ?successor <http://dbpedia.org/ontology/child> ?successorChild .

    # Step 6: Spouse of This Child
    ?successorChild <http://www.w3.org/2000/01/rdf-schema#label> ?successorChildLabel .
    ?successorChild <http://dbpedia.org/ontology/spouse> ?spouse .
  }
}
```",6,7,7,3,2,3,3,71,2,2,0,0.5,1.0,0.6666666666666666
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","```sparql
SELECT ?battleCommander ?wellingtonForce ?schimmelpenninckEvent WHERE {
  # Commander in the Battle of Leipzig
  OPTIONAL { 
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?battleCommander .
  }
  
  # Commander and Military Force of Arthur Wellesley, 1st Duke of Wellington
  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/militaryForce> ?wellingtonForce .
    ?wellingtonForce <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> .
  }
  
  # Societal Event and Military Conflict related to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?schimmelpenninckEvent .
    ?event <http://dbpedia.org/ontology/type> ?eventType .
    FILTER (?eventType IN (<http://dbpedia.org/class/yago/SocietalEvents>, <http://dbpedia.org/class/yago/MilitaryConflicts>)).
    ?event <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  }
}
```",6,9,7,3,3,3,3,71,6,15,0,0.2857142857142857,1.0,0.4444444444444445
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?personDecedent ?birthDate ?personBornOnSameDate ?shenaBand WHERE {
  # Step 1: Find the person decedent born in Zolotonosha who is an athlete and a soccer player
  ?personDecedent <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?personDecedent <http://www.w3.org/2002/07/owl#sameAs> ?athlete .
  ?athlete <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  
  # Step 2: Retrieve their birth date
  ?personDecedent <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Step 3: Find the person born on that specific birth date
  ?personBornOnSameDate <http://dbpedia.org/ontology/birthDate> ?birthDate .
  
  # Step 4: Determine the band of Shèna
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/property/memberOf> ?shenaBand .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find a band member of Meshuggah
  ?meshuggahMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Meshuggah> .
  
  # Ensure Meshuggah is identified as a band, group, and organization
  FILTER EXISTS { <http://dbpedia.org/resource/Meshuggah> <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Band115069068> }
  FILTER EXISTS { <http://dbpedia.org/resource/Meshuggah> <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Group115069068> }
  FILTER EXISTS { <http://dbpedia.org/resource/Meshuggah> <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/Organization115069068> }

  # Step 2: Find associated musical artist of the band member through Watchtower
  ?meshuggahMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerReference .
  FILTER EXISTS { ?watchtowerReference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> }

  # Step 3: Find Don Dokken and his band members
  ?donDokken <http://www.w3.org/2000/01/rdf-schema#label> ""Don Dokken""@en .
  ?dokkenBandMember <http://dbpedia.org/ontology/member> ?donDokken .

  # Step 4: Find associated musical artist of the band member
  ?dokkenBandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?professional ?associatedArtist ?bandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?birthName <http://dbpedia.org/property/profession> ?professional .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    ?artist <http://www.w3.org/2000/01/rdf-schema#label> ""Matt Colton"" .
    BIND(?artist AS ?associatedArtist)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/bandMember> ?member .
    ?member <http://www.w3.org/2000/01/rdf-schema#label> ""Luke Francis Vibert"" .
    BIND(?member AS ?bandMember)
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?gigiSpouse ?tedPerson WHERE {
  # Step 1: Find Gigi Rice's birth name
  OPTIONAL { 
    <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?gigiBirthName .
  }
  
  # Step 2: Identify the spouse of the person with Gigi Rice's birth name
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ?gigiBirthName .
    ?person <http://dbpedia.org/property/spouse> ?gigiSpouse .
  }
  
  # Step 3: Find Ted McGinley's birth name
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .
  }

  # Step 4: Identify the person with Ted McGinley's birth name
  OPTIONAL {
    ?tedPerson <http://dbpedia.org/ontology/birthName> ?tedBirthName .
  }
}
```",5,5,6,3,2,3,3,71,0,3,1,0.0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  # Commander in the force of Ferenc Szálasi
  ?commander <http://dbpedia.org/ontology/commandedBy> <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> .
  
  # Awardee for Volcano and Ryukyu Islands campaign
  ?awardee <http://dbpedia.org/property/award> ?volcanoRyukyuAward .
  ?volcanoRyukyuAward <http://www.w3.org/2000/01/rdf-schema#label> ""Volcano and Ryukyu Islands campaign"" .

  # Leader of People's Commissariat of Defense
  ?leader <http://dbpedia.org/ontology/positionHeld> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
  
  # Ensure all roles refer to the same person
  FILTER (?commander = ?awardee && ?awardee = ?leader)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?awardee ?deceasedPerson ?commander WHERE {
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/recipient> ?person .
    ?person rdfs:label ""Sergei Makovetsky""@en .
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
    ?person rdfs:label ?deceasedPerson .
  }

  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/nationality> ?nationality .
    ?commander <http://dbpedia.org/property/commanded> ?unit .
    ?unit <http://dbpedia.org/ontology/partOf> <http://dbpedia.org/resource/Spanish_Civil_War> .
  }
}
```",4,4,5,2,3,2,3,28,0,1334,1,0.0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
SELECT ?capital ?restingPlace WHERE {
  OPTIONAL {
    # Find the country related to Armed Forces of South Russia
    <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?country .
    
    # Get the capital of that country
    ?country <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  }
  
  OPTIONAL {
    # Find individuals awarded Hero of the Soviet Union
    ?hero <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
    
    # Get their resting place
    ?hero <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?simonCadellRestingPlace ?awardeeRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?simonCadellRestingPlace .
  }
  
  OPTIONAL {
    ?person <http://www.wikidata.org/entity/P166> wd:Q111451 .
    ?person <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?person ?commander WHERE {
  # Find individuals who were office holders of the Kingdom of Ireland
  ?person <http://dbpedia.org/ontology/officeHolder> _:instance .
  _:instance <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Kingdom_of_Ireland> .

  # Find individuals who were commanders in the Battle of Leipzig
  ?person <http://dbpedia.org/ontology/commanderInBattle> _:battle .
  _:battle <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Battle_of_Leipzig> .

  # Retrieve their commander in a military force
  ?person <http://dbpedia.org/property/commander> ?commander .
}
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee ?leader WHERE {
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/honoraryTitle> ""Order of Suvorov"" .
    ?entity <http://www.w3.org/2004/02/skos/core#prefLabel> ?awardee .
  }
  
  OPTIONAL {
    ?office <http://dbpedia.org/ontology/leader> ?leader .
    ?stalinOffice <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joseph_Stalin> .
    ?stalinOffice <http://www.w3.org/2002/07/owl#sameAs> ?office .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild ?parent WHERE {
  # Step 1: Find children of Christian IX
  ?childChristianIX <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  
  # Step 2: Find children of Grand Duchess Elena Vladimirovna
  ?childElena <http://dbpedia.org/ontology/child> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .

  # Step 3: Match grandchild of Christian IX with parent of a child of Elena
  FILTER(?grandchild = ?parent)
}
```",4,4,5,2,2,3,2,20,1,35733,0,2.7984552527005094e-05,1.0,5.596753882748006e-05
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?headquarter ?entity WHERE {
  OPTIONAL { 
    ?organization <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joo_Don-sik> .
    ?organization <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?entity .
  }
}
```",4,5,5,2,2,2,2,9,0,16,1,0.0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find royal child of Seleucus II Callinicus
  ?child1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child1 a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find spouse of this royal child
  ?child1 <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Find successor of Antiochus who is royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?successor a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find child of this royal successor
  ?child2 <http://dbpedia.org/ontology/child> ?successor .

  # Step 5: Match spouse with child
  FILTER (?spouse = ?child2)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?personDecedentCapital ?personDecedentWork WHERE {
  OPTIONAL {
    # Find capital of Khemis Miliana District
    <http://dbpedia.org/resource/Khemis_Miliana_District> <http://www.geonames.org/ontology#capital> ?capital .
    
    # Find person decedent at this capital
    ?personDecedentCapital <http://dbpedia.org/ontology/deceasedAt> ?capital .
  }
  
  OPTIONAL {
    # Identify the author of ""French Algeria""
    ?work <http://purl.org/dc/terms/creator> ?author .
    FILTER (str(?work) = ""French_Algeria"")
    
    # Find work location and person decedent at this location
    ?work <http://dbpedia.org/ontology/locationCreated> ?locationWork .
    ?personDecedentWork <http://dbpedia.org/ontology/deceasedAt> ?locationWork .
  }
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
  
  # Step 2: Find the claim to fame (work) of her spouse
  ?spouse <http://dbpedia.org/property/claimToFame> ?work .

  # Step 3: Identify actors in that work
  ?work <http://dbpedia.org/ontology/starring> ?actor .
  
  # Step 4: Filter these actors by their native place being Compton, California
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (STR(?birthPlace) = ""Compton, California"")

  # Step 5: Find a movie involving Roz Ryan that is both a movie and a television show
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie110007069> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow110007068> .

  # Step 6: Determine any common actor between the two works
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
# Query 1: Alma Mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}

# Query 2: Entity in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""baden-württemberg""))
}

# Query 3: Alter Ego of the Persona of Matthew Burland
SELECT ?alterEgo WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/fictionalCharacter> ?fictionalCharacter .
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT DISTINCT ?actor ?musicalArtist WHERE {
  # Step 1: Identify the film and its actors
  <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .

  # Step 2: Filter actors who are also artists
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  
  # Step 3: Retrieve associated musical artists for these actors
  OPTIONAL {
    ?actor <http://dbpedia.org/property/associatedMusicalArtist> ?musicalArtist .
  }
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#hasAddressCountry> ?country .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/award> ?award .
    ?award <http://dbpedia.org/ontology/awardee> ?awardee .
    ?awardee <http://dbpedia.org/ontology/war> ?war .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?forceLargoCaballero ?commanderEmilioMola ?forceFranciscoFranco WHERE {
  # Military force of Francisco Largo Caballero
  OPTIONAL {
    ?eventLargo a <http://dbpedia.org/ontology/SocietalEvent> ;
               a <http://dbpedia.org/ontology/MilitaryConflict> .
    ?eventLargo <http://dbpedia.org/property/force> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?eventLargo <http://dbpedia.org/ontology/militaryForce> ?forceLargoCaballero .
  }

  # Commander in the force of Emilio Mola
  OPTIONAL {
    ?eventMola a <http://dbpedia.org/ontology/Event> ;
              <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Emilio_Mola> .
    ?eventMola <http://dbpedia.org/ontology/militaryForce> ?forceEmilioMola .
    ?commanderEmilioMola a <http://dbpedia.org/ontology/Commander> ;
                        <http://dbpedia.org/property/commanderOf> ?forceEmilioMola .
  }

  # Military force of Francisco Franco
  OPTIONAL {
    ?eventFranco a <http://dbpedia.org/ontology/SocietalEvent> ;
                a <http://dbpedia.org/ontology/MilitaryConflict> ;
                <http://dbpedia.org/property/force> <http://dbpedia.org/resource/Francisco_Franco> .
    ?eventFranco <http://dbpedia.org/ontology/militaryForce> ?forceFranciscoFranco .
  }
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander ?claimToFame WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/war> ?war .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
  }
  FILTER(?war != null)
  
  ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
       a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
       a <http://dbpedia.org/ontology/Event> .
  
  ?war <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/war> ?triggeWar .
  ?triggeWar <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Thomas_Trigge> .

  OPTIONAL {
    ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
  }
}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?francoMilitaryForce ?caballeroMilitaryForce WHERE {
  OPTIONAL {
    ?event1 <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco> .
    ?event1 a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
            a <http://dbpedia.org/class/yago/Event108069067> ;
            a <http://dbpedia.org/class/yago/MilitaryConflict108069070> .
    ?event1 <http://dbpedia.org/ontology/militaryForce> ?francoMilitaryForce .
  }
  
  OPTIONAL {
    ?event2 <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?event2 a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
            a <http://dbpedia.org/class/yago/MilitaryConflict108069070> .
    ?event2 <http://dbpedia.org/ontology/militaryForce> ?caballeroMilitaryForce .
  }
}
```",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"```sparql
SELECT ?parentOfNysa ?spouseOfChild ?childOfGrandchild WHERE {
  # Part 1: Parent of Nysa (wife of Pharnaces I of Pontus)
  OPTIONAL {
    <http://dbpedia.org/resource/Nysa_(wife_of_Pharma)ches_I_of_Pontus> <http://www.w3.org/2002/07/owl#sameAs> ?nysa .
    ?nysa <http://dbpedia.org/ontology/birthParent> ?parentOfNysa .
  }

  # Part 2: Spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)
  OPTIONAL {
    <http://dbpedia.org/resource/Antiochus_I_Soter> <http://www.w3.org/2006/vcard/ns#hasSubordinate> ?successor .
    ?successor <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?royalChild <http://xmlns.com/foaf/0.1/married> ?spouseOfChild .
  }

  # Part 3: Child of the child, that is a royalty, of Seleucus II Callinicus
  OPTIONAL {
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://www.w3.org/2006/vcard/ns#hasSubordinate> ?royalChild .
    ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
    ?grandchild <http://dbpedia.org/ontology/child> ?childOfGrandchild .
  }
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","```sparql
SELECT ?childOfChild ?parentOfFather WHERE {
  # Step 1: Find children of Boleslaus I who are royalty
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find children of the above children who are royalty
  ?childOfChild <http://dbpedia.org/ontology/father> ?child .
  ?childOfChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find references to Richeza of Poland who are royalty
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Richeza_of_Poland> .
  ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find fathers of the above references who are royalty
  ?father <http://dbpedia.org/ontology/father> ?reference .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find parents of the above fathers
  ?parentOfFather <http://dbpedia.org/ontology/father> ?father .
  
  # Optional: Check for intersection or commonality if needed
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","```sparql
SELECT ?player WHERE {
  # Find the organization that is a soccer club, sports club, and related to England
  ?org <http://www.w3.org/2000/01/rdf-schema#label> ""England""@en .
  ?org <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  ?org <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Sports_club> .

  # Get the nickname of this organization
  OPTIONAL { 
    ?org <http://dbpedia.org/property/nickname> ?nickname .
  }

  # Find players managed by Steve Bruce
  ?player <http://dbpedia.org/ontology/playerForTeam> ?team .
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Steve_Bruce> .

  # Ensure the player is associated with the organization identified earlier
  FILTER(?org = ?team)
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the commander of the Battle of Verdun
  ?battle <http://dbpedia.org/ontology/commander> ?verdunCommander .
  FILTER (str(?battle) = ""Battle_of_Verdun"")

  # Step 2: Find wars involving this commander
  ?war <http://dbpedia.org/ontology/commander> ?verdunCommander .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .

  # Step 3: Identify person decedent at Algiers
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .

  # Step 4: Find common commander in the war and decedent at Algiers
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  FILTER (?commander = ?person)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?johnAlmaMater ?universityNickname ?awardeeAlmaMater WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  OPTIONAL { 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?johnAlmaMater .
  }

  # Nickname of Queen's University Belfast
  OPTIONAL {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://purl.org/dc/terms/alternative> ?universityNickname .
  }
  
  # Alma mater of awardees of Royal Medals
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
}
```",6,7,7,3,3,3,3,71,1,0,0,1.0,1.0,1.0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","```sparql
SELECT ?awardee ?commander ?officeLeader WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/receivedAward> ?award .
    ?award <http://dbpedia.org/ontology/awardee> ?awardee .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> ;
            <http://dbpedia.org/ontology/commanderOf> ?force .
    ?commander <http://dbpedia.org/ontology/memberOf> ?force .
  }
  
  OPTIONAL {
    ?office <http://www.w3.org/2000/01/rdf-schema#isPartOf> ?governmentAgency ;
            <http://dbpedia.org/ontology/leader> ?officeLeader .
    FILTER EXISTS { ?governmentAgency a <http://dbpedia.org/ontology/GovernmentAgency> }
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/ontology/leader> ?gustavLeader ;
                                                     <http://www.w3.org/2002/07/owl#sameAs> ?office .
    FILTER EXISTS { ?gustavLeader a <http://dbpedia.org/ontology/OfficeHolder> }
    FILTER EXISTS { ?gustavLeader a <http://dbpedia.org/ontology/Politician> }
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"```sparql
SELECT ?headquarter ?birthPlace WHERE {
  # Step 1: Identify the venue for the 2012 Pro12 Grand Final
  OPTIONAL { 
    <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?venue .
    FILTER (?venue <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/ontology/Venue>)
    FILTER (?venue <http://dbpedia.org/ontology/architecturalStructure>)
  }
  
  # Step 2: Find the owner of the venue
  OPTIONAL {
    ?venue <http://dbpedia.org/property/owner> ?owner .
  }

  # Step 3: Determine the headquarters of the owner
  OPTIONAL {
    ?owner <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
  
  # Step 4: Identify the native politician from Essex
  OPTIONAL {
    ?essexPolitician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
                     <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/East_of_England> .
    FILTER (?essexPolitician <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/ontology/Politician>)
  }
  
  # Step 5: Find the child of the native politician
  OPTIONAL {
    ?essexPolitician <http://dbpedia.org/property/child> ?child .
    FILTER (?child <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/ontology/Politician>)
    FILTER (?child <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/ontology/OfficeHolder>)
  }
  
  # Step 6: Determine the birthplace of the child
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?chileEventMilitaryForce ?orozimboWar ?narcisoCamperoForce WHERE {
  # Military force of a societal event in Chile
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> .
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
    ?societalEvent <http://dbpedia.org/property/militaryForce> ?chileEventMilitaryForce .
  }
  
  # War involving Orozimbo Barbosa
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/war> ?orozimboWar .
  }

  # Force of Narciso Campero by birth name
  OPTIONAL {
    ?narcisoCampero <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero"" .
    ?narcisoCampero <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""Narciso Campero"")
    ?narcisoCampero <http://dbpedia.org/property/militaryForce> ?narcisoCamperoForce .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT ?person WHERE {
  # Find band members of Senidah
  OPTIONAL { 
    ?bandMember <http://dbpedia.org/ontology/member> ?band .
    ?band <http://dbpedia.org/property/name> ""Senidah"" .
  }
  
  # Identify person born as Dino Merlin
  OPTIONAL {
    ?person <http://www.w3.org/2006/vcard/ns#hasName> ?name .
    ?name <http://purl.org/dc/terms/title> ""Dino Merlin"" .
  }

  # Find native of birthplace of Samir Bekrić
  OPTIONAL {
    ?samirBekric <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?person <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?nativePlace .
    FILTER(?nativePlace = ?birthPlace)
  }
  
  # Ensure the person satisfies all conditions
  VALUES ?person { ?bandMember ?person ?person }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find the parent who is a royalty of Prince George William of Hanover
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the spouse of Princess Victoria Louise of Prussia
  OPTIONAL {
    ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
  }

  # Step 3: Determine the child who is a royalty of Ernest Augustus, Duke of Brunswick
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the parent of the identified royalty
  ?parent2 <http://dbpedia.org/ontology/child> ?child .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?alanRestingPlace ?childName ?childRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/deathPlace> ?alanRestingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/J._W._Burt> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?childName .
    ?child <http://dbpedia.org/ontology/deathPlace> ?childRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?spouse ?profession WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse .
  }
  OPTIONAL {
    ?series <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Actor108930069> .
    FILTER(STRSTARTS(LCASE(?series), ""unnatural (tv series)""))
    ?actor <http://purl.org/dc/terms/profession> ?profession .
  }
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?landmarkElevation ?birthPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?landmark .
    ?landmark <http://dbpedia.org/ontology/elevation> ?landmarkElevation .
  }
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Dropkick_Murphys> .
    ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?almaMater ?alterEgo WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    # Assuming Matthew Burland is associated with a fictional character
    <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/property/fictionalCharacter> ?fictionalCharacter .
    ?fictionalCharacter <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  }
}
```",4,5,5,3,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?force ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Mayor_of_Congress_Poland> <http://dbpedia.org/ontology/memberOf> ?organization .
    ?organization <http://dbpedia.org/property/force> ?force .
  }
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
    ?awardee <http://dbpedia.org/ontology/war> ?war .
  }
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thihapate's child who is an office holder and royalty
  ?childOfThihapate <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?childOfThihapate <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 2: Find Narapati I's child whose parent is the individual from step 1
  ?childOfNarapati <http://dbpedia.org/ontology/parent> ?childOfThihapate .
  ?childOfNarapati <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .

  # Step 3: Find Soe Min Wimala Dewi's father and his child from step 2
  ?fatherOfSoeMin <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
  ?childFromStep2 <http://dbpedia.org/ontology/parent> ?fatherOfSoeMin .
  FILTER (?childFromStep2 = ?childOfNarapati)

  # Step 4: Find the predecessor of the individual from step 3
  ?predecessor <http://dbpedia.org/property/predecessor> ?childFromStep2 .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
SELECT DISTINCT ?newstedBand ?symphonyMemberBand ?gunsnrosesMemberBand WHERE {
  # Find the band(s) Newsted is associated with
  OPTIONAL {
    ?newsted rdf:type dbo:MusicalArtist .
    ?newsted dbo:bandMember ?newstedBand .
    ?newstedBand rdf:type dbo:Band .
  }

  # Find members of San Francisco Symphony who are also in a band/group
  OPTIONAL {
    ?symphonyMember dbo:memberOf <http://dbpedia.org/resource/San_Francisco_Symphony> ;
                    dbo:bandMember ?symphonyMemberBand .
    ?symphonyMemberBand rdf:type dbo:Band .
  }

  # Find members of Guns N' Roses who are also in a band/group
  OPTIONAL {
    ?gunsnrosesMember dbo:bandMember <http://dbpedia.org/resource/Guns_N%27_Roses> ;
                      dbo:bandMember ?gunsnrosesMemberBand .
    ?gunsnrosesMemberBand rdf:type dbo:Band .
  }
}
```",5,8,6,2,3,2,3,28,0,35,1,0.0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","```sparql
SELECT ?verdunCommander ?war ?satterthwaiteDecedent ?sameWarCommander WHERE {
  # Find the commander in the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?verdunCommander .
  
  # Determine the war associated with this commander
  ?verdunCommander <http://dbpedia.org/ontology/war> ?war .

  # Find Joseph C. Satterthwaite's decedent
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/death> ?death .
    ?death <http://dbpedia.org/ontology/decedent> ?satterthwaiteDecedent .
  }

  # Find the commander in the same war as Satterthwaite's decedent
  OPTIONAL {
    ?sameWarCommander <http://dbpedia.org/ontology/war> ?war .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  OPTIONAL {
    # Step 2: Identify the parent of this spouse who is royalty
    ?spouse <http://www.w3.org/ns/prov#wasDerivedFrom> ?parent .
    ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    OPTIONAL {
      # Step 3: Find the child of this royal parent who is also royalty
      ?parent <http://dbpedia.org/ontology/child> ?royalChild .
      ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

      OPTIONAL {
        # Step 4: Identify Prince George William of Hanover's royal parent
        <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?princeParent .
        ?princeParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

        OPTIONAL {
          # Step 5: Find the child of the father of Princess Victoria Louise’s spouse
          ?spouse <http://dbpedia.org/property/father> ?father .
          ?father <http://dbpedia.org/ontology/child> ?fatherChild .
        }
      }
    }
  }
}
```",7,9,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?carlPontusGahnWars ?greatSiegeCommanderFame ?peninsularWarCommanderWars WHERE {
  # Wars involving Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?carlPontusGahnWars .
  }

  # Claim to fame of the commander in the Great Siege of Gibraltar
  OPTIONAL {
    ?greatSiegeEvent dbpedia-owl:commander ?commander .
    FILTER(STRSTARTS(STR(?greatSiegeEvent), ""http://dbpedia.org/resource/Great_Siege_of_Gibraltar""))
    ?commander <http://dbpedia.org/ontology/notableWork> ?greatSiegeCommanderFame .
  }

  # Wars involving the commander referenced in relation to the Peninsular War
  OPTIONAL {
    ?peninsularWarEvent dbpedia-owl:commander ?commander .
    FILTER(STRSTARTS(STR(?peninsularWarEvent), ""http://dbpedia.org/resource/Peninsular_War""))
    ?commander <http://dbpedia.org/ontology/participatedIn> ?peninsularWarCommanderWars .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?commonEntity WHERE {
  # Step 1: Find Soe Min Wimala Dewi's father
  ?soeMin <http://dbpedia.org/ontology/father> ?father .

  # Step 2: Find the child of Soe Min Wimala Dewi's father
  ?father <http://dbpedia.org/ontology/child> ?commonEntity .

  # Step 3: Find Narapati I of Ava's child
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?narapatiChild .

  # Step 4: Find the parent of Narapati I of Ava's child
  ?narapatiChild <http://www.w3.org/2002/07/owl#sameAs> ?commonEntity .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?militaryForce ?commander ?societalEventMilitaryForce ?decedentPerson WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryConflict> ?militaryForce .
  }
  
  OPTIONAL {
    ?elDirector <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
    ?elDirector <http://dbpedia.org/ontology/commanderOf> ?commander .
    ?commander <http://dbpedia.org/ontology/militaryConflict> ?militaryForce .
  }
  
  OPTIONAL {
    ?societalEvent <http://dbpedia.org/ontology/event> ?event .
    ?societalEvent <http://dbpedia.org/ontology/societalEvent> ?societalEvent .
    ?societalEvent <http://dbpedia.org/ontology/militaryConflict> ?militaryForce .
    FILTER(?societalEvent = <http://dbpedia.org/resource/Francoist_Spain>)
  }
  
  OPTIONAL {
    ?decedentPerson <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Francoist Spain""@en .
    ?decedentPerson <http://dbpedia.org/ontology/militaryConflict> ?societalEventMilitaryForce .
  }
}
```",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?bandMemberNevermore ?bandOfJosephMichael WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?bandMember .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    BIND(?bandMember AS ?bandMemberNevermore)
  }
  
  OPTIONAL {
    ?person <http://xmlns.com/foaf/0.1/name> ""Joseph Michael"" .
    ?person <http://dbpedia.org/property/band> ?band .
    BIND(?band AS ?bandOfJosephMichael)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT DISTINCT ?grandParentOfSetiIChild ?parentOfSpouseChild WHERE {
  # Part 1: Parent of the child of the child of Seti I
  ?setiICl <http://dbpedia.org/ontology/child> ?setiIGrandchild .
  ?setiI <http://dbpedia.org/resource/Seti_I> .
  ?setiI <http://dbpedia.org/ontology/child> ?setiICl .
  ?setiIGrandchild <http://www.w3.org/2002/07/owl#sameAs> ?parentOfSetiIGrandchild .
  
  # Part 2: Parent of the child of the spouse of Amun-her-khepeshef
  ?amunHerKhepeshefSpouse <http://dbpedia.org/ontology/spouse> ?amunHerKhepeshef .
  ?amunHerKhepeshef <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?amunHerKhepeshefSpouse <http://dbpedia.org/ontology/child> ?spouseChild .
  ?spouseChild <http://www.w3.org/2002/07/owl#sameAs> ?parentOfSpouseChild .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Wars related to Peninsular War
  OPTIONAL { 
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/references> ?relatedWar .
    ?relatedWar <http://www.w3.org/2002/07/owl#sameAs> ?war .
    FILTER EXISTS { ?war a <http://dbpedia.org/ontology/MilitaryConflict> }
  }

  # Wars involving Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?commander <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
    ?commander <http://dbpedia.org/ontology/commanded> ?war .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT DISTINCT ?commonParent WHERE {
  # Step 1: Amun-her-khepeshef's spouse and their child
  ?spouseAmun dbp:spouse <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?childOfSpouse dbp:parent ?spouseAmun .

  # Step 2: Parent of the child from step 1
  ?commonParent dbp:child ?childOfSpouse .

  # Step 3: Seti I's child and their child (grandchild)
  ?childSeti dbp:child <http://dbpedia.org/resource/Seti_I> .
  ?grandChild dbp:parent ?childSeti .

  # Step 4: Parent of the grandchild from step 3
  ?commonParent2 dbp:child ?grandChild .

  # Step 5: Commander in Battle of Perire who is royalty
  ?commander dbp:event <http://dbpedia.org/resource/Battle_of_Perire> .
  ?commander rdf:type <http://dbpedia.org/ontology/Royalty> .

  # Step 6: Father and spouse of the commander
  ?fatherCommander dbp:child ?commander .
  ?spouseFather dbp:spouse ?fatherCommander .

  # Ensure common parent from steps 2 and 4
  FILTER (?commonParent = ?commonParent2)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Step 1: Find actor for ""Return to Nuke 'Em High Volume 1""
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STRSTARTS(LCASE(?movie), LCASE(""return_to_nuke_em_high_volume_1"")))

  # Step 2: Check if the actor is also an artist and find associated musical artists
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?musicalArtist .
  }

  # Step 3: Find person born as ""Joseph Michael"" and their associated musical artist(s)
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en ;
          <http://dbpedia.org/ontology/birthName> ?birthName .
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?musicalArtist2 .
  }

  # Step 4: Find the band for each musical artist associated with Joseph Michael
  ?musicalArtist2 <http://dbpedia.org/property/band> ?band .

  FILTER(?actor = ?person) # Ensure we are considering the same person in both contexts
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentOfChild ?meritamenParent ?spouse WHERE {
  # Step 1: Find a child of Ramesses II
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Step 2: Find the parent of this child (could be mother or father)
  OPTIONAL { 
    ?parentOfChild <http://dbpedia.org/ontology/child> ?child .
  }
  
  # Step 3: Identify Meritamen's parent
  ?meritamenParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .

  # Step 4: Find the commander in the Battle of Perire and their father's spouse
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?fatherOfCommander <http://dbpedia.org/ontology/father> ?commander .
    ?spouse <http://www.w3.org/2002/07/owl#sameAs> ?fatherOfCommander .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  OPTIONAL {
    ?party <http://dbpedia.org/ontology/politicalParty> ?rulingParty .
    ?rulingParty <http://dbpedia.org/property/ruleIn> <http://dbpedia.org/resource/Sicily> .
    ?rulingParty <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?administration .
  }
  
  OPTIONAL {
    ?author <http://dbpedia.org/ontology/book> <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtistRedTide ?associatedArtistSASlayer ?bandMemberDonDokken WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistRedTide .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistSASlayer .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Don Dokken""@en .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    FILTER(CONTAINS(LCASE(?birthName), ""don dokken""))
    ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMemberDonDokken .
  }
}
```",5,6,6,3,3,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  # Identify Ted Martin McGinley
  ?ted a dbo:Person ;
      foaf:name ""Ted McGinley"" ;
      dbp:birthName ""Ted Martin McGinley"" .
  
  # Confirm profession of actor in Unnatural (TV series) is Actor
  ?unnaturalActor a dbo:Actor ;
                  dbo:actorIn <http://dbpedia.org/resource/Unnatural_(TV_series)> .

  # Identify Georgeanne Marie Rice
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Rice"" ;
              dbp:birthName ""Georgeanne Marie Rice"" .
  
  # Retrieve spouse of Ted Martin McGinley
  ?ted <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?artist1 ?artist2 ?artist3 WHERE {
  # Step 1: Find an associated musical artist of Watchtower
  OPTIONAL {
    ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
    FILTER(STRSTARTS(LCASE(?watchtower), ""watchtower""))
  }

  # Step 2: Find a band member of the person born as Don Dokken
  OPTIONAL {
    ?dokkenPerson <http://dbpedia.org/property/birthName> ""Don Dokken"" .
    ?bandMember <http://dbpedia.org/ontology/member> ?dokkenPerson .
    ?artist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
  }

  # Step 3: Find an associated musical artist of Red Tide
  OPTIONAL {
    ?redTide <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist3 .
    FILTER(STRSTARTS(LCASE(?redTide), ""red tide""))
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?militaryForce1 ?militaryForce2 WHERE {
  OPTIONAL {
    ?event rdf:type <http://dbpedia.org/ontology/SocietalEvent> .
    ?event rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .
    
    ?person dbpedia-owl:deathPlace <http://dbpedia.org/resource/Francoist_Spain> .
    ?force1 dbpedia-owl:commander ?mola .
    ?mola rdfs:label ""Emilio Mola""@en .
    ?force1 dbpedia-owl:militaryForce ?militaryForce1 .

    ?force2 dbpedia-owl:militaryForce ?militaryForce2 .
    ?caballero dbpedia-owl:commander ?force2 .
    ?caballero rdfs:label ""Francisco Largo Caballero""@en .
  }
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Narapati I of Ava's child
  ?narapatiChild <http://dbpedia.org/ontology/child> ?narapatiI .
  FILTER(?narapatiI = <http://dbpedia.org/resource/Narapati_I_of_Ava>) .

  # Step 2: Thinkhaya of Pagan's child and predecessor
  ?thinkhayasChild <http://dbpedia.org/ontology/child> ?thinkhaya .
  FILTER(?thinkhaya = <http://dbpedia.org/resource/Thinkhaya_of_Pagan>) .
  
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?thinkhayasChild .

  # Step 3: Thihapate of Mohnyin's reference
  ?thihapateRef <http://dbpedia.org/ontology/reference> ?thihapate .
  FILTER(?thihapate = <http://dbpedia.org/resource/Thihapate_of_Mohnyin>) .

  # Office holder and royalty child of predecessor
  ?officeHolderChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .
  ?officeHolderChild <http://dbpedia.org/ontology/child> ?predecessor .

  # Step 4: Parent of Narapati I's child matching the office holder and royalty
  ?parent <http://dbpedia.org/ontology/child> ?narapatiChild .
  FILTER(?officeHolderChild = ?narapatiChild)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify The Shadow
  ?shadow a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/property/profession> ""Rapper"" ;
          <http://dbpedia.org/ontology/alterEgo> ""The Shadow"" .

  # Step 2: Find the musical work associated with The Shadow
  ?work a <http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/Work> ;
        <http://dbpedia.org/property/professional> ?shadow .

  # Step 3: Determine the producer of that musical work
  ?work <http://dbpedia.org/ontology/producer> ?producer .

  # Step 4: Identify the writer of ""40 Dayz & 40 Nightz""
  ?writer a <http://dbpedia.org/ontology/MusicalArtist>, <http://dbpedia.org/ontology/Artist> ;
          <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .

  # Step 5: Find the associated musical artist for this writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT DISTINCT ?undertowMember ?queensrycheArtistMember WHERE {
  # Find band members of Undertow (band)
  <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/associatedBandMember> ?undertowMember .

  # Identify the associated musical artist for Queensrÿche that is a group and an organization
  <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/property/associatedMusicalArtist> ?queensrycheArtist .
  ?queensrycheArtist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup115069068> ;
                     <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/resource/Organisation> .

  # Find band members of the identified musical artist
  ?queensrycheArtist <http://dbpedia.org/ontology/associatedBandMember> ?queensrycheArtistMember .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Get the actor from ""Return to Nuke 'Em High Volume 1""
  ?film <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STR(?film) = ""Return_to_Nuke_'Em_High_Volume_1"")

  # Step 2: Find associated musical artists of the actor
  OPTIONAL {
    ?actor <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
    FILTER EXISTS { ?artist a <http://dbpedia.org/ontology/MusicalArtist> }
  }

  # Step 3: Check if any artist is also a band member of Nevermore
  OPTIONAL {
    ?artist <http://dbpedia.org/property/memberOfBand> ?band .
    FILTER(STR(?band) = ""Nevermore"")
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","```sparql
SELECT ?warOfGahn ?peninsularWarConflict ?gibraltarCommanderFame WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?warOfGahn .
  }
  
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Peninsular_War> ;
               <http://dbpedia.org/ontology/war> ?peninsularWarConflict .
  }

  OPTIONAL {
    ?gibraltarCommander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> ;
                        <http://dbpedia.org/ontology/fame> ?gibraltarCommanderFame .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?associatedArtist ?producer WHERE {
  
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/work> ?work .
  ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .

  # Step 2: Find the writer of the album who is also a musical artist and an artist
  ?writer <http://dbpedia.org/ontology/writer> ?album ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types .
  FILTER (?types = <http://dbpedia.org/class/yago/MusicalArtist108069068> && 
          ?types = <http://dbpedia.org/class/yago/Artist100007846>)
  
  # Step 3: Identify associated musical artists of the writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Step 4: Identify the work ""50 Cent""
  ?work2 <http://purl.org/dc/terms/title> ""50 Cent"" ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?types2 .
  FILTER (?types2 = <http://dbpedia.org/class/yago/MusicalWork108069068> && 
          ?types2 = <http://dbpedia.org/class/yago/Song100007846>)
  
  # Step 5: Find the producer of ""50 Cent""
  ?producer <http://dbpedia.org/ontology/producer> ?work2 .

}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find the child who is a royalty of Ernest Augustus, Duke of Brunswick
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the spouse of Princess Victoria Louise of Prussia
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
  
  # Step 3: Find the father of this spouse
  ?father <http://dbpedia.org/ontology/father> ?spouse .

  # Step 4: Identify the child of this father
  ?child2 <http://dbpedia.org/ontology/child> ?father .

  # Step 5: Determine the parent of the royalty child from step 1
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
SELECT ?entityInBW ?almaMater ?role WHERE {
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
    BIND(?entity AS ?entityInBW)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/positionHeld> ?role .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT ?native ?actor WHERE {
  # Step 1: Get Sylvie Bermann's residence
  ?sylvie <http://dbpedia.org/ontology/residence> ?residence .
  
  # Step 2: Ensure the residence is a British settlement
  ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER(CONTAINS(LCASE(?settlementLabel), ""british"") && CONTAINS(LCASE(?settlementLabel), ""settlement""))

  # Step 3: Get the native of this settlement
  ?residence <http://dbpedia.org/ontology/nativeOf> ?native .

  # Step 4: Find an actor related to military films who is a child of Jon Pertwee
  ?actor <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actor"") && CONTAINS(LCASE(?profession), ""narrator"") && CONTAINS(LCASE(?profession), ""producer""))
  
  # Step 5: Get the claim to fame related to military films
  ?actor <http://dbpedia.org/ontology/claimToFame> ?fame .
  FILTER(CONTAINS(LCASE(?fame), ""film"") && CONTAINS(LCASE(?fame), ""military conflict""))

  # Step 6: Ensure this actor is a child of Jon Pertwee
  ?actor <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Jon_Pertwee> .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?associatedArtist WHERE {
  OPTIONAL { 
    ?producer <http://dbpedia.org/ontology/produced> <http://dbpedia.org/resource/Westside_Story_(song)> .
    ?producer <http://www.w3.org/2004/02/skos/core#altLabel> ""The Shadow"" .
    ?trueSelf <http://xmlns.com/foaf/0.1/name> ?shadowName .
    FILTER(?shadowName = ""The Shadow"") .
    ?trueSelf <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(?producer = ?trueSelf) .

    ?album <http://purl.org/dc/terms/title> ""What U See Is What U Get"" .
    ?album <http://dbpedia.org/ontology/work> ?work .
    ?writer <http://dbpedia.org/ontology/writer> ?album .
    ?writer <http://www.w3.org/2002/07/owl#sameAs> ?musicalArtist .
    ?musicalArtist <http://xmlns.com/foaf/0.1/isPrimaryTopicOf> ?artistPage .

    ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?writer .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?country ?awardWar ?militaryUnitWar WHERE {
  OPTIONAL {
    # Birthplace of Bob Heffron that is a country
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER (lang(?countryLabel) = ""en"")
    OPTIONAL { 
      ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
      BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?countryLabel))) AS ?country)
    }
  }

  OPTIONAL {
    # Award and war of Jonathon Band
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/receivedAward> ?award .
    ?award <http://dbpedia.org/property/awardedFor> ?war .
    BIND(?war AS ?awardWar)
  }

  OPTIONAL {
    # Profession and war of Heather Roy
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/property/war> ?war .
    BIND(?war AS ?militaryUnitWar)
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?settlement ?alterEgo ?almaMater WHERE {
  OPTIONAL {
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?admin .
    ?admin <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlement .
    FILTER EXISTS { ?settlement a <http://dbpedia.org/class/yago/Settlements100000007> }
  }
  
  OPTIONAL {
    ?burland <http://xmlns.com/foaf/0.1/alternateName> ?alterEgo .
    FILTER EXISTS { ?alterEgo a <http://dbpedia.org/ontology/FictionalCharacter> }
  }

  OPTIONAL {
    <http://dbpedia.org/resource/C._L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
SELECT ?almaMater ?nickname WHERE {
  # Step 1: Identify the award related to Royal Medals
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Royal Medals"" .
  
  # Step 2: Find awardees of this award
  ?awardee <http://dbpedia.org/ontology/recipientOfAward> ?award .
  
  # Step 3: Determine alma mater of each awardee
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  
  # Step 4: Identify the organisation with a nickname in Northern Ireland
  ?organisation <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution> ;
                <http://dbpedia.org/ontology/location> ?location .
  
  # Ensure the organisation is in Northern Ireland
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Northern Ireland"" .

  # Check for a nickname
  OPTIONAL {
    ?organisation <http://xmlns.com/foaf/0.1/nick> ?nickname .
  }
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","```sparql
SELECT ?war ?claimToFame WHERE {
  # Find Carl Pontus Gahn's birth information
  ?gahn a dbo:Person ;
        foaf:name ""Carl Pontus Gahn"" ;
        dbo:birthPlace ?birthPlace .

  # Identify wars involving Thomas Trigge as a commander
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge"" ;
          dbo:commanderOf ?war .
  
  # Ensure the war is classified as a military conflict, societal event, and general event
  ?war a dbo:MilitaryConflict ;
       a dbo:SocietalEvent ;
       a dbo:Event .

  # Retrieve claim to fame for Thomas Trigge's command in these wars
  ?trigge dbo:claimToFame ?claimToFame .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?force ?awardEntity WHERE {
  OPTIONAL {
    # Find the awardee of the elevation of Lac d'Avoriaz and their force
    ?event <http://dbpedia.org/ontology/awardee> ?awardee .
    FILTER(STRSTARTS(LCASE(?event), ""lac_d'avoriaz_elevation""))
    ?awardee <http://dbpedia.org/ontology/memberOf> ?force .
  }
  
  OPTIONAL {
    # Find the award associated with Ekrem Akurgal and its entity
    ?award <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Ekrem_Akurgal> .
    ?award <http://dbpedia.org/ontology/entity> ?awardEntity .
  }
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?commander ?leader ?awardee WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/ontology/commanded> ?force .
    ?force <http://dbpedia.org/property/commander> ?commander .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/officeHolder> ?office .
    ?office <http://www.w3.org/2002/07/owl#sameAs> ?agency .
    FILTER (STRSTARTS(STR(?agency), ""http://dbpedia.org/resource/"") && 
            EXISTS { ?agency a <http://dbpedia.org/ontology/GovernmentAgency> }).
    ?office <http://dbpedia.org/property/leader> ?leader .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/receivedAward> ?award .
    ?award <http://dbpedia.org/property/awardee> ?awardee .
  }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?member WHERE {
  # Find Eiji Ōtsuka's alma mater
  OPTIONAL { 
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER (
      ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ""Japanese"" &&
      ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation100000001> &&
      ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/University118> &&
      ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitution100000001>
    )
  }

  # Find members of the alma mater
  OPTIONAL {
    ?almaMater <http://xmlns.com/foaf/0.1/member> ?member .
  }

  # Find Yōichi Masuzoe's native country
  OPTIONAL {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/nationality> ?nationality .
    ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER (lang(?countryLabel) = ""en"")
  }

  # Filter members by native country
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/nationality> ?memberNationality .
    ?memberNationality <http://www.w3.org/2000/01/rdf-schema#label> ?memberCountryLabel .
    FILTER (lang(?memberCountryLabel) = ""en"" && ?memberCountryLabel = ?countryLabel)
  }
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?child WHERE {
  # Step 1: Find Jon Pertwee's birth name
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?birthName .

  # Step 2: Find Jon Pertwee's residence and a native politician in France
  OPTIONAL {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?residence .

    # Find a person native to this residence who is a politician and office holder in France
    ?person <http://dbpedia.org/ontology/nativePlace> ?residence .
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?francePolitician .
    ?francePolitician <http://dbpedia.org/ontology/politicalParty> ?party .
    ?francePolitician <http://dbpedia.org/ontology/officeHolder> ?office .

    # Ensure the person is British and a settlement
    ?residence <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?settlement <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> .

  }

  # Step 3: Find the child of this French politician
  ?francePolitician <http://dbpedia.org/ontology/child> ?child .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?native WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER (CONTAINS(LCASE(?countryLabel), ""country""))
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?universityLabel .
    FILTER (CONTAINS(LCASE(?universityLabel), ""japanese"") && 
            EXISTS { ?almaMater a <http://dbpedia.org/ontology/Organization> } &&
            EXISTS { ?almaMater a <http://dbpedia.org/ontology/University> } &&
            EXISTS { ?almaMater a <http://dbpedia.org/ontology/EducationalOrganization> })
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .
  }

  ?native <http://www.w3.org/2000/01/rdf-schema#label> ?nativeLabel .
  FILTER (CONTAINS(LCASE(?nativeLabel), LCASE(?countryLabel)) &&
          EXISTS { ?native <http://dbpedia.org/ontology/memberOf> ?almaMater } &&
          ?manager = ?native)
}
```",5,10,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?decedent WHERE {
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(CONTAINS(LCASE(STR(?war)), ""franco-hova wars""))
  }
  
  OPTIONAL {
    ?author <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/French_Algeria> .
    ?work <http://purl.org/dc/terms/creator> ?author .
    ?decedent <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://dbpedia.org/ontology/location> ?work .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?carlWar ?peninsularCommander ?commanderFame ?triggeWar WHERE {
  # War of Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?carlWar .
  }

  # Commander in Peninsular War and their claim to fame
  OPTIONAL {
    ?peninsularCommander <http://dbpedia.org/ontology/commanded> <http://dbpedia.org/resource/Peninsular_War> .
    ?peninsularCommander <http://dbpedia.org/property/fame> ?commanderFame .
  }

  # War of Thomas Trigge
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/war> ?triggeWar .
    FILTER (?triggeWar <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent)
    FILTER (?triggeWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> && 
            ?triggeWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068> &&
            ?triggeWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>)
  }
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?native WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?nickname .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?work .
  }
  OPTIONAL {
    ?movie a <http://dbpedia.org/class/yago/Movie108069068> ;
           <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> .
    ?movie <http://www.w3.org/2002/07/owl#sameAs> ?work .
  }
  FILTER(?nickname = ""The Heart of Dixie"" && ?work = ?native)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parentHenuttawy ?spouseOfFather WHERE {
  # Step 1: Find parent of Henuttawy (19th dynasty)
  OPTIONAL { 
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://www.w3.org/2002/07/owl#sameAs> ?henuttawy .
    ?henuttawy <http://dbpedia.org/ontology/birthParent> ?parentHenuttawy .
  }

  # Step 2: Find child of Nefertari and their spouse
  OPTIONAL {
    <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?childNefertari .
    ?childNefertari <http://www.w3.org/2006/vcard/ns#hasSpouse> ?spouseChildNefertari .
  }

  # Step 3: Find commander in Battle of Perire and their royal father
  OPTIONAL {
    ?battle <http://dbpedia.org/ontology/battleOf> <http://dbpedia.org/resource/Battle_of_Perire> .
    ?battle <http://dbpedia.org/ontology/commander> ?commanderPerire .
    ?commanderPerire <http://www.w3.org/2002/07/owl#sameAs> ?royalCommander .
    ?royalCommander <http://dbpedia.org/ontology/birthParent> ?fatherRoyalCommander .
    ?fatherRoyalCommander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }

  # Step 4: Find spouse of the royal father
  OPTIONAL {
    ?fatherRoyalCommander <http://www.w3.org/2006/vcard/ns#hasSpouse> ?spouseOfFather .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"```sparql
SELECT DISTINCT ?native WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician a dbo:Politician ;
              dbo:leaderOf <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> .

  # Step 2: Determine the residence country of this politician
  ?residence dbo:nativeOf ?country .
  ?politician dbo:residence ?residence .

  # Step 3: Find the native of this country
  ?native dbo:nativeOf ?country .

  # Step 4: Identify the manager of the 1998 Kashima Antlers season
  ?manager a dbo:SportsManager ;
           dbo:managedTeam <http://dbpedia.org/resource/1998_Kashima_Antlers_season> .

  # Step 5: Determine the team managed by this sports manager
  ?team dbo:manager ?manager .

  # Step 6: Find the manager of that team
  ?currentManager dbo:managesTeam ?team .

  # Step 7: Identify members of University of Tsukuba
  ?member dbo:alumniOf <http://dbpedia.org/resource/University_of_Tsukuba> ;
          dbo:managesTeam ?team .

  # Step 8: Combine results to find overlapping individuals
  FILTER(?native = ?member)
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?parent1 ?parent2 WHERE {
  # Part 1: Archduchess Margaret of Austria (born 1925)
  OPTIONAL {
    ?margaret <http://dbpedia.org/ontology/birthDate> ?date .
    FILTER(YEAR(?date) = 1925)
    ?margaret <http://www.w3.org/2006/vcard/ns#hasParent> ?parentMargaret .
    ?childOfParent <http://www.w3.org/2006/vcard/ns#hasParent> ?parentMargaret .
    ?parent1 <http://www.w3.org/2006/vcard/ns#hasParent> ?childOfParent .
  }

  # Part 2: Landmark at elevation 96.0
  OPTIONAL {
    ?settlement <http://dbpedia.org/ontology/elevation> ?elevation .
    FILTER(?elevation = ""96.0""^^xsd:float)
    ?landmark <http://dbpedia.org/ontology/location> ?settlement .
    ?native <http://dbpedia.org/ontology/birthPlace> ?landmark .
    ?parent2 <http://www.w3.org/2006/vcard/ns#hasParent> ?native .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?person WHERE {
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?decedent <http://www.w3.org/2002/07/owl#sameAs> ?deathEvent .
  ?deathEvent <http://dbpedia.org/property/date> ?deathDate .
  
  ?decedent <http://dbpedia.org/ontology/birthDate> ?birthDate .

  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate ;
          <http://www.w3.org/2002/07/owl#sameAs> ?athlete ;
          <http://dbpedia.org/ontology/sport> ?sport .
  
  FILTER EXISTS { ?athlete <http://xmlns.com/foaf/0.1/isPrimaryTopicOf> ?athletePage }
  FILTER EXISTS { ?sport <http://www.w3.org/2004/02/skos/core#prefLabel> ""Athletics"" }
  FILTER EXISTS { ?person <http://dbpedia.org/ontology/sport> ?soccerSport }
  FILTER EXISTS { ?soccerSport <http://www.w3.org/2004/02/skos/core#prefLabel> ""Soccer"" }
}
```",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  # Step 1: Get Gigi Rice's birth name
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?gigiBirthName .

  # Step 2: Find person born with that birth name
  ?person <http://dbpedia.org/ontology/birthName> ?gigiBirthName .

  # Step 3: Get Ted McGinley's birth name
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .

  # Step 4: Find spouse of Ted McGinley
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse .

  # Step 5: Check if spouse is an actress
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","```sparql
SELECT ?professionWar ?birthPlaceEntity ?beauchampWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://dbpedia.org/property/militaryUnit> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/ontology/war> ?professionWar .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER (LANG(?countryLabel) = 'en')
    ?entity <http://dbpedia.org/property/location> ?birthPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?beauchampWar .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlaceEdwinKeeble ?restingPlaceLukeLea ?settlement WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/deathPlace> ?restingPlaceEdwinKeeble .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/deathPlace> ?restingPlaceLukeLea .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceMarionJames .
    ?settlement <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/location> ?birthPlaceMarionJames .
    ?settlement a <http://dbpedia.org/class/yago/Settlement_115069068> .
  }
}
```",4,5,5,2,3,2,3,28,0,3,1,0.0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?commanderFerencSzálasi ?awardeeVolcanoRyukyu ?leaderGustavJonson WHERE {
  # Commander in the force of Ferenc Szálasi
  OPTIONAL {
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    ?commander rdfs:label ""Ferenc Szálasi""@en .
    BIND(?commander AS ?commanderFerencSzálasi)
  }

  # Awardee of the award for commander in Volcano and Ryukyu Islands campaign
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/receiver> ?awardee .
    ?campaign <http://dbpedia.org/property/campaign> ""Volcano and Ryukyu Islands""@en .
    ?award <http://dbpedia.org/property/campaign> ?campaign .
    ?awardee rdfs:label ?title .
    FILTER(CONTAINS(LCASE(?title), ""commander""))
    BIND(?awardee AS ?awardeeVolcanoRyukyu)
  }

  # Leader of the office (government agency) of Gustav Jonson
  OPTIONAL {
    ?office <http://dbpedia.org/ontology/leader> ?leader .
    ?gustavJonson <http://dbpedia.org/ontology/officeHolder> ?office .
    ?gustavJonson rdfs:label ""Gustav Jonson""@en .
    ?office <http://www.w3.org/2002/07/owl#sameAs> ?governmentAgency .
    BIND(?leader AS ?leaderGustavJonson)
  }
}
```",8,11,9,3,3,3,3,71,0,1,1,0.0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find children of Seleucus II Callinicus who are royalty
  ?royalChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?royalChild a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find grandchildren of Seleucus II Callinicus
  ?grandchild <http://dbpedia.org/ontology/parent> ?royalChild .

  # Step 3: Find children of Antiochus III the Great
  ?antiochusChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .

  # Step 4: Find spouses of these children
  OPTIONAL { 
    ?spouse <http://dbpedia.org/property/spouse> ?antiochusChild .
  }

  # Step 5: Match grandchildren with spouses
  FILTER(?grandchild = ?spouse)
}
```",4,5,5,2,2,3,3,71,4,0,0,1.0,1.0,1.0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?province ?region WHERE {
  OPTIONAL {
    # Sebastiano Bianchetti's residence province
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Italy> .
    ?person rdfs:label ""Sebastiano Bianchetti""@en .
    ?person <http://dbpedia.org/ontology/residence> ?residence .
    ?residence a <http://dbpedia.org/class/yago/Settlements100000001> .
    ?residence <http://www.geonames.org/ontology#locatedIn> ?province .
  }
  
  OPTIONAL {
    # Aguilar de Segarra's time zone region
    ?event rdfs:label ""Aguilar de Segarra""@en .
    ?event a <http://dbpedia.org/class/yago/SportsEvents100000001> .
    ?event <http://www.geonames.org/ontology#timeZone> ?timeZone .
    ?timeZone <http://www.geonames.org/ontology#locationInRegion> ?region .
  }
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?micheleParty ?romanoParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?micheleParty .
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    ?officeHolder <http://dbpedia.org/ontology/birthName> ?birthName .
    ?officeHolder <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?officeHolder <http://dbpedia.org/ontology/memberOf> ?romanoParty .
  }
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?grandParent WHERE {
  # Step 1: Find the parent(s) of Prince George William who is royalty
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
  ?parent a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child(ren) of this parent who is royalty
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Determine the grandparent(s) of this child
  ?grandParent <http://dbpedia.org/ontology/parent> ?child .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entityInBW ?alterEgo ?almaMater WHERE {
  # Entity in Baden-Württemberg
  OPTIONAL { 
    ?entity <http://www.geonames.org/ontology#locatedWithin> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
    BIND(?entity AS ?entityInBW)
  }
  
  # Alter ego of Black Hood
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alsoKnownAs> ?alterEgo .
  }

  # Alma mater of George Kilbon Nash
  OPTIONAL {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMeter .
    BIND(?almaMeter AS ?almaMater)
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?finalAssociatedArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band
  ?fredrikBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?fredrikBand a <http://dbpedia.org/class/yago/MusicalGroup115069068> .

  # Step 2: Find Donald Maynard Dokken's associated musical artist
  ?dokkenPerson <http://www.w3.org/2000/01/rdf-schema#label> ""Donald Maynard Dokken""@en .
  ?dokkenPerson <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?dokkenArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?dokkenPerson .

  # Step 3: Find the reference to Watchtower and its associated musical artist
  ?watchtowerReference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Watchtower_(band)> .
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerReference .

  # Step 4: Chain the associations to find the final associated musical artist
  ?finalAssociatedArtist <http://dbpedia.org/ontology/member> ?fredrikBand ;
                          <http://dbpedia.org/ontology/associatedMusicalArtist> ?dokkenArtist ;
                          <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  ?movie rdf:type <http://dbpedia.org/ontology/Film> ;
         owl:sameAs ?work .
  ?work rdf:type <http://www.w3.org/2002/07/owl#Thing> ; # Represents a work
        <http://dbpedia.org/ontology/starring> ?rozRyan .
  
  ?rozRyan foaf:name ""Roz Ryan"" ;
           owl:sameAs ?person .

  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  
  OPTIONAL {
    ?actor dbo:birthPlace ?place .
    ?place rdfs:label ""Compton, California""@en .
  }
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sean Pertwee's claim to fame (film or military conflict)
  OPTIONAL { 
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/film> ?film .
    FILTER EXISTS { ?film a <http://dbpedia.org/ontology/Film> }
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    FILTER EXISTS { ?conflict a <http://dbpedia.org/ontology/MilitaryConflict> }
  }

  # Step 2: Find Jon Pertwee's child
  OPTIONAL {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  }

  # Step 3: Check if there is an actor associated with the claim to fame
  OPTIONAL {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    FILTER EXISTS { ?actor a <http://dbpedia.org/ontology/Actor> }
  }
}
```",5,7,6,3,2,3,3,71,0,2621,1,0.0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?parentOfMeritamen ?spouseOfFatherOfCommander ?grandchildParent WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Meritamen> <http://www.w3.org/2002/07/owl#sameAs> ?meritamenResource .
    ?meritamenResource <http://dbpedia.org/ontology/birthParent> ?parentOfMeritamen .
  }
  
  OPTIONAL {
    ?battle <http://dbpedia.org/property/commander> ?commander .
    FILTER(STRSTARTS(STR(?battle), ""Battle of Perire""))
    
    ?commander <http://www.w3.org/2002/07/owl#sameAs> ?commanderResource .
    ?commanderResource <http://dbpedia.org/ontology/birthParent> ?fatherOfCommander .
    ?fatherOfCommander <http://dbpedia.org/property/spouse> ?spouseOfFatherOfCommander .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Seti_I> <http://www.w3.org/2002/07/owl#sameAs> ?setiIResource .
    ?setiIResource <http://dbpedia.org/ontology/birthChild> ?childOfSetiI .
    ?childOfSetiI <http://dbpedia.org/ontology/birthChild> ?grandchildOfSetiI .
    ?grandchildOfSetiI <http://www.w3.org/2002/07/owl#sameAs> ?grandchildResource .
    ?grandchildResource <http://dbpedia.org/ontology/birthParent> ?grandchildParent .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?militaryForce WHERE {
  ?militaryForce a <http://dbpedia.org/ontology/MilitaryConflict> ;
                 a <http://dbpedia.org/ontology/SocietalEvent> ;
                 a <http://dbpedia.org/ontology/Event> .
  
  ?battleOfLeipzig a <http://dbpedia.org/resource/Battle_of_Leipzig> ;
                   <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

  ?welshCommand a <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> ;
                <http://dbpedia.org/ontology/commander> ?militaryForce .
  
  FILTER(?battleOfLeipzig = ?militaryForce)
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
SELECT DISTINCT ?grandchild ?restingPlace WHERE {
  # Step 1: Find children of William Haliburton
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/William_Haliburton> .
  
  # Step 2: For each child, find their children (grandchildren of William Haliburton)
  ?grandchild <http://dbpedia.org/ontology/father> ?child .

  # Step 3: Find the resting place of each grandchild
  OPTIONAL {
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"```sparql
SELECT ?commander WHERE {
  ?event rdf:type <http://dbpedia.org/ontology/SocialEvent> .
  ?event rdf:type <http://www.w3.org/2002/07/owl#Thing> .

  ?gavric dbo:profession ?profession .
  ?gavric foaf:name ""Lisa Gavrić"" .

  ?commander dbo:occupation ?profession .
  ?commander dbo:awardReceived ?award .

  ?makovetsky dbo:award ?award .
  ?makovetsky foaf:name ""Sergei Makovetsky"" .

  ?sombrerete dbo:headquarters ?location .
  ?sombrerete foaf:name ""House of Sombrerete"" .

  ?deceased dbo:deathPlace ?location .
  ?deceased rdf:type <http://dbpedia.org/ontology/Person> .
  ?deceased dbo:deathDate ?date .
  
  FILTER EXISTS { ?commander = ?deceased }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?parent1 ?parent2 WHERE {
  OPTIONAL {
    # Parent of a child of Archduke Joseph Francis of Austria
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?parent1 .
  }
  
  OPTIONAL {
    # Parent of a native of Budapest
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
    ?person <http://dbpedia.org/ontology/birthParent> ?parent2 .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Identify the writer of ""40 Dayz & 40 Nightz""
  ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?writer a <http://dbpedia.org/ontology/MusicalArtist> ;
          a <http://dbpedia.org/ontology/Artist> .

  # Step 2: Find the producer of a song by 50 Cent
  ?producer <http://dbpedia.org/ontology/producer> ?work .
  ?work <http://dbpedia.org/ontology/work> ;
        <http://dbpedia.org/ontology/MusicalWork> ;
        <http://dbpedia.org/ontology/Song> ;
        <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .

  # Step 3: Determine the professional alter ego of The Shadow
  ?professional a <http://dbpedia.org/ontology/Person> ;
                <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""the shadow""))

  # Step 4: Retrieve the associated musical artist for the writer identified in step 1
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://www.w3.org/2002/07/owl#sameAs> ?goMizunooResource .
    ?goMizunooResource <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
  }
  
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?boshinWar <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(STRSTARTS(STR(?boshinWar), ""http://dbpedia.org/resource/Boshin_War""))
  }
}
```",5,5,6,2,3,3,3,71,1,15,0,0.0625,1.0,0.11764705882352941
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war1 ?war2 WHERE {
  OPTIONAL {
    # Find the commander of the Battle of La Rinconada de Ate
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    
    # Retrieve wars associated with that commander
    ?commander <http://dbpedia.org/property/war> ?war1 .
  }
  
  OPTIONAL {
    # Find societal events in Chile
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?chileEvent ;
           a <http://dbpedia.org/ontology/SocietalEvent> ;
           <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Chile> .
    
    # Check if the event has an associated military force
    OPTIONAL { ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce . }
    
    # Retrieve wars linked to that military force
    ?militaryForce <http://dbpedia.org/property/war> ?war2 .
  }
}
```",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Find Amun-her-khepeshef's spouse
  ?spouseAmun <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  
  # Step 2: Find the child of Amun-her-khepeshef's spouse
  ?child1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> ;
          <http://dbpedia.org/ontology/fatherOrMother> ?spouseAmun .
  
  # Step 3: Determine the parent of that child
  ?parent1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> ;
           <http://dbpedia.org/ontology/fatherOrMother> ?child1 .
  
  # Step 4: Identify Ramesses II's spouse
  ?spouseRamesses <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Step 5: Find the child of Ramesses II's spouse
  ?child2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> ;
          <http://dbpedia.org/ontology/fatherOrMother> ?spouseRamesses .
  
  # Step 6: Determine the parent of that child
  ?parent2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Parent> ;
           <http://dbpedia.org/ontology/fatherOrMother> ?child2 .
  
  # Find the common parent
  FILTER (?parent1 = ?parent2)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?partyFather ?partyProdi ?italianPeopleParty WHERE {
  # Find a notable MIT alumnus (e.g., Bill Gates)
  OPTIONAL {
    <http://dbpedia.org/resource/Bill_Gates> <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?father <http://xmlns.com/foaf/0.1/name> ""William H. Gates Sr."" .
    ?father <http://dbpedia.org/property/politicalParty> ?partyFather .
  }
  
  # Find the party of Romano Prodi
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/memberOf> ?partyProdi .
  }

  # Reference to Italian People's Party (1994)
  OPTIONAL {
    ?italianPeopleParty <http://www.w3.org/2000/01/rdf-schema#label> ""Italian People's Party (1994)""@en ;
                        <http://purl.org/dc/terms/description> ?description .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?administration ?entity WHERE {
  OPTIONAL {
    # Find the ruling party in Sremski Karlovci and its administration
    <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/rulingParty> ?party .
    FILTER(?party <http://www.w3.org/2002/07/owl#Thing>)
    ?party <http://dbpedia.org/property/administration> ?administration .
  }
  
  OPTIONAL {
    # Find entities in regions using Central European Time
    ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
    ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> ?region .
    FILTER(?entity <http://www.w3.org/2002/07/owl#Thing>)
  }
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
SELECT ?territory ?work ?region WHERE {
  OPTIONAL {
    ?city <http://dbpedia.org/ontology/administrativeUnit> ?territory .
    FILTER (str(?city) = ""Reykjavík"")
  }
  
  OPTIONAL {
    ?book <http://purl.org/dc/terms/title> ""Iceland"" .
    ?book <http://dbpedia.org/property/author> ?author .
    ?author <http://dbpedia.org/ontology/publication> ?work .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://www.w3.org/2006/timezone#timeZone> ?timezone .
    ?timezone <http://www.w3.org/2006/timezone#region> ?region .
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?parent1 ?parent2 WHERE {
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?parent1 .
  }
  
  OPTIONAL {
    ?landmark a <http://dbpedia.org/ontology/Settlement> ;
              <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?native <http://dbpedia.org/ontology/nationality> ?landmark .
    ?native <http://www.w3.org/2006/vcard/ns#hasParent> ?parent2 .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commanderWellington ?commanderPolishHorse WHERE {
  # Find the commander in the force of Arthur Wellesley, 1st Duke of Wellington
  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/memberOf> ?force .
    ?force <http://dbpedia.org/property/commander> ?commanderWellington .
  }

  # Identify the 'Polish Horse'
  OPTIONAL {
    ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
    ?polishHorse <http://dbpedia.org/ontology/memberOf> ?organization .
    ?organization <http://purl.org/dc/terms/description> ""military unit"" .
    ?organization <http://purl.org/dc/terms/description> ""organisation"" .

    # Find the war associated with 'Polish Horse'
    ?polishHorse <http://dbpedia.org/ontology/warFoughtIn> ?war .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/Event> .

    # Find the commander in that war
    ?war <http://dbpedia.org/property/commander> ?commanderPolishHorse .
  }
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?headquarter ?birthPlace WHERE {
  OPTIONAL {
    # Find the owner of RDS Arena and its headquarters
    <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?owner .
    ?owner <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
  
  OPTIONAL {
    # Find the child of Desmond FitzGerald who is a politician and office holder, then get their birthplace
    <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    FILTER(CONTAINS(LCASE(?name), ""politician"") && CONTAINS(LCASE(?name), ""office holder""))
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?grandParentOfChild ?greatGrandParent WHERE {
  OPTIONAL {
    # Parent of the child of Ram Khamhaeng
    <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> ?grandParentOfChild .
  }
  
  OPTIONAL {
    # Parent of the parent of May Hnin Htapi
    <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/parent> ?greatGrandParent .
  }
}
```",4,4,5,2,2,3,2,20,1,0,0,1.0,1.0,1.0
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?josephBand ?jimArtist ?nevermoreMember WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
    ?person <http://dbpedia.org/property/memberOf> ?band .
    ?band <http://www.w3.org/2000/01/rdf-schema#label> ?josephBand .
  }
  
  OPTIONAL {
    ?artist <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?artist <http://dbpedia.org/property/memberOf> ?associatedArtist .
    ?associatedArtist <http://www.w3.org/2000/01/rdf-schema#label> ?jimArtist .
  }
  
  OPTIONAL {
    ?film <http://dbpedia.org/resource/Category:2006_films> <http://dbpedia.org/resource/Nevermore_(2006_film)> .
    ?film <http://dbpedia.org/ontology/reference> ?reference .
    ?reference <http://dbpedia.org/property/memberOf> ?bandMember .
    ?bandMember <http://www.w3.org/2000/01/rdf-schema#label> ?nevermoreMember .
    ?bandMember <http://dbpedia.org/ontology/artist> ?artistRef .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Find actors in ""The Departed""
  ?departed a dbo:Film ;
           dbo:starring ?actor .

  # Step 2: Find works involving Roz Ryan
  ?work (dbo:starring|dbo:cast) <http://dbpedia.org/resource/Roz_Ryan> .
  
  # Step 3: Ensure the work is both a movie and a television show
  ?work rdf:type dbo:Film ;
        rdf:type dbo:TelevisionShow .

  # Step 4: Find common actor in both works
  ?work (dbo:starring|dbo:cast) ?actor .

  # Step 5: Check if the actor is native to Compton, California
  OPTIONAL { 
    ?actor dbo:nativePlace <http://dbpedia.org/resource/Compton,_California> .
  }
}
```",4,7,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
SELECT ?actor ?associatedArtist ?filmReference ?bandMember WHERE {
  OPTIONAL {
    # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
    <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/ontology/starring> ?actor .
    
    # Step 2: Find associated musical artist for the actor
    ?actor <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    # Step 3: Identify reference related to ""Nevermore (2006 film)""
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://www.w3.org/2004/02/skos/core#related> ?filmReference .
    
    # Step 4: Find band member associated with the reference
    ?filmReference <http://dbpedia.org/ontology/bandMember> ?bandMember .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?associatedArtist WHERE {
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
    ?writer <http://www.w3.org/2002/07/owl#sameAs> ?musicalArtist .
    ?musicalArtist a <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  }
  
  OPTIONAL {
    ?alterEgo <http://dbpedia.org/ontology/alias> ""The Shadow"" .
    ?trueSelf <http://www.w3.org/2002/07/owl#sameAs> ?alterEgo .
  }

  OPTIONAL {
    ?producer <http://dbpedia.org/ontology/producer> ?work .
    ?work a <http://dbpedia.org/class/yago/MusicalWork108069068>, <http://dbpedia.org/class/yago/Song108069068> .
    ?work <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .
  }

  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?appietusArtist ?ebonyBandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?appietusArtist .
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Ebony Reigns""@en .
    ?person <http://xmlns.com/foaf/0.1/birthName> ""Ebony Reigns"" .
    ?person <http://dbpedia.org/ontology/artist> [] .
    ?person <http://dbpedia.org/ontology/musicalArtist> [] .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
    ?band <http://dbpedia.org/ontology/member> ?ebonyBandMember .
  }
}
```",4,6,5,3,2,3,2,20,1,14,0,0.06666666666666667,1.0,0.125
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?mayorAlmaMater ?awardeeAlmaMater WHERE {
  OPTIONAL {
    ?mayor a <http://dbpedia.org/ontology/Politician> ;
           <http://dbpedia.org/ontology/jobTitle> ""Mayor of Belfast"" ;
           <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
  
  OPTIONAL {
    ?awardee a <http://dbpedia.org/ontology/AwardWinner> ;
             <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> ;
             <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?nickname ?almaMater WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
  }
  
  OPTIONAL {
    ?award <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Royal_Medals> .
    ?award <http://purl.org/dc/terms/references> ?reference .
    ?reference <http://dbpedia.org/ontology/awardee> ?person .
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",5,6,6,3,2,3,3,71,0,1,1,0.0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Alan_Cunningham_(British_officer)> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Alan_Cunningham_(British_officer)> AS ?person)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/J._James_Burton> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/J._James_Burton> AS ?person)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
    BIND(<http://dbpedia.org/resource/Simon_Cadell> AS ?person)
  }
}
```",3,3,4,1,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?grandchild ?parentOfChild WHERE {
  # Step 1: Find the royal child of Seleucus II Callinicus
  ?royalChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?royalChild a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of that royal child
  ?grandchild <http://dbpedia.org/ontology/parent> ?royalChild .

  # Step 3: Identify the commander in Battle of Panium and their child
  ?commander <http://dbpedia.org/property/commandedBy> <http://dbpedia.org/resource/Battle_of_Panium> .
  ?childOfCommander <http://dbpedia.org/ontology/parent> ?commander .

  # Step 4: Find the parent of that child (from step 3)
  ?parentOfChild <http://dbpedia.org/ontology/child> ?childOfCommander .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?professional ?producer ?work ?associatedArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album <http://dbpedia.org/ontology/title> ""What U See Is What U Get"" .
  
  # Step 2: Find associated musical artists of the album
  ?album <http://dbpedia.org/property/associatedMusicalArtist> ?artist .

  # Step 3: Determine writers who are both musical artists and artists for this album
  ?writer <http://dbpedia.org/ontology/writer> ?album .
  ?writer <http://www.w3.org/2002/07/owl#sameAs> ?artist .
  
  # Step 4: Identify works by 50 Cent that are musical works, songs, and works produced or professionally involved with
  ?work <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/50_Cent> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  
  FILTER(?type IN (<http://dbpedia.org/ontology/MusicalWork>, <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/Work>)).
  
  # Step 5: Link to associated musical artist of these writers
  ?artist <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?bandMember1 ?band2 ?associatedArtist WHERE {
  # Part 1: Band member of Nevermore (2006 film)
  OPTIONAL {
    <http://dbpedia.org/resource/Nevermore_(film)> <http://dbpedia.org/ontology/reference> ?reference .
    ?reference <http://dbpedia.org/ontology/bandMember> ?bandMember1 .
    ?bandMember1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  }

  # Part 2: Band of Joseph Michael Furney
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/band> ?band2 .
  }
  
  # Part 3: Associated musical artist of Jim Sheppard
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
    ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    BIND(?artist AS ?associatedArtist)
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"```sparql
SELECT ?conflict WHERE {
  ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
  ?conflict a <http://dbpedia.org/ontology/MilitaryConflict> ;
           a <http://dbpedia.org/ontology/Event> .

  OPTIONAL {
    ?deathEvent <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Algiers> .
    ?deathEvent <http://dbpedia.org/ontology/event> ?conflict .
  }

  OPTIONAL {
    ?authorWork <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/French_Algeria> .
    ?authorWork <http://dbpedia.org/property/creator> ?author .
    ?deathEvent <http://dbpedia.org/ontology/event> ?conflict .
  }
}
```",6,8,7,3,3,3,3,71,0,1,1,0.0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
SELECT ?awardee WHERE {
  # Find awardees related to the military force in the Battle of Borodino
  ?militaryForce <http://dbpedia.org/ontology/militaryConflict> <http://dbpedia.org/resource/Battle_of_Borodino> .
  ?militaryForce <http://dbpedia.org/property/awardee> ?awardee .

  # Find commanders in the Battle of Leipzig
  ?commander <http://dbpedia.org/ontology/commandedMilitaryConflict> <http://dbpedia.org/resource/Battle_of_Leipzig> .
  
  # Match the awardee with a commander
  FILTER (?awardee = ?commander)
}
```",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify the commander in Battle of Perire who is royalty
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the father of this commander
  ?father <http://dbpedia.org/ontology/child> ?commander .
  
  # Step 3: Determine the spouse of this father
  ?father <http://dbpedia.org/property/spouse> ?spouse .

  # Step 4: Identify Nefertari's child
  OPTIONAL {
    <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?nefertariChild .
    
    # Ensure the commander is related to Nefertari's child through parentage
    ?father <http://dbpedia.org/ontology/parent> ?nefertariChild .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify Don Dokken's Persona
  ?dokken <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
  
  # Step 2: Find Associated Musical Artist of Watchtower
  ?watchtower <http://dbpedia.org/property/associatedMusicalArtist> ?artist .

  # Step 3: Determine Band Member of Don Dokken who is also associated with the artist from step 2
  ?dokkenBandMember <http://dbpedia.org/ontology/bandMember> ?dokken .
  ?dokkenBandMember <http://dbpedia.org/property/associatedMusicalArtist> ?artist .

  # Ensure the band member is a musical artist
  ?dokkenBandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?tedSpouse ?georgeanneSpouse WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://xmlns.com/foaf/0.1/birthName> ""Ted Martin McGinley"" .
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?tedSpouse .
  }
  
  OPTIONAL {
    ?georgeanne <http://xmlns.com/foaf/0.1/birthName> ""Georgeanne Marie Rice"" .
    ?georgeanne <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
    ?georgeanne <http://dbpedia.org/property/spouse> ?georgeanneSpouse .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
SELECT ?alterEgoProfessional ?associatedArtist ?producer WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    ?alterEgo <http://dbpedia.org/ontology/profession> ?alterEgoProfessional .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }

  OPTIONAL {
    ?work <http://dbpedia.org/ontology/work> ?musicalWork ;
          <http://dbpedia.org/ontology/song> ?song ;
          <http://dbpedia.org/ontology/producer> ?producer .
    ?musicalWork <http://www.w3.org/2002/07/owl#sameAs> ?work .
    ?song <http://www.w3.org/2002/07/owl#sameAs> ?work .
    ?work <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?decedentSatterthwaite ?verdunCommander ?algiersDecedent WHERE {
  # Step 1: Find decedent during Satterthwaite's tenure
  OPTIONAL { 
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/decedent> ?decedentSatterthwaite .
  }
  
  # Step 2: Find commander in Battle of Verdun
  OPTIONAL {
    ?verdunCommander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Battle_of_Verdun> .
  }

  # Step 3: Find decedent at Algiers
  OPTIONAL {
    ?algiersDecedent <http://dbpedia.org/ontology/decedentAt> <http://dbpedia.org/resource/Algiers> .
  }
  
  # Attempt to link the individuals (may require manual verification)
  FILTER (?decedentSatterthwaite = ?verdunCommander && ?verdunCommander = ?algiersDecedent)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?almaMater ?alterEgo WHERE {
  OPTIONAL {
    # Assuming George Kilbon Nash's administration is represented by a specific entity
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
  }
  
  OPTIONAL {
    # Assuming Matthew Burland's fictional character is represented by a specific entity
    <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/fictionalCharacter> ?fictionalCharacter .
    ?fictionalCharacter <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?band ?realName WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/memberOf> ?band .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/birthName> ?realName .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?professional ?bandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sharon_Kao> <http://xmlns.com/foaf/0.1/birthName> ?birthName .
    ?person <http://xmlns.com/foaf/0.1/birthName> ?birthName .
    ?person <http://purl.org/dc/terms/profession> ?professional .
  }
  
  OPTIONAL {
    ?artist <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
    ?artist <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Luke_Francis_Vibert> .
    ?artist <http://xmlns.com/foaf/0.1/member> ?bandMember .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?finalEntity WHERE {
  # Step 1: Find Antiochus II Theos' successor who is royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this successor who is royalty
  ?royalChild <http://dbpedia.org/ontology/child> ?successor .
  ?royalChild a <http://dbpedia.org/ontology/Royalty> .

  # Step 3 & 4: Identify Antiochus III the Great's child and their spouse
  ?antiochusIII <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child <http://dbpedia.org/ontology/child> ?antiochusIII .
  ?spouse <http://dbpedia.org/ontology/spouse> ?child .

  # Step 5: Identify the parent of Antiochus (son of Antiochus III the Great)
  ?antiochus <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> .
  ?parent <http://dbpedia.org/ontology/child> ?antiochus .

  # Step 6: Combine to find the final entity
  FILTER (?royalChild = ?spouse)
  FILTER (?parent = ?successor)

  BIND(?spouse AS ?finalEntity)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"```sparql
SELECT DISTINCT ?country WHERE {
  # Step 1: Get the time zone of Herzegovina-Neretva Canton
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?timeZone .

  # Step 2: Find countries in that time zone
  ?country <http://dbpedia.org/ontology/timeZone> ?timeZone .
  
  # Step 3: Get the ruling party in Sremski Karlovci
  OPTIONAL {
    <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
    
    # Step 4: Find administrative regions of this ruling party
    ?region <http://dbpedia.org/ontology/administrativeRegion> ?rulingParty .

    # Step 5: Match countries with these regions
    FILTER(?country = ?region)
  }
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?force ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/birthName> ""Narciso Campero"" .
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/force> ?force .
  }
  
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/work> ""--01-09"" .
    ?work <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?parentOfChild WHERE {
  # Step 1: Find the parent of Prince George William of Hanover who is royalty
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this parent who is royalty
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the spouse of Princess Victoria Louise of Prussia
  ?princess <http://xmlns.com/foaf/0.1/name> ""Princess Victoria Louise of Prussia"" .
  ?spouse <http://dbpedia.org/property/spouse> ?princess .

  # Step 4: Find the parent of the child from step 2
  ?parentOfChild <http://dbpedia.org/ontology/child> ?child .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?fatherParty ?prodiParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://www.w3.org/2002/07/owl#sameAs> ?lamberto .
    ?lamberto <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/politicalParty> ?fatherParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Antonio_Prodi>
      <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
      <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  }
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?entity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067069> .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  FILTER(?residence = ?almaMater)
  BIND(?residence AS ?entity)
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?territory WHERE {
  # Get the time zone of Bombali Shehro Chiefdom
  <http://dbpedia.org/resource/Bombali_Shehro_Chiefdom> <http://www.w3.org/2006/time#hasTimezone> ?timeZone .

  # Find territories administered by Iceland
  <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/administers> ?territory .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?commander WHERE {
  # Find an event related to Lisa Gavrić where she is a commander
  ?event <http://dbpedia.org/ontology/relatedPerson> <http://dbpedia.org/resource/Lisa_Gavrić> .
  ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
  ?societalEvent a <http://dbpedia.org/class/yago/SocialEvent108069068> . # Societal event class
  ?event a <http://dbpedia.org/ontology/Event> .

  # Find the award associated with Sergei Makovetsky
  ?award <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Sergei_Makovetsky> .
  
  # Check if there is a commander in the event who matches the awardee of that award
  ?event <http://dbpedia.org/ontology/commander> ?commander .
  ?award <http://dbpedia.org/property/awardee> ?commander .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?deathPlace ?birthPlace WHERE {
  # Administration of the father of the spouse (royalty) of Tokugawa Masako
  OPTIONAL {
    ?spouse rdf:type dbo:Royalty ;
            dbo:spouse <http://dbpedia.org/resource/Tokugawa_Masako> .
    ?father dbo:childOf ?spouse .
    ?administration dbo:administrativeUnit ?father .
  }

  # Death place of the father (politician) of the father (office holder) of Matsudaira Tadamasa
  OPTIONAL {
    ?officeHolder dbo:child <http://dbpedia.org/resource/Matsudaira_Tadamasa> ;
                  rdf:type dbo:OfficeHolder .
    ?grandfather dbo:childOf ?officeHolder ;
                 rdf:type dbo:Politician .
    ?deathPlace dbo:deathPlace ?grandfather .
  }

  # Birth place of the commander in the war (military conflict) of Saitō Hajime
  OPTIONAL {
    ?war dbo:commander <http://dbpedia.org/resource/Saitō_Hajime> ;
         rdf:type dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .
    ?commander dbo:commander ?war ;
               dbo:birthPlace ?birthPlace .
  }
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?birthPlace ?country WHERE {
  # Part 1: Birthplace of an awardee who is a writer and poet
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/nationality> ?nationality .
    ?person <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""eric gregory award""))
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?writerPoet .
    ?writerPoet <http://purl.org/dc/terms/type> ?type1 .
    ?writerPoet <http://purl.org/dc/terms/type> ?type2 .
    FILTER(CONTAINS(LCASE(STR(?type1)), ""writer"") && CONTAINS(LCASE(STR(?type2)), ""poet""))
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  # Part 2: Entity in the region of Western European Time
  OPTIONAL {
    ?country <http://www.w3.org/2006/time#during> ?timeZone .
    FILTER(CONTAINS(LCASE(STR(?timeZone)), ""western european time""))
    ?country a <http://dbpedia.org/class/yago/Country108069068> .
  }
}
```",4,7,5,2,2,2,3,28,0,0,5,0,0.0,0
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent1 ?parent2 WHERE {
  # Step 1: Find the commander in Battle of Panium
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Panium>) .

  # Step 2: Find the child of this commander
  ?commander <http://dbpedia.org/ontology/child> ?child1 .

  # Step 3: Determine the parent of this child
  ?parent1 <http://dbpedia.org/ontology/child> ?child1 .

  # Step 4: Identify a royalty child of Seleucus II Callinicus
  <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?royaltyChild .
  FILTER(?royaltyChild <http://www.w3.org/2002/07/owl#Thing> :Royalty) .

  # Step 5: Find the spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 6: Determine the child of this spouse
  ?spouse <http://dbpedia.org/ontology/child> ?child2 .

  # Step 7: Identify the parent of this child
  ?parent2 <http://dbpedia.org/ontology/child> ?child2 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?birthPlace ?landmark WHERE {
  # Part 1: Find the birthplace of a member of The Boils' associated musical artist
  OPTIONAL {
    ?artist <http://dbpedia.org/ontology/member> ?member .
    ?artist <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Musical_artist> .
    ?artist <http://dbpedia.org/ontology/type> ?type1, ?type2, ?type3 .
    FILTER(?type1 = <http://dbpedia.org/resource/Organisation> && 
           ?type2 = <http://dbpedia.org/resource/Band> &&
           ?type3 = <http://dbpedia.org/resource/Musical_group>)
    ?artist <http://dbpedia.org/ontology/member> ?member .
    ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  # Part 2: Find the landmark at elevation related to an award from the Battle of Chishui River
  OPTIONAL {
    ?battle <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(?battle), ""chishui river""))
    ?award <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2006/vcard/ns#hasElevation> ?elevation .
    ?location <http://dbpedia.org/property/landmark> ?landmark .
  }
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find Yōichi Masuzoe's residence country
  ?yMasuzoe <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2006/vcard/ns#country-name> ?country .

  # Step 2: Identify a person born in 1958 with a Japanese alma mater
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gyear .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?almaLabel .
  FILTER (CONTAINS(LCASE(?almaLabel), ""japanese"") && 
          CONTAINS(LCASE(?almaMater), ""university"") &&
          CONTAINS(LCASE(?almaMater), ""organization""))

  # Step 3: Find the manager of the 1998 Kashima Antlers season
  ?kashimaAntlers <http://dbpedia.org/ontology/teamManager> ?manager .
  FILTER (YEAR(?kashimaAntlers) = 1998)

  # Step 4: Link to team managed by this sports manager
  ?team <http://dbpedia.org/ontology/teamManager> ?manager .

  # Step 5: Find native of Yōichi Masuzoe's residence and member of alma mater
  ?native <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?birthPlace .
  FILTER (?birthPlace = ?country)
  
  ?native <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
SELECT ?deathPlace ?administration ?warLocation WHERE {
  OPTIONAL {
    # Death place of the author of ""The Twelve Abbots of Challant""
    ?book <http://dbpedia.org/ontology/author> ?author .
    ?book <http://dbpedia.org/property/title> ""The Twelve Abbots of Challant"" .
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Administration of the ruling party in Sicily
    ?party <http://www.w3.org/2002/07/owl#sameAs> ?rulingParty .
    ?rulingParty <http://dbpedia.org/property/administration> ?administration .
    ?rulingParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/PoliticalParty108069068> .
    ?rulingParty <http://www.w3.org/2000/01/rdf-schema#label> ?partyLabel .
    FILTER(CONTAINS(LCASE(?partyLabel), ""sicily"") && CONTAINS(LCASE(?partyLabel), ""ruling""))
  }
  
  OPTIONAL {
    # Location of the war involving Louis François Félix Musnier
    ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Louis_François_Félix_Musnier> .
    ?war <http://dbpedia.org/ontology/location> ?warLocation .
  }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
SELECT ?band1 ?person2 ?band2 ?writer ?band3 WHERE {
  # Band of Tracey Elizabeth McSween
  OPTIONAL {
    <http://dbpedia.org/resource/Tracey_McSween> <http://xmlns.com/foaf/0.1/knows> ?musicalArtist .
    ?musicalArtist <http://purl.org/dc/terms/subject> ?band1 .
  }

  # Person born on the birth date of Pavlo Khudzik and their band
  OPTIONAL {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person2 <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person2 <http://xmlns.com/foaf/0.1/knows> ?musicalArtist2 .
    ?musicalArtist2 <http://purl.org/dc/terms/subject> ?band2 .
  }

  # Band of the writer of the song ""Amba Shepherd""
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://xmlns.com/foaf/0.1/knows> ?musicalArtist3 .
    ?musicalArtist3 <http://purl.org/dc/terms/subject> ?band3 .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entityInNashville ?architectRestingPlace ?lukeLeaRestingPlace WHERE {
  # Entity located in Nashville, Tennessee
  OPTIONAL { 
    ?entity <http://www.geonames.org/ontology#locatedAt> <http://dbpedia.org/resource/Nashville,_Tennessee> .
    ?entity rdfs:label ?entityInNashville .
    FILTER(LANG(?entityInNashville) = ""en"")
  }
  
  # Resting place of the architect of P.D. Houston Jr. House
  OPTIONAL {
    <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .
    ?architect <http://dbpedia.org/ontology/burialPlace> ?architectRestingPlace .
  }
  
  # Resting place of Luke Lea (American politician, born 1879)
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Lea_(politician)> <http://dbpedia.org/ontology/burialPlace> ?lukeLeaRestingPlace .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Find Princess Olga's parent
  ?olgaParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Olga_of_Greece_and_Denmark> .
  
  # Step 2: Identify the child of that parent (likely Princess Olga)
  ?parentChild <http://dbpedia.org/ontology/parent> ?olgaParent .

  # Step 3: Find Frederick VIII's predecessor
  ?frederickVIII <http://dbpedia.org/ontology/predecessor> ?predecessor .
  
  # Step 4: Identify the child of this predecessor
  ?childOfPredecessor <http://dbpedia.org/ontology/parent> ?predecessor .

  # Step 5: Find the father of the identified child from step 2
  ?parentChild <http://www.w3.org/2000/01/rdf-schema#label> ""Olga of Greece and Denmark"" .
  ?parentChild <http://dbpedia.org/ontology/father> ?father .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?entityInJapan ?actorBirthPlace WHERE {
  # Query for entities in Japan
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Japan> .
    BIND(?entity AS ?entityInJapan)
  }
  
  # Query for birthplace of actors from ""Papa wa Newscaster""
  OPTIONAL {
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STRSTARTS(LCASE(STR(?movie)), ""papa wa newscaster""))
    ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    BIND(?birthPlace AS ?actorBirthPlace)
  }
}
```",3,3,4,2,2,2,2,9,0,3374,2,0.0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?child ?professional WHERE {
  # Step 1: Find Jason Schwartzman's parent(s)
  OPTIONAL { 
    <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/familyName> ?parent .
  }
  
  # Step 2: Find the child of that parent
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/child> ?child .
  }

  # Step 3: Identify the author of ""Understanding Comics""
  OPTIONAL {
    <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/property/author> ?author .
  }
  
  # Step 4: Find awards associated with this author
  OPTIONAL {
    ?author <http://dbpedia.org/ontology/receivesAward> ?award .
  }

  # Step 5: Identify professionals related to that award
  OPTIONAL {
    ?professional <http://dbpedia.org/property/profession> ?profession .
    ?professional <http://dbpedia.org/ontology/receivesAward> ?award .
  }
}
```",5,5,6,3,2,3,2,20,1,44100,0,2.2675222784063853e-05,1.0,4.534941725998821e-05
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
SELECT ?associatedArtist ?professionalName WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    ?sharonKao <http://www.w3.org/2000/01/rdf-schema#label> ""Sharon Kao""@en ;
               <http://dbpedia.org/property/birthName> ?birthName .
    FILTER(?birthName = ""Sharon Kao"")
    ?sharonKao <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/2000/01/rdf-schema#label> ?professionalName .
  }
}
```",4,5,5,2,2,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find the nickname for Jackson, Tennessee
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickName> ?nickname .

  # Step 2: Identify works involving Roz Ryan and an actor with the nickname
  ?work a <http://dbpedia.org/ontology/Movie> ;
        <http://dbpedia.org/ontology/work> ?workType ;
        <http://dbpedia.org/ontology/starring> ?actor .
  
  FILTER(?workType IN (<http://dbpedia.org/class/yago/Movies100000489>, <http://dbpedia.org/class/yago/TelevisionShows100000489>)) # Assuming these classes represent movies and TV shows

  ?actor <http://dbpedia.org/ontology/nickName> ?nickname .
  
  ?work <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .

  # Step 3: Retrieve the native place of this actor
  ?actor <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?nickname WHERE {
  # Step 1: Find an organisation that is also an educational institution in Northern Ireland
  ?institution a <http://dbpedia.org/ontology/EducationalOrganization> ;
               <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Northern_Ireland> .

  # Step 2: Find the mayor of an organisation in Belfast
  ?mayor a <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/ontology/officesHeld> ?office .
  ?office <http://dbpedia.org/ontology/officeName> ""Mayor""@en ;
          <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2006/vcard/ns#hasAddress> ?belfastAddress .
  ?belfastAddress <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Belfast> .

  # Step 2.1: Find the mayor's alma mater
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  # Ensure the alma mater matches the institution from step 1
  FILTER (?institution = ?almaMater)

  # Step 3: Find awardees of the Royal Medal and their alma mater
  ?awardee <http://dbpedia.org/ontology/receivesAward> ?award .
  ?award <http://purl.org/dc/terms/title> ""Royal Medal""@en ;
         <http://dbpedia.org/ontology/recipient> ?awardee .
  
  # Step 3.1: Ensure the awardee's alma mater matches
  ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 4: Retrieve the nickname of the institution
  ?institution <http://xmlns.com/foaf/0.1/knowsAs> ?nickname .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?native WHERE {
  # Step 1: Find Sean Pertwee's claim to fame
  ?filmOrConflict dbo:actor <http://dbpedia.org/resource/Sean_Pertwee> .
  
  # Step 2: Identify actors in these films/conflicts
  ?filmOrConflict dbo:actor ?actor .

  # Step 3: Filter for politicians and office holders among these actors
  ?actor a dbo:Politician ;
         dbo:officeHolder ?office .

  # Step 4: Determine the native country of these individuals
  ?actor dbo:nationality ?nativeCountry .

  # Step 5: Find their residences
  ?actor dbo:residence ?settlement .

  # Step 6: Filter for British settlements
  ?settlement a dbo:Settlement ;
              dbo:country <http://dbpedia.org/resource/United_Kingdom> .

  # Step 7: Identify natives of these settlements
  ?native dbo:nativePlace ?settlement .
}
```",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
SELECT ?commander ?claimToFame WHERE {
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/SocietalEvent> ;
         a <http://dbpedia.org/ontology/Event> .

    FILTER EXISTS { ?war <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Peninsular_War> }
    
    OPTIONAL {
      ?commander <http://dbpedia.org/ontology/involvement> <http://dbpedia.org/resource/Thomas_Trigge> .
    }

    OPTIONAL {
      ?commander <http://dbpedia.org/ontology/involvement> <http://dbpedia.org/resource/Carl_Pontus_Gahn> .
    }
  }

  ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?war ?commander ?militaryForce WHERE {
  # Find the war associated with both entities
  OPTIONAL { 
    <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/event> ?war .
    ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/referenceTo> ?event .
    ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> .
    ?event <http://dbpedia.org/ontology/event> ?war .
  }
  
  # Find the commander of the war
  OPTIONAL {
    ?war <http://dbpedia.org/property/commander> ?commander .
  }

  # Find the military force associated with the war and Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?militaryForce <http://dbpedia.org/ontology/militaryConflict> ?war .
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/property/referenceTo> ?forceEvent .
    ?forceEvent <http://dbpedia.org/ontology/event> ?militaryForce .
  }
}
```",5,10,6,3,2,3,3,71,7,77791,24,8.997660608241857e-05,0.22580645161290322,0.00017988153516041577
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?place .
  FILTER(CONTAINS(LCASE(STR(?place)), ""japan"")) .

  OPTIONAL { 
    ?team <http://dbpedia.org/property/teamManager> ?person ;
          <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  }

  OPTIONAL {
    ?association <http://www.w3.org/ns/org#member> ?person ;
                 <http://www.w3.org/ns/org#organization> <http://dbpedia.org/resource/University_of_Tsukuba> .
  }
}
```",4,4,5,2,3,3,3,71,2,10426,0,0.00019179133103183735,1.0,0.0003835091083413231
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Get Samir Bekrić's birthplace
  ?samirBekric <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Find a native person from that birthplace
  ?nativePerson <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthPlace .
  
  # Step 3: Get Dino Merlin's birth name
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 4: Find a person born with that birth name
  ?personBornWithBirthName <http://dbpedia.org/ontology/birthName> ?birthName .
  
  # Step 5: Identify awardees related to both persons
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/nominee> ?nativePerson ;
             <http://dbpedia.org/property/nominee> ?personBornWithBirthName .
  }
  
  # Step 6: Find band members of an awardee
  ?bandMember <http://dbpedia.org/ontology/member> ?awardee .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?warOfGahn ?claimToFame ?warOfBlake WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?warOfGahn .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?claimToFame .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/participatedIn> ?warOfBlake .
  }
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
SELECT ?nashAlmaMater ?blackHoodAlterEgo ?alterEgoAlmaMater WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?nashAlmaMater .
  }
  OPTIONAL {
    ?blackHood <http://dbpedia.org/property/alterEgo> ?blackHoodAlterEgo .
    ?blackHoodAlterEgo <http://dbpedia.org/ontology/almaMater> ?alterEgoAlmaMater .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?person WHERE {
  # Find decedents at Budapest
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  
  # Check if they were leaders of a government agency associated with Joseph Stalin
  ?agency <http://www.w3.org/ns/org#head> ?person ;
          <http://purl.org/dc/terms/about> <http://dbpedia.org/resource/Joseph_Stalin> ;
          <http://www.w3.org/2006/vcard/ns#organization-name> ?office .
  
  # Check if they were awardees for the Volcano and Ryukyu Islands campaign
  ?person <http://dbpedia.org/ontology/receivedAward> ?award .
  ?award <http://purl.org/dc/terms/about> [
    <http://dbpedia.org/property/campaign> ""Volcano and Ryukyu Islands campaign"" ;
    <http://dbpedia.org/ontology/commander> ?person
  ] .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?bandJosephMichael ?associatedArtistJimSheppard WHERE {
  OPTIONAL {
    ?personBirthName <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
    ?personBirthName <http://dbpedia.org/property/associatedBand> ?bandJosephMichael .
  }
  
  OPTIONAL {
    ?artistPerson <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?artistPerson <http://www.w3.org/2002/07/owl#sameAs> ?musicalArtist .
    ?musicalArtist <http://dbpedia.org/property/associatedBand> ?associatedArtistJimSheppard .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?micheleParty ?fatherParty ?romanoParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?micheleParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/party> ?fatherParty .
  }

  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?romanoParty .
  }
}
```",6,6,7,3,3,3,3,71,2,5,0,0.2857142857142857,1.0,0.4444444444444445
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Child of Archduke Joseph Francis of Austria
  ?child1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Step 2: Parent of this child
  ?child1 <http://dbpedia.org/ontology/parent> ?parent .

  # Step 3: Native of Budapest
  ?native <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
  
  # Step 4: Parent of the native
  ?native <http://dbpedia.org/ontology/parent> ?parent2 .

  # Step 5: Child of this parent
  ?child2 <http://dbpedia.org/ontology/child> ?parent2 .

  # Step 6: Parent of this child, who is a royalty
  ?child2 <http://dbpedia.org/ontology/parent> ?parent .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 7: Child of Archduke Ladislaus Philipp of Austria
  ?child3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> .
  
  # Step 8: Parent of this child
  ?child3 <http://dbpedia.org/ontology/parent> ?parent .

}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?mayorAlmaMater ?institutionNickname ?allenHillAlmaMeter WHERE {
  OPTIONAL {
    ?belfastEntity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> .
    ?belfastEntity <http://www.w3.org/2002/07/owl#sameAs> ?organisation .
    ?mayor <http://dbpedia.org/ontology/politicianFor> ?organisation ;
           <http://dbpedia.org/property/title> ""Mayor"" .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
  
  OPTIONAL {
    ?institution <http://www.w3.org/2002/07/owl#sameAs> ?organisation ;
                 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> ;
                 <http://dbpedia.org/ontology/educationalInstitution> true .
    ?institution <http://purl.org/dc/terms/alternative> ?institutionNickname .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMeter .
  }
}
```",7,11,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?country1 ?country2 WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/property/administrationCountry> ?country1 .
  }
  
  OPTIONAL {
    ?philScott <http://xmlns.com/foaf/0.1/name> ""Phil Scott""@en .
    ?philScott <http://dbpedia.org/ontology/birthName> ""Phil Scott"" .
    ?philScott <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Soccer_player> .
    ?philScott <http://dbpedia.org/property/administrationCountry> ?country2 .
  }
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thado Minsaw of Prome's parent
  ?thadoMinsaw <http://dbpedia.org/ontology/birthParent> ?parentOfThado .

  # Step 2: Find the child of this parent
  ?childOfParent <http://dbpedia.org/ontology/birthParent> ?parentOfThado .
  
  # Step 3: Reference to Thihapate of Mohnyin
  ?thihapate <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Step 4: Find the child of Thihapate who is an office holder and royalty
  ?childOfThihapate <http://dbpedia.org/ontology/birthParent> ?thihapate .
  ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
                   <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the predecessor of this child
  ?childOfThihapate <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?bandOfFurney ?associatedArtistOfSheppard WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandOfFurney .
  }
  OPTIONAL {
    ?sheppard a dbo:Person ;
              foaf:name ""Jim Sheppard"" ;
              dbo:birthName ""Jim Sheppard"" .
    ?sheppard dbo:associatedMusicalArtist ?associatedArtistOfSheppard .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?father1 ?father2 WHERE {
  # Step 1: Find children of Charles Augustus who are royalty
  ?charlesAugustusChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> .
  ?charlesAugustusChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the father of one of these children
  ?father1 <http://dbpedia.org/ontology/child> ?charlesAugustusChild .

  # Step 3: Identify Charles Alexander's parent
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .

  # Step 4: Find a child of this parent who is royalty
  ?royalChild <http://dbpedia.org/ontology/child> ?parent .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 5: Find the father of this royal child
  ?father2 <http://dbpedia.org/ontology/child> ?royalChild .
}
```",5,7,6,3,2,3,2,20,0,9,1,0.0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?work ?region ?territory WHERE {
  # Step 1: Find the author of ""Iceland""
  ?book <http://dbpedia.org/property/book> <http://dbpedia.org/resource/Iceland> .
  ?book <http://purl.org/dc/terms/creator> ?author .

  # Step 2: Retrieve works by this author
  ?work <http://purl.org/dc/terms/creator> ?author .

  # Step 3: Find the region associated with GMT
  ?region <http://dbpedia.org/ontology/timeZone> ""GMT"" .
  
  # Step 4: Identify territory administered from Reykjavík
  ?territory <http://dbpedia.org/property/administrativeCentre> <http://dbpedia.org/resource/Reykjavík> .

}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?grandchildrenRestingPlace ?awardeeRestingPlace ?simonCadellRestingPlace WHERE {
  # Resting place of the child's child (grandchild) of William Haliburton
  OPTIONAL {
    ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/William_Haliburton> .
    ?grandchild <http://dbpedia.org/ontology/birthParent> ?child1 .
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildrenRestingPlace .
  }

  # Resting place of the awardee of an award associated with Gerald Graham
  OPTIONAL {
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    ?gGrahamAward <http://purl.org/dc/terms/relation> <http://dbpedia.org/resource/Gerald_Graham> .
    ?gGrahamAward <http://dbpedia.org/ontology/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }

  # Resting place of Simon Cadell
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?simonCadellRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?commonParent WHERE {
  # Step 1: Find the children of Seti I
  ?setiChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/spouse> ?setiChild .

  # Step 2: Find the grandchildren of Seti I
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?setiChild <http://dbpedia.org/ontology/spouse> ?grandchild .

  # Step 3: Find the parent of Seti I's grandchild
  ?commonParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?grandchild <http://dbpedia.org/ontology/spouse> ?commonParent .

  # Step 4: Find the children of Nefertari
  ?nefertariChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/spouse> ?nefertariChild .

  # Step 5: Find the parent of Nefertari's child
  ?commonParent2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?nefertariChild <http://dbpedia.org/ontology/spouse> ?commonParent2 .

  # Step 6: Identify the common parent
  FILTER (?commonParent = ?commonParent2)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?biscayCommander ?francoForce ?prietoPredecessor ?predecessorForce WHERE {
  # Identify the Biscay Campaign as a societal event, an event, and a military conflict
  ?campaign <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Biscay_Campaign> .
  ?campaign <http://purl.org/dc/terms/type> ?type1 .
  ?campaign <http://purl.org/dc/terms/type> ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/SocietalEvent> && ?type2 = <http://dbpedia.org/ontology/Event>)
  
  # Find Francisco Franco's military force in the Biscay Campaign
  OPTIONAL {
    ?campaign <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Francisco_Franco> .
    ?francoForce <http://dbpedia.org/ontology/militaryForce> ?biscayCommander .
  }
  
  # Identify Indalecio Prieto's predecessor
  OPTIONAL {
    ?prietoPredecessor <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
    
    # Find the military force associated with the predecessor during a societal event and military conflict
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?prietoPredecessorEvent .
    ?event <http://purl.org/dc/terms/type> ?type3 .
    FILTER (?type3 = <http://dbpedia.org/ontology/SocietalEvent>)
    
    OPTIONAL {
      ?predecessorForce <http://dbpedia.org/ontology/militaryForce> ?prietoPredecessor .
    }
  }
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentOfChild1 ?parentOfChild2 WHERE {
  # Step 1: Find a child of Ramesses II
  ?child1 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Step 2: Find the parent of this child
  OPTIONAL { 
    ?parentOfChild1 <http://dbpedia.org/property/spouse> ?child1 .
  }
  
  # Step 3: Identify the spouse of Amun-her-khepeshef
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .

  # Step 4: Find a child of this spouse
  OPTIONAL {
    ?child2 <http://dbpedia.org/property/birthParent> ?spouse .
    
    # Step 5: Determine the parent of this child
    ?parentOfChild2 <http://dbpedia.org/ontology/spouse> ?child2 .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?nativeOfLondon ?child WHERE {
  # Find Jon Pertwee's birth name
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Find children of the person with Jon Pertwee's birth name
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
  ?person <http://dbpedia.org/ontology/child> ?child .

  # Check if any child is native to London
  ?child <http://dbpedia.org/ontology/nativeOf> <http://dbpedia.org/resource/London> .

  # Find Sean Pertwee's claim to fame that is both a film and a military conflict
  OPTIONAL {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?fame .
    ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Film> <http://dbpedia.org/ontology/MilitaryConflict>) .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?associatedArtist ?producerWork ?rapper WHERE {
  # Step 1: Find associated musical artists of Chris Taylor (Music Producer)
  OPTIONAL { 
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  
  # Step 2: Identify works that are both songs and musical works produced by Chris Taylor
  OPTIONAL {
    ?producerWork <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> ;
                  a <http://dbpedia.org/class/yago/MusicalWorks100000000> , <http://dbpedia.org/ontology/Song> .
  }
  
  # Step 3: Find rapper professionals linked to these works
  OPTIONAL {
    ?rapper <http://dbpedia.org/property/profession> <http://dbpedia.org/resource/Rapper> ;
            <http://purl.org/dc/terms/contributor> ?producerWork .
  }
}
```",4,8,5,3,2,3,3,71,2,5,0,0.2857142857142857,1.0,0.4444444444444445
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Find the author of Pushd and Popd
  ?pushd <http://dbpedia.org/ontology/author> ?author .
  ?popd <http://dbpedia.org/ontology/author> ?author .

  # Ensure both are authored by the same person
  FILTER(?pushd = <http://dbpedia.org/resource/Pushd> && ?popd = <http://dbpedia.org/resource/Popd>)

  # Step 2: Find other works by this author
  ?work <http://dbpedia.org/ontology/author> ?author .

  # Step 3: Filter for software type
  ?work <http://www.w3.org/2004/02/skos/core#prefLabel> ?label .
  FILTER(CONTAINS(LCASE(?label), ""software""))

  # Step 4: Find the entity in the United States associated with this work
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/entity> ?entity .
    ?entity <http://www.w3.org/ns/prov#location> ?location .
    FILTER(CONTAINS(LCASE(?location), ""united states""))
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","```sparql
SELECT ?party ?entity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/property/party> ?party .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2004/02/skos/core#inScheme> ?country .
    ?entity <http://www.w3.org/2004/02/skos/core#inScheme> ?country .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Wars commanded by a commander in the Peninsular War
  OPTIONAL {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?otherWar <http://dbpedia.org/ontology/commander> ?commander .
    ?otherWar <http://www.w3.org/2002/07/owl#sameAs> ?war .
  }
  
  # Wars involving Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthName> ""Carl Pontus Gahn"" .
    ?gahnWar <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/C._P._Gahn> .
    ?gahnWar <http://www.w3.org/2002/07/owl#sameAs> ?war .
  }
}
```",6,7,7,3,2,3,3,71,0,228,2,0.0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify Jon Pertwee
  ?jonPertwee <http://dbpedia.org/ontology/birthName> ""Jon Pertwee"" .
  
  # Step 2: Find a Professional Actor, Narrator, and Producer
  ?professional <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
                <http://dbpedia.org/ontology/narrator> true ;
                <http://dbpedia.org/ontology/producer> true .
  
  # Step 3: Determine their Claim to Fame
  ?professional <http://dbpedia.org/property/film> ?film ;
                 <http://dbpedia.org/property/militaryConflict> ?militaryConflict .

  # Step 4: Identify the Native of a British Settlement
  ?settlement <http://www.w3.org/2006/vcard/ns#country-name> ""United Kingdom"" ;
              <http://dbpedia.org/ontology/settlementType> ?type .
  
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> ;
              <http://dbpedia.org/ontology/birthPlace> ?settlement ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>,
                <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 5: Find France's Native Politician and Office Holder
  ?nativeFrenchPolitician <http://dbpedia.org/ontology/birthPlace> ?settlement ;
                          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>,
                            <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 6: Determine Jon Pertwee's Child
  ?jonPertwee <http://dbpedia.org/ontology/child> ?child .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?team WHERE {
  OPTIONAL {
    # Step 1: Find Gary Williams' birthplace
    <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    
    # Ensure the birth place is an English settlement
    ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ""England"" .
    ?birthPlace a <http://dbpedia.org/class/yago/SettlementsInEngland> .

    # Step 2: Find native soccer player and manager from that place
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
            <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/England> ;
            a <http://dbpedia.org/class/yago/SoccerPlayers> , <http://dbpedia.org/class/yago/SoccerManagers> .

    # Step 3: Determine the team of this person
    ?person <http://dbpedia.org/ontology/team> ?team .
    
    # Step 4: Identify successor of 2014 Sacramento Republic FC season
    OPTIONAL {
      <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
      
      ?player <http://dbpedia.org/ontology/team> ?team ;
              <http://dbpedia.org/ontology/playerInTeam> ?successorSeason .
    }
  }
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?narcisoForce ?orozimboWar ?societalEventWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?narcisoForce .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?orozimboWar .
  }

  OPTIONAL {
    ?societalEvent <http://www.w3.org/2002/07/owl#sameAs> ?chileEvent ;
                   <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    FILTER (CONTAINS(LCASE(?chileEvent), ""chile""))
    ?militaryForce <http://dbpedia.org/ontology/war> ?societalEventWar .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?nickname WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://purl.org/dc/terms/nickname> ?nickname .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
SELECT ?philScottAdministration ?patriciaMcCoyCountry WHERE {
  OPTIONAL {
    ?philScott <http://dbpedia.org/ontology/birthName> ""Phil Scott""@en .
    ?philScott <http://dbpedia.org/property/administration> ?philScottAdministration .
  }
  OPTIONAL {
    ?patriciaMcCoy <http://dbpedia.org/property/administration> ?administration .
    ?administration <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?country .
    FILTER(CONTAINS(LCASE(?country), ""patricia mccoy""))
  }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?parentOfErnestAugustus ?spouseOfVictoriaLouise ?childOfFather WHERE {
  # Step 1: Find parent of Prince Ernest Augustus of Hanover (born 1914)
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?parentOfErnestAugustus .

  # Step 2: Find spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouseOfVictoriaLouise .

  # Step 3: Find father of the spouse from step 2
  ?spouseOfVictoriaLouise <http://dbpedia.org/ontology/father> ?fatherOfSpouse .

  # Step 4: Find child of the father identified in step 3
  ?fatherOfSpouse <http://dbpedia.org/ontology/child> ?childOfFather .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?location ?administration ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?location .
  }
  
  OPTIONAL {
    ?party a <http://dbpedia.org/ontology/PoliticalParty> ;
           <http://dbpedia.org/property/rulingPartyIn> <http://dbpedia.org/resource/Sicily> ;
           <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",4,6,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2000/01/rdf-schema#label> ""Narciso Campero""@en .
  OPTIONAL { 
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryRank> ?force .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/title> ?force .
  }
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee ?commander ?leader WHERE {
  # Awardee of Order of Suvorov
  OPTIONAL { 
    ?order <http://dbpedia.org/ontology/recipient> ?awardee .
    FILTER(STR(?order) = ""Order_of_Suvorov"")
  }
  
  # Commander in the force of Ferenc Szálasi
  OPTIONAL {
    ?szalasi <http://dbpedia.org/ontology/commanderOf> ?force .
    ?commander <http://dbpedia.org/ontology/memberOfMilitaryOrganization> ?force .
    FILTER(STR(?szalasi) = ""Ferenc_Sz%C3%A1lasi"")
  }
  
  # Leader of the office (government agency) of Gustav Jonson
  OPTIONAL {
    ?jonson <http://dbpedia.org/ontology/officeHolder> ?office .
    ?office <http://www.w3.org/2002/07/owl#sameAs> ?politicianOffice .
    FILTER(STR(?jonson) = ""Gustav_Jonson"")
    
    ?governmentAgency <http://dbpedia.org/ontology/governmentAgency> ?office .
    ?leader <http://dbpedia.org/ontology/leader> ?governmentAgency .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  # Spouse of Princess Victoria Louise of Prussia
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
  FILTER(STRSTARTS(STR(?princess), ""http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia""))

  # Child of the father of Ernest Augustus, Duke of Brunswick
  ?father <http://dbpedia.org/ontology/father> ?ernestAugustus .
  FILTER(STRSTARTS(STR(?ernestAugustus), ""http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick""))
  
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?spouse .
  ?father <http://dbpedia.org/ontology/child> ?child .

  # Parent of Prince Ernest Augustus of Hanover (born 1914)
  ?parent <http://dbpedia.org/ontology/parent> ?princeErnestAugustus .
  FILTER(STRSTARTS(STR(?princeErnestAugustus), ""http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914–1987)""))
  
  # Ensure the spouse is also a parent of Prince Ernest Augustus
  ?spouse <http://www.w3.org/2002/07/owl#sameAs> ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find Thinkhaya's child
  ?thinkhayasChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

  # Step 2: Predecessor of Thinkhaya's child (assuming a role or title)
  ?predecessor <http://dbpedia.org/ontology/successor> ?thinkhayasChild .

  # Step 3: Find Thihapate's child who is an office holder and royalty
  ?thihapatessChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?thihapatessChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?thihapatessChild <http://dbpedia.org/ontology/officeHolder> ?office .

  # Step 4: Predecessor of Thihapate's child
  ?predecessor2 <http://dbpedia.org/ontology/successor> ?thihapatessChild .

  # Step 5: Find the child of this predecessor
  ?finalChild <http://dbpedia.org/ontology/father> ?predecessor2 .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?province ?region WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/residence> ?residence .
    FILTER (?person = <http://dbpedia.org/resource/Sebastiano_Bianchetti>)
    ?residence <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Settlements100000001> .
    ?address <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
    ?residence <http://www.w3.org/2006/vcard/ns#region> ?province .
  }
  
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/timeZone> ?timeZone .
    FILTER (?event = <http://dbpedia.org/resource/Aguilar_de_Segarra>)
    ?timeZone <http://www.w3.org/2006/vcard/ns#region> ?region .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
# Query for person deceased at headquarter of House of Sombrerete
SELECT ?person WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/House_of_Sombrerete> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
    ?deathEvent <http://dbpedia.org/ontology/location> ?headquarter ;
                <http://dbpedia.org/ontology/deathOf> ?person .
  }
}

# Query for commander in the profession, event, and societal event of Lisa Gavrić
SELECT ?commander WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .
    ?event <http://dbpedia.org/ontology/relatedThrough> ?profession ;
           <http://dbpedia.org/ontology/type> ?eventType .
    FILTER (?eventType IN (<http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/SocietalEvent>)).
    ?commander <http://dbpedia.org/ontology/commanderOf> ?event .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?nickname WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?nickname ;
            <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> ;
            <http://dbpedia.org/ontology/type> ?type .
    FILTER (?type = <http://dbpedia.org/class/yago/EducationalInstitution108069068> || 
            ?type = <http://dbpedia.org/class/yago/Organisation106501365>)
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?child ?spouse WHERE {
  # Step 1: Find children of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find spouse(s) of each child
  ?child <http://dbpedia.org/property/spouse> ?spouse .

  # Step 3: Identify the commander in Battle of Panium and their parent
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/battleCommanded> <http://dbpedia.org/resource/Battle_of_Panium> .
    ?commander <http://dbpedia.org/ontology/father> ?parent .

    # Step 4: Match the spouse with the parent
    FILTER(?spouse = ?parent)
  }
}
```",6,6,7,3,3,3,3,71,2,5,0,0.2857142857142857,1.0,0.4444444444444445
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?settlement WHERE {
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?administration <http://dbpedia.org/property/administrationOf> <http://dbpedia.org/resource/George_Kilbon_Nash> .
  }
  OPTIONAL {
    ?alterEgo <http://dbpedia.org/ontology/alias> ""Black Hood"" .
  }
  ?settlement <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?administration .
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> ?alterEgo .
    ?settlement <http://dbpedia.org/ontology/references> ?reference .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?authorWar ?gotabhayaWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?author .
    ?author <http://dbpedia.org/ontology/war> ?authorWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/work> ?work .
    ?work <http://dbpedia.org/ontology/war> ?gotabhayaWar .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commanderWar ?commanderForce WHERE {
  OPTIONAL {
    ?regiment <http://dbpedia.org/ontology/war> ?war .
    FILTER (STRSTARTS(STR(?regiment), ""http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)""))
    FILTER (?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
            ?event <http://dbpedia.org/ontology/type> ?type .
            FILTER (STRSTARTS(STR(?type), ""http://dbpedia.org/resource/Military_conflict"") && STRSTARTS(STR(?type), ""http://dbpedia.org/resource/Event"")))
    ?war <http://dbpedia.org/ontology/commander> ?commanderWar .
  }
  
  OPTIONAL {
    ?officeHolder <http://dbpedia.org/ontology/nationality> ?nationality .
    FILTER (STRSTARTS(STR(?nationality), ""http://dbpedia.org/resource/Kingdom_of_Ireland""))
    ?officeHolder <http://dbpedia.org/ontology/office> ?office .
    ?force <http://dbpedia.org/ontology/officer> ?officeHolder .
    ?force <http://dbpedia.org/ontology/commander> ?commanderForce .
  }
}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT DISTINCT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
  ?person <http://purl.org/dc/terms/relation> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?writer .
  ?writer <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Writing> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Poetry> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  OPTIONAL {
    ?location <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/description> ?placeName .
    FILTER(CONTAINS(LCASE(?placeName), ""nottinghamshire"") || CONTAINS(LCASE(?placeName), ""united kingdom""))
  }

  FILTER EXISTS {
    ?birthPlace <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/description> ?placeName .
    FILTER(CONTAINS(LCASE(?placeName), ""nottinghamshire"") || CONTAINS(LCASE(?placeName), ""united kingdom""))
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?war1 ?force ?war2 WHERE {
  # War of the commander in the work associated with --01-09
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/date> ""2009-01-01""^^xsd:date .
    ?work <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war1 .
  }
  
  # Force of Narciso Campero Leyes
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/militaryForce> ?force .
  }

  # War of the military force of a societal event in Chile
  OPTIONAL {
    ?event <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Societal_events_in_Chile> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war2 .
  }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?cunninghamRestingPlace ?grandchildRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/deathPlace> ?cunninghamRestingPlace .
  }
  
  OPTIONAL {
    {
      SELECT ?grandchild WHERE {
        ?parent <http://dbpedia.org/ontology/child> ?grandchild .
        ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
        ?parent <http://dbpedia.org/property/father> <http://dbpedia.org/resource/William_Haliburton> .
      }
    }
    
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
SELECT ?alterEgo ?almaMater ?entity WHERE {
  OPTIONAL {
    # Assuming Matthew Burland has a fictional character associated with him
    <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/fictionalCharacter> ?character .
    ?character <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  }
  
  OPTIONAL {
    # Assuming George K. Nash has an alma mater linked to his administration
    <http://dbpedia.org/resource/G._K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  
  OPTIONAL {
    # Finding an entity in Baden-Württemberg
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?region WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/timeZoneRegion> ?region .
  }
  
  OPTIONAL {
    ?sportsEvent <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2006/vcard/ns#country-name> ""Italy"" .
  }

  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio> .
  }
  
  FILTER(?region = ?sportsEventRegion && ?region = ?entityRegion)
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?awardeeRestingPlace ?childRestingPlace ?actorRestingPlace WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of St Michael and St George"" .
    ?person <http://www.w3.org/2006/vcard/ns#deathPlace> ?awardeeRestingPlace .
  }
  
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/James_Burton_(property_developer)> .
    ?child <http://www.w3.org/2006/vcard/ns#deathPlace> ?childRestingPlace .
  }

  OPTIONAL {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    ?film <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://www.w3.org/2006/vcard/ns#deathPlace> ?actorRestingPlace .
  }
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?child WHERE {
  # Step 1: Get Jon Pertwee's birth name
  ?jonPertwee <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER(?birthName = ""Jon Pertwee"")

  # Step 2: Find Sylvie Bermann's residence that is a settlement and British
  ?sylvieBermann <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?residence .
  ?residence <http://dbpedia.org/ontology/type> ?type .
  FILTER(?type = <http://dbpedia.org/class/yago/Settlements100000001> && 
         EXISTS { ?residence <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_Kingdom> })

  # Step 3: Find a person native to that residence
  ?person <http://dbpedia.org/ontology/birthPlace> ?residence .

  # Step 4: Get the child of that person
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  OPTIONAL {
    # Find the spouse of Tokugawa Masako who is a royalty
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Find the father of that spouse
    ?spouse <http://dbpedia.org/ontology/father> ?father .
    
    # Get the administration of that father
    ?father <http://dbpedia.org/property/administration> ?administration .
  }
  
  OPTIONAL {
    # Retrieve the death place of Tokugawa Ieyasu
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",4,5,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","```sparql
SELECT ?nickname ?mayorAlmaMater ?awardeeAlmaMater WHERE {
  # Step 1: Find an organisation and educational institution in Northern Ireland
  ?entity a <http://dbpedia.org/ontology/Organization> ;
          a <http://dbpedia.org/ontology/EducationalInstitution> ;
          <http://www.w3.org/2000/01/rdf-schema#label> ?name ;
          <http://dbpedia.org/ontology/location> ?location .
  FILTER(CONTAINS(LCASE(?location), ""northern ireland""))

  # Step 2: Get the nickname of this entity
  OPTIONAL { 
    ?entity <http://xmlns.com/foaf/0.1/nickName> ?nickname .
  }

  # Step 3: Find the mayor of an organisation in Belfast
  ?mayor a <http://dbpedia.org/ontology/Politician> ;
         <http://dbpedia.org/ontology/politicalOfficeHeld> ?office .
  ?office <http://dbpedia.org/ontology/officeHolder> ?mayor ;
          <http://dbpedia.org/ontology/location> ?belfastLocation .
  FILTER(CONTAINS(LCASE(?belfastLocation), ""belfast""))

  # Step 4: Get the alma mater of this mayor
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }

  # Step 5: Find awardees of Royal Medals
  ?awardee a ?type ;
          <http://dbpedia.org/property/reference> ?awardReference .
  FILTER(CONTAINS(LCASE(?awardReference), ""royal medals""))

  # Step 6: Get the alma mater of this awardee
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?reference ?party WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://purl.org/dc/terms/description> ?reference .
  }
  OPTIONAL {
    ?prodi <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en ;
           <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" ;
           <http://dbpedia.org/ontology/politicalParty> ?party .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","```sparql
SELECT ?bandTracey ?bandApolloWriter ?bandBirthDatePerson WHERE {
  OPTIONAL {
    # Band of Tracey Elizabeth McSween
    ?tracey a dbo:Person ;
            foaf:name ""Tracey Elizabeth McSween"" ;
            dbo:birthName ""Tracey Elizabeth McSween"" .
    ?tracey dbo:musicArtist ?bandTracey .
  }
  
  OPTIONAL {
    # Band of the writer of Apollo (Hardwell song)
    ?apolloSong dbo:title ""Apollo"" ;
                dbo:lyricsBy ?writer .
    ?writer dbo:musicArtist ?bandApolloWriter .
  }

  OPTIONAL {
    # Person born on the birth date of an athlete and soccer player decedent at Zolotonosha
    ?athlete a dbo:Athlete, dbo:SoccerPlayer ;
             dbo:deathPlace <http://dbpedia.org/resource/Zolotonosha> ;
             dbo:birthDate ?birthDate .
    ?person dbo:birthDate ?birthDate .
    ?person dbo:musicArtist ?bandBirthDatePerson .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> ?force .
  ?force <http://dbpedia.org/property/location> ""Budapest"" .
  
  ?person <http://dbpedia.org/ontology/award> ?award .
  ?award <http://dbpedia.org/property/campaign> ""Volcano and Ryukyu Islands campaign"" .

  ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
SELECT ?war ?force WHERE {
  OPTIONAL {
    # Assuming there is a work with a date property that matches ""--01-09""
    ?work <http://dbpedia.org/ontology/date> ""-01-09"" .
    ?work <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/warCommanded> ?war .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/force> ?force .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?birthName ?commander ?claimToFame ?war WHERE {
  # Step 1: Get Carl Pontus Gahn's birth name
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find Thomas Trigge's commander and their claim to fame
  OPTIONAL {
    ?trigge <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
    
    # Ensure the claim to fame is a military conflict, societal event, and an event
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts100000001> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvents100000001> .
    ?claimToFame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Events100000001> .
  }

  # Step 3: Find the war associated with the commander
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/war> ?war .
  }
  
  # Step 4: Link to Peninsular War
  FILTER(?war = <http://dbpedia.org/resource/Peninsular_War>)
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?war ?force WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/property/force> ?force .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?parent ?child WHERE {
  # Find Prince Ernest Augustus of Hanover (born 1914) and his parent
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .

  # Find the spouse of Princess Victoria Louise of Prussia
  OPTIONAL {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
    
    # Find the father of this spouse
    ?spouse <http://www.w3.org/2006/vcard/ns#hasParent> ?father .

    # Find any child of this father who is also a spouse of Princess Victoria Louise of Prussia
    OPTIONAL {
      ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
      ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?father .
      
      # Check if the parent of Prince Ernest Augustus is this child
      FILTER(?parent = ?child)
    }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?militaryForce WHERE {
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
  ?conflict <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
  ?conflict <http://dbpedia.org/property/militaryForce> ?militaryForce .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://www.w3.org/2002/07/owl#sameAs> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?nickname WHERE {
  ?entity <http://dbpedia.org/ontology/Organization> _:b0 .
  ?entity <http://dbpedia.org/ontology/EducationalOrganization> _:b1 .
  ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Northern_Ireland> .
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?entity .
  OPTIONAL { 
    ?entity <http://xmlns.com/foaf/0.1/nick> ?nickname .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?decedent ?war WHERE {
  # Step 1: Find the capital of Khemis Miliana District
  ?district <http://dbpedia.org/ontology/capital> ?capital .
  FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>) .

  # Step 2: Find a person who died in this capital
  ?decedent <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER(?deathPlace = ?capital) .

  # Step 3: Identify the commander of Battle of Verdun
  ?battle <http://dbpedia.org/property/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Verdun>) .

  # Step 4: Find wars commanded by this person
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?war != ?battle) .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?finalParent WHERE {
  ?thadoMinsaw <http://dbpedia.org/ontology/birthName> ""Thado Minsaw of Prome"" .
  
  OPTIONAL { 
    ?parent1 <http://dbpedia.org/ontology/child> ?thadoMinsaw .
    
    OPTIONAL {
      ?parent1 <http://dbpedia.org/ontology/child> ?otherChild .
      
      OPTIONAL {
        ?finalParent <http://dbpedia.org/ontology/child> ?otherChild .
      }
    }
  }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader a <http://dbpedia.org/ontology/Politician> ;
          <http://dbpedia.org/property/role> ?role .
  FILTER(CONTAINS(LCASE(?role), ""2010 japanese house of councillors election"")) .

  # Step 2: Determine the country of residence for this leader
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence a <http://dbpedia.org/ontology/Country> ;
             <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .

  # Step 3: Find the person born in 1958 and native to this country
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> ;
          <http://dbpedia.org/ontology/nationality> ?nationality .
  FILTER(?nationality = ?residence) .

  # Step 4: Identify the alma mater of this person
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater a <http://dbpedia.org/ontology/Organization>, <http://dbpedia.org/ontology/EducationalOrganization>, <http://dbpedia.org/ontology/University> ;
             <http://www.w3.org/2000/01/rdf-schema#label> ?universityLabel .
  FILTER(LANG(?universityLabel) = ""ja"") .

  # Step 5: Find the manager of the team managed by the sports manager of the 1998 Kashima Antlers season
  ?sportsManager a <http://dbpedia.org/ontology/SportsManager> ;
                 <http://dbpedia.org/property/teamManaged> ?team .
  FILTER(CONTAINS(LCASE(?team), ""1998 kashima antlers"")) .

  ?teamManager a <http://dbpedia.org/ontology/Manager> ;
               <http://dbpedia.org/property/teamManaged> ?team .
  
  # Step 6: Identify a member of the alma mater
  ?member <http://dbpedia.org/ontology/member> ?almaMater .
}
```",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?manager WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?election <http://dbpedia.org/ontology/politician> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election>) .

  # Step 2: Determine the country of residence for this leader
  ?leader <http://dbpedia.org/ontology/nationality> ?countryResidence .

  # Step 3: Find a person born in 1958 and native to this country
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gyear .
  ?person <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  FILTER(?nativePlace = ?countryResidence) .

  # Step 4: Identify the alma mater of this person
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  FILTER(
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizations1000000010> &&
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitutions1000000272> &&
    ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Universities1000000010>
  ) .

  # Step 5: Find a member of this alma mater
  ?member <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 6: Determine the team managed by Takashi Sekizuka
  ?team <http://dbpedia.org/property/teamManagedBy> <http://dbpedia.org/resource/Takashi_Sekizuka> .

  # Step 7: Identify the manager of this team
  ?team <http://dbpedia.org/ontology/manager> ?manager .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT DISTINCT ?actor WHERE {
  OPTIONAL {
    ?pertweeClaim <http://dbpedia.org/ontology/claimToFame> ?entity .
    ?pertweeClaim <http://xmlns.com/foaf/0.1/name> ""Sean Pertwee"" .
    ?entity a <http://dbpedia.org/ontology/Film> ;
            a <http://dbpedia.org/ontology/MilitaryConflict> .
  }
  
  OPTIONAL {
    ?bermannResidence <http://dbpedia.org/ontology/residence> ?settlement .
    ?bermannResidence <http://xmlns.com/foaf/0.1/name> ""Sylvie Bermann"" .
    ?settlement a <http://dbpedia.org/ontology/Settlement> ;
                <http://www.w3.org/2006/vcard/ns#country-name> ""United Kingdom"" .
  }
  
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",4,8,5,2,2,3,3,71,1,119691,0,8.354777261638205e-06,1.0,1.6709414919836582e-05
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?war ?claimToFame WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?claimToFame .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?finalEntity WHERE {
  # Step 1: Father of Soe Min Wimala Dewi
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .

  # Step 2: Child of this Father
  ?childFather <http://www.w3.org/2000/01/rdf-schema#label> ""father"" .
  ?father ?childFather ?child1 .

  # Step 3: Parent of the Child of the Parent of Thado Minsaw of Prome
  ?parentThado <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?childParent <http://www.w3.org/2000/01/rdf-schema#label> ""child"" .
  ?parentThado ?childParent ?grandChild .
  ?grandChildParent <http://www.w3.org/2000/01/rdf-schema#label> ""parent"" .
  ?grandChild ?grandChildParent ?child2 .

  # Step 4: Predecessor of the Child
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?child2 .

  # Step 5: Office Holder and Royalty of Thihapate of Mohnyin
  ?thihapateChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?thihapateChild <http://www.w3.org/2000/01/rdf-schema#label> ""office holder"" .
  ?thihapateChild <http://www.w3.org/2000/01/rdf-schema#label> ""royalty"" .

  # Step 6: Final Entity
  FILTER(?child1 = ?predecessor)
  BIND(?thihapateChild AS ?finalEntity)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?entity WHERE {
  OPTIONAL {
    # Find the residence of the commander in Battle of Diamond Rock
    <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/residence> ?residence .

    # Check if the residence is a country
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
    
    BIND(?residence AS ?entity)
  }
  
  OPTIONAL {
    # Find the alma mater of the child of Richard Pankhurst
    <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .

    # Check if alma mater is the same as the residence entity
    FILTER(?entity = ?almaMater)
  }
}
```",5,6,6,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entity WHERE {
  OPTIONAL {
    # Writer of ""Where It's At"" (Dustin Lynch album)
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    FILTER(STRSTARTS(STR(?album), ""http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)""))
  }
  
  OPTIONAL {
    # Alma mater of Carl L. Nippert
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  OPTIONAL {
    # Alter ego of Matthew Burland
    ?burland <http://dbpedia.org/ontology/fictionalAlterEgo> ?alterEgo .
    FILTER(STRSTARTS(STR(?burland), ""http://dbpedia.org/resource/Matthew_Burland""))
  }

  # Entity in administration and settlement
  ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?settlement .
  ?entity <http://dbpedia.org/ontology/administrativeUnit> ?adminUnit .

  # Ensure the entity is related to the above findings
  FILTER(?writer = ?almaMater || ?writer = ?alterEgo || ?almaMater = ?alterEgo)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?forceOfNarciso ?warOfPisaguaForce ?warOfLaRinconadaCommander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?forceOfNarciso .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/property/militaryForce> ?pisaguaForce .
    ?pisaguaForce <http://dbpedia.org/ontology/participatedIn> ?warOfPisaguaForce .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/participatedIn> ?warOfLaRinconadaCommander .
  }
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?partyProdi ?fatherParty WHERE {
  # Query for Romano Prodi's party
  OPTIONAL {
    ?prodi <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
    ?prodi <http://dbpedia.org/ontology/politicalParty> ?partyProdi .
  }
  
  # Query for the father of an MIT alumnus related to Partito Popolare Italiano
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/father> ?father .
    ?reference <http://dbpedia.org/ontology/reference> ?father .
    ?reference <http://dbpedia.org/ontology/topic> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
    ?father <http://dbpedia.org/ontology/politicalParty> ?fatherParty .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?headquarter WHERE {
  ?office <http://www.w3.org/2000/01/rdf-schema#label> ""Joo Don-sik""@en .
  ?office <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joo_Don-sik> .
  ?office <http://dbpedia.org/ontology/organization> ?org .
  ?org <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?headquarter .
  FILTER EXISTS { 
    ?org <http://dbpedia.org/property/country> <http://dbpedia.org/resource/South_Korea> .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/ontology/leaderOf> <http://dbpedia.org/resource/People's_Commissariat_of_Defence_of_the_Soviet_Union> .
  ?person <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardeeRestingPlace ?simonCadellRestingPlace ?childRestingPlace WHERE {
  OPTIONAL {
    # Resting place of Gerald Graham's awardee
    <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/receivesAward> ?award .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    ?awardee <http://dbpedia.org/ontology/burialPlace> ?awardeeRestingPlace .
  }
  
  OPTIONAL {
    # Resting place of Simon Cadell
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/burialPlace> ?simonCadellRestingPlace .
  }

  OPTIONAL {
    # Resting place of James Burton's child
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/burialPlace> ?childRestingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT DISTINCT ?bandMemberPriscilla ?associatedArtistOfori WHERE {
  # Find band members of Priscilla Opoku-Kwarteng
  OPTIONAL {
    ?person a <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng"" .
    ?person <http://dbpedia.org/ontology/memberOf> ?bandMemberPriscilla .
  }

  # Find associated musical artists of Ofori Amponsah's band members
  OPTIONAL {
    ?ofori a <http://dbpedia.org/ontology/MusicalArtist> ;
           <http://dbpedia.org/property/birthName> ""Ofori Amponsah"" .
    ?ofori <http://dbpedia.org/ontology/memberOf> ?bandMemberOfori .
    ?bandMemberOfori <http://dbpedia.org/ontology/member> ?member .
    ?member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtistOfori .
  }
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchildFather WHERE {
  # Step 1: Find children of Maria Pavlovna who are royalty
  ?mariaChild <http://dbpedia.org/ontology/child> ?royaltyChild .
  FILTER(?mariaChild = <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)>)
  ?royaltyChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find spouse of Princess Pauline who is royalty
  ?paulineSpouse <http://dbpedia.org/property/spouse> ?princessPauline .
  FILTER(?princessPauline = <http://dbpedia.org/resource/Pauline_of_Saxe-Weimar-Eisenach>)
  ?paulineSpouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find child of the spouse from step 2 who is royalty
  ?paulineSpouseChild <http://dbpedia.org/ontology/child> ?royaltyGrandchild .
  FILTER(?royaltyGrandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>) .

  # Step 4: Find father of the child from step 3
  ?royaltyGrandchild <http://dbpedia.org/property/father> ?grandchildFather .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"```sparql
SELECT ?band ?birthPlace WHERE {
  # Step 1: Find the writer of ""Apollo (Hardwell song)""
  ?song <http://dbpedia.org/ontology/writer> ?writer .
  FILTER(STR(?song) = ""Apollo_(Hardwell_song)"")

  # Step 2: Find the band associated with this writer
  ?writer <http://dbpedia.org/property/associatedBand> ?band .

  # Step 3: Identify a person who is an athlete and soccer player from Zolotonosha
  ?athlete <http://www.w3.org/2000/01/rdf-schema#label> ""Athlete""@en .
  ?athlete <http://dbpedia.org/ontology/sport> ?sport .
  FILTER(STR(?sport) = ""Soccer"")
  ?athlete <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .

  # Step 4: Get the death date of this athlete
  ?athlete <http://dbpedia.org/ontology/deathDate> ?deathDate .

  # Step 5: Find a person born on this death date
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  FILTER(STR(?birthDate) = STR(?deathDate))
  
  # Retrieve the birth place of this person
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Seti I's grandchild
  ?grandChild <http://dbpedia.org/ontology/birthParent> ?parent .
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Seti_I> .

  # Step 2: Identify the parent of Seti I's grandchild who is a royalty
  ?royaltyParent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royaltyParent <http://dbpedia.org/ontology/birthChild> ?grandChild .

  # Step 3: Find the commander in Battle of Perire who is a royalty
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?battleParticipant <http://dbpedia.org/property/commandedBy> ?commander .
  ?battleParticipant <http://dbpedia.org/property/battleName> ""Battle of Perire"" .

  # Step 4: Determine the father of this commander
  ?father <http://dbpedia.org/ontology/birthChild> ?commander .

  # Step 5: Find the spouse of this father
  ?father <http://dbpedia.org/property/spouse> ?spouse .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT DISTINCT ?commonBandMember WHERE {
  # Step 1: Identify Queensrÿche as a group and organization
  ?queensryche <http://dbpedia.org/ontology/type> ?type .
  FILTER (?type IN (<http://dbpedia.org/class/yago/MusicalGroup108069068>, <http://dbpedia.org/class/yago/Organisation106067786>))
  
  # Step 2: Find band members of Queensrÿche
  ?queensryche <http://dbpedia.org/ontology/member> ?bandMember .
  
  # Step 3: Identify John Pettibone's associated musical artist (his band)
  ?pettibone <http://dbpedia.org/property/associatedMusicalArtist> ?pettibonesBand .

  # Step 4: Find band members of John Pettibone's band
  ?pettibonesBand <http://dbpedia.org/ontology/member> ?commonBandMember .
  
  # Ensure the common band member is part of both bands
  FILTER (?bandMember = ?commonBandMember)
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
SELECT ?commanderFame ?warParticipation WHERE {
  OPTIONAL {
    # Find the commander of the Great Siege of Gibraltar and their claim to fame
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/notableFor> ?commanderFame .
  }
  
  OPTIONAL {
    # Find the birth name of Carl Pontus Gahn and any war participation
    <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
    FILTER(?birthName = ""Carl Pontus Gahn"")
    
    OPTIONAL {
      # Assuming there's a property linking individuals to wars they participated in
      <http://dbpedia.org/resource/C._P._Gahn> <http://dbpedia.org/property/participatedIn> ?war .
      ?war <http://dbpedia.org/ontology/name> ?warParticipation .
    }
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
SELECT ?force ?entity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/memberOf> ?force .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2004/02/skos/core#prefLabel> ""Palestine"" .
    ?person <http://dbpedia.org/ontology/award> ?entity .
  }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","```sparql
SELECT ?almaMatterJohnAlderdice ?nickname ?almaMatterRoyalMedals WHERE {
  # Alma Mater of John Alderdice, Baron Alderdice
  OPTIONAL { 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMatterJohnAlderdice .
  }

  # Nickname of an Organisation and Educational Institution in Northern Ireland
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
    ?entity <http://dbpedia.org/ontology/type> ?type1, ?type2 .
    FILTER(?type1 = <http://dbpedia.org/class/yago/Organisation108069068> && ?type2 = <http://dbpedia.org/class/yago/EducationalInstitution100000001>)
    ?entity <http://xmlns.com/foaf/0.1/knowsAs> ?nickname .
  }

  # Alma Mater of Awardees of Royal Medals
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/reference> ""Royal Medals"" .
    ?recipient <http://dbpedia.org/ontology/receivesAward> ?award .
    ?recipient <http://dbpedia.org/ontology/almaMater> ?almaMatterRoyalMedals .
  }
}
```",7,10,8,3,3,3,3,71,1,0,0,1.0,1.0,1.0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT DISTINCT ?bandMember ?artistBand WHERE {
  # Step 1: Find band members of YU Grupa
  ?yuGrupa a <http://dbpedia.org/ontology/Band> ;
           <http://www.w3.org/2000/01/rdf-schema#label> ""YU Grupa""@en .
  
  ?yuGrupaMember <http://dbpedia.org/ontology/member> ?yuGrupa .

  # Step 2: Find bands associated with these members
  ?memberBand a <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup> ;
              <http://dbpedia.org/ontology/member> ?yuGrupaMember .
  
  # Step 3: Identify Žika Jelić's band
  ?zikaJelic a <http://dbpedia.org/ontology/Person> ;
             <http://www.w3.org/2000/01/rdf-schema#label> ""Žika Jelić""@en .
  
  ?zikaBand a <http://dbpedia.org/ontology/Band>, <http://dbpedia.org/ontology/MusicalGroup> ;
            <http://dbpedia.org/ontology/member> ?zikaJelic .

  # Step 4: Find artists in Žika Jelić's band
  ?artistBandMember a <http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist> ;
                    <http://dbpedia.org/ontology/member> ?zikaBand .

  # Step 5: Retrieve bands associated with these artists
  ?artistBand a <http://dbpedia.org/ontology/Band> ;
              <http://dbpedia.org/ontology/member> ?artistBandMember .
  
  BIND(?yuGrupaMember AS ?bandMember)
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?giulioParty ?romanoParty ?reference WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?giulioParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?romanoParty .
  }
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/wikiPageWikiLink> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
  }
}
```",3,3,4,1,3,3,3,71,1,8,0,0.1111111111111111,1.0,0.19999999999999998
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
SELECT ?alterEgo ?adminEntity WHERE {
  OPTIONAL {
    # Find the fictional character associated with Matthew Burland
    ?burland <http://dbpedia.org/ontology/fictionalCharacter> ?character .
    
    # Retrieve the alter ego of that fictional character
    ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
  
  OPTIONAL {
    # Find settlements named ""Green""
    ?greenSettlement a <http://dbpedia.org/class/yago/Settlement100000001> ;
                     <http://www.w3.org/2006/vcard/ns#hasName> ""Green"" .
    
    # Retrieve entities involved in the administration of these settlements
    ?adminEntity <http://dbpedia.org/ontology/administrativeUnit> ?greenSettlement .
  }
}
```",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthPlaceCommander ?deathPlaceGrandfather WHERE {
  # Find the birthplace of a commander in the Boshin War
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlaceCommander .
    ?boshinWar <http://dbpedia.org/property/commander> ?commander .
    FILTER(CONTAINS(LCASE(?boshinWar), ""boshin war""))
  }

  # Find the death place of Matsudaira Tadamasa's grandfather who is a politician
  OPTIONAL {
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/father> ?grandfather .
    ?grandfather <http://www.w3.org/2002/07/owl#sameAs> ?politician .
    FILTER(CONTAINS(LCASE(?politician), ""politician""))
    ?grandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlaceGrandfather .
  }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"```sparql
SELECT ?decedentCapital ?decedentWork WHERE {
  OPTIONAL {
    # Step 1: Find the capital of Khemis Miliana District
    ?district <http://dbpedia.org/ontology/capital> ?capital .
    FILTER(?district = <http://dbpedia.org/resource/Khemis_Miliana_District>) .

    # Step 2: Find person decedent at this capital
    ?decedentCapital <http://dbpedia.org/ontology/deathPlace> ?capital .
  }

  OPTIONAL {
    # Step 3: Identify the author of ""French Algeria""
    ?work <http://purl.org/dc/terms/creator> ?author .
    FILTER(?work = <http://dbpedia.org/resource/French_Algeria_(book)>) .

    # Step 4: Determine the commander in a war related to this author
    ?conflict <http://dbpedia.org/ontology/commander> ?author .
    
    # Step 5: Find the commander in the Battle of Verdun
    ?verdunCommander <http://dbpedia.org/ontology/commander> ?battleVerdun .
    FILTER(?battleVerdun = <http://dbpedia.org/resource/Battle_of_Verdun>) .

    # Step 6: Identify person decedent at the work location of the author and war commander
    ?workLocation <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?author <http://dbpedia.org/ontology/workLocation> ?workLocation .
    
    ?decedentWork <http://dbpedia.org/ontology/deathPlace> ?workLocation .
  }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?force <http://dbpedia.org/ontology/decedent> ?decedent .
  ?decedent <http://dbpedia.org/ontology/placeOfBirth> <http://dbpedia.org/resource/Budapest> .
  
  ?commander <http://dbpedia.org/ontology/commandedForce> ?force .
  ?commander <http://dbpedia.org/property/orderOfSuvorovAwardee> true .

  ?leader <http://dbpedia.org/ontology/leaderPosition> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> .
  
  FILTER (?commander = ?leader)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?claimToFame ?militaryConflict WHERE {
  # Claim to Fame of Louis des Balbes de Berton de Crillon
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .

  # Military Conflict involving Peninsular War and Carl Pontus Gahn
  OPTIONAL {
    ?militaryConflict <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Peninsular_War> .
    ?militaryConflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> .
    ?militaryConflict <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Carl_Pontus_Gahn> .
  }
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?realName ?band WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/birthName> ?realName .
  }
  OPTIONAL {
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> ;
            <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/ontology/Vocalist> .
    ?person <http://dbpedia.org/ontology/band> ?band .
  }
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify Mlada (abbess)
  ?mlada a <http://dbpedia.org/ontology/Abbess> ;
         <http://www.w3.org/2006/vcard/ns#hasFamilyName> ""Mlada"" .

  # Step 2: Find the Parent of Mlada
  ?parent1 <http://dbpedia.org/ontology/child> ?mlada .
  
  # Step 3: Find the Child of This Parent Who is Royalty
  ?royalChild <http://dbpedia.org/ontology/parent> ?parent1 ;
              a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Reference to Richeza of Poland (must be royalty)
  ?reference <http://dbpedia.org/ontology/spouse> ?royalChild ;
             a <http://dbpedia.org/ontology/Royalty> ;
             <http://www.w3.org/2006/vcard/ns#hasFamilyName> ""Richeza"" .

  # Step 5: Father of This Reference
  ?father <http://dbpedia.org/ontology/spouse> ?reference ;
          a <http://dbpedia.org/ontology/Royalty> .
  
  # Step 6: Parent of This Father
  ?finalParent <http://dbpedia.org/ontology/child> ?father .
}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?province ?country WHERE {
  OPTIONAL {
    # Find Sebastiano Bianchetti's residence and its province
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Settlement108069068> .
    ?address <http://www.w3.org/2006/vcard/ns#locality> ?settlement .
    ?settlement <http://dbpedia.org/ontology/province> ?province .
  }
  
  OPTIONAL {
    # Find countries in the region of Central European Time
    ?country <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2000/01/rdf-schema#label> ""Central European Time""@en .
    ?country a <http://dbpedia.org/class/yago/Country108156098> .
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?entityInBadenWurttemberg ?almaMater WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Baden-Württemberg""@en .
    BIND(?location AS ?entityInBadenWurttemberg)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMeter .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","```sparql
SELECT DISTINCT ?band WHERE {
  # Step 1: Identify YU Grupa
  <http://dbpedia.org/resource/YU_Grupa> rdf:type dbo:Band ;
    dbo:member ?member .

  # Step 2: Find band members who are artists and musical artists
  ?member rdf:type dbo:Artist, dbo:MusicalArtist .

  # Step 3: Determine other bands these members belong to
  ?member dbo:bandMember ?otherBand .
  FILTER (?otherBand != <http://dbpedia.org/resource/YU_Grupa>)
  ?otherBand rdf:type dbo:Group .

  # Step 4: Find references (groups or organizations) related to YU Grupa
  OPTIONAL {
    <http://dbpedia.org/resource/YU_Grupa> dbo:reference ?reference .
    ?reference rdf:type dbo:Group, dbo:Organization .
  }

  # Step 5: Find band members of these reference bands
  ?reference dbo:member ?refMember .
  ?refMember dbo:bandMember ?refBand .
  FILTER (?refBand != <http://dbpedia.org/resource/YU_Grupa>)
  ?refBand rdf:type dbo:Group .

  # Return the bands found in steps 3 and 5
  VALUES ?band { ?otherBand ?refBand }
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find the capital of Algeria
  <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/administrativeCapital> ?capital .
  
  # Ensure the capital is a settlement
  ?capital <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  ?settlement rdf:type <http://dbpedia.org/class/yago/Settlements100000>.

  # Find persons with decedent property linked to Algiers (the capital)
  ?person <http://dbpedia.org/ontology/decedent> ?decedent .
  ?decedent <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?capitalName .
  
  # Ensure the decedent's address matches Algiers
  FILTER(?capitalName = ""Algiers"")
}
```",3,4,4,3,1,3,3,71,0,0,122,0,0.0,0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?leader ?awardee WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/commanderInVolcanoAndRyukyuIslandsCampaign> true ;
            <http://dbpedia.org/ontology/award> ?award .
    FILTER EXISTS { ?award <http://www.w3.org/2000/01/rdf-schema#label> ""commander"" }
    BIND(?person AS ?awardee)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Find individuals native to Compton, California
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
  
  # Step 2: Identify Michael Ballhaus's claim to fame and actors associated with it
  OPTIONAL {
    ?work <http://dbpedia.org/property/claimToFame> ?ballhausWork .
    ?ballhausWork <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> ;
                  <http://dbpedia.org/ontology/starring> ?actor .
  }
  
  # Step 3: Find movies that are both works and television shows, and their actors
  OPTIONAL {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>, <http://dbpedia.org/ontology/Work>, <http://dbpedia.org/ontology/TVSeries> .
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
  }
  
  # Ensure the actor is common in both conditions
  FILTER(?person = ?actor)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?commonChild ?parent WHERE {
  # Find child of Antiochus (son of Antiochus III)
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?antiochusChild .
  
  # Find child of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?antiochus3Child .

  # Identify common child
  FILTER (?antiochusChild = ?antiochus3Child)
  
  # Find parent of the common child
  ?commonChild <http://www.w3.org/2002/07/owl#sameAs> ?antiochusChild .
  ?commonChild <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?actorBirthPlace ?jstEntity WHERE {
  OPTIONAL {
    # Find the actor for ""Papa wa Newscaster"" and their birthplace
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?movie <http://dbpedia.org/property/title> ""Papa wa Newscaster""@en .
    ?actor <http://dbpedia.org/ontology/birthPlace> ?actorBirthPlace .
  }
  
  OPTIONAL {
    # Find entities in the region of Japan Standard Time
    ?entity <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?region .
    ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> .
    BIND(?entity AS ?jstEntity)
  }
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?director ?birthPlace ?resident ?parent ?child ?father WHERE {
  # Step 1: Identify the director of ""Pipe Dreams"" (1976 film)
  <http://dbpedia.org/resource/Pipe_Dreams_(film)> <http://dbpedia.org/ontology/director> ?director .

  # Step 2: Find the birthplace of the director
  ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  # Step 3: Determine the resident of the birthplace (assuming it's a notable entity)
  OPTIONAL { 
    ?birthPlace <http://www.w3.org/2006/vcard/ns#hasNominatedFor> ?resident .
  }

  # Step 4: Identify Lizzie Spaulding's parent
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/familyName> ?parent .

  # Step 5: Find the child of Lizzie Spaulding's parent who is a fictional character and soap character
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
    ?child <http://dbpedia.org/ontology/soapCharacter> [] .
    ?parent <http://dbpedia.org/ontology/child> ?child .
  }

  # Step 6: Identify the father of this child
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/husband> ?parent .
  }
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"```sparql
SELECT ?awardee ?leaderOfOffice ?commander WHERE {
  # Awardee of Order of Suvorov
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/honoraryTitle> ""Order of Suvorov"" .
    BIND(?person AS ?awardee)
  }

  # Leader of the Office (Government Agency) of a Leader (Office Holder and Politician) of Gustav Jonson
  OPTIONAL {
    ?gustav <http://dbpedia.org/ontology/leader> ?leader .
    FILTER((?leader <http://dbpedia.org/ontology/politician) && (?leader <http://dbpedia.org/ontology/officeHolder)) 
    ?leader <http://dbpedia.org/ontology/headOfStateOrGovernment> ?office .
    FILTER(?office <http://dbpedia.org/ontology/governmentAgency)
    BIND(?office AS ?leaderOfOffice)
  }

  # Commander in the Force of the Person Decedent at Budapest
  OPTIONAL {
    ?decedent <http://dbpedia.org/property/deathPlace> ""Budapest"" .
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?decedent <http://dbpedia.org/ontology/memberOf> ?force)
    BIND(?commander AS ?commander)
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
SELECT ?birthPlace ?occupation WHERE {
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  OPTIONAL { 
    <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://purl.org/dc/terms/subject> ?occupation .
  }
}
```",3,3,4,2,2,2,2,9,0,21,1,0.0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?burtonRestingPlace ?actorRestingPlace ?knightRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .
  }
  
  OPTIONAL {
    ?show dbo:starring ?actor .
    ?actor foaf:name ""Emily Richard""@en .
    ?actor dbo:deathPlace ?actorDeathPlace .
    ?actorDeathPlace rdfs:label ?actorRestingPlace .
    FILTER (lang(?actorRestingPlace) = 'en')
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> ;
            dbo:honoraryTitle ""Knight Grand Cross of the Order of St Michael and St George"" .
    ?person dbo:deathPlace ?knightDeathPlace .
    ?knightDeathPlace rdfs:label ?knightRestingPlace .
    FILTER (lang(?knightRestingPlace) = 'en')
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find Antiochus II Theos' successor who is royalty
  ?antiochus2 <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this successor who is royalty
  ?successor <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the commander in Battle of Panium and their parent
  ?commander <http://dbpedia.org/property/commandedInBattle> <http://dbpedia.org/resource/Battle_of_Panium> .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/parent> ?commander .

  # Step 4: Find the spouse of this child
  ?royalChild <http://dbpedia.org/property/spouse> ?spouse .
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?bandShena ?personSameBirthDate ?bandPerson WHERE {
  OPTIONAL {
    # Find the band of the person born as Shèna
    ?shena <http://dbpedia.org/ontology/birthName> ""Shèna"" .
    ?shena <http://dbpedia.org/ontology/memberOf> ?bandShena .
  }
  
  OPTIONAL {
    # Find the birth date of Pavlo Khudzik
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDatePavlo .

    # Find other persons born on the same date as Pavlo Khudzik
    ?personSameBirthDate <http://dbpedia.org/ontology/birthDate> ?birthDatePavlo .
    
    # Retrieve the band of that person
    ?personSameBirthDate <http://dbpedia.org/ontology/memberOf> ?bandPerson .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?awardeeAlmaMater ?alumnusAlmaMater WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/property/nationalOrderOfScientificMerit> ?award .
    ?person <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/National_University_of_San_Marcos> .
    ?alumnus <http://dbpedia.org/ontology/almaMater> ?alumnusAlmaMater .
  }
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
# Step 1: Find the awardee of Lac d'Avoriaz elevation
SELECT ?awardee WHERE {
  ?event <http://dbpedia.org/ontology/award> ?lacDavoriaz .
  ?lacDavoriaz <http://dbpedia.org/property/recipient> ?awardee .
}

# Step 2: Determine the force of the awardee
SELECT ?force WHERE {
  ?awardee <http://dbpedia.org/ontology/memberOf> ?force .
}

# Step 3: Find a native of Palestine (region)
SELECT ?native WHERE {
  ?native <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Palestine_(region)> .
}

# Step 4: Identify the award associated with the native
SELECT ?award WHERE {
  ?native <http://dbpedia.org/ontology/awardsReceived> ?award .
}

# Step 5: Determine the entity in that award
SELECT ?entity WHERE {
  ?award <http://dbpedia.org/property/entity> ?entity .
}
```",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
SELECT ?professional ?child WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/ontology/receivesAward> ?award .
    ?award <http://dbpedia.org/property/profession> ?professional .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Jason_Schwartzman> <http://www.w3.org/ns/org#parentOrganization> ?parent .
    ?parent <http://www.w3.org/ns/org#member> ?child .
  }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?parentOfChild ?spouseOfFather WHERE {
  # Step 1: Find a child of Nefertari
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari>.

  # Step 2: Find the parent of that child
  ?child <http://www.w3.org/2004/02/skos/core#broader> ?parentOfChild.

  # Step 3: Identify the father of Merneptah
  ?merneptah <http://dbpedia.org/ontology/father> ?fatherOfMerneptah.
  
  # Ensure we are referring to the correct Merneptah
  FILTER(?merneptah = <http://dbpedia.org/resource/Merenptah>)

  # Step 4: Find the spouse of this father
  ?fatherOfMerneptah <http://dbpedia.org/ontology/spouse> ?spouseOfFather.
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
SELECT DISTINCT ?settlement WHERE {
  # Step 1: Find the writer of ""Where It's At"" (Dustin Lynch album)
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  FILTER(STRSTARTS(STR(?album), STR(<http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)>)))

  # Step 2: Find the administration associated with the writer
  OPTIONAL { 
    ?administration <http://dbpedia.org/ontology/administration> ?writer .
  }

  # Step 3: Find the alma mater of George K. Nash
  ?nash <http://dbpedia.org/ontology/almaMater> ?almaMater .

  FILTER(STRSTARTS(STR(?nash), STR(<http://dbpedia.org/resource/George_K._Nash>)))

  # Step 4: Find the administration associated with this alma mater
  OPTIONAL {
    ?administration2 <http://dbpedia.org/ontology/administration> ?almaMater .
  }

  # Step 5: Find an entity in the administration that is a settlement
  OPTIONAL {
    ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlement108069068> .
    FILTER(?administration = ?administration2)
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"```sparql
SELECT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  OPTIONAL {
    # Find the show with Emily Richard
    ?show <http://dbpedia.org/ontology/cast> ?castMember .
    ?castMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> ;
                <http://dbpedia.org/ontology/name> ""Emily Richard"" .
    
    # Find the resting place of actors in that show
    ?actor <http://dbpedia.org/ontology/cast> ?show .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
  
  OPTIONAL {
    # Find the award associated with Gerald Graham
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> ;
             <http://dbpedia.org/ontology/name> ""Gerald Graham"" .
    
    # Find the resting place of the awardees
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child rdf:type dbo:Royalty ;
         dbo:officeHolder true ;
         dbo:parent <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .

  # Predecessor of this child
  ?predecessor dbo:successor ?child .

  # Thado Minsaw of Prome's parent
  ?thadoMinsawParent dbo:child <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

  # Child of Thado Minsaw's parent
  ?parentChild dbo:parent ?thadoMinsawParent .

  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:parent <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .

  # Ensure the parent from Thado Minsaw matches the child from Thinkhaya
  FILTER (?parentChild = ?child)

}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT DISTINCT ?bandMember ?associatedArtist ?meshuggahBand WHERE {
  # Step 1: Find band members of Don Dokken
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/associatedBandMember> ?bandMember .

  # Step 2: For each band member, find associated musical artists
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .

  # Step 3: Identify bands that are groups and organizations of Meshuggah
  ?meshuggahBand <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Meshuggah> .
  ?meshuggahBand a <http://dbpedia.org/class/yago/Band115069769> ; # Band class
                 a <http://dbpedia.org/class/yago/Group115070000> ; # Group class
                 a <http://dbpedia.org/class/yago/Organisation115071000> . # Organization class

  # Step 4: Combine results
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?actor ?child ?residence WHERE {
  # Actor of ""Dog Soldiers"" (film)
  OPTIONAL { 
    <http://dbpedia.org/resource/Dog_Soldiers> <http://dbpedia.org/ontology/starring> ?actor .
  }

  # Child of John Devon Roland Pertwee
  OPTIONAL {
    <http://dbpedia.org/resource/John_Pertwee> <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/John_Devon_Roland_Pertwee> .
    <http://dbpedia.org/resource/John_Devon_Roland_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  }

  # Native residence of a politician and office holder from France
  OPTIONAL {
    ?politician <http://www.w3.org/2002/07/owl#sameAs> ?officeHolder .
    ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
    ?officeHolder <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2006/vcard/ns#country-name> <http://dbpedia.org/resource/United_Kingdom> .
    ?residence a <http://dbpedia.org/class/yago/Settlements100000001> .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
SELECT ?actorRestingPlace ?childRestingPlace WHERE {
  OPTIONAL {
    # Finding an actor from a show with Emily Richard
    ?show dbo:starring <http://dbpedia.org/resource/Portia_de_Rossi> .
    ?show dbo:starring ?actor .
    ?actor dbo:deathPlace ?actorDeathPlace .
    ?actorDeathPlace rdfs:label ?actorRestingPlace .
  }
  
  OPTIONAL {
    # Finding a child of James Burton (property developer)
    <http://dbpedia.org/resource/James_Burton_(property_developer)> dbo:child ?child .
    ?child dbo:deathPlace ?childDeathPlace .
    ?childDeathPlace rdfs:label ?childRestingPlace .
  }
}
```",5,5,6,3,2,3,3,71,0,6,1,0.0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?partyName ?fatherParty ?prodiParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://purl.org/dc/terms/description> ?partyName .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/family_name> ?fatherName .
    ?person <http://xmlns.com/foaf/0.1/name> ?fatherName .
    ?person <http://dbpedia.org/ontology/memberOf> ?party .
    BIND(STR(?party) AS ?fatherParty)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://xmlns.com/foaf/0.1/givenName> ""Romano"" ;
        <http://dbpedia.org/ontology/memberOf> ?prodiParty .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret <http://dbpedia.org/ontology/birthDate> ?birth .
  FILTER (YEAR(?birth) = 1925 && STRSTARTS(STR(?margaret), ""http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)""))
  
  # Step 2: Find her parent
  ?parent1 <http://dbpedia.org/ontology/child> ?margaret .
  
  # Step 3: Find the child of that parent (could be Margaret or others)
  ?parent1 <http://dbpedia.org/ontology/child> ?childOfParent1 .

  # Step 4: Identify Archduke Joseph Karl of Austria
  ?josephKarl <http://www.w3.org/2000/01/rdf-schema#label> ""Archduke Joseph Karl of Austria"" .
  
  # Step 5: Find his child
  ?parent2 <http://dbpedia.org/ontology/child> ?josephKarl .

  # Step 6: Find the child of that child
  ?parent2 <http://dbpedia.org/ontology/child> ?childOfChild .

  # Step 7: Determine the parent of this final child
  ?finalParent <http://dbpedia.org/ontology/child> ?childOfChild .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
SELECT ?restingPlaceKnight ?restingPlaceActor WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_Kingdom> .
    ?person <http://dbpedia.org/property/honours> ?honour .
    ?honour <http://www.w3.org/2004/02/skos/core#prefLabel> ""Knight Grand Cross of the Order of St Michael and St George""@en .
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlaceKnight .
  }
  
  OPTIONAL {
    ?show <http://dbpedia.org/ontology/starring> ?actor .
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlaceActor .
  }
}
```",5,5,6,3,2,3,3,71,1,8,1,0.1111111111111111,0.5,0.1818181818181818
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war1 ?war2 ?force WHERE {
  # Part 1: War of the commander in a work associated with --01-09
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/date> ?date .
    FILTER (STRSTARTS(STR(?date), ""19--01-09""))
    ?work <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war1 .
  }

  # Part 2: War of the military force in a societal event in Chile
  OPTIONAL {
    ?event <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER (CONTAINS(LCASE(?label), ""chile""))
    ?event <http://dbpedia.org/ontology/societalEvent> ?societalEvent .
    ?societalEvent <http://dbpedia.org/property/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war2 .
  }

  # Part 3: Force of Narciso Campero
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
  }
}
```",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?force1 ?warCommander ?warIrene WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://www.w3.org/2006/vcard/ns#hasName> ""Narciso Campero"" .
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryService> ?service .
    ?service <http://dbpedia.org/property/force> ?force1 .
  }
  
  OPTIONAL {
    ?work <http://purl.org/dc/terms/date> ""-01-09"" .
    ?work <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?warCommander .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?warIrene .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Query 1: Associated Musical Artist of S.A. Slayer
SELECT ?associatedArtist WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}

# Query 2: Associated Musical Artists of Band Members of Meshuggah
SELECT DISTINCT ?member ?associatedArtist WHERE {
  # Identify band members of Meshuggah
  ?meshuggahMember <http://dbpedia.org/ontology/member> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    ?type = <http://dbpedia.org/class/yago/MusicalArtist100000001> ||
    ?type = <http://dbpedia.org/class/yago/BandMember100000001>
  )
  
  # Ensure Meshuggah is a band, group, and organization
  ?meshuggah <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?meshType .
  FILTER (
    ?meshType = <http://dbpedia.org/class/yago/MusicalGroup100000001> ||
    ?meshType = <http://dbpedia.org/class/yago/Band100000001> ||
    ?meshType = <http://dbpedia.org/ontology/Organisation>
  )
  
  # Retrieve associated musical artists for each member
  ?bandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?conflict ?awardee WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commanderInBattle> ?command .
    ?command <http://www.w3.org/2002/07/owl#sameAs> ?conflict .
  }
  
  OPTIONAL {
    ?battle <http://dbpedia.org/property/battleOfBorodino> true .
    ?award <http://dbpedia.org/ontology/awardee> ?awardee .
    ?battle <http://dbpedia.org/ontology/relatedAward> ?award .
  }
}
```",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  # Birthplace region of Joseph Whitaker (Naturalist)
  OPTIONAL { 
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2006/vcard/ns#region> ?region .
  }

  # Birthplace of the awardee (writer and poet) of Eric Gregory Award
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/birthPlace> ?awardeeBirthPlace .
    ?awardee <http://www.w3.org/2002/07/owl#sameAs> ?awardRecipient .
    ?awardRecipient <http://dbpedia.org/property/category> ""Eric Gregory Award"" .
    ?awardee <http://purl.org/dc/terms/type> ?type .
    FILTER (?type = <http://dbpedia.org/resource/Category:English_writers>)
    FILTER (?type = <http://dbpedia.org/resource/Category:Poets>)
  }

  # Country in the region of Western European Time
  OPTIONAL {
    ?region <http://www.w3.org/2006/vcard/ns#country> ?country .
    ?timeZone <http://dbpedia.org/ontology/timeZone> ""Western European Time"" .
    ?timeZone <http://www.w3.org/2006/vcard/ns#region> ?region .
  }

  # Find the entity that matches all conditions
  FILTER (?birthPlace = ?awardeeBirthPlace)
  FILTER (?region = ?region2) # Ensure same region for both conditions

  BIND(?country AS ?entity)
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?nevermoreBandMember ?jimSheppardArtist ?furneyBand WHERE {
  OPTIONAL {
    # Find the artist associated with Nevermore (2006 film)
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?reference .
    ?reference <http://dbpedia.org/ontology/artist> ?nevermoreBandMember .
  }
  
  OPTIONAL {
    # Find the associated musical artist of Jim Sheppard
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/associatedMusicalArtist> ?jimSheppardArtist .
  }

  OPTIONAL {
    # Find the band of Joseph Michael Furney (born)
    <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://www.w3.org/2006/vcard/ns#hasBirthName> ""Joseph Michael Furney"" .
    ?furneyBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Joseph_Michael_Furney> .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT DISTINCT ?finalCommander WHERE {
  # Step 1: Find the commander for Battle of Paris (1814)
  ?battleParis <http://dbpedia.org/ontology/commander> ?commanderParis .

  FILTER(?battleParis = <http://dbpedia.org/resource/Battle_of_Paris_(1814)>)

  # Step 2: Find other conflicts commanded by this person
  ?otherBattle <http://dbpedia.org/ontology/commander> ?commanderParis .
  
  # Step 3: Identify awardees of the military force in Battle of Borodino
  ?battleBorodino <http://dbpedia.org/property/militaryForce> ?militaryForce .
  ?awardee <http://dbpedia.org/ontology/receivedAwardFrom> ?militaryForce .

  FILTER(?battleBorodino = <http://dbpedia.org/resource/Battle_of_Borodino>)

  # Step 4: Find commanders associated with these awardees
  ?finalBattle <http://dbpedia.org/ontology/commander> ?awardee .
  
  # Ensure the final commander is not the same as the initial one from Battle of Paris (1814)
  FILTER(?finalBattle != ?battleParis && ?commanderParis != ?finalCommander)

  BIND(?finalBattle AS ?finalCommander)
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?writer ?settlement ?alterEgo ?reference WHERE {
  # Step 1: Identify the writer of ""Where It's At"" (Dustin Lynch album)
  OPTIONAL { 
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
  }

  # Step 2: Find an entity in the administration, which is a settlement
  OPTIONAL {
    ?settlement <http://www.w3.org/2004/02/skos/core#broaderTransitive> ?administrationEntity .
    ?settlement a <http://dbpedia.org/class/yago/Settlements100000>.
    ?writer <http://dbpedia.org/ontology/administrativePost> ?administrationEntity .
  }

  # Step 3: Identify the alter ego of Black Hood and its reference
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?alterEgo <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  }
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?child a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find Thado Minsaw of Prome's parent
  ?thadoMinsawParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .

  # Step 3: Identify Soe Min Wimala Dewi's father
  ?soeMinWimalaFather <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
  
  # Step 4: Determine the common child from steps 1 and 3
  FILTER (?child = ?thadoMinsawParent && ?child = ?soeMinWimalaFather)

  # Step 5: Find the predecessor of this common child
  ?commonChild <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"```sparql
SELECT ?bandShena ?bandPavloBirthDate ?bandSongWriter WHERE {
  # Band of the person born as Shèna
  OPTIONAL {
    ?shena <http://dbpedia.org/ontology/birthName> ""Shèna"" .
    ?shena <http://dbpedia.org/property/associatedMusicalArtist> ?bandShena .
  }

  # Band of the person born on Pavlo Khudzik's birth date
  OPTIONAL {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?pavloBirthDate .
    ?person <http://dbpedia.org/ontology/birthDate> ?pavloBirthDate .
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?bandPavloBirthDate .
  }

  # Band of the writer of the song ""Amba Shepherd""
  OPTIONAL {
    ?song <http://dbpedia.org/ontology/workExample> <http://dbpedia.org/resource/Amba_Shepherd> ;
          <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?bandSongWriter .
  }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
SELECT ?producer WHERE {
  # Step 1: Identify the writer of ""40 Dayz & 40 Nightz""
  ?work <http://dbpedia.org/ontology/writer> ?writer .
  
  FILTER (str(?work) = ""40_Dayz_%26_40_Nightz"")

  # Step 2: Find associated musical artist
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .

  # Step 3: Check if the artist is a rapper and a musical artist
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?artist <http://dbpedia.org/ontology/profession> ?profession .

  FILTER (CONTAINS(LCASE(str(?profession)), ""rapper""))

  # Step 4: Determine the producer of the work
  ?work <http://dbpedia.org/property/producer> ?producer .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war1 ?war2 WHERE {
  # Assuming --01-09 is an entity in DBpedia with a commander property
  OPTIONAL { 
    <http://dbpedia.org/resource/--01-09> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war1 .
  }
  
  # Battle of Pisagua and its military force
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/property/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war2 .
  }
}
```",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find successor of Antiochus II Theos
  ?antiochus2 <http://dbpedia.org/ontology/successor> ?successorAntiochus2 .
  FILTER(?successorAntiochus2 <http://www.w3.org/2000/01/rdf-schema#subClassOf>* <http://dbpedia.org/ontology/Royalty>) .

  # Step 2: Find child of successor from step 1
  ?successorAntiochus2 <http://dbpedia.org/ontology/child> ?childSuccessorAntiochus2 .
  FILTER(?childSuccessorAntiochus2 <http://www.w3.org/2000/01/rdf-schema#subClassOf>* <http://dbpedia.org/ontology/Royalty>) .

  # Step 3: Find successor of Antiochus (son of Antiochus III the Great)
  ?antiochusIII <http://dbpedia.org/ontology/successor> ?successorAntiochusIII .
  FILTER(?successorAntiochusIII <http://www.w3.org/2000/01/rdf-schema#subClassOf>* <http://dbpedia.org/ontology/Royalty>) .

  # Step 4: Find child of successor from step 3
  ?successorAntiochusIII <http://dbpedia.org/ontology/child> ?childSuccessorAntiochusIII .
  FILTER(?childSuccessorAntiochusIII <http://www.w3.org/2000/01/rdf-schema#subClassOf>* <http://dbpedia.org/ontology/Royalty>) .

  # Step 5: Find spouse of the child from step 2
  ?childSuccessorAntiochus2 <http://dbpedia.org/property/spouse> ?spouse .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","```sparql
SELECT ?militaryForce ?commanderInForce ?warEvent WHERE {
  # Find military force in Napoleonic Wars
  ?event <http://dbpedia.org/ontology/event> ?militaryConflict .
  ?militaryConflict <http://www.w3.org/2004/02/skos/core#prefLabel> ""Napoleonic Wars"" .
  
  OPTIONAL {
    # Find Arthur Wellesley's command in the force
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commanderInForce> ?commanderInForce .
    ?commanderInForce <http://www.w3.org/2004/02/skos/core#broader> ?militaryForce .
  }
  
  OPTIONAL {
    # Find the event associated with 'Polish Horse'
    ?polishHorse <http://dbpedia.org/ontology/event> ?warEvent .
    ?polishHorse <http://www.w3.org/2004/02/skos/core#prefLabel> ""Polish Horse"" .
  }
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Writer of ""Where It's At"" (Dustin Lynch album)
  OPTIONAL {
    <http://dbpedia.org/resource/Dustin_Lynch> <http://dbpedia.org/ontology/writer> ?writer .
    ?writer <http://dbpedia.org/property/administration> ?admin1 .
    ?admin1 <http://www.w3.org/2006/vcard/ns#hasAddress> ?address1 .
    ?address1 <http://purl.org/dc/terms/description> ?entity .
    FILTER(?entity <http://dbpedia.org/ontology/Settlement>)
  }

  # Alma mater of Carl L. Nippert
  OPTIONAL {
    <http://dbpedia.org/resource/C._L._Nippert> <http://dbpedia.org/ontology/almaMater> ?alma .
    ?alma <http://dbpedia.org/property/administration> ?admin2 .
    ?admin2 <http://www.w3.org/2006/vcard/ns#hasAddress> ?address2 .
    ?address2 <http://purl.org/dc/terms/description> ?entity .
    FILTER(?entity <http://dbpedia.org/ontology/Settlement>)
  }

  # Alter ego of Black Hood
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?alterEgo .
    ?alterEgo <http://dbpedia.org/property/administration> ?admin3 .
    ?admin3 <http://www.w3.org/2006/vcard/ns#hasAddress> ?address3 .
    ?address3 <http://purl.org/dc/terms/description> ?entity .
    FILTER(?entity <http://dbpedia.org/ontology/Settlement>)
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
SELECT ?work ?region WHERE {
  OPTIONAL {
    # Find works by the author of ""Iceland""
    <http://dbpedia.org/resource/Iceland_(book)> <http://purl.org/dc/terms/creator> ?author .
    ?author <http://purl.org/dc/terms/created> ?work .
  }
  
  OPTIONAL {
    # Find region of time zone in Bombali Shebora Chiefdom
    <http://dbpedia.org/resource/Bombali_Shehroba_County> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/timeZoneRegion> ?region .
  }
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander WHERE {
  OPTIONAL {
    ?officeHolder <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
    ?officeHolder <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  }
  
  OPTIONAL {
    ?officeHolder <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }

  OPTIONAL {
    ?event <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/SocietalEvent> , <http://dbpedia.org/ontology/MilitaryConflict>) .
  }

  OPTIONAL {
    ?battle <http://dbpedia.org/ontology/commander> ?commander ;
            <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Battle> ;
            <http://dbpedia.org/ontology/name> ""Battle of Leipzig"" .
  }

  FILTER(?militaryForce = ?event)
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?native WHERE {
  # Step 1: Find the manager of the 1998 Kashima Antlers season
  ?season <http://dbpedia.org/ontology/team> ?team .
  FILTER (str(?season) = ""Kashima_Antlers_season_1998"")
  
  ?season <http://dbpedia.org/property/manager> ?manager .

  # Step 2: Find the team managed by this manager
  ?manager <http://dbpedia.org/ontology/teamManaged> ?teamManaged .
  
  # Step 3: Locate the person born in 1958 who was a manager of that team
  ?person <http://dbpedia.org/property/birthYear> ""1958""^^xsd:gYear .
  ?person <http://dbpedia.org/ontology/teamManaged> ?teamManaged .

  # Step 4: Determine the alma mater of this individual
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  FILTER (
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    CONTAINS(LCASE(?label), ""japan"") &&
    ?almaMater <http://dbpedia.org/ontology/type> ?type .
    (CONTAINS(LCASE(STR(?type)), ""university"") ||
     CONTAINS(LCASE(STR(?type)), ""organization"") ||
     CONTAINS(LCASE(STR(?type)), ""educational institution""))
  )

  # Step 5: Identify a native of Japan who is a member of this alma mater
  ?native <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?native <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
# Step 1: Find Archduchess Margaret of Austria (born 1925)
SELECT ?margaret WHERE {
  ?margaret <http://dbpedia.org/ontology/birthDate> ""1925-01-01""^^xsd:date .
  ?margaret <http://www.w3.org/2000/01/rdf-schema#label> ""Archduchess Margaret of Austria""@en .
}

# Step 2: Find the parent of Archduchess Margaret
SELECT ?parentMargaret WHERE {
  ?margaret <http://dbpedia.org/ontology/parent> ?parentMargaret .
}

# Step 3: Find the child of this parent
SELECT ?childOfParentMargaret WHERE {
  ?parentMargaret <http://dbpedia.org/ontology/child> ?childOfParentMargaret .
}

# Step 4: Identify native of Budapest and child of Archduke Joseph Karl
SELECT ?budaChild WHERE {
  ?josephKarl <http://dbpedia.org/ontology/child> ?budaChild .
  ?budaChild <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
}

# Step 5: Find the parent of this native of Budapest
SELECT ?parentBudaChild WHERE {
  ?budaChild <http://dbpedia.org/ontology/parent> ?parentBudaChild .
}

# Step 6: Find the common ancestor or link their lineage
SELECT DISTINCT ?commonParent WHERE {
  OPTIONAL { ?childOfParentMargaret <http://dbpedia.org/ontology/parent> ?commonParent . }
  OPTIONAL { ?parentBudaChild <http://dbpedia.org/ontology/parent> ?commonParent . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?filmArtist ?jimSheppardBand ?josephMichaelBand WHERE {
  OPTIONAL {
    # Find artist associated with Nevermore (2006 film)
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://dbpedia.org/ontology/reference> ?reference .
    ?reference <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?reference <http://dbpedia.org/property/bandMember> ?filmArtist .
  }
  
  OPTIONAL {
    # Find associated musical artist of Jim Sheppard
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedBand> ?jimSheppardBand .
  }

  OPTIONAL {
    # Find band of Joseph Michael
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/property/bandMember> ?josephMichaelBand .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?manager ?teamManager ?almaMaterMember WHERE {
  # Step 1: Manager of 1998 Kashima Antlers Season
  ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Kashima_Antlers> .
  ?season <http://dbpedia.org/property/year> ""1998""^^xsd:gYear .
  ?season <http://dbpedia.org/ontology/coach> ?manager .

  # Step 2: Team Managed by This Manager
  ?team <http://dbpedia.org/ontology/currentManager> ?manager .
  
  # Step 3: Current Manager of That Team
  ?team <http://dbpedia.org/ontology/currentManager> ?teamManager .

  # Step 4: Alma Mater of Eiji Ōtsuka
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  FILTER(?almaMater <http://www.w3.org/2002/07/owl#sameAs> ?japaneseUniversity) .

  # Step 5: Member of This Alma Mater
  ?member <http://dbpedia.org/ontology/alumniOf> ?almaMater .
  
  # Step 6: Residence of Yōichi Masuzoe
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/nationality> ?country .

  # Optional: Check if teamManager is native to the country (Step 7)
  OPTIONAL {
    ?teamManager <http://dbpedia.org/ontology/nationality> ?country .
  }
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?party WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Romano Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> ;
          <http://dbpedia.org/ontology/OfficeHolder> .
  ?person <http://dbpedia.org/property/party> ?party .
}
```",3,5,4,3,1,3,3,71,0,0,7,0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?decedentAlgiers ?decedentFrenchAlgeria ?commanderVerdun WHERE {
  # Person who died in Algiers, capital of Algeria
  OPTIONAL {
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  }
  
  # Person who died in French Algeria
  OPTIONAL {
    ?decedentFrenchAlgeria <http://dbpedia.org/ontology/deathPlace> ?place .
    ?place <http://www.w3.org/2000/01/rdf-schema#label> ""French Algeria"" .
  }
  
  # Commander in the Battle of Verdun and World War I
  OPTIONAL {
    ?battle <http://dbpedia.org/property/commander> ?commanderVerdun .
    ?battle <http://www.w3.org/2000/01/rdf-schema#label> ""Battle of Verdun"" .
    
    ?war <http://dbpedia.org/ontology/participant> ?commanderVerdun .
    ?war <http://www.w3.org/2000/01/rdf-schema#label> ""World War I"" .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Richeza_of_Poland> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?child .
    ?child = ?father .
  }
  OPTIONAL {
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> ?parent .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?parent WHERE {
  # Step 1: Narapati I of Ava's child
  ?narapatiChild <http://dbpedia.org/ontology/child> ?narapatiI .
  FILTER(?narapatiI = <http://dbpedia.org/resource/Narapati_I_of_Ava>) .

  # Step 2: Thinkhaya of Pagan's child and predecessor
  ?thinkhayasChild <http://dbpedia.org/ontology/child> ?thinkhaya .
  FILTER(?thinkhaya = <http://dbpedia.org/resource/Thinkhaya_of_Pagan>) .
  
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?thinkhayasChild .

  # Step 3: Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapatesChild <http://dbpedia.org/ontology/child> ?thihapate .
  FILTER(?thihapate = <http://dbpedia.org/resource/Thihapate_of_Mohnyin>) .

  ?thihapatesChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?thihapatesChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 4: Find the parent of Thihapate's child
  ?parent <http://dbpedia.org/ontology/child> ?thihapatesChild .
  
  # Combine to find the parent of Narapati I's child and Thihapate's child
  OPTIONAL { 
    ?narapatiParent <http://dbpedia.org/ontology/child> ?narapatiChild .
    FILTER(?parent = ?narapatiParent)
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandAmbaShepherd ?bandTraceyMcSween ?personBirthDateBand WHERE {
  # Band of Amba Shepherd
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandAmbaShepherd .
  }

  # Band of Tracey Elizabeth McSween
  OPTIONAL {
    ?traceyMcSween a dbo:Person ;
                   foaf:name ""Tracey Elizabeth McSween""@en ;
                   dbp:birthday ?birthDateTracey .
    ?traceyMcSween <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandTraceyMcSween .
  }

  # Person born on the birth date of a decedent athlete and soccer player from Zolotonosha
  OPTIONAL {
    ?athlete a dbo:Athlete ;
             dbo:sport dbr:Soccer ;
             dbp:birthPlace <http://dbpedia.org/resource/Zolotonosha> ;
             dbo:deathDate ?deathDate .
    ?athlete dbo:birthday ?birthDateAthlete .

    ?personBirthDate a dbo:Person ;
                     dbo:birthday ?birthDateAthlete .
    ?personBirthDate <http://dbpedia.org/ontology/associatedMusicalArtist> ?personBirthDateBand .
  }
}
```",6,8,7,3,3,3,3,71,1,12,0,0.07692307692307693,1.0,0.14285714285714288
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
SELECT ?profession ?spouse WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?occupation .
    ?occupation <http://www.w3.org/2004/02/skos/core#prefLabel> ?profession .
  }
  
  OPTIONAL {
    {
      <http://dbpedia.org/resource/Ted_Martin_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
    }
    {
      <http://dbpedia.org/resource/Georgeanne_Marie_Rice> <http://dbpedia.org/ontology/spouse> ?spouse .
    }
  }
}
```",5,5,6,2,3,3,3,71,0,9,1,0.0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernst_Augustus_of_Hanover> .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
SELECT ?associatedArtist WHERE {
  # Step 1: Find Jim Sheppard's associated musical artist
  ?sheppard a dbo:Person ;
            foaf:name ""Jim Sheppard"" ;
            dbo:associatedMusicalArtist ?artist .

  # Step 2: Identify Nevermore's band members
  ?nevermore a dbo:Band ;
             foaf:name ""Nevermore"" .
  ?member dbo:bandMember ?nevermore .

  # Step 3: Find Joseph Michael Furney's associated musical artist or band
  ?furney a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" ;
          dbo:associatedMusicalArtist ?artist2 .

  # Combine the results to find common associated artists
  FILTER (?artist = ?artist2)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?birthPlaceSaito ?deathPlaceYukiFather ?administrationGoYozei WHERE {
  OPTIONAL {
    # Find the military conflict where Saitō Hajime was a commander
    ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
    
    # Get Saitō Hajime's birthplace
    <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceSaito .
  }
  
  OPTIONAL {
    # Identify Yūki Hideyasu's father and his death place
    <http://dbpedia.org/resource/Y%C5%ABki_Hideyasu> <http://dbpedia.org/ontology/father> ?yukiFather .
    
    # Ensure the father is a politician
    ?yukiFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    
    # Get the death place of Yūki Hideyasu's father
    ?yukiFather <http://dbpedia.org/ontology/deathPlace> ?deathPlaceYukiFather .
  }
  
  OPTIONAL {
    # Retrieve administration details for Emperor Go-Yōzei
    <http://dbpedia.org/resource/Emperor_Go-Y%C5%8Dzei> <http://dbpedia.org/property/administration> ?administrationGoYozei .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"```sparql
SELECT ?nativePlace WHERE {
  # Step 1: Find Yōichi Masuzoe's residence country
  ?yoshi <http://dbpedia.org/ontology/residence> ?residence .
  
  # Ensure the residence is a country
  ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
  FILTER (CONTAINS(LCASE(?countryLabel), ""country""))

  # Step 2: Find natives of this country
  ?person <http://dbpedia.org/ontology/nationality> ?residence ;
          <http://dbpedia.org/ontology/nativePlace> ?nativePlace .

  # Step 3: Identify the manager of the 1998 Kashima Antlers season
  ?season <http://dbpedia.org/property/teamManager> ?manager .
  
  # Ensure the manager is a sports manager
  ?manager <http://www.w3.org/2000/01/rdf-schema#label> ?managerLabel .
  FILTER (CONTAINS(LCASE(?managerLabel), ""sports manager""))

  # Step 4: Find the team managed by this manager
  ?team <http://dbpedia.org/ontology/teamManager> ?manager .

  # Step 5: Determine the manager of that team
  ?team2 <http://dbpedia.org/property/teamManager> ?finalManager .
  
  FILTER (?yoshi = <http://dbpedia.org/resource/Yōichi_Masuzoe>)
  FILTER (?season = <http://dbpedia.org/resource/1998_Kashima_Antlers_season>)
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great) and his child
  ?antiochus <http://dbpedia.org/ontology/birthName> ""Antiochus"" .
  ?antiochus <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child <http://dbpedia.org/ontology/parent> ?antiochus .

  # Step 2: Find the parent of this child (Antiochus)
  ?parent <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Identify a royalty who is a child of Seleucus II Callinicus
  ?royalty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalty <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .

  # Step 4: Determine the successor of Antiochus and find their child
  ?successor <http://dbpedia.org/property/successor> ?antiochus .
  ?childOfSuccessor <http://dbpedia.org/ontology/parent> ?successor .
  
  # Step 5: Find the spouse of this child (must be royalty)
  ?spouse <http://dbpedia.org/ontology/spouse> ?childOfSuccessor .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Ensure all conditions are met
  FILTER (?parent = ?antiochus)
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?almaMater ?alterEgo WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/property/fictionalCharacter> ?character .
    ?character <http://dbpedia.org/ontology/alterEgo> ?alterEgo .
    FILTER(?character <http://www.w3.org/2002/07/owl#Thing>) # Ensures it's a fictional character
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?finalChild WHERE {
  # Step 1: Find the child of Boleslaus I who is royalty
  ?boleslausChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> .
  ?boleslausChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the parent of Richeza's father who is royalty
  ?richezasFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> .
  ?parentOfRichezasFather <http://dbpedia.org/ontology/child> ?richezasFather .
  ?parentOfRichezasFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Find the child of the royal child of Boleslaus I that matches with any parent from step 2
  ?finalChild <http://dbpedia.org/ontology/child> ?boleslausChild .
  FILTER (?finalChild = ?parentOfRichezasFather)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?tedSpouse ?gigiSpouse WHERE {
  OPTIONAL {
    ?ted <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
    ?ted <http://dbpedia.org/property/spouse> ?tedSpouse .
  }
  OPTIONAL {
    ?gigi <http://dbpedia.org/ontology/birthName> ""Gigi Rice"" .
    ?gigi <http://dbpedia.org/property/spouse> ?gigiSpouse .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"```sparql
SELECT ?manager ?almaMater ?nativeCountry WHERE {
  # Manager of Takashi Sekizuka's team
  OPTIONAL { 
    ?team <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    ?team <http://dbpedia.org/property/manager> ?manager .
  }

  # Alma mater of Eiji Ōtsuka
  OPTIONAL {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER (lang(?almaMater) = ""ja"")
    ?almaMater a <http://dbpedia.org/class/yago/JapaneseOrganizations100000001> ;
               a <http://dbpedia.org/class/yago/UniversitiesAndColleges1000000> ;
               a <http://dbpedia.org/class/yago/EducationalInstitutions10000000> .
  }

  # Native country of leader from 2010 Japanese House of Councillors election
  OPTIONAL {
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    FILTER (str(?election) = ""2010_Japanese_House_of_Councillors_election"")
    ?leader <http://dbpedia.org/property/nationality> ?nativeCountry .
  }

  # Combine results
  VALUES ?manager {
    ?manager
  }
  VALUES ?almaMater {
    ?almaMater
  }
  VALUES ?nativeCountry {
    ?nativeCountry
  }
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?greatSiegeCommanderFame ?peninsularWarReferenceCommanderFame WHERE {
  # Query for the commander's claim to fame in the Great Siege of Gibraltar
  OPTIONAL {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?greatSiegeCommander .
    ?greatSiegeCommander <http://dbpedia.org/property/claimToFame> ?greatSiegeCommanderFame .
  }
  
  # Query for a military conflict referencing the Peninsular War and its commander's claim to fame
  OPTIONAL {
    ?peninsularWarReference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Peninsular_War> .
    ?peninsularWarReference <http://dbpedia.org/ontology/commander> ?peninsularWarReferenceCommander .
    ?peninsularWarReferenceCommander <http://dbpedia.org/property/claimToFame> ?peninsularWarReferenceCommanderFame .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?germanCampaignCommander ?polishHorseWarCommander WHERE {
  
  # Step 1: Identify the 'Polish Horse'
  OPTIONAL { 
    ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
    ?polishHorse <http://dbpedia.org/ontology/militaryUnit> ?unit .
    ?polishHorse <http://dbpedia.org/ontology/organization> ?org .
  }
  
  # Step 2: Find the war associated with 'Polish Horse'
  OPTIONAL {
    ?war <http://dbpedia.org/property/involvesMilitaryUnit> ?polishHorse .
    ?war <http://www.w3.org/2000/01/rdf-schema#label> ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""war"")) # Ensure it's a military conflict
  }
  
  # Step 3: Determine Rutger Jan Schimmelpenninck's military force
  OPTIONAL {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?event <http://dbpedia.org/property/involvesMilitaryConflict> ?militaryForce .
    ?event <http://www.w3.org/2000/01/rdf-schema#label> ?eventLabel .
    FILTER(CONTAINS(LCASE(?eventLabel), ""societal event"") && CONTAINS(LCASE(?eventLabel), ""event"") && CONTAINS(LCASE(?eventLabel), ""military conflict""))
  }
  
  # Step 4: Find commanders
  OPTIONAL {
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?germanCampaignCommander .
  }
  
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/commander> ?polishHorseWarCommander .
  }
}
```",6,13,7,3,3,3,3,71,7,35892,0,0.00019499150394161396,1.0,0.0003899069793349301
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT DISTINCT ?settlement WHERE {
  # Step 1: Find the writer(s) of the album ""Where It's At""
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  
  FILTER(?album = <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)>)

  # Step 2: Find any administration entity related to the writer
  OPTIONAL {
    ?writer <http://dbpedia.org/property/administration> ?administration .
  }

  # Step 3: Identify settlements within that administration
  ?administration <http://dbpedia.org/ontology/settlement> ?settlement .

  # Ensure the settlement is indeed a type of settlement
  ?settlement <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000>.
}
```",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Find the capital city of Algeria
  <http://dbpedia.org/resource/Algeria> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?capital .

  # Find a person who died in the capital of Algeria
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER (?deathPlace = ?capital)

  # Find a commander in the Franco-Hova Wars
  OPTIONAL {
    ?person <http://dbpedia.org/property/commanderIn> <http://dbpedia.org/resource/Franco-Hova_Wars> .
  }

  # Ensure that the person is both a decedent at the capital and a commander
  FILTER EXISTS { ?person <http://dbpedia.org/property/commanderIn> <http://dbpedia.org/resource/Franco-Hova_Wars> }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace ?entity WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/politician> true .
    ?person <http://dbpedia.org/property/awards> ?award .
    FILTER(CONTAINS(LCASE(str(?award)), ""distinguished service medal (u.s. army)"")) .
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    FILTER(STRSTARTS(LCASE(str(?settlement)), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?settlement a <http://dbpedia.org/class/yago/Settlements1000000InEuropeYAGO> }).
    ?entity <http://www.w3.org/2004/02/skos/core#inScheme> ?settlement .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?mayorForce ?war WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Warsaw> .
    ?person <http://www.w3.org/2006/vcard/ns#organization-name> ?organisation .
    ?organisation <http://dbpedia.org/property/force> ?mayorForce .
  }
  
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
    ?award <http://dbpedia.org/ontology/name> ""Golden Weapon for Bravery"" .
    ?award <http://dbpedia.org/property/awardedFor> ?war .
  }
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Parent of a child of Archduke Joseph Francis of Austria
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
    ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
  }
  
  # Parent of Géza von Habsburg
  OPTIONAL {
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?partyCommander ?partyArias WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?event = <http://dbpedia.org/resource/United_States_invasion_of_Panama>)
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?commander <http://dbpedia.org/property/politicalParty> ?partyCommander .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/property/politicalParty> ?partyArias .
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?awardeeAlmaMater ?institutionNickname ?johnsAlmaMater WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
  
  OPTIONAL {
    ?institution <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?institution <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
    ?institution <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/EducationalInstitution108069068> .
    ?institution <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Organisation108069068> .
    ?institution <http://xmlns.com/foaf/0.1/knowsAs> ?institutionNickname .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?johnsAlmaMater .
  }
}
```",6,8,7,3,3,3,3,71,1,126,0,0.007874015748031496,1.0,0.015625
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
SELECT ?heatherWar ?jonathonWar WHERE {
  OPTIONAL {
    # Heather Roy's military unit profession and its war involvement
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?profession <http://www.w3.org/2002/07/owl#sameAs> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/property/war> ?heatherWar .
  }
  
  OPTIONAL {
    # Jonathon Band's award and the war involvement of its awardee
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/awardee> ?awardee .
    ?awardee <http://dbpedia.org/property/war> ?jonathonWar .
  }
}
```",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild <http://dbpedia.org/ontology/child> ?thihapate .
  FILTER(?thihapate = <http://dbpedia.org/resource/Thihapate_of_Mohnyin>) .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?thihapateChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find Thado Minsaw of Prome's parent and that parent's child
  ?thadoParent <http://dbpedia.org/ontology/child> ?thadoMinsaw .
  FILTER(?thadoMinsaw = <http://dbpedia.org/resource/Thado_Minsaw_of_Prome>) .
  ?thadoParentChild <http://dbpedia.org/ontology/parent> ?thadoParent .

  # Step 3: Find Thinkhaya of Pagan's father and that father's child
  ?thinkhayasFather <http://dbpedia.org/ontology/child> ?thinkhaya .
  FILTER(?thinkhaya = <http://dbpedia.org/resource/Thinkhaya_of_Pagan>) .
  ?fathersChild <http://dbpedia.org/ontology/father> ?thinkhayasFather .

  # Step 4: Find the predecessor of the entity from step 1
  ?thihapateChildPredecessor <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager WHERE {
  # Find Takashi Sekizuka's team
  ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  
  # Get the manager of that team
  ?team <http://dbpedia.org/ontology/coach> ?manager .

  # Find a person who is native to Japan and born in 1958
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Takashi Sekizuka""@en .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ""Japan""@en .

  # Check the birth year
  ?person <http://dbpedia.org/property/birthYear> ?birthYear .
  FILTER (?birthYear = 1958)

  # Find alma mater that is Japanese, an organization, a university, and an educational institution
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""japan""))
  ?almaMater <http://dbpedia.org/ontology/type> ?type1, ?type2, ?type3 .
  FILTER (?type1 = <http://dbpedia.org/class/yago/JapaneseOrganizations1000000010> &&
          ?type2 = <http://dbpedia.org/class/yago/JapanAndJaponicUnivAndColleges> &&
          ?type3 = <http://dbpedia.org/ontology/EducationalOrganization>)
}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
SELECT DISTINCT ?softwareAuthor ?awardEntity WHERE {
  # Step 1: Find software authored by Bill Joy
  OPTIONAL {
    ?software <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> .
    ?software <http://www.w3.org/2004/02/skos/core#definition> ""software"" .
    BIND(<http://dbpedia.org/resource/Bill_Joy> AS ?softwareAuthor)
  }

  # Step 2: Find entities in awards for American Wolf Prize in Medicine awardees
  OPTIONAL {
    ?awardee <http://www.w3.org/2004/02/skos/core#prefLabel> ?name .
    ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Category:American_people> .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
    ?award <http://dbpedia.org/ontology/category> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
    ?award <http://www.w3.org/2004/02/skos/core#hasPart> ?awardEntity .
  }

  # Step 3: Ensure there is a common entity
  FILTER(?softwareAuthor = ?softwareAuthor)
}
```",5,7,6,3,2,3,2,20,0,1,1,0.0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?militaryForceFrancisco ?commanderElDirector WHERE {
  # Find the military force associated with Francisco Largo Caballero's event
  OPTIONAL {
    ?event1 <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?event1 a <http://dbpedia.org/class/yago/SocietalEventOrMilitaryConflict108069> .
    ?event1 <http://dbpedia.org/property/militaryForce> ?militaryForceFrancisco .
  }
  
  # Find the commander of the force associated with ""El Director""
  OPTIONAL {
    ?figure <http://www.w3.org/2000/01/rdf-schema#label> ""El Director""@en .
    ?event2 <http://dbpedia.org/ontology/person> ?figure .
    ?event2 a <http://dbpedia.org/class/yago/Event108069> .
    ?event2 <http://dbpedia.org/property/militaryForce> ?militaryForceElDirector .
    ?militaryForceElDirector <http://dbpedia.org/property/commander> ?commanderElDirector .
  }
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
# Step 1: Identify Joseph Michael Furney
SELECT ?furney WHERE {
  ?furney <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
  ?furney a <http://dbpedia.org/ontology/Artist> .
}

# Step 2: Find the Band of Joseph Michael Furney
SELECT ?band WHERE {
  ?furney <http://dbpedia.org/property/memberOf> ?band .
}

# Step 3: Reference to Nevermore
SELECT ?reference WHERE {
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Nevermore_(band)> .
}

# Step 4: Actor of Return to Nuke 'Em High Volume 1
SELECT ?actor WHERE {
  ?film <http://dbpedia.org/property/starring> ?actor .
  ?film <http://dbpedia.org/ontology/title> ""Return to Nuke 'Em High Volume 1"" .
}

# Step 5: Band Member of the Reference
SELECT ?bandMember WHERE {
  ?reference <http://dbpedia.org/ontology/member> ?bandMember .
}

# Step 6: Associated Musical Artist
SELECT ?associatedArtist WHERE {
  ?actor <http://dbpedia.org/property/memberOf> ?bandMember .
  ?actor <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"```sparql
SELECT ?personBornOnDate ?band WHERE {
  OPTIONAL {
    ?athlete a <http://dbpedia.org/ontology/Athlete> ;
             <http://dbpedia.org/ontology/SoccerPlayer> true ;
             <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Zolotonosha> ;
             <http://dbpedia.org/ontology/deathDate> ?deathDate .
  }
  
  OPTIONAL {
    ?personBornOnDate <http://dbpedia.org/ontology/birthDate> ?deathDate .
  }

  OPTIONAL {
    ?song a <http://dbpedia.org/ontology/Song> ;
          <http://purl.org/dc/terms/title> ""Amba Shepherd"" ;
          <http://dbpedia.org/ontology/writer> ?writer .

    ?band <http://dbpedia.org/ontology/member> ?writer .
  }
}
```",6,9,7,3,2,3,3,71,1,1000776,0,9.992236032602668e-07,1.0,1.9984452096269105e-06
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT DISTINCT ?member WHERE {
  # Find band members of YU Grupa
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member .
  
  # Ensure Raša Đelmaš is also associated with the same member
  OPTIONAL { 
    <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/member> ?member .
  }
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
}
```",3,4,4,2,2,2,3,28,1,3,0,0.25,1.0,0.4
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?administration ?country WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/leader> ?administration .
  }
  OPTIONAL {
    ?country <http://www.w3.org/2006/time#during> ?timeZone .
    ?timeZone <http://dbpedia.org/property/name> ""Central European Time"" .
    ?country a <http://dbpedia.org/class/yago/Country108069068> .
  }
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?force ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/force> ?force .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?restingPlace ?settlement WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?settlement <http://www.w3.org/2004/02/skos/core#broader*|<http://dbpedia.org/ontology/location> ?birthPlace .
    ?settlement a <http://dbpedia.org/class/yago/Settlement108069068> .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
SELECT ?writerBand ?murdaMookBand WHERE {
  OPTIONAL {
    # Find the writer(s) of ""Emotion"" album by Carly Rae Jepsen
    <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://purl.org/dc/terms/creator> ?writer .
    
    # Find any bands associated with these writers
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
    BIND(?band AS ?writerBand)
  }
  
  OPTIONAL {
    # Find the band associated with Murda Mook
    <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/memberOf> ?murdaMookBand .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a <http://dbpedia.org/ontology/Royalty> ;
            <http://www.w3.org/2006/vcard/ns#hasName> ""Princess Victoria Louise of Prussia"" ;
            <http://xmlns.com/foaf/0.1/birthName> ""Victoria Louise of Prussia"" .

  # Step 2: Find her spouse
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 3: Identify a child of Ernest Augustus, Duke of Brunswick who is royalty
  ?child a <http://dbpedia.org/ontology/Royalty> ;
         <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .

  # Step 4: Ensure the spouse is related to this child
  ?spouse <http://dbpedia.org/ontology/spouse> ?child .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find Thihapate of Mohnyin's child who is both an office holder and a royalty
  ?childOfThihapate <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 2: Identify Soe Min Wimala Dewi's father
  ?soeMinWimala <http://dbpedia.org/ontology/father> ?fatherOfSoeMin .
  <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> = ?soeMinWimala .

  # Step 3: Find the child of Soe Min Wimala Dewi's father
  ?childOfFather <http://dbpedia.org/ontology/father> ?fatherOfSoeMin .

  # Step 4: Determine the predecessor of the office holder and royalty child of Thihapate of Mohnyin
  OPTIONAL {
    ?officeHolderRole <http://dbpedia.org/property/holder> ?childOfThihapate .
    ?officeHolderRole <http://dbpedia.org/ontology/predecessor> ?predecessor .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee ?commander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/ontology/receivedAward> ?award .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",3,3,4,2,2,3,2,20,3,18,0,0.14285714285714285,1.0,0.25
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?region ?sportsEvent ?entityInItaly WHERE {
  # Step 1: Find the time zone of Aguilar de Segarra
  <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?timeZone .

  # Step 2: Find the region of this time zone
  ?timeZone <http://dbpedia.org/ontology/timeZone> ?region .

  # Step 3: Identify a sports event in that region
  ?sportsEvent <http://dbpedia.org/property/location> ?location .
  ?location <http://www.w3.org/2006/vcard/ns#adrRegion> ?region .

  # Step 4: Find an entity related to this sports event located in Italy
  ?entityInItaly <http://dbpedia.org/ontology/sportsEvent> ?sportsEvent ;
                 <http://dbpedia.org/ontology/location> ?locationInItaly .
  ?locationInItaly <http://www.w3.org/2006/vcard/ns#adrCountry> ""Italy""^^<http://www.w3.org/2001/XMLSchema#string> .
}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?entity WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2004/02/skos/core#inScheme> <http://dbpedia.org/resource/Category:Countries_in_Central_European_Time> .
  }
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio> .
  }
  FILTER(BOUND(?entity))
}
```",4,5,5,2,3,2,3,28,1,49989,0,2.000400080016003e-05,1.0,4.0007201296233315e-05
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?almaMater ?nickname WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Northern_Ireland> .
    ?entity <http://dbpedia.org/ontology/type> ?type1 .
    ?entity <http://dbpedia.org/ontology/type> ?type2 .
    FILTER (?type1 = <http://dbpedia.org/class/yago/EducationalInstitution108930069> && 
            ?type2 = <http://dbpedia.org/class/yago/Organisation106501365>)
    ?entity <http://purl.org/dc/terms/alternative> ?nickname .
  }
}
```",4,6,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"```sparql
SELECT ?personDecedentCapital ?personDecedentFrenchAlgeria ?francoHovaCommander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/deceasedAt> ?personDecedentCapital .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/ontology/deceasedAt> ?personDecedentFrenchAlgeria .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?francoHovaCommander .
  }
}
```",4,5,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee ?commander WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/receivedAward> <http://dbpedia.org/resource/Order_of_Suvorov> .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/commanded> ?force ;
            <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
    FILTER NOT EXISTS { ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Living_person> }
    BIND(?person AS ?commander)
  }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?person ?almaMater WHERE {
  ?person a <http://dbpedia.org/ontology/Writer> .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER (CONTAINS(LCASE(?name), ""serbia"")) .

  OPTIONAL {
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?prodiParty ?italianPeoplePartyDescription ?andreottiParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://purl.org/dc/terms/description> ?italianPeoplePartyDescription .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty .
  }
}
```",4,4,5,2,3,3,3,71,1,8,0,0.1111111111111111,1.0,0.19999999999999998
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify the album
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://purl.org/dc/terms/creator> ?writer .
  
  # Step 2: Ensure the writer is both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  
  # Step 3: Find associated musical artists of the writer
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?person WHERE {
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People's_Commissariat_of_Defence_of_the_Soviet_Union> .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/awardee> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace WHERE {
  OPTIONAL {
    # Find the father of Emperor Go-Mizunoo
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://www.w3.org/2002/07/owl#sameAs> ?father .
    
    # Get the administration of his father
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  OPTIONAL {
    # Find commanders in the Boshin War
    ?commander <http://dbpedia.org/property/commanded> <http://dbpedia.org/resource/Boshin_War> ;
               <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
SELECT ?figure ?team WHERE {
  OPTIONAL {
    ?figure <http://dbpedia.org/ontology/kindOf> ?knownAs .
    FILTER(CONTAINS(LCASE(STR(?knownAs)), ""stolz von liechtenstein""))
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?playerManager .
    ?playerManager <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?playerManager <http://dbpedia.org/ontology/team> ?team .
    
    FILTER(CONTAINS(LCASE(STR(?person)), ""soccer player"") && CONTAINS(LCASE(STR(?person)), ""soccer manager""))
    FILTER(YEAR(xsd:dateTime(?birthDate)) = 1978 && MONTH(xsd:dateTime(?birthDate)) = 9 && DAY(xsd:dateTime(?birthDate)) = 15)
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?birthPlaceSaito ?deathPlaceTokugawa ?administrationGoYozei WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceSaito .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceTokugawa .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/property/administration> ?administrationGoYozei .
  }
}
```",5,8,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","```sparql
SELECT ?album ?writer WHERE {
  ?album <http://dbpedia.org/ontology/contributor> <http://dbpedia.org/resource/Dave_Flett> .
  ?album <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""manfred mann"")) .
  ?album <http://dbpedia.org/ontology/writer> ?writer .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?person WHERE {
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/commander> ?command .
    FILTER(CONTAINS(LCASE(STR(?command)), ""spanish civil war""))
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/awardeeOf> ?award .
    FILTER(CONTAINS(LCASE(STR(?award)), ""30""))
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER(CONTAINS(LCASE(STR(?deathPlace)), ""madrid""))
  }
}
```",3,3,4,1,3,2,3,28,0,1385,1,0.0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?native WHERE {
  # Find the residence of Sylvie Bermann
  OPTIONAL { 
    <http://dbpedia.org/resource/Sylvie_Bermann> <http://xmlns.com/foaf/0.1/homePage> ?residence .
  }
  
  # Ensure the residence is a settlement and British
  ?residence <http://www.w3.org/2004/02/skos/core#broader> ?settlement .
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> ;
              <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlement108069068> .

  # Find natives of the settlement
  ?native <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?residence .

  # Ensure the native is a child of Jon Pertwee
  ?native <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Jon_Pertwee> .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Step 1: Find Žika Jelić's band
  ?bandMember a <http://dbpedia.org/ontology/MusicalArtist> ;
              <http://dbpedia.org/ontology/bandMember> ?band .
  FILTER (?bandMember = <http://dbpedia.org/resource/%C5%BDika_Jeli%C4%87>)
  
  # Ensure the band is both a Band and a Group
  ?band a <http://dbpedia.org/ontology/Band> ;
        a <http://dbpedia.org/ontology/Group> .

  # Step 2: Find members of that band who are artists and musical artists
  ?member a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/bandMember> ?band .
  
  # Step 3: Identify bands of those members
  ?memberBand a <http://dbpedia.org/ontology/Band> ;
              <http://dbpedia.org/ontology/bandMember> ?member .

  BIND(?memberBand AS ?band)
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Get the birth name of Ted McGinley
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Step 2: Find any person with this birth name and get their spouse
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,3,1,3,3,71,1,0,0,1.0,1.0,1.0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?prodiParty ?andreottiParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
  }
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?reference ?prodiParty ?fatherParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Partito_Popolare_Italiano> <http://www.w3.org/2002/07/owl#sameAs> ?reference .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
  }

  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/party> ?fatherParty .
  }
}
```",5,5,6,3,3,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT DISTINCT ?person WHERE {
  # Get the birthplace of Silvia Cohen
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Find individuals with specified professions and native to the same birthplace
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER (
    CONTAINS(LCASE(?name), ""financier"") ||
    CONTAINS(LCASE(?name), ""businessman"") ||
    CONTAINS(LCASE(?name), ""vineyard owner"") ||
    CONTAINS(LCASE(?name), ""art collector"") ||
    CONTAINS(LCASE(?name), ""racehorse owner/breeder"")
  )
  
  # Ensure they are native to the same birthplace
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,3,4,2,2,2,2,9,0,6,1,0.0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?personDeceasedAtMadrid ?commander WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
    BIND(?person AS ?personDeceasedAtMadrid)
  }
  
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/eventOf> <http://dbpedia.org/resource/Lisa_Gavrić> ;
           a <http://dbpedia.org/class/yago/SocietalEvent108069068> .
    ?event <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",3,5,4,2,2,2,3,28,0,1346,1,0.0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    ?dokken <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://xmlns.com/foaf/0.1/name> ""Donald Maynard Dokken"" .
    ?bandMember <http://dbpedia.org/property/memberOf> ?dokken .
  }
}
```",3,4,4,2,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?associatedArtist ?producer WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> ;
          <http://dbpedia.org/ontology/work> ?work ;
          <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/50_Cent> .
    ?work <http://dbpedia.org/ontology/producer> ?producer .
  }
}
```",3,6,4,2,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark ?birthPlace WHERE {
  OPTIONAL { 
    ?landmark a <http://dbpedia.org/ontology/Landmark> ;
              <http://www.w3.org/2006/vcard/ns#hasAltitude> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .
  }
  OPTIONAL {
    ?member a <http://dbpedia.org/ontology/MusicArtist> ;
            <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Dropkick_Murphys> ;
            <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouseOfLaodiceIV ?childOfChild WHERE {
  # Find the successor of Antiochus II Theos who is a royalty
  OPTIONAL { 
    <http://dbpedia.org/resource/Antiochus_II_Theos> <http://www.w3.org/2004/02/skos/core#successor> ?successor .
    ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }
  
  # Find the child of that successor who is a royalty
  OPTIONAL {
    ?successor <http://dbpedia.org/ontology/child> ?childOfSuccessor .
    ?childOfSuccessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }
  
  # Find the spouse of Laodice IV
  OPTIONAL {
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouseOfLaodiceIV .
  }

  # Find the child of the child from step 2 who is a royalty
  OPTIONAL {
    ?childOfSuccessor <http://dbpedia.org/ontology/child> ?childOfChild .
    ?childOfChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }
}
```",4,6,5,3,2,3,3,71,3,6562,0,0.00045696877380045696,1.0,0.0009135200974421437
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  ?office <http://www.w3.org/ns/org#head> ?person ;
          <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/GovernmentAgency108069068> .
  ?office <http://www.w3.org/ns/org#memberOf> <http://dbpedia.org/resource/Joseph_Stalin> .
  ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?partyName ?reference WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?party .
  ?party rdfs:label ?partyName ;
         owl:sameAs ?reference .
}
```",3,3,4,3,1,3,3,71,0,4,8,0.0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?leaderOfLeaderOffice WHERE {
  # Step 1: Identify Gustav Jonson's leader
  ?gustavJonson dbo:officeHolder <http://dbpedia.org/resource/Gustav_Jonson> .
  ?gustavJonson dbo:superior ?leader .

  # Step 2: Determine the office of this leader, ensuring it is a government agency
  ?leaderOffice dbo:head ?leader .
  ?leaderOffice rdf:type <http://dbpedia.org/ontology/GovernmentAgency> .

  # Step 3: Find the commander on the Eastern Front during World War II
  ?commander dbo:officeHolder <http://dbpedia.org/resource/Commander_of_the_Eastern_Front_(World_War_II)> .
  ?commander rdf:type <http://dbpedia.org/ontology/OfficeHolder> .
  ?commander rdf:type <http://dbpedia.org/ontology/Politician> .

  # Step 4: Identify the leader of this commander's office
  ?commanderOffice dbo:head ?leaderOfLeaderOffice .
  ?commanderOffice rdf:type <http://dbpedia.org/ontology/GovernmentAgency> .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Jon Pertwee"" .
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?war ?entity WHERE {
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Jonathon_Band> .
    ?award <http://purl.org/dc/terms/relation> ?awardee .
    ?awardee <http://dbpedia.org/property/war> ?war .
  }
  
  OPTIONAL {
    ?entity <http://www.w3.org/ns/prov#wasDerivedFrom> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?qub ?awardee ?almaMater WHERE {
  # Query for figure known as QUB
  OPTIONAL { 
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://www.w3.org/2000/01/rdf-schema#label> ?qub .
    FILTER(CONTAINS(LCASE(?qub), ""qub""))
  }
  
  # Query for alma mater of awardee of Royal Medal
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify the father of Ernest Augustus
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.

  # Step 2 and 3: Find children of this father who are royalty
  ?father <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?actor WHERE {
  # Step 1: Find Jon Pertwee's child who is an actor, narrator, and producer
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Actor115769069> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Narrator108965067> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Producer108965068> .

  # Step 2: Find the claim to fame that is both a film and a military conflict
  ?child <http://dbpedia.org/ontology/claimToFame> ?fame .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Film115769070> .
  ?fame <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108965069> .

  # Step 3: Identify the actor involved in this claim to fame
  ?fame <http://dbpedia.org/ontology/starring> ?actor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?war WHERE {
  # Find the award associated with Jonathon Band
  ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Jonathan_Band> .
  
  # Determine which war is linked to this award
  ?award <http://dbpedia.org/property/war> ?war .

  # Find entities related to both the Colony of New Zealand and the New Zealand Army associated with this war
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
    ?entity <http://dbpedia.org/property/war> ?war .
  }
  
  OPTIONAL {
    ?armyEntity <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?armyEntity <http://dbpedia.org/property/war> ?war .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  # Find the birthplace of Edin Dervišhalidović
  <http://dbpedia.org/resource/Edin_Dervišhalidović> <http://dbpedia.org/ontology/birthPlace> ?edinBirthPlace .

  # Find the birthplace of Samir Bekrić
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?samirBirthPlace .

  # Find a person native to Samir Bekrić's birthplace
  ?person <http://dbpedia.org/ontology/birthPlace> ?samirBirthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?ukEntity .
  ?ukEntity <http://www.geonames.org/ontology#locatedIn> <http://dbpedia.org/resource/United_Kingdom> .
  ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Writers_from_the_United_Kingdom> .
  ?person <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:British_poets> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the child of Ernest Augustus, Crown Prince of Hanover
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Ensure this child is a parent to Prince Ernest Augustus (born 1914)
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)> .

  # Step 3: Check if this child is the spouse of Princess Victoria Louise of Prussia
  ?child <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
SELECT ?result WHERE {
  OPTIONAL {
    ?administration <http://dbpedia.org/ontology/administration> <http://dbpedia.org/resource/George_Kilbon_Nash> .
    ?administration <http://dbpedia.org/ontology/almaMater> ?result .
  }
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"```sparql
SELECT ?father ?resident WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Lizzie_Spaulding> <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
    ?parent <http://xmlns.com/foaf/0.1/name> ?father .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?settlement a <http://dbpedia.org/class/yago/Settlements100000001> .
    ?resident <http://dbpedia.org/ontology/birthPlace> ?settlement .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find successor of Antiochus II Theos who is royalty
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find child of successor who is royalty
  ?child <http://dbpedia.org/ontology/parent> ?successor .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Identify parent of Nysa (wife of Pharnaces I of Pontus)
  ?nysa <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
  ?parent <http://dbpedia.org/ontology/child> ?nysa .

  # Ensure the child from step 2 is also a parent of Nysa
  FILTER (?child = ?parent)

  # Step 4: Find spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?decedentPerson ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/workFor> ?organization .
    ?person <http://dbpedia.org/property/deceasedAtWork> ?decedentEvent .
    ?decedentEvent <http://www.w3.org/2000/01/rdf-schema#label> ""US Assistant Secretary of State for African Affairs""@en .
  }
  
  OPTIONAL {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
SELECT DISTINCT ?person ?associatedBand WHERE {
  # Find band members of YU Grupa
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/YU_Grupa> .
  
  # Ensure the same person is a member of Kerber
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Kerber> .

  # Retrieve bands associated with this person as an artist and musical artist
  OPTIONAL { 
    ?person <http://dbpedia.org/property/associatedBand> ?associatedBand .
  }
  
  # Ensure the person is both an artist and a musical artist
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?artist .
  ?artist <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Musical_artists> .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?event ?militaryForce WHERE {
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/ontology/referencedIn> ?event .
  ?event <http://dbpedia.org/ontology/type> ?eventType .
  
  FILTER (
    (?eventType = <http://dbpedia.org/class/yago/SocietalEvent108069068>)
    && (?eventType = <http://dbpedia.org/class/yago/Event108069068>)
    && (?eventType = <http://dbpedia.org/class/yago/MilitaryConflict108069068>)
  )
  
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Don Dokken""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
    ?person <http://dbpedia.org/ontology/musicalArtist> ?musicalArtist .
    
    ?musicalArtist <http://dbpedia.org/property/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
  }
}
```",4,5,5,3,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?birthPlace ?entity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?location .
    ?location <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?entity <http://dbpedia.org/ontology/timeZone> ?timeZone .
  }
}
```",4,4,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?individual ?commander WHERE {
  ?individual <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?individual <http://dbpedia.org/ontology/officeHolder> ?office .
  ?individual <http://dbpedia.org/property/militaryForce> ?force .
  FILTER(?force = <http://dbpedia.org/resource/Napoleonic_Wars>) .
  
  ?individual <http://dbpedia.org/ontology/commander> ?commander .
}
```",4,5,5,3,2,3,3,71,0,0,34,0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify the parent of Archduchess Ilona who is a royalty
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this parent
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  
  # Step 3: Determine the grandchild (child of the child)
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?entityInSriLanka ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/workLocation> ?work .
    ?work <http://www.w3.org/2000/01/rdf-schema#label> ?entityInSriLanka .
    FILTER(CONTAINS(LCASE(?entityInSriLanka), ""sri lanka""))
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/workProject> ?project .
    ?project <http://www.w3.org/2000/01/rdf-schema#label> ?war .
    FILTER(CONTAINS(LCASE(?war), ""war""))
  }
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?event ?commander WHERE {
  OPTIONAL { 
    ?event <http://dbpedia.org/ontology/agent> <http://dbpedia.org/resource/El_Director> .
  }
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/agent> <http://dbpedia.org/resource/Rif_War> .
  }
  ?event <http://dbpedia.org/property/commander> ?commander .
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
SELECT ?show ?actorRestingPlace ?jamesBurtonRestingPlace WHERE {
  OPTIONAL {
    # Find the show associated with Emily Richard
    ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> .
    
    # Find actors of that show and their resting places
    ?show <http://dbpedia.org/ontology/actor> ?actor .
    ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .
  }
  
  OPTIONAL {
    # Find the resting place of James Burton (Egyptologist)
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?jamesBurtonRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?henuttawyParent ?ramessesSpouse ?amunChild ?childParent WHERE {
  # Parent of Henuttawy (19th dynasty)
  OPTIONAL { 
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/birthParent> ?henuttawyParent .
  }

  # Spouse of Ramesses II
  OPTIONAL {
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/property/spouse> ?ramessesSpouse .
  }
  
  # Child of the spouse of Amun-her-khepeshef
  OPTIONAL {
    ?spouseOfAmun <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
    ?spouseOfAmun <http://dbpedia.org/ontology/birthChild> ?amunChild .
  }

  # Parent of the child from above
  OPTIONAL {
    ?amunChild <http://dbpedia.org/ontology/birthParent> ?childParent .
  }
}
```",5,5,6,3,3,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandMemberOfDonDokken WHERE {
  # Step 1: Find Fredrik Thordendal's band that is an organization
  ?fredrikBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  ?fredrikBand a <http://dbpedia.org/class/yago/YAGO2GeoShape4327_Band4935> ;
              a <http://dbpedia.org/class/yago/YAGO2GeoShape4327_Group4919> ;
              a <http://dbpedia.org/ontology/Organisation> .

  # Step 2: Find associated musical artists of Fredrik Thordendal's band members
  ?bandMember <http://dbpedia.org/ontology/member> ?fredrikBand .
  ?associatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?bandMember .
  ?associatedArtist a <http://dbpedia.org/class/yago/YAGO2GeoShape4327_Band4935> ;
                    a <http://dbpedia.org/class/yago/YAGO2GeoShape4327_Group4919> ;
                    a <http://dbpedia.org/ontology/Organisation> .

  # Step 3: Find band members of Don Dokken
  ?donDokkenBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
  ?bandMemberOfDonDokken <http://dbpedia.org/ontology/member> ?donDokkenBand .

  # Ensure the band member of Don Dokken is also an associated artist from Fredrik Thordendal's band
  FILTER(?associatedArtist = ?bandMemberOfDonDokken)
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?person <http://purl.org/dc/terms/relation> ?award .
  OPTIONAL { 
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
  }
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
  ?person <http://dbpedia.org/ontology/bandMember> ?band .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?gibraltarCommander ?peninsularWarCommander ?gibraltarClaimToFame ?peninsularWarClaimToFame WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?gibraltarCommander .
    ?gibraltarCommander <http://dbpedia.org/property/claimToFame> ?gibraltarClaimToFame .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?peninsularWarCommander .
    ?peninsularWarCommander <http://dbpedia.org/property/claimToFame> ?peninsularWarClaimToFame .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commander ?force WHERE {
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?commander .
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/force> ?force .
}
```",3,4,4,3,1,3,2,20,0,0,364,0,0.0,0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  # Find the successor of the 2014 Sacramento Republic FC season
  <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successorSeason .
  
  # Get the team associated with the successor season
  ?successorSeason <http://dbpedia.org/property/team> ?teamSuccessor .

  # Find Mark Briggs' team
  <http://dbpedia.org/resource/Mark_Briggs_(footballer)> <http://dbpedia.org/ontology/team> ?teamBriggs .

  # Identify players in both teams
  ?player <http://dbpedia.org/property/playerOfTeam> ?teamSuccessor .
  ?player <http://dbpedia.org/property/playerOfTeam> ?teamBriggs .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?figureKnownAsQUB ?mayorAlmaMater ?awardeeAlmaMater WHERE {
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/nickname> ""QUB"" .
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?figureKnownAsQUB .
  }
  
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politicianForParty> <http://dbpedia.org/resource/Northern_Ireland_Forum> ;
           <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }

  OPTIONAL {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> ;
             <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Find Thado Minsaw's parent
  ?thadoMinsaw <http://dbpedia.org/ontology/birthName> ""Thado Minsaw"" .
  ?thadoMinsaw <http://dbpedia.org/ontology/father> ?parentOfThado .

  # Step 2: Find Thinkhaya's child
  ?thinkhaya <http://dbpedia.org/ontology/birthName> ""Thinkhaya of Pagan"" .
  ?thinkhaya <http://dbpedia.org/ontology/child> ?childOfThinkhaya .

  # Step 3: Find the parent of Thinkhaya's child
  ?childOfThinkhaya <http://dbpedia.org/ontology/father> ?parentOfChild .

  # Step 4: Find the parent of the parent of Thado Minsaw (which is also the parent of the child from step 3)
  ?parentOfThado <http://dbpedia.org/ontology/father> ?finalParent .
  
  FILTER(?parentOfChild = ?finalParent) 
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  # Find the entity for Georgeanne Marie Rice by birth name
  ?rice a dbo:Person ;
        foaf:name ""Georgeanne Marie Rice"" ;
        dbp:birthday ?birthDate .

  # Find Ted McGinley by his birth name and get his spouse
  ?mcf a dbo:Person ;
       foaf:name ""Ted McGinley"" ;
       dbp:birthday ?mcfBirthDate .
  
  ?mcf dbp:spouse ?spouse .

  FILTER (?rice = ?spouse)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?team WHERE {
  # Step 1: Find the birthplace of Gary Williams that is an English settlement
  ?birthPlace <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> .
  ?birthPlace <http://www.w3.org/2006/vcard/ns#adr> ?address .
  ?address <http://purl.org/dc/terms/type> ""Settlement"" .
  ?birthPlace <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> .

  # Step 2: Find natives who are both soccer players and managers
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace ;
          <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/English_people> .
  ?person <http://dbpedia.org/ontology/profession> ?profession1 .
  ?person <http://dbpedia.org/ontology/profession> ?profession2 .
  FILTER (?profession1 = <http://dbpedia.org/resource/Soccer_player> && ?profession2 = <http://dbpedia.org/resource/Soccer_manager>) .

  # Step 3: Retrieve the team associated with these individuals
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/team> ?team .
  }
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?antiochusChildParent ?royalChildChildParent WHERE {
  # Step 1: Find Antiochus (son of Antiochus III the Great)
  ?antiochus <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Step 2: Find child of this Antiochus
  ?antiochusChild <http://dbpedia.org/ontology/child> ?antiochus .

  # Step 3: Identify Seleucus II Callinicus and his royal children
  ?seleucus <http://www.w3.org/2000/01/rdf-schema#label> ""Seleucus II Callinicus""@en .
  ?royalChild <http://dbpedia.org/ontology/child> ?seleucus .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find child of the royal child
  ?royalChildChild <http://dbpedia.org/ontology/child> ?royalChild .

  # Step 5: Determine parents
  OPTIONAL { ?antiochusChild <http://dbpedia.org/ontology/father> ?antiochusChildParent . }
  OPTIONAL { ?royalChildChild <http://dbpedia.org/ontology/father> ?royalChildChildParent . }
}
```",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?nativeOfResidence WHERE {
  # Step 1: Find the actor of ""Dog Soldiers""
  ?actor dbo:film <http://dbpedia.org/resource/Dog_Soldiers> .
  
  # Step 2: Check if this actor is a politician and office holder from France
  ?actor dbo:nationality dbr:France ;
         rdf:type dbo:Politician, dbo:OfficeHolder .

  # Step 3: Find the residence that is a settlement and British
  ?actor dbo:residence ?residence .
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Step 4: Identify who is native to this residence
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
SELECT ?awardee ?conflict WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> ""Order of St. Andrew"" .
  }
  OPTIONAL {
    ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> .
  }
}
```",3,4,4,2,2,3,2,20,0,25,9,0.0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?burtonRestingPlace ?knightRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .
  }
  OPTIONAL {
    ?person <http://www.w3.org/ns/prov#wasDerivedFrom> ?award .
    ?award <http://dbpedia.org/property/order> ""Knight Grand Cross of the Order of St Michael and St George"" .
    ?person <http://dbpedia.org/ontology/deathPlace> ?knightRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?parentOfHenuttawy ?spouseOfFatherMerneptah WHERE {
  # Parent of Henuttawy (19th dynasty)
  OPTIONAL { 
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://www.w3.org/2002/07/owl#sameAs> ?henuttawy .
    ?henuttawy <http://dbpedia.org/ontology/birthParent> ?parentOfHenuttawy .
  }

  # Spouse of the Father of Merneptah
  OPTIONAL {
    <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?fatherMerneptah .
    ?fatherMerneptah <http://dbpedia.org/property/spouse> ?spouseOfFatherMerneptah .
  }

  # Parent of the Child of Nefertari
  OPTIONAL {
    ?childNefertari <http://www.w3.org/2002/07/owl#sameAs> ?child .
    ?child <http://dbpedia.org/ontology/birthParent> ?parentOfChildNefertari .
    ?parentOfChildNefertari <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
  }

  # Ensure the entities are the same
  FILTER (?parentOfHenuttawy = ?spouseOfFatherMerneptah)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?person WHERE {
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""Japan"" .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/managerOf> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
  }
  
  FILTER EXISTS { ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Tsukuba> . }
  FILTER EXISTS { 
    ?person <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""Japan"" .
  }
  FILTER EXISTS {
    ?person <http://dbpedia.org/ontology/managerOf> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse ?parent WHERE {
  # Find the spouse of Princess Victoria Louise of Prussia
  OPTIONAL { 
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
  }
  
  # Find children who are royalty and whose parent is Ernest Augustus, Duke of Brunswick
  OPTIONAL {
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",3,4,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","```sparql
SELECT ?actor WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER(?profession IN (<http://dbpedia.org/resource/Actor>, <http://dbpedia.org/resource/Narrator>, <http://dbpedia.org/resource/Producer>)).
  
  ?person <http://dbpedia.org/property/claimToFame> ?fame .
  ?fame a <http://dbpedia.org/class/yago/YagoWoWMovieFilm1000000010> ; 
        a <http://dbpedia.org/class/yago/YagoMilitaryConflict108834848> .

  ?film <http://www.w3.org/2002/07/owl#sameAs> ?fame .
  ?film <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?awardeeWar ?nzArmyWar WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/honoraryTitle> ""Knight Grand Cross of the Order of the Bath"" .
    ?person <http://dbpedia.org/property/war> ?awardeeWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/war> ?nzArmyWar .
  }
}
```",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"```sparql
SELECT ?administration ?birthPlaceCommander ?deathPlaceFather WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlaceCommander ;
               <http://dbpedia.org/ontology/occupation> ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""boshin war"")).
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://www.w3.org/2000/01/rdf-schema#label> ?labelFather ;
            <http://dbpedia.org/ontology/deathPlace> ?deathPlaceFather .
    FILTER(CONTAINS(LCASE(?labelFather), ""politician"")).
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT DISTINCT ?settlement WHERE {
  OPTIONAL {
    # Find the writer of ""Where It's At"" (Dustin Lynch album)
    ?album <http://dbpedia.org/ontology/writer> ?writer .
    FILTER(STRSTARTS(STR(?album), ""http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)""))
    
    # Find the alma mater of Carl L. Nippert
    <http://dbpedia.org/resource/C._L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    
    # Check for settlements in administration related to either entity
    OPTIONAL { ?writer <http://dbpedia.org/ontology/administration> ?admin . }
    OPTIONAL { ?almaMater <http://dbpedia.org/ontology/administration> ?admin . }
    
    ?admin <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlement .
    FILTER(STRSTARTS(STR(?settlement), ""http://dbpedia.org/resource/"") && 
           EXISTS { ?settlement a <http://dbpedia.org/ontology/Settlement> })
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .

  # Step 2: Find band members of Don Dokken
  ?dokken <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .

  # Step 3: Find associated musical artist of the artist from Watchtower
  ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .

  # Step 4: Check if any band member is also an associated musical artist of artist2
  OPTIONAL {
    ?artist2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?deathPlace ?battleLocation ?administration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?battleLocation .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/property/administration> ?administration .
  }
}
```",3,3,4,1,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT DISTINCT ?commander WHERE {
  # Step 1: Identify 'Polish Horse'
  ?polishHorse a <http://dbpedia.org/ontology/MilitaryUnit> ;
               <http://www.w3.org/2006/vcard/ns#nickname> ""Polish Horse"" .

  # Step 2: Find commanders in the German campaign of 1813
  ?campaign a <http://dbpedia.org/ontology/MilitaryConflict> ;
            <http://dbpedia.org/property/name> ""German campaign of 1813"" .
  
  ?campaign <http://dbpedia.org/ontology/commander> ?commander .

  # Step 3: Identify wars involving these commanders
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
       <http://dbpedia.org/property/commander> ?commander .

  # Step 4: Filter for overlapping commanders with 'Polish Horse'
  ?polishHorse <http://dbpedia.org/ontology/commander> ?commander .
}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?childRestingPlace ?knightRestingPlace ?simonCadellRestingPlace WHERE {
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/James_Burton_(property_developer)> .
    ?child <http://dbpedia.org/ontology/deathPlace> ?childRestingPlace .
  }
  
  OPTIONAL {
    ?knight <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?knight <http://dbpedia.org/ontology/deathPlace> ?knightRestingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?simonCadellRestingPlace .
  }
}
```",5,5,6,2,3,3,3,71,0,15,1,0.0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?johnAlmaMater ?awardeeAlmaMater WHERE {
  # Alma Mater of John Alderdice, Baron Alderdice
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?johnAlmaMater .

  OPTIONAL {
    # Awardee of Royal Medal and Figure Known as QUB
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""qub"")) .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?allenHillAlmaMater ?johnAlderdiceAlmaMater ?nickname WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?johnAlderdiceAlmaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://xmlns.com/foaf/0.1/knowsAs> ?nickname .
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?decedent ?war WHERE {
  # Query for person decedent at French Algeria
  OPTIONAL {
    ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  }
  
  # Query for commander in a war of Frédéric-Georges Herr
  OPTIONAL {
    ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
         a <http://dbpedia.org/ontology/Event> ;
         <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> .
  }
}
```",3,5,4,2,2,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?figureKnownAsQUB ?johnAlderdiceAlmaMater ?allenHillAlmaMater WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/property/nickname> ""QUB"" .
    BIND(?entity AS ?figureKnownAsQUB)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?johnAlderdiceAlmaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .
  }
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
SELECT ?claimToFame ?peninsularWarCommander ?gahnWars WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  }
  OPTIONAL {
    ?peninsularWar <http://dbpedia.org/property/commander> ?peninsularWarCommander .
    FILTER(STRSTARTS(LCASE(?peninsularWar), ""peninsular war""))
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?gahnWars .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Matt Colton"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?war ?claimToFame WHERE {
  # Find wars Joaquín Blake participated in
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> .
  
  # Ensure the war is a military conflict, societal event, and general event
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
  ?militaryConflict <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict> .
  ?war <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Event> .

  # Find if Thomas Trigge was a commander in the war
  OPTIONAL {
    ?war <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Thomas_Trigge> .
    
    # Retrieve claim to fame of Thomas Trigge
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  }
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?redTideArtist ?donDokkenMember ?saSlayerArtist WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/bandMember> ?donDokkenMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?saSlayerArtist .
  }
}
```",3,3,4,1,3,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?appietusAssociated ?priscillaBandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?appietusAssociated .
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Priscilla Opoku-Kwarteng""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Priscilla Opoku-Kwarteng"" .
    ?person <http://dbpedia.org/ontology/type> ?type1 .
    ?person <http://dbpedia.org/ontology/type> ?type2 .
    FILTER (?type1 = <http://dbpedia.org/class/yago/MusicalArtist108069068> && ?type2 = <http://dbpedia.org/class/yago/Artist106067786>)
    
    ?person <http://dbpedia.org/property/memberOfBand> ?band .
    ?band <http://dbpedia.org/ontology/member> ?priscillaBandMember .
  }
}
```",3,5,4,2,2,3,2,20,1,14,0,0.06666666666666667,1.0,0.125
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace ?country ?nottinghamshireEntity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  OPTIONAL {
    ?country <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?region .
    ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Western_European_Time> .
    ?country a <http://dbpedia.org/class/yago/Country108069068> .
  }
  OPTIONAL {
    ?nottinghamshireEntity <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Nottinghamshire> .
  }
}
```",4,5,5,2,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?fatherParty ?prodiParty WHERE {
  OPTIONAL {
    # Assuming Bill Gates as an example of an MIT alumnus
    <http://dbpedia.org/resource/Bill_Gates> <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    <http://dbpedia.org/resource/Bill_Gates> <http://xmlns.com/foaf/0.1/family_name> ?fatherName .
    # Assuming we have a way to link father's name to his political party
    ?father <http://xmlns.com/foaf/0.1/name> ?fatherName .
    ?father <http://dbpedia.org/ontology/politicalParty> ?fatherParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  }
}
```

Note: The query assumes a direct link from the alumnus to their father's political party, which may require additional data or assumptions in practice.",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?war ?claimToFame WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander rdfs:label ""Louis des Balbes de Berton de Crillon""@en .
    ?commander <http://dbpedia.org/property/warsCommanded> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","```sparql
SELECT ?commonChild WHERE {
  # Step 1: Find a child of Boleslaus I who is royalty
  ?childBoleslaus <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> .
  ?childBoleslaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the parent of Mieszko II Lambert
  ?parentMieszko <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> .

  # Step 3: Find a common child of both entities from steps 1 and 2
  ?commonChild <http://dbpedia.org/ontology/parent> ?childBoleslaus .
  ?commonChild <http://dbpedia.org/ontology/parent> ?parentMieszko .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  OPTIONAL { 
    ?event <http://dbpedia.org/ontology/event> ?societalEvent .
    ?societalEvent a <http://dbpedia.org/class/yago/SocialEvents>.
    ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?event <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
  }
  OPTIONAL {
    ?militaryConflict <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?war ?country WHERE {
  OPTIONAL {
    # Step 1: Identify the leader of the 1962 New South Wales state election
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    FILTER(STRSTARTS(STR(?election), ""http://dbpedia.org/resource/1962_New_South_Wales_state_election""))

    # Step 2: Determine the birthplace country of the leader
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER(LANG(?countryLabel) = 'en')
    
    # Ensure it is a country
    ?birthPlace <http://dbpedia.org/ontology/country> ?country .

    # Step 3: Find wars involving the New Zealand Army
    ?war <http://dbpedia.org/property/army> ?army .
    FILTER(STRSTARTS(STR(?army), ""http://dbpedia.org/resource/New_Zealand_Army""))

    # Step 4: Link the war with the birthplace country of the leader
    ?war <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#label> ?locationLabel .
    FILTER(LANG(?locationLabel) = 'en' && ?locationLabel = ?countryLabel)
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?war ?fame WHERE {
  OPTIONAL {
    ?peninsularWar <http://dbpedia.org/ontology/commander> ?commander .
    ?militaryConflict <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?militaryConflict != ?peninsularWar) .
    BIND(?militaryConflict AS ?war)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?fame .
    BIND(?fame AS ?fame)
  }
}
```",4,5,5,3,2,3,3,71,2,15383,0,0.00012999675008124796,1.0,0.00025995970624553193
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","```sparql
SELECT ?artist WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Jim Sheppard"" .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  OPTIONAL { 
    ?artist <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
  }
  FILTER EXISTS {
    ?artist <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)>
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parent WHERE {
  OPTIONAL { 
    ?narapatiChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
    ?narapatiChild <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
  }
  
  OPTIONAL {
    ?soeMinFather <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
    ?soeMinChild <http://www.w3.org/2006/vcard/ns#hasParent> ?soeMinFather .
    FILTER(?narapatiChild = ?soeMinChild)
  }
  
  OPTIONAL {
    ?ameittaPredecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
    FILTER(?narapatiChild = ?ameittaPredecessor)
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?location ?administration WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?location .
  }
  
  OPTIONAL {
    ?party a <http://dbpedia.org/ontology/PoliticalParty> ;
           <http://www.w3.org/2000/01/rdf-schema#label> ?partyLabel ;
           <http://dbpedia.org/ontology/administration> ?administration .
    FILTER(CONTAINS(LCASE(?partyLabel), ""sicily"") && CONTAINS(LCASE(STR(?administration)), ""sicily""))
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?capital WHERE {
  ?militaryForce <http://dbpedia.org/ontology/militaryUnit> ?vyoshenskayaUprising .
  ?vyoshenskayaUprising rdf:type <http://dbpedia.org/resource/Vyoshenskaya_Uprising> .
  ?militaryForce rdf:type <http://dbpedia.org/ontology/Organisation> ;
                 rdf:type <http://dbpedia.org/ontology/MilitaryUnit> .
  ?militaryForce <http://dbpedia.org/property/country> ?country .
  ?country <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?capital .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?allenHillAlmaMater ?mayorAlmaMatter WHERE {
  # Alma Mater of Allen Hill (Scientist)
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .

  # Alma Mater of the Mayor of an Organisation in Belfast
  ?organisation <http://www.w3.org/2004/vcard/ns#adr> ?address .
  ?address <http://purl.org/dc/terms/location> <http://dbpedia.org/resource/Belfast> .
  ?organisation <http://dbpedia.org/ontology/politician> ?mayor .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMatter .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander ?conflict ?decedent WHERE {
  # Step 1: Find the commander in the Battle of Verdun
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Verdun""))

  # Step 2: Identify the military conflict/event this commander was involved in
  ?conflict <http://dbpedia.org/ontology/commander> ?commander .
  FILTER((<http://www.w3.org/2002/07/owl#Thing> <http://dbpedia.org/ontology/MilitaryConflict>) || 
         (<http://www.w3.org/2002/07/owl#Thing> <http://dbpedia.org/ontology/Event>))

  # Step 3: Find the person decedent at French Algeria
  ?decedent <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/French_Algeria> .

  # Step 4: Check if this decedent is the same as the commander
  FILTER(?commander = ?decedent)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Prodi"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
          <http://dbpedia.org/ontology/politicianFor> ?party .
  FILTER EXISTS { ?party <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Partito_Popolare_Italiano> }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT DISTINCT ?softwareAuthor WHERE {
  # Step 1: Find the author of Pushd and Popd
  ?pushdWork <http://dbpedia.org/ontology/author> ?commonAuthor .
  ?popdWork <http://dbpedia.org/ontology/author> ?commonAuthor .
  
  FILTER(?pushdWork = <http://dbpedia.org/resource/Pushd> && ?popdWork = <http://dbpedia.org/resource/Popd>)
  
  # Step 2: Find other software works by this author
  ?softwareWork <http://dbpedia.org/ontology/author> ?commonAuthor .
  ?softwareWork <http://www.w3.org/2004/02/skos/core#prefLabel> ?label .
  FILTER(CONTAINS(LCASE(?label), ""software""))
  
  # Step 3: Retrieve the author of these software works
  ?softwareWork <http://dbpedia.org/ontology/author> ?softwareAuthor .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"```sparql
SELECT DISTINCT ?native WHERE {
  # Step 1: Get Yōichi Masuzoe's residence
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://xmlns.com/foaf/0.1/residence> ?residence .

  # Step 2: Check if the residence is a country
  ?residence <http://www.w3.org/2004/02/skos/core#broader> ?country .
  
  # Step 3: Find natives of that country who are members of University of Tsukuba and managers of 2013 Júbilo Iwata season
  ?native <http://dbpedia.org/ontology/nationality> ?country ;
          <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> ;
          <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?child ?professional WHERE {
  # Find Jason Schwartzman's parents
  OPTIONAL { 
    <http://dbpedia.org/resource/Jason_Schwartzman> <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
  }
  
  # Find the child of these parents
  OPTIONAL {
    ?parent <http://www.w3.org/2006/vcard/ns#hasChild> ?child .
  }

  # Determine the professional role of this child
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/profession> ?professional .
  }
}
```",3,3,4,2,2,3,2,20,0,15068,1,0.0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?professional ?producer ?associatedArtist WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/professional> ?professional .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
}
```",3,3,4,1,3,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find children of Archduke Joseph Karl of Austria
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: For each child, find their children (grandchildren)
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Check if the grandchild is a parent of Géza von Habsburg
  ?grandchild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?father .
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?parent .
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?event ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> .
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Biscay_Campaign> .
  ?event a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ; # Assuming this is the class for military conflicts
         a <http://dbpedia.org/class/yago/SocietalEvent108069068> . # Assuming this is the class for societal events

  OPTIONAL { 
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
SELECT ?region ?administeredTerritory WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://www.w3.org/2006/vcard/ns#adrRegion> ?region .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/ontology/administeredBy> ?administeredTerritory .
  }
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?individual WHERE {
  ?thinkhaya <http://dbpedia.org/ontology/name> ""Thinkhaya of Pagan"" .
  
  ?child1 <http://dbpedia.org/ontology/father> ?thinkhaya .
  ?child2 <http://dbpedia.org/ontology/father> ?thinkhaya .

  ?child2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  
  ?individual <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .

  FILTER (?child1 = ?individual || ?child2 = ?individual)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the predecessor of Indalecio Prieto
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .

  # Step 2: Identify the military conflict involving this predecessor as commander in Biscay Campaign
  ?conflict <http://dbpedia.org/ontology/commander> ?predecessor .
  ?conflict <http://dbpedia.org/property/location> ""Biscay Campaign""^^<http://www.w3.org/2001/XMLSchema#string> .

  # Step 3: Determine the military force involved in that conflict
  ?conflict <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  
  FILTER(?conflict <http://dbpedia.org/ontology/societalEvent>)
  FILTER(?conflict <http://dbpedia.org/ontology/militaryConflict>)
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?bandMember WHERE {
  # Find the birthplace of Samir Bekric
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Find band members of Senidah
  ?senidahBandMember <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Senidah> .
  
  # Filter by native place matching the birthplace of Samir Bekric
  ?senidahBandMember <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
  FILTER (?birthPlace = ?nativePlace)
  
  BIND(?senidahBandMember AS ?bandMember)
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname ?almaMater WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  OPTIONAL {
    # Step 2: Identify the parent who is royalty of Prince George William of Hanover
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
    ?parent <http://www.w3.org/2000/01/rdf-schema#label> ?parentLabel .

    # Step 2.1: Find the child that is royalty of this parent
    ?child <http://dbpedia.org/ontology/child> ?parent .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Identify the child of Ernest Augustus, Crown Prince of Hanover
    ?erChild <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
    
    # Ensure the spouse is linked through these relationships
    FILTER(?spouse = ?child)
  }
}
```",5,7,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?native WHERE {
  ?election <http://dbpedia.org/ontology/politicalLeader> ?leader .
  FILTER(?election = <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election>)
  ?leader a <http://dbpedia.org/ontology/Politician> .
  
  OPTIONAL {
    ?leader <http://dbpedia.org/property/residence> ?residence .
    ?residence <http://www.w3.org/2006/vcard/ns#country-name> ?country .
  }
  
  ?person <http://dbpedia.org/ontology/nativeOf> ?country .
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Actor of ""The Departed""
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  FILTER(STRSTARTS(LCASE(?movie), ""the departed""))

  # Native of Hub City (assuming Hub City refers to a known city, e.g., Columbia, South Carolina)
  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Columbia,_South_Carolina> .
  }

  # Actor in a movie/work/television show with Roz Ryan
  ?work <http://dbpedia.org/ontology/starring> ?actor ;
        <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .

  FILTER(STRSTARTS(LCASE(?work), ""movie"") || STRSTARTS(LCASE(?work), ""television show""))
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?commander ?claimToFame WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  
  OPTIONAL {
    ?gibraltarEvent <http://dbpedia.org/property/commander> ?commander .
    FILTER (STRSTARTS(STR(?gibraltarEvent), ""http://dbpedia.org/resource/Great_Siege_of_Gibraltar""))
    ?commander <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?actor WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Actor> ;
          <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Narrator> ;
          <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Producer> .
  ?claimToFame <http://dbpedia.org/property/claimToFame> ?person .
  ?claimToFame <http://www.w3.org/2002/07/owl#sameAs> ?film .
  ?claimToFame <http://www.w3.org/2002/07/owl#sameAs> ?conflict .
  ?film <http://dbpedia.org/ontology/castMember> ?actor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"```sparql
SELECT ?manager WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?coach .
    ?coach <http://www.w3.org/2000/01/rdf-schema#label> ?managerLabel .
    FILTER (CONTAINS(LCASE(?managerLabel), ""japan""))  # Assuming the label contains 'Japan' for native check
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    FILTER (
      EXISTS { ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label . FILTER (CONTAINS(LCASE(?label), ""japan"")) }
      && EXISTS { ?almaMater <http://dbpedia.org/ontology/type> ?type1 . FILTER (?type1 = <http://dbpedia.org/class/yago/JapaneseOrganizations1000000010>) }
      && EXISTS { ?almaMater <http://dbpedia.org/ontology/type> ?type2 . FILTER (?type2 = <http://dbpedia.org/class/yago/JapaneseUniversitiesAndColleges1000000010>) }
      && EXISTS { ?almaMater <http://dbpedia.org/ontology/type> ?type3 . FILTER (?type3 = <http://dbpedia.org/class/yago/EducationalInstitutions1000000010>) }
    )
  }

  OPTIONAL {
    ?coach <http://dbpedia.org/ontology/alumniOf> ?almaMater .
  }

  FILTER EXISTS { ?coach } 
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor ?child WHERE {
  # Query for actors in ""Dog Soldiers"" film
  OPTIONAL {
    <http://dbpedia.org/resource/Dog_Soldiers> <http://dbpedia.org/ontology/castMember> ?actor .
  }
  
  # Query for child of Jon Pertwee
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jon Pertwee""@en .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    FILTER(?birthName = ""John Julian Pertwee"")
    ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/London> .
    ?person <http://dbpedia.org/ontology/child> ?child .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?force ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryService> ?service .
    ?service <http://www.w3.org/2004/02/skos/core#broader> ?force .
  }
  
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> .
    ?awardee <http://dbpedia.org/ontology/war> ?war .
  }
}
```",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?native WHERE {
  ?leader <http://dbpedia.org/ontology/politicalParty> ?party .
  ?election <http://dbpedia.org/property/electionYear> ""2010""^^xsd:integer .
  ?election <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108069068> .
  ?residence <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?profession ?person ?spouse WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/profession> ?profession .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
SELECT ?fatherParty ?prodiParty WHERE {
  OPTIONAL {
    # Find the father of Lamberto Andreotti and his party
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/politicalParty> ?fatherParty .
  }
  
  OPTIONAL {
    # Find the party of Romano Antonio Prodi
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://www.w3.org/2002/07/owl#sameAs> ?prodiPerson .
    ?prodiPerson <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
    
    # Check for reference to Partito Popolare Italiano
    OPTIONAL {
      ?prodiPerson <http://www.w3.org/2000/01/rdf-schema#seeAlso> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .
    }
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"```sparql
SELECT ?player WHERE {
  OPTIONAL {
    # Identify the team managed by Leonid Slutsky
    <http://dbpedia.org/resource/Leonid_Slutsky> <http://dbpedia.org/ontology/teamManaged> ?team .
    
    # Ensure the team is a soccer club and sports team season
    ?team <http://www.w3.org/2002/07/owl#sameAs> ?soccerClub .
    ?soccerClub rdf:type <http://dbpedia.org/class/yago/SoccerClubs100000000> .
    
    ?team rdf:type <http://dbpedia.org/class/yago/SportsTeamSeasons100000000> .

    # Find the manager of this team who is a sports manager
    ?team <http://dbpedia.org/ontology/coach> ?manager .
    ?manager rdf:type <http://dbpedia.org/class/yago/SportsManagers100000000> .

    # Retrieve players associated with this manager
    ?player <http://dbpedia.org/property/playerIn> ?manager .
  }
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","```sparql
SELECT DISTINCT ?producer WHERE {
  # Step 1: Find all musical artists associated with Chris Taylor
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> .
  
  # Step 2: Filter for rappers among these artists
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Rapper> .
  
  # Step 3: Find works by these rappers that are musical works and songs
  ?artist <http://purl.org/dc/terms/creator> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> ;
        <http://dbpedia.org/ontology/Song> .

  # Step 4: Identify professionals involved as producers in these works
  ?work <http://dbpedia.org/property/producers> ?producer .
}
```",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?administrationSettlement ?almaMater WHERE {
  OPTIONAL {
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?admin .
    ?admin <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?settlement a <http://dbpedia.org/class/yago/Settlements100000001> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",3,4,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
SELECT ?party WHERE {
  ?prodi <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?prodi <http://dbpedia.org/ontology/politicalParty> ?party .
  
  OPTIONAL {
    ?party <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""italian people's party"") && CONTAINS(LCASE(?label), ""1994""))
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus <http://dbpedia.org/ontology/successor> ?successor .
  
  FILTER(?antiochus = <http://dbpedia.org/resource/Antiochus_IV_Epiphanes>) # Assuming this is the correct resource

  # Step 2: Find the successor
  ?successor a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Determine the child of the successor
  ?successor <http://dbpedia.org/ontology/child> ?child .
  
  # Ensure the child is royalty
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Identify the spouse of that child
  ?child <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/mayor> ?mayor .
    ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
}
```",3,4,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?country WHERE {
  # Query to find Bob Heffron's birthplace which is a country
  OPTIONAL { 
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Country108067> .
    BIND(?birthPlace AS ?country)
  }
  
  # Query to find wars involving the New Zealand Army
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/foughtBy> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?war <http://dbpedia.org/property/location> ?location .
    ?location <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Country108067> .
    BIND(?location AS ?country)
  }
  
  # Ensure the entity is a country
  FILTER (?country != UNDEF && EXISTS { ?country <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/Country108067> })
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?associatedArtist WHERE {
  OPTIONAL {
    # Step 1: Find Fredrik Thordendal's band
    ?band a <http://dbpedia.org/ontology/Band> ;
          <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Organisation> ;
          <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
    
    # Step 4: Find associated musical artist of Fredrik Thordendal's band
    ?band <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    # Step 2: Find S.A. Slayer's associated musical artists
    <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }

  OPTIONAL {
    # Step 3: Find Don Dokken's band
    ?donBand a <http://dbpedia.org/ontology/Band> ;
             <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Organisation> ;
             <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Don_Dokken> .
    
    # Find associated musical artist of Don Dokken's band
    ?donBand <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Find parents of Nefertari's children
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
    ?child <http://dbpedia.org/ontology/birthParent> ?parentNefertari .
  }
  
  # Find parents of Ramesses II's children
  OPTIONAL {
    ?child2 <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
    ?child2 <http://dbpedia.org/ontology/birthParent> ?parentRamesses .
  }
  
  # Find common parents
  FILTER (?parentNefertari = ?parentRamesses)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?band WHERE {
  OPTIONAL { 
    ?reference <http://dbpedia.org/ontology/band> ?band .
    ?reference <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Newsted> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Newsted> .
    <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/band> ?band .
  }
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?bandOfJoseph ?associatedArtistOfJim WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael_Furney> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandOfJoseph .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistOfJim .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT DISTINCT ?professionWar ?beauchampSeymourWar WHERE {
  # Step 1: Find military units in the New Zealand Army and their professions
  ?unit <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?unit <http://dbpedia.org/ontology/profession> ?profession .

  # Step 2: Find office holders who are politicians related to the profession
  ?person <http://dbpedia.org/ontology/profession> ?profession ;
          <http://dbpedia.org/ontology/officeHolder> ?office ;
          <http://dbpedia.org/ontology/politician> ?politician .

  # Step 3: Find wars associated with these professionals
  ?person <http://dbpedia.org/property/war> ?professionWar .

  # Step 4: Find the war(s) of Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/property/war> ?beauchampSeymourWar .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
# Query to find actors of ""The Departed""
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Departed> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie500000001>.
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/castMember> ?actor .
}

UNION

# Query to find actors of a movie that is also a work and television show
SELECT ?actor WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie500000001> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work500000002> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow500000003> .
  ?movie <http://dbpedia.org/ontology/castMember> ?actor .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
SELECT ?almaMater ?settlement ?reference WHERE {
  # Alma mater of George K. Nash's administration
  OPTIONAL {
    ?nash <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://dbpedia.org/property/almaMater> ?almaMater .
    FILTER(?nash = <http://dbpedia.org/resource/George_K._Nash>)
  }
  
  # Entity in Green's administration that is a settlement
  OPTIONAL {
    ?green <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://dbpedia.org/ontology/member> ?entity .
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Settlement108069627> .
    OPTIONAL { ?entity <http://xmlns.com/foaf/0.1/page> ?reference . }
    FILTER(?green = <http://dbpedia.org/resource/Andrew_Green_(politician)>)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  # Find the event involving Rutger Jan Schimmelpenninck
  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:Event ;
         rdf:type dbo:MilitaryConflict .
  ?event dbo:agent <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .

  # Find the commander in the German campaign of 1813
  ?campaign rdf:type dbo:Event ;
            rdf:type dbo:MilitaryConflict ;
            rdfs:label ""German campaign of 1813""@en .
  ?commander dbo:commanderIn ?campaign .
  
  # Link to the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment <http://dbpedia.org/ontology/commander> ?commander ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  # Find the military force associated with both
  ?event dbo:militaryForce ?militaryForce .
  ?campaign dbo:militaryForce ?militaryForce .
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?pisaguaWar ?rinconadaWar WHERE {
  OPTIONAL {
    ?battlePisagua <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> .
    ?battlePisagua <http://dbpedia.org/property/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?pisaguaWar .
  }
  
  OPTIONAL {
    ?battleRinconada <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> .
    ?battleRinconada <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?rinconadaWar .
  }
}
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entityInNashville ?lukeLeaRestingPlace ?edwinKeebleRestingPlace WHERE {
  OPTIONAL {
    ?entity <http://www.geonames.org/ontology#featureClass> ""P"" .
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
    BIND(?entity AS ?entityInNashville)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/finalBurial> ?lukeLeaRestingPlace .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/finalBurial> ?edwinKeebleRestingPlace .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?murdaMookBand ?shellbackWriterBand WHERE {
  # Band of Murda Mook
  OPTIONAL { 
    <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?murdaMookBand .
  }

  # Works by Shellback (record producer)
  ?work <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Shellback_(record_producer)> .

  # Writer of the work
  OPTIONAL {
    ?work <http://purl.org/dc/terms/creator> ?writer .
    
    # Band of the writer
    ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?shellbackWriterBand .
  }
}
```",4,5,5,3,2,3,2,20,1,9,0,0.1,1.0,0.18181818181818182
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?simonRestingPlace ?alanRestingPlace ?grandchildRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?simonRestingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham_(British_officer)> <http://dbpedia.org/ontology/deathPlace> ?alanRestingPlace .
  }

  OPTIONAL {
    {
      SELECT ?grandchild WHERE {
        ?parent <http://dbpedia.org/ontology/birthName> ""William Haliburton"" .
        ?parent <http://dbpedia.org/ontology/child> ?child .
        ?child <http://dbpedia.org/ontology/child> ?grandchild .
      }
    }
    ?grandchild <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandMemberDonDokken ?associatedArtistRedTide ?finalAssociatedArtist WHERE {
  # Step 1: Find band members of Don Dokken
  OPTIONAL {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMemberDonDokken .
  }

  # Step 2: Find associated musical artist of Red Tide
  OPTIONAL {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtistRedTide .
  }

  # Step 3: Find associated musical artist of the associated musical artist of Watchtower
  OPTIONAL {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?intermediateArtist .
    ?intermediateArtist <http://dbpedia.org/property/associatedMusicalArtist> ?finalAssociatedArtist .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?club ?nickname WHERE {
  ?club a <http://dbpedia.org/ontology/SportsClub> ;
        a <http://dbpedia.org/ontology/Organization> ;
        a <http://dbpedia.org/ontology/SoccerClub> .
  
  ?club <http://dbpedia.org/property/teamMember> <http://dbpedia.org/resource/Armando_Heeb> .
  ?club <http://dbpedia.org/property/teamMember> <http://dbpedia.org/resource/Alessandro_Mangiarratti> .

  OPTIONAL { 
    ?club <http://www.w3.org/2006/vcard/ns#nickname> ?nickname .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?satterthwaiteDecedent ?algiersDecedent WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://www.w3.org/2002/07/owl#sameAs> ?work .
    ?work <http://dbpedia.org/ontology/decedent> ?satterthwaiteDecedent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/decedent> ?algiersDecedent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,16,0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT DISTINCT ?bandMemberDonDokken ?associatedArtistWatchtower ?furtherAssociatedArtist WHERE {
  # Find band members of Don Dokken's associated musical artists
  OPTIONAL {
    ?artist a <http://dbpedia.org/ontology/MusicalArtist> ;
            <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> .
    ?artist <http://dbpedia.org/ontology/memberOf> ?bandMemberDonDokken .
  }

  # Find associated musical artists of Watchtower's associated musical artists
  OPTIONAL {
    ?watchtowerArtist a <http://dbpedia.org/ontology/MusicalArtist> ;
                      <http://dbpedia.org/property/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .
    ?watchtowerArtist <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtistWatchtower .
    ?associatedArtistWatchtower <http://dbpedia.org/property/associatedMusicalArtist> ?furtherAssociatedArtist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
SELECT ?bandMemberJohnPettibone ?bandMemberSledgeback WHERE {
  OPTIONAL {
    ?band <http://dbpedia.org/ontology/member> ?person .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""John Pettibone""@en .
    ?band <http://dbpedia.org/ontology/member> ?bandMemberJohnPettibone .
  }
  
  OPTIONAL {
    ?sledgebackBand <http://dbpedia.org/ontology/member> ?bandMemberSledgeback .
    ?sledgebackBand <http://www.w3.org/2000/01/rdf-schema#label> ""Sledgeback""@en .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?almaMater ?residenceCountry WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
    BIND(?residence AS ?residenceCountry)
  }
}
```",3,4,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?capital ?restingPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?capital .
  }
  OPTIONAL {
    ?hero <http://dbpedia.org/ontology/title> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> ;
          <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    BIND(?deathPlace AS ?restingPlace)
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?person <http://dbpedia.org/property/awards> ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""eric gregory award""))
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?person <http://dbpedia.org/ontology/profession> ?profession1 .
  ?person <http://dbpedia.org/ontology/profession> ?profession2 .
  FILTER(CONTAINS(LCASE(STR(?profession1)), ""writer"") && CONTAINS(LCASE(STR(?profession2)), ""poet""))
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?entityName .
  FILTER(CONTAINS(LCASE(STR(?entityName)), ""nottinghamshire""))
  ?person <http://dbpedia.org/property/livesIn> ?entity .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?deathPlace ?birthPlace ?administration WHERE {
  OPTIONAL {
    # Death place of Yūki Hideyasu's father (a politician)
    <http://dbpedia.org/resource/Yuki_Hideyasu> <http://xmlns.com/foaf/0.1/familyName> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Birth place of Enomoto Takeaki
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  OPTIONAL {
    # Administration of Emperor Go-Mizunoo's father
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://xmlns.com/foaf/0.1/familyName> ?father .
    ?father <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
SELECT ?party WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Panama> .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Arnulfo Arias Madrid""@en .
  ?person a <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/party> ?party .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?professional ?band WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://purl.org/dc/terms/subject> ?professional .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Francis_Vibert> <http://dbpedia.org/ontology/associatedBand> ?band .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?bandMember ?personBand WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?bandMember .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael Furney""@en .
    ?person <http://dbpedia.org/property/birthName> ""Joseph Michael Furney"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?personBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL {
    ?book <http://purl.org/dc/terms/creator> ?author .
    ?book <http://dbpedia.org/property/title> ""The Twelve Abbots of Challant"" .
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","```sparql
SELECT ?fatherOfWilliamErnest ?grandChild WHERE {
  # Step 1: Find the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach
  <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?fatherOfWilliamErnest .

  # Step 2: Find the children of Grand Duchess Maria Pavlovna who are royalty
  {
    SELECT ?royalChild WHERE {
      <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)> <http://dbpedia.org/ontology/child> ?royalChild .
      ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    }
  }

  # Step 3: Find the child of each royal child identified in step 2
  OPTIONAL {
    ?royalChild <http://dbpedia.org/ontology/child> ?grandChild .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?parentGéza ?parentIlona ?grandchildLadislaus WHERE {
  # Find parent of Géza von Habsburg
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/birthParent> ?parentGéza .

  # Find parent of Archduchess Ilona of Austria
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parentIlona .

  # Find the royalty parent of Archduke Ladislaus Philipp of Austria
  OPTIONAL {
    <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/birthParent> ?parentLadislaus .
    FILTER(?parentLadislaus <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>) .

    # Find the child of this royalty parent
    OPTIONAL {
      ?parentLadislaus <http://dbpedia.org/ontology/birthChild> ?childLadislaus .
      
      # Find the grandchild (child of the child)
      OPTIONAL {
        ?childLadislaus <http://dbpedia.org/ontology/birthChild> ?grandchildLadislaus .
      }
    }
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?birthPlace WHERE {
  # Find the military conflict (war) involving Saitō Hajime
  ?war <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/Sait%C5%8D_Hajime> .
  
  # Ensure it is a military conflict, event, and societal event
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
       rdf:type <http://dbpedia.org/ontology/Event> ;
       rdf:type <http://dbpedia.org/ontology/SocietalEvent> .
  
  # Find the commander of that war
  ?war <http://dbpedia.org/property/commander> ?commander .

  # Get the birthplace of the identified commander
  ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?commander ?decedent WHERE {
  OPTIONAL {
    ?francoHovaWar <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(CONTAINS(LCASE(STR(?francoHovaWar)), ""franco-hova wars""))
  }
  
  OPTIONAL {
    ?district <http://www.geonames.org/ontology#capital> ?capital .
    ?capital <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlements1000000InAlgeria>.
    FILTER(STR(?district) = ""Khemis Miliana District"")
    
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    FILTER(STR(?deathPlace) = STR(?capital))
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?war ?force WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/war> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryUnit> ?force .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?capital ?restingPlace WHERE {
  OPTIONAL {
    # Find the country associated with Armed Forces of South Russia and its capital
    <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?country .
    ?country <http://dbpedia.org/property/capital> ?capital .
  }
  OPTIONAL {
    # Find the resting place of Nina Onilova
    <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,3,1,0.0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?country WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  OPTIONAL { 
    ?election <http://dbpedia.org/ontology/politician> ?leader .
    FILTER(STRSTARTS(STR(?election), ""http://dbpedia.org/resource/1962_New_South_Wales_state_election""))
  }

  # Step 2: Determine the birthplace country of this politician
  OPTIONAL {
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    FILTER(LANG(?countryLabel) = ""en"")
  }

  # Step 3: Identify wars involving Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?war .
  }

  # Step 4: Identify wars involving the New Zealand Army
  OPTIONAL {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/war> ?war .
  }

  # Find common entities in these wars that match the birthplace country
  FILTER(?countryLabel = ?country)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find the founding year of Eel Pie Publishing
  <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?foundingYear .

  # Find persons born in that year and are composers
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
  FILTER (YEAR(?birthDate) = ?foundingYear)
  
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Composer> .
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
SELECT ?parentOfErnestAugustus ?childOfFatherOfSpouse WHERE {
  # Parent of Prince Ernest Augustus of Hanover (born 1914)
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/birth> ?birth .
  FILTER(YEAR(?birth) = 1914)
  OPTIONAL { 
    <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/familyName> ?familyName .
    ?person <http://dbpedia.org/property/name> ""Ernest Augustus"" .
    ?person <http://dbpedia.org/ontology/birth> ?birth .
    FILTER(YEAR(?birth) = 1914)
    ?person <http://dbpedia.org/ontology/familyName> ?familyName .
    ?person <http://dbpedia.org/ontology/parent> ?parentOfErnestAugustus .
  }

  # Child of the father of the spouse of Princess Victoria Louise of Prussia
  OPTIONAL {
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/father> ?fatherOfSpouse .
    ?fatherOfSpouse <http://dbpedia.org/ontology/child> ?childOfFatherOfSpouse .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?father WHERE {
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/father> ?father .
    ?child <http://dbpedia.org/ontology/mother> <http://dbpedia.org/resource/Elena_Vladimirovna_of_Russia> .
  }
  OPTIONAL {
    ?child2 <http://dbpedia.org/ontology/father> ?father .
    ?child2 <http://dbpedia.org/ontology/mother> ?mother .
    ?mother <http://www.w3.org/2000/01/rdf-schema#label> ""Elena Vladimirovna of Russia""@en .
  }
  OPTIONAL {
    ?child3 <http://dbpedia.org/ontology/father> ?father .
    ?child3 <http://dbpedia.org/ontology/mother> ?mother2 .
    ?mother2 <http://www.w3.org/2000/01/rdf-schema#label> ""George I of Greece""@en .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander ?awardee WHERE {
  OPTIONAL {
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    ?force <http://dbpedia.org/resource/Ferenc_Szálasi> <http://www.w3.org/2002/07/owl#sameAs> ?relatedEntity .
  }
  OPTIONAL {
    ?award <http://dbpedia.org/property/awardee> ?awardee .
    ?award <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://www.w3.org/2002/07/owl#sameAs> ?relatedEntity .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","```sparql
SELECT ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/vcard/ns#hasTimezone> ?timeZone .
  }
  OPTIONAL {
    ?timeZone <http://dbpedia.org/ontology/inRegion> ?region .
  }
  ?entity <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2006/vcard/ns#adr> ?address .
  ?address <http://purl.org/dc/terms/spatial> ?region .
}
```",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/child> ?parent .
  <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?person ?birthName WHERE {
  ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/birthName> ?birthName .
  }
}
```",3,3,4,3,1,3,3,71,90,467,0,0.1615798922800718,1.0,0.2782071097372488
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
SELECT ?arnulfoParty ?commanderParty WHERE {
  # Find Arnulfo Arias's party
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/memberOf> ?arnulfoParty .
    ?arnulfoParty <http://www.w3.org/2000/01/rdf-schema#label> ?arnulfoLabel .
  }
  
  # Find the commander during the United States invasion of Panama and their party
  OPTIONAL {
    <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/memberOf> ?commanderParty .
    ?commanderParty <http://www.w3.org/2000/01/rdf-schema#label> ?commanderLabel .
  }
  
  # Ensure both are politicians
  FILTER EXISTS { ?arnulfoParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108930069> . }
  FILTER EXISTS { ?commanderParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108930069> . }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find children of Seleucus II Callinicus who are royalty
  ?royalChild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?royalChild a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of these royal children
  ?grandchild <http://dbpedia.org/ontology/parent> ?royalChild .

  # Step 3: Identify the parent of Nysa (wife of Pharnaces I of Pontus)
  OPTIONAL {
    ?nysaParent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> .
    
    # Step 4: Match the grandchild with Nysa's parent
    FILTER(?grandchild = ?nysaParent)
  }
}
```",3,4,4,2,2,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?force WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Lac_d%27Avoriaz> .
    ?awardee <http://www.w3.org/2000/01/rdf-schema#label> ""Lac d'Avoriaz""@en .
  }
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.geonames.org/ontology#featureClass> ""P""^^<http://www.w3.org/2001/XMLSchema#string> . # P for populated place
    FILTER(CONTAINS(LCASE(?location), ""france""))
  }
  OPTIONAL {
    ?awardee <http://dbpedia.org/property/hasForce> ?force .
  }
}
```",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Joseph Michael"" .
  ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/band> ?band .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","```sparql
SELECT ?commander ?satterthwaiteDecedent ?algiersDecedent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?commander .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/property/decedent> ?satterthwaiteDecedent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/decedent> ?algiersDecedent .
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  ?person <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER(CONTAINS(LCASE(STR(?birthPlace)), ""london""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?entity WHERE {
  OPTIONAL {
    # Find the commander's residence which is a country
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Diamond_Rock>)
    ?commander <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?residence .
    ?residence <http://www.w3.org/2002/07/owl#sameAs> ?country .
  }
  
  OPTIONAL {
    # Find Sylvia Pankhurst's alma mater
    <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }

  # Match the entity that is both a residence and an alma mater
  FILTER(?residence = ?almaMater)
  BIND(?residence AS ?entity)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace ?administration WHERE {
  OPTIONAL {
    # Find Yūki Hideyasu's father who is a politician
    <http://dbpedia.org/resource/Yuki_Hideyasu> <http://xmlns.com/foaf/0.1/familyName> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Find the administration of Emperor Go-Yōzei
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/property/administration> ?administration .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?work ?territory WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Constitution_of_Iceland#Article_62> <http://www.w3.org/2000/01/rdf-schema#comment> ?work .
  }
  OPTIONAL {
    ?iceland <http://purl.org/dc/terms/description> ""Land of Fire and Ice""@en .
    ?iceland <http://dbpedia.org/ontology/administers> ?territory .
  }
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Step 1: Find bands associated with Žika Jelić that are both Band and Group
  ?band a <http://dbpedia.org/ontology/Band> ;
        a <http://dbpedia.org/ontology/Group> .
  
  ?member a <http://dbpedia.org/ontology/MusicalArtist> ;
          a <http://dbpedia.org/ontology/Artist> ;
          <http://dbpedia.org/ontology/member> ?band .

  # Žika Jelić is a member of these bands
  FILTER(?member = <http://dbpedia.org/resource/Žika_Jelić>)

  # Step 2: Find band members of Kerber
  ?kerberBand a <http://dbpedia.org/ontology/Band> ;
              <http://dbpedia.org/ontology/member> ?overlappingMember .

  FILTER(?overlappingMember = ?member)
  
  # Kerber is a member of these bands
  FILTER(?overlappingMember = <http://dbpedia.org/resource/Kerber_(band)>)

  # Step 3: Return the band(s) that this overlapping member belongs to
  ?overlappingBand a <http://dbpedia.org/ontology/Band> ;
                   <http://dbpedia.org/ontology/member> ?overlappingMember .
  
  BIND(?overlappingBand AS ?band)
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?commanderEvent ?militaryForceEvent WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
    ?event a <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Assuming 'MilitaryConflict' is the class for military events
    BIND(?event AS ?commanderEvent)
  }
  
  OPTIONAL {
    ?event2 <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Francisco_Franco> .
    ?event2 a <http://dbpedia.org/class/yago/SocietalEvent108069068> . # Assuming 'SocietalEvent' is the class for societal events
    ?event2 a <http://dbpedia.org/class/yago/MilitaryConflict108069068> . # Reusing 'MilitaryConflict' for military conflicts
    BIND(?event2 AS ?militaryForceEvent)
  }
}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  ?person <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Senidah> .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","```sparql
SELECT ?actor1 ?nativePerson ?actor2 WHERE {
  # Actor of ""All About the Andersons""
  OPTIONAL { 
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor1 .
  }
  
  # Native of ""Hub City""
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> ;
            <http://dbpedia.org/ontology/birthPlace> ?hubCity .
    FILTER(CONTAINS(LCASE(?hubCity), ""hub city""))
    BIND(?person AS ?nativePerson)
  }
  
  # Actor of Michael Ballhaus's claim to fame
  OPTIONAL {
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/notableWork> ?claimToFame .
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor2 .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
SELECT ?almaMaterSanMarcos ?almaMaterSotomayor WHERE {
  OPTIONAL { 
    ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> .
    ?alumnus <http://dbpedia.org/ontology/almaMater> ?almaMaterSanMarcos .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?almaMaterSotomayor .
  }
}
```",3,3,4,2,2,2,2,9,2,47,0,0.04081632653061224,1.0,0.07843137254901959
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?endaraParty ?ariasParty ?panamaEntity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?endaraParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?ariasParty .
  }
  OPTIONAL {
    ?panamaEntity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""panama""))
  }
}
```",3,3,4,1,3,2,3,28,1,4236,0,0.0002360160490913382,1.0,0.00047192071731949034
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?lukeLeaRestingPlace ?architectRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/deathPlace> ?lukeLeaRestingPlace .
  }
  OPTIONAL {
    ?house <http://dbpedia.org/property/architect> ?architect .
    ?architect <http://dbpedia.org/ontology/deathPlace> ?architectRestingPlace .
    FILTER(?house = <http://dbpedia.org/resource/P._D._Houston_Jr._House>)
  }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?finalLeader WHERE {
  # Step 1: Find Gustav Jonson's office
  ?office <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Gustav_Jonson> .
  
  # Step 2: Identify the leader of that office
  ?office <http://dbpedia.org/ontology/leader> ?intermediateLeader .

  # Step 3: Check if this leader's office is part of a government agency
  OPTIONAL {
    ?agency <http://www.w3.org/ns/org#head> ?intermediateLeader .
    ?agency <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Government_agency> .
    
    # Step 4: Find the leader of this government agency
    ?agency <http://www.w3.org/ns/org#head> ?finalLeader .
  }
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?software ?entity WHERE {
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Joy> .
  ?work <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Software100000031> .
  ?work rdfs:label ?software .
  
  OPTIONAL {
    ?entity <http://www.w3.org/ns/org#hasMemberOrSubOrganization> ?work .
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?rifWarForce ?civilWarForce ?molaForce WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?civilWarForce .
  }
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?molaForce .
  }
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?redTideArtist ?dokkenBandMember ?saSlayerArtist WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Donald Maynard Dokken""@en .
    ?person <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> .
    ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musical_artist> .
    ?bandMember <http://dbpedia.org/ontology/bandMember> ?person .
    BIND(?bandMember AS ?dokkenBandMember)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?saSlayerArtist .
  }
}
```",4,5,5,2,3,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?militaryForce ?commander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/participatingMilitaryUnit> ?militaryForce .
  }
  OPTIONAL {
    ?militaryForce <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Emilio_Mola> .
    BIND(<http://dbpedia.org/resource/Emilio_Mola> AS ?commander)
  }
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?awardeeAlmaMater ?johnAlderdiceAlmaMater WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Royal_Medal> .
    ?person <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?johnAlderdiceAlmaMater .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?native ?reference WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlement .
    ?native <http://dbpedia.org/ontology/nativeOf> ?settlement .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/reference> ?reference .
    FILTER(?reference = <http://dbpedia.org/resource/Manfred_Mann>)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?warOfGahn ?otherWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?warOfGahn .
    FILTER (?warOfGahn <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Military_conflict>)
  }
  
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/commanded> ?peninsularWarCommand .
    ?peninsularWarCommand <http://dbpedia.org/ontology/war> <http://dbpedia.org/resource/Peninsular_War> .
    ?commander <http://dbpedia.org/ontology/commanded> ?otherWarCommand .
    ?otherWarCommand <http://dbpedia.org/ontology/war> ?otherWar .
    FILTER (?otherWar <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Military_conflict>)
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?awardee ?force WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/elevation> ?elevation .
    ?elevation <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Lac_d%27Avoriaz> .
    ?event <http://dbpedia.org/ontology/awardee> ?awardee .
  }
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/member> ?force .
  }
}
```",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT ?awardWar ?nzArmyWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/war> ?awardWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/war> ?nzArmyWar .
  }
}
```",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find producer of ""Used to Love Her""
  ?song <http://dbpedia.org/ontology/producer> ?producer .
  FILTER(STR(?song) = ""Used_to_Love_Her"")

  # Step 2: Find band associated with this producer
  ?producer <http://dbpedia.org/property/memberOfBand> ?band .

  # Step 3: Get members of this band
  ?band <http://dbpedia.org/ontology/member> ?bandMember .

  UNION

  # Step 4 and 5: Find members of ""Newsted""
  ?newsted <http://dbpedia.org/resource/Newsted> .
  ?newsted <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?result .
  ?person a <http://dbpedia.org/ontology/BeautyQueen> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Indonesia> ;
            <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Indonesia> .
  }
}
```",3,4,4,2,2,3,2,20,19,1984,0,0.009485771342985522,1.0,0.018793273986152326
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?headquarter ?child ?birthPlace WHERE {
  # Query for the headquarters of Royal Dublin Society
  OPTIONAL { 
    <http://dbpedia.org/resource/Royal_Dublin_Society> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
  
  # Query for the child of Desmond FitzGerald who is a politician and office holder
  OPTIONAL {
    <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?child <http://dbpedia.org/ontology/officeHolder> ?office .
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?militaryForce WHERE {
  # Find the military force commanded by Emilio Mola
  ?force <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> .
  
  # Ensure this force is part of the Spanish Civil War
  ?civilWar <http://dbpedia.org/property/militaryForce> ?force ;
            <http://dbpedia.org/resource/Spanish_Civil_War> .

  # Find the societal event related to Francisco Franco that is also a military conflict
  ?societalEvent <http://www.w3.org/2002/07/owl#sameAs> ?civilWar ;
                 <http://purl.org/dc/terms/type> ?type1, ?type2 .
  
  FILTER(?type1 = <http://dbpedia.org/class/yago/SocietalEvents1000000010> &&
         ?type2 IN (<http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>) &&
         EXISTS { ?societalEvent <http://dbpedia.org/property/militaryForce> ?force . 
                  ?franco <http://dbpedia.org/ontology/associatedWith> ?societalEvent ;
                          <http://dbpedia.org/resource/Francisco_Franco> .
                }
  )
}
```",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?person a <http://dbpedia.org/class/yago/MusicalArtist108069068> ;
          a <http://dbpedia.org/class/yago/Artist100001846> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/The_Shadow_(rapper)> .
  ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?professional ?producer WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?entity .
    ?entity <http://dbpedia.org/ontology/profession> ?professional .
  }
  
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/producer> ?producer ;
          <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:50_Cent_songs> ;
          <http://purl.org/dc/terms/type> ?type .
    FILTER (?type IN (<http://dbpedia.org/class/yago/MusicalWork108930069>, <http://dbpedia.org/class/yago/Song106935786>))
  }
}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"```sparql
SELECT ?birthPlace ?ownerHeadquarter WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/property/owner> ?owner .
    ?owner <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?ownerHeadquarter .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"```sparql
SELECT ?province WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://xmlns.com/foaf/0.1/residence> ?residence .
    ?residence a <http://dbpedia.org/class/yago/Settlement108069068> .
    ?residence <http://www.w3.org/2006/vcard/ns#country-name> ""Italy"" .
    ?residence <http://dbpedia.org/ontology/province> ?province .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Dino Merlin"" .
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?administration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Jon Pertwee""@en .
  ?person <http://dbpedia.org/ontology/child> ?result .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?birthPlaceEnomoto ?deathPlaceTokugawa ?administrationGoYozei WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceEnomoto .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceTokugawa .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/property/reign> ?administrationGoYozei .
  }
}
```",3,3,4,1,3,3,3,71,1,3,0,0.25,1.0,0.4
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
SELECT ?author ?award ?professional WHERE {
  # Step 1: Identify the author of ""Understanding Comics""
  <http://dbpedia.org/resource/Understanding_Comics> <http://purl.org/dc/terms/creator> ?author .

  # Step 2: Find awards related to the author
  ?author <http://dbpedia.org/ontology/award> ?award .

  # Step 3: Determine the professional in the award
  OPTIONAL {
    ?award <http://dbpedia.org/property/recipient> ?professional .
  }
}
```",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?war ?commander ?fame WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/claimToFame> ?fame .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?country WHERE {
  # Find the birthplace of Bob Heffron which is a country
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
  OPTIONAL { 
    ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067069> .
  }

  # Find the war associated with a Knight Grand Cross of the Order of the Bath awardee
  ?person <http://dbpedia.org/ontology/nationality> ?nationality .
  ?person <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
  ?person <http://dbpedia.org/ontology/war> ?war .

  # Ensure the country is associated with a war
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabelWar .
  FILTER (lang(?countryLabelWar) = 'en')
  OPTIONAL { 
    ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067069> .
  }

  # Match the country from both queries
  FILTER (?countryLabel = ?countryLabelWar)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?conflict WHERE {
  ?conflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
  ?conflict a <http://dbpedia.org/ontology/MilitaryConflict> ;
           a <http://dbpedia.org/ontology/Event> .

  OPTIONAL {
    ?person <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Algiers> .
    ?person <http://dbpedia.org/ontology/diedDuring> ?conflict .
  }

  OPTIONAL {
    ?work <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/Joseph_C._Satterthwaite> ;
         <http://purl.org/dc/terms/relation> ?conflict .
  }
}
```",5,7,6,2,3,3,3,71,0,1,1,0.0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?actor WHERE {
  ?actor <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/London> .
  ?actor <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
  
  OPTIONAL { 
    ?actor <http://purl.org/dc/terms/profession> [
      <http://www.w3.org/2004/02/skos/core#prefLabel> ""Actor"" ;
      <http://www.w3.org/2004/02/skos/core#prefLabel> ""Narrator"" ;
      <http://www.w3.org/2004/02/skos/core#prefLabel> ""Producer""
    ] .
  }
  
  OPTIONAL {
    ?claimToFame <http://dbpedia.org/ontology/actor> ?actor .
    ?claimToFame <http://purl.org/dc/terms/type> [
      <http://www.w3.org/2004/02/skos/core#prefLabel> ""Film"" ;
      <http://www.w3.org/2004/02/skos/core#prefLabel> ""Military conflict""
    ] .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?band WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://www.w3.org/2006/vcard/ns#bday> ?birthDate .
    ?person <http://www.w3.org/2006/vcard/ns#bday> ?birthDate .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
  }
}
```",3,3,4,2,2,3,3,71,1,12,0,0.07692307692307693,1.0,0.14285714285714288
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?spouse ?child ?parent WHERE {
  # Find the spouse of Aristotle Onassis
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Find a child of Tina Onassis Niarchos and their parent(s)
  OPTIONAL {
    <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2000/01/rdf-schema#label> ?childLabel .
    ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?burtonRestingPlace ?cunninghamRestingPlace ?actorRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/deathPlace> ?cunninghamRestingPlace .
  }
  OPTIONAL {
    ?show dbo:actor ?actor .
    ?actor foaf:name ""Emily Richard""@en .
    ?actor dbo:deathPlace ?actorRestingPlace .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?associatedArtist ?professional WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/alterEgo> ""The Shadow""@en .
    ?person <http://dbpedia.org/ontology/profession> ?professional .
  }
}
```",3,3,4,2,2,3,3,71,4,3,0,0.5714285714285714,1.0,0.7272727272727273
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
SELECT ?region ?work WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://www.w3.org/2006/time#duringRegion> ?region .
  }
  OPTIONAL {
    ?book <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Iceland> ;
          <http://dbpedia.org/ontology/author> ?author .
    ?author <http://dbpedia.org/property/authoredBook> ?work .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?awardee ?commandedForce WHERE {
  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> ""Order of Suvorov"" .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/property/commanderInForce> ?commandedForce .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?childParent ?loeThaiParent WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?childParent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?loeThaiParent .
  }
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
# Step 1: Find associated musical artists of Watchtower
SELECT ?watchtowerArtist WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
}

# Step 2: For each watchtowerArtist, find their associated musical artists
SELECT DISTINCT ?secondLevelArtist WHERE {
  ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
  { SELECT ?watchtowerArtist WHERE {
      <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
    }
  }
}

# Step 3: Identify band members of Meshuggah that are bands/groups/organizations
SELECT DISTINCT ?meshuggahMember WHERE {
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?meshuggahMember .
  ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    ?type = <http://dbpedia.org/class/yago/Band115069068>
    || ?type = <http://dbpedia.org/class/yago/MusicalGroup1000000010>
    || ?type = <http://dbpedia.org/ontology/Organisation>
  )
}

# Step 4: For each meshuggahMember, find their associated musical artists
SELECT DISTINCT ?thirdLevelArtist WHERE {
  ?meshuggahMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?thirdLevelArtist .
  { SELECT DISTINCT ?meshuggahMember WHERE {
      <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?meshuggahMember .
      ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
      FILTER (
        ?type = <http://dbpedia.org/class/yago/Band115069068>
        || ?type = <http://dbpedia.org/class/yago/MusicalGroup1000000010>
        || ?type = <http://dbpedia.org/ontology/Organisation>
      )
    }
  }
}

# Combine results from Step 2 and Step 4
SELECT DISTINCT ?artist WHERE {
  { SELECT ?secondLevelArtist AS ?artist WHERE {
      ?watchtowerArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
      { SELECT ?watchtowerArtist WHERE {
          <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?watchtowerArtist .
        }
      }
    }
  }
  UNION
  { SELECT ?thirdLevelArtist AS ?artist WHERE {
      ?meshuggahMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?thirdLevelArtist .
      { SELECT DISTINCT ?meshuggahMember WHERE {
          <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?meshuggahMember .
          ?meshuggahMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
          FILTER (
            ?type = <http://dbpedia.org/class/yago/Band115069068>
            || ?type = <http://dbpedia.org/class/yago/MusicalGroup1000000010>
            || ?type = <http://dbpedia.org/ontology/Organisation>
          )
        }
      }
    }
  }
}
```

[[ ## completed ##",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
SELECT ?native ?actor WHERE {
  # Find the native city for ""Hub City""
  OPTIONAL { 
    <http://dbpedia.org/resource/Hub_City> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?native .
  }
  
  # Find actors of ""The Departed""
  OPTIONAL {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?actor .
  }

  # Ensure the same individual is both native and actor
  FILTER (?native = ?actor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commanderBiscay ?forceSpanishCivilWar ?forceRifWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commanderBiscay .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/participant> ?forceSpanishCivilWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/participant> ?forceRifWar .
  }
}
```",3,3,4,1,3,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT DISTINCT ?band WHERE {
  ?work <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Shellback_(record_producer)> .
  ?work a <http://dbpedia.org/class/yago/Work100000123> . # Assuming 'Work' is represented by this class
  OPTIONAL { 
    ?work <http://dbpedia.org/ontology/band> ?band .
  }
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandChild WHERE {
  # Step 1: Find Thinkhaya's child
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: The father of this child is Thinkhaya himself, so we find his children (grandchildren of Thinkhaya)
  ?grandChild <http://dbpedia.org/ontology/father> ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?territory WHERE {
  <http://dbpedia.org/resource/Reykjav%C3%ADk> <http://www.w3.org/2006/vcard/ns#hasSubordinateAdministrativeArea> ?territory .
}
```",4,7,5,2,3,2,3,28,0,0,1,0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?awardee ?person WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://purl.org/dc/terms/creator> ?award .
    ?award <http://www.w3.org/ns/org#hasMember> ?awardee .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
  }
}
```",3,3,4,2,2,2,3,28,0,1346,1,0.0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?parentMieszkoII ?royalChild ?grandchild WHERE {
  # Step 1: Find the parent of Mieszko II Lambert
  <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/father> ?parentMieszkoII .

  # Step 2: Find a child of that parent who is royalty
  OPTIONAL {
    ?parentMieszkoII <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }

  # Step 3: Find the parent of Mlada (abbess)
  OPTIONAL {
    <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/father> ?parentMlada .
  }

  # Step 4: Find a child of the royal child
  OPTIONAL {
    ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?party ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?party .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/locationCountry> ?country .
    ?entity <http://dbpedia.org/ontology/locationCountry> ?country .
  }
}
```",3,4,4,2,2,2,3,28,1,0,0,1.0,1.0,1.0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?region ?entity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?region .
  }
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> ;
            <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio> .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?spouse WHERE {
  ?parent <http://dbpedia.org/ontology/birth> <http://dbpedia.org/resource/Alexander_Onassis> .
  ?parent <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
SELECT ?personFrenchAlgeria ?personCapitalAlgeria WHERE {
  OPTIONAL {
    ?personFrenchAlgeria <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Algiers> <http://www.w3.org/2006/vcard/ns#hasAddress> ?addressCapital .
    ?personCapitalAlgeria <http://dbpedia.org/ontology/deathPlace> ?addressCapital .
  }
}
```",3,4,4,2,2,3,3,71,16,14,0,0.5333333333333333,1.0,0.6956521739130436
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley"" .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?war ?commanderClaimToFame WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
  }
  OPTIONAL {
    ?gibraltarEvent <http://dbpedia.org/property/commander> ?commander .
    FILTER(STRSTARTS(STR(?gibraltarEvent), ""http://dbpedia.org/resource/Great_Siege_of_Gibraltar""))
    ?commander <http://dbpedia.org/ontology/claimToFame> ?commanderClaimToFame .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandAmba ?bandShena ?personBornOnDate WHERE {
  # Band of Amba Shepherd
  OPTIONAL { 
    <http://dbpedia.org/resource/Amba_Shepherd> <http://xmlns.com/foaf/0.1/member> ?bandAmba .
  }
  
  # Band of Shèna
  OPTIONAL { 
    <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/member> ?bandShena .
  }

  # Person decedent at Zolotonosha who is an athlete and a soccer player
  OPTIONAL {
    ?personDecedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> ;
                    <http://www.w3.org/2002/07/owl#sameAs> ?athlete ;
                    <http://purl.org/dc/terms/type> ?type .
    FILTER (?type = <http://dbpedia.org/class/yago/Athlete108069068> && 
            ?athlete = <http://dbpedia.org/resource/Soccer_player>)
    ?personDecedent <http://dbpedia.org/ontology/birthDate> ?birthDate .
  }

  # Person born on the birth date of the person decedent
  OPTIONAL {
    ?personBorn <http://dbpedia.org/ontology/birthDate> ?birthDate .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ebony Reigns"" .
  ?person a <http://dbpedia.org/ontology/Artist>, <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
  }
}
```",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?commander WHERE {
  ?event <http://dbpedia.org/ontology/associatedWith> <http://dbpedia.org/resource/El_Director> .
  ?force <http://dbpedia.org/property/event> ?event .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?partyGiulioAndreotti ?partyMichelePinto ?reference WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?partyGiulioAndreotti .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto_(politician)> <http://dbpedia.org/ontology/party> ?partyMichelePinto .
    ?partyMichelePinto <http://www.w3.org/2000/01/rdf-schema#label> ?partyName .
    OPTIONAL { 
      ?partyMichelePinto <http://xmlns.com/foaf/0.1/page> ?reference .
    }
  }
}
```",4,4,5,3,2,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parentOfThadoMinsaw ?childPredecessor WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://www.w3.org/2002/07/owl#sameAs> ?thadoMinsaw .
  ?thadoMinsaw <http://dbpedia.org/ontology/birthParent> ?parentOfThadoMinsaw .

  # Step 2: Find the child of Thihapate of Mohnyin who is an office holder and royalty
  OPTIONAL {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://www.w3.org/2002/07/owl#sameAs> ?thihapate .
    ?thihapate <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Step 3: Find the predecessor of this child
    ?child <http://dbpedia.org/ontology/predecessor> ?childPredecessor .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
SELECT ?child ?award ?professional WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?child .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/award> ?award .
    ?award <http://dbpedia.org/ontology/category> ?professional .
  }
}
```",3,3,4,2,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?childParent ?laodiceSpouse WHERE {
  # Find the child of Antiochus (son of Antiochus III the Great)
  OPTIONAL {
    <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?child .
    
    # Find the parent(s) of this child
    ?child <http://dbpedia.org/ontology/parent> ?childParent .
  }
  
  # Find the spouse of Laodice IV
  OPTIONAL {
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?laodiceSpouse .
  }
}
```",3,3,4,2,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?andreottiParty ?prodiParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi>
      <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Prodi""@en ;
      <http://dbpedia.org/property/birthName> ?birthName .
    FILTER(?birthName = ""Romano Prodi"")
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
  }
}
```",4,6,5,3,2,3,3,71,3,2,0,0.6,1.0,0.7499999999999999
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find Thado Minsaw of Prome's Parent
  ?thadoMinsaw <http://dbpedia.org/ontology/birthName> ""Thado Minsaw"" .
  ?thadoMinsaw <http://dbpedia.org/ontology/father> ?parent .

  # Step 2: Find the Child of This Parent (should be Thado Minsaw)
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/birthName> ""Thado Minsaw"" .
    ?child <http://dbpedia.org/ontology/father> ?parent .
  }

  # Step 3: Find Ameitta Thiri Maha Dhamma Dewi of Ava's Predecessor
  OPTIONAL {
    ?ameitta <http://dbpedia.org/property/predecessor> ?predecessor .
    ?ameitta <http://dbpedia.org/ontology/birthName> ""Ameitta Thiri Maha Dhamma Dewi"" .
  }

  # Step 4: Find Thinkhaya of Pagan's Child
  OPTIONAL {
    ?thinkhayaChild <http://dbpedia.org/ontology/father> ?thinkhaya .
    ?thinkhaya <http://dbpedia.org/ontology/birthName> ""Thinkhaya"" .
  }

  # Step 5: Match and Find Parent
  FILTER (?predecessor = ?thinkhayaChild)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?parentOfChild1 ?grandchild ?parentOfGrandchild WHERE {
  # Step 1: Find a child of Archduke Joseph Francis of Austria
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child1 .
  }
  
  # Step 2: Find the parent of this child
  OPTIONAL {
    ?child1 <http://www.w3.org/2000/01/rdf-schema#label> ?parentOfChild1 .
  }

  # Step 3: Find a child of Archduke Joseph Karl of Austria
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?child2 .
  }
  
  # Step 4: Find the child (grandchild) of this child
  OPTIONAL {
    ?child2 <http://dbpedia.org/ontology/child> ?grandchild .
  }

  # Step 5: Determine the parent of this grandchild
  OPTIONAL {
    ?grandchild <http://www.w3.org/2000/01/rdf-schema#label> ?parentOfGrandchild .
  }
}
```",4,4,5,2,2,3,3,71,1,393,0,0.0025380710659898475,1.0,0.0050632911392405056
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryConflict ?militaryForce WHERE {
  OPTIONAL { 
    ?militaryConflict <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?militaryConflict <http://purl.org/dc/terms/type> ?eventType .
    FILTER (?eventType IN (<http://dbpedia.org/class/yago/SocietalEvent108930069>, <http://dbpedia.org/ontology/Event>, <http://dbpedia.org/ontology/MilitaryConflict>)).
  }
  
  OPTIONAL {
    ?militaryConflict <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    FILTER EXISTS { 
      ?campaign <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
      ?campaign <http://dbpedia.org/property/name> ""German campaign of 1813""^^xsd:string .
    }
    FILTER EXISTS { 
      ?battle <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
      ?battle <http://dbpedia.org/property/name> ""Battle of Leipzig""^^xsd:string .
    }
  }

  OPTIONAL {
    ?militaryConflict <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?producer ?alterEgo ?profession WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://purl.org/dc/terms/creator> ?producer .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
    ?alterEgo <http://dbpedia.org/ontology/profession> ?profession .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?deathPlace ?warLocation WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    ?musnier <http://dbpedia.org/ontology/militaryConflict> ?militaryConflict .
    FILTER(?musnier = <http://dbpedia.org/resource/Louis_François_Félix_Musnier>)
    ?militaryConflict <http://dbpedia.org/ontology/location> ?warLocation .
  }
}
```",3,4,4,2,2,2,3,28,2,1,0,0.6666666666666666,1.0,0.8
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardEntity ?force WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardEntity .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/memberOf> ?force .
  }
}
```",3,3,4,2,2,3,2,20,0,4,4,0.0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find the father of Ernest Augustus, Duke of Brunswick
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick>.

  # Step 2: Find children of this father
  ?father <http://dbpedia.org/ontology/child> ?child.

  # Step 3: Identify Princess Victoria Louise of Prussia
  ?princess <http://www.w3.org/2000/01/rdf-schema#label> ""Princess Victoria Louise of Prussia""@en .
  ?princess <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?princess <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>.

  # Step 4: Find her spouse
  ?princess <http://dbpedia.org/property/spouse> ?spouse.

  # Step 5: Check if any child of the father is also a spouse of Princess Victoria Louise
  FILTER(?child = ?spouse)
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?associatedMusicalArtist WHERE {
  # Find person who acted in ""Return to Nuke 'Em High Volume 1""
  ?person <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
  
  # Confirm the same person is a band member of Nevermore
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Nevermore_(band)> .

  # Retrieve associated musical artists for this person
  ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedMusicalArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Identify Sean Pertwee's claim to fame
  OPTIONAL { 
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?fame .
    
    # Check if the claim is a film or military conflict
    ?fame rdf:type ?type .
    FILTER (?type IN (<http://dbpedia.org/ontology/Film>, <http://dbpedia.org/ontology/MilitaryConflict>)).
    
    # Retrieve actors associated with the film
    OPTIONAL {
      ?fame <http://dbpedia.org/ontology/starring> ?actor .
    }
  }

  # Verify Sean Pertwee's birthplace and parentage
  FILTER EXISTS { 
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
  }
  
  FILTER EXISTS {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Jon_Pertwee> .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?militaryForce WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
  ?person <http://dbpedia.org/property/commanderIn> <http://dbpedia.org/resource/Biscay_Campaign> .
  
  ?event <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
  ?event <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/SocietalEvent108930068> .
  ?event <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Event108930067> .
  ?event <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/MilitaryConflict108930069> .

  ?person <http://dbpedia.org/ontology/memberOfMilitaryForce> ?militaryForce .
  ?militaryForce <http://www.w3.org/2002/07/owl#sameAs> ?event .
}
```",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Step 1: Identify office holders and politicians in the New Zealand Army
  ?person <http://dbpedia.org/ontology/politicalParty> ?party .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  ?person <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .

  # Step 2: Determine their profession as a military unit
  ?person <http://dbpedia.org/property/profession> ?militaryUnit .
  ?militaryUnit <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/ontology/MilitaryUnit> .

  # Step 3: Find wars related to these military units
  ?militaryUnit <http://dbpedia.org/property/warOfService> ?war .

  # Step 4: Identify an entity related to the Colony of New Zealand and the identified war
  ?entity <http://dbpedia.org/ontology/inception> ?colony .
  ?colony rdfs:label ""Colony of New Zealand""@en .
  ?entity <http://dbpedia.org/property/warOfService> ?war .

}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?force ?award ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/militaryService> ?service .
    ?service <http://www.w3.org/2004/02/skos/core#broader> ?force .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/war> ?war .
  }
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?parent WHERE {
  ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark <http://dbpedia.org/ontology/location> ?settlement .
  ?native <http://dbpedia.org/ontology/nativeOf> ?landmark .
  ?native <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  # Step 1: Find children of Ernest Augustus, Crown Prince of Hanover
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 2: Ensure the parent is also a child of Ernest Augustus, Crown Prince of Hanover
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  # Step 3: Ensure the parent is also a parent of Prince Ernest Augustus of Hanover (born 1914)
  ?parent2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernst_August_of_Hanover> .
  
  FILTER (?parent = ?parent2)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?administration ?country WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Philip_Brian_Scott> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerPlayers100000000> .
    <http://dbpedia.org/resource/Philip_Brian_Scott> <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://www.w3.org/2000/01/rdf-schema#label> ""Vermont"" .
    <http://dbpedia.org/resource/Vermont> <http://dbpedia.org/ontology/country> ?country .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player ?nickname WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/teamMember> ?team .
    ?team <http://dbpedia.org/ontology/player> ?player .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?nickname .
  }
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?secondLevelArtist WHERE {
  ?firstLevelArtist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower> .
  ?firstLevelArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?secondLevelArtist .
}
```",3,3,4,3,1,3,3,71,0,0,16,0,0.0,0
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?parentMeritamen ?grandGrandParent WHERE {
  # Parent of Meritamen
  OPTIONAL { 
    <http://dbpedia.org/resource/Meritamen> <http://www.w3.org/2002/07/owl#sameAs> ?meritamenResource .
    ?meritamenResource <http://dbpedia.org/ontology/parent> ?parentMeritamen .
  }

  # Parent of the child of the child of Seti I
  OPTIONAL {
    <http://dbpedia.org/resource/Seti_I> <http://www.w3.org/2002/07/owl#sameAs> ?setiIResource .
    ?setiIResource <http://dbpedia.org/ontology/child> ?childSetiI .
    ?childSetiI <http://dbpedia.org/ontology/child> ?grandChildSetiI .
    ?grandChildSetiI <http://dbpedia.org/ontology/parent> ?grandGrandParent .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?parent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2006/vcard/ns#parent> ?parent .
  }
}
```",3,3,4,3,1,3,2,20,0,0,5,0,0.0,0
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
# Query for band members of Donald Maynard Dokken's associated musical artist(s)
SELECT DISTINCT ?bandMember WHERE {
  # Find associated musical artists of Donald Maynard Dokken
  ?dokken <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?dokken <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .

  # For each associated artist, find their band members
  ?associatedArtist <http://dbpedia.org/ontology/member> ?bandMember .
}

# Query for associated musical artists of Watchtower's associated musical artist(s)
SELECT DISTINCT ?secondLevelAssociatedArtist WHERE {
  # Find associated musical artists of Watchtower (band)
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/property/associatedMusicalArtist> ?firstLevelAssociatedArtist .

  # For each first-level associated artist, find their associated musical artists
  ?firstLevelAssociatedArtist <http://dbpedia.org/property/associatedMusicalArtist> ?secondLevelAssociatedArtist .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?leader WHERE {
  # Step 1: Find Gustav Jonson's Leader
  ?gustav <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/leader> ?leader .

  # Ensure the leader is an office holder and a politician
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 2: Find the Government Agency
  ?agency <http://dbpedia.org/ontology/head> ?leader .
  ?agency <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/resource/Government_agency> .

  # Step 3: Awardee of Order of Suvorov
  ?leader <http://dbpedia.org/ontology/honoraryTitle> ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""order of suvorov""))
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?settlementRegion ?adminState WHERE {
  # Entity in Italy that is a settlement and region
  OPTIONAL {
    <http://dbpedia.org/resource/Democratic_Party_(Italy)> <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/type> ?typeSettlementRegion .
    FILTER(?typeSettlementRegion IN (dbo:Settlement, dbo:Region))
    FILTER(CONTAINS(LANG(?location), ""it"")) # Ensures it's in Italy
  }
  
  # Entity in administration that is a state and Italian
  OPTIONAL {
    <http://dbpedia.org/resource/Democratic_Party_(Italy)> <http://dbpedia.org/ontology/administrativeRegion> ?adminRegion .
    ?adminRegion <http://www.w3.org/2006/vcard/ns#adr> ?addressAdmin .
    ?addressAdmin <http://purl.org/dc/terms/type> ?typeState .
    FILTER(?typeState = dbo:State)
    FILTER(CONTAINS(LANG(?adminRegion), ""it"")) # Ensures it's Italian
  }
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Shèna"" .
  ?person <http://dbpedia.org/property/associatedBand> ?band .
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Step 1: Find movies associated with Roz Ryan that are also works and television shows
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  ?movie a <http://dbpedia.org/class/yago/Movie108069068> . # Movie class
  ?movie a <http://dbpedia.org/class/yago/CreativeWork100007846> . # Work class
  ?movie a <http://dbpedia.org/class/yago/TelevisionShow100007847> . # Television show class

  # Step 2: Find Michael Ballhaus's claims to fame (works)
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Michael_Ballhaus> .

  # Step 3: Find actors common to both the movie and the work
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?work <http://dbpedia.org/ontology/starring> ?actor .

  # Step 4: Ensure the actor is a native of Compton, California
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (STRSTARTS(STR(?birthPlace), ""Compton, California""))
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
SELECT ?child WHERE {
  # Find children of Jon Pertwee who are native to London
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .

  # Check if the child acted in ""Dog Soldiers"" (film)
  OPTIONAL {
    ?child <http://dbpedia.org/property/filmography> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  }
}
```",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT DISTINCT ?awardee ?restingPlace WHERE {
  # Find the award received by Gerald Graham
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/award> ?award .

  # Find other awardees of this award
  ?awardee <http://dbpedia.org/ontology/award> ?award .
  
  # Retrieve the resting place for each awardee
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
  }
}
```",3,3,4,3,1,3,3,71,704,3006,0,0.18975741239892183,1.0,0.31898504757589485
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ted Martin McGinley""@en .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
  ?person <http://dbpedia.org/property/spouse> ?result .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse ?child ?parent WHERE {
  # Find the spouse of Aristotle Onassis
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Find children of that spouse
  OPTIONAL { 
    ?spouse <http://dbpedia.org/ontology/child> ?child .
    
    # For each child, find their parents
    OPTIONAL {
      ?child <http://dbpedia.org/ontology/parent> ?parent .
    }
  }
}
```",4,4,5,3,2,3,2,20,2,8,0,0.2,1.0,0.33333333333333337
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
SELECT ?birthPlace ?landmark WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  OPTIONAL {
    # Assuming there is a property linking awards to elevations, which might not exist
    # This part is hypothetical and may need external data or assumptions
    <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/ontology/receivedAward> ?award .
    ?award <http://example.org/elevation> ?elevation .
    ?landmark <http://www.w3.org/2006/vcard/ns#hasElevation> ?elevation .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?leader ?commander WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> ;
            <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",4,4,5,3,2,3,3,71,1,0,0,1.0,1.0,1.0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"```sparql
SELECT ?player ?team WHERE {
  # Part 1: Players in the 2015 Sacramento Republic FC season
  OPTIONAL {
    ?player <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Sacramento_Republic_FC> .
    ?season <http://dbpedia.org/property/sportSeason> ""2015""^^xsd:string .
    ?team <http://dbpedia.org/property/sportSeason> ?season .
  }

  # Part 2: Team of a native soccer player and manager from Wolverhampton
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> .
    ?person <http://dbpedia.org/ontology/nationality> ?nationality .
    ?person <http://dbpedia.org/ontology/profession> ?profession .
    FILTER(CONTAINS(LCASE(?profession), ""soccer player"") && CONTAINS(LCASE(?profession), ""soccer manager""))
    ?person <http://dbpedia.org/ontology/team> ?team .
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  # Find commanders in the Franco-Hova Wars
  ?person <http://dbpedia.org/ontology/commander> ?francoHovaWars .
  
  # Ensure the person died in French Algeria
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .

  # Ensure the person also died in Algiers
  OPTIONAL { 
    ?deathEvent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
    ?person <http://dbpedia.org/property/death> ?deathEvent .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT DISTINCT ?member ?bandMember WHERE {
  # Step 1: Find band members of Guns N' Roses
  ?gna <http://dbpedia.org/ontology/member> ?member .
  
  # Step 2: For each member, find other bands they are part of
  ?member <http://dbpedia.org/ontology/member> ?band .

  # Step 3: Filter for San Francisco Symphony as a band and group
  FILTER(?band = <http://dbpedia.org/resource/San_Francisco_Symphony>)
  FILTER((?band <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Band>) && 
         (?band <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Group_(music)>))

  # Step 4: Find band members of San Francisco Symphony
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person WHERE {
  ?gigi <http://dbpedia.org/property/birthName> ?birthName .
  ?gigi <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Actress108930069> .
  ?gigi <http://xmlns.com/foaf/0.1/spouse> <http://dbpedia.org/resource/Ted_McGinley> .
  
  FILTER (?gigi = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?jimSheppardArtist ?josephFurneyBand ?nevermoreMember WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?jimSheppardArtist .
  }
  
  OPTIONAL {
    ?person2 <http://dbpedia.org/ontology/birthName> ""Joseph Michael Furney"" .
    ?person2 <http://dbpedia.org/property/band> ?josephFurneyBand .
  }

  OPTIONAL {
    ?band <http://dbpedia.org/resource/Nevermore_(band)> ;
          <http://dbpedia.org/ontology/member> ?nevermoreMember .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/property/spouse> ?result .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
SELECT ?commander ?militaryForce1 ?militaryForce2 ?decedent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?militaryForce1 .
  }
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
           <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
           <http://dbpedia.org/ontology/militaryForce> ?militaryForce2 .
    FILTER(?event = <http://dbpedia.org/resource/Spanish_Civil_War>)
  }
  OPTIONAL {
    ?person <http://www.w3.org/2006/vcard/ns#death> ?deathEvent ;
            <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> .
    ?deathEvent <http://purl.org/dc/terms/description> ?decedent .
  }
}
```",5,8,6,3,3,3,3,71,3,2,0,0.6,1.0,0.7499999999999999
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?child ?parent WHERE {
  # Find children of Archduke Joseph August of Austria who are natives of Budapest
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .

  # Retrieve the parent of this child
  OPTIONAL { 
    ?child <http://www.w3.org/2002/07/owl#sameAs> ?parent .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"```sparql
SELECT ?entityInCountry ?party WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2006/vcard/ns#location> ?country .
    ?entityInCountry <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?country .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?party .
  }
}
```",3,4,4,2,2,2,3,28,2,0,0,1.0,1.0,1.0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Richard_Pankhurst> .
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
  
  OPTIONAL { 
    ?almaMater <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?location .
    FILTER (str(?location) = ""United Kingdom"")
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Merneptah> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?parent .
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?commander WHERE {
  # Find the commander of the Battle of Verdun
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .

  # Check if this person died in both French Algeria and Algiers
  ?commander <http://dbpedia.org/ontology/deathPlace> ?deathPlace1 .
  FILTER (?deathPlace1 = <http://dbpedia.org/resource/French_Algeria> || ?deathPlace1 = <http://dbpedia.org/resource/Algiers>)
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/ontology/deathPlace> ?deathPlace2 .
    FILTER (?deathPlace2 = <http://dbpedia.org/resource/French_Algeria> || ?deathPlace2 = <http://dbpedia.org/resource/Algiers>)
  }

  # Ensure the person is a commander in another war that is both a military conflict and an event
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
  ?war <http://purl.org/dc/terms/type> ?eventType .
  FILTER (?militaryConflict = <http://dbpedia.org/resource/Military_conflict>)
  FILTER (?eventType = <http://dbpedia.org/resource/Event>)

  # Ensure the commander is not the same as in Battle of Verdun
  FILTER(?war != <http://dbpedia.org/resource/Battle_of_Verdun>)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/award> ?award .
  OPTIONAL { 
    ?award <http://www.w3.org/2004/02/skos/core#relatedMatch> ?war .
  }
}
```",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Identify a child of Ramesses II
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Step 2: Find the parent of that child (could be mother or father)
  OPTIONAL { ?child <http://dbpedia.org/ontology/mother> ?parent . }
  OPTIONAL { ?child <http://dbpedia.org/ontology/father> ?parent . }

  # Step 3: Identify Merneptah and his father
  ?merneptah <http://dbpedia.org/ontology/father> ?fatherOfMerneptah .
  
  # Step 4: Determine the spouse of Merneptah's father
  OPTIONAL { ?fatherOfMerneptah <http://dbpedia.org/property/spouse> ?spouse . }
  
  # Step 5: Find the parent of Meritamen
  ?meritamen <http://dbpedia.org/ontology/father> ?parent .
  FILTER(?spouse = ?parent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/property/professionalAlterEgo> ""The Shadow"" .
  ?person <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .

  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
SELECT ?leader ?awardee WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .
  }
  OPTIONAL {
    ?award <http://dbpedia.org/property/awardee> ?awardee ;
           <http://dbpedia.org/property/recipient> <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> .
  }
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .
  
  # Step 2: Find the claim to fame (work) of Sherry Hormann's spouse
  ?work <http://purl.org/dc/terms/creator> ?spouse .
  
  # Step 3: Identify actors in this work
  ?work <http://dbpedia.org/ontology/starring> ?actor .

  # Step 4: Check if the actor also acted in ""All About the Andersons""
  OPTIONAL {
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?band WHERE {
  ?person a <http://dbpedia.org/ontology/MusicalArtist> ;
          a <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/property/profession> ?role .
  FILTER(?role IN (""vocalist"", ""musician"", ""songwriter""))
  OPTIONAL { 
    ?reference <http://dbpedia.org/ontology/reference> ?blasters .
    ?blasters rdfs:label ""The Blasters""@en .
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?reference .
  }
  ?person <http://dbpedia.org/property/band> ?band .
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?father WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?father .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> .
  }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?authorReference ?nativeOfJohannesburg WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://purl.org/dc/terms/creator> ?author .
    ?author <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?authorReference .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
    ?person <http://xmlns.com/foaf/0.1/name> ?nativeOfJohannesburg .
  }
}
```",3,3,4,2,2,2,3,28,0,1110,1,0.0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?nickname ?team WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?nickname .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?team .
  }
}
```",3,3,4,2,2,3,2,20,1,10,0,0.09090909090909091,1.0,0.16666666666666669
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?commanderParty ?arnulfoAriasParty WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108930068> .
    ?commander <http://dbpedia.org/property/politicalParty> ?commanderParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/politicalParty> ?arnulfoAriasParty .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
  # Actor in The Departed
  ?movie <http://dbpedia.org/ontology/cast> ?actor .
  FILTER(STRSTARTS(LCASE(?movie), ""the departed""))

  # Native of Compton, California
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER(CONTAINS(LCASE(?birthPlace), ""compton"") && CONTAINS(LCASE(?birthPlace), ""california""))

  # Actor in All About the Andersons
  ?anotherMovie <http://dbpedia.org/ontology/cast> ?actor .
  FILTER(STRSTARTS(LCASE(?anotherMovie), ""all about the andersons""))
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Czech_Pirate_Party> <http://dbpedia.org/ontology/leader> ?person .
    ?person <http://www.w3.org/2006/vcard/ns#hasTitle> ?administration .
  }
  
  OPTIONAL {
    ?individual <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> ;
                 <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",3,3,4,2,2,2,2,9,1,253,0,0.003937007874015748,1.0,0.00784313725490196
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Joseph Michael""@en .
  ?person <http://dbpedia.org/ontology/associatedBand> ?band .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"```sparql
SELECT ?province ?region WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
    ?residence <http://dbpedia.org/property/province> ?province .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/timeZoneOfRegion> ?region .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?awardee WHERE {
  ?battle <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  ?militaryForce <http://dbpedia.org/property/award> ?award .
  ?award <http://dbpedia.org/ontology/awardee> ?awardee .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Borodino>)
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
SELECT ?region WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?timeZone .
    
    ?timeZone <http://dbpedia.org/ontology/sportsEvent> ?sportsEvent .
    ?sportsEvent <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.geonames.org/ontology#featureClass> ?region .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?province .
    
    ?province <http://dbpedia.org/ontology/administrativeRegion> ?region .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commanderEasternFront ?awardeeVolcanoRyukyu WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    ?event <http://dbpedia.org/ontology/commander> ?commanderEasternFront .
  }
  OPTIONAL {
    ?campaign <http://dbpedia.org/ontology/campaign> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
    ?award <http://dbpedia.org/property/awardee> ?awardeeVolcanoRyukyu .
    ?campaign <http://dbpedia.org/ontology/recipient> ?award .
  }
}
```",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
SELECT DISTINCT ?metallicaMember ?newstedBand ?producerBand WHERE {
  # Find band members of Metallica
  <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/member> ?metallicaMember .

  # Find bands associated with Jason Newsted after Metallica
  OPTIONAL {
    ?newstedBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Jason_Newsted> .
  }

  # Find the producer of ""Used to Love Her"" and their band membership
  OPTIONAL {
    ?song <http://purl.org/dc/terms/creator> ?producer .
    ?song <http://dbpedia.org/ontology/title> ""Used to Love Her""@en .
    ?producer <http://dbpedia.org/ontology/member> ?producerBand .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?ireneWar ?commanderWar ?camperoForceWar WHERE {
  # Wars involving Irene Morales
  OPTIONAL {
    ?irene <http://dbpedia.org/ontology/participatedIn> ?ireneWar .
    FILTER(?irene = <http://dbpedia.org/resource/Irene_Morales>)
  }

  # Commander in work of --01-09 and their wars
  OPTIONAL {
    ?work <http://dbpedia.org/property/commander> ?commander .
    ?commander <http://dbpedia.org/ontology/participatedIn> ?commanderWar .
    FILTER(?work = <http://dbpedia.org/resource/--01-09>)
  }

  # Force of Narciso Campero and their wars
  OPTIONAL {
    ?campero <http://dbpedia.org/property/force> ?camperoForce .
    ?camperoForce <http://dbpedia.org/ontology/participatedIn> ?camperoForceWar .
    FILTER(?campero = <http://dbpedia.org/resource/Narciso_Campero>)
  }
}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?finalParent WHERE {
  # Step 1: Identify Archduchess Margaret of Austria (born 1925)
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://www.w3.org/2006/vcard/ns#N> ""Margaret""@en .
  
  # Step 2: Find her parent
  OPTIONAL { 
    <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/father> ?parent1 .
  }
  
  # Step 3: Find the child of this parent
  OPTIONAL {
    ?parent1 <http://dbpedia.org/ontology/child> ?childOfParent1 .
  }
  
  # Step 4: Find the parent of this child
  OPTIONAL {
    ?childOfParent1 <http://dbpedia.org/ontology/father> ?finalParent .
  }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?entity WHERE {
  # Entities related to Colony of New Zealand
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  }
  
  # Wars involving the New Zealand Army
  OPTIONAL {
    ?war <http://dbpedia.org/property/army> <http://dbpedia.org/resource/New_Zealand_Army> .
    ?entity <http://dbpedia.org/ontology/war> ?war .
  }

  # Individuals awarded Knight Grand Cross of the Order of the Bath
  OPTIONAL {
    ?person <http://dbpedia.org/property/orderOfTheBath> ""Knight Grand Cross"" .
    ?person <http://www.w3.org/2002/07/owl#sameAs> ?entity .
  }
}
```",4,4,5,2,3,3,3,71,1,0,0,1.0,1.0,1.0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?almaMater WHERE {
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
SELECT ?bandMemberEbony ?associatedArtistEbony ?bandMemberSamuel ?associatedArtistSamuel WHERE {
  # Step 1: Find band members of Ebony Reigns
  OPTIONAL {
    <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/bandMember> ?bandMemberEbony .
    
    # Step 2: Find associated musical artists for each band member of Ebony Reigns
    ?bandMemberEbony <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistEbony .
  }
  
  # Step 3: Identify person born as Samuel Ofori Amponsah
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Samuel Ofori Amponsah""@en .
    
    # Step 4: Find band members of this person
    ?person <http://dbpedia.org/ontology/bandMember> ?bandMemberSamuel .
    
    # Step 5: Find associated musical artists for these band members
    ?bandMemberSamuel <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistSamuel .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"```sparql
SELECT ?country ?entityInNottinghamshire WHERE {
  OPTIONAL {
    ?country <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Western_European_Time> .
  }
  OPTIONAL {
    ?entityInNottinghamshire <http://www.w3.org/ns/prov#wasDerivedFrom> <http://dbpedia.org/resource/Nottinghamshire> .
  }
}
```",3,4,4,2,2,2,3,28,0,1426,357,0.0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?commander1 ?commander2 WHERE {
  OPTIONAL {
    ?regiment <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    FILTER(STRSTARTS(STR(?regiment), ""http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)""))
    ?conflict <http://dbpedia.org/ontology/commander> ?commander1 .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/militaryCommand> ?force .
    ?force <http://dbpedia.org/ontology/commander> ?commander2 .
  }
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse ?child ?parent WHERE {
  # Query for spouse of Ramesses II
  OPTIONAL { 
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  
  # Query for children of Nefertari and their parents
  OPTIONAL {
    <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/parent> ?parent .
  }
}
```",3,3,4,2,2,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?person WHERE {
  # Find the DBpedia resource for ""Hub City""
  <http://dbpedia.org/resource/Hub_City> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  
  # Identify individuals born in Hub City
  ?person <http://dbpedia.org/ontology/birthPlace> ?address .

  # Find actors in ""All About the Andersons""
  OPTIONAL { 
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/castMember> ?person .
  }

  # Find actors in ""The Departed""
  OPTIONAL {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/castMember> ?person .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?commander WHERE {
  # Step 1: Find the capital of Algeria
  ?capital a <http://dbpedia.org/ontology/Settlement> ;
           <http://dbpedia.org/ontology/capitalOf> <http://dbpedia.org/resource/Algeria> .

  # Step 2: Identify person decedent at the capital
  ?person <http://dbpedia.org/ontology/deathPlace> ?capital .

  # Step 3: Find military conflict involving Frédéric-Georges Herr as a commander
  ?war a <http://dbpedia.org/ontology/MilitaryConflict>, <http://dbpedia.org/ontology/Event> ;
       <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Fr%C3%A9d%C3%A9ric-Georges_Herr> .

  # Step 4: Find commander in the war who is also decedent at the capital
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  FILTER (?commander = ?person)
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?party ?reference WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?party .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> ?property ?reference .
    FILTER(?property IN (dbpedia-owl:description, dbpedia-owl:wikiPageWikiLink))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?commander1 ?commander2 WHERE {
  OPTIONAL {
    ?event rdf:type dbo:MilitaryConflict .
    ?event dbo:participatingUnit <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
    ?event dbo:commander ?commander1 .
  }
  
  OPTIONAL {
    ?campaign rdf:type dbo:MilitaryConflict ;
              rdfs:label ""German campaign of 1813""@en .
    ?campaign dbo:commander ?commander2 .
  }
}
```",3,5,4,2,2,3,3,71,30,1,0,0.967741935483871,1.0,0.9836065573770492
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?restingPlace ?settlement WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    ?settlement a <http://dbpedia.org/class/yago/Settlement_100000000> .
  }
}
```",3,4,4,2,2,2,3,28,0,2,1,0.0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?child <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  ?child <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?child <http://dbpedia.org/ontology/birthName> ?birthName .
  ?child <http://dbpedia.org/ontology/father> ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?force ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/force> ?force .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/property/war> ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT DISTINCT ?member WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater that is Japanese and a university
  OPTIONAL { 
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""university"") && CONTAINS(LCASE(?label), ""japan""))
  }

  # Step 2: Find members of this alma mater
  OPTIONAL {
    ?almaMater <http://dbpedia.org/ontology/member> ?member .
  }
  
  # Step 3: Identify Takashi Sekizuka's manager who is native to Japan
  OPTIONAL {
    ?team <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    ?team <http://dbpedia.org/ontology/manager> ?member .
    ?member <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  }
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/relatedTo> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?award <http://dbpedia.org/property/awardee> ?result .
}
```",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentOfChildRamessesII ?spouseRamessesII ?parentOfChildNefertari WHERE {
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
    BIND(<http://dbpedia.org/resource/Ramesses_II> AS ?parentOfChildRamessesII)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouseRamessesII .
  }
  OPTIONAL {
    ?childNefertari <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Nefertari> .
    BIND(<http://dbpedia.org/resource/Ramesses_II> AS ?parentOfChildNefertari)
  }
}
```",5,5,6,2,3,3,3,71,0,1,1,0.0,0.0,0
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  # Step 1: Find Matsudaira Tadamasa's father
  ?matsudairaTadamasa <http://dbpedia.org/ontology/father> ?father1 .
  
  # Step 2: Ensure this father is an office holder
  OPTIONAL { 
    ?father1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
    
    # Step 3: Find the politician father of this office holder
    ?father1 <http://dbpedia.org/ontology/father> ?politicianFather .
    OPTIONAL { 
      ?politicianFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
      
      # Step 4: Retrieve the death place of this politician
      ?politicianFather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    }
  }
  
  FILTER(?matsudairaTadamasa = <http://dbpedia.org/resource/Matsudaira_Tadamasa>)
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?militaryForce WHERE {
  # Step 1: Find the predecessor of Indalecio Prieto
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .

  # Step 2: Identify a societal event and military conflict involving the predecessor
  ?event <http://www.w3.org/2004/02/skos/core#broader> ?predecessor .
  ?event <http://purl.org/dc/terms/type> ?eventType .
  
  FILTER (
    (?eventType = <http://dbpedia.org/resource/Societal_event>) &&
    (?eventType = <http://dbpedia.org/resource/Military_conflict>)
  )

  # Step 3: Find the military force involved in that event
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","```sparql
SELECT DISTINCT ?player WHERE {
  # Find teams managed by Leonid Slutsky
  ?team <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Len_%27H%27_Slutsky> .
  
  # Ensure the team is a soccer club and sports team season
  ?team <http://www.w3.org/2002/07/owl#sameAs> ?soccerClub .
  ?soccerClub rdf:type <http://dbpedia.org/class/yago/SoccerClubs100000000> .
  
  # Find players in these teams
  ?player <http://dbpedia.org/ontology/member> ?team .

  # Ensure the player is also a member of The Three Lions (England national team)
  ?player <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/England_national_football_team> .
}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?alanCunninghamRestingPlace ?simonCadellRestingPlace ?childRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham_(British_Army_officer)> <http://dbpedia.org/ontology/deathPlace> ?alanCunninghamRestingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?simonCadellRestingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/J._W._Burbidge#Burke_and_Wills_expedition> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/deathPlace> ?childRestingPlace .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
SELECT ?profession ?person WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  }
}
```",3,3,4,2,2,3,3,71,0,9,1,0.0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"```sparql
SELECT ?ukRegion ?birthPlaceRegion WHERE {
  OPTIONAL {
    ?region <http://www.w3.org/2000/01/rdf-schema#label> ""United Kingdom"" .
    ?region <http://dbpedia.org/ontology/administrativeDivision> ?ukRegion .
    FILTER (lang(?ukRegion) = 'en')
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#label> ?birthPlaceLabel .
    FILTER (lang(?birthPlaceLabel) = 'en')
    ?region2 <http://www.w3.org/2000/01/rdf-schema#label> ?birthPlaceLabel .
    ?region2 <http://dbpedia.org/ontology/administrativeDivision> ?birthPlaceRegion .
    FILTER (lang(?birthPlaceRegion) = 'en')
  }
}
```",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?restingPlace ?capital WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/burialPlace> ?restingPlace .
  }
  
  OPTIONAL {
    ?militaryForce <http://www.w3.org/2002/07/owl#sameAs> ?vyoshenskayaUprising .
    ?militaryForce a <http://dbpedia.org/class/yago/MilitaryOrganization100000001> ;
                   <http://dbpedia.org/ontology/country> ?country .
    ?country <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?capital .
  }
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?carlGahnWars ?joaquinBlakeWars WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?carlGahnWars .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake_y_Jord%C3%A1n> <http://dbpedia.org/ontology/participatedIn> ?joaquinBlakeWars .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?spouse ?parent WHERE {
  # Find the commander in Battle of Panium and their child
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Panium>) .

  ?commander <http://dbpedia.org/ontology/child> ?child .
  
  # Find the parent of this child
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Human> .
  OPTIONAL { ?child <http://dbpedia.org/ontology/birthParent> ?parent . }

  # Find the spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
SELECT ?commander ?agencyLeader WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?commander .
  }
  OPTIONAL {
    ?office <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Stalin"" ;
            <http://dbpedia.org/ontology/governmentAgency> ?agency .
    ?agency <http://dbpedia.org/ontology/leader> ?agencyLeader .
  }
}
```",3,4,4,2,2,3,3,71,1,62,0,0.015873015873015872,1.0,0.03125
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?commander WHERE {
  ?war <http://dbpedia.org/ontology/conflict> ?conflict .
  ?war <http://www.w3.org/2002/07/owl#sameAs> ?militaryConflict .
  ?militaryConflict a <http://dbpedia.org/class/yago/MilitaryConflicts1000000000> .
  ?militaryConflict <http://dbpedia.org/ontology/personInvolved> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .
  
  ?war <http://dbpedia.org/property/commander> ?commander .

  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent ?person WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ubol_Ratana> <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Sirikit""@en .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?giulioParty ?micheleParty ?romanoParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?giulioParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?micheleParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?romanoParty .
  }
}
```",5,5,6,3,3,3,3,71,2,7,0,0.2222222222222222,1.0,0.3636363636363636
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","```sparql
SELECT ?personBornOnPavloDate ?band WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
    BIND(?person AS ?personBornOnPavloDate)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> <http://dbpedia.org/property/associatedMusicalArtist> ?band .
  }
}
```",4,4,5,2,2,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?person ?associatedMusicalArtist WHERE {
  ?person <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> .
  ?person <http://dbpedia.org/ontology/memberOfBand> <http://dbpedia.org/resource/Nevermore_(band)> .
  ?person <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedMusicalArtist .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parentOfChild ?spouse WHERE {
  # Find a child of Ramesses II
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ramesses_II> .
  
  # Find the parent of this child
  ?child <http://dbpedia.org/ontology/birthParent> ?parentOfChild .

  # Find the spouse(s) of Ramesses II
  OPTIONAL {
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","```sparql
SELECT ?person ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1958"" .
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (CONTAINS(LCASE(?label), ""japanese""))
  ?almaMater a <http://dbpedia.org/class/yago/YagoLegalEntity4325> ; # Organization
             a <http://dbpedia.org/class/yago/YagoUniversityOrInstitute108> ; # University
             a <http://dbpedia.org/ontology/EducationalOrganization> . # Educational Institution
}
```",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?administration ?deathPlace ?warLocation WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    ?musnier <http://dbpedia.org/ontology/war> ?war .
    ?war <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?warLocation .
    FILTER(CONTAINS(LCASE(?musnier), ""louis françois félix musnier""))
  }
}
```",4,5,5,2,3,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actorRestingPlace WHERE {
  # Step 1: Find the show associated with Emily Richard
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/E._Richard> .
  
  # Step 2: Identify an actor from that show
  ?show <http://dbpedia.org/ontology/castMember> ?actor .

  # Step 3: Find the resting place of the identified actor
  ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
SELECT ?deceasedPerson ?awardee WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/House_of_Sombrerete> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?person <http://dbpedia.org/ontology/deathPlace> ?address .
    BIND(?person AS ?deceasedPerson)
  }
  
  OPTIONAL {
    ?award <http://dbpedia.org/property/awardee> ?awardee .
    FILTER(STR(?award) = ""30"")
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse ?royalChild ?grandchild WHERE {
  # Find spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouse .

  # Find children of Seleucus II Callinicus who are royalty
  OPTIONAL {
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    # Find children of the royal child
    OPTIONAL {
      ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
    }
  }
}
```",3,4,4,2,2,3,3,71,3,7,0,0.3,1.0,0.4615384615384615
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?person ?birthName WHERE {
  ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?societalEventWar ?orozimboBarbosaWar WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> .
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
    ?societalEvent <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?societalEventWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/war> ?orozimboBarbosaWar .
  }
}
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?commanderOfWellington ?leipzigCommander ?napoleonicForce WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commandedMilitaryForce> ?commanderOfWellington .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?leipzigCommander .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Napoleonic_Wars> <http://dbpedia.org/property/militaryForce> ?napoleonicForce .
  }
}
```",4,4,5,2,3,3,3,71,5,16,0,0.23809523809523808,1.0,0.3846153846153846
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
SELECT ?almaMater ?nickname WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT DISTINCT ?war WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?militaryUnit .
  ?militaryUnit a <http://dbpedia.org/ontology/MilitaryUnit> .
  ?person <http://dbpedia.org/ontology/officeHolder> [] .
  ?person <http://dbpedia.org/ontology/politician> [] .
  ?person <http://dbpedia.org/property/memberOf> <http://dbpedia.org/resource/New_Zealand_Army> .

  OPTIONAL {
    ?militaryUnit <http://dbpedia.org/ontology/war> ?war .
  }
}
```",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  ?country <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ""Central European Time"" .
  ?country a <http://dbpedia.org/class/yago/Country108069068> .

  FILTER EXISTS {
    ?region <http://www.w3.org/2006/vcard/ns#hasAddress> ?r_address .
    ?r_address <http://purl.org/dc/terms/description> ""Central European Time"" .
    ?country <http://dbpedia.org/ontology/country> ?region .
  }
}
```",3,4,4,2,2,2,3,28,0,0,28787,0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","```sparql
SELECT ?writer WHERE {
  # Find the writer of ""The Roaring Silence""
  <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
  
  # Ensure the writer is native to Johannesburg
  ?writer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .

  # Check for a reference or connection to Manfred Mann
  OPTIONAL {
    ?writer <http://www.w3.org/2004/02/skos/core#related> <http://dbpedia.org/resource/Manfred_Mann> .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?commander ?militaryForce WHERE {
  # Find the commander of the Biscay Campaign
  OPTIONAL { 
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
  }
  
  # Identify military force associated with Francisco Largo Caballero that is a societal event and military conflict
  OPTIONAL {
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent> .
    ?force <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict> .
    <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/property/militaryForce> ?force .
  }
}
```",3,5,4,2,2,3,3,71,3,2,0,0.6,1.0,0.7499999999999999
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?resident WHERE {
  OPTIONAL { 
    ?film <http://dbpedia.org/ontology/director> ?director .
    FILTER(STR(?film) = ""Pipe_Dreams_(1976_film)"")
  }
  OPTIONAL {
    ?director <http://dbpedia.org/ontology/birthPlace> ?birthplace .
    ?birthplace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  }
  OPTIONAL {
    ?lizzie <http://dbpedia.org/property/father> ?father .
    FILTER(STR(?lizzie) = ""Lizzie_Spaulding"")
  }
  OPTIONAL {
    ?resident <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlement .
    FILTER(?resident = ?father)
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?warOrozimbo ?forceNarciso ?warIrene WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?warOrozimbo .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/commander> ?forceNarciso .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/participatedIn> ?warIrene .
  }
}
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  OPTIONAL {
    # Find the actor of ""Enemy at the Door""
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?movie <http://dbpedia.org/ontology/title> ""Enemy at the Door"" .
    
    # Get the resting place of that actor
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
  
  OPTIONAL {
    # Find awardees of Knight Grand Cross of the Order of St Michael and St George
    ?person <http://dbpedia.org/property/orderOfStMichaelAndStGeorge> ""Knight Grand Cross"" .
    
    # Get their resting places
    ?person <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?mayorForce ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Mayor_of_Congress_Poland> <http://dbpedia.org/ontology/force> ?mayorForce .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
}
```",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?grandParent WHERE {
  # Step 1: Find the parent who is royalty of Prince George William of Hanover
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
  ?parent a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this parent who is royalty
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Identify the parent of this child
  ?grandParent <http://dbpedia.org/ontology/parent> ?child .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?spouse WHERE {
  # Hypothetical resource for the professional associated with Stan Lee's award
  <http://dbpedia.org/resource/Professional_Associated_With_Award> <http://dbpedia.org/property/spouse> ?spouse .
}
```

Note: The above query is hypothetical and assumes a specific resource identifier (`<http://dbpedia.org/resource/Professional_Associated_With_Award>`), which would need to be replaced with the actual DBpedia resource for the professional in question.",3,3,4,3,1,3,2,20,0,0,4149,0,0.0,0
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?militaryForce ?commander WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/event> ?war .
    ?war rdfs:label ""Napoleonic Wars""@en .
    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commanderInMilitaryUnit> ?commander .
  }
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
SELECT ?bandOfJosephMichael ?nevermoreMember ?associatedArtist WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/currentMusicalBand> ?bandOfJosephMichael .
  }
  
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?member rdfs:label ?nevermoreMember FILTER (lang(?nevermoreMember) = ""en"") .
  }

  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Jim Sheppard"" .
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://dbpedia.org/ontology/currentMusicalArtist> ?associatedArtist .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?commander ?awardee WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
    ?event <http://dbpedia.org/ontology/commander> ?commander .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awardee> ?awardee .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Find settlement by elevation
  ?settlement <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  
  # Step 2: Identify landmark associated with the settlement
  ?landmark <http://dbpedia.org/ontology/settlement> ?settlement .
  
  # Step 3: Find native of the landmark who is a child of Archduke Joseph August
  ?person <http://dbpedia.org/ontology/birthPlace> ?landmark ;
          <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> .
  
  # Step 4: Retrieve the parent of this person
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?parent .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?administration WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Phil Scott"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerPlayers100000000> .
  ?person <http://dbpedia.org/ontology/administration> ?administration .
}
```",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?architect ?restingPlace WHERE {
  # Find the architect of P.D. Houston Jr. House
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .

  # Find the resting place of the identified architect
  OPTIONAL { 
    ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?childRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/James_Burton_(property_developer)> .
    ?child <http://dbpedia.org/ontology/restingPlace> ?childRestingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?alanCunninghamRestingPlace .
  }

  OPTIONAL {
    ?actor <http://dbpedia.org/ontology/castMember> <http://dbpedia.org/resource/Enemy_at_the_Door> .
    ?actor <http://dbpedia.org/ontology/restingPlace> ?actorRestingPlace .
  }
}
```",5,5,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT DISTINCT ?childAlmaMater WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/almaMater> ?childAlmaMater .
  }
}
```",3,3,4,3,1,3,2,20,2,0,0,1.0,1.0,1.0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT ?country WHERE {
  # Find the leader of the 1962 New South Wales state election who is a politician
  ?leader <http://dbpedia.org/ontology/politician> _:a .
  ?election <http://dbpedia.org/property/winner> ?leader .
  ?election <http://dbpedia.org/resource/1962_New_South_Wales_state_election> .

  # Get the birthplace of this leader
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Find the country associated with this birthplace
  ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ?country .

  OPTIONAL {
    # Identify Beauchamp Seymour, 1st Baron Alcester's war
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?war .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?author <http://dbpedia.org/property/book> <http://dbpedia.org/resource/Kamikaze_Girls> .
  ?author <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen> .
  ?author <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?person <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .
  ?person a <http://dbpedia.org/ontology/MusicalArtist> ;
          a <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?shenaBand ?personBand ?ambaShepherdBand WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?shenaBand .
  }
  
  OPTIONAL {
    ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Birth_date:1985-04-29> ;
           <http://dbpedia.org/ontology/band> ?personBand .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/band> ?ambaShepherdBand .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Diamond_Rock""))
  
  ?commander <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2006/vcard/ns#country-name> ?entity .
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?birthPlaceCommander ?deathPlaceTokugawa WHERE {
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlaceCommander .
    ?boshinWar <http://dbpedia.org/property/commander> ?commander .
    FILTER(?boshinWar = <http://dbpedia.org/resource/Boshin_War>)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlaceTokugawa .
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?predecessor ?grandparentParent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://www.w3.org/2002/07/owl#sameAs> ?entity .
    ?entity <http://dbpedia.org/ontology/predecessor> ?predecessor .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parent .
    ?parent <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/father> ?grandparentParent .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Find the writer of ""40 Dayz & 40 Nightz""
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  FILTER(STR(?album) = ""40_Dayz_%26_40_Nightz"")

  # Step 2: Filter writers who are both a musical artist and an artist
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 3: Find the producer of a work by 50 Cent
  ?work <http://dbpedia.org/ontology/producer> ?writer .
  FILTER(STR(?work) = ""50_Cent"")

  # Ensure the work is both a musical work and a song
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .

  # Step 4: Find associated musical artists of the filtered writer
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?bandMember ?personWithBirthName WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Dino Merlin""@en .
    ?person <http://dbpedia.org/property/birthName> ?birthName .
    FILTER(?birthName = ""Dino Merlin"")
    BIND(?person AS ?personWithBirthName)
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?almaMater ?entityInBW ?alterEgo WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?entityInBW <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood_(comics)> <http://xmlns.com/foaf/0.1/alternativeName> ?alterEgo .
  }
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?greatGreatGrandparent WHERE {
  ?minLinka <http://dbpedia.org/ontology/birthName> ""Min Linka"" .
  ?minLinka <http://dbpedia.org/ontology/father> ?parent1 .
  ?parent1 <http://dbpedia.org/ontology/father> ?grandparent .
  ?grandparent <http://dbpedia.org/ontology/father> ?greatGrandparent .
  ?greatGrandparent <http://dbpedia.org/ontology/father> ?greatGreatGrandparent .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?nationality WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/war> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ?nationalityLabel .
    ?nationality <http://www.w3.org/2000/01/rdf-schema#label> ?nationalityLabel .
  }
}
```",3,3,4,2,2,2,3,28,0,1,5,0.0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find children of Archduke Joseph Karl
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: Find grandchildren (children of the child)
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .

  # Step 3: Identify parent of a native of Budapest
  ?budaParent <http://dbpedia.org/ontology/parent> ?native .
  ?native <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ""Budapest"" .

  # Step 4: Identify parent of Archduchess Ilona
  ?ilonaParent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .

  # Final step: Find the common entity that satisfies all conditions
  FILTER (?grandchild = ?budaParent && ?grandchild = ?ilonaParent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?predecessorMilitaryForce ?rifWarMilitaryForce ?biscayCommanderMilitaryForce WHERE {
  # Find predecessor of Indalecio Prieto
  OPTIONAL {
    <http://dbpedia.org/resource/Indalecio_Prieto> <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    # Check if the predecessor was involved in a societal event or military conflict
    OPTIONAL {
      ?event <http://dbpedia.org/ontology/person> ?predecessor ;
             (<http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Societal_event> ;
              <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Military_conflict>) .
      ?event <http://dbpedia.org/property/militaryForce> ?predecessorMilitaryForce .
    }
  }

  # Find military force of the Rif War
  OPTIONAL {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarMilitaryForce .
  }

  # Find commander in Biscay Campaign and their military force
  OPTIONAL {
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/property/commander> ?biscayCommander .
    ?biscayCommander <http://dbpedia.org/ontology/militaryForce> ?biscayCommanderMilitaryForce .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?writer ?blindedByTheLightAuthor WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://purl.org/dc/terms/creator> ?blindedByTheLightAuthor .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?allenHillAlmaMater .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://www.w3.org/2006/vcard/ns#hasSubordinateOrganization> ?organisation .
    ?organisation <http://dbpedia.org/ontology/politician> ?mayor .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
}
```",5,7,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
SELECT ?war1 ?entityInNZ ?war2 WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?war1 .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Colony_of_New_Zealand> <http://www.w3.org/2004/02/skos/core#related> ?entityInNZ .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/war> ?war2 .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?person ?band1 ?band2 WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Tracey_Elizabeth_McSween> <http://dbpedia.org/property/associatedBand> ?band1 .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/property/associatedBand> ?band2 .
  }
}
```",4,4,5,2,3,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Find the parent who is a royalty
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> .
  ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this parent
  ?child <http://dbpedia.org/ontology/parent> ?parent .
  
  # Step 3: Find the grandchild (child of the child)
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?bandMember WHERE {
  ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/YU_Grupa> .
  ?reference a <http://dbpedia.org/class/yago/Group108930069> ; # Group class
              a <http://dbpedia.org/ontology/Organisation> .    # Organisation class

  OPTIONAL { 
    ?reference <http://dbpedia.org/ontology/member> ?bandMember .
  }
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
SELECT ?player WHERE {
  # Step 1: Find the predecessor of the 2015 Sacramento Republic FC season
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 2: Find the successor of that predecessor
  ?predecessor <http://dbpedia.org/ontology/successor> ?successor .

  # Step 3: Retrieve players from this successor season
  ?successor <http://dbpedia.org/property/player> ?player .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?minLinkaGreatGrandparentParent ?mayHninThweDaGreatGrandparentParent WHERE {
  # Min Linka's great-grandparent's parent
  OPTIONAL {
    ?minLinka <http://dbpedia.org/ontology/birthName> ""Min Linka"" .
    ?minLinka <http://dbpedia.org/ontology/father> ?minLinkaFather .
    ?minLinkaFather <http://dbpedia.org/ontology/father> ?minLinkaGrandfather .
    ?minLinkaGrandfather <http://dbpedia.org/ontology/father> ?minLinkaGreatGrandfather .
    ?minLinkaGreatGrandfather <http://dbpedia.org/ontology/father> ?minLinkaGreatGrandparentParent .
  }

  # May Hnin Thwe-Da's great-grandparent's parent
  OPTIONAL {
    ?mayHninThweDa <http://dbpedia.org/ontology/birthName> ""May Hnin Thwe-Da"" .
    ?mayHninThweDa <http://dbpedia.org/ontology/father> ?mayHninThweDaFather .
    ?mayHninThweDaFather <http://dbpedia.org/ontology/father> ?mayHninThweDaGrandfather .
    ?mayHninThweDaGrandfather <http://dbpedia.org/ontology/father> ?mayHninThweDaGreatGrandfather .
    ?mayHninThweDaGreatGrandfather <http://dbpedia.org/ontology/father> ?mayHninThweDaGreatGrandparentParent .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?nativeOfResidence WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?person a <http://dbpedia.org/ontology/Politician> ;
          a <http://dbpedia.org/ontology/OfficeHolder> .

  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  ?residence <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?residenceDescription .

  ?residence a <http://dbpedia.org/ontology/Settlement> ;
            <http://dbpedia.org/ontology/location> ?location .

  ?location <http://www.w3.org/2006/vcard/ns#hasAddress> ?britishLocation .
  ?britishLocation <http://purl.org/dc/terms/description> ""United Kingdom""^^<http://www.w3.org/2001/XMLSchema#string> .

  ?resident <http://dbpedia.org/ontology/birthPlace> ?residence .
  
  BIND(?resident AS ?nativeOfResidence)
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore> ;
            a <http://dbpedia.org/class/yago/BandMember108069068> .
    FILTER EXISTS { ?member a <http://dbpedia.org/ontology/Artist> }
    BIND(?member AS ?bandMember)
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"```sparql
SELECT DISTINCT ?militaryForce WHERE {
  # Step 1: Find events involving Rutger Jan Schimmelpenninck that are societal and military conflicts
  OPTIONAL { 
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
    ?societalEvent a <http://dbpedia.org/class/yago/SocialEvents> .
    ?event a <http://dbpedia.org/class/yago/MilitaryConflicts> .
  }

  # Step 2: Retrieve military forces involved in these events
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
  
  # Step 3: Find the commander of 1st Light Cavalry Lancers Regiment and their wars
  OPTIONAL {
    ?regiment <http://dbpedia.org/property/commander> ?commander .
    ?commander a <http://dbpedia.org/class/yago/Human> .
    ?war <http://dbpedia.org/ontology/person> ?commander .
    ?war a <http://dbpedia.org/class/yago/MilitaryConflicts> .
    ?war <http://www.w3.org/2002/07/owl#sameAs> ?societalEventWar .
    ?societalEventWar a <http://dbpedia.org/class/yago/SocialEvents> .
  }

  # Step 4: Retrieve military forces involved in these wars
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
  
  FILTER(?militaryForce != """")
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?parent WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(STR(?battle) = ""Battle of Panium"")
  
  ?commander <http://dbpedia.org/ontology/child> ?child .
  
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentThweDa ?grandParentHtapi WHERE {
  # Query for parent of May Hnin Thwe-Da
  OPTIONAL { 
    <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/parent> ?parentThweDa .
  }
  
  # Query for grandparent(s) of May Hnin Htapi
  OPTIONAL {
    <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?parentHtapi .
    ?parentHtapi <http://dbpedia.org/ontology/parent> ?grandParentHtapi .
  }
}
```",3,3,4,2,2,3,2,20,1,0,0,1.0,1.0,1.0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?whitakerRegion ?warnerRegion WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceWhitaker .
    ?birthPlaceWhitaker <http://dbpedia.org/ontology/location> ?whitakerRegion .
    FILTER EXISTS { ?whitakerRegion a <http://dbpedia.org/class/yago/YagoLegalEntityClass> }
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlaceWarner .
    ?birthPlaceWarner <http://dbpedia.org/ontology/location> ?warnerRegion .
    FILTER EXISTS { ?warnerRegion a <http://dbpedia.org/class/yago/YagoLegalEntityClass> }
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?settlementReference ?almaMater WHERE {
  OPTIONAL {
    ?green <http://dbpedia.org/ontology/administration> ?administration .
    ?administration <http://www.w3.org/2000/01/rdf-schema#label> ""Green"" .
    ?administration <http://dbpedia.org/ontology/settlement> ?settlementReference .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",4,5,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?entity ?reference WHERE {
  <http://dbpedia.org/resource/Green> <http://dbpedia.org/ontology/administers> ?entity .
  ?entity a <http://dbpedia.org/class/yago/Settlement108069068> .
  OPTIONAL { ?entity <http://www.w3.org/2002/07/owl#sameAs> ?reference . }
}
```",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?prodiParty ?andreottiParty WHERE {
  # Find Romano Prodi and his party
  ?prodi <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?prodi <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Romano_Prodi> .
  ?prodi <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  
  # Ensure the party is related to Partito Popolare Italiano
  ?prodiParty <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Partito_Popolare_Italiano> .

  # Find Giulio Andreotti and his party for reference
  ?andreotti <http://dbpedia.org/ontology/birthName> ""Giulio Andreotti"" .
  ?andreotti <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Giulio_Andreotti> .
  ?andreotti <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?awardee ?restingPlace WHERE {
  # Assuming 'Soviet_Award' is a placeholder for a specific known award entity in DBpedia
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  
  FILTER(?award = <http://dbpedia.org/resource/Soviet_Award>) # Replace with actual resource URI

  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```

Note: The placeholder `<http://dbpedia.org/resource/Soviet_Award>` should be replaced with the specific DBpedia resource for a known Soviet award. This query assumes that such an entity exists and is correctly linked to its recipients in DBpedia.",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?battleWar ?ireneWar ?narcisoForce WHERE {
  OPTIONAL {
    # Find the commander of the Battle of La Rinconada de Ate and their associated wars
    <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/war> ?battleWar .
  }
  
  OPTIONAL {
    # Find the wars associated with Irene Morales
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/property/war> ?ireneWar .
  }

  OPTIONAL {
    # Find the military force or role of Narciso Campero Leyes
    <http://dbpedia.org/resource/Narciso_Campero_Leyes> <http://dbpedia.org/ontology/militaryForce> ?narcisoForce .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?entity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?timeZone .
    ?country <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?timeZoneDescription .
    FILTER(?timeZone = ?timeZoneDescription)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administrationOf> ?administration .
  }

  ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?countryDescription .
  
  FILTER(?country = ?countryDescription)
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  # Find Christian IX's children
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Christian_IX_of_Denmark> .
  
  # From those children, find their children (Christian IX's grandchildren)
  ?grandchild <http://dbpedia.org/ontology/child> ?child .

  # Check if this grandchild is a parent of Princess Elizabeth
  ?grandchild <http://www.w3.org/2002/07/owl#sameAs> ?parent .
  ?parent <http://dbpedia.org/property/father> ?princessElizabeth .
  ?princessElizabeth <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
SELECT ?actor ?native WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/castMember> ?actor .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Jackson,_Tennessee> <http://www.w3.org/2006/vcard/ns#nickname> ?nickname .
    
    ?person <http://dbpedia.org/ontology/birthPlace> ?place .
    FILTER (?place = <http://dbpedia.org/resource/Jackson,_Tennessee>)
    BIND(?person AS ?native)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?associatedArtist ?band WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael""@en ;
            <http://xmlns.com/foaf/0.1/name> ?birthName .
    FILTER(?birthName = ""Joseph Michael"")
    ?person <http://dbpedia.org/ontology/band> ?band .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?alterEgo WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood_(comics)> <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
}
```",3,3,4,2,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?producer ?associatedArtist WHERE {
  # Step 1: Identify the work by 50 Cent that is a song
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/50_Cent> .
  ?work <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/MusicalWork108069365> .
  ?work <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Song106936786> .

  # Step 2: Find the producer of this work
  ?work <http://dbpedia.org/ontology/producer> ?producer .

  # Step 3: Identify the writer of ""40 Dayz & 40 Nightz""
  ?song <http://dbpedia.org/property/title> ""40 Dayz & 40 Nightz"" .
  ?song <http://dbpedia.org/ontology/writer> ?writer .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069365> .
  ?writer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Step 4: Find associated musical artists of this writer
  ?writer <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT DISTINCT ?parentMeritamen ?spouseRamessesII ?grandchildParent WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Meritamen> <http://www.w3.org/2002/07/owl#sameAs> ?meritamenResource .
    ?meritamenResource <http://dbpedia.org/ontology/birthParent> ?parentMeritamen .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Ramses_II> <http://dbpedia.org/property/spouse> ?spouseRamessesII .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Seti_I> <http://www.w3.org/2002/07/owl#sameAs> ?setiIResource .
    ?setiIResource <http://dbpedia.org/ontology/birthChild> ?childSetiI .
    ?childSetiI <http://dbpedia.org/ontology/birthChild> ?grandchildSetiI .
    ?grandchildSetiI <http://www.w3.org/2002/07/owl#sameAs> ?grandchildResource .
    ?grandchildResource <http://dbpedia.org/ontology/birthParent> ?grandchildParent .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?parentOfHenuttawy ?fatherOfMerneptah ?spouseOfFather WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://www.w3.org/2002/07/owl#sameAs> ?henuttawy .
    ?henuttawy <http://dbpedia.org/ontology/parent> ?parentOfHenuttawy .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/ontology/father> ?fatherOfMerneptah .
    ?fatherOfMerneptah <http://dbpedia.org/property/spouse> ?spouseOfFather .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?childRestingPlace ?simonCadellRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://dbpedia.org/ontology/restingPlace> ?childRestingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?simonCadellRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?tedSpouse ?georgeanneSpouse WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?tedSpouse .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Georgeanne_Rice> <http://dbpedia.org/property/spouse> ?georgeanneSpouse .
  }
}
```",3,3,4,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
SELECT ?militaryForce ?commander WHERE {
  # Find military forces involved in the Napoleonic Wars
  ?force <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Napoleonic_Wars> .
  
  # Find Arthur Wellesley's command
  OPTIONAL { 
    <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commanderOf> ?force .
  }
  
  # Find the commander of the 1st Light Cavalry Lancers Regiment during the Napoleonic Wars
  OPTIONAL {
    ?regiment <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Napoleonic_Wars> ;
              <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?regiment = <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)>) 
  }
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> .
    ?father <http://dbpedia.org/ontology/child> ?child .
  }
  OPTIONAL {
    ?parent <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
    FILTER (?child = ?parent)
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse ?person WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?spouse .
  }
  
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/alumniOf> <http://dbpedia.org/resource/Ohio_State_University> ;
             <http://dbpedia.org/ontology/birthName> ?birthName .
    
    ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  }
}
```",4,4,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","```sparql
SELECT DISTINCT ?child WHERE {
  ?actor <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Actor> .
  ?parent <http://dbpedia.org/ontology/child> ?actor .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,3,1,3,2,20,23,357,331,0.060526315789473685,0.06497175141242938,0.06267029972752043
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?actorRestingPlace ?burtonRestingPlace WHERE {
  OPTIONAL {
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STRSTARTS(LCASE(?film), ""enemy at the door""))
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burtonRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT DISTINCT ?war WHERE {
  ?commander a <http://dbpedia.org/ontology/Commander> .
  ?work <http://purl.org/dc/terms/creator> ?commander .
  ?work <http://dbpedia.org/property/date> ""-01-09""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?work <http://dbpedia.org/ontology/subject> ?war .
}
```",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?administration ?almaMater WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",3,3,4,2,2,3,3,71,0,1,2,0.0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?professional ?associatedArtist WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/profession> ?professional .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/England_national_football_team> <http://www.w3.org/2006/vcard/ns#nickname> ?result .
}
```",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
SELECT ?author ?work ?decedent WHERE {
  # Find the author of ""French Algeria""
  <http://dbpedia.org/resource/French_Algeria> <http://purl.org/dc/terms/creator> ?author .
  
  # Retrieve works associated with this author
  ?author <http://www.w3.org/2002/07/owl#sameAs> ?work .

  # Find the person decedent at the work (if such a property exists)
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/decedent> ?decedent .
  }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?traceyBand ?ambaBand WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Tracey_McSween> <http://dbpedia.org/ontology/associatedMusicalArtist> ?traceyBand .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?ambaBand .
  }
}
```",3,3,4,2,2,3,3,71,1,12,0,0.07692307692307693,1.0,0.14285714285714288
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"```sparql
SELECT ?nickname WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068>.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalOrganization108070000>.
  ?entity <http://dbpedia.org/ontology/location> ?location.
  ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland>.
  OPTIONAL { 
    ?entity <http://xmlns.com/foaf/0.1/nick> ?nickname .
  }
}
```",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?peninsularCommanderWar ?gibraltarCommanderFame ?carlPontusGahnWar WHERE {
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/commanded> <http://dbpedia.org/resource/Peninsular_War> .
    ?commander <http://dbpedia.org/ontology/commanded> ?peninsularCommanderWar .
  }
  
  OPTIONAL {
    ?gibraltarCommander <http://dbpedia.org/ontology/commanded> <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?gibraltarCommander <http://xmlns.com/foaf/0.1/knows> ?claimToFame .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/commanded> ?carlPontusGahnWar .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?person ?associatedArtist WHERE {
  ?person <http://dbpedia.org/ontology/wrote> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Artists> .
  ?person <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Westside_Story_(song)> .

  OPTIONAL {
    ?person <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?peninsularWarCommanderWars ?carlPontusGahnWars WHERE {
  # Wars commanded by commanders in the Peninsular War
  OPTIONAL {
    <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
    ?commander <http://dbpedia.org/property/wars> ?peninsularWarCommanderWars .
  }
  
  # Wars involving Carl Pontus Gahn
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/commander> ?carlPontusGahnWars .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?nickname ?johnAlmaMater ?awardee ?awardeeAlmaMater WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?nickname .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?johnAlmaMater .
  }

  OPTIONAL {
    ?awardee <http://dbpedia.org/property/award> <http://dbpedia.org/resource/Royal_Medal> .
    ?awardee <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMater .
  }
}
```",5,5,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?fatherOfPrincessElizabeth ?grandchild WHERE {
  # Step 1: Find the father of Princess Elizabeth of Greece and Denmark
  <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?fatherOfPrincessElizabeth .

  # Step 2: Find the predecessor of Frederick VIII of Denmark
  OPTIONAL {
    <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?predecessor .
    
    # Step 3: Find the child of this predecessor
    ?predecessorChild <http://dbpedia.org/ontology/child> ?childOfPredecessor .

    # Step 4: Find the grandchild (child of the child)
    ?childOfPredecessor <http://dbpedia.org/ontology/child> ?grandchild .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?simonCadellRestingPlace ?awardeeRestingPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?simonCadellRestingPlace .
  }
  
  OPTIONAL {
    ?award <http://dbpedia.org/property/awardedBy> <http://dbpedia.org/resource/Gerald_Graham> .
    ?recipient <http://purl.org/dc/terms/relation> ?award .
    ?recipient <http://dbpedia.org/ontology/deathPlace> ?awardeeRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?force WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?war .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://www.w3.org/2006/vcard/ns#hasName> ?birthName .
    ?person <http://dbpedia.org/ontology/memberOfMilitaryForce> ?force .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?nysa <http://dbpedia.org/ontology/father> ?child ;
        <http://dbpedia.org/property/husband> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandChild WHERE {
  # Step 1: Find the predecessor of Frederick VIII of Denmark
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> .

  # Step 2: Find the child of this predecessor
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?predecessor <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Find the child of the individual identified in step 2
  ?grandChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?child <http://dbpedia.org/ontology/child> ?grandChild .
}
```",3,3,4,3,1,3,2,20,0,6,32,0.0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
SELECT ?person WHERE {
  # Find the profession of Satomi Ishihara
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?profession .

  # Find the spouse of Ted McGinley
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Check if there is a person who matches both criteria
  ?person <http://purl.org/dc/terms/subject> ?profession .
  FILTER (?spouse = ?person)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?spouse ?child ?parent WHERE {
  # Find spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouse .

  # Find child of Antiochus III the Great who is also a parent of Nysa
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?child <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child <http://dbpedia.org/property/spouse> ?nysa .
  
  # Find Nysa as the wife of Pharnaces I of Pontus
  ?nysa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wife> ;
        <http://dbpedia.org/property/husband> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .

  # Ensure the child is also a parent of Nysa
  ?nysa <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Child> ;
        <http://dbpedia.org/property/parent> ?child .

  # Assign the child as a parent of Nysa
  BIND(?child AS ?parent)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?person ?award WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> .
  ?person <http://purl.org/dc/terms/receivedAward> ?award .
}
```",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?nativeCity ?actor WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Hub_City> <http://www.w3.org/2006/vcard/ns#location> ?location .
    ?location <http://purl.org/dc/terms/description> ?nativeCity .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",3,3,4,2,2,3,3,71,1,3,0,0.25,1.0,0.4
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"```sparql
SELECT DISTINCT ?person ?team WHERE {
  # Retrieve Eiður Guðjohnsen's birth date
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Find persons born on the same date who are both soccer players and managers
  ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .

  # Retrieve teams associated with these persons
  ?person <http://dbpedia.org/property/team> ?team .
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?awardee ?almaMater WHERE {
  # Find the award related to Royal Medals and QUB (Queen's University Belfast)
  ?award <http://dbpedia.org/ontology/reference> ""Royal Medals"" .
  ?award <http://dbpedia.org/property/figureKnownAs> ""QUB"" .

  # Retrieve awardees of this award
  ?awardee <http://dbpedia.org/ontology/recipient> ?award .

  # Get the alma mater for each awardee
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?commander ?decedentAlgeria ?decedentSatterthwaite WHERE {
  # Commander in Franco-Hova Wars
  OPTIONAL { 
    ?war <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(CONTAINS(LCASE(STR(?war)), ""franco-hova wars""))
  }

  # Capital of Algeria and person decedent there
  {
    <http://dbpedia.org/resource/Algeria> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?capital .
    ?person <http://dbpedia.org/ontology/deathPlace> ?capital .
    BIND(?person AS ?decedentAlgeria)
  }

  # Work of Joseph C. Satterthwaite and person decedent there
  {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/work> ?work .
    ?person <http://dbpedia.org/ontology/deathPlace> ?work .
    BIND(?person AS ?decedentSatterthwaite)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
SELECT ?spouseOfLaodiceIV ?royalChild ?parentOfNysa WHERE {
  # Spouse of Laodice IV
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/property/spouse> ?spouseOfLaodiceIV .

  # Child of Seleucus II Callinicus who is royalty
  OPTIONAL {
    ?childOfSeleucusII <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/property/child> ?childOfSeleucusII .
  }

  # Parent of Nysa (wife of Pharnaces I of Pontus)
  OPTIONAL {
    ?parentOfNysa <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> .
  }
}
```",4,5,5,2,3,3,3,71,1,3,0,0.25,1.0,0.4
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?birthPlace WHERE {
  ?politician <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Essex> .
  ?politician <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  OPTIONAL {
    ?child <http://dbpedia.org/property/parent> ?politician .
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> (<http://dbpedia.org/ontology/Politician> <http://dbpedia.org/ontology/OfficeHolder>) .
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?spouse .
  ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?carlFalkBand ?actor ?actorBand WHERE {
  # Query for the band associated with Carl Falk
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/memberOf> ?band .
    BIND(?band AS ?carlFalkBand)
  }
  
  # Query for actors of ""Honor Up"" who are musical artists and their bands
  OPTIONAL {
    ?movie <http://dbpedia.org/property/starring> ?actor .
    FILTER(CONTAINS(LCASE(STR(?movie)), ""honor up""))
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
    ?actor <http://dbpedia.org/ontology/memberOf> ?band .
    BIND(?actor AS ?actor)
    BIND(?band AS ?actorBand)
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?author ?sriLankaEntity ?war WHERE {
  # Step 1: Find the author of the event
  <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?author .

  # Step 2: Check for entities in Sri Lanka related to the author
  OPTIONAL {
    ?author (<http://www.w3.org/2006/vcard/ns#hasAddress>|<http://dbpedia.org/ontology/birthPlace>|<http://dbpedia.org/ontology/residence>) ?location .
    FILTER(CONTAINS(LCASE(STR(?location)), ""sri lanka""))
    BIND(?location AS ?sriLankaEntity)
  }

  # Step 3: Identify any wars the author is associated with
  OPTIONAL {
    ?author <http://dbpedia.org/ontology/participatedIn> ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,3,1,0.0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
SELECT ?event ?militaryForce ?war WHERE {
  ?event a <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/ns/prov#location> <http://dbpedia.org/resource/Chile> .
  
  OPTIONAL { 
    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
    ?militaryForce <http://dbpedia.org/ontology/war> ?war .
  }
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?administration ?country WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://www.w3.org/2002/07/owl#sameAs> ?mother .
    ?mother <http://dbpedia.org/ontology/husband> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?country .
  }
}
```",3,3,4,2,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?child WHERE {
  # Step 1: Find a child of Thinkhaya of Pagan
  ?thinkhayaChild <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
  
  # Step 2: Identify the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  OPTIONAL {
    ?predecessor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
    
    # Step 3: Find the child of that predecessor
    ?child <http://dbpedia.org/ontology/father> ?predecessor .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?member WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2002/07/owl#sameAs> ?country .
    ?country a <http://dbpedia.org/class/yago/Country108069068> .
  }
  
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
    ?member <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
    FILTER (?nativePlace = ?residence)
  }
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
SELECT ?territory ?timeZoneRegion WHERE {
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík> .
    ?entity <http://www.w3.org/2004/02/skos/core#prefLabel> ?territory .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://dbpedia.org/property/region> ?timeZoneRegion .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
SELECT ?person ?band WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
  }
}
```",3,3,4,2,2,3,3,71,1,36,0,0.02702702702702703,1.0,0.052631578947368425
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember ?meshuggahArtist ?slayerArtist WHERE {
  ?bandMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Meshuggah> .
  ?bandMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/S.A._Slayer> .
  ?bandMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Don_Dokken> .

  OPTIONAL {
    ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?meshuggahArtist .
  }
  
  OPTIONAL {
    ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?slayerArtist .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?warIrene ?battleWar ?forceNarciso WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?warIrene .
  }
  
  OPTIONAL {
    ?commander <http://dbpedia.org/property/commandedBattle> <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> .
    ?battleWar <http://dbpedia.org/ontology/partOf> ?commander .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/commandedForce> ?forceNarciso .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?grandChild WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor a <http://dbpedia.org/ontology/Royalty> .

  ?child <http://dbpedia.org/ontology/parent> ?successor .
  ?child a <http://dbpedia.org/ontology/Royalty> .

  ?grandChild <http://dbpedia.org/ontology/parent> ?child .
}
```",3,5,4,3,1,3,3,71,0,2,5,0.0,0.0,0
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?childOfThinkhaya ?parentOfChildOfNarapati WHERE {
  # Find child of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thinhthu_II_of_Pagan> <http://dbpedia.org/ontology/father> ?thinkhaya .
  ?thinkhaya <http://dbpedia.org/ontology/child> ?childOfThinkhaya .

  # Find parent of the child of Narapati I of Ava
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/father> ?narapati .
  ?narapati <http://dbpedia.org/ontology/child> ?childOfNarapati .
  ?childOfNarapati <http://dbpedia.org/ontology/father> ?parentOfChildOfNarapati .

  # Check if there is an overlap
  FILTER (?childOfThinkhaya = ?parentOfChildOfNarapati)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
SELECT ?heatherRoyWar ?beauchampSeymourWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/profession> ?profession .
    ?militaryUnit <http://dbpedia.org/ontology/memberOf> ?profession .
    ?militaryUnit <http://dbpedia.org/property/war> ?heatherRoyWar .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/memberOf> ?militaryUnit .
    ?militaryUnit <http://dbpedia.org/property/war> ?beauchampSeymourWar .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Ireland> .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  ?office <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Kingdom_of_Ireland> .

  ?person <http://dbpedia.org/ontology/commanderOfMilitaryUnit> ?unit1 .
  ?unit1 <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Battle_of_Leipzig> .

  ?person <http://dbpedia.org/ontology/militaryCommander> ?unit2 .
  ?unit2 <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Napoleonic_Wars> .
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?parentIlona ?childJosephAugust ?parentNative WHERE {
  # Parent of Archduchess Ilona of Austria
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentIlona .
  }

  # Child of Archduke Joseph August of Austria
  OPTIONAL {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childJosephAugust .
  }
  
  # Parent of the native from a settlement at elevation 96.0
  OPTIONAL {
    ?settlement <http://www.w3.org/2006/vcard/ns#hasElevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
    ?native <http://dbpedia.org/ontology/nationality> ?settlement .
    ?native <http://www.w3.org/2006/vcard/ns#hasParent> ?parentNative .
  }
}
```",5,6,6,3,3,3,3,71,1,0,0,1.0,1.0,1.0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT DISTINCT ?war WHERE {
  # Find commanders of the Peninsular War
  ?commander <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Peninsular_War> .
  
  # Use these commanders to find other wars they commanded
  ?commander <http://dbpedia.org/ontology/commander> ?war .
  FILTER(?war != <http://dbpedia.org/resource/Peninsular_War>)
  FILTER(STRSTARTS(STR(?war), ""http://dbpedia.org/resource/"") && 
         EXISTS { ?war a <http://dbpedia.org/ontology/MilitaryConflict> })
}
```",3,4,4,3,1,3,3,71,0,0,118,0,0.0,0
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
SELECT ?settlement ?alterEgo WHERE {
  OPTIONAL {
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?admin .
    ?admin <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
    FILTER EXISTS { ?settlement a <http://dbpedia.org/class/yago/Settlement108069068> }
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  }
}
```",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?bandApollo ?bandTracey WHERE {
  OPTIONAL {
    # Finding the writer of ""Apollo"" (Hardwell song)
    ?song <http://dbpedia.org/ontology/writer> ?writer .
    FILTER(STR(?song) = ""Apollo_(Hardwell_song)"")
    
    # Finding band associated with the writer
    ?writer <http://dbpedia.org/property/band> ?bandApollo .
  }
  
  OPTIONAL {
    # Identifying Tracey Elizabeth McSween by birth name
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Tracey Elizabeth McSween""@en .
    
    # Finding band associated with Tracey Elizabeth McSween
    ?person <http://dbpedia.org/property/band> ?bandTracey .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?writer WHERE {
  OPTIONAL { 
    ?album <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Dave_Flett> .
    ?album <http://purl.org/dc/terms/references> <http://dbpedia.org/resource/Manfred_Mann> .
    ?album <http://dbpedia.org/ontology/producer> ?writer .
    ?writer <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""Johannesburg"" .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?associatedArtistRedTide ?bandMemberDokken ?associatedArtistWatchtower ?furtherAssociatedArtist WHERE {
  # Associated Musical Artist of Red Tide (band)
  OPTIONAL { 
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistRedTide .
  }

  # Band Member of Donald Maynard Dokken
  OPTIONAL {
    ?dokkenPerson <http://www.w3.org/2000/01/rdf-schema#label> ""Donald Maynard Dokken"" .
    ?bandMember <http://dbpedia.org/ontology/member> ?dokkenPerson .
    ?bandMember <http://dbpedia.org/ontology/musicalArtist> ?bandMemberDokken .
  }

  # Associated Musical Artist of Watchtower (band)
  OPTIONAL {
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistWatchtower .
    ?furtherAssociatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistWatchtower .
  }
}
```",5,6,6,2,3,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?administration ?warLocation WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL {
    ?musnier <http://dbpedia.org/ontology/militaryConflict> ?conflict .
    FILTER(?musnier = <http://dbpedia.org/resource/Louis_François_Félix_Musnier>)
    ?conflict <http://dbpedia.org/ontology/location> ?warLocation .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
SELECT ?personDecedentAlgeria ?personDecedentSatterthwaite WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Algiers> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?decedent <http://dbpedia.org/ontology/deathPlace> ?address .
    ?decedent <http://xmlns.com/foaf/0.1/name> ?personDecedentAlgeria .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/workLocation> ?workLocation .
    ?decedent2 <http://dbpedia.org/ontology/deathPlace> ?workLocation .
    ?decedent2 <http://xmlns.com/foaf/0.1/name> ?personDecedentSatterthwaite .
  }
}
```",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?force ?commander WHERE {
  ?event <http://dbpedia.org/ontology/participatedIn> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?event <http://dbpedia.org/ontology/militaryForce> ?force .
  
  OPTIONAL {
    ?force <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?commander = <http://dbpedia.org/resource/Emilio_Mola>)
  }
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?producer ?associatedArtist ?professional WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/professional> ?professional .
  }
}
```",4,4,5,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?entityInTimeRegion ?birthPlace WHERE {
  OPTIONAL {
    ?region <http://www.w3.org/2004/02/skos/core#prefLabel> ""Time""@en .
    ?region <http://dbpedia.org/ontology/location> ?location .
    ?location <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?entityInTimeRegion .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
  ?person <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .
  ?person <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
  ?person <http://dbpedia.org/ontology/child> ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Mlada_(abbess)> <http://www.w3.org/2002/07/owl#sameAs> ?mlada .
    ?mlada <http://dbpedia.org/ontology/father> ?parent .
    
    ?parent <http://dbpedia.org/ontology/child> ?royalChild .
    ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

    ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
  }
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT DISTINCT ?rapper ?song ?producer WHERE {
  ?rapper a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://www.w3.org/2000/01/rdf-schema#label> ""Rapper""@en .
  
  ?rapper <http://purl.org/dc/terms/creator> ?work .
  ?work a <http://dbpedia.org/ontology/Song>, <http://dbpedia.org/ontology/MusicalWork> .

  OPTIONAL {
    ?song <http://dbpedia.org/property/producer> ?producer .
  }
}
```",4,8,5,3,2,3,3,71,0,0,473,0,0.0,0
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?native WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence a <http://dbpedia.org/class/yago/Country108069068> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
    ?team <http://dbpedia.org/property/manager> ?manager .
  }
  ?native <http://dbpedia.org/ontology/nativePlace> ?residence .
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?manager ?almaMater WHERE {
  # Step 1: Find the manager of 2013 Júbilo Iwata season
  OPTIONAL { 
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .
  }
  
  # Step 2: Identify a person born in 1958
  OPTIONAL {
    ?person <http://www.w3.org/2006/vcard/ns#birthDate> ""1958-01-01""^^xsd:date .
    
    # Step 3: Find the alma mater of this person
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
    
    # Step 4: Filter the alma mater to match specific criteria
    FILTER (
      EXISTS { ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label . FILTER (CONTAINS(LCASE(?label), ""japan"")) }
      && EXISTS { ?almaMater <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Universities_in_Japan> }
      && EXISTS { ?almaMater <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/EducationalInstitution108067> }
    )
  }
}
```",4,8,5,3,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?joaquinBlakeWar ?carlPontusGahnBirthName ?carlPontusGahnWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/participatedIn> ?joaquinBlakeWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?carlPontusGahnBirthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?carlPontusGahnBirthName .
    ?person <http://dbpedia.org/ontology/participatedIn> ?carlPontusGahnWar .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?manager WHERE {
  # Manager of Takashi Sekizuka's Team
  ?team <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Takashi_Sekizuka> .
  ?team <http://dbpedia.org/property/manager> ?manager .

  # Native Country of Yōichi Masuzoe's Residence
  <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .

  # Member of University of Tsukuba
  ?manager <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?warMahesh ?entitySriLanka ?warJagath WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/war> ?warMahesh .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Sri_Lanka> ?property ?entitySriLanka .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/war> ?warJagath .
  }
}
```",3,3,4,1,3,2,3,28,1,1012,0,0.0009871668311944718,1.0,0.001972386587771203
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?administration WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    OPTIONAL {
      ?spouse <http://dbpedia.org/property/father> ?father .
      ?father <http://dbpedia.org/ontology/administration> ?administration .
    }
  }
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Identify Sean Pertwee's claim to fame that is both a film and a military conflict
  ?claimTo Fame rdf:type <http://dbpedia.org/ontology/Film> .
  ?claimTo Fame rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/property/claimToFame> ?claimToFame .

  # Ensure Sean Pertwee is a child of Jon Pertwee
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Sean_Pertwee> .

  # Find the actor in the claim to fame
  ?claimToFame <http://dbpedia.org/property/starring> ?actor .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT DISTINCT ?person ?commander WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://dbpedia.org/property/force> ?force .
  ?force <http://dbpedia.org/ontology/commander> ?commander .
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
SELECT ?birthName WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/ontology/birthName> ?birthName .
  FILTER EXISTS { 
    <http://dbpedia.org/resource/Gigi_Rice> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Actors100000001> .
  }
  FILTER EXISTS {
    <http://dbpedia.org/resource/Gigi_Rice> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?actor WHERE {
  # Identify Sean Pertwee's claim to fame that is a film or military conflict
  ?fame <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Sean_Pertwee> .
  FILTER (
    { ?fame a <http://dbpedia.org/ontology/Film> }
    UNION
    { ?fame a <http://dbpedia.org/ontology/MilitaryConflict> }
  )
  
  # Find the actor associated with these claims to fame
  ?fame <http://dbpedia.org/ontology/starring> ?actor .
  
  # Verify John Devon Roland Pertwee as Sean Pertwee's parent
  OPTIONAL {
    <http://dbpedia.org/resource/Sean_Pertwee> <http://www.w3.org/2002/07/owl#sameAs> ?child .
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/John_Devon_Roland_Pertwee> .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?administrationSettlement ?alterEgo ?almaMater WHERE {
  OPTIONAL {
    ?green <http://dbpedia.org/ontology/administrativeUnit> ?admin .
    ?admin <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?administrationSettlement .
    ?administrationSettlement a <http://dbpedia.org/class/yago/Settlements100000>.
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alsoKnownAs> ?alterEgo .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",5,6,6,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?band WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween"" .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?child ?parent WHERE {
  # Step 1: Find children of Ernest Augustus, Crown Prince of Hanover
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  
  # Step 2: Check if the child is a parent to a royalty who is also:
  # - Child of Ernest Augustus, Duke of Brunswick
  # - Spouse of Princess Victoria Louise of Prussia
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?spouse <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .

  # Return the child and their parent
  BIND(?child AS ?parent)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT DISTINCT ?war ?commander WHERE {
  # Find 'Polish Horse' which is both a military unit and an organization
  ?polishHorse <http://www.w3.org/2004/02/skos/core#prefLabel> ""Polish Horse""@en .
  ?polishHorse a <http://dbpedia.org/class/yago/MilitaryUnit100000001> ;
               a <http://dbpedia.org/class/yago/Organisation100000001> .

  # Find wars that 'Polish Horse' participated in
  ?war a <http://dbpedia.org/ontology/War> ;
       <http://dbpedia.org/ontology/participatedInWar> ?polishHorse .
  
  # Retrieve commanders of these wars
  ?war <http://dbpedia.org/property/commander> ?commander .
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person ?band WHERE {
  # Step 1: Find the decedent's birth date
  ?decedent a dbo:Athlete ;
            dbo:sport dbr:Soccer ;
            foaf:based_near dbr:Zolotonosha ;
            dbo:birthDate ?birthDate .

  # Step 2: Find another person born on that date
  ?person dbo:birthDate ?birthDate .

  # Step 3: Identify the band of Amba Shepherd
  ?ambashepherd foaf:name ""Amba Shepherd""@en .
  ?ambashepherd dbo:band ?band .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?parentOfHenuttawy ?spouseOfFather WHERE {
  # Part 1: Parent of Henuttawy (19th dynasty)
  OPTIONAL { 
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://www.w3.org/2006/vcard/ns#hasParent> ?parentOfHenuttawy .
  }

  # Part 2: Spouse of the father of the commander in Battle of Perire
  OPTIONAL {
    ?battle <http://dbpedia.org/ontology/commander> ?commander .
    FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Perire>)
    
    ?commander <http://www.w3.org/2006/vcard/ns#hasParent> ?fatherOfCommander .
    ?fatherOfCommander <http://dbpedia.org/ontology/spouse> ?spouseOfFather .

    # Ensure the commander is royalty
    ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?birthPlace ?landmark WHERE {
  # Step 1: Identify The Boils and their associated musical artists that are organizations and groups/bands
  ?band rdf:type dbo:Band ;
        foaf:name ""The Boils"" .
  
  ?artist dbo:associatedMusicalArtist ?band ;
          rdf:type dbo:Organization, (dbo:Group | dbo:Band) .

  # Step 2: Retrieve the birthplace of these associated artists
  ?artist dbo:birthPlace ?birthPlace .

  # Step 3: Identify landmarks at an elevation of 50
  ?landmark dbo:elevation ""50""^^xsd:int ;
            rdf:type dbo:Lighthouse .
  
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?spouse WHERE {
  ?princess rdf:type dbo:Royalty ;
            foaf:name ""Princess Victoria Louise of Prussia"" ;
            dbo:birthName ""Victoria Louise of Prussia"" .
  
  OPTIONAL { 
    ?princess dbo:spouse ?spouse .
  }
  
  ?parent dbo:child ?princess .
  ?parent foaf:name ""Ernest Augustus, Duke of Brunswick"" .

  ?princess dbo:parent ?child .
  ?child foaf:name ""Prince Ernest Augustus of Hanover (born 1914)"" .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?club ?nickname WHERE {
  ?club <http://dbpedia.org/ontology/sportsTeam> ?team .
  ?team <http://dbpedia.org/ontology/teamMember> <http://dbpedia.org/resource/Armando_Heeb> .
  ?club a <http://dbpedia.org/class/yago/SportsClub100000001> .
  ?club a <http://dbpedia.org/class/yago/SoccerClub1000000> .
  OPTIONAL { 
    ?club <http://www.w3.org/2006/vcard/ns#nickname> ?nickname .
  }
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?conflict WHERE {
  ?conflict a <http://dbpedia.org/ontology/MilitaryConflict> ;
           a <http://dbpedia.org/ontology/Event> .
  
  ?conflict <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr> .

  OPTIONAL {
    ?event1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Algiers> ;
            <http://dbpedia.org/ontology/event> ?conflict .
  }
  
  OPTIONAL {
    ?event2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/French_Algeria> ;
            <http://dbpedia.org/ontology/event> ?conflict .
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?grandchild WHERE {
  # Find the children of Archduke Joseph Karl
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # For each child, find their children (grandchildren of Archduke Joseph Karl)
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .

  # Check if the grandchild is a parent to both Géza von Habsburg and Archduchess Ilona of Austria
  ?grandchild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
  ?grandchild <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","```sparql
SELECT ?figureKnownAsQUB ?almaMater WHERE {
  OPTIONAL {
    ?entity <http://dbpedia.org/property/nickname> ""QUB"" .
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?figureKnownAsQUB .
  }
  
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politicianFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> ;
           <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"```sparql
SELECT ?author ?awardEntity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/property/author> ?author .
  }
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Ralph_L._Brinster> .
    ?award <http://dbpedia.org/ontology/entity> ?awardEntity .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?spouse WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/birthName> ?tedBirthName .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Georgeanne_Marie_Rice> <http://dbpedia.org/ontology/birthName> ?georgeanneBirthName .
  }
  
  OPTIONAL {
    ?spouse <http://dbpedia.org/property/spouse> ?tedBirthName .
  }
  OPTIONAL {
    ?spouse <http://dbpedia.org/property/spouse> ?georgeanneBirthName .
  }

  FILTER(?tedBirthName = ?georgeanneBirthName)
  
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?bandMemberDokken ?associatedArtistSlayer WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMemberDokken .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistSlayer .
  }
}
```",3,4,4,2,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
SELECT ?commander ?militaryForce WHERE {
  # Identify the Battle of Leipzig
  <http://dbpedia.org/resource/Battle_of_Leipzig> a dbo:SocietalEvent ;
    a dbo:Event ;
    a dbo:MilitaryConflict .

  # Find commanders involved in the battle
  <http://dbpedia.org/resource/Battle_of_Leipzig> dbo:commander ?commander .

  # Determine the military force associated with each commander
  ?commander dbo:militaryForce ?militaryForce .

  # Ensure connection to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> .
    FILTER EXISTS { ?reference dbo:subject <http://dbpedia.org/resource/Battle_of_Leipzig> }
  }
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"```sparql
SELECT ?member WHERE {
  OPTIONAL {
    ?manager <http://dbpedia.org/ontology/team> ?team .
    ?season <http://dbpedia.org/property/teamManager> ?manager .
    FILTER(?season = <http://dbpedia.org/resource/1998_Kashima_Antlers_season>)
    FILTER(EXISTS { ?manager a <http://dbpedia.org/ontology/SportsManager> })
  }
  
  OPTIONAL {
    ?member <http://www.w3.org/ns/org#memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> .
  }

  OPTIONAL {
    ?teamMember <http://dbpedia.org/property/team> ?team .
    FILTER(?team = ?managerTeam)
    ?teamMember = ?member
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?bandMember WHERE {
  OPTIONAL {
    ?film <http://dbpedia.org/ontology/references> ?artist .
    FILTER(STR(?film) = ""Nevermore_(2006_film)"")
    FILTER(EXISTS { ?artist a <http://dbpedia.org/ontology/Artist> })
  }
  OPTIONAL {
    ?joseph <http://dbpedia.org/ontology/memberOf> ?band .
    FILTER(STR(?joseph) = ""Joseph_Michael"")
  }
  ?bandMember <http://dbpedia.org/ontology/memberOf> ?band .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parentOfMeritamen ?spouseOfRamessesII WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/birthParent> ?parentOfMeritamen .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouseOfRamessesII .
  }
}
```",4,4,5,2,3,3,3,71,0,1,1,0.0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?administration ?deathPlace WHERE {
  # Query for Emperor Go-Yōzei's administration
  OPTIONAL { 
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/ontology/administration> ?administration .
  }
  
  # Query to find Matsudaira Tadamasa's great-grandfather who is a politician and his death place
  OPTIONAL {
    ?tadamasa dbo:parent ?father1 ;
              rdf:type dbo:OfficeHolder .
    ?father1 dbo:parent ?grandfather ;
             rdf:type dbo:OfficeHolder .
    ?grandfather dbo:parent ?greatGrandfather ;
                 rdf:type dbo:Politician .
    ?greatGrandfather dbo:deathPlace ?deathPlace .
  }
}
```",4,6,5,3,2,3,3,71,0,40,1,0.0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/bandMember> ?bandMember .
    FILTER EXISTS { ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> }
  }
  
  OPTIONAL {
    ?person <http://xmlns.com/foaf/0.1/name> ""Jim Sheppard"" .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?force WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?birthName .
    ?person <http://dbpedia.org/ontology/force> ?force .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
SELECT ?headquarter ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Royal_Dublin_Society> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
  
  OPTIONAL {
    ?politician a dbo:Politician ;
               dbo:nativePlace dbr:Essex .
    
    ?child dbo:parent ?politician ;
           a (dbo:Politician dbo:OfficeHolder) .
    
    ?child dbo:birthPlace ?birthPlace .
  }
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find spouse of Amun-her-khepeshef
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Amun-her-khepeshef> .
  
  # Step 2: Find child of that spouse
  ?child <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> ?spouse .

  # Step 3: Identify parent of this child
  ?parent <http://dbpedia.org/ontology/child> ?child .
  
  # Step 4: Check if any of these parents is also a spouse of Ramesses II
  FILTER EXISTS { 
    ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","```sparql
SELECT ?writerBand ?personBand ?shenaBand WHERE {
  OPTIONAL {
    # Band of the writer of ""Apollo"" (Hardwell song)
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://dbpedia.org/ontology/band> ?writerBand .
  }
  
  OPTIONAL {
    # Band of the person born on 1985-04-29
    ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Birth_date:1985-04-29> .
    ?person <http://dbpedia.org/ontology/band> ?personBand .
  }
  
  OPTIONAL {
    # Band of Shèna
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?shenaBand .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?grandparent WHERE {
  # Step 1: Find Vajiralongkorn's parent
  ?vajiralongkorn <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 2: Find the child of Vajiralongkorn's parent
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .

  # Step 3: Find the parent of this child
  ?child <http://dbpedia.org/ontology/birthParent> ?grandparent .
}
```",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?awardeeAlmaMater ?mayorAlmaMater WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/receivesAward> <http://dbpedia.org/resource/Royal_Medal> .
    ?person <http://dbpedia.org/ontology/almaMater> ?awardeeAlmaMeter .
  }
  
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politicalParty> ?party ;
           <http://dbpedia.org/property/mayorFor> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?bandTracey ?bandApolloWriter ?band19850429 WHERE {
  OPTIONAL {
    ?person foaf:name ""Tracey Elizabeth McSween"" .
    ?person dbo:birthName ""Tracey Elizabeth McSween"" .
    ?person dbo:associatedMusicalArtist ?bandTracey .
  }
  
  OPTIONAL {
    ?song dbo:lyricsBy ?writer .
    ?song foaf:name ""Apollo (Hardwell song)"" .
    ?writer dbo:associatedMusicalArtist ?bandApolloWriter .
  }

  OPTIONAL {
    ?person dbo:birthday ""1985-04-29""^^xsd:date .
    ?person dbo:associatedMusicalArtist ?band19850429 .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
# Query for wars involving Irene Morales
SELECT ?war WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Irene Morales"" .
  ?person <http://dbpedia.org/property/war> ?war .
}

UNION

# Query for wars commanded by a character in a work published on 2001-09-01
SELECT ?war WHERE {
  ?work <http://purl.org/dc/terms/date> ""2001-09-01""^^xsd:date .
  ?character <http://dbpedia.org/ontology/appearsIn> ?work .
  ?character <http://dbpedia.org/property/commanderOfWar> ?war .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"```sparql
SELECT ?resident WHERE {
  OPTIONAL {
    # Step 1: Find the director of Pipe Dreams (1976 film)
    <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?director .
    
    # Step 2: Get the birthplace of the director
    ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

    # Step 3: Ensure the birthplace is a settlement
    ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Category:Settlements> .
    
    # Step 4: Find residents of this settlement
    ?birthPlace <http://dbpedia.org/ontology/resident> ?resident .
  }
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
SELECT ?willRahmerBand ?solaceOfRequiemBand ?parentBand WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/member> ?band .
    ?band <http://www.w3.org/2000/01/rdf-schema#label> ?willRahmerBand .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/member> ?solaceOfRequiemBand .
    ?solaceOfRequiemBand <http://www.w3.org/2000/01/rdf-schema#label> ?bandLabel .
    
    OPTIONAL {
      ?solaceOfRequiemBand <http://dbpedia.org/ontology/member> ?parentBand .
      ?parentBand <http://www.w3.org/2000/01/rdf-schema#label> ?parentBandLabel .
    }
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?entity WHERE {
  OPTIONAL { 
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""Central European Time"" .
  }
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Schio> .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarter WHERE {
  ?venue <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/2012_Pro12_Grand_Final> .
  ?venue a <http://dbpedia.org/class/yago/Venue108069068> ;
         a <http://dbpedia.org/class/yago/ArchitecturalStructure1000000> .
  ?venue <http://dbpedia.org/ontology/owner> ?owner .
  ?owner <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?headquarter .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
SELECT ?deathPlace ?administration WHERE {
  OPTIONAL {
    # Find Yūki Hideyasu's father who is a politician and his death place
    <http://dbpedia.org/resource/Yuki_Hideyasu> <http://xmlns.com/foaf/0.1/family_name> ?father .
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?father <http://dbpedia.org/property/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Find Emperor Go-Mizunoo's father and his administration
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://xmlns.com/foaf/0.1/family_name> ?fatherGoMizunoo .
    ?fatherGoMizunoo <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT DISTINCT ?person WHERE {
  # Find members of both Guns N' Roses and Metallica
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Guns_N%27_Roses> .
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .

  # Check if the same person is a member of Newsted
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Newsted> .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?associatedArtist WHERE {
  # Find associated musical artist of Matt Colton who is an artist
  ?mattColton a <http://dbpedia.org/ontology/Person> ;
              <http://www.w3.org/2000/01/rdf-schema#label> ""Matt Colton""@en ;
              <http://dbpedia.org/ontology/birthName> ?birthName .
  
  FILTER(CONTAINS(LCASE(?birthName), ""matt colton""))
  
  OPTIONAL {
    ?mattColton <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  
  # Find band members of Luke Vibert
  ?lukeVibert a <http://dbpedia.org/ontology/MusicalArtist> ;
              <http://www.w3.org/2000/01/rdf-schema#label> ""Luke Vibert""@en .
  
  OPTIONAL {
    ?bandMember <http://dbpedia.org/ontology/memberOfBand> ?lukeVibert .
    
    # Check if the band member is also an associated musical artist of Matt Colton
    FILTER(?associatedArtist = ?bandMember)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?organisation ?mayor ?force WHERE {
  ?organisation <http://dbpedia.org/ontology/administrativeCenter> <http://dbpedia.org/resource/Warsaw> .
  ?organisation a <http://dbpedia.org/ontology/Organisation> .
  OPTIONAL { 
    ?organisation <http://dbpedia.org/ontology/mayor> ?mayor .
    ?mayor <http://dbpedia.org/property/force> ?force .
  }
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?party WHERE {
  <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/administration> ?party .
  ?party a <http://dbpedia.org/class/yago/PoliticalParty108069068> .
  OPTIONAL { 
    ?party <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Serbia> .
  }
}
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
SELECT ?societalEvent ?militaryForceChile ?narcisoCamperoForce WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Societal_events_in_Chile> .
    ?event <http://dbpedia.org/property/military_force> ?militaryForceChile .
    BIND(?event AS ?societalEvent)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/military_force> ?narcisoCamperoForce .
  }
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
SELECT ?spouse1 ?parentSpouse WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse1 .

  # Step 2: Identify parents of Prince George William of Hanover who are royalty
  {
    SELECT ?parent WHERE {
      <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/birthParent> ?parent .
      ?parent <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    }
  } AS %parents

  # Step 3: Find children of these parents who are royalty
  {
    SELECT ?child WHERE {
      %parents
      ?parent <http://dbpedia.org/ontology/birthChild> ?child .
      ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    }
  } AS %royalChildren

  # Step 4: Find the parent of these royal children
  {
    SELECT ?parentSpouse WHERE {
      %royalChildren
      ?child <http://dbpedia.org/ontology/birthParent> ?grandparent .
      ?grandparent <http://dbpedia.org/property/spouse> ?parentSpouse .
    }
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
SELECT ?native WHERE {
  ?person <http://dbpedia.org/ontology/nickName> ""Jackson, Tennessee""@en .
  ?person <http://dbpedia.org/ontology/film> ?film1 .
  ?film1 <http://dbpedia.org/ontology/title> ""The Departed""@en .
  
  ?person <http://dbpedia.org/ontology/film> ?film2 .
  ?film2 <http://dbpedia.org/ontology/title> ""All About the Andersons""@en .

  ?person <http://dbpedia.org/property/native> ?native .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
SELECT ?fraserAward ?szalasiCommanderInForce ?sovietLeader WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/award> ?fraserAward .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ferenc_Szálasi> <http://dbpedia.org/property/commanderInForce> ?szalasiCommanderInForce .
  }
  OPTIONAL {
    ?sovietLeader <http://dbpedia.org/ontology/leaderOf> <http://dbpedia.org/resource/People's_Commissariat_of_Defence_(Soviet_Union)> .
  }
}
```",5,5,6,2,3,3,3,71,0,9,1,0.0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Jonathan_Band> <http://dbpedia.org/ontology/award> ?award .
  OPTIONAL { 
    ?award <http://dbpedia.org/property/war> ?war .
  }
}
```",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?country WHERE {
  # Step 1: Get the timeZone of Herzegovina-Neretva Canton
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?timeZone .

  # Step 2: Find the region associated with this timeZone
  ?region <http://dbpedia.org/ontology/timeZone> ?timeZone .

  # Step 3: Identify the country in this region
  ?country <http://www.w3.org/ns/prov#wasDerivedFrom> ?region .
}
```",3,4,4,3,1,3,2,20,0,0,173261,0,0.0,0
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> .
  ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen> .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?mayorAlmaMater ?universityNickname ?scientistAlmaMater WHERE {
  OPTIONAL {
    ?mayor <http://dbpedia.org/ontology/politician> _:a .
    ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
    ?mayor <http://dbpedia.org/ontology/almaMater> ?mayorAlmaMater .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?universityNickname .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?scientistAlmaMater .
  }
}
```",5,6,6,2,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?actorRestingPlace ?childRestingPlace WHERE {
  OPTIONAL {
    # Find actors of ""Enemy at the Door""
    ?film <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(STR(?film) = ""http://dbpedia.org/resource/Enemy_at_the_Door"")
    
    # Get resting place for each actor
    ?actor <http://dbpedia.org/ontology/burialPlace> ?actorRestingPlace .
  }
  
  OPTIONAL {
    # Find children of James Burton (property developer)
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    
    # Get resting place for each child
    ?child <http://dbpedia.org/ontology/burialPlace> ?childRestingPlace .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person ?birthName WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/parent> ?child .
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ubol_Ratana> .
  ?person <http://dbpedia.org/property/birthName> ?birthName .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT DISTINCT ?grandchild ?parent WHERE {
  # Step 1: Find children of Archduke Joseph Karl
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: Find grandchildren (children of the child)
  ?grandchild <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Identify natives of Budapest
  ?native <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ""Budapest"" .

  # Step 4: Find parents of the native of Budapest
  ?parent <http://dbpedia.org/ontology/child> ?native .

  # Step 5: Match grandchildren with parents
  FILTER(?grandchild = ?parent)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
SELECT ?awardee ?force WHERE {
  ?awardee <http://dbpedia.org/ontology/year> ""1778"" .
  ?awardee <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/France> .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/property/force> ?force .
  }
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","```sparql
SELECT ?resident WHERE {
  OPTIONAL {
    ?spauldingChild <http://dbpedia.org/ontology/father> ?father .
    ?spauldingChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/FictionalCharacter108069068> .
    ?spauldingChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoapCharacter108069068> .
    <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/child> ?spauldingChild .
  }
  
  OPTIONAL {
    ?resident <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""Springfield, Illinois"" .
    FILTER(?father = ?resident)
  }
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","```sparql
SELECT ?royalChild ?parentOfRoyalChild ?father ?princessSpouse ?childOfFatherAndPrincess ?parentOfThisChild WHERE {
  # Step 1: Find the royal child of Ernest Augustus, Duke of Brunswick
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?royalChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the parent of this royal child
  ?parentOfRoyalChild <http://dbpedia.org/ontology/child> ?royalChild .

  # Step 3: Identify the father of Ernest Augustus and spouse of Princess Victoria Louise
  OPTIONAL {
    ?father <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
    ?father <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  }

  # Step 4: Find the child of this father and spouse
  OPTIONAL {
    ?father <http://dbpedia.org/property/spouse> ?princessSpouse .
    ?childOfFatherAndPrincess <http://dbpedia.org/ontology/father> ?father .
    ?childOfFatherAndPrincess <http://dbpedia.org/ontology/mother> ?princessSpouse .
  }

  # Step 5: Determine the parent of this child
  OPTIONAL {
    ?parentOfThisChild <http://dbpedia.org/ontology/child> ?childOfFatherAndPrincess .
  }
}
```",5,6,6,2,3,3,3,71,1,569,0,0.0017543859649122807,1.0,0.0035026269702276708
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
SELECT ?movie ?actor WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:TelevisionShow .
  ?movie dbo:starring ?actor .
}
```

This query will return movies that are both films and TV shows, along with their actors. However, without additional context or specific identifiers, this is the most general solution possible.",3,6,4,3,1,3,3,71,0,0,7061,0,0.0,0
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","```sparql
SELECT ?administration WHERE {
  # Step 1: Identify the location using the postal code ""21205""
  ?location <http://dbpedia.org/ontology/postalCode> ""21205"" .
  
  # Step 2: Find the ruling party at this location
  ?location <http://dbpedia.org/property/rulingParty> ?rulingParty .

  # Step 3: Ensure it is a political party
  ?rulingParty <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .
  
  # Step 4: Retrieve the administration details of this ruling party
  ?rulingParty <http://dbpedia.org/property/administration> ?administration .
}
```",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?member ?newstedBand WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Guns_N%27_Roses> <http://dbpedia.org/ontology/member> ?member .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/band> ?newstedBand .
    FILTER (?newstedBand <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band100000001>)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?professional ?associatedArtist WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/ontology/birthName> ?birthName .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Sharon Kao""@en .
    ?person <http://purl.org/dc/terms/profession> ?professional .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    ?artist <http://www.w3.org/2000/01/rdf-schema#label> ?associatedArtist .
  }
}
```",3,3,4,2,2,2,3,28,0,4,2,0.0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
SELECT ?restingPlaceAlanCunningham ?show ?actor ?restingPlaceActor WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/deathPlace> ?restingPlaceAlanCunningham .
  }
  
  OPTIONAL {
    ?show <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Emily_Richard> .
    ?show <http://dbpedia.org/ontology/actor> ?actor .
    ?actor <http://dbpedia.org/ontology/deathPlace> ?restingPlaceActor .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  
  OPTIONAL {
    # Assuming the reference to Nevermore (2006 film) is identified by its DBpedia resource
    <http://dbpedia.org/resource/Nevermore_(film)> <http://dbpedia.org/property/bandMember> ?bandMember .
    ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  # Step 1: Find the predecessor of the 2015 Sacramento Republic FC season
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?predecessor .

  # Step 2: Find the successor of that predecessor
  ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
  
  # Ensure it's a soccer club season
  ?successor <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SoccerClubSeason108069834> .

  # Step 3: Find the team of Mark Briggs during a specific season
  OPTIONAL {
    <http://dbpedia.org/resource/Mark_Briggs_(footballer)> <http://dbpedia.org/ontology/team> ?team .
  }

  # Step 4: Retrieve players from the successor season
  ?successor <http://dbpedia.org/property/player> ?player .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
SELECT ?bandMember WHERE {
  ?film <http://dbpedia.org/ontology/wikiPageRedirects> <http://dbpedia.org/resource/Nevermore_(2006_film)> .
  ?film <http://purl.org/dc/terms/subject> ?artist .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?artist <http://dbpedia.org/property/memberOf> ?band .
  ?band <http://dbpedia.org/property/member> ?bandMember .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  OPTIONAL {
    ?party <http://dbpedia.org/ontology/politicalParty> ?rulingParty .
    ?rulingParty <http://dbpedia.org/property/ruleIn> <http://dbpedia.org/resource/Sicily> .
    ?rulingParty <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",3,5,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?reference ?party WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Partito_Popolare_Italiano> <http://www.w3.org/2002/07/owl#sameAs> ?reference .
  }
  
  OPTIONAL {
    ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
    ?alumnus <http://dbpedia.org/property/father> ?father .
    ?father <http://dbpedia.org/ontology/memberOf> ?party .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"```sparql
SELECT ?spouse ?father ?child WHERE {
  # Step 1: Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .

  # Step 2: Find the father of this spouse
  OPTIONAL { 
    ?spouse <http://dbpedia.org/ontology/father> ?father .
  }

  # Step 3: Retrieve children of this father
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/child> ?child .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?militaryForce WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108069068>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068>.
  ?event <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Francoist_Spain>.
  ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce.
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?parent WHERE {
  # Step 1: Find the commander in Battle of Panium
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(?battle = <http://dbpedia.org/resource/Battle_of_Panium>) .

  # Step 2: Find children of this commander
  ?commander <http://dbpedia.org/ontology/child> ?commonChild .

  # Step 3: Find children of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?commonChild .

  # Step 4: Find parent(s) of this common child
  ?commonChild <http://www.w3.org/2002/07/owl#sameAs> ?parent .
}
```",4,4,5,3,2,3,3,71,0,6,2,0.0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?predecessor WHERE {
  # Step 1: Find the child of Thihapate of Mohnyin who is an office holder and royalty
  ?childOfThihapate <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
  ?childOfThihapate a <http://dbpedia.org/ontology/OfficeHolder>, <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the parent of the child of Narapati I of Ava
  ?childOfNarapati <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?parentOfChildOfNarapati <http://dbpedia.org/ontology/child> ?childOfNarapati .

  # Step 3: Find the intersection
  FILTER (?childOfThihapate = ?parentOfChildOfNarapati)

  # Step 4: Get the predecessor of this individual
  ?predecessor <http://dbpedia.org/ontology/predecessor> ?childOfThihapate .

  # Step 5: Ensure this individual is also a child of Thinkhaya of Pagan
  ?childOfThihapate <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thinkhaya_of_Pagan> .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?sharonProfessional ?lukeBandMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sharon_Kao> <http://www.w3.org/2006/vcard/ns#hasName> ?name .
    ?name <http://xmlns.com/foaf/0.1/name> ""Sharon Kao"" .
    <http://dbpedia.org/resource/Sharon_Kao> <http://purl.org/dc/terms/profession> ?sharonProfessional .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://www.w3.org/2000/01/rdf-schema#label> ?lukeBandMember .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?person WHERE {
  # Find the actor of Unnatural (TV series)
  ?actor <http://dbpedia.org/ontology/character> <http://dbpedia.org/resource/Unnatural_(TV_series)> .
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .

  # Get the profession of this actor
  ?actor <http://purl.org/dc/terms/profession> ?profession .

  # Find a person born as Georgeanne Marie Rice with the same profession
  ?person <http://www.w3.org/2006/vcard/ns#hasName> ""Georgeanne Marie Rice"" .
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://purl.org/dc/terms/profession> ?profession .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?bandOfJosephMichael ?associatedArtistJimSheppard ?nevermoreBandMember WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Joseph_Michael_(musician)> <http://dbpedia.org/ontology/band> ?bandOfJosephMichael .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(bassist)> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtistJimSheppard .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?nevermoreBandMember .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  # Step 1: Find Lizzie Spaulding's parents who are fictional and soap characters
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Lizzie_Spaulding> .
  ?parent a <http://dbpedia.org/ontology/FictionalCharacter> ;
          a <http://dbpedia.org/ontology/SeriesRegular>.

  # Step 2: Find the children of these parents who are fictional and soap characters
  ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  ?child a <http://dbpedia.org/ontology/FictionalCharacter> ;
         a <http://dbpedia.org/ontology/SeriesRegular>.

  # Step 3: Find the father of this child
  OPTIONAL { ?child <http://dbpedia.org/property/father> ?father . }
}
```",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?entityInPanama ?party WHERE {
  # Find an entity involved in the United States invasion of Panama that is related to Panama
  ?event <http://dbpedia.org/ontology/location> ?location .
  ?event <http://dbpedia.org/property/name> ""United States invasion of Panama"" .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Panama""@en .

  # Find the commander and their political party
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/occupation> ?occupation .
    ?commander <http://dbpedia.org/property/politicalParty> ?party .
    FILTER(CONTAINS(LCASE(?occupation), ""politician""))
    ?event <http://dbpedia.org/ontology/commander> ?commander .
  }

  # Bind the entity related to Panama
  BIND(?location AS ?entityInPanama)
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace ?birthPlace WHERE {
  # Step 1: Find Matsudaira Tadamasa's father
  ?matsudairaTadamasa <http://dbpedia.org/ontology/father> ?father1 .

  # Step 2: Find the office holder and their father
  OPTIONAL { 
    ?father1 <http://dbpedia.org/property/officeHolder> ?officeHolder .
    ?officeHolder <http://dbpedia.org/ontology/father> ?father2 .
    
    # Step 3: Retrieve the death place of the office holder's father
    ?father2 <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }

  # Step 4: Find Enomoto Takeaki's birthplace
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",4,6,5,3,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT ?country WHERE {
  ?leader <http://dbpedia.org/ontology/politicalParty> ?party .
  ?election <http://dbpedia.org/property/electionLeader> ?leader .
  ?election <http://dbpedia.org/ontology/electionDate> ?date .
  FILTER (YEAR(?date) = 1962 && STRSTARTS(STR(?election), ""http://dbpedia.org/resource/New_South_Wales_state_election_""))
  
  ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2006/vcard/ns#country-name> ?country .
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT DISTINCT ?actor WHERE {
  # Find a movie that is of type Movie, Work, and TelevisionShow
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108069068> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108069068> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShow108069068> .

  # Check if Roz Ryan is an actor in this movie
  ?movie <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Roz_Ryan> .
  
  # Find actors of the same movie who also acted in ""The Departed""
  ?movie <http://dbpedia.org/ontology/starring> ?actor .
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/The_Departed> .

}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?associatedArtistRedTide ?artistWatchtower ?associatedArtistOfArtist ?donDokkenMember WHERE {
  # Step 1: Find associated musical artists of Red Tide
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistRedTide .

  OPTIONAL {
    # Step 2: Check if these artists are also associated with Watchtower
    ?artistWatchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistRedTide .
    <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artistWatchtower .

    # Step 3: Find associated musical artists of the artist from Watchtower
    ?artistWatchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtistOfArtist .
  }

  OPTIONAL {
    # Check if any of these artists are band members of Don Dokken
    ?donDokkenMember <http://dbpedia.org/ontology/bandMember> ?associatedArtistRedTide ;
                     <http://dbpedia.org/ontology/bandMember> ?artistWatchtower ;
                     <http://dbpedia.org/ontology/bandMember> ?associatedArtistOfArtist .
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/bandMember> ?donDokkenMember .
  }
}
```",4,4,5,2,3,3,3,71,1,22,0,0.043478260869565216,1.0,0.08333333333333333
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?war ?claimToFame WHERE {
  ?war <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Thomas_Trigge> .
  ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
      a <http://dbpedia.org/class/yago/SocietalEvent108069067> ;
      a <http://dbpedia.org/class/yago/Event108069066> .
  
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  }
}
```",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT ?nationality ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2006/vcard/ns#hasNationality> ?nationality .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandchild WHERE {
  ?parent <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> .
  
  OPTIONAL { 
    ?parent <http://dbpedia.org/ontology/child> ?royalChild .
    FILTER EXISTS { ?royalChild a <http://dbpedia.org/ontology/Royalty> }
    
    OPTIONAL {
      ?royalChild <http://dbpedia.org/ontology/child> ?grandchild .
    }
  }
}
```",3,4,4,3,1,3,2,20,0,5,8,0.0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?person WHERE {
  # Find decedent of Joseph C. Satterthwaite
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://www.w3.org/2002/07/owl#sameAs> ?decedent .
  
  # Find commanders in the Franco-Hova Wars
  ?commander <http://dbpedia.org/ontology/role> ?role .
  FILTER(CONTAINS(LCASE(?role), ""franco-hova wars commander"") || CONTAINS(LCASE(?role), ""franco-hova wars""))

  # Match person who is both decedent and a commander
  BIND(?decedent AS ?person)
  FILTER(?commander = ?person)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
SELECT DISTINCT ?member ?birthPlace WHERE {
  # Identify The Boils and their associated musical artists who are organizations, groups, or bands
  <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/member> ?member .
  
  # Ensure the member is part of an organization that is also a group or band
  ?member <http://www.w3.org/ns/org#memberOf> ?organization .
  ?organization <http://dbpedia.org/ontology/type> ?type .
  FILTER (
    (?type = <http://dbpedia.org/class/yago/MusicalGroup108069068>)
    || (?type = <http://dbpedia.org/class/yago/Band103067786>)
    || (?type = <http://dbpedia.org/class/yago/Group103067785>)
  )
  
  # Retrieve the birthplace of each member
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  # Step 1: Find the commander in Battle of Perire who is royalty
  ?commander <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Ensure this commander is also a parent of Meritamen
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Meritamen> .
  FILTER (?commander = ?parent)

  # Step 3: Find the father of this commander
  ?father <http://dbpedia.org/ontology/spouse> ?spouse .
  ?father <http://dbpedia.org/ontology/child> ?commander .

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?person WHERE {
  # Commander in the force of Ferenc Szálasi
  OPTIONAL { 
    <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/ontology/commandedBy> ?person .
  }
  
  # Awardee of Order of Suvorov
  UNION {
    ?person <http://dbpedia.org/property/orderOfSuvorovAwardee> true .
  }

  # Leader of People's Commissariat of Defense of the Soviet Union
  UNION {
    ?person <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  ?person <http://dbpedia.org/property/spouse> ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","```sparql
SELECT ?player ?figure WHERE {
  OPTIONAL {
    # Find the manager of the 2016–17 Hull City A.F.C. season
    <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> <http://dbpedia.org/ontology/manager> ?manager .
    
    # Find players managed by this manager during that season
    ?player <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Hull_City_A.F.C.> ;
            <http://dbpedia.org/ontology/coach> ?manager .
  }
  
  OPTIONAL {
    # Find the figure known as The Three Lions
    ?figure <http://www.w3.org/2004/02/skos/core#altLabel> ""The Three Lions"" .
  }
}
```",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?award <http://dbpedia.org/ontology/category> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
  ?award <http://dbpedia.org/property/awardee> ?person .
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""american"")).
  ?award <http://purl.org/dc/terms/relation> ?entity .
}
```",3,4,4,3,1,3,2,20,0,0,18629,0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?emilioMolaCommander ?franciscoLargoCaballeroMilitaryForce ?rifWarMilitaryForce WHERE {
  # Commander in the force of Emilio Mola
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Emilio_Mola> .
    ?event <http://www.w3.org/2004/02/skos/core#hasTopConcept> ?militaryEvent .
    ?militaryEvent <http://dbpedia.org/property/commander> ?emilioMolaCommander .
  }

  # Military force of the societal event/military conflict involving Francisco Largo Caballero
  OPTIONAL {
    ?event2 <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
    ?event2 (<http://www.w3.org/2004/02/skos/core#hasTopConcept> | <http://dbpedia.org/ontology/militaryConflict>) ?societalEventOrMilitaryConflict .
    ?societalEventOrMilitaryConflict <http://dbpedia.org/property/militaryForce> ?franciscoLargoCaballeroMilitaryForce .
  }

  # Military force of the Rif War
  OPTIONAL {
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarMilitaryForce .
  }
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?actor ?band WHERE {
  # Find all shows starring Stacey Dash
  ?show <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> .
  
  # From those shows, find actors who are also musical artists
  ?show <http://dbpedia.org/ontology/starring> ?actor .
  ?actor a <http://dbpedia.org/ontology/MusicalArtist> .

  # Retrieve the band associated with these musical artist actors
  OPTIONAL { 
    ?actor <http://dbpedia.org/property/band> ?band .
  }
}
```",3,4,4,3,1,3,2,20,0,13,36,0.0,0.0,0
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
SELECT ?conflictMilitaryForce ?battleCommander ?battleMilitaryForce WHERE {
  # Find the conflict involving Rutger Jan Schimmelpenninck
  OPTIONAL {
    <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/event> ?conflict .
    ?conflict a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
              a <http://dbpedia.org/class/yago/MilitaryConflict1000000010> .
    ?conflict <http://dbpedia.org/property/militaryForce> ?conflictMilitaryForce .
  }
  
  # Find the commander in the Battle of Leipzig
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?battleCommander .
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/property/militaryForce> ?battleMilitaryForce .
  }
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
SELECT ?nevermoreBandMember ?satrianiBand ?sheppardAssociatedArtist WHERE {
  # Band members of Nevermore
  OPTIONAL { 
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/member> ?nevermoreBandMember .
    ?nevermoreBandMember <http://www.w3.org/2000/01/rdf-schema#label> ?memberLabel .
  }
  
  # Band of Joe Satriani (born Joseph Michael Furney)
  OPTIONAL {
    <http://dbpedia.org/resource/Joe_Satriani> <http://dbpedia.org/ontology/member> ?satrianiBand .
    ?satrianiBand <http://www.w3.org/2000/01/rdf-schema#label> ?bandLabel .
  }
  
  # Associated musical artist of Jim Sheppard
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?sheppardAssociatedArtist .
    ?sheppardAssociatedArtist <http://www.w3.org/2000/01/rdf-schema#label> ?artistLabel .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"```sparql
SELECT ?person ?band WHERE {
  OPTIONAL {
    # Find person born on Pavlo Khudzik's birth date
    <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?birthDate .
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  }
  
  OPTIONAL {
    # Find band of the writer of Apollo (Hardwell song)
    <http://dbpedia.org/resource/Apollo_(song)> <http://dbpedia.org/property/writer> ?writer .
    ?writer <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",4,4,5,2,2,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?child WHERE {
  # Identify John Devon Roland Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee"" .

  # Find Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann"" .
  ?residence dbo:resident ?sylvie ;
             rdf:type dbo:Settlement ;
             dbo:country dbc:Countries_of_the_United_Kingdom .

  # Find children of John Pertwee who are native to Sylvie's residence
  ?child dbo:parent ?john ;
         dbo:nativePlace ?residence .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  OPTIONAL { 
    ?nysa <http://dbpedia.org/ontology/birthParent> ?child .
    FILTER (STRSTARTS(STR(?nysa), ""http://dbpedia.org/resource/Nysa_(wife_of_Phar"")).
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
SELECT DISTINCT ?alumnus ?father ?party WHERE {
  ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  OPTIONAL { 
    ?alumnus <http://xmlns.com/foaf/0.1/family_name> ?fatherName .
    ?father <http://xmlns.com/foaf/0.1/name> ?fatherName .
  }
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/politicalParty> ?party .
  }
}
```",3,3,4,3,1,3,3,71,0,1559,7,0.0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?person WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Nakkhatra_Mangala> .
  ?child a <http://dbpedia.org/ontology/Royalty> .
  ?child <http://dbpedia.org/property/birthName> ?person .
}
```",3,4,4,3,1,3,2,20,0,1,1,0.0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?claimToFame ?carlGahnWars ?joaquinBlakeWars WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?claimToFame .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?carlGahnWars .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/war> ?joaquinBlakeWars .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT DISTINCT ?commonBandMember ?associatedArtist WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ofori_Amponsah> <http://dbpedia.org/ontology/member> ?bandMember1 .
  }
  OPTIONAL { 
    <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/member> ?bandMember2 .
  }
  
  FILTER (?bandMember1 = ?bandMember2)
  BIND(?bandMember1 AS ?commonBandMember)

  ?commonBandMember <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
SELECT ?militaryForce ?commander WHERE {
  OPTIONAL {
    ?polishHorse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryUnit100000001> .
    ?polishHorse <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en .
    
    OPTIONAL {
      ?conflict <http://dbpedia.org/ontology/participant> ?polishHorse .
      ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict100000001> .
      
      OPTIONAL {
        ?commander <http://dbpedia.org/ontology/commandedMilitaryUnit> ?polishHorse .
        ?commander <http://www.w3.org/2000/01/rdf-schema#label> ?commanderLabel .
      }
    }
  }

  OPTIONAL {
    ?napoleonicWar <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
    ?napoleonicWar <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict100000001> .
  }
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?bandMember WHERE {
  # Step 1: Identify Edin Dervišhalidović
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Edin Dervišhalidović""@en .
  
  # Step 2: Find Awardees (assuming awards are linked via a property like 'award')
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/award> ?award .
    
    # Step 3: Identify Band Members related to the award
    ?bandMember <http://dbpedia.org/property/bandMember> ?award .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","```sparql
SELECT ?country1 ?country2 WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person <http://dbpedia.org/property/administration> ?administration .
    ?administration <http://dbpedia.org/ontology/country> ?country1 .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Phil_Scott_(politician)> <http://dbpedia.org/property/administration> ?administration2 .
    ?administration2 <http://dbpedia.org/ontology/country> ?country2 .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
SELECT ?parent ?spouse WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Prince_Ernst_Augustus_of_Hanover_(1914)> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthYear> ""1914""^^<http://www.w3.org/2001/XMLSchema#gYear> .
    ?person <http://dbpedia.org/ontology/parent> ?parent .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?writerBand ?shenaBand WHERE {
  OPTIONAL {
    # Find the writer(s) of ""Apollo"" by Hardwell and their band
    <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://dbpedia.org/ontology/band> ?writerBand .
  }
  
  OPTIONAL {
    # Find the band associated with Shèna
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/band> ?shenaBand .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?person WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://www.w3.org/2006/vcard/ns#parent> ?person .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://www.w3.org/2006/vcard/ns#hasChild> ?person .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
  }
  FILTER(?person != <http://www.w3.org/2001/XMLSchema#null>)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?party ?reference WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?party .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> ?property ?reference .
    FILTER(?property IN (dbo:wikiPageWikiLink, dbo:description))
  }
}
```",3,3,4,2,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
SELECT ?ambasBand ?shenasBand WHERE {
  OPTIONAL {
    # Find a song by Amba Shepherd
    ?song <http://dbpedia.org/ontology/writtenBy> ?writer .
    ?song <http://purl.org/dc/terms/creator> <http://dbpedia.org/resource/Amba_Shepherd> .

    # Find the band associated with this writer
    ?band <http://dbpedia.org/property/member> ?writer .
    BIND(?band AS ?ambasBand)
  }
  
  OPTIONAL {
    # Find the band of Shèna
    ?shenaBand <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Shèna> .
    BIND(?shenaBand AS ?shenasBand)
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?personShena ?bandShena ?person1985 ?band1985 WHERE {
  OPTIONAL {
    ?personShena <http://dbpedia.org/ontology/birthName> ""Shèna"" .
    ?personShena <http://dbpedia.org/property/band> ?bandShena .
  }
  OPTIONAL {
    ?person1985 <http://www.w3.org/2002/07/owl#sameAs> _:bnode .
    _:bnode <http://xmlns.com/foaf/0.1/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?person1985 <http://dbpedia.org/property/band> ?band1985 .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?professionalIn ?associatedArtist ?bandMember WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/profession> ?professionalIn .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/memberOfBand> ?bandMember .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?battleWar ?barbosaWar ?camperoForce WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/foughtBy> ?force .
    ?force <http://dbpedia.org/ontology/war> ?battleWar .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/war> ?barbosaWar .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?camperoForce .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
SELECT ?articleContent ?gmtRegion ?administeredTerritory WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Constitution_of_Iceland> <http://dbpedia.org/ontology/article> ?article .
    ?article <http://dbpedia.org/property/title> ""Article 62, Section IV"" .
    ?article <http://purl.org/dc/terms/description> ?articleContent .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/region> ?gmtRegion .
  }

  OPTIONAL {
    ?territory <http://dbpedia.org/property/administrativeCenter> <http://dbpedia.org/resource/Reykjavík> .
    ?territory <http://purl.org/dc/terms/description> ?administeredTerritory .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace ?country WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  OPTIONAL {
    ?timeZone <http://www.w3.org/2006/time#hasTimezoneOffsetFromUTC> ""0""^^xsd:integer ;
              <http://www.w3.org/2006/time#inRegion> ?region .
    ?country <http://dbpedia.org/ontology/country> ?region ;
              <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Countries_in_Western_European_Time>.
  }
}
```",3,4,4,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
SELECT ?person ?country WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/administrativePost> ?post .
    ?post <http://dbpedia.org/property/country> ?country .
    BIND(<http://dbpedia.org/resource/Patricia_McCoy> AS ?person)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/administrativePost> ?post .
    ?post <http://dbpedia.org/property/country> ?country .
    BIND(<http://dbpedia.org/resource/Phil_Scott> AS ?person)
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?native WHERE {
  OPTIONAL {
    ?politician <http://dbpedia.org/ontology/politicalParty> ?party .
    ?election <http://dbpedia.org/property/electionLeader> ?politician .
    FILTER(STRSTARTS(STR(?election), ""http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election""))
  }
  
  OPTIONAL {
    ?manager <http://dbpedia.org/ontology/teamManager> ?team .
    ?season <http://dbpedia.org/property/manager> ?manager .
    FILTER(STRSTARTS(STR(?season), ""http://dbpedia.org/resource/2013_Júbilo_Iwata_season""))
  }
  
  OPTIONAL {
    FILTER(EXISTS { ?politician = ?manager })
    ?person <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?residence .
    ?residence <http://dbpedia.org/ontology/country> ?country .
  }
  
  OPTIONAL {
    ?country <http://www.w3.org/2000/01/rdf-schema#label> ?native .
    FILTER(LANG(?native) = ""en"")
  }
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?deceasedPerson WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
    ?event <http://dbpedia.org/ontology/commander> ?commander .
  }
  OPTIONAL {
    ?deathEvent <http://dbpedia.org/ontology/deathPlace> ?headquarter .
    ?headquarter <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""House of Sombrerete"" .
    ?deathEvent <http://dbpedia.org/ontology/person> ?deceasedPerson .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Find children of Nefertari
  OPTIONAL { 
    <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?child .
    
    # For each child, find their parents
    ?child <http://dbpedia.org/ontology/parent> ?parent .
  }
  
  # Find parents of Henuttawy (19th dynasty)
  OPTIONAL {
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?henParent .
    
    # Check if the parent from Nefertari's child matches Henuttawy's parent
    FILTER(?parent = ?henParent)
  }
}
```",3,3,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"```sparql
SELECT ?movieActor ?fameActor WHERE {
  OPTIONAL {
    ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movie108069068> .
    ?movie <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""roz ryan""))
    ?movie <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist104067> .
    BIND(?actor AS ?movieActor)
  }
  
  OPTIONAL {
    ?work <http://www.w3.org/2000/01/rdf-schema#label> ""Claim to Fame"" .
    ?claimToFame <http://dbpedia.org/ontology/work> ?work .
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
    FILTER(?claimToFame = <http://dbpedia.org/resource/Michael_Ballhaus>)
    BIND(?actor AS ?fameActor)
  }
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?birthPlace ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""Japan Standard Time"" .
  }
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
SELECT ?landmark WHERE {
  ?commander <http://dbpedia.org/ontology/award> ?battle .
  ?battle rdfs:label ""Battle of Chishui River""@en .
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/property/associatedLandmark> ?landmark .
    ?landmark <http://www.geonames.org/ontology#elevation> ?elevation .
    FILTER(?elevation > 0) # Assuming we want landmarks at a positive elevation
  }
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
# Step 1: Find the band of Newsted
SELECT ?newstedBand WHERE {
  <http://dbpedia.org/resource/Mike_Newsted> <http://dbpedia.org/ontology/associatedBand> ?newstedBand .
}

# Step 2: Identify band members of San Francisco Symphony that are both a band and a group
SELECT DISTINCT ?symphonyMember WHERE {
  ?symphonyMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/San_Francisco_Symphony> .
  ?symphonyMember <http://www.w3.org/2002/07/owl#sameAs> ?bandGroup .
  ?bandGroup a <http://dbpedia.org/class/yago/MusicalBand115069068> ; # Class for bands
             a <http://dbpedia.org/class/yago/MusicGroups100000001> .   # Class for groups
}

# Step 3: Find band members of the identified symphony members
SELECT DISTINCT ?bandMember WHERE {
  ?symphonyMember ?memberOf ?band .
  ?bandMember <http://dbpedia.org/ontology/member> ?band .
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?parentOfThadoMinsaw ?childOfFatherSoeMinWimalaDewi ?predecessor WHERE {
  # Step 1: Find the parent of Thado Minsaw of Prome
  OPTIONAL { 
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://www.w3.org/2002/07/owl#sameAs> ?thadoMinsaw .
    ?thadoMinsaw <http://dbpedia.org/ontology/father> ?parentOfThadoMinsaw .
  }

  # Step 2: Find the child of the father of Soe Min Wimala Dewi
  OPTIONAL {
    <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?fatherOfSoeMinWimalaDewi .
    ?fatherOfSoeMinWimalaDewi <http://dbpedia.org/ontology/child> ?childOfFatherSoeMinWimalaDewi .
  }

  # Step 3: Find the predecessor of the child (office holder and royalty) of Thihapate of Mohnyin
  OPTIONAL {
    <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://www.w3.org/2002/07/owl#sameAs> ?thihapate .
    ?thihapate <http://dbpedia.org/ontology/child> ?childOfThihapate .
    ?childOfThihapate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    ?childOfThihapate <http://dbpedia.org/ontology/officeHolder> ?office .
    ?predecessor <http://dbpedia.org/ontology/successor> ?childOfThihapate .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://www.w3.org/2006/vcard/ns#hasName> ""Carl Pontus Gahn"" .
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
}
```",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer ?native WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?placeName .
    FILTER (CONTAINS(LCASE(?placeName), ""settlement""))
    ?native <http://dbpedia.org/ontology/birthPlace> ?deathPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?actor ?native WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actor .
    ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  }
  
  OPTIONAL {
    ?city <http://dbpedia.org/ontology/nickName> ""The City with a Heart"" . # Assuming this is the nickname for Jackson, Tennessee
    ?city <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?person <http://dbpedia.org/ontology/birthPlace> ?address .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    BIND(?person AS ?native)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?spouseTed ?spouseGigi WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouseTed .
  }
  OPTIONAL {
    ?gigi a <http://dbpedia.org/ontology/Person>;
          <http://dbpedia.org/property/birthName> ""Gigi Rice"" ;
          <http://dbpedia.org/ontology/spouse> ?spouseGigi .
  }
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?awardee ?commander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/ontology/award> ?award .
    ?award <http://dbpedia.org/property/recipient> ?awardee .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/commander> ?commandRole .
    ?commandRole <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
    ?person ?p ?o .
    FILTER (CONTAINS(LCASE(str(?p)), ""commander"") || CONTAINS(LCASE(str(?o)), ""commander""))
    BIND(?person AS ?commander)
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?album ?writer WHERE {
  ?album <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Dave_Flett> .
  OPTIONAL { 
    ?album <http://dbpedia.org/property/associatedPerson> ?person .
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  # Step 1: Identify the parent of Géza von Habsburg who is a royalty
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
  ?parent a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child of this parent
  ?child <http://dbpedia.org/ontology/parent> ?parent .

  # Step 3: Determine the grandchild (child of the child)
  ?grandchild <http://dbpedia.org/ontology/parent> ?child .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?fatherParty ?partyReference WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Lamberto_Andreotti> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/memberOf> ?party .
    ?party <http://purl.org/dc/terms/description> ?fatherParty .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ?partyReference .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Ted McGinley"" .
  OPTIONAL { ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> . }
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify John Devon Roland Pertwee
  ?person <http://dbpedia.org/ontology/birthName> ""John Devon Roland Pertwee"" .
  
  # Step 2: Find his child
  ?person <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Check if the child is native to London
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (strstarts(str(?birthPlace), ""London""))

  # Step 4: Verify actor of Dog Soldiers (film)
  ?child <http://dbpedia.org/ontology/actor> <http://dbpedia.org/resource/Dog_Soldiers_(film)> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","```sparql
SELECT ?band WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
    ?song <http://purl.org/dc/terms/creator> ?person ;
          a <http://dbpedia.org/class/yago/Song104069415> .
    ?work <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Amba_Shepherd> .
    ?band <http://dbpedia.org/property/member> <http://dbpedia.org/resource/Amba_Shepherd> .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?person ?almaMater ?manager WHERE {
  # Step 1: Identify the person born in 1958 and native of Japan
  ?person <http://dbpedia.org/ontology/birthYear> ""1958"" .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .

  # Step 2: Find the alma mater that is Japanese, an organization, a university, and an educational institution
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""japan""))
  ?almaMater a <http://dbpedia.org/class/yago/OrganizationsByCountryYAGO> ;
             a <http://dbpedia.org/class/yago/EducationalInstitutions100000001> .

  # Step 3: Determine the manager of Júbilo Iwata in 2013
  ?team <http://dbpedia.org/ontology/teamManager> ?manager .
  ?team <http://dbpedia.org/property/sportSeason> ""2013"" .
  ?team <http://dbpedia.org/resource/Júbilo_Iwata> .

  # Step 4: Check if the manager is a member (alumni) of the alma mater
  OPTIONAL { ?manager <http://dbpedia.org/ontology/almaMater> ?almaMater . }
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/birthName> ?birthName .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?claimToFame .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ?birthName ;
            <http://dbpedia.org/property/claimToFame> ?claimToFame ;
            <http://dbpedia.org/ontology/war> ?war .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?birthPlace ?nottinghamshireEntity ?ukEntity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  
  OPTIONAL {
    ?entity <http://www.geonames.org/ontology#locatedIn> <http://dbpedia.org/resource/Nottinghamshire> ;
            <http://www.geonames.org/ontology#locatedIn> <http://dbpedia.org/resource/United_Kingdom> .
    BIND(?entity AS ?nottinghamshireEntity)
  }
  
  OPTIONAL {
    ?ukEntity <http://www.geonames.org/ontology#locatedIn> <http://dbpedia.org/resource/United_Kingdom> .
  }
}
```",3,3,4,1,3,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?entityInBadenWurttemberg WHERE {
  OPTIONAL {
    ?burland <http://dbpedia.org/ontology/fictionalCharacter> ?fictionalCharacter .
    ?fictionalCharacter <http://www.wikidata.org/entity/P1365> ?alterEgo . # P1365 is the property for alter ego
    ?entityInBadenWurttemberg <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
    ?entityInBadenWurttemberg <http://www.wikidata.org/entity/P527> ?alterEgo . # P527 is the property for part of
  }
}
```",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?native WHERE {
  # Find the alma mater of Eiji Ōtsuka that is a Japanese university and educational institution
  ?university <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Eiji_Ōtsuka> .
  ?university <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""japan"") && CONTAINS(LCASE(?label), ""university""))
  ?university a <http://dbpedia.org/class/yago/YagoUniversity108885848> ; # University class
              a <http://dbpedia.org/ontology/EducationalOrganization> . # Educational institution

  # Find natives of Japan who are alumni of this university
  ?native <http://www.w3.org/2000/01/rdf-schema#label> ?nativeLabel .
  FILTER(CONTAINS(LCASE(?nativeLabel), ""japan""))
  ?native <http://dbpedia.org/ontology/almaMater> ?university .
}
```",3,7,4,2,2,3,3,71,0,0,84,0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","```sparql
SELECT DISTINCT ?country WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/office> ?office .
    ?office <http://dbpedia.org/property/country> ?country .
  }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?author ?child ?award ?professional WHERE {
  # Step 1: Find the author of ""Understanding Comics""
  <http://dbpedia.org/resource/Understanding_Comics> <http://purl.org/dc/terms/creator> ?author .

  # Step 2: Find children of Jack Schwartzman
  <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?child .

  # Step 3: Check if the author is also a child of Jack Schwartzman
  FILTER (?author = ?child)

  # Step 4: Find awards associated with this individual and their professional field
  OPTIONAL {
    ?award <http://dbpedia.org/property/recipient> ?author .
    ?award <http://purl.org/dc/terms/type> ?professional .
  }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
SELECT ?fatherOfWilliamErnest ?royalChild ?childOfRoyalChild WHERE {
  # Step 1: Find father of William Ernest
  <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?fatherOfWilliamErnest .

  # Step 2: Find parent of Charles Alexander
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/parent> ?parentOfCharlesAlexander .

  # Step 3: Find child of this parent who is royalty
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?royalChild <http://dbpedia.org/ontology/parent> ?parentOfCharlesAlexander .

  # Step 4: Find a child of that royal child
  ?childOfRoyalChild <http://dbpedia.org/ontology/parent> ?royalChild .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sherry_Hormann> .

  # Step 2: Retrieve the claim to fame (work) of the spouse
  ?spouse <http://purl.org/dc/terms/subject> ?work .

  # Step 3: Find an actor in that work
  ?work <http://dbpedia.org/ontology/starring> ?actor .
}
```",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?battleCommander ?wellingtonForceCommander WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?battleCommander .
  }
  OPTIONAL {
    ?force <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> ;
           <http://dbpedia.org/ontology/commander> ?wellingtonForceCommander .
  }
}
```",3,3,4,2,2,3,3,71,19,2,0,0.9047619047619048,1.0,0.9500000000000001
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?childSpouse WHERE {
  # Find children of Antiochus III the Great
  ?antiochusIII <http://dbpedia.org/ontology/child> ?child .
  
  FILTER(?antiochusIII = <http://dbpedia.org/resource/Antiochus_III_the_Great>)
  
  # Identify successor and their royalty children
  ?successor <http://dbpedia.org/ontology/successor> ?antiochusIII .
  ?successorChild <http://dbpedia.org/ontology/child> ?successor .
  ?successorChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Find spouse of the successor's royalty child
  ?successorChild <http://dbpedia.org/property/spouse> ?childSpouse .
  
  # Ensure the child from step 1 is also considered
  OPTIONAL {
    ?child <http://dbpedia.org/property/spouse> ?spouse .
    FILTER(?spouse = ?childSpouse)
  }
}
```",4,5,5,3,2,3,3,71,0,5,4,0.0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?grandparent WHERE {
  # Step 1: Identify Richeza's father who is royalty
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> .
  ?father a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the parent of Richeza's father
  ?grandparent <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?father .

  # Step 3: Ensure this grandparent is a child of Doubravka of Bohemia
  ?grandparent <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Doubravka_of_Bohemia> .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?beauchampWars ?heffronBirthPlaceEntity ?nzArmyWars WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/war> ?beauchampWars .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?heffronBirthPlace .
    ?heffronBirthPlace <http://www.w3.org/2004/02/skos/core#broader> ?heffronBirthPlaceEntity .
    FILTER EXISTS { ?heffronBirthPlaceEntity a <http://dbpedia.org/class/yago/Country108067> }
  }

  OPTIONAL {
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/war> ?nzArmyWars .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?manager ?member WHERE {
  OPTIONAL {
    ?team <http://dbpedia.org/ontology/player> <http://dbpedia.org/resource/Takashi_Sekizuka> .
    ?team <http://dbpedia.org/property/teamManager> ?manager .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    FILTER(CONTAINS(LCASE(?label), ""japanese"") && 
           CONTAINS(LCASE(?label), ""university"") &&
           CONTAINS(LCASE(?label), ""organization"") &&
           CONTAINS(LCASE(?label), ""educational institution""))
    
    ?almaMater <http://dbpedia.org/ontology/member> ?member .
  }
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT DISTINCT ?commonMember WHERE {
  # Step 1: Find the producer of ""Used to Love Her""
  ?song <http://dbpedia.org/ontology/producer> ?producer .
  FILTER (str(?song) = ""Used_to_Love_Her"")

  # Step 2: Check if the producer is a band
  OPTIONAL { 
    ?producer <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .
  }

  # Step 3: Find members of the producer (if it's a band)
  OPTIONAL {
    ?producer <http://dbpedia.org/property/member> ?memberOfProducer .
  }

  # Step 4: Retrieve Metallica band members
  ?metallicaMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Metallica> .

  # Step 5: Find common member(s)
  FILTER (?memberOfProducer = ?metallicaMember)

  BIND(?memberOfProducer AS ?commonMember)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?jagathDiasWar ?author ?authorWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/war> ?jagathDiasWar .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?author .
    ?author <http://dbpedia.org/ontology/war> ?authorWar .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
SELECT ?work ?region WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Article_62_of_the_Constitution_of_Iceland> <http://www.w3.org/2000/01/rdf-schema#comment> ?work .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Bombali_Shebora_Cheifdom> <http://dbpedia.org/ontology/timeZone> ?timeZone .
    ?timeZone <http://www.w3.org/2006/vcard/ns#region> ?region .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
SELECT ?parentOfNysa ?grandChild WHERE {
  # Step 1: Identify Nysa (wife of Pharnaces I of Pontus)
  ?nysa <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Pharnaces_I_of_Pontus> .
  
  # Step 2: Find her parent
  ?nysa <http://www.w3.org/2006/vcard/ns#parent> ?parentOfNysa .

  # Step 3: Identify Antiochus II Theos's successor who is royalty
  ?antiochusII <http://dbpedia.org/ontology/successor> ?successor .
  FILTER(?antiochusII = <http://dbpedia.org/resource/Antiochus_II_Theos>)
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  # Step 4: Find the child of this successor who is also royalty
  ?successor <http://dbpedia.org/ontology/child> ?royalChild .
  FILTER(?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>) .

  # Step 5: Identify the grandchild (child of the child)
  ?royalChild <http://dbpedia.org/ontology/child> ?grandChild .
}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","```sparql
SELECT ?parentOfThadoMinsaw ?child ?predecessor WHERE {
  # Step 1: Find parent of Thado Minsaw of Prome
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/father> ?parentOfThadoMinsaw .

  # Step 2: Find children of Thihapate of Mohnyin who are office holders and royalty
  {
    SELECT ?child WHERE {
      <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
      ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
      ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
    }
  }

  # Step 3: Find predecessor of the identified child
  ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entityInNashville ?awardeeRestingPlace ?keeblesRestingPlace WHERE {
  OPTIONAL {
    ?medal <http://dbpedia.org/ontology/awardee> ?politician .
    ?politician a <http://dbpedia.org/class/yago/Politicians100000001> .
    ?politician <http://dbpedia.org/property/restingPlace> ?awardeeRestingPlace .
    ?location <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ""Nashville, Tennessee"" .
    ?politician <http://dbpedia.org/ontology/location> ?location .
    BIND(?awardeeRestingPlace AS ?entityInNashville)
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?keeblesRestingPlace .
  }
}
```",4,5,5,2,3,2,3,28,1,0,0,1.0,1.0,1.0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?alterEgo ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alternateName> ?alterEgo .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Baden-Württemberg> .
  }
}
```",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?cunninghamRestingPlace ?actor ?actorRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/deathPlace> ?cunninghamRestingPlace .
  }
  
  OPTIONAL {
    ?film <http://dbpedia.org/property/castMember> ?actor .
    FILTER (STRSTARTS(STR(?film), ""http://dbpedia.org/resource/Enemy_at_the_Door""))
    ?actor <http://dbpedia.org/ontology/deathPlace> ?actorRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
SELECT ?actorBallhaus ?actorAndersons WHERE {
  OPTIONAL {
    # Find Michael Ballhaus's claim to fame work
    <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/notableWork> ?claimToFame .
    
    # Get actors of that work
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actorBallhaus .
  }
  
  OPTIONAL {
    # Find actors in ""All About the Andersons""
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?actorAndersons .
  }
}
```",3,4,4,2,2,3,3,71,1,3,0,0.25,1.0,0.4
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?awardeeRestingPlace ?childRestingPlace WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
    ?person <http://www.w3.org/2006/vcard/ns#deathPlace> ?awardeeRestingPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
    ?child <http://www.w3.org/2006/vcard/ns#deathPlace> ?childRestingPlace .
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","```sparql
SELECT ?associatedArtist ?producer ?profession WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/The_Shadow#Alter_egos> ?alterEgo .
    ?alterEgo <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?profession .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author ?entity WHERE {
  # Query for the author of Chroot
  OPTIONAL {
    <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/property/author> ?author .
  }
  
  # Query for entities in the award of American awardees of the Wolf Prize in Medicine
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Category:American_people> ;
            <http://dbpedia.org/ontology/receivedAward> ?award .
    FILTER (CONTAINS(LCASE(STR(?award)), ""wolf prize in medicine""))
    
    ?award <http://dbpedia.org/property/entity> ?entity .
  }
}
```",4,5,5,3,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?nevermoreMember ?jimSheppardArtist ?josephMichaelBand WHERE {
  OPTIONAL {
    ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?artist <http://www.w3.org/2000/01/rdf-schema#label> ?nevermoreMember .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
    ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
    ?artist <http://www.w3.org/2000/01/rdf-schema#label> ?jimSheppardArtist .
  }
  
  OPTIONAL {
    ?individual <http://www.w3.org/2000/01/rdf-schema#label> ""Joseph Michael"" .
    ?individual <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
    ?band <http://www.w3.org/2000/01/rdf-schema#label> ?josephMichaelBand .
  }
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?member WHERE {
  OPTIONAL {
    ?politician <http://dbpedia.org/ontology/politicalParty> ?party .
    ?election <http://dbpedia.org/property/electionYear> ""2010""^^xsd:integer .
    ?election <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Japan> .
    ?politician <http://dbpedia.org/ontology/leaderOf> ?election .
  }
  
  OPTIONAL {
    ?politician <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?countryLabel .
    ?countryLabel <http://www.w3.org/2004/02/skos/core#inScheme> <http://dbpedia.org/resource/Category:Countries> .
  }
  
  OPTIONAL {
    ?native <http://dbpedia.org/ontology/nationality> ?residence .
  }

  OPTIONAL {
    ?manager <http://dbpedia.org/property/teamManaged> <http://dbpedia.org/resource/Júbilo_Iwata> .
    ?season <http://dbpedia.org/property/sportSeason> ""2013""^^xsd:integer .
    ?manager <http://dbpedia.org/ontology/manages> ?team .
    ?team <http://dbpedia.org/property/teamManaged> ?season .
  }
  
  OPTIONAL {
    ?member <http://www.w3.org/2006/vcard/ns#hasEducation> <http://dbpedia.org/resource/University_of_Tsukuba> .
    FILTER (?native = ?manager)
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT DISTINCT ?artist2 WHERE {
  # Step 1: Find associated musical artists of ""Watchtower""
  ?watchtower <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist1 .
  
  # Step 2: For each artist found in step 1, find their associated musical artists
  OPTIONAL { 
    ?artist1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist2 .
  }
  
  # Step 3: Find associated musical artists of ""Red Tide (band)""
  ?redTide <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist3 .

  # Combine results from step 2 and step 3
  OPTIONAL { 
    VALUES ?artist2 { ?artist3 }
  }
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
SELECT ?commander ?deceasedPerson ?awardee WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
    ?event <http://dbpedia.org/ontology/commander> ?commander .
  }
  OPTIONAL {
    ?person <http://www.w3.org/2002/07/owl#deathPlace> ?place .
    ?place <http://purl.org/dc/terms/description> ""House of Sombrerete"" .
    ?person <http://dbpedia.org/ontology/deathDate> ?date .
  }
  OPTIONAL {
    ?entity <http://dbpedia.org/property/award> ?award .
    FILTER (str(?award) = ""30"")
    BIND(?entity AS ?awardee)
  }
}
```",4,4,5,2,3,2,3,28,0,1,1,0.0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?awardee ?restingPlace ?nashvilleEntity WHERE {
  # Step 1: Find awardees of the Distinguished Service Medal (U.S. Army)
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""distinguished service medal (u.s. army)""))

  # Step 2: Ensure the awardee is a politician
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .

  # Step 3: Find the resting place of the awardee
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }

  # Step 4: Identify entities in Nashville, Tennessee
  ?nashvilleEntity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/location> ""Nashville, Tennessee"" .
  
  # Match resting place with entity in Nashville
  FILTER(?restingPlace = ?nashvilleEntity)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?keeblesRestingPlace ?politicianRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/deathPlace> ?keeblesRestingPlace .
  }
  
  OPTIONAL {
    ?person <http://dbpedia.org/property/awards> ?award .
    ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Distinguished Service Medal (U.S. Army)""@en .
    ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?person <http://dbpedia.org/ontology/deathPlace> ?politicianRestingPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,13,1,0.0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?child WHERE {
  # Find the child of Archduke Joseph August of Austria
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?child .
  
  # Check if this child is a parent of Archduchess Ilona of Austria
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .

  # Verify that the individual is native to Budapest
  ?child <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
SELECT DISTINCT ?settlement ?reference WHERE {
  # Step 1: Find the writer of ""Where It's At"" (Dustin Lynch album)
  ?album <http://dbpedia.org/ontology/writer> ?writer .
  FILTER(STRSTARTS(STR(?album), STR(<http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)>)))

  # Step 2: Find the alma mater of Carl L. Nippert
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 3: Find a common entity in their administration that is a settlement
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/administrativeUnit> ?admin .
    ?admin <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?settlement .
    FILTER(?settlement != """")
  }
  
  OPTIONAL {
    ?almaMater <http://dbpedia.org/ontology/administrativeUnit> ?admin2 .
    ?admin2 <http://www.w3.org/2006/vcard/ns#hasAddress> ?address2 .
    ?address2 <http://purl.org/dc/terms/description> ?settlement2 .
    FILTER(?settlement2 != """")
  }

  # Ensure the settlement is common and a valid entity
  FILTER(BOUND(?settlement) && (?settlement = ?settlement2))
  
  # Step 4: Include references to this settlement
  OPTIONAL {
    ?settlement <http://dbpedia.org/ontology/wikiPageExternalLink> ?reference .
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?child ?parent WHERE {
  # Find children of Bhumibol Adulyadej
  <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?child .
  
  # Ensure the child is born as Mom Rajawongse Sirikit Kitiyakara
  OPTIONAL { 
    ?child <http://www.w3.org/2004/02/skos/core#altLabel> ""Mom Rajawongse Sirikit Kitiyakara""@en .
  }
  
  # Find the parent of this child
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",3,3,4,2,2,3,2,20,1,6,0,0.14285714285714285,1.0,0.25
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?administration ?birthPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Yozei> dbo:administration ?administration .
  }
  
  OPTIONAL {
    ?war rdf:type dbo:MilitaryConflict ;
         rdf:type dbo:Event ;
         rdf:type dbo:SocietalEvent .
    
    ?saitoHajimeCommander dbo:commanderOf ?war ;
                         foaf:name ""Saitō Hajime""^^xsd:string .
    
    ?commander dbo:birthPlace ?birthPlace ;
               foaf:name ?saitoHajimeCommander .
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?deathPlace ?administration ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/property/administration> ?administration .
  }

  OPTIONAL {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",4,4,5,2,3,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT DISTINCT ?commonChildParent WHERE {
  # Step 1: Find Archduchess Margaret's parents
  ?margaret <http://dbpedia.org/ontology/birthYear> ""1925"" .
  ?margaret <http://www.w3.org/2006/vcard/ns#hasParent> ?parentMargaret .

  # Step 2: Find children of Archduchess Margaret's parents
  ?parentMargaret <http://dbpedia.org/ontology/child> ?childOfParent .

  # Step 3: Find Archduke Joseph August and his children
  ?josephAugust <http://www.w3.org/2006/vcard/ns#hasChild> ?childJosephAugust .

  # Step 4: Identify common child between the two sets of children
  FILTER (?childOfParent = ?childJosephAugust)
  
  # Step 5: Find parent(s) of this common child
  ?commonChildParent <http://www.w3.org/2006/vcard/ns#hasChild> ?childOfParent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?person WHERE {
  # Step 1: Find Georgeanne Marie Rice
  OPTIONAL { 
    ?rice <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  }
  
  # Step 2: Find spouse of Ted McGinley
  OPTIONAL {
    ?ted <http://dbpedia.org/property/spouse> ?spouse .
    FILTER(?ted = <http://dbpedia.org/resource/Ted_McGinley>)
  }

  # Step 3: Find actor in Unnatural and their profession
  OPTIONAL {
    ?unnaturalActor <http://dbpedia.org/ontology/actor> ?unnaturalSeries .
    FILTER(?unnaturalSeries = <http://dbpedia.org/resource/Unnatural_(TV_series)>)
    ?unnaturalActor <http://purl.org/dc/terms/profession> ?profession .
  }

  # Step 4: Match person, spouse, and profession
  FILTER(?rice = ?spouse && ?rice = ?person)
  OPTIONAL { ?person <http://purl.org/dc/terms/profession> ?matchedProfession . }
  
  FILTER(?matchedProfession = ?profession)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlaceCommander ?deathPlaceFather WHERE {
  OPTIONAL {
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlaceCommander .
    ?boshinWar <http://dbpedia.org/property/commander> ?commander .
    FILTER(CONTAINS(LCASE(STR(?boshinWar)), ""boshin war""))
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Yūki_Hideyasu> <http://xmlns.com/foaf/0.1/familyName> ?father .
    ?father <http://www.w3.org/2002/07/owl#sameAs> ?politicianFather .
    ?politicianFather <http://dbpedia.org/ontology/deathPlace> ?deathPlaceFather .
    FILTER(CONTAINS(LCASE(STR(?politicianFather)), ""politician""))
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?parent WHERE {
  # Step 1: Identify Richeza of Poland
  ?richeza <http://dbpedia.org/ontology/father> ?father .
  
  # Ensure Richeza's father is a royalty
  FILTER EXISTS { ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> }
  
  # Step 2: Find the parent of her father who is also a royalty
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/father> ?grandFather .
    FILTER EXISTS { ?grandFather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> }
    ?parent ?relation ?grandFather .
  }
  
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/mother> ?grandMother .
    FILTER EXISTS { ?grandMother <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> }
    ?parent ?relation ?grandMother .
  }

  # Ensure Richeza is a royalty
  FILTER EXISTS { ?richeza <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> }
  
  # Bind the parent of her father who is also a royalty to the result variable
  BIND(?parent AS ?result)
}
```",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
SELECT ?work WHERE {
  # Find the author of the specified work
  <http://dbpedia.org/resource/Iceland_and_territory_administered_from_Reykjavík> <http://purl.org/dc/terms/creator> ?author .
  
  # Retrieve other works by this author
  ?otherWork <http://purl.org/dc/terms/creator> ?author .
  
  FILTER(?work != ?otherWork) # Exclude the original work from results
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?warJagathDias ?entityInSriLanka ?authorWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/war> ?warJagathDias .
  }
  
  OPTIONAL {
    SELECT ?author WHERE {
      <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?author .
    }
    
    ?author <http://dbpedia.org/ontology/location> ?location .
    FILTER(CONTAINS(LCASE(STR(?location)), ""sri lanka""))
    BIND(?location AS ?entityInSriLanka)
  }

  OPTIONAL {
    SELECT ?author WHERE {
      <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?author .
    }
    
    ?author <http://dbpedia.org/ontology/war> ?authorWar .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
SELECT ?parentOfErnest1914 ?childOfFather WHERE {
  # Find the parent of Prince Ernest Augustus of Hanover (born 1914)
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?parentOfErnest1914 .

  # Identify the father of Ernest Augustus, Duke of Brunswick
  OPTIONAL {
    <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?fatherOfErnestBrunswick .
    
    # Find the child of this father
    ?fatherOfErnestBrunswick <http://dbpedia.org/ontology/child> ?childOfFather .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?francoMilitaryForce ?civilWarMilitaryForce WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco> .
    ?event <http://www.w3.org/2002/07/owl#sameAs> ?societalEvent .
    ?societalEvent a <http://dbpedia.org/class/yago/SocialEvents100000001> .
    ?societalEvent a <http://dbpedia.org/class/yago/MilitaryConflicts1000000> .
    ?event <http://dbpedia.org/ontology/militaryForce> ?francoMilitaryForce .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?civilWarMilitaryForce .
  }
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
SELECT ?artist WHERE {
  ?mattColton <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?mattColton <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  
  OPTIONAL { 
    ?artist <http://dbpedia.org/property/memberOfBand> <http://dbpedia.org/resource/Luke_Vibert> .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?almaMater ?entity WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?name .
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-Württemberg> .
  }
}
```",3,3,4,2,2,3,3,71,0,202,1,0.0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT DISTINCT ?associatedMusicalArtist WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah"" .
  ?person <http://dbpedia.org/ontology/memberOfBand> ?band .
  ?band <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedMusicalArtist .
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?predecessor ?child WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://www.w3.org/2002/07/owl#sameAs> ?entity .
    ?entity <http://dbpedia.org/ontology/predecessor> ?predecessor .
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/child> ?child .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
# Query 1: Parent of Géza von Habsburg
SELECT ?parent WHERE {
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
}

UNION

# Query 2: Parent of the child of the parent of Archduchess Margaret of Austria (born 1925)
SELECT ?grandchildParent WHERE {
  # Find the parent of Archduchess Margaret
  <http://dbpedia.org/resource/Margaret_of_Austria_(1925)> <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
  
  # Find the children of this parent
  ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
  
  # Find the parents of these children (grandchildren of Archduchess Margaret)
  ?child <http://www.w3.org/2006/vcard/ns#hasParent> ?grandchildParent .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","```sparql
SELECT ?restingPlaceSimonCadell ?grandchildRestingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?restingPlaceSimonCadell .
  }
  
  OPTIONAL {
    ?childOfWilliamHaliburton <http://dbpedia.org/ontology/birth> ?grandchildOfWilliamHaliburton .
    ?grandchildOfWilliamHaliburton <http://dbpedia.org/ontology/deathPlace> ?grandchildRestingPlace .
    ?parentOfChild <http://dbpedia.org/ontology/birth> ?childOfWilliamHaliburton .
    ?parentOfParent <http://dbpedia.org/ontology/birth> ?parentOfChild .
    FILTER(?parentOfParent = <http://dbpedia.org/resource/William_Haliburton>)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
SELECT ?settlement WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  ?song <http://dbpedia.org/ontology/writer> ?writer .
  
  FILTER(STRSTARTS(LCASE(?song), ""where it's at (dustin lynch album)""))

  # Find settlements associated with the writer in an administrative context
  OPTIONAL {
    ?adminRole <http://www.w3.org/ns/org#hasPost> ?post .
    ?post <http://dbpedia.org/ontology/administrativeUnit> ?settlement .
    FILTER(?writer = ?adminRole)
  }
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor WHERE {
  # Find actors of ""All About the Andersons""
  ?actor <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/All_About_the_Andersons> .
  
  # Filter by native place being Compton, California
  ?actor <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .

  # Check if their claim to fame is a work associated with Michael Ballhaus
  ?work <http://dbpedia.org/property/claimToFame> ?actor .
  ?work <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michael_Ballhaus> .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
SELECT ?producer ?associatedArtist WHERE {
  OPTIONAL {
    ?work <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> .
    ?work <http://dbpedia.org/ontology/artist> ?chrisTaylor .
    ?chrisTaylor rdfs:label ""Chris Taylor (music producer)""@en .
    ?work <http://purl.org/dc/terms/creator> ?producer .
    FILTER regex(str(?work), ""song"", ""i"") .
  }
  
  OPTIONAL {
    ?associatedArtist <http://dbpedia.org/ontology/associatedMusicalArtist> ?chrisTaylor .
  }

  OPTIONAL {
    ?professional rdfs:label ?alterEgoLabel .
    ?alterEgoLabel strContains(""The Shadow"") .
    ?professional <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?chrisTaylor .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?location ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?location .
  }
  OPTIONAL {
    ?author dbo:wikiPageWikiLink <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> .
    ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",3,3,4,2,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify Fredrik Thordendal's band
  ?band a <http://dbpedia.org/ontology/Band> ;
        <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> ;
        a <http://dbpedia.org/ontology/Organisation>.

  # Step 2: Find band members who are part of another band or group that is an organization
  ?member a <http://dbpedia.org/ontology/BandMember> ;
          <http://dbpedia.org/ontology/member> ?band ;
          <http://dbpedia.org/ontology/member> ?otherBand .
  
  ?otherBand a <http://dbpedia.org/ontology/Band> ;
             a <http://dbpedia.org/ontology/Organisation>.

  # Step 3: Retrieve associated musical artists for these band members
  ?member <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
SELECT ?andreottiParty ?prodiParty ?partyReference WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?andreottiParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Antonio_Prodi> <http://dbpedia.org/ontology/party> ?prodiParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://purl.org/dc/terms/description> ?partyReference .
  }
}
```",5,7,6,2,3,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?arnulfoParty ?guillermoParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/party> ?arnulfoParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?guillermoParty .
  }
}
```",3,4,4,2,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union>.
  ?person <http://dbpedia.org/property/orderOfSuvorovAwardee> ?order .
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)>.
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?person ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Edin Dervišhalidović"" .
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  OPTIONAL { ?person <http://dbpedia.org/property/award> ?award . }
  
  # Ensure the person has at least one award
  FILTER EXISTS { ?person <http://dbpedia.org/property/award> ?award . }

  ?person <http://dbpedia.org/ontology/bandMember> ?bandMember .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?awardee ?conflict WHERE {
  # Find awardees of Order of St. Andrew
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Order_of_St._Andrew> .
  }
  
  # Find commander in Battle of Paris (1814)
  ?battleCommander <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Battle_of_Paris_(1814)> .

  # Find conflicts commanded by the same person
  OPTIONAL {
    ?battleCommander <http://dbpedia.org/ontology/commanded> ?conflict .
    FILTER(?conflict != <http://dbpedia.org/resource/Battle_of_Paris_(1814)>)
  }
}
```",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
SELECT ?child ?spouse WHERE {
  # Find children of Antiochus III the Great
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> .
  
  # Ensure the child is also a parent (Antiochus)
  OPTIONAL {
    ?antiochus <http://dbpedia.org/ontology/father> ?child .
    FILTER(?antiochus = <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)>)
  }
  
  # Retrieve the spouse of this child
  ?child <http://dbpedia.org/property/spouse> ?spouse .
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","```sparql
SELECT DISTINCT ?nativePerson WHERE {
  ?person <http://dbpedia.org/property/birthYear> ""1958"" .
  ?person <http://dbpedia.org/ontology/almaMater> ?university .
  
  ?university a <http://dbpedia.org/class/yago/JapaneseUniversity100000001> ;
              <http://www.w3.org/2000/01/rdf-schema#label> ?universityLabel .

  ?nativePerson <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Japan> .
  ?nativePerson <http://dbpedia.org/ontology/memberOf> ?university .
}
```",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?event ?awardee WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Lisa_Gavrić> .
  ?event rdf:type <http://dbpedia.org/class/yago/Event108069068> . # Event
  ?event rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> . # SocietalEvent

  ?award <http://dbpedia.org/ontology/event> ?event .
  ?award <http://dbpedia.org/property/awardee> ?awardee .

  OPTIONAL {
    ?awardee <http://dbpedia.org/ontology/professionOrOccupation> ?profession .
    FILTER(CONTAINS(LCASE(?profession), ""commander""))
  }
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?deathPlace ?birthPlace ?administration WHERE {
  OPTIONAL {
    # Find the death place of Matsudaira Tadamasa's great-grandfather who is a politician.
    <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/ontology/father> ?father .
    ?father <http://dbpedia.org/ontology/father> ?grandfather .
    ?grandfather <http://dbpedia.org/ontology/father> ?greatGrandfather .
    ?greatGrandfather <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
    ?greatGrandfather <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  
  OPTIONAL {
    # Find the birthplace of Enomoto Takeaki.
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }

  OPTIONAL {
    # Find the administration details related to Emperor Go-Yōzei.
    <http://dbpedia.org/resource/Emperor_Go-Yozei> <http://dbpedia.org/property/administration> ?administration .
  }
}
```",5,7,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?memberBirthPlace ?lusztigBirthPlace WHERE {
  OPTIONAL { 
    ?member <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
    ?member <http://dbpedia.org/ontology/birthPlace> ?memberBirthPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?lusztigBirthPlace .
  }
}
```",3,3,4,2,2,2,2,9,2,169,0,0.011695906432748537,1.0,0.023121387283236997
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarter ?residenceEntity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/ontology/residence> ?residence .
    ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?residenceEntity .
  }
}
```",3,3,4,2,2,2,2,9,0,2,1,0.0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace a <http://dbpedia.org/class/yago/Region108069> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?father .
  <http://dbpedia.org/resource/Greek_monarchy#George_I> <http://dbpedia.org/ontology/child> ?father .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/participatedIn> ?war .
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/S._A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT DISTINCT ?actor WHERE {
  # Find shows with Stacey Dash in the cast
  ?show <http://dbpedia.org/ontology/cast> <http://dbpedia.org/resource/Stacey_Dash> .
  
  # Find other actors in these shows
  ?show <http://dbpedia.org/ontology/cast> ?actor .

  # Ensure the actor is also a musical artist
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  ?result a <http://dbpedia.org/class/yago/MusicalGroup108069068> ; # Group type
          a <http://dbpedia.org/class/yago/Organisation118067836> .   # Organisation type
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,3,71,13,0,0,1.0,1.0,1.0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandChild WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Adela_Pankhurst> .
  ?parent <http://dbpedia.org/ontology/child> ?grandChild .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?grandChild ?parent WHERE {
  # Find the child of Antiochus, son of Antiochus III the Great
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?grandChild .
  
  # For each grandchild found, find their parent
  ?grandChild <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?archduke <http://dbpedia.org/ontology/child> ?child .
  FILTER(?archduke = <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria>)
}
```",2,2,3,2,1,3,3,71,1,6,0,0.14285714285714285,1.0,0.25
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/ontology/office> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rasa_Djelmash> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?force WHERE {
  ?person <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Indalecio_Prieto> .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/societalEvent> ?force .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/militaryConflict> ?force .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?administration WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/administration> ?administration .
  }
}
```",2,2,3,2,1,3,2,20,0,23,3,0.0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?beginTime ?endTime WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://www.w3.org/ns/prov#hadRole> ?role .
  ?role <http://purl.org/dc/terms/created> ?beginTime ;
        <http://purl.org/dc/terms/ended> ?endTime .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^xsd:date .
}
```",1,1,2,1,1,3,2,20,23,0,0,1.0,1.0,1.0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor WHERE {
  ?actor a <http://dbpedia.org/ontology/Actor> .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,21580,0,0.0,0
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?province ?region WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Schio> <http://www.geonames.org/ontology#locatedInAdminDivision> ?province .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/property/region> ?region .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?entity ?birthPlace WHERE {
  OPTIONAL { 
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Indonesia> .
    FILTER NOT EXISTS { ?entity a <http://dbpedia.org/ontology/Country> }
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war ?commander WHERE {
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> ;
       a <http://dbpedia.org/ontology/SocietalEvent> ;
       a <http://dbpedia.org/ontology/Event> .
  
  ?triggeParticipation dbp:participant <http://dbpedia.org/resource/Thomas_Trigge> ;
                       dbp:event ?war .

  OPTIONAL { 
    ?war dbp:commander ?commander .
  }
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?member ?birthPlace WHERE {
  ?band <http://dbpedia.org/ontology/member> ?member .
  FILTER(STRSTARTS(LCASE(?band), ""dropkick murphys""))
  ?member <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?producer ?band ?member WHERE {
  # Find the producer of the song ""Used to Love Her""
  <http://dbpedia.org/resource/Used_to_Love_Her> <http://purl.org/dc/terms/creator> ?work .
  ?work <http://dbpedia.org/ontology/producer> ?producer .

  # Check if the producer is part of a band
  OPTIONAL {
    ?band <http://dbpedia.org/property/member> ?member .
    ?producer <http://dbpedia.org/ontology/bandMember> ?band .
  }
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?dumitruNaduBirthplace ?georgeLusztigBirthplace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?dumitruNaduBirthplace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?georgeLusztigBirthplace .
  }
}
```",2,2,3,1,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Camden_Expedition> <http://dbpedia.org/ontology/militaryForce> ?military .
  ?military <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?result .
}
```",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Watchtower_(album)> .
  ?entity <http://dbpedia.org/ontology/band> <http://dbpedia.org/resource/Watchtower_(band)> .
  OPTIONAL { 
    ?entity <http://dbpedia.org/property/associatedMusicalArtist> ?result .
  }
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
SELECT ?grandChild WHERE {
  ?father <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?father <http://dbpedia.org/ontology/child> ?grandChild .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,21,0,0,1.0,1.0,1.0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?awardee ?award WHERE {
  ?awardee <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Category:American_people> .
  ?awardee <http://dbpedia.org/property/award> ?award .
  FILTER EXISTS { 
    ?award <http://www.w3.org/2004/02/skos/core#prefLabel> ""Wolf Prize in Medicine""@en
  }
}
```",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",2,2,3,1,2,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?awardee WHERE {
  <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/ontology/award> ?award .
  OPTIONAL { 
    ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  }
}
```",2,2,3,2,1,3,2,20,0,6,230,0.0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT DISTINCT ?commander ?war WHERE {
  # Find all commanders of the Peninsular War
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?commander .
  
  # For each commander, find other wars they were involved in
  ?commander <http://dbpedia.org/property/wars> ?war .
}
```",2,2,3,2,1,3,3,71,0,0,118,0,0.0,0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
SELECT ?show WHERE {
  <http://dbpedia.org/resource/Emily_Richard> <http://dbpedia.org/ontology/castMember> ?show .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
SELECT ?country WHERE {
  ?militaryForce <http://dbpedia.org/ontology/militaryUnit> ?unit .
  ?militaryForce <http://dbpedia.org/ontology/organization> ?org .
  ?militaryForce <http://dbpedia.org/property/event> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> .
  ?militaryForce <http://dbpedia.org/ontology/country> ?country .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Royal_Dublin_Society> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration WHERE {
  ?goMizunoo <http://dbpedia.org/ontology/father> ?father .
  FILTER(STRSTARTS(STR(?goMizunoo), ""http://dbpedia.org/resource/Emperor_Go-Mizunoo""))
  
  OPTIONAL { 
    ?father <http://dbpedia.org/property/administration> ?administration .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?successor ?player WHERE {
  <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?successor .
  OPTIONAL { 
    ?successor <http://dbpedia.org/property/player> ?player .
  }
}
```",2,2,3,2,1,3,2,20,0,1,1,0.0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"```sparql
SELECT ?successor WHERE {
  # Find the predecessor of the 2015 Sacramento Republic FC season
  ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> .
  
  # Ensure the predecessor is a sports team season and soccer club season
  ?predecessor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsTeamSeasons> ;
               <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Soccer> .
  
  # Find the successor of this predecessor
  ?predecessor <http://dbpedia.org/ontology/successor> ?successor .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/hasAwardee> ?result .
  FILTER(?award = <http://dbpedia.org/resource/Hero_of_the_Soviet_Union>)
}
```",1,1,2,1,1,3,2,20,0,0,837,0,0.0,0
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Retrieve the birthplace of Silvia Cohen
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Find natives of that birthplace
  ?person <http://dbpedia.org/ontology/nativePlace> ?birthPlace .
  
  # Ensure the person is not Silvia Cohen herself
  FILTER(?person != <http://dbpedia.org/resource/Silvia_Cohen>)
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee"" .
  ?result a <http://dbpedia.org/class/yago/YagoLegalPerson108069848> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?work WHERE {
  ?utility <http://dbpedia.org/ontology/author> ?author .
  FILTER(?utility IN (<http://dbpedia.org/resource/Pushd>, <http://dbpedia.org/resource/Popd>))
  
  ?work <http://purl.org/dc/terms/creator> ?author ;
        a <http://dbpedia.org/class/yago/Software100000031> .

}
```",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/claimToFame> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Solace_of_Requiem> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup115069068> .
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?result .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
SELECT DISTINCT ?actor WHERE {
  # Find actors in ""The Departed""
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/cast> ?actor .
  
  # Filter by birthplace being Compton, California
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (str(?birthPlace) = ""Compton, California"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Watchtower> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/nickname> ""'The Three Lions'""@en .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/region> ?result .
  ?result a <http://dbpedia.org/class/yago/Country108069365> .
}
```",1,2,2,1,1,2,2,9,0,0,56,0,0.0,0
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/profession> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"```sparql
SELECT DISTINCT ?birthPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?person a <http://dbpedia.org/ontology/Writer> ;
          a <http://dbpedia.org/ontology/Poet> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,4,3,2,1,2,3,28,7,1,0,0.875,1.0,0.9333333333333333
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?parent ?predecessor WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/parent> ?parent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://www.w3.org/2002/07/owl#sameAs> ?role .
    ?role <http://dbpedia.org/ontology/predecessor> ?predecessor .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?manager WHERE {
  ?team <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Lenid_Slutsky> .
  ?team a <http://dbpedia.org/class/yago/SoccerClub100000001> ;
        a <http://dbpedia.org/class/yago/SportsTeamSeason1000000> .

  ?team <http://dbpedia.org/ontology/teamManager> ?manager .
  ?manager a <http://dbpedia.org/ontology/SportsManager> .
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/spouse> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?grandChild WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
  ?parent <http://dbpedia.org/ontology/child> ?grandChild .
}
```",2,2,3,2,1,3,3,71,3,3,0,0.5,1.0,0.6666666666666666
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,31,0,0,1.0,1.0,1.0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?trueSelf ?alterEgo WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/trueSelf> ?trueSelf .
  OPTIONAL { 
    ?trueSelf <http://dbpedia.org/property/alterEgo> ?alterEgo .
  }
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Samuel Ofori Amponsah"" .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?child WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
  }
  OPTIONAL {
    ?predecessor <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> .
    FILTER(?child = ?predecessor)
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bill_Joy> <http://purl.org/dc/terms/creator> ?work .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Software100000001> .
  BIND(?work AS ?result)
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?deathPlace WHERE {
  ?work <http://dbpedia.org/property/author> ?author .
  ?work rdfs:label ""The Twelve Abbots of Challant""@en .
  
  ?author <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
}
```",2,2,3,2,1,2,3,28,3,0,0,1.0,1.0,1.0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/House_of_Sombrerete> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:CreativeWork .
  ?movie rdf:type dbo:TVSeries .
}
```

This query will return entities that are simultaneously classified as a movie, work, and television show in DBpedia.",2,5,3,2,1,3,3,71,0,0,1674,0,0.0,0
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/nickname> ""'QUB'""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/region> ?result .
  ?result a <http://dbpedia.org/class/yago/Country108069365> .
}
```",1,2,2,1,1,2,3,28,0,0,56,0,0.0,0
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/location> <http://dbpedia.org/resource/United_Kingdom> .
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","```sparql
SELECT DISTINCT ?person ?almaMater WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear>.
  ?person <http://dbpedia.org/ontology/almaMater> ?almaMater.
  
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizations1000000010>.
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organization>.
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>.
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalOrganization>.
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?arnulfoAriasParty ?guillermoEndaraParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?arnulfoAriasParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?guillermoEndaraParty .
  }
}
```",2,2,3,1,2,2,3,28,1,1,0,0.5,1.0,0.6666666666666666
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Georgeanne Marie Rice"" .
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/spouse> ?person .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
SELECT ?administration ?location WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/administration> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/property/location> ?location .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Kerber_(band)> .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
SELECT ?result WHERE {
  ?work <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Amba_Shepherd> .
  ?work <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Song104930069> .
  BIND(?work AS ?result)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?party WHERE {
  ?event <http://dbpedia.org/ontology/commander> ?commander .
  ?event <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/United_States_invasion_of_Panama> .
  ?commander a <http://dbpedia.org/class/yago/Politician108069068> .
  ?commander <http://dbpedia.org/ontology/politicalParty> ?party .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Province_of_Bergamo> .
}
```",1,1,2,1,1,2,2,9,0,16,228,0.0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,2,20,11,0,0,1.0,1.0,1.0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?electionCountry ?administration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?electionCountry .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Phil_Scott_(politician)> <http://dbpedia.org/property/administration> ?administration .
  }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT DISTINCT ?actor ?restingPlace WHERE {
  # Find actors associated with ""Enemy at the Door""
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/castMember> ?actor .
  
  # Retrieve the resting place of each actor
  OPTIONAL { 
    ?actor <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}
```",1,3,2,1,1,3,2,20,17,0,0,1.0,1.0,1.0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER (lang(?name) = 'ja') # Ensures the name is in Japanese
  ?result a <http://dbpedia.org/class/yago/Yahoo!GeographyOrganisation5406> . # Organization type
  ?result a <http://dbpedia.org/ontology/University> . # University type
  ?result a <http://dbpedia.org/ontology/EducationalOrganization> . # Educational Institution type
}
```",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?event ?commander WHERE {
  ?event <http://dbpedia.org/ontology/date> ?date .
  FILTER (STRSTARTS(STR(?date), ""01-09""))
  OPTIONAL { 
    ?event <http://dbpedia.org/property/commander> ?commander .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?organisation ?headquarter WHERE {
  ?person <http://dbpedia.org/ontology/member> ?organisation .
  ?person foaf:name ""Joo Don-sik"" .
  ?organisation a <http://dbpedia.org/ontology/Organization> .
  OPTIONAL { 
    ?organisation <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/ontology/occupation> ?result .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://www.w3.org/2002/07/owl#sameAs> ?antiochus .
  ?antiochus <http://dbpedia.org/ontology/successor> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryUnit> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse ?child WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/spouse> ?spouse .
  }
  OPTIONAL {
    ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> .
    ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?person ?band WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
    BIND(<http://dbpedia.org/resource/Shèna> AS ?person)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
    BIND(<http://dbpedia.org/resource/Amba_Shepherd> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,1,8,0,0.1111111111111111,1.0,0.19999999999999998
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?result WHERE {
  ?green <http://www.w3.org/2000/01/rdf-schema#label> ""Green""@en .
  ?green <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/Settlements100000001> .
  ?green <http://dbpedia.org/property/administration> ?result .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Western_European_Time> .
  ?entity <http://www.w3.org/2002/07/owl#sameAs> ?result .
  ?result a <http://dbpedia.org/class/yago/Country108069627> .
}
```",2,3,3,2,1,2,3,28,0,0,46363,0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?administration ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/positionHeld> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result .
}
```",2,2,3,2,1,3,3,71,0,1,1,0.0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Leroy_P._Steele_Prize> <http://dbpedia.org/ontology/awardee> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,21,0,0.0,0
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?deathPlace WHERE {
  ?yuki <http://dbpedia.org/ontology/father> ?father .
  FILTER (?yuki = <http://dbpedia.org/resource/Yūki_Hideyasu>)
  
  OPTIONAL { 
    ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  }
  
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
SELECT ?meritamenParent ?henuttawyParent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?meritamenParent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://dbpedia.org/ontology/parent> ?henuttawyParent .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Matt Colton"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes"" .
  ?result a <http://dbpedia.org/class/yago/YagoLegalActor108930848> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?child ?father WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/property/father> ?father .
}
```",2,2,3,2,1,3,3,71,1,3,0,0.25,1.0,0.4
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,2,3,28,0,1,8,0.0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> .
  ?child a <http://dbpedia.org/ontology/Royalty> .
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?parent .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/ontology/castMember> ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthYear> ""1970"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Composer> .
}
```",2,2,3,1,2,2,2,9,0,0,7,0,0.0,0
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?awardee WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/orderOfStAndrew> ""Order of St. Andrew"" .
    ?person rdfs:label ?awardee .
    FILTER (lang(?awardee) = 'en')
  }
}
```",2,2,3,1,2,3,2,20,1,20,0,0.047619047619047616,1.0,0.0909090909090909
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",2,2,3,2,1,3,3,71,0,1,6,0.0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?awardee ?almaMater WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://www.w3.org/2004/02/skos/core#prefLabel> ""Royal Medal""@en .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",2,2,3,2,1,3,3,71,0,0,31,0,0.0,0
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/participatedIn> ?result .
}
```

Note: The exact property name (`participatedIn`) might vary depending on how DBpedia structures its data. If this specific property does not yield results, alternative properties related to military involvement should be considered.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT DISTINCT ?work ?producer WHERE {
  # Find works by 50 Cent that are both songs and musical works
  ?work <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/50_Cent> .
  ?work a <http://purl.org/ontology/mo/MusicalWork> ;
        a <http://dbpedia.org/class/yago/Song100000000> .

  # Retrieve the producer(s) of these works
  OPTIONAL { 
    ?work <http://dbpedia.org/property/producer> ?producer .
  }
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result .
  ?result a <http://dbpedia.org/class/yago/Venue108069068> ; # Venue type
          a <http://dbpedia.org/class/yago/ArchitecturalStructure1000000010> . # Architectural structure type
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
  BIND(?residence AS ?result)
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  # Find the spouse of Princess Victoria Louise of Prussia
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?spouse .
  
  # Ensure this spouse is also a parent of Prince Ernest Augustus of Hanover (born 1914)
  ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914-1987)> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  OPTIONAL {
    ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> .
    FILTER(?spouse = ?parent)
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?show ?result WHERE {
  ?show <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Soviet_Union> .
  ?show <http://purl.org/dc/terms/awardee> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?war ?force WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/force> ?force .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> .
  FILTER (
    EXISTS { ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Financier> }
    ||
    EXISTS { ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Businessman> }
    ||
    EXISTS { ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Vineyard_owner> }
    ||
    EXISTS { ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Art_collector> }
    ||
    EXISTS { ?person <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Racehorse_owner/breeder> }
  )
}
```",2,2,3,1,2,2,2,9,1,3,0,0.25,1.0,0.4
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,2,3,28,1,2,2,0.3333333333333333,0.3333333333333333,0.3333333333333333
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
SELECT ?member WHERE {
  # Step 1: Identify the alma mater of Eiji Ōtsuka
  <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?almaMater .

  # Step 2: Ensure the alma mater is Japanese, an organization, a university, and an educational institution
  ?almaMater <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""japanese""))
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseOrganizations1000000010> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organizations1000000518> .
  ?almaMater <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EducationalInstitutions1000000010> .

  # Step 3: Find members of the alma mater
  ?almaMater <http://xmlns.com/foaf/0.1/member> ?member .
}
```",2,6,3,2,1,3,3,71,0,0,267,0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
SELECT ?reference ?band WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Blasters> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/band> ?band .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Serbia> .
}
```",1,1,2,1,1,3,2,20,19,403,5409,0.045023696682464455,0.0035003684598378776,0.006495726495726496
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
SELECT ?province WHERE {
  ?person <http://dbpedia.org/property/residence> ?residence .
  ?residence a <http://dbpedia.org/class/yago/SettlementsInItaly> ;
             <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/spatial> ?province .
  FILTER(CONTAINS(LCASE(?person), ""sebastiano bianchetti""))
}
```",2,4,3,2,1,2,3,28,0,0,1,0,0.0,0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/El_Valle_de_Ant%C3%B3n> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/spatial> ?country .
  ?country a <http://dbpedia.org/class/yago/Country108069068> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?almaMeter .
    BIND(?almaMeter AS ?almaMater)
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Serbia> .
    BIND(?entity AS ?entityInSerbia)
  }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?owner ?headquarter WHERE {
  <http://dbpedia.org/resource/RDS_Arena> <http://www.w3.org/2006/vcard/ns#hasOrganization> ?owner .
  OPTIONAL { 
    ?owner <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT DISTINCT ?work ?writer WHERE {
  <http://dbpedia.org/resource/Shellback_(record_producer)> <http://purl.org/dc/terms/contributor> ?work .
  OPTIONAL { 
    ?work <http://dbpedia.org/ontology/writer> ?writer .
  }
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?author ?award WHERE {
  # Find the author of Understanding Comics
  <http://dbpedia.org/resource/Understanding_Comics> <http://purl.org/dc/terms/creator> ?author .
  
  # Retrieve any awards received by the author
  OPTIONAL { 
    ?author <http://dbpedia.org/ontology/award> ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jonathan_Band> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?force WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/property/commanderOf> ?force .
  }
}
```",2,2,3,1,2,3,2,20,0,0,6,0,0.0,0
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?grandchild ?parent WHERE {
  ?child <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Tina_Onassis_Niarchos> .
  ?child <http://dbpedia.org/ontology/birthChild> ?grandchild .
  ?grandchild <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Serbia> .
}
```",1,1,2,1,1,2,2,9,19,403,5409,0.045023696682464455,0.0035003684598378776,0.006495726495726496
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://dbpedia.org/ontology/administers> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/associatedBandMember> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  {
    SELECT ?author WHERE {
      <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?author .
    }
  }
  ?author <http://dbpedia.org/ontology/participatedIn> ?war .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  ?settlement a <http://dbpedia.org/class/yago/Settlement108069068> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
}
```",1,2,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  { <http://dbpedia.org/resource/Pushd> <http://dbpedia.org/property/author> ?result . }
  UNION
  { <http://dbpedia.org/resource/Popd> <http://dbpedia.org/property/author> ?result . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/ontology/militaryUnit> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://dbpedia.org/ontology/associatedWith> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?eventType .
  FILTER (
    (?eventType = <http://dbpedia.org/class/yago/SocietalEvent108069068>)
    || (?eventType = <http://dbpedia.org/ontology/Event>)
    || (?eventType = <http://dbpedia.org/class/yago/MilitaryConflict108069068>)
  )
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
SELECT ?awardee ?birthPlace WHERE {
  ?award <http://dbpedia.org/ontology/awardee> ?awardee .
  FILTER(STRSTARTS(LCASE(?award), ""leroy p. stele prize""))
  ?awardee <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,21,0,0.0,0
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?commander ?claimToFame WHERE {
  # Step 1: Find the commander of the Great Siege of Gibraltar
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?commander .

  # Step 2: Retrieve the claim to fame for that commander
  OPTIONAL { 
    ?commander <http://dbpedia.org/property/claimToFame> ?claimToFame .
  }
}
```",2,2,3,2,1,3,3,71,0,7,2,0.0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?manager ?team WHERE {
  # Step 1: Identify the manager of the 1998 Kashima Antlers season
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?manager .

  # Step 2: Ensure the manager is a sports manager
  OPTIONAL { 
    ?manager <http://www.w3.org/2000/01/rdf-schema#type> <http://dbpedia.org/class/yago/SportsManager108930068> .
  }

  # Step 3: Find out which team(s) this manager was managing at that time
  OPTIONAL {
    ?manager <http://dbpedia.org/ontology/team> ?team .
  }
}
```",2,3,3,2,1,3,3,71,0,11,10,0.0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://purl.org/dc/terms/contributor> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/property/birthDate> ?birthDate .
  FILTER (
    ?birthDate >= ""1958-01-01""^^xsd:date &&
    ?birthDate <= ""1958-12-31""^^xsd:date
  )
}
```",1,1,2,1,1,3,3,71,2000,7566,515,0.20907380305247752,0.7952286282306164,0.3310984190050492
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ralph_L._Brinster> <http://purl.org/dc/terms/award> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Sharon Kao"" .
  ?person <http://dbpedia.org/ontology/profession> ?result .
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Matthew_Burland> <http://dbpedia.org/ontology/fictionalCharacter> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award ?professional WHERE {
  <http://dbpedia.org/resource/Stan_Lee> <http://purl.org/dc/terms/receiver> ?award .
  OPTIONAL { 
    ?award <http://www.w3.org/ns/org#hasRecipient> ?professional .
  }
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Merenptah> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?conflict WHERE {
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commander> ?conflict .
  ?conflict a <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
}
```",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?kerberBandMember ?rasaBand WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Kerber> <http://dbpedia.org/ontology/associatedMusicalArtist> ?kerberBandMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/band> ?rasaBand .
  }
}
```",2,2,3,1,2,3,2,20,1,8,0,0.1111111111111111,1.0,0.19999999999999998
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"```sparql
SELECT DISTINCT ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> .
  ?person a <http://dbpedia.org/ontology/SoccerPlayer> ;
          a <http://dbpedia.org/ontology/SoccerManager> .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/team> ?team .
  }
}
```",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"```sparql
SELECT DISTINCT ?band WHERE {
  ?member <http://dbpedia.org/ontology/associatedBandMember> <http://dbpedia.org/resource/YU_Grupa> .
  ?member a <http://dbpedia.org/ontology/Artist> ;
          a <http://dbpedia.org/ontology/MusicalArtist> .
  ?member <http://dbpedia.org/property/band> ?band .
}
```",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT DISTINCT ?child WHERE {
  # Step 1: Find the parents of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/birthParent> ?parent .

  # Step 2: Find children who are royalty from these parents
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }",Not applicable due to insufficient information provided in the question.,1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { 
    ?child <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> .
  }
}
```",2,2,3,1,2,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Ted Martin McGinley"" .
  ?person <http://dbpedia.org/ontology/spouse> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person ?band WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/property/associatedBand> ?band .
  }
}
```",2,2,3,1,2,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> .
}
```",1,1,2,1,1,2,2,9,1654,0,0,1.0,1.0,1.0
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phil_Alvin> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gustav_Jonson> <http://www.w3.org/2002/07/owl#sameAs> ?entity .
  ?entity <http://dbpedia.org/ontology/leader> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/spouse> ?spouse .
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914–1987)> .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarter ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism_(South_Korea)> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/South_Korea> .
  }
}
```",2,2,3,1,2,2,2,9,0,866,1,0.0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Indalecio_Prieto> <http://www.w3.org/2004/02/skos/core#broader> ?role .
  ?role <http://dbpedia.org/ontology/predecessor> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"```sparql
SELECT ?resident WHERE {
  ?verona <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER(?verona = <http://dbpedia.org/resource/Stephen_Verona>)
  
  ?birthPlace a <http://dbpedia.org/class/yago/Settlement108069068> .

  OPTIONAL { 
    ?birthPlace <http://www.w3.org/ns/org#hasMember> ?resident .
  }
}
```",2,3,3,2,1,3,2,20,0,0,15,0,0.0,0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?predecessor ?child WHERE {
  # Find the predecessor of Frederick VIII of Denmark
  <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://www.w3.org/2002/07/owl#sameAs> ?predecessor .

  # Find the children of that predecessor
  ?predecessor <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?player .
  ?player <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Soccer_players> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?manager .
  ?manager <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Soccer_managers> .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Ramesses_II> .
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?childSameAs .
  OPTIONAL { 
    ?childSameAs <http://dbpedia.org/ontology/mother> ?mother . 
    ?childSameAs <http://dbpedia.org/ontology/father> ?father .
    UNION
    ?mother <http://www.w3.org/2002/07/owl#sameAs> ?parent .
    ?father <http://www.w3.org/2002/07/owl#sameAs> ?parent .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Margaret_of_Austria_(1925-2001)> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  FILTER(?child != <http://dbpedia.org/resource/Margaret_of_Austria_(1925-2001)>)
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/National_University_of_San_Marcos> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,74,0,0.0,0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?event ?force WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/El_Director> <http://dbpedia.org/ontology/event> ?event .
    ?event <http://dbpedia.org/property/force> ?force .
  }
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?awardee WHERE {
  <http://dbpedia.org/resource/Sergei_Makovetsky> <http://purl.org/dc/terms/receiver> ?award .
  OPTIONAL { 
    ?award <http://www.w3.org/2004/02/skos/core#prefLabel> ?awardName .
    ?award <http://dbpedia.org/ontology/awardee> ?awardee .
  }
}
```",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
SELECT ?result WHERE {
  ?medal <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Medal> .
  ?medal <http://purl.org/dc/terms/relation> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,45,0,0.0,0
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
SELECT ?event ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Largo_Caballero> .
  ?event a <http://dbpedia.org/class/yago/SocietalEventOrMilitaryConflict> .
  OPTIONAL { 
    ?event <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?war ?entity WHERE {
  OPTIONAL {
    ?war <http://dbpedia.org/ontology/participatingMilitaryUnit> <http://dbpedia.org/resource/New_Zealand_Army> .
  }
  OPTIONAL {
    ?entity <http://dbpedia.org/property/involvement> ?war ;
            <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT DISTINCT ?child ?parent WHERE {
  # Step 1: Find children of Nefertari
  <http://dbpedia.org/resource/Nefertari> <http://www.w3.org/2002/07/owl#sameAs> ?nefertariResource .
  ?nefertariResource <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Find parents of each child
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/birthParent> ?parent .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?event WHERE {
  <http://dbpedia.org/resource/Francisco_Franco> <http://dbpedia.org/ontology/associatedWith> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvent108930069> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108930069> .
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://xmlns.com/foaf/0.1/father> ?father .
  ?father a <http://dbpedia.org/class/yago/OfficeHolder108930068> .
  BIND(?father AS ?result)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""'Georgeanne Marie Rice'""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?leader ?awardee WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?leader .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/property/orderOfSuvorovAwardee> true .
    ?person rdfs:label ?awardee .
    FILTER (lang(?awardee) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?person WHERE {
  ?capital <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Algeria> .
  ?place <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?capital .
  ?person <http://dbpedia.org/ontology/decedent> ?place .
}
```",2,3,3,2,1,3,3,71,0,0,122,0,0.0,0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/birthName> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?parent ?spouse WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> <http://www.w3.org/2002/07/owl#sameAs> ?henuttawy .
    ?henuttawy <http://dbpedia.org/ontology/parent> ?parent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",2,2,3,1,2,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Dino Merlin""@en .
  ?person rdfs:label ?result .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?person WHERE {
  # Find persons decedent at Algiers
  { 
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  }
  
  UNION
  
  # Find commanders in the Franco-Hova Wars
  {
    ?person <http://dbpedia.org/ontology/role> ?role .
    FILTER(CONTAINS(LCASE(?role), ""commander"") && CONTAINS(LCASE(?role), ""franco-hova wars""))
  }

  # Ensure the person satisfies both conditions
  FILTER(EXISTS { 
    ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
  } &&
         EXISTS {
           ?person <http://dbpedia.org/ontology/role> ?role .
           FILTER(CONTAINS(LCASE(?role), ""commander"") && CONTAINS(LCASE(?role), ""franco-hova wars""))
         }
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108069068> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist118072834> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/ontology/rulingParty> ?result .
  ?result a <http://dbpedia.org/ontology/PoliticalParty> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/spatial> ?country .
  BIND(STR(?country) AS ?result)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/ontology/residence> ?result .
}
```",2,2,3,2,1,2,2,9,1,1,3064,0.5,0.0003262642740619902,0.0006521030322791001
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ji%C5%99ina_%C5%A0t%C4%9Bpni%C4%8Dkov%C3%A1> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?spouse WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://dbpedia.org/ontology/spouse> ?spouse .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  # Find commanders in Eastern Front (World War II)
  ?person <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> .
  
  # Find leaders of People's Commissariat of Defense
  OPTIONAL { 
    ?person <http://dbpedia.org/property/leaderOf> <http://dbpedia.org/resource/People%27s_Commissariat_of_Defense_of_the_Soviet_Union> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,17,0,0,1.0,1.0,1.0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/year> ""1778"" .
  ?award <http://dbpedia.org/property/awardee> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?rapper WHERE {
  ?rapper <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  OPTIONAL { 
    ?rapper <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Rappers> .
  }
}
```",1,2,2,1,1,3,3,71,1363,124082,0,0.010865319462712743,1.0,0.02149706643113999
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
SELECT ?actor ?profession WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/castMember> ?actor .
  ?actor <http://purl.org/dc/terms/subject> ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""actor""))
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor1 ?actor2 WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/cast> ?actor1 .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/cast> ?actor2 .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  # Find individuals who died in French Algeria
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> .
  
  # Find individuals who were commanders in the Franco-Hova Wars
  OPTIONAL { 
    ?person <http://dbpedia.org/property/commanderIn> <http://dbpedia.org/resource/Franco-Hova_Wars> .
  }
}
```",2,2,3,1,2,3,3,71,1,29,0,0.03333333333333333,1.0,0.06451612903225806
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović"" .
  OPTIONAL { 
    ?association <http://dbpedia.org/ontology/member> ?person ;
                 <http://dbpedia.org/resource/Senidah> ?senidah .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(1925)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT DISTINCT ?child WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
  }
}
```",2,2,3,2,1,3,2,20,5,0,0,1.0,1.0,1.0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/burialPlace> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickname> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?officeHolder ?force WHERE {
  ?officeHolder <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?officeHolder a <http://dbpedia.org/class/yago/OfficeHolder108069068> .
  OPTIONAL { 
    ?officeHolder <http://dbpedia.org/property/force> ?force .
  }
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT DISTINCT ?work WHERE {
  ?person a <http://dbpedia.org/ontology/MusicalArtist> ;
          <http://dbpedia.org/property/profession> ""Rapper"" .
  
  ?person <http://purl.org/dc/terms/creator> ?work .
  ?work a <http://dbpedia.org/ontology/MusicalWork> ;
        a <http://dbpedia.org/ontology/Song> ;
        a <http://dbpedia.org/ontology/Work> .
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?metallicaMember ?newstedBand WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/member> ?metallicaMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jason_Newsted> <http://dbpedia.org/ontology/member> ?band .
    BIND(?band AS ?newstedBand)
  }
}
```",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/office> ?office .
  ?office <http://dbpedia.org/property/administration> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,2,20,24,0,0,1.0,1.0,1.0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/participatedIn> ?war .
  ?war <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER(CONTAINS(LCASE(?label), ""sri lanka"") || CONTAINS(LCASE(?label), ""ceylon""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  ?band <http://dbpedia.org/ontology/member> ?result .
  FILTER(?band = <http://dbpedia.org/resource/Nevermore_(band)>)
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/ontology/starring> ?result .
}
```",1,1,2,1,1,3,3,71,4,0,1,1.0,0.8,0.888888888888889
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?militaryForce ?award WHERE {
  <http://dbpedia.org/resource/Battle_of_Borodino> <http://dbpedia.org/ontology/participant> ?participant .
  ?participant <http://dbpedia.org/ontology/militaryUnit> ?militaryForce .
  OPTIONAL { 
    ?militaryForce <http://dbpedia.org/property/award> ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Seti_I> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?entityInPanama ?party WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Panama> .
    BIND(?entity AS ?entityInPanama)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/property/party> ?party .
  }
}
```",2,2,3,1,2,2,3,28,1,82,0,0.012048192771084338,1.0,0.02380952380952381
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://dbpedia.org/ontology/region> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?soeMinWimalaDewi <http://dbpedia.org/ontology/father> ?father .
  FILTER(?soeMinWimalaDewi = <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi>)
  ?father <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068>.
  OPTIONAL { 
    ?result <http://dbpedia.org/ontology/location> ?location .
    FILTER (CONTAINS(LCASE(?location), ""belfast""))
  }
}
```",1,2,2,1,1,3,3,71,0,0,57,0,0.0,0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?person WHERE {
  # Find people native to London
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
  
  # Find actors in the film ""Dog Soldiers""
  ?film <http://dbpedia.org/property/starring> ?actor .
  FILTER(?film = <http://dbpedia.org/resource/Dog_Soldiers_(2002_film)>)
  
  # Ensure the person is both a native of London and an actor in Dog Soldiers
  VALUES ?person { ?actor }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> ?location .
  FILTER (str(?location) = ""United Kingdom"")
}
```",1,1,2,1,1,3,2,20,0,0,42999,0,0.0,0
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?commander ?birthPlace WHERE {
  ?war <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(CONTAINS(LCASE(STR(?war)), ""boshin war""))
  OPTIONAL { 
    ?commander <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
SELECT ?owner WHERE {
  ?event <http://dbpedia.org/property/location> ?location .
  ?event <http://dbpedia.org/resource/2012_Pro12_Grand_Final> .
  
  ?location a <http://dbpedia.org/class/yago/Venue108069068> ;
            a <http://dbpedia.org/class/yago/ArchitecturalStructure1000000010> .

  ?location <http://dbpedia.org/property/owner> ?owner .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""london""))
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","```sparql
SELECT ?landmark ?native WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark a <http://dbpedia.org/class/yago/Settlement108069068> . # Assuming 'Settlement' is represented by this class
  OPTIONAL { 
    ?native <http://dbpedia.org/ontology/nativeOf> ?landmark .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,3,71,8,0,0,1.0,1.0,1.0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?region <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthPlace ;
          a <http://dbpedia.org/class/yago/Region108069068> .
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
SELECT ?grandparent WHERE {
  ?minLinka <http://dbpedia.org/ontology/birthName> ""Min Linka"" .
  ?minLinka <http://dbpedia.org/ontology/father> ?parent .
  ?parent <http://dbpedia.org/ontology/father> ?grandparent .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?location .
  FILTER(?location = <http://dbpedia.org/resource/South_Korea>)
}
```",1,1,2,1,1,2,2,9,0,0,3065,0,0.0,0
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/birthName> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://www.w3.org/2006/vcard/ns#hasAltitude> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Queen%27s_University_Belfast> <http://dbpedia.org/property/nickname> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?rifWarForce ?biscayCampaignCommander WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/participant> ?rifWarParticipant .
    ?rifWarParticipant <http://www.w3.org/2000/01/rdf-schema#label> ?rifWarForce .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?biscayCampaignCommander .
  }
}
```",2,2,3,1,2,3,3,71,1,4,0,0.2,1.0,0.33333333333333337
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/location> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter> .
}
```",1,3,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?profession (GROUP_CONCAT(?person; separator="", "") AS ?professionals) WHERE {
  # Step 1: Identify Satomi Ishihara's profession
  <http://dbpedia.org/resource/Satomi_Ishihara> <http://purl.org/dc/terms/subject> ?occupation .
  
  # Step 2: Find other professionals in the same field
  ?person <http://purl.org/dc/terms/subject> ?occupation .
  FILTER(?person != <http://dbpedia.org/resource/Satomi_Ishihara>)
}
GROUP BY ?profession
```",2,2,3,2,1,3,3,71,0,0,19241,0,0.0,0
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nysa_(wife_of_Pharaces_I_of_Pontus)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryUnit108069068>.
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ""Polish Horse""@en.
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068>.
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to incomplete question.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?commander WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/event> ?napoleonicWar .
    ?napoleonicWar <http://dbpedia.org/property/name> ""Napoleonic Wars"" .
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
  OPTIONAL {
    ?campaign <http://dbpedia.org/ontology/event> ?germanCampaign1813 .
    ?germanCampaign1813 <http://dbpedia.org/property/name> ""German campaign of 1813"" .
    ?campaign <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
  OPTIONAL { 
    <http://dbpedia.org/resource/Ubol_Ratana> <http://www.w3.org/2002/07/owl#sameAs> ?ubolRatanaEquivalent .
    ?ubolRatanaEquivalent <http://dbpedia.org/ontology/parent> ?person .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/member> ?member .
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Chishui_River> .
  ?battle <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/property/award> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,9,0,0.0,0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/occupation> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_K._Nash> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?band ?person WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
  }
  UNION
  {
    ?person a <http://dbpedia.org/ontology/Person> ;
            <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/predecessor> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsTeamSeason108069068> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerClubSeasons108070003> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarter WHERE {
  <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism_(South_Korea)> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?headquarter .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://www.w3.org/2004/02/skos/core#related> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?territory ?work WHERE {
  OPTIONAL {
    ?city <http://dbpedia.org/ontology/administrativeUnit> ?territory .
    FILTER(?city = <http://dbpedia.org/resource/Reykjavík>)
  }
  OPTIONAL {
    ?constitution <http://dbpedia.org/property/article> ""62"" .
    ?article <http://dbpedia.org/property/section> ""IV"" .
    ?article <http://purl.org/dc/terms/description> ?work .
    FILTER(?constitution = <http://dbpedia.org/resource/Constitution_of_Iceland>)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,2,20,11,0,0,1.0,1.0,1.0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://www.w3.org/2004/02/skos/core#broader> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?country WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/spatial> ?country .
  ?country a <http://dbpedia.org/class/yago/Country108069068> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ebony_Reigns> <http://www.w3.org/2004/02/skos/core#altLabel> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?author ?work WHERE {
  # Find the author of French Algeria
  <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?author .
  
  # Retrieve works by this author
  ?author <http://purl.org/dc/terms/creator> ?work .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Article_62,_Section_IV_of_the_Constitution_of_Iceland> <http://dbpedia.org/ontology/work> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?person rdfs:label ""Heather Roy""@en .
  FILTER NOT EXISTS { ?person a owl:Thing } # Ensure it's not the generic class
  ?profession a <http://dbpedia.org/ontology/MilitaryUnit> .
  ?profession <http://dbpedia.org/property/war> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
SELECT ?show WHERE {
  ?show <http://dbpedia.org/ontology/productionCompany> ?company .
  ?company <http://www.w3.org/2000/01/rdf-schema#label> ""Soviet Union""@en .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Find the writer(s) of the album ""Emotion""
  <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://purl.org/dc/terms/creator> ?writer .
  
  # Check if these writers are associated with any bands
  OPTIONAL {
    ?writer <http://dbpedia.org/ontology/associatedBand> ?band .
  }
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/participatedIn> ?war .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
  BIND(?birthPlace AS ?result)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?administration WHERE {
  # Step 1: Get the father's entity
  <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://xmlns.com/foaf/0.1/father> ?father .

  # Step 2: Find any office or position held by her father
  OPTIONAL {
    ?father <http://dbpedia.org/ontology/office> ?office .
    ?office <http://dbpedia.org/property/administration> ?administration .
  }

  # Alternatively, if the administration is described in a different way:
  OPTIONAL {
    ?office <http://purl.org/dc/terms/description> ?description .
    FILTER(CONTAINS(LCASE(?description), ""administration""))
    BIND(SUBSTR(?description, STRSTARTS(UCASE(?description), ""ADMINISTRATION: ""), 100) AS ?administration)
  }
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?carlFalkBand ?murdaMookBand WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?carlFalkBand .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?murdaMookBand .
  }
}
```",2,2,3,1,2,3,2,20,1,19,0,0.05,1.0,0.09523809523809523
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/John_Pettibone> <http://dbpedia.org/ontology/bandMember> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
  }
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
SELECT ?nickname WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerClub108069068>.
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsClubs108070084>.
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England>.
  OPTIONAL { 
    ?entity <http://xmlns.com/foaf/0.1/nick> ?nickname .
  }
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/claimToFame> ?result .
  ?result a <http://dbpedia.org/ontology/Film> ;
          a <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","```sparql
SELECT ?child ?profession WHERE {
  <http://dbpedia.org/resource/Jack_Schwartzman> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/profession> ?profession .
  }
}
```",2,2,3,1,2,3,2,20,1,2,0,0.3333333333333333,1.0,0.5
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?grandfather WHERE {
  # Step 1: Find Matsudaira Tadamasa's father
  ?tadamasa <http://dbpedia.org/ontology/father> ?father .
  
  # Step 2: Ensure the father is an office holder
  ?father a <http://dbpedia.org/ontology/OfficeHolder> .

  # Step 3: Find Matsudaira Tadamasa's grandfather (father of his father)
  ?father <http://dbpedia.org/ontology/father> ?grandfather .
  
  # Step 4: Ensure the grandfather is a politician
  ?grandfather a <http://dbpedia.org/ontology/Politician> .
}
```",2,4,3,2,1,3,3,71,0,36,1,0.0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
SELECT ?spouse ?work WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/property/spouse> ?spouse .
  ?spouse <http://dbpedia.org/ontology/claimToFame> ?work .
  FILTER EXISTS { ?work a <http://dbpedia.org/ontology/Work> }
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result .
}
```",2,2,3,2,1,3,2,20,0,1,5,0.0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?grandChild WHERE {
  ?royalChild <http://dbpedia.org/ontology/child> ?grandChild .
  ?royalChild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?royalChild .
}
```",2,3,3,2,1,3,2,20,4,0,0,1.0,1.0,1.0
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?office <http://dbpedia.org/ontology/officeHolder> <http://dbpedia.org/resource/Joseph_Stalin> .
  ?office a <http://dbpedia.org/class/yago/GovernmentAgency108069068> .
  ?office <http://www.w3.org/ns/org#hasLeader> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  ?organization <http://www.geonames.org/ontology#locatedIn> <http://dbpedia.org/resource/Belfast> .
  ?organization a <http://dbpedia.org/ontology/Organisation> .
  ?organization <http://dbpedia.org/property/mayor> ?mayor .
  ?mayor a <http://dbpedia.org/ontology/Politician> .
}
```",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"```sparql
SELECT ?child WHERE {
  # Find the parent of Lizzie Spaulding who is a fictional character and a soap character
  ?parent <http://dbpedia.org/ontology/birthParent> <http://dbpedia.org/resource/Lizzie_Spaulding> .
  ?parent a <http://dbpedia.org/ontology/FictionalCharacter> ;
          a <http://dbpedia.org/ontology/SoapCharacter> .

  # Find the child of that parent who is also a fictional character and a soap character
  ?parent <http://dbpedia.org/ontology/birthChild> ?child .
  ?child a <http://dbpedia.org/ontology/FictionalCharacter> ;
         a <http://dbpedia.org/ontology/SoapCharacter> .
}
```",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/timezone#timezone> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sri_Lanka> .
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/property/relatedTo> ?entity .
  }
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?landmark WHERE {
  ?landmark a <http://dbpedia.org/ontology/Landmark> ;
            a <http://dbpedia.org/ontology/Settlement> ;
            <http://www.w3.org/2006/vcard/ns#hasAltitude> ""96.0""^^<http://www.w3.org/2001/XMLSchema#float> .
}
```",1,2,2,1,1,3,3,71,0,0,162,0,0.0,0
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?actor WHERE {
  ?claimToFame <http://dbpedia.org/ontology/claimToFame> <http://dbpedia.org/resource/Sean_Pertwee> .
  ?claimToFame a <http://dbpedia.org/class/yago/Film98Film>.
  ?claimToFame a <http://dbpedia.org/class/yago/MilitaryConflict108MilitaryConflicts>.
  
  OPTIONAL {
    ?claimToFame <http://dbpedia.org/ontology/starring> ?actor .
  }
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/member> ?member .
  ?member <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://purl.org/dc/terms/receiver> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Italy> .
}
```",1,1,2,1,1,2,3,28,170,1702,12922,0.09081196581196581,0.012985029025358998,0.0227211975407645
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Order_of_Suvorov> <http://dbpedia.org/ontology/recipient> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/member> ?result .
}
```

Note: The exact property (`member` in this case) might need adjustment based on the specific data available in DBpedia for Patricia McCoy.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://www.w3.org/2000/01/rdf-schema#subClassOf>* <http://dbpedia.org/ontology/EducationalOrganization> .
  ?entity <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Northern_Ireland> .
}
```",1,3,2,1,1,3,3,71,0,0,134,0,0.0,0
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?person ?birthDate WHERE {
  # Find cast members of the movie
  <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .
  ?film <http://dbpedia.org/ontology/castMember> ?person .

  # Ensure the person is an artist
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .

  # Retrieve birth information
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/birthDate> ?birthDate .
  }
}
```",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> .
}
```",1,1,2,1,1,2,2,9,4485,0,0,1.0,1.0,1.0
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/wikiPageWikiLink> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","```sparql
SELECT ?region WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?timeZone .
    ?timeZone <http://dbpedia.org/ontology/timeZoneRegion> ?region .
  }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Scott_McCloud> <http://purl.org/dc/terms/receivedAward> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Yuki_Hideyasu> <http://xmlns.com/foaf/0.1/father> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?author ?reference WHERE {
  <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://purl.org/dc/terms/creator> ?author .
  OPTIONAL { 
    ?author <http://www.w3.org/2002/07/owl#sameAs> ?reference .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Donald Maynard Dokken"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?person <http://dbpedia.org/property/associatedBandMember> ?bandMember .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
# Placeholder for when the specific award is identified.
SELECT ?awardee WHERE {
  <http://dbpedia.org/resource/Specific_Award_Name> <http://www.w3.org/ns/prov#wasAttributedTo> ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,113,0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/participatedIn> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,6,0,0,1.0,1.0,1.0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","```sparql
SELECT ?landmark ?elevation ?birthPlace WHERE {
  OPTIONAL { 
    ?landmark <http://dbpedia.org/ontology/elevation> ?elevation .
    FILTER (?elevation = ""50""^^<http://www.w3.org/2001/XMLSchema#float>)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,599,0,0.0016666666666666668,1.0,0.0033277870216306157
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Joseph Michael""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/ontology/castMember> ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?entity WHERE {
  # Step 1: Find Giorgio Grigolli's birthplace
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Find entities associated with the birthplace
  ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,13092,0,0.0,0
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  ?reference <http://purl.org/dc/terms/references> ?name .
  ?reference ?property ?result .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Napoleonic_Wars> <http://dbpedia.org/ontology/militaryUnit> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT DISTINCT ?region WHERE {
  # Step 1: Find the time zone for Aguilar de Segarra
  <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?timeZone .

  # Step 2: Find sports events in this time zone
  ?event <http://dbpedia.org/ontology/timeZone> ?timeZone ;
         a <http://dbpedia.org/ontology/SportsEvent> .

  # Step 3: Get the region of these sports events
  ?event <http://dbpedia.org/property/location> ?location .
  ?location <http://www.w3.org/2006/vcard/ns#region> ?region .
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist ?band WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/band> ?band .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?event .
  ?event <http://www.w3.org/2002/07/owl#sameAs> ?war .
}
```",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?person WHERE {
  # Find children of Thinkhaya of Pagan
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?person .
  
  # Find parents of Thado Minsaw of Prome
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Seleucus_II_Callinicus> .
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,3,71,4,1,1,0.8,0.8,0.8000000000000002
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^xsd:date .
  ?person a <http://dbpedia.org/ontology/Person> .
}
```",1,1,2,1,1,3,3,71,30,0,0,1.0,1.0,1.0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"```sparql
SELECT ?person WHERE {
  # Step 1: Get the founding year of Eel Pie Publishing
  <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?foundingYear .

  # Step 2: Find persons born in that year
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate .
  
  BIND(YEAR(?birthDate) AS ?birthYear)
  
  FILTER (?birthYear = ?foundingYear)
}
```",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/John_Pertwee> <http://dbpedia.org/ontology/child> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/event> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts1000Through3000Category> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvents1000Through3000Category> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> .
  BIND(?event AS ?war)
}
```",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?loeThaiParent ?mayHninThweDaParent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Loe_Thai> <http://www.w3.org/2006/vcard/ns#hasParent> ?loeThaiParent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://www.w3.org/2006/vcard/ns#hasParent> ?mayHninThweDaParent .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alterEgo> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/participatedIn> ?conflict .
  ?conflict <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflict108069068>.
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lac_d%27Avoriaz> <http://purl.org/dc/terms/awards> ?award .
  ?award <http://www.w3.org/ns/org#recipient> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Chile> .
  ?result rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,34,0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?settlementLabel .
  FILTER (CONTAINS(LCASE(?settlementLabel), ""italy""))
  ?residence a <http://dbpedia.org/class/yago/Settlements100000001> .
  ?person rdfs:label ""Sebastiano Bianchetti""@en .
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",2,2,3,1,2,3,3,71,4,3,0,0.5714285714285714,1.0,0.7272727272727273
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?entity WHERE {
  <http://dbpedia.org/resource/El_Valle_de_Antón> <http://www.w3.org/2006/vcard/ns#location> ?country .
  ?entity <http://www.w3.org/2006/vcard/ns#location> ?country .
  FILTER(?entity != <http://dbpedia.org/resource/El_Valle_de_Antón>)
}
```",2,3,3,2,1,2,3,28,0,0,991,0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> <http://www.w3.org/2002/07/owl#sameAs> ?entity .
  ?entity <http://dbpedia.org/ontology/predecessor> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Retrieve the birth date of Pavlo Khudzik
  BIND(<http://dbpedia.org/resource/Pavlo_Khudzik> AS ?pavloKhudzik)
  ?pavloKhudzik <http://dbpedia.org/ontology/birthDate> ?birthDate .

  # Find other persons with the same birth date
  ?person a <http://dbpedia.org/ontology/Person> .
  ?person <http://dbpedia.org/ontology/birthDate> ?sameBirthDate .
  
  FILTER(?birthDate = ?sameBirthDate)
}
```",2,2,3,2,1,3,3,71,30,0,0,1.0,1.0,1.0
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandChild WHERE {
  # Step 1: Find the parent(s) of Prince George William who are royalty
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Prince_George_William_of_Hanover> .
  ?parent a <http://dbpedia.org/ontology/Royalty> .

  # Step 2: Find the child(ren) of these parents who are royalty
  ?parent <http://dbpedia.org/ontology/child> ?grandChild .
  ?grandChild a <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",1,1,2,1,1,2,3,28,5399,0,0,1.0,1.0,1.0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/band> <http://dbpedia.org/resource/Solace_of_Requiem> .
  ?entity <http://www.w3.org/2002/07/owl#sameAs> ?band .
  ?band <http://dbpedia.org/ontology/band> ?result .
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Romano Prodi"" .
  ?person a <http://dbpedia.org/class/yago/OfficeHolder108930069> ;
          a <http://dbpedia.org/class/yago/Politician108930070> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result .
  ?result a <http://dbpedia.org/class/yago/Settlements100000007> .
}
```",1,2,2,1,1,2,3,28,0,0,2,0,0.0,0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?restingPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?child .
  }
  OPTIONAL {
    ?child <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
  }
}
```",2,2,3,2,1,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?parent WHERE {
  ?richeza <http://dbpedia.org/ontology/father> ?father .
  ?richeza <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> .
  
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .

  ?father <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?actor ?native WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/All_About_the_Andersons> <http://www.w3.org/2002/07/owl#sameAs> ?film .
    ?film <http://dbpedia.org/ontology/castMember> ?actor .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> .
    ?person <http://www.w3.org/2000/01/rdf-schema#label> ?native .
  }
}
```",2,2,3,1,2,3,3,71,0,94,1,0.0,0.0,0
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?redTideArtist ?saSlayerArtist WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?saSlayerArtist .
  }
}
```",2,2,3,1,2,3,3,71,1,9,0,0.1,1.0,0.18181818181818182
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?burialJamesBurton ?burialAlanCunningham WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?burialJamesBurton .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?burialAlanCunningham .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
SELECT ?party WHERE {
  ?party <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sicily> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/PoliticalParty108069068> .
  ?party <http://www.w3.org/2000/01/rdf-schema#isDefinedBy> <http://dbpedia.org/resource/Category:Political_parties_in_Sicily> .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068> .
  OPTIONAL {
    ?party <http://dbpedia.org/ontology/currentGovernmentMember> ?member .
  }
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Springfield,_Illinois> <http://dbpedia.org/ontology/residence> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?restingPlace ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  OPTIONAL {
    ?entity <http://www.geonames.org/ontology#location> ?location .
    FILTER(CONTAINS(LCASE(STR(?location)), ""nashville, tennessee""))
  }
}
```",2,2,3,1,2,2,3,28,0,1,1,0.0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Royal_Medal> <http://dbpedia.org/ontology/award> ?result .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/May_Hnin_Thwe-Da> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?awardee ?war WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ""Golden Weapon for Bravery""@en .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/participatedIn> ?war .
  }
}
```",2,2,3,2,1,3,2,20,0,0,22,0,0.0,0
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result .
}
```",1,1,2,1,1,2,2,9,4,0,0,1.0,1.0,1.0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> <http://dbpedia.org/ontology/awardee> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> ?location .
  FILTER (
    EXISTS { ?location rdfs:label ""Italy""@en }
    && EXISTS { ?location rdfs:subClassOf* <http://dbpedia.org/resource/Province_of_Bergamo> }
  )
}
```",2,2,3,1,2,2,2,9,0,0,228,0,0.0,0
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT DISTINCT ?person ?band WHERE {
  ?person <http://dbpedia.org/ontology/occupation> ?role .
  FILTER (
    EXISTS { ?person a <http://dbpedia.org/ontology/MusicalArtist> . }
    && EXISTS { ?person a <http://dbpedia.org/ontology/Artist> . }
    && (STR(?role) = ""Vocalist"" || STR(?role) = ""Musician"" || STR(?role) = ""Songwriter"")
  )
  OPTIONAL {
    ?person <http://dbpedia.org/property/band> ?band .
  }
}
```",2,4,3,2,1,2,2,9,0,0,2,0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
SELECT ?undertowMember ?sledgebackMember WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/member> ?undertowMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Sledgeback> <http://dbpedia.org/ontology/member> ?sledgebackMember .
  }
  FILTER(?undertowMember = ?sledgebackMember)
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
SELECT ?force WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?force .
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken"" .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"```sparql
SELECT ?timeZone ?region WHERE {
  <http://dbpedia.org/resource/Bombali_Shebora_County> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?timeZone .
  
  OPTIONAL {
    ?timeZone <http://dbpedia.org/ontology/timeZoneRegion> ?region .
  }
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> .
}
```",1,1,2,1,1,3,2,20,47,0,0,1.0,1.0,1.0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (
    (CONTAINS(LCASE(?profession), ""vocalist"") || 
     CONTAINS(LCASE(?profession), ""musician"") ||
     CONTAINS(LCASE(?profession), ""songwriter""))
  )
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
  ?person <http://dbpedia.org/ontology/occupation> ?occupation .
  FILTER(CONTAINS(LCASE(STR(?occupation)), ""commander"") && CONTAINS(LCASE(STR(?occupation)), ""spanish civil war""))
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/France> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
}
```",1,3,2,1,1,3,3,71,251,0,19,1.0,0.9296296296296296,0.963531669865643
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?burialJamesBurton ?burialSimonCadell WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/deathPlace> ?burialJamesBurton .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?burialSimonCadell .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?person WHERE {
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/awardee> <http://dbpedia.org/resource/Order_of_Suvorov> .
  }
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/commander> ?commandRole .
    ?commandRole <http://www.w3.org/2000/01/rdf-schema#label> ""Eastern Front (World War II)""@en .
  }
  FILTER(BOUND(?person))
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person ?birthDate WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> .
  ?person a <http://dbpedia.org/class/yago/SoccerPlayer108069068> ;
          a <http://dbpedia.org/class/yago/Athlete100000001> .
  ?person <http://www.w3.org/2006/vcard/ns#bday> ?birthDate .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?territory ?gmtRegion WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/administrativeCapital> <http://dbpedia.org/resource/Reykjavík> .
    ?entity <http://www.w3.org/2004/02/skos/core#prefLabel> ?territory .
  }
  OPTIONAL {
    ?region <http://dbpedia.org/ontology/timeZone> ""GMT"" .
    ?region <http://www.w3.org/2004/02/skos/core#prefLabel> ?gmtRegion .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> <http://dbpedia.org/ontology/predecessor> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Japan_Standard_Time> <http://dbpedia.org/ontology/timeZoneRegion> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?song ?writer WHERE {
  ?song <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Amba_Shepherd> .
  ?song a <http://dbpedia.org/ontology/Song> .
  OPTIONAL { 
    ?song <http://purl.org/dc/terms/creator> ?writer .
  }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
SELECT ?otherProfessional WHERE {
  # Find Édouard Alphonse James de Rothschild's profession
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://purl.org/dc/terms/subject> ?profession .

  # Find other professionals with the same occupation
  ?otherProfessional <http://purl.org/dc/terms/subject> ?profession .
  
  FILTER(?otherProfessional != <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild>)
}
```",2,2,3,2,1,2,2,9,0,8557,1,0.0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Guns_N%27_Roses> <http://dbpedia.org/ontology/member> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,55,0,0.0,0
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?grandchild <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  
  FILTER EXISTS { 
    <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786–1859)> <http://dbpedia.org/ontology/child> ?child .
  }
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/participatedIn> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
SELECT ?person WHERE {
  # Retrieve the birth name of Phil Scott
  <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/birthName> ?birthName .

  # Find soccer players with that birth name
  ?person <http://dbpedia.org/ontology/birthName> ?birthName .
  ?person <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Category:Soccer_players> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Panama> .
}
```",1,1,2,1,1,2,3,28,3,79,988,0.036585365853658534,0.0030272452068617556,0.0055917986952469705
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Algeria> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlement108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""'Sirikit'""@en .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?timeZone .
  BIND(?timeZone AS ?result)
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?nativePlace WHERE {
  ?sylvie <http://dbpedia.org/ontology/residence> ?residence .
  ?residence rdf:type <http://dbpedia.org/class/yago/Settlement108069068> .
  ?residence <http://www.w3.org/2006/vcard/ns#country-name> ""United Kingdom"" .
  ?residence <http://dbpedia.org/ontology/nativePlace> ?nativePlace .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/participatedIn> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
SELECT DISTINCT ?father WHERE {
  # Step 1: Identify Charles Augustus and his children
  <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?child .

  # Step 2: Filter children who are royalty
  ?child a <http://dbpedia.org/ontology/Royalty> .

  # Step 3: Retrieve the father of these royal children
  ?child <http://dbpedia.org/ontology/father> ?father .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Vladimir_Cerr%C3%B3n> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/John_Pettibone> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,2,2,9,1,5,0,0.16666666666666666,1.0,0.2857142857142857
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?father WHERE {
  ?battle <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Perire> .
  ?person <http://dbpedia.org/ontology/commander> ?battle ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?person <http://xmlns.com/foaf/0.1/familyName> ?familyName . # Optional: to ensure we're dealing with a person
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?royalPerson .
  ?royalPerson <http://dbpedia.org/ontology/father> ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?manager WHERE {
  # Query for manager of 2013 Júbilo Iwata season
  <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?manager .

  # Ensure the manager is native to Japan
  ?manager <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER (strstarts(str(?birthPlace), ""Japan""))
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?actor ?child WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Dog_Soldiers> <http://dbpedia.org/ontology/starring> ?actor .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?child .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Seleucus_II_Callinicus> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
SELECT ?awardee WHERE {
  ?medal <http://dbpedia.org/ontology/recipient> ?awardee .
  FILTER(CONTAINS(LCASE(STR(?medal)), ""distinguished service medal (u.s. army)""))
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108930068> .
}
```",1,2,2,1,1,2,3,28,0,0,11,0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT DISTINCT ?show ?actor WHERE {
  # Identify Emily Richards and find shows she is part of
  <http://dbpedia.org/resource/Emily_Richards> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?show <http://dbpedia.org/property/castMember> <http://dbpedia.org/resource/Emily_Richards> .

  # Retrieve all actors for those shows
  ?show <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TvSeries> .
  ?show <http://dbpedia.org/property/castMember> ?actor .
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/war> ?result .
  ?result a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
          a <http://dbpedia.org/class/yago/QEvent104>.
}
```",1,3,2,1,1,3,3,71,0,0,19,0,0.0,0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/participatedIn> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
SELECT ?child ?predecessor WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?child .
  ?child a <http://dbpedia.org/ontology/OfficeHolder> ;
         a <http://dbpedia.org/ontology/Royalty> .
  OPTIONAL { 
    ?child <http://dbpedia.org/ontology/predecessor> ?predecessor .
  }
}
```",2,4,3,2,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?father WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { 
    ?child <http://dbpedia.org/property/father> ?father .
  }
}
```",2,2,3,2,1,3,2,20,1,3,0,0.25,1.0,0.4
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"```sparql
SELECT ?organisation ?territory ?mayor WHERE {
  ?organisation <http://www.w3.org/2000/01/rdf-schema#label> ""Warsaw""@en .
  ?organisation a <http://dbpedia.org/ontology/Organisation> .
  ?organisation <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Warsaw""@en .

  ?organisation <http://dbpedia.org/property/administers> ?territory .
  
  ?territory <http://dbpedia.org/ontology/mayor> ?mayor .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/ontology/occupation> ?result .
}
```",1,1,2,1,1,2,2,9,1,1,1,0.5,0.5,0.5
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  ?region a <http://dbpedia.org/ontology/Country> .
  BIND(?region AS ?country)
}
```",2,3,3,2,1,3,2,20,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?child ?birthPlace WHERE {
  # Find children of Desmond FitzGerald who are politicians and office holders
  <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?child .
  
  # Ensure the child is both a politician and an office holder
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .

  # Retrieve the birthplace of such a child
  ?child <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,4,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,2,20,0,4,5,0.0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/East_of_England#Essex> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108930069> .
}
```",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?event WHERE {
  <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/commanderInForce> ?command .
  ?command <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event a <http://dbpedia.org/ontology/Event> .
}
```",2,3,3,2,1,3,3,71,0,0,85,0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to incomplete question.
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sergei_Makovetsky> <http://purl.org/dc/terms/subject> ?result .
}
```",1,1,2,1,1,2,3,28,0,12,1,0.0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?father WHERE {
  ?princess <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Victoria_Louise_of_Prussia> .
  ?spouse <http://dbpedia.org/property/father> ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entityInUK ?birthPlace WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
    ?entity rdfs:label ?entityInUK .
    FILTER(LANG(?entityInUK) = ""en"")
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,2,3,28,1,2700,0,0.00037023324694557573,1.0,0.0007401924500370097
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sylvie_Bermann> <http://xmlns.com/foaf/0.1/residence> ?residence .
  ?residence <http://www.w3.org/2002/07/owl#sameAs> ?settlement .
  ?settlement a <http://dbpedia.org/class/yago/Settlements100000001> .
  OPTIONAL { 
    ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
  }
}
```",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Italy> .
}
```",1,1,2,1,1,2,2,9,170,1702,12922,0.09081196581196581,0.012985029025358998,0.0227211975407645
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
SELECT ?entity ?nickname WHERE {
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> .
  ?entity <http://www.w3.org/2000/01/rdf-schema#subClassOf*> <http://dbpedia.org/ontology/EducationalOrganization> .
  ?entity <http://dbpedia.org/property/location> ?location .
  ?location <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> .
  OPTIONAL { ?entity <http://dbpedia.org/property/nickname> ?nickname . }
}
```",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result ?birthName WHERE {
  ?person <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> .
  ?person <http://xmlns.com/foaf/0.1/name> ?result .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/birthName> ?birthName .
  }
}
```",2,2,3,2,1,3,3,71,72,436,18,0.14173228346456693,0.8,0.2408026755852843
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
SELECT ?country ?administration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?country .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Andrew_Johnson> <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Manfred_Mann> <http://dbpedia.org/ontology/reference> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott"" .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerPlayers> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?member .
  OPTIONAL { 
    ?member <http://www.w3.org/2002/07/owl#sameAs> ?bandResource .
    ?bandResource <http://purl.org/dc/terms/type> ?type .
    FILTER (
      (?type = <http://dbpedia.org/class/yago/MusicalGroup108069068>
       || ?type = <http://dbpedia.org/class/yago/Group108069068>
       || ?type = <http://dbpedia.org/class/yago/Organisation108069068>)
    )
  }
}
```",1,4,2,1,1,3,3,71,0,0,6,0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/2000/01/rdf-schema#label> ""Romano Antonio Prodi""@en .
  ?person <http://dbpedia.org/ontology/birthName> ""Romano Antonio Prodi"" .
  ?person a <http://dbpedia.org/ontology/OfficeHolder> ;
          a <http://dbpedia.org/ontology/Politician> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT DISTINCT ?band WHERE {
  <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://purl.org/dc/terms/creator> ?writer .
  ?writer <http://dbpedia.org/ontology/associatedBand> ?band .
}
```",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
SELECT ?commander ?force WHERE {
  <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/force> ?force .
}
```",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
SELECT ?grandparent WHERE {
  ?parent <http://dbpedia.org/ontology/birthName> ""May Hnin Htapi"" .
  ?parent <http://www.w3.org/2006/vcard/ns#hasParent> ?grandparent .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Person100000001> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedBand> ?result .
  ?result <http://www.w3.org/2002/07/owl#sameAs> ?group .
}
```",1,2,2,1,1,3,2,20,6,0,2,1.0,0.75,0.8571428571428571
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
SELECT ?force ?commander WHERE {
  <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/commanded> ?force .
  OPTIONAL { 
    ?force <http://dbpedia.org/property/commander> ?commander .
  }
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"```sparql
SELECT ?rulingParty ?administration WHERE {
  ?location <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
  FILTER(STRSTARTS(STR(?location), ""http://dbpedia.org/resource/Sremski_Karlovci""))
  
  ?rulingParty a <http://dbpedia.org/ontology/PoliticalParty> .
  OPTIONAL { 
    ?rulingParty <http://dbpedia.org/property/administration> ?administration .
  }
}
```",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/ontology/mayor> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?result .
  OPTIONAL { 
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  }
  OPTIONAL {
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  }
  FILTER (BOUND(?result))
}
```",2,4,3,2,1,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","```sparql
SELECT ?person ?team WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?player .
  ?player <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Soccer_players> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?manager .
  ?manager <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Category:Soccer_managers> .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/team> ?team .
  }
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Forza_Italia_(2013)> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://dbpedia.org/property/administration> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/Return_to_Nuke_%27Em_High_Volume_1> <http://dbpedia.org/ontology/castMember> ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,19,0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result .
}
```",2,2,3,2,1,3,2,20,0,3,1,0.0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsManager108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
}
```",1,1,2,1,1,2,3,28,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/team> ?team .
  ?team <http://dbpedia.org/property/manager> ?result .
}
```",2,2,3,2,1,3,3,71,0,1,10,0.0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?spouse .
    ?spouse <http://dbpedia.org/ontology/child> ?child .
  }
}
```",2,2,3,2,1,3,3,71,6,0,0,1.0,1.0,1.0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/administrativeOffice> ?office .
  ?office <http://www.w3.org/ns/org#hasPost> ?post .
  ?post <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Serbia> .
  ?result <http://www.w3.org/2004/02/skos/core#broader> ?office .
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Narciso Campero"" .
  ?person rdfs:label ?result .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  UNION
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?battleLocation WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/property/location> ?battleLocation .
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?malevolentCreationBand ?willRahmerBand WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/member> ?member .
    ?member <http://dbpedia.org/ontology/currentMemberOf> ?malevolentCreationBand .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/member> ?willRahmerMember .
    ?willRahmerMember <http://dbpedia.org/ontology/currentMemberOf> ?willRahmerBand .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?war WHERE {
  <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?commander .
  
  ?commander <http://dbpedia.org/property/war> ?war .
  ?war a <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
       a <http://dbpedia.org/class/yago/Event108069068> .
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Czech_Pirate_Party> <http://dbpedia.org/ontology/administration> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/participatedIn> ?result .
  FILTER (STRSTARTS(STR(?result), ""http://dbpedia.org/resource/War_of_""))
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Patricia_McCoy> <http://dbpedia.org/ontology/administers> ?adminEntity .
  ?adminEntity <http://dbpedia.org/property/country> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?donDokkenMember ?redTideArtist WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/associatedBandMember> ?donDokkenMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?redTideArtist .
  }
}
```",2,2,3,1,2,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?leader WHERE {
  <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/ontology/leader> ?leader .
  ?party <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/PoliticalParty108069068> ;
         <http://dbpedia.org/property/leader> ?leader .
  ?organisation <http://www.w3.org/2000/01/rdf-schema#isMemberOf> ?party ;
                 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068> .
}
```",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> <http://dbpedia.org/ontology/militaryUnit> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace ?administration WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Czech_Pirate_Party> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?administration .
  }
}
```",2,2,3,1,2,2,2,9,1,1,0,0.5,1.0,0.6666666666666666
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://www.geonames.org/ontology#capital> ?capital .
  ?capital <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlements100000>.
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?commander ?militaryForce WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?commander .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/property/militaryForce> ?militaryForce .
  }
}
```",2,2,3,1,2,3,3,71,3,2,0,0.6,1.0,0.7499999999999999
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  # Identify Meshuggah and its band members
  <http://dbpedia.org/resource/Meshuggah> <http://dbpedia.org/ontology/member> ?bandMember .
  
  # Ensure the band member is also a band, group, or organization
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  FILTER (
    ?type = <http://dbpedia.org/class/yago/MusicalGroup108069068>
    || ?type = <http://dbpedia.org/class/yago/Band105951>
    || ?type = <http://dbpedia.org/ontology/Organisation>
  )
  
  # Retrieve associated musical artists of the band member
  ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Financiers> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Businesspeople> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Vineyard_owners> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Art_collectors> .
  ?person <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Category:Horse_breeders_and_trainers> .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Partito_Popolare_Italiano> <http://dbpedia.org/ontology/reference> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(1914)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT DISTINCT ?war ?commander WHERE {
  # Find wars or military conflicts involving the regiment
  ?event <http://dbpedia.org/ontology/participant> <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> .
  
  # Ensure the event is both a War and a MilitaryConflict
  ?event rdf:type <http://dbpedia.org/class/yago/War108069068> ;
         rdf:type <http://dbpedia.org/ontology/MilitaryConflict> .

  # Retrieve commanders of these wars or military conflicts
  ?war rdfs:label ?eventLabel .
  FILTER (lang(?eventLabel) = 'en')
  
  OPTIONAL {
    ?war <http://dbpedia.org/property/commander> ?commander .
  }
}
```",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,2,2,9,8,0,0,1.0,1.0,1.0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?person ?award WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> .
  OPTIONAL { 
    ?person <http://purl.org/dc/terms/references> ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,47,14,0.0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?manager ?member WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/coach> ?manager .
  }
  OPTIONAL {
    ?person <http://www.w3.org/ns/org#memberOf> <http://dbpedia.org/resource/University_of_Tsukuba> ;
            a <http://xmlns.com/foaf/0.1/Person> .
    BIND(?person AS ?member)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?associatedMusicalArtist WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?person a <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/ontology/associatedBand> ?associatedMusicalArtist .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?player ?birthPlace WHERE {
  ?player <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> .
  ?player <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,171,0,0.0,0
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarter ?birthPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Royal_Dublin_Society> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?headquarter .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,2,20,15,0,0,1.0,1.0,1.0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?rulingParty WHERE {
  ?location <http://dbpedia.org/ontology/postalCode> ""21205"" .
  ?location <http://dbpedia.org/ontology/rulingParty> ?rulingParty .
  ?rulingParty a <http://dbpedia.org/class/yago/PoliticalParty108069068> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result .
}
```",2,2,3,2,1,3,3,71,0,2,4,0.0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Indonesia> .
}
```",1,1,2,1,1,3,2,20,71,787,2878,0.08275058275058275,0.024075957951848085,0.03729971105857631
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
  }
  FILTER EXISTS {
    ?writer <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?war WHERE {
  <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/participatedIn> ?war .
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
       rdf:type <http://dbpedia.org/class/yago/Event108069068> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/South_Russia_(1919%E2%80%931920)> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
SELECT ?timeZone ?sportsEvent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?timeZone .
  }
  OPTIONAL {
    ?sportsEvent <http://dbpedia.org/ontology/timeZone> ?timeZone .
  }
}
```",1,2,2,1,1,2,3,28,1,308795,0,3.238383916890115e-06,1.0,6.4767468595873665e-06
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse ?child WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?spouse .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
  }
}
```",2,2,3,1,2,3,3,71,3,4,0,0.42857142857142855,1.0,0.6
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,37,0,0,1.0,1.0,1.0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> <http://dbpedia.org/ontology/awardee> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,558,0,0.0,0
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Takashi_Sekizuka> <http://dbpedia.org/ontology/member> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Žika_Jelić> <http://dbpedia.org/ontology/memberOf> ?result .
  ?result a <http://dbpedia.org/class/yago/Band115069068> ; # Band class in YAGO ontology
          a <http://dbpedia.org/class/yago/MusicalGroup115069068> . # Musical group class in YAGO ontology
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/participatedIn> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/honoree> ?awardee .
  FILTER(CONTAINS(LCASE(STR(?award)), ""knight grand cross of the order of st michael and st george""))
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Western_European_Time> <http://www.w3.org/2006/vcard/ns#adrRegion> ?region .
  ?region <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108069365> .
  BIND(?region AS ?result)
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> .
  ?result <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Chroot> .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/ontology/father> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/ontology/leader> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> <http://dbpedia.org/ontology/awardee> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?claimToFame WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (?profession IN (<http://dbpedia.org/resource/Actor>, <http://dbpedia.org/resource/Narrator>, <http://dbpedia.org/resource/Producer>)).
  
  OPTIONAL { 
    ?claimToFame <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Film> .
  }
  OPTIONAL {
    ?claimToFame <http://www.w3.org/2004/02/skos/core#broader> <http://dbpedia.org/resource/Military_conflict> .
  }

  FILTER (count(?profession) = 3)
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?person a <http://dbpedia.org/class/yago/Professional108930069> ;
          a <http://dbpedia.org/class/yago/OfficeHolder115407365> ;
          a <http://dbpedia.org/class/yago/Politician108930070> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Shèna"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Priscilla Opoku-Kwarteng"" .
  ?person a <http://dbpedia.org/ontology/MusicalArtist> ;
          a <http://dbpedia.org/ontology/Artist> .
  ?person <http://dbpedia.org/property/memberOf> ?band .
  ?band <http://dbpedia.org/ontology/member> ?bandMember .
}
```",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?joaquinBlakeWar ?carlPontusGahnWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/war> ?joaquinBlakeWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?carlPontusGahnWar .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"```sparql
SELECT DISTINCT ?actor WHERE {
  ?work <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Michael_Ballhaus> .
  ?work <http://dbpedia.org/ontology/castMember> ?actor .
}
```",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT DISTINCT ?child WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Essex> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  
  ?person <http://dbpedia.org/property/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
}
```",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?country WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  ?region a <http://dbpedia.org/ontology/Country> .
  BIND(?region AS ?country)
}
```",2,3,3,2,1,2,3,28,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result .
}
```",2,3,3,2,1,3,3,71,37,0,0,1.0,1.0,1.0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Reykjavik> <http://dbpedia.org/ontology/administers> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"```sparql
SELECT ?party ?administration WHERE {
  ?party <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  ?party a <http://dbpedia.org/ontology/PoliticalParty> ;
         a <http://dbpedia.org/ontology/Organisation> .
  ?party <http://dbpedia.org/property/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Sicily"" .
  OPTIONAL { 
    ?party <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,2,3,28,0,1,1,0.0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Don_Dokken> <http://dbpedia.org/ontology/memberOf> ?band .
    ?band <http://dbpedia.org/ontology/member> ?bandMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/property/associatedMusicalArtist> ?artist .
    ?artist <http://www.w3.org/2002/07/owl#sameAs> ?associatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?orozimboWar ?ireneWar WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/war> ?orozimboWar .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?ireneWar .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Don Dokken"" .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist> .
  ?result <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT ?movie WHERE {
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Movies100000000> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Works100000000> .
  ?movie <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/TelevisionShows100000000> .
  ?movie <http://dbpedia.org/ontology/castMember> <http://dbpedia.org/resource/Roz_Ryan> .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"```sparql
SELECT ?settlement WHERE {
  ?marion <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  FILTER(?marion = <http://dbpedia.org/resource/Marion_James>)
  
  ?settlement <http://www.w3.org/ns/prov#wasDerivedFrom> ?birthPlace ;
              a <http://dbpedia.org/ontology/Settlement> .
}
```",2,3,3,2,1,2,3,28,0,0,340,0,0.0,0
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?bandOfJosephMichael ?nevermoreMember WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/ontology/associatedBand> ?bandOfJosephMichael .
  }
  OPTIONAL {
    ?member <http://dbpedia.org/ontology/memberOf> <http://dbpedia.org/resource/Nevermore_(band)> .
    ?member <http://www.w3.org/2000/01/rdf-schema#label> ?nevermoreMember .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/region> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT DISTINCT ?awardee ?war WHERE {
  ?awardee <http://dbpedia.org/property/knightGrandCrossOfTheOrderOfTheBath> ""true"" .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/participatedInWar> ?war .
  }
}
```",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT DISTINCT ?alumnus ?father WHERE {
  ?alumnus <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
  OPTIONAL { 
    ?alumnus <http://dbpedia.org/property/father> ?father .
  }
}
```",2,2,3,2,1,3,3,71,12,1559,0,0.0076384468491406746,1.0,0.015161086544535692
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,4,2,1,0.6666666666666666,0.8,0.7272727272727272
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
SELECT ?event WHERE {
  <http://dbpedia.org/resource/Emilio_Mola> <http://dbpedia.org/ontology/involvedIn> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Event_1234567890> . # Replace with the correct class for ""force"" if available
}
```

Note: The exact RDF type or property to filter events as a ""force"" may need adjustment based on DBpedia's schema and available data. If there is no direct classification, additional context or properties might be needed.",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/YU_Grupa> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Group100000001> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation100000001> .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Antiochus_II_Theos> <http://www.w3.org/2002/07/owl#sameAs> ?antiochus .
  ?antiochus <http://dbpedia.org/ontology/successor> ?successor .
  ?successor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  BIND(?successor AS ?result)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?birthPlace WHERE {
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?birthPlace <http://www.w3.org/2006/vcard/ns#location> ?location .
  ?location <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/ontology/name> ""England"" .
  ?birthPlace <http://www.w3.org/2004/02/skos/core#prefLabel> ?label .
  FILTER(CONTAINS(LCASE(?label), ""settlement""))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedBand> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup108069068> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sait%C5%8D_Hajime> <http://www.w3.org/2004/02/skos/core#related> ?event .
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryConflicts1000Through3000Category> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event> ;
         <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SocietalEvents1000Through3000Category> .
}
```",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?author ?work WHERE {
  # Step 1: Find the author of Iceland
  <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?author .
  
  # Step 2: Retrieve works by this author
  ?author <http://purl.org/dc/terms/creator> ?work .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace WHERE {
  ?person <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> .
  ?person a <http://dbpedia.org/class/yago/Politician108069068> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?event ?militaryForce WHERE {
  ?event a <http://dbpedia.org/ontology/SocietalEvent> ;
         <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/location> <http://dbpedia.org/resource/Chile> .
  
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
}
```",2,3,3,2,1,3,3,71,0,0,91,0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/France> .
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,3,2,20,0,2255,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/National_University_of_San_Marcos> <http://dbpedia.org/ontology/alumni> ?result .
}
```",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Philip Brian Scott"" .
  ?person a <http://dbpedia.org/class/yago/SoccerPlayers100000001> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Person1000Year> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/administration> ?result .
  }
}
```",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?child ?birthName WHERE {
  <http://dbpedia.org/resource/Nakkhatra_Mangala> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  OPTIONAL { 
    ?child <http://dbpedia.org/property/birthName> ?birthName .
  }
}
```",2,3,3,2,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/contributor> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?andreottiParty ?prodiParty WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/politicalParty> ?andreottiParty .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/politicalParty> ?prodiParty .
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Mlada_(abbess)> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Blinded_by_the_Light_(song)> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?rifWarForce ?spanishCivilWarForce WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?rifWarForce .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/militaryForce> ?spanishCivilWarForce .
  }
}
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
# No valid SPARQL query can be constructed due to lack of specific input.
```",1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović"" .
  ?person <http://dbpedia.org/ontology/nativeCountry> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/description> ?location .
    FILTER(CONTAINS(LCASE(?location), ""japan""))
  }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
SELECT ?profession WHERE {
  <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/ontology/occupation> ?profession .
  ?profession a <http://dbpedia.org/class/yago/MilitaryUnit108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?reference ?writer WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Manfred_Mann> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?reference .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/The_Roaring_Silence> <http://purl.org/dc/terms/creator> ?writer .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/ontology/positionHeld> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?gezaParent ?ilonaParent WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://www.w3.org/2002/07/owl#sameAs> ?person .
    ?person <http://dbpedia.org/ontology/birthName> ?gezaParent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://www.w3.org/2002/07/owl#sameAs> ?archduchess .
    ?archduchess <http://dbpedia.org/ontology/birthName> ?ilonaParent .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,1,1.0,0.6666666666666666,0.8
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Watchtower_(band)> .
  ?artist <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",2,2,3,2,1,3,3,71,15,7,1,0.6818181818181818,0.9375,0.7894736842105263
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Jon Pertwee"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
  OPTIONAL { 
    ?person <http://dbpedia.org/property/awardNumber> ""30""^^xsd:integer .
  }
}
```",2,2,3,1,2,2,3,28,0,1346,1,0.0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/The_Blasters> .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Richeza_of_Poland> ?property ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Luke Francis Vibert"" .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Person108070069> .
  ?result <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/MusicalArtist115067465> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
SELECT ?result WHERE {
  ?green <http://dbpedia.org/ontology/administrativeUnit> ?result .
  ?result a <http://dbpedia.org/class/yago/Settlement108069068> .
}
```

Note: The class URI `<http://dbpedia.org/class/yago/Settlement108069068>` is used as an example for settlements. Depending on the specific DBpedia version, this might need adjustment to match the correct settlement class.",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
SELECT ?force WHERE {
  ?award <http://dbpedia.org/ontology/year> ""1778"" .
  ?award <http://www.w3.org/2000/01/rdf-schema#label> ?awardLabel .
  FILTER regex(?awardLabel, ""^.*1778.*$"", ""i"") # Ensures the label includes '1778'
  ?award <http://dbpedia.org/ontology/force> ?force .
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
}
```",1,1,2,1,1,2,3,28,1000,0,0,1.0,1.0,1.0
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mlada_(abbess)> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?resource .
  ?resource <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
SELECT ?event WHERE {
  ?event <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> [
    a <http://dbpedia.org/class/yago/SocietalEvent108069834>;
    a <http://dbpedia.org/ontology/Event>;
    a <http://dbpedia.org/class/yago/MilitaryConflict108069834>
  ].
  ?event <http://dbpedia.org/property/reference> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck>.
}
```",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/nickname> ""'Stolz_von_Liechtenstein'""@en .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
SELECT ?result WHERE {
  ?v0 <http://dbpedia.org/ontology/band> ?result .
  ?v0 <http://www.w3.org/2004/02/skos/core#altLabel> ""Newsted"" .
}
```",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?spouse .
  OPTIONAL { 
    ?spouse <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Meritamen> .
  }
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
SELECT ?entity ?reference WHERE {
  ?entity <http://dbpedia.org/ontology/locatedInRegion> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
  OPTIONAL { 
    ?entity <http://www.w3.org/2002/07/owl#sameAs> ?reference .
  }
}
```",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Undertow_(band)> <http://dbpedia.org/ontology/member> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"```sparql
SELECT ?father WHERE {
  ?child <http://dbpedia.org/ontology/father> ?father .
  <http://dbpedia.org/resource/Phillip_Spaulding> <http://dbpedia.org/ontology/child> ?child .
  ?child a <http://dbpedia.org/ontology/FictionalCharacter> ;
         a <http://dbpedia.org/ontology/SoapCharacter> .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Ebony Reigns"" .
  ?person a <http://dbpedia.org/ontology/Artist> .
  ?person a <http://dbpedia.org/ontology/MusicalArtist> .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_I_of_Russia> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Camden_Expedition> <http://dbpedia.org/ontology/participant> ?participant .
  ?participant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MilitaryForce108069> ;
               <http://www.w3.org/2000/01/rdf-schema#label> ?result .
}
```",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?parent ?spouse WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?parent .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Aristotle_Onassis> <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",2,2,3,1,2,3,2,20,1,6,0,0.14285714285714285,1.0,0.25
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?child ?almaMater WHERE {
  <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/almaMater> ?almaMater .
}
```",2,2,3,2,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,3,71,9,0,0,1.0,1.0,1.0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?child WHERE {
  ?successor <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Antiochus_II_Theos> .
  ?successor a <http://dbpedia.org/ontology/Royalty> .
  ?successor <http://dbpedia.org/ontology/child> ?child .
  ?child a <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,3,71,0,2,2,0.0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> <http://dbpedia.org/ontology/child> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/ontology/award> ?result .
}
```",2,2,3,2,1,3,2,20,0,4,292,0.0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?awardee WHERE {
  ?prize <http://dbpedia.org/ontology/category> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
  ?prize <http://dbpedia.org/property/recipient> ?awardee .
  ?awardee <http://www.w3.org/2000/01/rdf-schema#label> ?name .
  FILTER(CONTAINS(LCASE(?name), ""american""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/50_Cent> <http://purl.org/dc/terms/creator> ?result .
  ?result a <http://dbpedia.org/class/yago/MusicalWorksBy50Cent1000000010> ;
          a <http://dbpedia.org/class/yago/SongsBy50Cent1000000011> ;
          a <http://dbpedia.org/ontology/Work> .
}
```",1,4,2,1,1,3,3,71,0,0,58,0,0.0,0
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT DISTINCT ?war ?commander WHERE {
  <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/participatedIn> ?war .
  ?war rdf:type <http://dbpedia.org/class/yago/MilitaryConflict108069068> ;
       rdf:type <http://www.w3.org/2002/07/owl#Thing> ; # Ensures it's an event
       rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  ?war <http://dbpedia.org/ontology/commander> ?commander .
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
SELECT ?person ?birthPlace WHERE {
  ?person a <http://dbpedia.org/ontology/BeautyQueen> .
  ?person <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,3,3,2,1,3,2,20,170,4347,0,0.037635598848793445,1.0,0.0725410710475784
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?person ?restingPlace WHERE {
  ?person <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
  }
}
```",2,2,3,2,1,3,3,71,28,64,0,0.30434782608695654,1.0,0.4666666666666667
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?country WHERE {
  ?region <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> .
  ?region a <http://dbpedia.org/ontology/Country> .
  BIND(?region AS ?country)
}
```",2,3,3,2,1,2,2,9,29,65,173232,0.30851063829787234,0.00016737754024275515,0.00033457356292001964
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
SELECT ?threeLions ?player WHERE {
  OPTIONAL {
    ?team <http://dbpedia.org/property/nickname> ""The Three Lions"" .
    ?team rdfs:label ?threeLions .
  }
  OPTIONAL {
    ?manager foaf:name ""Steve Bruce"" ;
             dbo:managedTeam ?team .
    ?team dbo:player ?player .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?bandMember ?band WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Guns_N%27_Roses> <http://dbpedia.org/ontology/member> ?bandMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jason_Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,26,0,0,1.0,1.0,1.0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?parent ?child WHERE {
  # Find the parents of Princess Olga
  <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/parent> ?parent .
  
  # For each parent, find their children
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,3,2,0,0.6,1.0,0.7499999999999999
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  BIND(?person AS ?result)
}
```",1,2,2,1,1,3,3,71,0,0,23,0,0.0,0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,5,0,0,1.0,1.0,1.0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","```sparql
SELECT ?territory WHERE {
  ?settlement <http://www.w3.org/2000/01/rdf-schema#label> ""Land of fire and ice""@en .
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland> .
  ?settlement <http://dbpedia.org/ontology/type> ?type .
  FILTER(?type IN (<http://dbpedia.org/class/yago/Settlement108069068>, <http://dbpedia.org/class/yago/Town108069068>)).
  
  OPTIONAL {
    <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/administers> ?territory .
  }
}
```",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Narapati_I_of_Ava> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/player> ?player .
  ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  ?player <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type3 .
  
  FILTER (?type1 = <http://dbpedia.org/class/yago/SportsClub108069068>)
  FILTER (?type2 = <http://dbpedia.org/ontology/Organisation>)
  FILTER (?type3 = <http://dbpedia.org/class/yago/SoccerClubs1000000010>)
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/2002/07/owl#sameAs> ?event .
  ?event <http://dbpedia.org/ontology/type> ?eventType .
  FILTER (?eventType = <http://dbpedia.org/resource/Category:Societal_events>)
}
```",1,3,2,1,1,2,3,28,0,0,2,0,0.0,0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,2,2,9,1,0,0,1.0,1.0,1.0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,7,0,0,1.0,1.0,1.0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?result WHERE {
  ?work <http://dbpedia.org/ontology/starring> ?result .
  ?work rdfs:label ""Honor Up""@en .
  FILTER (lang(?work) = 'en')
  
  OPTIONAL { 
    ?result <http://www.w3.org/2002/07/owl#sameAs> ?musicalArtist .
    ?musicalArtist <http://dbpedia.org/ontology/musicalArtist> ?artist .
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thihapate_of_Mohnyin> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,3,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?event ?force WHERE {
  ?event <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Francoist_Spain> .
  ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
         a <http://dbpedia.org/class/yago/Event108069067> ;
         a <http://dbpedia.org/class/yago/MilitaryConflict108069066> .
  
  OPTIONAL {
    ?decedent <http://dbpedia.org/ontology/deathPlace> ?event .
    ?decedent <http://dbpedia.org/ontology/causedByAgent> ?force .
  }
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Mark_Briggs> <http://dbpedia.org/ontology/member> ?result .
}
```

Note: If `member` does not yield results, you might need to try other properties like `<http://dbpedia.org/property/team>` depending on the data available in DBpedia.",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/postalCode> ""21205"" .
  ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/player> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/ontology/occupation> ?result .
}
```",1,1,2,1,1,2,2,9,0,2,1,0.0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/George_Kilbon_Nash> <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?member ?bandMember WHERE {
  # Find members of the San Francisco Symphony
  ?symphonyMember <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/San_Francisco_Symphony> .
  
  # For each member, find their band memberships
  ?symphonyMember <http://dbpedia.org/ontology/member> ?bandMember .
}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/ontology/award> ?result .
}
```",1,1,2,1,1,3,2,20,0,3,2,0.0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?event ?commander WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/ontology/event> ?event .
    ?event rdf:type <http://dbpedia.org/class/yago/SocietalEvent108069068> .
  }
  OPTIONAL {
    ?event <http://dbpedia.org/property/commander> ?commander .
  }
}
```",2,4,3,2,1,2,3,28,16,77782,12,0.00020566081390267101,0.5714285714285714,0.00041117364376943433
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT DISTINCT ?profession WHERE {
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  ?person <http://dbpedia.org/ontology/politician> [] .
  ?office <http://dbpedia.org/ontology/department> <http://dbpedia.org/resource/New_Zealand_Army> .
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  ?profession <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/MilitaryUnit100000001> .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to incomplete question.
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067> .
  BIND(?residence AS ?result)
}
```",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
SELECT DISTINCT ?bandMember WHERE {
  ?person <http://dbpedia.org/ontology/award> ?award .
  ?person <http://dbpedia.org/ontology/associatedMusicalArtist> ?bandMember .
}
```

This query will return distinct band members of individuals who have received awards or nominations.",2,2,3,2,1,2,3,28,0,0,582,0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> .
}
```",1,1,2,1,1,3,3,71,8939,0,0,1.0,1.0,1.0
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://www.w3.org/2000/01/rdf-schema#label> ?result .
}
```",1,1,2,1,1,3,3,71,0,1,1,0.0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
# Unable to construct a meaningful query without additional context.
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
SELECT DISTINCT ?war WHERE {
  ?polishHorse <http://dbpedia.org/ontology/nickName> ""Polish Horse"" .
  ?polishHorse a <http://dbpedia.org/class/yago/MilitaryUnit100000001> ;
               a <http://dbpedia.org/class/yago/Organisation100000001> .

  ?war a <http://dbpedia.org/ontology/Battle> ;
       <http://dbpedia.org/ontology/participant> ?polishHorse .
  
  ?war a <http://dbpedia.org/ontology/Event> .
}
```",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/ontology/office> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/GovernmentAgency108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?partitoPopolareItaliano ?party WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Partito_Popolare_Italiano> ?p ?partitoPopolareItaliano .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?party .
  }
}
```",2,2,3,1,2,3,3,71,1,13,0,0.07142857142857142,1.0,0.13333333333333333
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
SELECT ?person WHERE {
  ?book <http://dbpedia.org/property/author> ?person .
  FILTER(STR(?book) = ""Kamikaze_Girls"")
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/BeautyQueen108000001> .
}
```",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,63,0,0,1.0,1.0,1.0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthDate> ?date .
  FILTER (YEAR(?date) = 1970)
}
```",1,1,2,1,1,2,2,9,2287,8277,523,0.21648996592199923,0.8138790035587189,0.34200687901899207
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  <http://dbpedia.org/resource/Christian_IX_of_Denmark> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,2,20,17,0,15,1.0,0.53125,0.6938775510204082
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> .
}
```",1,1,2,1,1,3,3,71,122,0,0,1.0,1.0,1.0
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?place .
  FILTER(CONTAINS(LCASE(STR(?place)), ""japan""))
  
  OPTIONAL { 
    ?person <http://xmlns.com/foaf/0.1/member> ?university .
    FILTER(CONTAINS(LCASE(STR(?university)), ""university of tsukuba""))
  }
}
```",2,2,3,1,2,3,3,71,84,10344,0,0.00805523590333717,1.0,0.01598173515981735
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,3,2,20,10,0,0,1.0,1.0,1.0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?region ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Central_European_Time> <http://www.w3.org/2006/time#duringRegion> ?region .
  }
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Italy> .
    FILTER NOT EXISTS { ?entity a <http://www.w3.org/2002/07/owl#Nothing> } # To avoid empty results
  }
}
```",2,2,3,1,2,2,3,28,0,1872,513,0.0,0.0,0
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
SELECT ?spouse WHERE {
  ?merneptah <http://dbpedia.org/ontology/father> ?father .
  ?father <http://dbpedia.org/property/spouse> ?spouse .
  FILTER(STRSTARTS(STR(?merneptah), ""http://dbpedia.org/resource/Merneptah""))
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
SELECT DISTINCT ?band WHERE {
  # Find the actor who is also a musical artist in ""Honor Up""
  ?work <http://dbpedia.org/ontology/starring> ?actor .
  ?work <http://purl.org/dc/terms/title> ""Honor Up"" .
  
  # Ensure the actor is classified as a MusicalArtist
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist108930068> .

  # Retrieve the band associated with this musical artist
  ?actor <http://dbpedia.org/ontology/band> ?band .
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://dbpedia.org/ontology/parent> ?parent .
}
```",2,2,3,2,1,3,3,71,2,4,0,0.3333333333333333,1.0,0.5
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?profession ?otherProfessional WHERE {
  # Get the profession of Robert Xavier Rodriguez
  <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://purl.org/dc/terms/profession> ?profession .
  
  # Find other professionals with the same profession
  ?otherIndividual <http://purl.org/dc/terms/profession> ?profession .
  FILTER(?otherIndividual != <http://dbpedia.org/resource/Robert_Xavier_Rodriguez>)
  BIND(str(?otherIndividual) AS ?otherProfessional)
}
```",2,2,3,2,1,2,2,9,0,0,1942,0,0.0,0
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ekrem_Akurgal> <http://purl.org/dc/terms/awards> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Richeza_of_Poland> <http://www.w3.org/2002/07/owl#sameAs> ?reference .
  ?reference <http://dbpedia.org/ontology/father> ?father .
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  BIND(?father AS ?result)
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?entity WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Colony_of_New_Zealand> .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/participatedInWar> ?war .
    ?entity <http://www.w3.org/2004/02/skos/core#relatedMatch> ?war .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alterEgo> ?result .
}
```

If `alterEgo` does not yield results, alternative properties like `realName` could be considered.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT ?ebonyBandMember ?appietusArtist WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/associatedMusicalArtist> ?ebonyBandMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?appietusArtist .
  }
}
```",2,2,3,1,2,3,2,20,1,15,0,0.0625,1.0,0.11764705882352941
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?landmark WHERE {
  ?landmark <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#float> .
  ?landmark a <http://dbpedia.org/ontology/Landmark> .
}
```",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickname> ?result .
}
```",2,2,3,2,1,3,3,71,0,1,4,0.0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?person WHERE {
  # Find children of Archduke Joseph August
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?person .
  
  # Ensure the same person is a parent of Géza von Habsburg
  ?person <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?artist .
  ?artist <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup115069068> ;
          <http://www.w3.org/2000/01/rdf-schema#label> ?bandMember .
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_Kingdom> .
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",2,2,3,1,2,2,3,28,0,4,357,0.0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween"" .
  ?person <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?house <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?headquarter .
  
  FILTER(?house = <http://dbpedia.org/resource/House_of_Sombrerete>)
  
  ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  FILTER(?deathPlace = ?headquarter)
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?campaign <http://dbpedia.org/ontology/campaign> <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> .
  ?campaign <http://dbpedia.org/property/commander> ?commander .
  ?commander <http://dbpedia.org/property/award> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?commander ?awardee WHERE {
  OPTIONAL {
    ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
    ?event <http://dbpedia.org/property/commander> ?commander .
  }
  OPTIONAL {
    ?award <http://dbpedia.org/ontology/awardee> ?awardee .
    ?award <http://dbpedia.org/property/number> ""30""^^xsd:integer .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/ontology/associatedMilitaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  # Find the father of William Ernest
  <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/father> ?father .
  
  # Ensure this person is also a child of Charles Alexander
  ?father <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?father .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Baden-W%C3%BCrttemberg> .
}
```",1,1,2,1,1,3,3,71,0,0,60,0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type .
  ?result <http://dbpedia.org/property/nickname> ""'El Director'""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Person100000001> .
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ""Matt Colton""@en .
  ?result <http://dbpedia.org/ontology/birthName> ""Matt Colton"" .
  ?result <http://dbpedia.org/ontology/type> <http://dbpedia.org/class/yago/MusicalArtist100000001> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"```sparql
SELECT ?person WHERE {
  # Retrieve Eiður Guðjohnsen's birth date
  <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://www.w3.org/2006/vcard/ns#bday> ?birthDate .

  # Find persons who are both soccer players and managers, born on the same date
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .
  ?person <http://www.w3.org/2006/vcard/ns#bday> ?birthDate .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager> .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SoccerClub118070786> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsClub108069068> .
  ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/England> .
}
```",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?restingPlace ?capital WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
  OPTIONAL {
    ?southRussia <http://dbpedia.org/ontology/capital> ?capital .
    FILTER(CONTAINS(LCASE(?southRussia), ""south russia"") && 
           EXISTS { ?southRussia <http://www.w3.org/2006/time#hasBeginning> ?start . 
                    ?southRussia <http://www.w3.org/2006/time#hasEnd> ?end .
                    FILTER((?start >= ""1919-01-01""^^xsd:date) && (?end <= ""1920-12-31""^^xsd:date)) } )
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Pisagua> <http://dbpedia.org/ontology/militaryUnit> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
SELECT DISTINCT ?bandMember WHERE {
  # Step 1: Find bands associated with Žika Jelić
  ?band <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Žika_Jelić> .
  
  # Step 2: Ensure the band is both a band and a group
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band115930069> ;
        <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup118557470> .

  # Step 3: Find band members who are artists and musical artists
  ?bandMember <http://dbpedia.org/ontology/member> ?band .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Artist118557470> ;
              <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalArtist118557470> .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer ?associatedArtist WHERE {
  # Step 1: Identify the writer of ""40 Dayz & 40 Nightz""
  ?work <http://dbpedia.org/ontology/work> <http://dbpedia.org/resource/40_Dayz_%26_40_Nightz> .
  ?work <http://purl.org/dc/terms/creator> ?writer .

  # Step 2: Ensure the writer is both a musical artist and an artist
  ?writer rdf:type <http://dbpedia.org/ontology/MusicalArtist> .
  ?writer rdf:type <http://dbpedia.org/ontology/Artist> .

  # Step 3: Find associated musical artists of the writer
  ?writer <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/castMember> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?artist WHERE {
  <http://dbpedia.org/resource/Nevermore_(2006_film)> ?property ?artist .
  ?artist a <http://dbpedia.org/ontology/Artist> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"```sparql
SELECT ?entity WHERE {
  ?admin <http://dbpedia.org/ontology/administration> ?entity .
  FILTER(?admin = <http://dbpedia.org/resource/Democratic_Party_(Italy)>)
  
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlement108069068> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Region108069068> .
  
  ?entity <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> .
  ?entity <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/State108069068> .
}
```",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/ontology/residence> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?residence WHERE {
  ?election <http://dbpedia.org/ontology/politicalLeader> ?leader .
  FILTER EXISTS { ?election <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> }
  ?leader a <http://dbpedia.org/ontology/Politician> .
  ?leader <http://dbpedia.org/ontology/residence> ?residence .
  ?residence a <http://dbpedia.org/ontology/Country> .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
SELECT ?professionalRole ?associatedArtist WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://purl.org/dc/terms/profession> ?professionalRole .
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/member> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
SELECT ?child ?spouse WHERE {
  <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?child .
  OPTIONAL { 
    ?child <http://dbpedia.org/property/spouse> ?spouse .
  }
}
```",2,2,3,2,1,3,3,71,5,4,0,0.5555555555555556,1.0,0.7142857142857143
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Don_Dokken> <http://purl.org/dc/terms/subject> ?result .
}
```

This query attempts to retrieve subjects associated with Don Dokken, which might include his roles or occupations.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Loe_Thai> <http://www.w3.org/2004/02/skos/core#broader> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://purl.org/dc/terms/receiver> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  ?event <http://dbpedia.org/ontology/event> <http://dbpedia.org/resource/Spanish_Civil_War> .
  ?event <http://dbpedia.org/property/commander> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,28,0,0.0,0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> .
}
```",1,1,2,1,1,3,3,71,8419,0,0,1.0,1.0,1.0
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> .
}
```",1,3,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Blasters> <http://dbpedia.org/ontology/birthName> ?result .
}
```",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
SELECT ?result WHERE {
  ?album <http://dbpedia.org/ontology/work> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalAlbum108930068> .
  ?album <http://dbpedia.org/property/contributor> <http://dbpedia.org/resource/Dave_Flett> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT DISTINCT ?native WHERE {
  # Step 1: Find the birthplace of Gary Williams
  <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Filter for English settlements
  ?birthPlace <http://www.w3.org/2004/02/skos/core#broader> ?country .
  ?country rdfs:label ""England""@en .
  ?birthPlace a <http://dbpedia.org/class/yago/Settlements1000000InEngland> .

  # Step 3: Find natives who are both soccer players and managers
  ?native <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  ?native a <http://dbpedia.org/class/yago/SoccerPlayers> ;
          a <http://dbpedia.org/class/yago/SoccerManagers> .
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Shellback_(record_producer)> <http://dbpedia.org/ontology/work> ?result .
  ?result a <http://dbpedia.org/ontology/Work> .
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/leader> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/participatedIn> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Vajiralongkorn> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?decedent ?force WHERE {
  ?decedent <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
  OPTIONAL { 
    ?decedent <http://dbpedia.org/property/force> ?force .
  }
}
```",2,2,3,2,1,3,3,71,0,1147,23,0.0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?person ?almaMater WHERE {
  ?person a <http://dbpedia.org/ontology/Writer> ;
          <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",2,3,3,2,1,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?administration WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Where_It%27s_At_(Dustin_Lynch_album)> <http://purl.org/dc/terms/creator> ?writer .
    ?writer <http://www.w3.org/ns/prov#wasDerivedFrom> ?settlement .
    ?settlement a <http://dbpedia.org/class/yago/Settlement1000000> .
    ?settlement <http://dbpedia.org/ontology/administration> ?administration .
  }
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/30> <http://dbpedia.org/ontology/awardee> ?result .
}
```

Note: This query assumes that there is a DBpedia resource specifically for ""30"" as an award. If ""30"" refers to something else, additional context would be needed to refine the query.",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
SELECT ?parentOfIlona ?childOfJosephAugust WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> <http://dbpedia.org/ontology/parent> ?parentOfIlona .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> <http://dbpedia.org/ontology/child> ?childOfJosephAugust .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> .
}
```",1,1,2,1,1,3,3,71,1147,0,0,1.0,1.0,1.0
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?parent WHERE {
  ?person <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Budapest> .
  ?person <http://www.w3.org/2002/07/owl#sameAs> ?individual .
  ?individual <http://dbpedia.org/property/parent> ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,19,0,0.0,0
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","```sparql
SELECT ?decedent WHERE {
  <http://dbpedia.org/resource/Joseph_C._Satterthwaite> <http://dbpedia.org/ontology/death> ?death .
  OPTIONAL { 
    ?death <http://dbpedia.org/ontology/decedent> ?decedent .
  }
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/profession> ?profession .
  FILTER (CONTAINS(LCASE(STR(?profession)), ""actress""))
}
```",1,1,2,1,1,3,3,71,0,8,19241,0.0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,2,2,9,2,0,0,1.0,1.0,1.0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sh%C3%A8na> <http://www.w3.org/2004/02/skos/core#altLabel> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father ?resident WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Lizzie_Spaulding> <http://www.w3.org/2006/vcard/ns#hasParent> ?parent .
    ?parent <http://xmlns.com/foaf/0.1/name> ?father .
  }
  OPTIONAL {
    ?resident <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> .
  }
}
```",2,2,3,1,2,3,2,20,1,14,0,0.06666666666666667,1.0,0.125
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Rif_War> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nakkhatra_Mangala> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player WHERE {
  <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/member> ?player .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
SELECT ?mayor WHERE {
  <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/ontology/mayor> ?mayor .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
SELECT ?militaryForce WHERE {
  <http://dbpedia.org/resource/Battle_of_Borodino> <http://dbpedia.org/ontology/participatingMilitaryUnit> ?militaryForce .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
SELECT ?profession ?band WHERE {
  <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/profession> ?profession .
  OPTIONAL { 
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/associatedMusicalArtist> ?band .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
SELECT ?awardee WHERE {
  ?award <http://dbpedia.org/ontology/recipient> ?awardee .
  FILTER(STRSTARTS(LCASE(?award), ""eric gregory award""))
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .
  ?awardee <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet> .
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://www.w3.org/2000/01/rdf-schema#label> ""Tamara Kunanayakam""@en .
  <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result .
}
```",2,2,3,2,1,2,3,28,0,1,62,0.0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  <http://dbpedia.org/resource/Tokugawa_Masako> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/property/father> ?father .
}
```",2,3,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/bandMember> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?awardee ?almaMater WHERE {
  ?award <http://dbpedia.org/ontology/receiver> ?awardee .
  FILTER(CONTAINS(LCASE(STR(?award)), ""national order of scientific merit""))
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ramesses_II> <http://dbpedia.org/ontology/spouse> ?result .
}
```",1,1,2,1,1,3,3,71,0,1,5,0.0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
SELECT ?leader ?administration WHERE {
  <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/ontology/leader> ?leader .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1 .
  ?leader <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type2 .
  FILTER (?type1 = <http://dbpedia.org/ontology/PoliticalParty> && ?type2 = <http://dbpedia.org/ontology/Organization>)
  OPTIONAL { 
    ?leader <http://dbpedia.org/property/administration> ?administration .
  }
}
```",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# This is a placeholder as the question lacks specifics.
SELECT ?result WHERE {
  # Replace <http://dbpedia.org/resource/Professional_Name> with the actual resource URI of the professional.
  <http://dbpedia.org/resource/Professional_Name> <http://dbpedia.org/property/spouse> ?result .
}
```",2,2,3,2,1,3,2,20,0,0,4149,0,0.0,0
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/birthName> ""Jason Schwartzman"" .
  ?parent <http://dbpedia.org/property/child> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> .
}
```

This query will return all entities that have a location property pointing to the United States resource in DBpedia.",1,1,2,1,1,3,2,20,0,0,13008,0,0.0,0
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"```sparql
SELECT ?person WHERE {
  <http://dbpedia.org/resource/Francoist_Spain> <http://dbpedia.org/ontology/deceased> ?person .
}
```",1,1,2,1,1,3,3,71,0,0,125,0,0.0,0
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?entityInPanama ?party WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Panama> .
    BIND(?entity AS ?entityInPanama)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?party .
  }
}
```",2,2,3,1,2,2,3,28,2,82,0,0.023809523809523808,1.0,0.046511627906976744
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?award ?awardee WHERE {
  <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/ontology/award> ?award .
  OPTIONAL { 
    ?award <http://dbpedia.org/property/recipient> ?awardee .
  }
}
```",2,2,3,2,1,3,3,71,0,5,2075,0.0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?nativeLabel WHERE {
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence a <http://dbpedia.org/class/yago/Country108069068> .
  OPTIONAL { ?residence <http://www.w3.org/2000/01/rdf-schema#label> ?nativeLabel . }
}
```",2,3,3,2,1,3,3,71,0,0,8419,0,0.0,0
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/participatedIn> ?result .
  ?result a <http://dbpedia.org/class/yago/MilitaryConflict108069068> .
}
```",1,2,2,1,1,2,3,28,0,0,16,0,0.0,0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> ?property ?intermediate .
  ?intermediate <http://dbpedia.org/ontology/war> ?result .
}
```

This query assumes there might be an intermediate property linking his work to a war, which is common in DBpedia's structured data.",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup108069627> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
SELECT ?person WHERE {
  ?person a <http://dbpedia.org/ontology/BeautyQueen> .
  OPTIONAL { 
    ?person <http://xmlns.com/foaf/0.1/name> ?birthName .
  }
}
```

Note: Replace `?birthName` with the actual birth name once it is provided to filter for specific individuals.",1,2,2,1,1,3,2,20,0,0,120,0,0.0,0
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?entityInNottinghamshire ?birthPlace WHERE {
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
    BIND(?entity AS ?entityInNottinghamshire)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  }
}
```",2,2,3,1,2,2,3,28,1,102,0,0.009708737864077669,1.0,0.01923076923076923
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT DISTINCT ?associatedArtist WHERE {
  ?bandMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Ofori_Amponsah> .
  ?bandMember <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
}
```",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
SELECT ?war ?location WHERE {
  <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/participatedIn> ?war .
  ?war a <http://dbpedia.org/ontology/MilitaryConflict> .
  OPTIONAL { 
    ?war <http://dbpedia.org/property/location> ?location .
  }
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?bandMember ?associatedArtist WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Nevermore_(band)> <http://dbpedia.org/ontology/bandMember> ?bandMember .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jim_Sheppard_(musician)> <http://dbpedia.org/property/associatedMusicalArtist> ?associatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?actor ?parent WHERE {
  ?actor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  OPTIONAL { 
    ?actor <http://dbpedia.org/property/parent> ?parent .
  }
}
```",2,2,3,2,1,3,2,20,24,4905,897,0.004869141813755326,0.026058631921824105,0.008205128205128205
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Order_of_St._Andrew> <http://purl.org/dc/terms/relation> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,33,0,0.0,0
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"```sparql
SELECT ?event ?militaryForce WHERE {
  ?event <http://dbpedia.org/ontology/person> <http://dbpedia.org/resource/Francisco_Franco> .
  ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
         a <http://dbpedia.org/class/yago/Events108069068> ;
         a <http://dbpedia.org/class/yago/MilitaryConflicts108069068> .
  OPTIONAL { 
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/2016%E2%80%9317_Hull_City_A.FC_season> <http://dbpedia.org/ontology/manager> ?result .
    ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsManager108069068> .
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
SELECT ?person WHERE {
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Narrator> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Producer> .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Mom Rajawongse Sirikit Kitiyakara"" .
  ?result a <http://dbpedia.org/ontology/Person> .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
SELECT ?result WHERE {
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Composer> .
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?band WHERE {
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/reference> <http://dbpedia.org/resource/YU_Grupa> .
    ?reference <http://www.w3.org/2002/07/owl#sameAs> ?group .
    ?group a <http://dbpedia.org/class/yago/Group100000001> ;
           a <http://dbpedia.org/class/yago/Organisation100000001> .
  }
  OPTIONAL {
    ?reference <http://dbpedia.org/ontology/band> ?band .
  }
}
```",2,5,3,2,1,3,2,20,0,174,8,0.0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?figureKnownAsQUB ?almaMater WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/property/nickname> ""QUB"" .
    ?entity <http://www.w3.org/2000/01/rdf-schema#label> ?figureKnownAsQUB .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMeter .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Royal_Medal> <http://purl.org/dc/terms/subject> ?award .
  ?award <http://www.w3.org/ns/prov#wasAttributedTo> ?result .
}
```",2,3,3,2,1,3,3,71,0,0,45,0,0.0,0
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
SELECT ?award ?awardee WHERE {
  <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/ontology/award> ?award .
  OPTIONAL { 
    ?award <http://dbpedia.org/property/awardee> ?awardee .
  }
}
```",2,2,3,2,1,3,3,71,0,9,1484,0.0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Settlement108069068> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
SELECT ?bandMember WHERE {
  <http://dbpedia.org/resource/San_Francisco_Symphony> <http://dbpedia.org/ontology/member> ?bandMember .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Band115930069> .
  ?bandMember <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalGroup118067445> .
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/member> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?commonMember WHERE {
  # Retrieve members of Metallica
  ?metallicaMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Metallica> .
  
  # Retrieve members of Guns N' Roses
  ?gunsNRosesMember <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Guns_N'_Roses> .

  # Find common member
  FILTER (?metallicaMember = ?gunsNRosesMember)
  BIND(?metallicaMember AS ?commonMember)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?simonCadellRestingPlace ?alanCunninghamRestingPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/deathPlace> ?simonCadellRestingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alan_Cunningham_(general)> <http://dbpedia.org/ontology/deathPlace> ?alanCunninghamRestingPlace .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nevermore_(band)> ?property ?result .
  ?result a <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
SELECT ?war ?claimToFame WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Joaqu%C3%ADn_Blake> <http://dbpedia.org/ontology/participatedIn> ?war .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/property/claimToFame> ?claimToFame .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/memberOf> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"```sparql
SELECT DISTINCT ?band WHERE {
  ?member <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Mortician_(band)> .
  ?member a <http://dbpedia.org/ontology/Artist> .
  ?member <http://dbpedia.org/ontology/associatedBand> ?band .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Sledgeback> <http://dbpedia.org/ontology/member> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?award <http://dbpedia.org/ontology/recipient> <http://dbpedia.org/resource/Jonathon_Band> .
  ?award <http://purl.org/dc/terms/creator> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?settlement WHERE {
  ?settlement <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland> .
  ?settlement <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Town> .
  ?settlement <http://purl.org/dc/terms/nickname> ""Land of fire and ice"" .
}
```",1,4,2,1,1,2,3,28,0,0,1,0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?native WHERE {
  # Step 1: Get the birthplace of Samir Bekrić
  <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?birthPlace .

  # Step 2: Find entities native to that birthplace
  ?native <http://dbpedia.org/property/nativeOf> ?birthPlace .
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?commander WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Napoleonic_Wars> <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",2,2,3,1,2,3,3,71,5,16,0,0.23809523809523808,1.0,0.3846153846153846
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Y%C5%8Dichi_Masuzoe> <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Country108067124> .
  BIND(?residence AS ?result)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Vyoshenskaya_Uprising> <http://dbpedia.org/ontology/participant> ?participant .
  ?participant <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?type1, ?type2 .
  FILTER (?type1 = <http://dbpedia.org/class/yago/MilitaryUnit108067> && ?type2 = <http://dbpedia.org/class/yago/Organisation108067>)
  BIND(?participant AS ?result)
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ofori_Amponsah> <http://dbpedia.org/ontology/memberOf> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
SELECT ?residence WHERE {
  ?person <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/France> .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/ontology/officeHolder> ?office .
  
  ?person <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/type> <http://dbpedia.org/resource/Settlement> .
  
  OPTIONAL { 
    ?residence <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> .
  }
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/birthName> ""Vajiralongkorn"" .
  ?parent <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Vajiralongkorn> .
  ?parent <http://dbpedia.org/ontology/parent> ?child .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
SELECT ?band WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Luke Francis Vibert"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/memberOf> ?band .
  }
}
```",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ebony_Reigns> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,3,2,20,0,1,7,0.0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> <http://purl.org/dc/terms/creator> ?result .
}
```

This query assumes the use of `creator` as a property to find works associated with Gotabhaya Rajapaksa. If this does not yield results, alternative properties like `author` or specific project-related links might be considered.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/castMember> ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> .
}
```",2,2,3,2,1,2,2,9,2080,175,6842,0.9223946784922394,0.233131584846447,0.372192896125973
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?entity <http://dbpedia.org/ontology/timeZone> ?time .
  ?entity <http://www.w3.org/2000/01/rdf-schema#label> ""Time in Indonesia""@en .
  ?entity <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Indonesia> .
  ?entity rdfs:label ?result .
}
```",2,2,3,2,1,3,2,20,0,0,2949,0,0.0,0
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?commander .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?commander .
  }
}
```",2,2,3,1,2,3,3,71,16,15,0,0.5161290322580645,1.0,0.6808510638297872
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
SELECT ?person ?deathPlace WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> .
  OPTIONAL { 
    ?person <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",2,2,3,2,1,2,2,9,254,1654,0,0.1331236897274633,1.0,0.23496762257169287
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"```sparql
SELECT ?region WHERE {
  <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ?timeZone .
  ?timeZone <http://dbpedia.org/ontology/timeZone> ?region .
  FILTER EXISTS { ?region a <http://dbpedia.org/class/yago/Country108067069> }
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?antiochus <http://dbpedia.org/ontology/successor> ?successor .
  FILTER(?antiochus = <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)>)
  
  ?successor <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,3,71,5,0,1,1.0,0.8333333333333334,0.9090909090909091
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
SELECT ?award ?professional WHERE {
  <http://dbpedia.org/resource/Scott_McCloud> <http://purl.org/dc/terms/receiver> ?award .
  OPTIONAL { 
    ?award <http://www.w3.org/ns/org#hasMember> ?professional .
  }
}
```",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
SELECT ?parentOfMieszko ?childOfDoubravka WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Mieszko_II_Lambert> <http://dbpedia.org/ontology/parent> ?parentOfMieszko .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?childOfDoubravka .
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
# No valid query can be constructed due to incomplete information.
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ferenc_Sz%C3%A1lasi> <http://dbpedia.org/ontology/commander> ?result .
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/nickname> ""'Hub City'""@en .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?event ?militaryForce WHERE {
  <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/ontology/event> ?event .
  ?event a <http://dbpedia.org/class/yago/SocietalEvent108069068> ;
         a <http://dbpedia.org/class/yago/Events108069068> ;
         a <http://dbpedia.org/class/yago/MilitaryConflicts108069068> .
  OPTIONAL { 
    ?event <http://dbpedia.org/ontology/militaryForce> ?militaryForce .
  }
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
SELECT ?commander ?child WHERE {
  ?battle <http://dbpedia.org/ontology/commander> ?commander .
  FILTER(CONTAINS(LCASE(?battle), ""battle of panium""))
  
  OPTIONAL { 
    ?commander <http://dbpedia.org/ontology/child> ?child .
  }
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?album ?writer WHERE {
  ?album <http://dbpedia.org/ontology/musicArtist> <http://dbpedia.org/resource/Dave_Flett> .
  ?album a <http://dbpedia.org/class/yago/MusicalAlbum108069068> .
  OPTIONAL { 
    ?album <http://purl.org/dc/terms/creator> ?writer .
  }
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?lukeLeaRestingPlace ?edwinKeebleRestingPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/deathPlace> ?lukeLeaRestingPlace .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/deathPlace> ?edwinKeebleRestingPlace .
  }
}
```",2,2,3,1,2,2,3,28,0,3,1,0.0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,20,0,0,1.0,1.0,1.0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,2,20,21,0,0,1.0,1.0,1.0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/member> ?member .
  ?member a <http://dbpedia.org/ontology/MusicalArtist> ;
          a <http://dbpedia.org/ontology/Artist> .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","```sparql
SELECT ?figure ?team WHERE {
  OPTIONAL {
    ?entity <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein"" .
    ?entity rdfs:label ?figure .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Alessandro_Mangiarratti> <http://dbpedia.org/ontology/team> ?team .
  }
}
```",2,2,3,1,2,3,2,20,1,7,0,0.125,1.0,0.2222222222222222
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?result WHERE {
  ?work <http://dbpedia.org/ontology/writer> ?result .
  ?work rdfs:label ""40 Dayz & 40 Nightz""@en .
  FILTER (lang(?work) = 'en')
  
  ?result a <http://dbpedia.org/ontology/MusicalArtist> ;
         a <http://dbpedia.org/ontology/Artist> .
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?player WHERE {
  ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Hull_City_A.F.C.> .
  ?season <http://dbpedia.org/property/startYear> ""2016""^^xsd:gYear .
  ?season <http://dbpedia.org/property/endYear> ""2017""^^xsd:gYear .
  ?season <http://dbpedia.org/ontology/teamManager> ?manager .
  ?manager <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Sports_manager> .
  ?team <http://dbpedia.org/property/teamManager> ?manager .
  ?team <http://dbpedia.org/ontology/player> ?player .
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?club ?nickname WHERE {
  <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/teamMember> ?team .
  ?team <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/SportsClub100000001> ;
        <http://www.w3.org/2002/07/owl#sameAs> ?club .
  ?club <http://www.w3.org/2006/vcard/ns#hasNickName> ?nickname .
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/claimToFame> ?result .
  ?result a <http://dbpedia.org/class/yago/Work100000001> .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?qubEntity ?almaMater WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/nickname> ""QUB"" .
    ?entity rdfs:label ?qubEntity .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/FC_Politehnica_Timi%C8%99oara> <http://www.w3.org/2002/07/owl#sameAs> ?club .
  ?club <http://dbpedia.org/ontology/member> ?result .
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?person ?war WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/participatedIn> ?war .
    BIND(<http://dbpedia.org/resource/Mahesh_Senanayake> AS ?person)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/participatedIn> ?war .
    BIND(<http://dbpedia.org/resource/Jagath_Dias> AS ?person)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/ontology/award> ?result .
}
```",2,2,3,2,1,3,2,20,0,9,18629,0.0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,4,0,0,1.0,1.0,1.0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
SELECT ?parent WHERE {
  ?child <http://dbpedia.org/ontology/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> .
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/ontology/birthParent> ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Politician108415069> .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,3,0,0,1.0,1.0,1.0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Serbian_Progressive_Party> <http://dbpedia.org/ontology/member> ?person .
  ?person <http://dbpedia.org/property/administration> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ei%C3%B0ur_Gu%C3%B0j%C3%B6nsson> <http://dbpedia.org/ontology/birthDate> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
SELECT ?associatedArtist ?bandMember WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Vibert> <http://dbpedia.org/ontology/bandMember> ?bandMember .
  }
}
```",2,2,3,1,2,2,3,28,1,3,0,0.25,1.0,0.4
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jackson,_Tennessee> <http://dbpedia.org/property/nickname> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
  ?result a <http://dbpedia.org/class/yago/Organisation108069068> ; # Organisation type
          a <http://dbpedia.org/class/yago/MusicalGroup100000001> ; # Group type
          a <http://dbpedia.org/ontology/Band> . # Band type
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?bandMember WHERE {
  # Step 1: Find Fredrik Thordendal's band
  ?fredBand <http://dbpedia.org/ontology/member> <http://dbpedia.org/resource/Fredrik_Thordendal> .
  
  # Ensure the band is an organisation
  ?fredBand a <http://dbpedia.org/class/yago/YAGO2GeoShape4327Organisation108069> .

  # Step 2: Find members of this band who are also bands, groups, and organisations
  ?bandMember <http://dbpedia.org/ontology/member> ?fredBand .
  ?bandMember a <http://dbpedia.org/class/yago/YAGO2GeoShape4327MusicalGroup108069>,
              <http://dbpedia.org/class/yago/YAGO2GeoShape4327Organisation108069>.
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
SELECT ?war WHERE {
  ?war <http://www.w3.org/2000/01/rdf-schema#isClassOf> <http://dbpedia.org/class/yago/MilitaryConflicts100000000>.
  ?war <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>.
  ?war <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Frédéric-Georges_Herr>.
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nottinghamshire> .
}
```",1,1,2,1,1,2,3,28,0,101,369,0.0,0.0,0
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?spouse <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
  ?spouse <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,4,3,2,1,3,2,20,2,0,0,1.0,1.0,1.0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> ?location .
  ?location <http://www.w3.org/2000/01/rdf-schema#label> ""Japan""@en .
  FILTER (LANG(?location) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,8916,0,0.0,0
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jason_Newsted> <http://dbpedia.org/ontology/associatedBand> ?result .
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
SELECT ?province ?country WHERE {
  <http://dbpedia.org/resource/Schio> <http://www.w3.org/2004/02/skos/core#broader> ?province .
  OPTIONAL { 
    <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/country> ?country .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
SELECT ?father ?party WHERE {
  <http://dbpedia.org/resource/Lamberto_Andreotti> <http://xmlns.com/foaf/0.1/familyName> ?father .
  OPTIONAL { 
    ?father <http://dbpedia.org/ontology/politicalParty> ?party .
  }
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
SELECT ?entity WHERE {
  ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
}
```",1,1,2,1,1,2,3,28,340,0,0,1.0,1.0,1.0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Arnulfo_Arias_Madrid> <http://dbpedia.org/ontology/party> ?result .
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
SELECT ?almaMater ?entity WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?almaMater .
  }
  OPTIONAL {
    ?entity <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
    ?address <http://purl.org/dc/terms/spatial> <http://dbpedia.org/resource/Baden-Württemberg> .
  }
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/bandMember> ?result .
}
```",2,3,3,2,1,3,2,20,2,0,38,1.0,0.05,0.09523809523809523
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
  ?album <http://dbpedia.org/ontology/title> ""What U See Is What U Get"" .
  ?album a <http://dbpedia.org/ontology/MusicalWork> ;
         a <http://dbpedia.org/ontology/Work> .
  ?album <http://purl.org/dc/terms/creator> ?writer .
  ?writer a <http://dbpedia.org/ontology/MusicalArtist> ;
          a <http://dbpedia.org/ontology/Artist> .
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
SELECT ?show WHERE {
  <http://dbpedia.org/resource/Stacey_Dash> <http://dbpedia.org/ontology/castMember> ?show .
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
SELECT ?claimToFame ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/notableWork> ?claimToFame .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/war> ?war .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?gustavJonson <http://dbpedia.org/ontology/officeHolder> ?role .
  ?gustavJonson <http://dbpedia.org/ontology/politician> ?politicianRole .
  FILTER(?gustavJonson = <http://dbpedia.org/resource/Gustav_Jonson>)
  
  OPTIONAL { 
    ?role <http://www.w3.org/ns/org#partOf> ?agency .
    ?agency a <http://dbpedia.org/ontology/GovernmentAgency> .
  }
  
  ?role <http://dbpedia.org/ontology/leader> ?office .
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
SELECT ?grandchild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandchild .
  ?setiI <http://dbpedia.org/ontology/child> ?child .
  FILTER(?setiI = <http://dbpedia.org/resource/Seti_I>)
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
SELECT ?entityInFrance ?force WHERE {
  OPTIONAL {
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/France> .
    BIND(?entity AS ?entityInFrance)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> <http://dbpedia.org/property/militaryUnit> ?force .
  }
}
```",2,2,3,1,2,3,2,20,0,2295,4,0.0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"```sparql
SELECT ?person WHERE {
  # Decedent at French Algeria
  OPTIONAL { 
    <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/ontology/decedent> ?person .
  }
  
  # Decedent at Algiers
  OPTIONAL { 
    <http://dbpedia.org/resource/Algiers> <http://dbpedia.org/ontology/decedent> ?person .
  }

  FILTER(BOUND(?person))
}
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?bandMember WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Senidah> <http://dbpedia.org/ontology/member> ?bandMember .
  }
  OPTIONAL {
    ?bandMember <http://dbpedia.org/ontology/nativePlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Maria_Pavlovna_of_Russia_(1786-1859)> <http://dbpedia.org/ontology/child> ?result .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
SELECT ?region ?work WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Greenwich_Mean_Time> <http://www.w3.org/2006/vcard/ns#adr> ?address .
    ?address <http://purl.org/dc/terms/spatial> ?region .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Article_62,_Section_IV_of_the_Constitution_of_Iceland> <http://dbpedia.org/ontology/work> ?work .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?administration ?deathPlace WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Emperor_Go-Yōzei> <http://dbpedia.org/ontology/positionHeld> ?administration .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
SELECT ?team WHERE {
  <http://dbpedia.org/resource/Len_%27Slava%27_Slutsky> <http://dbpedia.org/ontology/coach> ?team .
  ?team a <http://dbpedia.org/class/yago/SoccerClub100000001> ;
        a <http://dbpedia.org/class/yago/SportsTeamSeason10000000> .
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/ontology/alterEgo> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?person ?almaMater WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(<http://dbpedia.org/resource/Allen_Hill_(scientist)> AS ?person)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?almaMater .
    BIND(<http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> AS ?person)
  }
}
```",2,2,3,1,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Colony_of_New_Zealand> ?property ?result .
}
```",1,1,2,1,1,3,3,71,0,200,1,0.0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?person .
  ?person <http://dbpedia.org/property/parent> ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  # Step 1: Identify the movie resource
  <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://www.w3.org/2002/07/owl#sameAs> ?movieResource .

  # Step 2: Retrieve the cast list for the character ""Papa""
  ?movieResource <http://dbpedia.org/ontology/castMember> ?cast .
  ?cast <http://dbpedia.org/property/characterName> ""Papa"" .

  # Step 3: Find the actor associated with the role of ""Papa""
  ?cast <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/YagoPerformer100000001> .
  
  # Step 4: Query for the birthplace of that actor
  ?actor <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?result WHERE {
  ?software <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Bill_Joy> .
  ?software <http://www.w3.org/2002/07/owl#sameAs> ?work .
  ?work <http://purl.org/dc/terms/type> <http://dbpedia.org/class/yago/Software100000001> .
  ?work <http://dbpedia.org/ontology/author> ?result .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,7,0,0,1.0,1.0,1.0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?native WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?deathPlace .
    ?deathPlace a <http://dbpedia.org/ontology/Settlement> .
    ?deathPlace <http://dbpedia.org/property/native> ?native .
  }
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> ?place .
  FILTER (str(?place) = str(<http://dbpedia.org/resource/Compton,_California>) || 
          str(?place) = ""Compton, California""^^xsd:string)
}
```",1,1,2,1,1,3,3,71,97,0,0,1.0,1.0,1.0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?force ?war WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/memberOf> ?force .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/war> ?war .
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  BIND(?commander AS ?result)
}
```",1,2,2,1,1,2,3,28,6,0,0,1.0,1.0,1.0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?partitoPopolareReference ?party WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Partito_Popolare_Italiano> ?property ?partitoPopolareReference .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?party .
  }
}
```",2,2,3,1,2,3,3,71,1,11,0,0.08333333333333333,1.0,0.15384615384615385
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  ?mayor <http://dbpedia.org/ontology/politicalParty> ?party .
  ?mayor <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?mayor <http://dbpedia.org/property/mayorOf> <http://dbpedia.org/resource/Northern_Ireland_Forum> .
  ?mayor <http://dbpedia.org/ontology/almaMater> ?almaMeter .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?result WHERE {
    <http://dbpedia.org/resource/Italian_People%27s_Party_(1994)> <http://www.w3.org/2000/01/rdf-schema#label> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Sri_Lanka> .
}
```",1,1,2,1,1,2,3,28,0,343,62,0.0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/ontology/militaryForce> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT DISTINCT ?commander ?country WHERE {
  <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?commander .
  ?commander <http://dbpedia.org/ontology/residence> ?residence .
  ?residence <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .
  BIND(?residence AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/ontology/alternateName> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","```sparql
SELECT ?grandChild WHERE {
  ?child <http://dbpedia.org/ontology/child> ?grandChild .
  <http://dbpedia.org/resource/William_Haliburton> <http://dbpedia.org/ontology/child> ?child .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result .
}
```",1,1,2,1,1,2,3,28,4,0,0,1.0,1.0,1.0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?entityInNashville ?restingPlace WHERE {
  OPTIONAL { 
    ?entity <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> .
    ?entity ?p ?o .
    FILTER(?p != <http://www.w3.org/2000/01/rdf-schema#label>)
    BIND(?o AS ?entityInNashville)
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",2,2,3,1,2,2,3,28,0,17188,1,0.0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?child ?parent WHERE {
  <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?child .
  ?child <http://www.w3.org/2002/07/owl#sameAs> ?parent .
}
```",2,2,3,2,1,3,2,20,0,4,1,0.0,0.0,0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?native ?reference WHERE {
  OPTIONAL {
    ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> .
    ?person rdfs:label ?native .
    FILTER(LANG(?native) = 'en')
  }
  
  OPTIONAL {
    <http://dbpedia.org/resource/Manfred_Mann> <http://dbpedia.org/ontology/wikiPageWikiLink> ?reference .
  }
}
```",2,2,3,1,2,2,3,28,1,1102,0,0.0009066183136899365,1.0,0.0018115942028985507
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,3,0,0,1.0,1.0,1.0
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Francisco_Largo_Caballero> <http://dbpedia.org/ontology/force> ?result .
  ?result a <http://dbpedia.org/ontology/SocietalEvent> ;
          a <http://dbpedia.org/ontology/MilitaryConflict> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result .
}
```",1,1,2,1,1,2,3,28,3,0,0,1.0,1.0,1.0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Madrid> .
}
```",1,1,2,1,1,2,3,28,12,1334,8,0.008915304606240713,0.6,0.017569546120058566
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
SELECT DISTINCT ?actor WHERE {
  ?movie a <http://dbpedia.org/ontology/Film> ;
         a <http://purl.org/dc/terms/Work> ;
         a <http://dbpedia.org/class/yago/CreativeWorks1000000> . # Assuming this class represents Television Shows

  ?movie <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> .

  ?movie <http://dbpedia.org/ontology/starring> ?actor .
}
```",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?country .
  ?country <http://dbpedia.org/property/capital> ?result .
}
```",2,2,3,2,1,3,2,20,0,3,3,0.0,0.0,0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"```sparql
SELECT ?result WHERE {
  ?party <http://dbpedia.org/ontology/administration> ?result .
  FILTER (?party = <http://dbpedia.org/resource/Democratic_Party_(Italy)>)
  
  ?result a <http://dbpedia.org/class/yago/Settlement108069068> ; # Settlement
         a <http://dbpedia.org/class/yago/Region108069068> ;       # Region
         a <http://dbpedia.org/class/yago/State108069068> .        # State
  
  ?result <http://www.w3.org/2000/01/rdf-schema#label> ?label .
  FILTER (lang(?label) = 'it' && contains(lcase(str(?label)), ""italia""))
}
```",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
SELECT ?producer WHERE {
  <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
}
```",2,2,3,1,2,3,3,71,2,0,0,1.0,1.0,1.0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthName> ""Princess Victoria Louise of Prussia"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty> .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
SELECT ?architect ?restingPlace WHERE {
  # Step 1: Find the architect of P. D. Houston Jr. House
  <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?architect .

  # Step 2: Find the resting place of the identified architect
  OPTIONAL {
    ?architect <http://dbpedia.org/ontology/deathPlace> ?restingPlace .
  }
}
```",2,2,3,2,1,2,3,28,0,2,1,0.0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/ontology/father> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Central_European_Time> <http://dbpedia.org/ontology/region> ?result .
  ?result a <http://dbpedia.org/class/yago/Country108069365> .
}
```",1,2,2,1,1,3,2,20,0,0,56,0,0.0,0
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Jason_Schwartzman> <http://dbpedia.org/ontology/parent> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
SELECT ?band WHERE {
  <http://dbpedia.org/resource/Fredrik_Thordendal> <http://dbpedia.org/ontology/associatedBand> ?band .
  ?band <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Organisation108069068> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?spouse WHERE {
  <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?spouse .
  ?spouse <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?film <http://dbpedia.org/ontology/director> ?director .
  ?film rdfs:label ""Pipe Dreams""@en .
  FILTER (lang(?film) = 'en') .

  ?director <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
  
  ?birthPlace a <http://dbpedia.org/class/yago/Settlements100000007> .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?vCerronAlmaMater ?jSotomayorTelloAlmaMater WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?vCerronAlmaMater .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?jSotomayorTelloAlmaMater .
  }
}
```",2,2,3,1,2,2,2,9,1,2,0,0.3333333333333333,1.0,0.5
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
SELECT ?person WHERE {
  ?person <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> .
}
```",1,1,2,1,1,3,3,71,2751,0,0,1.0,1.0,1.0
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"```sparql
SELECT ?album WHERE {
  <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://purl.org/dc/terms/subject> ?album .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/MusicalWork108069068> .
  ?album <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/Work108069068> .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> .
}
```",1,1,2,1,1,3,3,71,1559,0,0,1.0,1.0,1.0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice"" .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actress> .
  BIND(?person AS ?result)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/property/birthName> ""Gigi Rice"" .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?result WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/University_of_Tsukuba> <http://dbpedia.org/ontology/alumni> ?result .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/University_of_Tsukuba> <http://dbpedia.org/ontology/facultyMember> ?result .
  }
}
```",1,1,2,1,1,3,3,71,0,0,267,0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?awardee ?restingPlace WHERE {
  ?awardee <http://dbpedia.org/ontology/honoraryTitle> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> .
  OPTIONAL { 
    ?awardee <http://dbpedia.org/ontology/restingPlace> ?restingPlace .
  }
}
```",2,2,3,2,1,3,2,20,0,0,49,0,0.0,0
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
SELECT ?alterEgo WHERE {
  ?character <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Matthew_Burland> .
  ?character a <http://dbpedia.org/ontology/FictionalCharacter> .
  ?character <http://dbpedia.org/property/alterEgo> ?alterEgo .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
SELECT ?player ?team WHERE {
  OPTIONAL {
    ?season <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Sacramento_Republic_FC> .
    ?season <http://dbpedia.org/property/year> ""2015""^^xsd:gYear .
    ?season <http://dbpedia.org/ontology/player> ?player .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Mark_Briggs_(footballer)> <http://dbpedia.org/ontology/team> ?team .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?member WHERE {
  <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/member> ?member .
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
SELECT ?mayor ?position WHERE {
  <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/ontology/mayor> ?mayor .
  OPTIONAL { 
    ?mayor <http://www.w3.org/2004/02/skos/core#prefLabel> ?name .
    ?mayor <http://dbpedia.org/ontology/positionHeld> ?position .
  }
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Nie_Rongzhen> <http://purl.org/dc/terms/receiver> ?award .
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?result WHERE {
  ?person <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en .
  ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder> ;
          <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .
  ?person <http://dbpedia.org/property/party> ?result .
}
```",2,4,3,2,1,3,3,71,5,1,2,0.8333333333333334,0.7142857142857143,0.7692307692307692
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?organisation ?territory WHERE {
  ?organisation a <http://dbpedia.org/ontology/Organisation> ;
                <http://www.w3.org/2006/vcard/ns#hasAddress> ?address .
  ?address <http://purl.org/dc/terms/description> ""Warsaw"" .
  OPTIONAL { 
    ?organisation <http://dbpedia.org/property/administers> ?territory .
  }
}
```",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
SELECT ?birthPlace WHERE {
  OPTIONAL {
    <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/ontology/politicalLeader> ?leader .
    ?leader <http://dbpedia.org/ontology/birthPlace> ?birthPlace .
    ?birthPlace <http://www.w3.org/2000/01/rdf-schema#seeAlso> ?country .
  }
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?associatedArtist ?producer WHERE {
  OPTIONAL { 
    <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?associatedArtist .
  }
  OPTIONAL {
    <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?producer .
  }
}
```",2,2,3,1,2,3,3,71,1,7,0,0.125,1.0,0.2222222222222222
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?child WHERE {
  ?parent <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ladislaus_Philipp_of_Austria> .
  ?parent a <http://dbpedia.org/ontology/Royalty> .
  ?parent <http://dbpedia.org/ontology/child> ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
SELECT ?native WHERE {
  ?entity <http://dbpedia.org/property/nickname> ""Hub City"" .
  ?entity <http://dbpedia.org/ontology/nativePlace> ?native .
}
```",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
SELECT ?award WHERE {
  <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/ontology/award> ?award .
}
```

Note: This query retrieves the awards associated with Maxim Grigorievich Vlasov. To find out who else received these awards, further queries would be needed on each award resource to check for other awardees.",2,2,3,2,1,3,2,20,0,0,416,0,0.0,0
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Ohio_State_University> <http://dbpedia.org/ontology/alumni> ?result .
}
```",1,1,2,1,1,3,3,71,0,0,467,0,0.0,0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?result WHERE {
  ?result <http://dbpedia.org/ontology/birthName> ""Jim Sheppard"" .
  ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
SELECT ?result WHERE {
  <http://dbpedia.org/resource/Time_in_Indonesia> <http://www.w3.org/2006/vcard/ns#adrRegion> ?result .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
