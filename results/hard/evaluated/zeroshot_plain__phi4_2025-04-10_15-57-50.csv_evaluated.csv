id,subid,split,question,sparql,generated_sparql,num_edges,num_edges_full,num_nodes,depth,breadth,base_depth,base_breadth,subgraphs,TP,FP,FN,Precision,Recall,F1
392,21,test,"Give me the region of Central European Time and entity in Italy and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@it ;
          dbo:nationality dbr:Italy .
  
  OPTIONAL { ?person dbo:birthPlace ?settlement . }
  OPTIONAL { ?settlement dbo:country dbr:Italy ; 
             dbo:stateProvince ?province . }

  FILTER EXISTS {
    ?settlement a dbo:Settlement .
  }
}
```

This query does the following:
- Searches for a person named ""Sebastiano Bianchetti"" who is Italian.
- Attempts to find their birthplace or residence as a settlement in Italy.
- Retrieves the province of that settlement.

Note: The actual availability and accuracy of data depend on DBpedia's current dataset. If Sebastiano Bianchetti is not well-documented, this query might return no results.",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
421,24,test,Give me the person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Get Dino Merlin's birth name
  VALUES (?dinoBirthName) { 
    dbr:Dino_Merlin dbo:birthName ?dinoBirthName .
  }
  
  # Get Samir Bekrić's birthplace
  VALUES (?samirBirthPlace) { 
    dbr:Samir_Bekrić dbo:birthPlace ?samirBirthPlace .
  }

  # Find a person with the same birth name as Dino Merlin and born in the same place as Samir Bekrić
  ?person dbo:birthName ?dinoBirthName ;
          dbo:birthPlace ?samirBirthPlace .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
427,55,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?andreottiFatherName ?andreottiFatherParty
WHERE {
  # Romano Prodi's political party
  dbr:Romano_Prodi dbo:politicalAffiliation ?prodiParty .
  
  # Italian People's Party (1994) reference
  OPTIONAL { 
    ?prodiParty rdfs:label ""Italian People's Party (1994)""@en .
  }
  
  # Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father ?andreottiFather .
  ?andreottiFather rdfs:label ?andreottiFatherName .
  
  # Political party of Lamberto Andreotti's father
  OPTIONAL {
    ?andreottiFather dbo:politicalAffiliation ?andreottiFatherParty .
  }
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
996,19,test,Give me the force of the awardee of 1778.0 and entity in the award of the native of Palestine (region).,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?award ?force WHERE {
  ?award dbo:dateReceived ""1778-01-01""^^xsd:date ;
         dbo:recipient ?awardee .
  
  ?awardee dbo:nationality dbr:Palestine ;
           dbo:birthPlace ?place .

  OPTIONAL { ?award dbp:force ?force }
}
```

This query does the following:
- Selects the awardee, award, and force associated with the award.
- Filters awards given in the year 1778.
- Ensures the awardee is a native of Palestine by checking their nationality or birthplace.",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
184,64,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Step 1: Find the child of the parent of Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthDate ?date .
  FILTER(YEAR(?date) = 1925)

  ?parent1 dbo:child ?margaret .
  ?grandchild1 dbo:parent ?parent1 .

  # Step 2: Find the parent of the native of a settlement at elevation 96.0
  ?settlement dbo:elevation ""96.0"" ;
              rdf:type dbo:Settlement .
  
  ?nativeLandmark dbo:nativeOf ?settlement .
  ?parent2 dbo:child ?nativeLandmark .

  # Step 3: Find the child of Archduke Joseph August of Austria
  ?josephAugust a dbo:Person ;
                foaf:name ""Joseph August of Austria"" .
  
  ?childJosephAugust dbo:parent ?josephAugust .

  # Step 4: Find the common parent
  ?commonParent dbo:child ?grandchild1 .
  ?commonParent dbo:child ?parent2 .
  ?commonParent dbo:child ?childJosephAugust .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,46,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?decedent WHERE {
  # Identify Frédéric-Georges Herr
  ?person rdfs:label ""Frédéric-Georges Herr""@en .
  
  # Find works related to French Algeria
  ?work dbo:author ?person ;
        rdfs:label ?workLabel .
  FILTER CONTAINS(LCASE(?workLabel), ""french algeria"") .

  # Determine his role as a commander in a military conflict
  ?conflict dbo:commander ?person ;
            a dbo:MilitaryConflict .
  
  # Retrieve information about the person decedent at these works
  OPTIONAL { ?work dbo:decedent ?decedent . }
}
```

This query does the following:
- Identifies Frédéric-Georges Herr using his label.
- Finds works authored by him that are related to ""French Algeria"".
- Checks if he was a commander in any military conflict.
- Retrieves information about the person decedent at these works.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,20,test,Give me the reference to Partito Popolare Italiano and party of the father of Lamberto Andreotti.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyPPI ?partyFather WHERE {
  # Get the political party of Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano dbo:politicalParty ?partyPPI .

  # Get Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father ?father .

  # Get the political party associated with Lamberto Andreotti's father
  ?father dbo:politicalAffiliation ?partyFather .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,61,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band1 ?band2 WHERE {
  # Part 1: Find the band of the person born as ""Shèna""
  ?person dbo:birthName ""Shèna""@en .
  ?person dbo:musicalBand ?band1 .

  # Part 2: Find the band of the writer of a song titled ""Amba Shepherd""
  ?song dbp:title ""Amba Shepherd""@en ;
        dbo:lyricsBy ?writer .
  ?writer dbo:musicalBand ?band2 .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
328,44,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v2 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  
  # Awarded Order of Suvorov
  ?awards dbo:recipient ?person ;
          dbo:name dbr:Order_of_Suvorov .

  # Commanded forces under Ferenc Szálasi
  ?commanderRole dbo:agent ?person ;
                 dbo:roleName ?role ;
                 dbo:organization dbr:Ferenc_Szálasi .
  
  # Led an office or government agency under Joseph Stalin
  ?officeRole dbo:agent ?person ;
              dbo:roleName ?role ;
              dbo:organization dbr:Joseph_Stalin .

}
```

This query assumes that DBpedia has structured data linking individuals to their military awards, roles, and organizations. It uses the `dbo:MilitaryPerson` class to filter for military personnel and checks for specific relationships with Ferenc Szálasi and Joseph Stalin.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
294,28,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v5 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?architectRestingPlace ?settlementEntity ?politicianRestingPlace WHERE {
  # Resting place of the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
  OPTIONAL { ?architect dbp:placeOfBurial ?architectRestingPlace . }

  # Entity in the birthplace (settlement) of Marion James
  ?marion dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(STR(?marion), ""http://dbpedia.org/resource/Marion_James""))
  OPTIONAL { 
    ?birthPlace a dbo:Settlement ;
               dbp:location ?settlementEntity .
  }

  # Resting place of the awardee, who is a politician, of Distinguished Service Medal (U.S. Army)
  ?medalAwardee dbo:award ?dsmAward .
  FILTER(STRSTARTS(STR(?dsmAward), ""http://dbpedia.org/resource/Distinguished_Service_Medal_(United_States_Army)""))
  OPTIONAL { 
    ?medalAwardee a dbo:Politician ;
                  dbp:placeOfBurial ?politicianRestingPlace .
  }
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
528,41,test,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battlePisaguaForce ?battleLaRinconadaWar ?camperoForce
WHERE {
  # Battle of Pisagua military force
  OPTIONAL {
    ?battlePisagua dbo:participatedIn ?pisaguaEvent .
    ?pisaguaEvent dbo:militaryUnit ?battlePisaguaForce .
    FILTER(CONTAINS(LCASE(STR(?pisaguaEvent)), ""battle of pisagua""))
  }

  # Battle of La Rinconada de Ate commander's war
  OPTIONAL {
    ?laRinconadaCommander dbo:commanded ?rinconadaBattle .
    ?rinconadaBattle dbo:participatedIn ?battleLaRinconadaWar .
    FILTER(CONTAINS(LCASE(STR(?rinconadaBattle)), ""battle of la rinconada de ate""))
  }

  # Narciso Campero's military force
  OPTIONAL {
    ?campero dbr:Narciso_Campero .
    ?campero dbo:commanded ?camperoForce .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
9,49,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Northern_Ireland_Forum .

  ?mayor dbo:almaMater ?university .
  
  ?university a dbo:EducationalInstitution .

  ?organization a dbo:Organization ;
                dbo:location dbr:Northern_Ireland ;
                rdfs:label ?nickname .
  
  BIND(?university AS ?almaMater)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,41,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlaceCountry ?war1 ?war2
WHERE {
  # Bob Heffron's birthplace
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .

  # Check if the birthplace is a country
  OPTIONAL { ?birthPlace rdf:type dbo:Country . }
  
  # War for which he was awarded Knight Grand Cross of the Order of the Bath
  OPTIONAL {
    dbr:Bob_Heffron dbp:honours ""Knight Grand Cross of the Order of the Bath""@en .
    ?honourAwardedFor dbo:relatedEvent ?war1 .
  }

  # War associated with the New Zealand Army
  OPTIONAL {
    ?nzWar dbo:participatingOrganisation dbr:New_Zealand_Army ;
           rdf:type dbo:MilitaryConflict .
    BIND(?nzWar AS ?war2)
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
485,21,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom and birth place of Thomas Warner (poet).",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region1 ?region2 WHERE {
  # Find birth place of Joseph Whitaker (naturalist)
  OPTIONAL {
    ?jw dbo:birthPlace ?place1 .
    FILTER(STRSTARTS(STR(?place1), ""http://dbpedia.org/resource/""))
    ?place1 a dbo:Region .
    ?place1 dbo:country dbr:United_Kingdom .
    BIND(?place1 AS ?region1)
  }
  
  # Find birth place of Thomas Warner (poet)
  OPTIONAL {
    ?tw dbo:birthPlace ?place2 .
    FILTER(STRSTARTS(STR(?place2), ""http://dbpedia.org/resource/""))
    ?place2 a dbo:Region .
    ?place2 dbo:country dbr:United_Kingdom .
    BIND(?place2 AS ?region2)
  }
  
  # Identify the individuals
  VALUES ?jw { dbr:Joseph_Whitaker_(naturalist) }
  VALUES ?tw { dbr:Thomas_Warner_(poet) }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,52,test,"Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v5 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?chileanForce WHERE {
  # Find the Battle of La Rinconada de Ate and its commander Narciso Campero
  ?battle a dbo:Battle ;
          dbo:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_La_Rinconada_de_Ate"" && str(?commander) = ""Narciso_Campero"") .

  # Find military forces from Chile involved in societal events
  ?chileanForce a dbo:MilitaryUnit ;
                dbo:country dbr:Chile .
  
  OPTIONAL {
    ?societalEvent dbo:agent ?chileanForce .
    FILTER (dbo:SocietalEvent(?societalEvent))
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
534,19,test,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician) and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/owner> ?v4 . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?headquarters
WHERE {
  # Desmond FitzGerald's child who is a politician and office holder
  ?child dbo:parent dbr:Desmond_FitzGerald_(politician) .
  ?child dbo:occupation dbr:Politician ;
         dbo:officeHolder true .

  # Birthplace of the child
  ?child dbo:birthPlace ?location .
  ?location rdfs:label ?birthPlace .

  # Venue for the 2012 Pro12 Grand Final
  ?venue dbo:event dbr:2012_Pro12_Grand_Final ;
         a dbo:Venue, dbo:ArchitecturalStructure .

  # Owner of the venue and their headquarters
  ?owner dbo:owns ?venue .
  ?owner dbo:headquarters ?hqLocation .
  ?hqLocation rdfs:label ?headquarters .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
391,33,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouseOf ?sherry ;
          dbo:nationality dbr:Germany .

  # Find the person native to Compton, California
  ?person dbo:birthPlace dbr:Compton,_California ;
          a dbo:Person .

  # Ensure this person is the spouse of Sherry Hormann
  FILTER(?spouse = ?person)

  # Identify the claim to fame (work) of this person
  ?work dbo:creator ?person ;
        a dbo:Film ; # Assuming it's a film, adjust if necessary

  # Find the actor involved in that work
  ?actor dbo:starring ?work .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
54,54,test,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Father of Soe Min Wimala Dewi
  ?father dbo:child dbr:Soe_Min_Wimala_Dewi .
  
  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  ?predecessor dbo:succeededBy dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .

  # Parent of the child of the parent of Thado Minsaw of Prome
  ?parentOfParent dbo:child dbr:Thado_Minsaw_of_Prome .
  ?childOfParent dbo:parent ?parentOfParent .
  ?individual dbo:parent ?childOfParent .

  # Find common individual
  FILTER (?father = ?predecessor && ?predecessor = ?individual)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
10,27,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?sharonBirthName ?mattArtist ?vibertBandMember
WHERE {
  # Sharon Kao's birth name
  dbr:Sharon_Kao dbo:birthName ?sharonBirthName .

  # Matt Colton's associated musical artist
  dbr:Matt_Colton dbo:musicalArtist ?mattArtist .

  # Luke Francis Vibert and his band member who is an artist
  dbr:Luke_Francis_Vibert dbo:bandMember ?vibertBandMember .
  FILTER EXISTS { ?vibertBandMember a dbo:Artist . }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
528,65,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleWar ?militaryForce ?commander ?narcisoForce WHERE {
  # Battle of Pisagua details
  VALUES ?battle { dbr:Battle_of_Pisagua }
  
  # Find the war associated with the battle
  ?battle dbo:partOf ?battleWar .
  
  # Find military forces involved in the battle
  ?battle dbo:militaryConflicts ?militaryForce .

  # Find commanders on January 9th (assuming a specific year, e.g., 1879)
  OPTIONAL {
    ?commander dbo:dateOfBirth ?dob .
    ?commander dbo:birthPlace ?birthPlace .
    ?commander dbo:deathDate ?dod .
    ?commander dbo:occupation ""Military commander""@en .
    
    # Assuming a specific year for January 9th
    FILTER EXISTS { 
      ?event dbo:date ?date .
      ?event dbo:agent ?commander .
      BIND(YEAR(?date) AS ?year)
      FILTER (?year = 1879 && MONTH(?date) = 1 && DAY(?date) = 9)
    }
  }

  # Find Narciso Campero Leyes and his military force
  VALUES ?narciso { dbr:Narciso_Campero_Leyes }
  OPTIONAL {
    ?narciso dbo:occupation ""Military commander""@en .
    ?narciso dbo:militaryConflicts ?narcisoForce .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
492,59,test,"Give me the person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Step 1: Find the author of ""French Algeria""
  ?author dbo:work dbr:French_Algeria .
  
  # Step 2: Identify the work associated with this person
  ?work dbo:author ?author .

  # Step 3: Determine the decedent at this work
  ?decedent dbo:deathPlace ?work .

  # Step 4: Find the commander in a military conflict and an event related to the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?commander dbo:commanded ?battle .
  
  FILTER (?decedent = ?commander)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
488,58,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace
WHERE {
  # Tokugawa Masako's spouse
  ?spouse a dbo:Spouse ;
          dbo:spouse dbr:Tokugawa_Masako .

  # Spouse's father (Royalty)
  ?father a dbo:Father ;
          dbo:child ?spouse .
  
  FILTER EXISTS { ?father dbo:royalTitle ?title . }

  # Administration of the spouse's father
  OPTIONAL {
    ?administration dbo:head dbr:Father_of_Spouse ;
                    rdfs:label ?adminLabel .
  }
  
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Yūki Hideyasu's father (Politician)
  ?yukiFather a dbo:Father ;
              dbo:child dbr:Yūki_Hideyasu .
  
  FILTER EXISTS { ?yukiFather dbo:occupation dbr:Politician . }

  # Death place of Yūki Hideyasu's father
  OPTIONAL {
    ?deathPlace dbo:deathPlace ?yukiFather .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,56,test,"Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?alterEgo ?associatedArtist ?albumArtist
WHERE {
  # Producer of ""Westside Story (song)""
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Professional in the alter ego of The Shadow
  ?shadowAlterEgo rdfs:label ""The Shadow""@en .
  ?shadowAlterEgo dbo:profession ?alterEgo .
  
  # Associated musical artist of the writer (alter ego)
  ?writer dbr:The_Shadow dbo:alias ?shadowAlterEgo .
  ?writer dbo:musicalArtist ?associatedArtist .

  # Artist of the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get dbo:artist ?albumArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
232,54,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of London.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?person dbo:birthName ""John Devon Roland Pertwee""@en .
  ?person dbo:spouse dbr:Benny_Hill .
  ?person dbo:child dbr:Benny_Hill .
  ?person dbo:birthPlace dbr:London .

  ?hill dbo:profession dbr:Actor ;
        dbo:profession dbr:Narrator ;
        dbo:profession dbr:Producer .

  ?film dbo:title ""The Benny Hill Show""@en ;
        dbo:actor ?actor .

  ?conflict dbo:name ?name .
  FILTER(?name IN (""World War II"", ""Second World War""))
  ?hill dbo:servedInMilitaryConflict ?conflict .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
184,18,test,Give me the parent of Archduchess Ilona of Austria and parent of Géza von Habsburg and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1Parent ?person2Parent ?archdukeChild
WHERE {
  # Parent of Archduchess Ilona of Austria
  ?ilona dbo:parent ?person1Parent .
  VALUES ?ilona { <http://dbpedia.org/resource/Ilona_of_Austria> }

  # Parent of Géza von Habsburg
  ?geza dbo:parent ?person2Parent .
  VALUES ?geza { <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> }

  # Child of Archduke Joseph August of Austria
  ?archduke dbp:child ?archdukeChild .
  VALUES ?archduke { <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
994,33,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?artist1 ?band2 ?artist2 WHERE {
  # Fredrik Thordendal and his band
  ?person a dbo:MusicArtist ;
          foaf:name ""Fredrik Thordendal"" .
  
  ?person dbo:memberOfBand ?band1 .
  FILTER (isLiteral(?band1) && regex(str(?band1), ""organisation"", ""i""))

  # Associated musical artists of Fredrik Thordendal
  ?band1 dbo:associatedMusicalArtist ?artist1 .

  # S.A. Slayer and his band/group/organization
  ?person2 a dbo:MusicArtist ;
           foaf:name ""S.A. Slayer"" .
  
  ?person2 dbo:memberOfBand ?band2 .
  FILTER (isLiteral(?band2) && regex(str(?band2), ""organisation"", ""i""))

  # Associated musical artists of S.A. Slayer
  ?band2 dbo:associatedMusicalArtist ?artist2 .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
184,47,test,"Give me the parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?grandchild WHERE {
  # Archduke Ladislaus Philipp of Austria
  VALUES ?archduke { dbr:Archduke_Ladislaus_Philipp_of_Austria }

  # Find the native of Budapest who is a child of the archduke
  ?native dbo:nativePlace dbr:Budapest .
  ?native dbo:parent ?child .

  # The parent of this native (grandchild of the archduke)
  ?child dbo:parent ?parent .

  # Ensure the grandchild is royalty
  ?grandchild dbo:parent ?child .
  ?grandchild a dbo:RoyalFamilyMember .

  FILTER(?native = ?archduke)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,60,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Antiochus II Theos and his successor who is royalty
  ?antiochus2 dbo:successor ?successor .
  FILTER (strstarts(str(?antiochus2), ""Antiochus_II_Theos"")) .
  
  # Successor's child who is royalty
  ?successor dbo:child ?childOfSuccessor .
  ?childOfSuccessor rdf:type dbo:Monarch .

  # Commander in Battle of Panium and their child
  ?battle dbr:Battle_of_Panium .
  ?commander dbo:commanderIn ?battle .
  ?commander dbo:child ?childOfCommander .

  # Parent of the commander's child
  ?parent dbo:child ?childOfCommander .

  # Find the child of the successor who is royalty and also a parent of the commander's child
  ?childOfSuccessor dbo:child ?childOfChild .
  FILTER (?childOfChild = ?parent)
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
184,55,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find the child of Archduke Joseph Francis of Austria
  ?child1 dbo:spouse|dbo:child dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 2: Find the parent of the native of Budapest
  ?native dbo:nativePlace dbr:Budapest .
  ?parent dbo:child ?native .

  # Step 3: Find the child of the child of Archduke Joseph Karl of Austria
  ?grandchild dbo:child ?child2 .
  ?child2 dbo:child dbr:Archduke_Joseph_Karl_of_Austria .

  # Combine conditions to find a common parent
  FILTER (?parent = ?child1 || ?parent = ?grandchild)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
92,37,test,"Give me the band of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?associatedArtist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor dbo:starring dbr:Return_to_Nuke_'Em_High_Volume_1 .
  
  # Step 2: Identify a person born who is an artist and associated with this actor
  ?person dbo:birthPlace ?place ;
          rdf:type dbo:Artist ;
          foaf:knows ?actor .

  # Step 3: Find the band of Joseph Michael
  dbr:Joseph_Michael dbo:bandMember ?band .
  
  # Step 4: Check for association between this band and the identified artist
  ?band foaf:member ?associatedArtist ;
        foaf:knows ?person .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,69,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force1 ?war1 ?commander ?war2 ?militaryForce ?event
WHERE {
  # Step 1: Find Narciso Campero's birth name
  VALUES ?campero { dbr:Narciso_Campero }
  ?campero dbo:birthName ?birthName .

  # Step 2: Determine the military force associated with this person
  OPTIONAL {
    ?person rdfs:label ?birthName .
    ?person dbo:militaryForce ?force1 .
    ?force1 dbo:partOf ?war1 .
  }

  # Step 3: Battle of La Rinconada de Ate
  VALUES ?battle { dbr:Battle_of_La_Rinconada_de_Ate }
  ?battle dbo:commander ?commander .
  ?commander dbo:militaryForce ?force2 .
  ?force2 dbo:partOf ?war2 .

  # Step 4: Military force in a societal event in Chile
  ?event dbo:location dbr:Chile ;
         dbo:type dbr:Societal_event .
  OPTIONAL {
    ?militaryForce dbo:involvedIn ?event .
  }
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
48,20,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/starring> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfActor ?bandOfWriter
WHERE {
  # Find the show with Stacey Dash
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Find an actor from that show who is also a musical artist
  ?actor dbo:starring ?show ;
         foaf:page ?artistPage .
  ?artistPage dbo:wikiPageRedirects ?musicalArtist .

  # Get the band of this musical artist
  ?bandOfActor dbo:leadMember ?musicalArtist .

  # Find works by Shellback (record producer)
  ?work dbo:producer dbr:Shellback_(record_producer) .
  
  # Find a writer of one of these works
  ?writer dbo:author ?work .

  # Get the band associated with this writer
  ?bandOfWriter dbo:leadMember ?writer .
}
```",6,8,7,3,2,3,2,20,0,0,3,0,0.0,0
314,21,test,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić and person deceased at Madrid.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:award ?award .
  ?award dbo:recipientAge ""30""^^xsd:int .
  
  ?person dbo:militaryRank ?rank .
  FILTER (str(?rank) = ""Commander"") .

  ?event dbo:associatedPerson ?person .
  ?societalEvent dbo:relatedEvent ?event .
  
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:deceased true .
  
  OPTIONAL { ?person dbp:spouse dbr:Lisa_Gavrić . }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
161,50,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInForce ?militaryForce
WHERE {
  # Find events where Emilio Mola was a commander
  ?event dbo:commander dbr:Emilio_Mola .
  
  # Identify the predecessor of Indalecio Prieto
  ?indalecioPrieto dbo:predecessor ?predecessor .

  # Ensure the predecessor is involved in a military force or societal event
  ?militaryForce dbo:commander ?predecessor ;
                (dbo:societalEvent|dbo:militaryConflict) ?event .
  
  # Bind the commander and military force to variables
  BIND(dbr:Emilio_Mola AS ?commanderInForce)
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
767,66,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?fictionalCharacter ?almaMater
WHERE {
  # Entity in the administration that is a settlement of Green
  ?administration dbo:location dbr:Green .
  ?administration dbo:settlement ?settlement .

  # Alter ego of the persona, fictional character of Matthew Burland
  ?fictionalCharacter dbo:creator dbr:Matthew_Burland .
  
  # Alma mater of the administration of George K. Nash
  ?nashAdministration dbo:administrator dbr:George_K._Nash .
  ?nashAdministration dbo:almaMater ?almaMater .

  # Linking all components together
  FILTER(?settlement = ?fictionalCharacter)
  FILTER(?fictionalCharacter = ?almaMater)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
182,21,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warJagathDias ?entityTamaraNationalityWar ?warMaheshSenanayake
WHERE {
  # Wars associated with Jagath Dias
  OPTIONAL { 
    ?person dbr:Jagath_Dias .
    ?person dbo:participatedIn ?warJagathDias .
  }

  # Tamara Kunanayakam's nationality and related wars
  ?tamaraNationality dbr:Tamara_Kunanayakam ;
                    dbo:nationality ?nationalityEntity .
  OPTIONAL {
    ?entityTamaraNationalityWar dbo:location ?nationalityEntity ;
                                a dbo:MilitaryConflict .
  }

  # Wars associated with Mahesh Senanayake
  OPTIONAL { 
    ?person dbr:Mahesh_Senanayake .
    ?person dbo:participatedIn ?warMaheshSenanayake .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
92,71,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v4 . ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v8 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?musicalArtist WHERE {
  # Step 1: Find actor of ""Return to Nuke 'Em High Volume 1""
  ?film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
        dbo:actor ?actor .

  # Ensure the actor is also an artist
  ?actor dbo:occupation dbr:Artist .

  # Step 2: Find reference to ""Nevermore"" (2006 film)
  ?referenceFilm dbr:Nevermore_(2006_film) ;
                 dbo:artist ?referenceArtist .

  # Ensure the reference artist is also an artist
  ?referenceArtist dbo:occupation dbr:Artist .

  # Step 3: Find band of Joseph Michael
  ?person dbr:Joseph_Michael ;
          dbo:birthName ?birthName ;
          dbo:bandMember ?band .

  # Ensure the person is also an artist
  ?person dbo:occupation dbr:Artist .

  # Final step: Get the associated musical artist
  ?actor dbo:musicalArtist ?musicalArtist .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
92,30,test,Give me the band of the person born as Joseph Michael Furney and band member of Nevermore and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Identify Warrel Dane by his birth name and known aliases
  VALUES ?person { 
    dbr:Warrel_Dane 
    dbr:Joseph_Michael_Furney 
  }
  
  # Find bands associated with him
  ?person dbo:musicalArtist ?band .
  
  # Filter for specific bands like Nevermore or associations with Jim Sheppard
  VALUES ?specificBand { 
    dbr:Nevermore 
    dbr:Jim_Sheppard 
  }

  OPTIONAL {
    ?band dbo:member ?member .
    ?member foaf:name ""Warrel Dane""@en .
  }
  
  FILTER(?band IN (?specificBand))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
55,21,test,"Give me the band member of Metallica and band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?metallicaMember ?gunsNrosesMember ?newstedBand
WHERE {
  # Metallica members
  ?metallicaMember dbo:memberOf dbr:Metallica .
  
  # Guns N' Roses members
  ?gunsNrosesMember dbo:memberOf dbr:Guns_N'_Roses .

  # Newsted's band
  ?newstedBand dbo:member dbr:Lars_Åke_David_Hjelmberg_Newsted .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
801,22,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify the song and its writer
  dbr:40_Dayz_&_40_Nightz dbo:lyricsBy dbr:Lil_Wayne .
  
  # Find artists associated with Lil Wayne
  dbr:Lil_Wayne dbo:associatedMusicalArtist ?artist .

  # Ensure the artist is both a musical artist and an artist
  ?artist rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .
}
```",3,5,4,2,2,3,3,71,0,0,22,0,0.0,0
391,46,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find works associated with Michael Ballhaus
  ?work dbo:director dbr:Michael_Ballhaus .
  
  # Get actors from those works
  ?work dbo:starring ?actor .

  # Find a person native to Jackson, Tennessee (The City with Soul)
  ?person dbo:nativePlace dbr:Jackson,_Tennessee ;
          foaf:name ?name .

  # Ensure the actor is the same as the person from Jackson, Tennessee
  FILTER(?actor = ?person)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
378,55,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peninsularWar ?berzeliusWar ?eliottFame
WHERE {
  # Wars associated with Arthur Wellesley (Duke of Wellington)
  dbr:Athur_Wellesley dbo:participatedIn ?peninsularWar .
  
  # Wars associated with Jöns Jacob Berzelius
  dbr:Jöns_Jacob_Berzelius dbo:participatedIn ?berzeliusWar .

  # Claim to fame of George Augustus Eliott
  dbr:George_Augustus_Eliott dbo:famousFor ?eliottFame .
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
55,26,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Used to Love Her producer
  dbr:Used_to_Love_Her dbo:producer ?producer .
  
  # Producer is a band
  ?producer rdf:type dbr:Band .

  # Band member of Metallica
  ?metallicaMember dbo:memberOf dbr:Metallica ;
                   dbo:memberOf ?band .
  
  # Newsted's band
  dbr:Jason_Newsted dbo:memberOf ?newstedBand .

  # Commonality between the producer-band and Metallica
  FILTER(?band = ?producer || ?band = ?newstedBand)

  # Return the common band member
  ?metallicaMember rdfs:label ?bandMember .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
161,39,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Identify Francisco Franco as ""El Director""
  dbr:Francisco_Franco a dbo:Person ;
    rdfs:label ""Francisco Franco""@en ;
    dbo:nationality dbr:Spain ;
    dbo:spouseOrPartner ?partner .
  
  # Find the military force associated with him during the Spanish Civil War
  ?militaryForce dbo:commander ?franco ;
                dbo:partOfEvent dbr:Spanish_Civil_War .

  # Ensure that Francisco Franco is identified as a commander
  ?franco rdfs:label ""Francisco Franco""@en .
  
  # Get the role of commander for clarity
  ?militaryForce dbo:commander ?commander ;
                rdfs:label ?forceLabel .
}
```

This query does the following:
- Identifies Francisco Franco as a person and links him to Spain.
- Searches for military forces associated with him during the Spanish Civil War.
- Retrieves the commander of those forces, which should include Franco himself.",4,5,5,3,2,3,3,71,0,0,32,0,0.0,0
959,63,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of Yōichi Masuzoe.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Identify Yōichi Masuzoe's native country
  ?yoshiichi a dbo:Person ;
             dbp:birthYear ""1958""^^xsd:gYear ;
             dbp:nativeCountry ?country .

  # Step 2: Find Takashi Sekizuka's team and its manager
  ?sekizuka a dbo:Person ;
            dbp:name ""Takashi Sekizuka""@en ;
            dbo:team ?team .
  
  ?team dbo:manager ?manager .

  # Step 3: Ensure the manager is an alumnus of a Japanese university
  ?manager dbo:almaMater ?university ;
           dbp:nationality ""Japanese""^^xsd:string .
  
  ?university a dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:EducationalOrganization .

}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
959,49,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?almaMaterName WHERE {
  # Find the manager of Kashima Antlers in 1998
  ?team dbo:coach ?manager .
  ?manager a dbo:SportsManager ;
           foaf:name ?managerName .

  # Ensure the team is related to the 1998 season
  ?team dbp:sport ""Football"" ;
        dbp:season ""1998"" ;
        dbr:Kashima_Antlers .

  # Find Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  ?almaMater a dbo:University ;
             dbo:country ""Japan"" ;
             rdf:type dbo:Organisation, dbo:EducationalInstitution .

  # Check if the manager attended the same alma mater
  ?manager dbo:almaMater ?almaMater .
  
  # Get the name of the alma mater
  ?almaMater foaf:name ?almaMaterName .
}
```",5,10,6,3,2,3,3,71,0,0,2,0,0.0,0
391,32,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:director dbr:Michael_Ballhaus .
  ?film dbo:location dbr:Cincinnati ; 
        dbo:starring ?actor .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
54,62,test,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?person WHERE {
  # Find Ameitta Thiri Maha Dhamma Dewi's predecessor
  ?ameitta a dbo:Monarch ;
           dbo:succession ?succession .
  OPTIONAL { ?succession dbo:predecessor ?predecessor . }

  # Find Thado Minsaw of Prome and his grandparent
  ?thadoMinsaw a dbo:Monarch ;
               rdfs:label ""Thado Minsaw""@en ;
               dbo:country dbr:Ava .
  ?thadoParent dbo:child ?thadoMinsaw .
  ?grandparent dbo:child ?thadoParent .

  # Find Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Monarch ;
             rdfs:label ""Thinkhaya""@en ;
             dbo:country dbr:Pagan .
  ?thinkhayaChild dbo:child ?thinkhaya .

  # The person we are looking for is the grandparent of Thado Minsaw and child of Thinkhaya
  ?person rdf:type dbo:Monarch ;
          dbo:child ?grandparent ;
          dbo:child ?thinkhayaChild .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
488,49,test,"Give me the birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?administration
WHERE {
  # Saigō Takamori as a commander in Boshin War
  dbr:Saigō_Takamori dbo:nationality dbr:Japan ;
                     dbo:birthPlace ?birthPlace .

  # Tokugawa Masako's spouse
  dbr:Tokugawa_Masako dbo:spouse dbr:Naruhito .

  # Naruhito's father
  dbr:Naruhito dbo:father dbr:Akihito .

  # Akihito's administration or position
  OPTIONAL { dbr:Akihito dbo:position ?administration }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
747,71,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/writer> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://dbpedia.org/ontology/birthDate> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?athlete ?bandOfAthlete ?personaShena ?bandOfShena ?songWriter ?bandOfSongWriter
WHERE {
  # Step 1: Find the decedent's birthdate
  ?decedent dbo:deathDate ?deathDate .
  
  # Step 2: Find an athlete and soccer player from Zolotonosha born on the same date as the decedent
  ?athlete dbo:birthDate ?birthdate ;
           dbo:sport dbr:Soccer ;
           dbo:placeOfBirth dbr:Zolotonosha ;
           dbp:nationality ?nationality .
  
  FILTER (?birthdate = ?deathDate)
  
  # Step 3: Find the band of this athlete
  OPTIONAL { ?athlete dbo:musicalBand ?bandOfAthlete }
  
  # Step 4: Identify Shèna and her band
  dbr:Shèna dbo:birthName ?personaShena .
  OPTIONAL { ?personaShena dbo:musicalBand ?bandOfShena }
  
  # Step 5: Find the writer of a song by Amba Shepherd
  ?song dbp:lyricsBy ?songWriter ;
        dbo:performer dbr:Amba_Shepherd .
  
  # Step 6: Find the band associated with this songwriter
  OPTIONAL { ?songWriter dbo:musicalBand ?bandOfSongWriter }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
492,63,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?decedentPerson WHERE {
  # Frédéric-Georges Herr and the war he was involved in
  dbr:Frédéric_Georges_Herr dbo:militaryConflict ?war .
  
  # Commander of the war
  ?war dbo:commander ?commander .

  # Capital of Algeria
  dbr:Algiers a dbo:Capital ; 
             dbo:country dbr:Algeria .

  # Person decedent at the capital of Algeria
  ?decedentPerson dbo:placeOfDeath dbr:Algiers ;
                  dbo:dateOfDeath ?deathDate .

  # Work of the author of ""French Algeria""
  dbr:François_Mitterrand dbo:author dbr:French_Algeria .
  dbr:French_Algeria dbo:work ?work .
  
  # Linking decedent person to the work
  ?decedentPerson dbo:relatedWork ?work .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
617,68,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v4 <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v5 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Antiochus (son of Antiochus III the Great)
  ?antiochusIII a dbo:Monarch ;
                dbo:spouse ?mother .
  
  ?antiochus dbr:Antiochus_IV_Epiphanes ;
             dbo:father ?antiochusIII .

  # Step 2: Child of Antiochus
  ?child dbo:parent ?antiochus .

  # Step 3: Grandchild (Child of the child)
  ?grandchild dbo:parent ?child .

  # Step 4: Successor of Antiochus II Theos
  ?antiochusII a dbo:Monarch ;
               dbo:successor ?successor .
  
  ?successorChild dbo:parent ?successor .

  # Step 5: Spouse of the child of the successor
  ?spouse dbo:spouse ?successorChild .

  # Step 6: Parent of the grandchild (from step 3)
  ?parent dbo:parent ?grandchild .
  
  FILTER (?parent != ?antiochus && ?parent != ?child) # Ensure it's not Antiochus or his direct child
}",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
981,19,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of Time in Indonesia.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          dbo:occupation dbr:Beauty_queen ;
          dbo:author dbr:Kamikaze_Girls ;
          dbo:country dbr:Indonesia .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
}
```

This query assumes that there is an entity linking the person to ""Kamikaze Girls"" and being a beauty queen in Indonesia. Adjustments might be needed based on actual DBpedia data.",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
378,60,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?triggeClaimToFame ?gahnWar
WHERE {
  # Find Thomas Trigge's claim to fame in a military conflict
  ?trigge dbo:occupation dbr:Military_person .
  ?trigge dbo:notableFor ?triggeClaimToFame .
  
  # Find Carl Pontus Gahn and the war associated with him
  ?gahn dbo:birthName ""Carl Pontus Gahn"" .
  ?gahn dbo:associatedWithWar ?gahnWar .
}
```",6,9,7,3,2,3,3,71,0,0,2,0,0.0,0
9,33,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterAwardee ?almaMaterJohnAlderdice WHERE {
  # Find the award related to Royal Medals
  ?award dbo:wikiPageRedirects dbr:Royal_Medal .
  
  # Get awardees of this award and their alma maters
  ?awardee dbo:award ?award ;
           dbo:almaMater ?almaMaterAwardee .

  # Find John Alderdice's alma mater
  dbr:John_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,18,test,"Give me the birth place of the person born, that is a beauty queen, as  and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:BeautyQueen ;
          dbo:birthPlace ?birthPlace ;
          dbo:country dbr:Indonesia .
  
  OPTIONAL { 
    ?region dbo:timeZone ""Asia/Jakarta""^^xsd:string .
    ?person dbo:location ?region .
  }
  
  FILTER EXISTS {
    ?region rdfs:label ""Salak, North Sumatra""@en .
  }
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology and properties.
- **SELECT**: We are interested in the `?birthPlace` of the person.
- **FILTER**: Ensure the person is a beauty queen (`dbo:BeautyQueen`) and born in Indonesia (`dbo:country dbr:Indonesia`).
- **OPTIONAL**: Check if the person is associated with a region that has the time zone ""Asia/Jakarta"".
- **FILTER EXISTS**: Ensure the region's label matches ""Salak, North Sumatra"".

This query assumes that DBpedia has structured data for beauty queens and their associations with regions and time zones. Adjustments might be necessary based on actual data availability.",5,6,6,3,2,3,2,20,0,0,19,0,0.0,0
54,49,test,"Give me the child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi a dbo:Person ;
                   dbp:father ?father .

  # Step 2: Identify Thihapate of Mohnyin and his child
  ?thihapate a dbo:Person ;
             dbp:title ""Thihapate of Mohnyin"" ;
             dbp:child ?child .

  # Step 3: Find the predecessor (father) of Soe Min Wimala Dewi
  ?predecessor dbp:child ?soeMinWimalaDewi .

  # Step 4: Ensure the person is an office holder and royalty
  ?person dbo:officeHolderOf ?office ;
          a dbo:RoyalPerson .

  # Step 5: Match the predecessor with the child of Thihapate
  FILTER (?predecessor = ?father && ?person = ?child)
}
```

This query attempts to find a person who is both an office holder and royalty, matching the described familial relationships. Adjustments may be needed based on actual DBpedia data availability.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,48,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Emilio Mola as commander in a military force (event)
  ?commandEvent dbo:agent dbr:Emilio_Mola ;
                dbo:subjectOf ?militaryForce .
  
  # The military force is both a societal event and a military conflict
  ?militaryForce rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .

  # Context of Francoist Spain
  ?militaryForce dbo:place dbr:Francoist_Spain .
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
303,27,test,"Give me the party of Guillermo Endara and party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endaraParty ?ariasBirthplace ?valleCountry
WHERE {
  # Guillermo Endara's party
  dbr:Guillermo_Endara dbo:party ?endaraParty .

  # Arnulfo Arias Madrid's birthplace
  dbr:Arnulfo_Arias_Madrid dbo:birthPlace ?ariasBirthplace .

  # El Valle de Antón's country
  dbr:El_Valle_de_Antón dbo:country ?valleCountry .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
488,45,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace
WHERE {
  # Tokugawa Masako's spouse
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en .
  
  ?spouse dbo:spouseOf ?masako ;
          foaf:name ?spouseName .

  # Spouse's father (if royalty)
  ?father dbo:child ?spouse ;
          foaf:name ?fatherName ;
          a dbo:Monarch .

  OPTIONAL {
    ?administration dbo:monarch ?father .
    BIND(?administration AS ?adminResult)
  }

  # Enomoto Takeaki's birthplace
  ?enomoto a dbo:Person ;
           foaf:name ""Enomoto Takeaki""@en .
  
  ?birthPlace dbo:birthPlace ?enomoto .

  # Tokugawa Ieyasu's death place
  ?ieyasu a dbo:Person ;
          foaf:name ""Tokugawa Ieyasu""@en .
  
  ?deathPlace dbo:deathPlace ?ieyasu .
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
281,61,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  # Find the leader of the 1962 NSW state election
  ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  
  # Get the birthplace country of this leader
  ?leader dbo:birthPlaceCountry ?country .

  # Find a military unit in the New Zealand Army related to war
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army ;
                dbo:profession ""war"" .
  
  # Ensure the military unit is associated with the leader's birthplace country
  ?militaryUnit dbo:country ?country .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
421,23,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .
  
  # Find a band member of an awardee from ""Awards and nominations""
  ?award dbr:Awards_and_nominations ?awardee .
  ?bandMember dbo:memberOf ?awardee ;
              dbo:name ?person .
}
```

This query does the following:
- Retrieves Dino Merlin's birth name.
- Finds a band member of any awardee listed under ""Awards and nominations.""",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
801,19,test,Give me the producer of Westside Story (song) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?alterEgo
WHERE {
  # Find the producer of ""Westside Story (song)""
  dbr:Westside_Story_(song) dbo:producer ?producer .

  # Find the professional alter ego of ""The Shadow""
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
994,44,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?meshuggahArtist ?slayerArtist
WHERE {
  # Donald Maynard Dokken's band members
  dbr:Donald_Maynard_Dokken a dbo:MusicalArtist .
  ?bandMember dbo:memberOf dbr:Dokken ;
              dbo:associatedBandOrMusicalArtist dbr:Donald_Maynard_Dokken .

  # Meshuggah's associated musical artists
  dbr:Meshuggah a (dbo:Band | dbo:Group | dbo:Organization) .
  ?meshuggahArtist dbo:memberOf dbr:Meshuggah ;
                   dbo:associatedBandOrMusicalArtist dbr:Meshuggah .

  # S.A. Slayer's associated musical artists
  dbr:S._A._Slayer a dbo:MusicalArtist ; # Assuming this is Tom Araya from Slayer
                    dbo:memberOf dbr:Slayer .
  ?slayerArtist dbo:associatedBandOrMusicalArtist dbr:S._A._Slayer ;
                dbo:memberOf dbr:Slayer .
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,36,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Jon Pertwee's child
  ?jonPertwee dbo:child ?child .
  
  FILTER (str(?jonPertwee) = ""Jon_Pertwee"")

  # Child's native residence
  ?child dbo:nativePlace ?nativePlace .

  # Native place is a settlement in Britain
  ?nativePlace rdf:type dbo:Settlement ;
               dbo:country dbr:United_Kingdom .

  # Settlement's native is a politician and office holder from France
  ?nativePlace dbo:native ?politician .
  
  ?politician rdf:type dbo:Politician, dbo:OfficeHolder ;
              dbo:birthPlace dbr:France .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
404,64,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthName WHERE {
  # Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Princess ;
            foaf:surname ""Prussia"" .
  
  ?spouse dbo:spouseOf ?princess ;
          dbo:birthName ?spouseBirthName .

  # Spouse's father
  ?father dbo:child ?spouse .

  # Child of the spouse's father who is royalty and has a birth name matching Princess Victoria Louise
  ?child dbo:parent ?father ;
         a dbo:Monarch ;
         dbo:birthName ?childBirthName .
  
  # Parent of Prince Ernest Augustus of Hanover (born 1914)
  ?prince dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) dbo:parent ?child .

  FILTER (?spouseBirthName = ""Ernst August, Crown Prince of Hanover"")
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,36,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?movie WHERE {
  ?actor dbo:birthPlace dbr:Compton,_California .
  ?actor dbo:profession dbr:Actor .

  ?movie a dbo:Film ;
         dbo:genre dbr:Television_show ;
         dbo:starring ?actor .

  FILTER EXISTS { ?movie dbo:abstract ?abstract . }
}
```

This query does the following:
- Selects actors whose birthplace is Compton, California.
- Ensures these individuals have a profession of ""Actor.""
- Finds movies that are categorized as both films and television shows (using genre).
- Checks if the actor starred in such a movie.",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
9,55,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:awardReceived dbr:Royal_Medal .
  ?person dbo:almaMater dbr:Queen's_University_Belfast .
  OPTIONAL { ?mayor dbo:almaMater dbr:Queen's_University_Belfast . }
  FILTER EXISTS { ?person rdfs:label ?label . FILTER(CONTAINS(LCASE(?label), ""the qub"")) }
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
328,40,test,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:rank ""Marshal of the Soviet Union""^^xsd:string .
  ?person dbo:officeLabel ""Commander-in-Chief of the Soviet Armed Forces""@en .
  ?person dbo:award dbr:Order_of_the_Red_Banner ; 
           dbo:award dbr:Hero_of_the_Soviet_Union ;
           dbo:award dbr:Order_of_Ushakov .
  OPTIONAL { ?person foaf:name ?name . }
  
  FILTER (
    EXISTS {
      ?campaign dbo:commander ?person .
      ?campaign dbo:location dbr:Eastern_Front_(World_War_II) .
    } &&
    EXISTS {
      ?campaign dbo:location dbr:Volcano_Islands_campaign ;
                dbo:location dbr:Ryukyu_Islands_campaign .
    }
  )
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
626,16,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Find Aleksey Petrovich Yermolov's DBpedia resource
  dbr:Aleksey_Petrovich_Yermolov a dbo:Person ;
    dbo:awardReceived ?award .

  # Find the awardee of that award
  ?award dbo:recipient ?awardee .

  # Ensure the awardee was also a commander in a military conflict under Alexander I
  ?awardee dbo:commanderOf ?conflict .
  ?conflict dbo:participatedIn dbr:Aleksandr_I_of_Russia ;
            dbo:commander ?awardee .
}
```

This query assumes that the DBpedia data model includes properties like `dbo:awardReceived`, `dbo:recipient`, and `dbo:commanderOf` to link awards, recipients, and military roles. Adjustments may be necessary based on actual DBpedia schema details.",4,5,5,2,2,3,2,20,0,0,21,0,0.0,0
465,8,test,"Give me the death place of Jiřina Štěpničková and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?politicalParty WHERE {
  # Jiřina Štěpničková's death place
  dbr:Ji%C5%99ina_%C5%A0t%C4%9Bpnickov%C3%A1 dbo:deathPlace ?deathPlace .

  # Leader of the Chamber of Deputies and their political party
  OPTIONAL {
    ?leader dbo:position dbr:Chamber_of_Deputies_of_the_Czech_Republic .
    ?leader dbo:party ?politicalParty .
  }
}
```",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
488,65,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceSadanoBu ?administrationIeyasu ?birthPlaceSaigo WHERE {
  # Matsudaira Sadanobu's death place
  OPTIONAL { 
    dbr:Matsudaira_Sadanobu dbo:deathPlace ?deathPlaceSadanoBu .
  }

  # Tokugawa Ieyasu's administration
  OPTIONAL {
    dbr:Tokugawa_Ieyasu dbo:officeHolder ?administrationIeyasu .
  }

  # Saigō Takamori's birth place
  OPTIONAL {
    dbr:Saigo_Takamori dbo:birthPlace ?birthPlaceSaigo .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
488,68,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War involving Saitō Hajime
  ?war dbo:participant dbr:Saitō_Hajime .
  ?war a dbo:MilitaryConflict ;
      a dbo:Event ;
      a dbo:SocietalEvent .

  # Emperor Go-Mizunoo's father and his administration
  dbr:Emperor_Go-Mizunoo dbo:father ?emperorFather .
  ?administration dbo:head ?emperorFather ;
                  dbo:startDate ?startAdmin ;
                  dbo:endDate ?endAdmin .

  # Matsudaira Tadamasa's father
  dbr:Matsudaira_Tadamasa dbo:father ?matsudairaFather .
  ?matsudairaFather a dbo:Politician ;
                   a dbo:OfficeHolder .

  # Death place of Matsudaira Tadamasa's father
  ?matsudairaFather dbo:deathPlace ?deathPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
184,57,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg and parent of the child of Archduke Joseph Francis of Austria.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?ladislaus a dbo:Person ;
            dbp:parent ?parentLadislaus .
  FILTER(STR(?ladislaus) = ""Archduke Ladislaus Philipp of Austria"") .

  ?royalChild a dbo:RoyalFamilyMember ;
              dbp:parent ?parentLadislaus .

  ?geza a dbo:Person ;
        dbp:parent ?royalChild .
  FILTER(STR(?geza) = ""Géza von Habsburg"") .

  ?joseph a dbo:Person ;
          dbp:child ?childJoseph .
  FILTER(STR(?joseph) = ""Archduke Joseph Francis of Austria"") .
  
  ?childOfJoseph a dbo:Person ;
                 dbp:parent ?childJoseph .

  ?royalChild2 a dbo:Person ;
               dbp:parent ?childOfJoseph .

  FILTER (?royalChild = ?royalChild2)

  BIND(?royalChild AS ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,50,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Matsudaira Tadamasa and his father
  dbr:Matsudaira_Tadamasa dbo:father ?father1 .
  
  # Father of Matsudaira Tadamasa's father (office holder)
  ?father1 dbo:father ?father2 .
  
  # The office holder's father is a politician
  ?father2 dbo:occupation dbr:Politician .
  
  # Death place of the politician
  ?father2 dbo:deathPlace ?deathPlace .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,56,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to the name of Italian People's Party (1994).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?party WHERE {
  # Romano Prodi
  VALUES (?person) { 
    (dbr:Romano_Prodi)
  }
  
  OPTIONAL {
    ?person dbo:birthName ?birthName .
  }

  OPTIONAL {
    ?person dbo:politicalParty ?party .
  }

  UNION

  # Giulio Andreotti
  VALUES (?person) { 
    (dbr:Giulio_Andreotti)
  }
  
  OPTIONAL {
    ?person dbo:birthName ?birthName .
  }

  OPTIONAL {
    ?person dbo:politicalParty ?party .
  }

  UNION

  # Italian People's Party (1994)
  VALUES (?party) { 
    (dbr:Italian_People%27s_Party_(1994))
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,66,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfResidence WHERE {
  # Sean Pertwee
  dbr:Sean_Pertwee dbo:nationality dbr:United_Kingdom .
  
  # Films and military conflicts associated with Sean Pertwee
  OPTIONAL { 
    dbr:Sean_Pertwee dbo:film ?film .
    OPTIONAL { ?film dbo:genre dbr:Military_conflict . }
  }

  # Politician and office holder in France
  OPTIONAL {
    dbr:Sean_Pertwee dbo:occupation dbr:Politician ;
                      dbo:officeHolderOf dbr:France .
  }

  # Residence that is a British settlement
  ?residence dbo:nationality dbr:United_Kingdom ;
             a dbo:Settlement .

  # Sean Pertwee's residence
  dbr:Sean_Pertwee dbo:residenceLocation ?residence .

  # Native of the residence
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
378,64,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame WHERE {
  VALUES (?person) { 
    (dbr:Thomas_Trigge)
    (dbr:Joaquín_Blake)
    (dbr:C._P._Gahn) # Assuming Carl Pontus Gahn is referred to as C. P. Gahn in DBpedia
  }
  
  ?person dbo:claimToFame ?claimToFame .
  
  OPTIONAL {
    ?claimToFame a dbo:MilitaryConflict .
  }

  UNION

  OPTIONAL {
    ?event dbo:participant ?person ;
           a dbo:MilitaryConflict .
    BIND(?event AS ?claimToFame)
  }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,48,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  # Step 1: Identify Queen's University Belfast and its nickname
  dbr:Belfast_Queens_College dbo:nickname ?nickname .
  
  # Step 2: Find the current mayor of Belfast who is a politician
  ?mayor dbp:office ""Mayor of Belfast""@en ;
         dbo:almaMater ?almaMater ;
         dbo:occupation dbr:Politician .

  # Step 3: Ensure the organization is Queen's University Belfast
  ?organization dbo:name ""Queen's University Belfast""@en ;
                dbo:nickname ?nickname .
  
  # Step 4: Link the mayor to the organization in Belfast
  ?mayor dbp:residence dbr:Belfast .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
528,54,test,Give me the war of the military force of Battle of Pisagua and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleWar ?force1 ?force2 ?camperoRole ?camperoForce
WHERE {
  # Battle of Pisagua and its associated war
  dbr:Battle_of_Pisagua dbo:partOf ?battleWar .
  
  # Military forces involved in the Battle of Pisagua
  OPTIONAL { 
    dbr:Battle_of_Pisagua dbo:militaryConflicts ?conflict .
    ?conflict dbo:combatant1 ?force1 .
    ?conflict dbo:combatant2 ?force2 .
  }
  
  # Information about Narciso Campero
  dbr:Narciso_Campero dbo:role ?camperoRole .
  OPTIONAL {
    dbr:Narciso_Campero dbo:militaryCommanderOf ?command .
    ?command dbo:combatant1 ?camperoForce .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
161,46,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForceFrancisco ?militaryForceDecedent
WHERE {
  # Francisco Largo Caballero's military forces
  dbr:Francisco_Largo_Caballero dbo:militaryConflict ?militaryForceFrancisco .
  ?militaryForceFrancisco a dbo:SocietalEvent ;
                        a dbo:MilitaryConflict .

  # Person decedent at Francoist Spain
  ?decedent dbo:diedDuring dbr:Francoist_Spain .
  ?decedent dbo:militaryConflict ?militaryForceDecedent .
  ?militaryForceDecedent a dbo:SocietalEvent ;
                        a dbo:MilitaryConflict .
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
184,25,test,Give me the child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?individual WHERE {
  # Find children of Archduke Joseph August of Austria
  ?child dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Find parents of children of Archduke Joseph Francis of Austria
  ?grandchild dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?individual dbo:parent ?grandchild .

  # Check if the individual is both a child of Archduke Joseph August and a parent of a child of Archduke Joseph Francis
  FILTER (?child = ?individual)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,67,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # German Campaign of 1813 as a military conflict
  ?campaign dbo:type dbr:Military_conflict ;
            rdfs:label ""German campaign of 1813""@en .
  
  # Commander involved in the campaign
  ?campaign dbo:commander ?commander .

  # Military force known as 'Polish Horse'
  ?militaryForce dbo:name ""Polish Horse""@en ;
                 dbo:type dbr:Military_unit, dbr:Organisation ;
                 dbo:participatedIn ?campaign .
  
  # Reference to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?commander dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
  }
}
```",7,14,8,3,3,3,3,71,0,0,7,0,0.0,0
16,57,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?personWithBirthName ?professional 
WHERE {
  # Spouse of Ted McGinley
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Person born as the birth name of Gigi Rice
  dbr:Gigi_Rice dbo:birthName ?birthName .
  ?personWithBirthName dbo:birthName ?birthName .

  # Professional in the profession of the actor from ""Unnatural"" (TV series)
  {
    SELECT DISTINCT ?actorProfession WHERE {
      ?unnaturalActor dbo:profession ?actorProfession ;
                     dbo:title ?title .
      FILTER(CONTAINS(LCASE(str(?title)), ""unnatural""))
    }
  } 
  ?professional dbo:profession ?actorProfession .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
492,56,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Khemis Miliana District's capital
  ?capital a dbo:Settlement ;
           dbo:country dbr:Algeria ;
           dbo:administrativeUnit dbr:Khemis_Miliana_District .

  # Person decedent at the capital of Khemis Miliana District
  ?person dbo:deathPlace ?capital .

  # Joseph C. Satterthwaite's work association
  ?work a dbo:Position ;
        dbo:holder dbr:Joseph_C._Satterthwaite ;
        dbo:employee ?person .

  # Commander in Franco-Hova Wars
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?person .
  FILTER (str(?war) = ""Franco-Hova_Wars"")

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,18,test,"Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark WHERE {
  # Step 1: Find Nie Rongzhen's award
  dbr:Nie_Rongzhen dbo:award dbr:AwardX .

  # Step 2: Find associated musical artists of The Boils
  dbr:The_Boils dbo:associatedMusicalArtist ?artist .

  # Step 3: Get the birthplace of one of these artists
  ?artist dbp:birthPlace ?location .

  # Step 4: Find a landmark at this location that is an organization, group, and band
  ?landmark a dbo:Landmark ;
            dbo:elevation ?elevation ;
            dbo:locatedIn ?location ;
            rdf:type [ 
              a owl:Class ; 
              owl:intersectionOf (dbo:Organization dbo:Group dbo:Band) 
            ] .
}
```

**Notes:**
- Replace `dbr:AwardX` with the actual award Nie Rongzhen received.
- Ensure that DBpedia has entries for all entities involved, as some may not be directly available or require additional context.",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
328,49,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalLeader WHERE {
    # Step 1: Identify Gustav Jonson's role as a politician and his office
    ?gustavJonson dbo:occupation dbr:Politician .
    
    # Step 2: Find the leader of Gustav Jonson's office
    ?office dbo:leader ?leaderOfGustavOffice .
    ?gustavJonson dbo:headOf ?office .

    # Step 3: Identify Bruce Fraser and his award
    ?bruceFraser dbo:award dbr:North_Cape_Medal .
    
    # Step 4: Find the leader of the office led by the person identified in step 2
    ?leaderOffice dbo:leader ?finalLeader .
    ?leaderOfGustavOffice dbo:headOf ?leaderOffice .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
778,20,test,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v5 <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v5 <http://dbpedia.org/ontology/author> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:award dbr:Wolf_Prize_in_Medicine .
  
  ?software dbo:author ?person ;
            rdfs:label ?softwareLabel .

  FILTER(CONTAINS(LCASE(?softwareLabel), ""pushd"") || CONTAINS(LCASE(?softwareLabel), ""popd""))

  ?entity dbo:awardee ?person .
}
```",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
427,65,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v0 <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?father ?fatherParty ?prodiBirthDate ?prodiParty ?ipp1994
WHERE {
  # Find MIT alumni and their fathers' political parties
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
          dbo:father ?father .
  
  OPTIONAL { ?father dbo:party ?fatherParty . }
  
  # Information about Romano Prodi
  dbr:Romano_Prodi dbo:dateOfBirth ?prodiBirthDate ;
                   dbo:party ?prodiParty .

  # Reference to the Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) dbp:name ""Italian People's Party (1994)""^^xsd:string .
  
  BIND(dbr:Italian_People%27s_Party_(1994) AS ?ipp1994)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,53,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderRole ?event ?militaryConflict WHERE {
  # Find Emilio Mola's resource
  VALUES ?emilioMola { dbr:Emilio_Mola }

  # Identify his role as a commander in military forces
  ?emilioMola dbo:militaryCommanderOf ?commanderRole .

  # Link these roles to relevant events, focusing on the Spanish Civil War
  ?commanderRole dbo:participatedIn ?event .
  
  # Ensure the event is related to the Spanish Civil War or Francoist Spain
  FILTER (
    EXISTS { ?event dbo:wikiPageRedirects dbr:Spanish_Civil_War } ||
    EXISTS { ?event dbo:wikiPageRedirects dbr:Francoist_Spain }
  )

  # Identify military conflicts associated with these events
  ?event dbo:militaryConflict ?militaryConflict .
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
645,20,test,"Give me the alma mater of the child of the parent of Adela Pankhurst and entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v4 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?country WHERE {
  # Step 1: Find Adela Pankhurst's parent
  ?adela a dbo:Person ;
         foaf:name ""Adela Pankhurst""@en .
  ?parent dbo:child ?adela .

  # Step 2: Identify the child of that parent (Adela or her sibling)
  ?sibling dbo:child ?parent .

  # Step 3: Find the alma mater of this child
  ?sibling dbo:almaMater ?almaMater .

  # Step 4: Find the commander in the Battle of Diamond Rock
  ?battle a dbo:MilitaryEngagement ;
          dbo:name ""Battle of Diamond Rock""@en .
  ?commander dbo:commanded ?battle .

  # Step 5: Determine the country where this commander resided
  ?residence dbo:location ?country ;
             dbo:resident ?commander .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
182,25,test,Give me the war of the work of Gotabhaya Rajapaksa and war of the author of 2019 Sri Lanka Easter bombings and entity in Sri Lanka.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?author ?entityInSriLanka WHERE {
  # Gotabhaya Rajapaksa and the war he was involved in
  dbr:Gotabhaya_Rajapaksa dbo:occupation dbr:Sri_Lankan_Civil_War .
  
  # Author of the 2019 Sri Lanka Easter bombings
  ?author dbo:wikiPageRedirects dbr:Zahran_Hashim ;
          rdfs:label ?authorLabel .

  FILTER (lang(?authorLabel) = 'en')

  # Entity in Sri Lanka
  ?entityInSriLanka a dbo:Place ;
                   dbo:country dbr:Sri_Lanka .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
16,26,test,Give me the professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?profession 
WHERE {
  dbr:Unnatural (dbo:starring) ?actor .
  
  ?actor dbo:occupation ?profession .
}
```",3,3,4,3,1,3,3,71,0,0,40872,0,0.0,0
184,44,test,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual WHERE {
  # Step 1: Find the child of Archduke Joseph Karl
  ?child1 dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> .
  
  # Step 2: Find the grandchild (child of the child)
  ?grandchild dbo:parent ?child1 .

  # Step 3: Find the child of Archduke Joseph Francis
  ?child2 dbo:parent <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> .
  
  # Step 4: Find the parent of Géza von Habsburg
  ?gezaParent dbo:child <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .

  # Combine conditions to find the individual who satisfies all:
  ?individual dbo:parent ?grandchild .
  ?individual dbo:child ?child2 .
  ?individual dbp:spouseOrPartner ?gezaParent .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
838,16,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?otherBand WHERE {
  # Identify members of YU Grupa
  ?member dbo:memberOf dbr:YU_Grupa .
  
  # Ensure the member is an artist and a musical artist
  ?member rdf:type dbo:MusicalArtist .
  ?member dbo:occupation dbr:Musician .

  # Find other bands they are part of
  ?member dbo:memberOf ?otherBand .
  
  FILTER(?otherBand != dbr:YU_Grupa) # Exclude YU Grupa itself

  # Return the band member and their other band
  BIND(?member AS ?bandMember)
}
```",4,7,5,2,2,3,2,20,0,0,5,0,0.0,0
427,45,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of Giulio Andreotti and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
SELECT ?prodiParty ?andreottiParty WHERE {
  # Romano Prodi's birth name and party affiliation
  wd:Q1234 rdfs:label ""Romano Prodi""@en .
  OPTIONAL { 
    ?prodi dbo:birthName ?birthName .
    FILTER (lang(?birthName) = 'en')
    ?prodi dbo:party ?prodiParty .
    ?prodiParty rdfs:label ?prodiPartyLabel .
    FILTER (CONTAINS(LCASE(STR(?prodiPartyLabel)), ""partito popolare italiano""))
  }
  
  # Giulio Andreotti's party affiliation
  wd:Q5678 rdfs:label ""Giulio Andreotti""@en .
  OPTIONAL {
    ?andreotti dbo:party ?andreottiParty .
    ?andreottiParty rdfs:label ?andreottiPartyLabel .
  }

  # Reference to Partito Popolare Italiano
  ?partitoPopolare rdfs:label ""Partito Popolare Italiano""@it .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,54,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of Don Dokken.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 ?artist3 WHERE {
  # Step 1: Find associated musical artist of Watchtower (band)
  dbr:Watchtower_(band) dbo:musicalArtist ?artist1 .

  # Step 2: Find Fredrik Thordendal's band that is an organization and its associated musical artist
  ?thordendalBand a dbo:MusicalGroup ;
                  dbo:member dbr:Fredrik_Thordendal ;
                  dbo:musicalArtist ?artist2 .
  
  # Step 3: Find Don Dokken's band member who is also part of a band, group, and organization
  dbr:Don_Dokken dbo:bandMember ?dokkenBandMember .
  ?dokkenBandMember dbo:memberOf ?dokkenBand ;
                   a dbo:MusicalGroup .

  # Ensure the band is both a group and an organization
  ?dokkenBand a dbo:Organization, dbo:MusicalGroup ;
              dbo:musicalArtist ?artist3 .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
92,48,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberArtist ?filmName ?furneyBand
WHERE {
  # Find band members of Nevermore (the band) who are artists
  ?nevermoreBand a dbo:MusicalBand ;
                 foaf:name ""Nevermore"" .
  
  ?memberOf dbp:members ?nevermoreBand ;
            dbo:occupation dbr:Musician .

  ?memberOf foaf:name ?bandMemberArtist .

  # Find the film Nevermore (2006)
  ?film a dbo:Film ;
        foaf:name ""Nevermore"" ;
        dbo:releaseDate ?releaseDate .
  
  FILTER(YEAR(?releaseDate) = 2006)

  BIND(""Nevermore (2006 film)"" AS ?filmName)

  # Find the band associated with Joseph Michael Furney
  ?furney a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" .

  ?furneyBand dbp:members ?furney .
  
  ?furneyBand foaf:name ?bandName .
}",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,70,test,"Give me the parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Seti I and his children
  ?setiI a dbo:Monarch ;
         foaf:name ""Seti I"" .
  
  ?child1 dbo:childOf ?setiI .

  # Child of Seti I's child
  ?grandChild dbo:childOf ?child1 .

  # Commander in Battle of Perire and his father
  ?commander dbo:participatedInBattle dbp:Battle_of_Perire ;
             dbo:father ?father .
  
  # Spouse of the commander's father
  ?spouse dbo:spouse ?father .

  # Royalty involved in Battle of Perire
  ?royalty dbo:participatedInBattle dbp:Battle_of_Perire ;
           a dbo:Monarch .

  # Parent of Nefertari's child
  ?nefertariChild dbo:childOf ?parent .
  ?nefertari a foaf:name ""Nefertari"" ;
             dbo:spouse ?setiI .

  # Find the common entity
  FILTER (?grandChild = ?royalty && ?spouse = ?parent)
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
281,45,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit ?officeHolder ?politician WHERE {
  # Find military units in the New Zealand Army associated with Beauchamp Seymour, 1st Baron Alcester
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army ;
               dbo:commander dbr:Beauchamp_Seymour_1st_Baron_Alcester .

  # Find office holders who are also politicians in New Zealand
  ?officeHolder dbo:positionTitle ?title ;
                dbo:country dbr:New_Zealand ;
                dbo:occupation dbr:Politician .
  
  # Link the military unit to the office holder/politician if applicable
  OPTIONAL { ?militaryUnit dbo:commander ?officeHolder }
}
```

This query does the following:
- Selects military units (`?militaryUnit`) that are part of the New Zealand Army and were commanded by Beauchamp Seymour, 1st Baron Alcester.
- Identifies office holders (`?officeHolder`) who are also politicians in New Zealand.
- Optionally links these military units to any office holder/politician if they served as a commander.",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
712,19,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  OPTIONAL {
    dbr:Russia dbo:capital ?capital .
  }

  OPTIONAL {
    dbr:Yuri_Gagarin dbo:placeOfBurial ?restingPlace .
  }
}
```",5,5,6,3,2,3,2,20,0,1,1,0.0,0.0,0
959,56,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?nativeCountry WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  FILTER (strstarts(str(?university), ""http://dbpedia.org/resource/"") && 
          strcontains(lcase(str(?university)), ""university"") &&
          strcontains(lcase(str(?university)), ""japan""))

  # Manager of Kashima Antlers in 1998
  dbr:Kashima_Antlers dbp:managerInSeason/1998 ?manager .
  
  # Check if the manager is a sports manager and their native country
  OPTIONAL { ?manager dbo:nationality ?nativeCountry . }
  FILTER (exists(?nativeCountry) && strcontains(lcase(str(?nativeCountry)), ""japan""))
}
```",6,11,7,3,3,3,3,71,0,0,2,0,0.0,0
404,61,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
SELECT ?parent WHERE {
  ?princeGeorgeWilliam dbo:father dbr:Ernest_August_I,_King_of_Hanover .
  ?erstAugust dbp:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  ?princessVictoriaLouise dbp:spouse ?erstAugust .
  ?erstAugust dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?carolineOfHanover dbo:parent dbr:Ernst_Augustus,_Duke_of_Brunswick ;
                     rdf:type dbo:Royal .
  ?parent dbo:child ?carolineOfHanover .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
294,27,test,"Give me the entity in the birth place, that is a settlement, of Marion James and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?result <http://dbpedia.org/ontology/location> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?settlement WHERE {
  # Marion James' birthplace
  VALUES (?marionBirthPlace) { 
    (dbr:Marion_James#birthPlace)
  }
  
  # Architect of P. D. Houston Jr. House and their resting place
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
  ?architect dbp:deathPlace ?architectRestingPlace .

  # Luke Lea's resting place
  VALUES (?lukeLea) { 
    (dbr:Luke_Lea_(American_politician,_born_1879))
  }
  ?lukeLea dbp:deathPlace ?lukeLeaRestingPlace .

  # Ensure all places are settlements
  FILTER(STRSTARTS(STR(?marionBirthPlace), ""http://dbpedia.org/resource/"") && 
         STRSTARTS(STR(?architectRestingPlace), ""http://dbpedia.org/resource/"") &&
         STRSTARTS(STR(?lukeLeaRestingPlace), ""http://dbpedia.org/resource/""))

  # Check if they are settlements
  ?marionBirthPlace a dbo:PopulatedPlace .
  ?architectRestingPlace a dbo:PopulatedPlace .
  ?lukeLeaRestingPlace a dbo:PopulatedPlace .

  # Find common settlement
  VALUES (?settlement) {
    (?marionBirthPlace)
    (?architectRestingPlace)
    (?lukeLeaRestingPlace)
  }
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,69,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?artist2 ?artist3 WHERE {
  # Jim Sheppard's associated band
  dbr:Jim_Sheppard dbo:associatedBand ?band1 .
  
  # Nevermore (2006 film) related artist
  dbr:Nevermore_(film)_2006 dbo:referenceArtist ?artistRef .
  ?artistRef dbo:associatedBand ?band2 .

  # Joseph Michael's birth name and associated band
  dbr:Joseph_Michael dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  ?person dbo:associatedBand ?band3 .

  # Ensure the bands are artists
  ?band1 a dbo:MusicalArtist .
  ?band2 a dbo:MusicalArtist .
  ?band3 a dbo:MusicalArtist .

  # Return the associated artists
  BIND(?band1 AS ?artist1)
  BIND(?band2 AS ?artist2)
  BIND(?band3 AS ?artist3)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
701,57,test,Give me the spouse of the father of Merneptah and parent of the child of the child of Seti I and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Ramses_II dbo:child dbpedia:Seti_I .
  dbpedia:Seti_I dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,68,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v5 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?country ?war2 WHERE {
  # Jonathon Band's award and associated war
  ?award dbo:recipient dbr:Jonathon_Band .
  ?awardee dbo:receivedAward ?award .
  ?awardee dbo:militaryConflict ?war1 .

  # Leader of the 1962 New South Wales state election
  ?election dbo:leader ?leader .
  FILTER (YEAR(?election) = 1962 && STRSTARTS(STR(?election), ""New_South_Wales_state_election""))
  ?leader a dbo:Politician .

  # Birthplace country of the leader
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?country .

  # Heather Roy's military unit and associated war
  ?heather dbr:Heather_Roy .
  ?heather dbo:militaryUnit ?militaryUnit .
  ?militaryUnit dbo:militaryConflict ?war2 .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
161,31,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?militaryForce
WHERE {
  # Find persons who died during Francoist Spain
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (YEAR(?deathDate) >= 1939 && YEAR(?deathDate) <= 1975)

  # Ensure the person is associated with a societal event and military conflict
  ?event dbo:wikiPageRedirects ?militaryConflict .
  ?event rdf:type dbo:SocietalEvent .
  ?militaryConflict rdf:type dbo:MilitaryConflict .

  # Find the military force of the Spanish Civil War
  ?militaryForce dbo:partOfMilitaryConflicts dbr:Spanish_Civil_War .
  
  # Link the person to the event and military conflict
  ?person dbo:associatedWithEvent ?event .
}
```",4,7,5,3,2,3,3,71,0,0,514,0,0.0,0
820,19,test,Give me the child of the parent of the professional in Actor and professional in the award of Scott McCloud.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . ?v4 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Step 1: Identify Scott McCloud and his profession as Actor
  dbr:Scott_McCloud dbo:profession dbr:Actor .

  # Step 2: Find awards associated with Scott McCloud
  ?award dbo:recipient dbr:Scott_McCloud .

  # Step 3: Determine the parent of this award (assuming a broader category)
  ?award dbo:parentAward ?parentAward .

  # Step 4: Find the child of that parent award
  ?child dbo:parentAward ?parentAward .
}
```

This query assumes there is a property `dbo:parentAward` to find the parent of an award, which might need adjustment based on actual DBpedia schema. Adjustments may be necessary if specific properties or relationships differ.",5,5,6,3,2,3,2,20,0,0,128,0,0.0,0
161,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 ?commanderRole
WHERE {
  # Francisco Franco's military force during Francoist Spain
  dbr:Franco_Fascism dbo:militaryConflict ?militaryConflict1 .
  ?militaryConflict1 dbo:participatingMilitaryUnit ?militaryForce1 .

  # Juan Negrín's military force during the Spanish Civil War
  dbr:Juan_Negrín dbo:militaryConflict ?militaryConflict2 .
  ?militaryConflict2 dbo:participatingMilitaryUnit ?militaryForce2 .

  # Emilio Mola's role in a military event
  dbr:Emilio_Mola dbo:commanderIn ?commanderRole .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
16,50,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find the actor of ""Unnatural"" (TV series)
  ?unnaturalEpisode dbo:actor ?actor .
  FILTER(CONTAINS(LCASE(STR(?unnaturalEpisode)), ""unnatural tv series""))

  # Get the birth name of Gigi Rice
  dbr:Gigi_Rice dbo:birthName ?birthName .

  # Find a person with the same birth name as Gigi Rice and their profession
  ?person dbo:birthName ?birthName .
  ?person dbo:profession ?professional .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
54,22,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin
  dbr:Thihapate_of_Mohnyin dbo:childOf ?thinkhaya .
  
  # Thinkhaya of Pagan
  ?thinkhaya rdfs:label ""Thinkhaya of Pagan""@en .

  # Find children of Thinkhaya who are office holders and royalty
  ?child dbo:parent dbr:Thinkhaya_of_Pagan ;
         a dbo:Monarch, dbo:OfficeHolder .

  # Find the predecessor of this child
  ?officeHolderPosition dbo:positionHeldBy ?child .
  ?predecessor dbo:positionHeldBy ?officeHolderPosition .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
492,50,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInConflict
WHERE {
  # Step 1: Find the commander in the Battle of Verdun
  ?battleOfVerdun a dbo:MilitaryEngagement ;
                  dbo:commander ?verdunCommander .

  FILTER (str(?battleOfVerdun) = ""Battle_of_Verdun"")

  # Step 2: Find a military conflict involving this commander
  ?conflict a dbo:MilitaryEngagement, dbo:Event ;
            dbo:commander ?verdunCommander ;
            dbo:commander ?commanderInConflict .

  # Step 3: Identify the person who died at the capital of Algeria
  ?capital a dbo:Capital ; 
           dbo:country dbr:Algeria .
  
  ?decedent dbo:placeOfBirth ?capital ;
            dbo:dateOfDeath ?deathDate .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
488,67,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceEnomoto ?administrationSpouseFather ?deathPlaceMatsudairaFather
WHERE {
  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Tokugawa Masako's spouse and his father's administration
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse rdf:type dbo:Monarch .
  ?spouse dbo:father ?spouseFather .
  ?spouseFather dbo:office ?administrationSpouseFather .

  # Matsudaira Tadamasa's father and his death place
  dbr:Matsudaira_Tadamasa dbo:father ?matsudairaFather .
  ?matsudairaFather rdf:type dbo:OfficeHolder .
  ?matsudairaFather dbo:deathPlace ?deathPlaceMatsudairaFather .
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
184,59,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?result WHERE {
  # Step 1: Find Archduke Ladislaus Philipp of Austria's parent
  ?ladislaus a dbo:Person ;
            dbo:parent ?parent .

  FILTER(?ladislaus = dbr:Ladislaus_Philipp_of_Austria)

  # Step 2: Find the child of this parent
  ?child dbo:parent ?parent .

  # Step 3: Check if this child is royalty and find their child
  ?royalChild dbo:parent ?child .
  ?royalChild a dbo:RoyalFamilyMember .

  # Step 4: Identify the parent of this royal person
  ?royaltyParent dbo:parent ?royalChild .

  # Step 5: Find a landmark at elevation 96.0 meters
  ?landmark a dbo:Lighthouse ;
            dbp:elevation ""96.0""^^xsd:float .

  # Step 6: Identify the settlement where this landmark is located
  ?settlement dbo:location ?landmark .

  # Step 7: Find the native of this settlement
  ?native dbo:nationality ?settlement ;
          dbo:parent ?royaltyParent .

  # Return the result
  BIND(?native AS ?result)
}",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
617,57,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbr:Antiochus_IV_Epiphanes .
  
  # Find his successor who is royalty
  ?successor dbo:predecessor ?antiochus ;
            a dbo:Monarch .

  # Determine the child of this successor
  ?child dbo:parent ?successor ;
         a dbo:Person .

  # Identify the spouse of this child
  ?spouse dbo:spouse ?child .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
16,59,test,Give me the spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Get Ted McGinley's birth name
  dbr:Ted_McGinley dbo:birthName ?birthName .

  # Step 2: Find the actor of ""Unnatural"" (TV series)
  dbr:Unnatural dbo:actor ?unnaturalActor .
  
  # Get the profession of the actor from ""Unnatural""
  ?unnaturalActor dbo:profession ?profession .

  # Step 3: Find a person with the same birth name as Ted McGinley and the same profession
  ?person dbo:birthName ?birthName ;
          dbo:profession ?profession .

  # Get the spouse of this person
  ?person dbo:spouse ?spouse .
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
994,53,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?watchtowerArtist
WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  dbr:Don_Dokken a dbo:MusicalArtist .

  # Step 2: Find band members associated with Don Dokken
  ?bandMember dbo:member dbr:Don_Dokken .
  
  # Step 3: Identify Red Tide and its associated musical artists
  dbr:Red_Tide (dbo:associatedBandMember|dbo:associatedMusicalArtist) ?redTideArtist .

  # Step 4: For each of these associated musical artists, find their associated musical artists
  ?redTideArtist dbo:associatedBandMember|dbo:associatedMusicalArtist ?associatedArtist .

  # Step 5: Specifically look for those associated with Watchtower
  ?watchtowerArtist dbo:associatedBandMember|dbo:associatedMusicalArtist dbr:Watchtower .
  
  # Linking the artists found in steps 2, 4, and 5
  OPTIONAL { ?bandMember dbo:associatedBandMember|dbo:associatedMusicalArtist ?associatedArtist . }
  OPTIONAL { ?associatedArtist dbo:associatedBandMember|dbo:associatedMusicalArtist ?watchtowerArtist . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,56,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?personBand 
WHERE {
  # Nevermore band members who are artists
  ?member dbo:memberOf dbr:Nevermore .
  ?member dbo:occupation dbr:Musician .

  # Jim Sheppard's associated musical artist
  ?sheppard dbr:Jim_Sheppard .
  ?sheppard dbo:associatedBand ?band .
  ?band dbo:leadArtist ?artist .
  BIND(?artist AS ?associatedArtist)

  # Person born as Joseph Michael and their band
  ?person foaf:name ""Joseph Michael"" .
  ?person dbo:birthName ?name .
  FILTER(?name = ""Joseph Michael"")
  ?person dbo:memberOf ?bandPerson .
  BIND(?bandPerson AS ?personBand)
  
  # Linking the results
  OPTIONAL { ?member dbr:Jim_Sheppard . }
  OPTIONAL { ?artist dbr:Nevermore . }
  OPTIONAL { ?personBand dbr:Nevermore . }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,19,test,Give me the birth place of the member of Dropkick Murphys and landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/elevation> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?landmark WHERE {
  # Find a member of Dropkick Murphys and their birthplace
  ?member dbo:musicalArtist dbr:Dropkick_Murphys .
  ?member dbo:birthPlace ?birthPlace .

  # Find an award given to a commander in the Battle of Chishui River
  ?award dbo:recipient ?commander .
  ?commander dbo:participatedInBattle dbr:Battle_of_Chishui_River .
  
  # Assume the award has an elevation property (this is hypothetical)
  ?award dbp:elevation ?elevation .

  # Find a landmark with the same elevation
  ?landmark dbo:elevation ?sameElevation .
  FILTER(?elevation = ?sameElevation)

}
```

This query assumes:
- There's a direct link between awards and their elevations, which might not be standard in DBpedia.
- The `dbo:elevation` property is used for both awards and landmarks, which may need adjustment based on actual data availability.",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
345,17,test,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.","SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?figure ?team WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  VALUES (?birthDate) { 
    (dbr:Eiður_Guðjohnsen dbo:birthday)
  }
  
  # Step 2: Find a soccer player and manager born on that date
  ?person dbo:birthday ?birthDate ;
          rdf:type dbo:SoccerPlayer, dbo:SoccerManager .

  # Step 3: Get the figure (nickname) and team of that person
  OPTIONAL { ?person dbp:nickname ?figure }
  OPTIONAL { ?person dbo:team ?team }

  FILTER(?figure != """")
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
64,9,test,"Give me the entity in the region, that is a country, of Central European Time and alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country WHERE {
  # Find countries in the Central European Time zone
  ?country dbo:timeZone dbr:Central_European_Time .

  # Find writers who died in Sremska Kamenica
  ?writer dbo:deathPlace dbr:Sremska_Kamenica ;
          a dbo:Writer .

  # Get alma mater of the writer
  ?writer dbp:almaMater ?university .

  # Check if the university is located in the country found earlier
  ?university dbo:locationCountry ?country .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
9,34,test,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Belfast ;
         dbo:almaMater ?university .
  
  FILTER EXISTS { ?mayor dbo:occupation dbr:Politician }
  
  VALUES ?university { dbr:Queen's_University_Belfast }
}
```

This query does the following:
- Selects the university (`?university`) where the mayor studied.
- Filters for mayors of Belfast who are also politicians.
- Specifically checks if the alma mater is Queen's University Belfast (QUB).",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,37,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
    # Step 1: Find Seti I's children
    ?childSetiI dbo:spouse* <http://dbpedia.org/resource/Seti_I> .
    
    # Step 2: Find the grandchildren of Seti I (children of Seti I's children)
    ?grandChild dbo:parent ?childSetiI .

    # Step 3: Identify Ramesses II's spouse
    ?spouseRamessesII dbo:spouse* <http://dbpedia.org/resource/Ramesses_II> .
    
    # Step 4: Find the parent of the grandchild who is also a spouse of Ramesses II
    ?parent dbo:spouse* ?grandChild .
    FILTER(?parent = ?spouseRamessesII)
}
```",4,4,5,3,2,3,3,71,0,1,2,0.0,0.0,0
356,17,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in 2015 Sacramento Republic FC season.","SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Step 1: Identify Gary Williams (footballer, born 1960)
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?birthPlace .

  # Step 2 & 3: Ensure the birthplace is an English settlement
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:England .

  # Step 4: Find individuals who are both soccer players and managers
  ?person dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation ?occupation .
  
  FILTER (?occupation IN (dbr:Soccer_player, dbr:Soccer_manager))

  # Step 5: Check if these individuals were part of the Sacramento Republic FC team in the 2015 season
  ?person dbp:teamIn2015Season dbr:Sacramento_Republic_FC .

  # Get the team they are currently associated with
  ?person dbo:currentTeam ?team .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,38,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emilioMolaEvent ?franciscoLargoCaballeroForce
WHERE {
  # Emilio Mola as a commander in the force of an event (Spanish Civil War)
  dbr:Emilio_Mola dbo:commanderInMilitaryOf ?militaryForce1 .
  ?militaryForce1 dbo:event ?emilioMolaEvent .

  # Francisco Largo Caballero's military force involved in societal events and military conflicts
  dbr:Francisco_Largo_Caballero dbo:militaryCommanderOf ?militaryForce2 .
  ?militaryForce2 dbo:socialEvent ?societalEvent .
  ?militaryForce2 dbo:event ?franciscoLargoCaballeroConflict .

  # Ensure the events are related to the Spanish Civil War
  FILTER (strContains(str(?emilioMolaEvent), ""Spanish Civil War"") && 
          strContains(str(?franciscoLargoCaballeroConflict), ""Spanish Civil War""))
}
```",4,7,5,2,2,3,3,71,0,0,32,0,0.0,0
994,70,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Don Dokken's band members
  ?donDokken dbr:Don_Dokken .
  ?donDokken dbo:member ?bandMember .

  UNION

  # Watchtower associated musical artists
  ?watchtower dbr:Watchtower_(band) .
  ?watchtower dbo:associatedMusicalArtist ?artist1 .
  
  ?artist1 dbo:associatedMusicalArtist ?bandMember .

  UNION

  # Fredrik Thordendal's bands
  ?fredrikThordendal dbr:Fredrik_Thordendal .
  ?fredrikThordendal dbo:member ?band2 .
  ?band2 a dbo:Band ;
         a dbo:Group ;
         a dbo:Organization .

  ?band2 dbo:member ?bandMember .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,38,test,"Give me the parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Narapati I of Ava and his child
  ?narapatiI a dbo:Monarch ;
             foaf:name ""Narapati I""@en .
  
  ?child dbo:spouseOrPartnerOf ?narapatiI ;
         dbo:child ?narapatiChild .

  # Child's predecessor
  ?predecessor dbo:successor ?narapatiChild ;
               a dbo:Monarch, dbo:OfficeHolder ;
               dbo:royalty dbr:Thihapate_of_Mohnyin .

  # Parent of the predecessor
  ?parent dbo:child ?predecessor .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,52,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent ?spouseBirthName WHERE {
  # Ernest Augustus, Crown Prince of Hanover's child who is royalty
  ?child dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?child a dbo:Monarch .

  # The parent of this child should be Ernest Augustus, Duke of Brunswick
  ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Princess Victoria Louise of Prussia's spouse
  ?spouse dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  
  # The birth name of the spouse should match the child's name
  ?spouse foaf:name ?childName .
  FILTER (?childName = ?childLabel)
  
  # Get labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
232,55,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sean Pertwee's notable works (films and military conflicts)
  ?work dbo:performer dbr:Sean_Pertwee .
  ?work a ?type .
  
  FILTER (?type IN (dbr:Film, dbr:Military_Conflict))
  
  # Sylvie Bermann's place of residence
  dbr:Sylvie_Bermann dbo:nativePlace ?settlement .
  ?settlement dbo:country dbr:United_Kingdom .

  # Find the actor associated with these works
  ?work dbo:actor ?actor .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
16,52,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara"" .
  
  ?satomi dbo:profession ?profession .

  # Find Ted McGinley's birth name
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley"" ;
       foaf:nick ?birthName .

  # Find Georgeanne Marie Rice
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Marie Rice""@en .

  # Find the spouse of Ted McGinley's birth name person and Georgeanne Marie Rice
  ?tedBirthNamePerson a dbo:Person ;
                     foaf:nick ?birthName .
  
  ?georgeanneSpouse a dbo:Person ;
                    dbo:spouse ?commonSpouse ;
                    foaf:name ""Georgeanne Marie Rice""@en .

  ?tedBirthNameSpouse a dbo:Person ;
                      dbo:spouse ?commonSpouse ;
                      foaf:nick ?birthName .

  # Find the professional in Satomi Ishihara's profession who is also the spouse
  ?professional a dbo:Person ;
                dbo:profession ?profession ;
                dbo:spouse ?commonSpouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
9,52,test,"Give me the figure known as QUB and alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # QUB as alma mater
  VALUES ?qub { dbr:Queen's_University_Belfast }

  # Find individuals who attended QUB and won the Royal Medal
  ?person dbo:almaMater ?qub .
  ?person dbo:honoraryTitle ""Royal Medal"" .

  UNION

  # Find organizations in Belfast, their mayors, and check if they attended QUB
  ?organization dbo:location dbr:Belfast ;
                dbo:mayor ?mayor .
  ?mayor dbo:almaMater ?qub .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
666,19,test,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager ?nickname WHERE {
  # Find the manager of Hull City A.F.C. during the 2016–17 season
  ?team dbo:manager ?manager .
  ?manager dbo:occupation ""sports manager"" .

  FILTER(?team = dbr:Hull_City_A.FC)

  # Get the nickname of Hull City A.F.C.
  ?team dbo:nickname ?nickname .
  
  # Ensure the team is a soccer club and sports club in England
  ?team rdf:type dbo:SoccerClub ;
        dbo:country dbr:England .
}",5,9,6,3,2,3,2,20,0,0,2,0,0.0,0
659,55,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander1 ?commander2 ?commander3
WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment during a war
  ?regiment a dbo:MilitaryUnit ;
            dbo:commander ?commander1 ;
            dbo:participatedIn ?war .
  
  # Ensure the regiment is part of a military conflict and societal event
  ?war a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Find Rutger Jan Schimmelpenninck's military force and its commander
  ?schimmelpenninckForce a dbo:MilitaryUnit ;
                        dbo:commander ?commander2 ;
                        dbo:participatedIn ?event .
  
  # Ensure the event is both a societal event and a military conflict
  ?event a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find Arthur Wellesley's military force and its commander
  ?wellesleyForce a dbo:MilitaryUnit ;
                  dbo:commander ?commander3 ;
                  dbo:participatedIn ?conflict .
  
  # Ensure the conflict is both an event and a military conflict
  ?conflict a dbo:Event, dbo:MilitaryConflict .

  # Link Rutger Jan Schimmelpenninck to his force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryForce ?schimmelpenninckForce .

  # Link Arthur Wellesley to his force
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:militaryForce ?wellesleyForce .
}
```",6,11,7,2,3,3,3,71,0,0,15,0,0.0,0
488,31,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,56,test,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find actors of ""The Departed""
  ?movie dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?movie), STR(dbr:The_Departed))) .

  # Check if the actor is native to ""Hub City"" (assuming Hub City refers to a specific place)
  ?actor dbp:nativePlace dbr:Hub_City .

  # Ensure the actor has acted in another work that is both a movie and a television show
  ?otherWork dbo:starring ?actor .
  {
    SELECT DISTINCT ?work WHERE {
      ?work rdf:type dbo:Film .
      FILTER(STRSTARTS(STR(?work), STR(dbr:))) .
    }
  } UNION {
    SELECT DISTINCT ?work WHERE {
      ?work rdf:type dbo:TelevisionShow .
      FILTER(STRSTARTS(STR(?work), STR(dbr:))) .
    }
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
981,17,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in Indonesia.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:author dbr:Kamikaze_Girls .
  ?person dbo:title ""Miss Universe""^^xsd:string ; # Assuming a beauty queen title
         dbo:birthPlace ?birthPlace .
  OPTIONAL { 
    ?person dbp:country dbr:Indonesia . # Connection to Indonesia
  }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
  
- **SELECT Clause**: We are interested in retrieving the `?birthPlace` of the person.

- **WHERE Clause**:
  - `?person dbo:author dbr:Kamikaze_Girls`: This line identifies the author of ""Kamikaze Girls.""
  - `?person dbo:title ""Miss Universe""^^xsd:string`: We assume a beauty queen title like ""Miss Universe."" You might need to adjust this based on available data.
  - `dbo:birthPlace ?birthPlace`: Retrieves the birthplace of the person.
  - `OPTIONAL { ?person dbp:country dbr:Indonesia }`: Checks for any connection to Indonesia.

This query assumes that DBpedia has structured data about the author, their beauty queen status, and any links to Indonesia. Adjustments may be necessary based on actual data availability in DBpedia.",4,5,5,3,2,3,2,20,0,0,19,0,0.0,0
55,22,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember
WHERE {
  # Step 1: Find the producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  
  FILTER (str(?song) = ""Used_to_Love_Her"")

  # Step 2: Check if this producer is a band
  ?producer rdf:type dbo:Band .

  # Step 3: Find a band member of this producer
  ?member dbo:bandMemberOf ?producer .
  
  # Step 4: Check if this member is part of another band and group associated with the San Francisco Symphony
  ?member dbo:bandMemberOf ?anotherBand .
  ?anotherBand rdf:type dbo:Band ;
              dbo:groupMember ?sfSymphonyGroup .

  ?sfSymphonyGroup dbo:associatedWith dbr:San_Francisco_Symphony .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
281,60,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?war ?profession ?militaryUnit WHERE {
  # Jonathon Band and his awards
  dbr:Jonathon_Band dbo:award ?award .
  
  # War associated with the award
  ?award dbo:relatedToWar ?war .

  # Profession as an office holder and politician
  dbr:Jonathon_Band dbo:profession ?profession .
  FILTER (?profession IN (dbr:Office_holder, dbr:Politician)) .

  # Military unit in New Zealand Army related to his profession
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army ;
               dbo:relatedToProfession ?profession .
}
```",6,9,7,3,2,3,3,71,0,0,9,0,0.0,0
184,67,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Archduke Ladislaus Philipp of Austria relationships
  ?ladislaus a dbo:Person ;
             dbo:parent ?parent1 .
  
  ?sibling1 dbo:childOf ?parent1 ;
            dbo:child ?nieceNephew1 .

  # Archduchess Margaret of Austria (born 1925) relationships
  ?margaret a dbo:Person ;
            dbp:birthday ""1925-01-01""^^xsd:date ;
            dbo:parent ?parent2 .
  
  ?sibling2 dbo:childOf ?parent2 ;
            dbo:child ?nieceNephew2 .

  # Géza von Habsburg relationship
  ?geza a dbo:Person ;
        dbo:parent ?parent3 .

  # The person we are looking for is related to all three
  ?person dbo:royalty ""true""^^xsd:boolean ;
          dbo:childOf ?nieceNephew1 ;
          dbo:childOf ?nieceNephew2 ;
          dbo:childOf ?geza .
}",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,45,test,"Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?child ?predecessor
WHERE {
  # Thado Minsaw of Prome and his parent
  dbr:Thado_Minsaw_of_Prome dbo:father ?parent .

  # Thinkhaya of Pagan and Thado Minsaw's child who is a predecessor
  ?child dbo:mother dbr:Thinkhaya_of_Pagan .
  ?child dbo:father dbr:Thado_Minsaw_of_Prome .
  
  # The predecessor relationship involving royalty and office holder
  ?predecessor dbo:successor ?child .
  ?predecessor a dbo:Monarch ; 
               dbo:officeHolder true ;
               dbo:royalty true .

  # Reference to Thihapate of Mohnyin
  ?reference dbr:Thihapate_of_Mohnyin .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,59,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/team> ?v1 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader dbo:electionLeaderOf dbr:2010_Japanese_House_of_Councillors_election .
  
  # Step 2: Determine their place of residence (a country)
  ?leader dbp:residence ?countryResidence .
  FILTER(isLiteral(?countryResidence) && datatype(?countryResidence) = xsd:string)

  # Step 3: Find a person born in 1958 and native of that country
  ?person dbo:birthYear ""1958""^^xsd:gyear ;
          dbp:nativePlace ?countryResidence .
  
  # Step 4: Retrieve the alma mater of this person, which is:
  # - A member of an organization
  # - A university
  # - An educational institution
  # - Japanese
  ?person dbo:almaMater ?almaMater ;
          a dbo:EducationalInstitution .
  
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             dbo:memberOf ?organisation .
}",6,12,7,3,2,3,3,71,0,0,167,0,0.0,0
498,9,test,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem and band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfSolace ?artistBand 
WHERE {
  # Find the organization associated with ""Solace of Requiem""
  dbr:Solace_of_Requiem dbo:associatedBand dbr:Some_Band .
  dbr:Some_Band dbo:organization dbr:Organization_Name .

  # Find a member of ""Mortician (band)"" who is an artist
  dbr:Mortician_(band) dbo:member ?artist .
  ?artist rdf:type dbo:Artist .

  # Find the band associated with that artist
  ?artist dbo:associatedBand ?artistBand .
}
```

Note:
- Replace `dbr:Some_Band` and `dbr:Organization_Name` with actual resource identifiers if known.
- This query assumes there are direct properties linking bands to organizations and artists, which may need adjustment based on the actual DBpedia schema.",4,7,5,2,2,2,2,9,0,0,1,0,0.0,0
547,62,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchildRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace
WHERE {
  # Resting place of the child of the child of William Haliburton
  dbr:William_Haliburton dbo:spouse ?spouse .
  ?spouse dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
  ?grandchild dbo:deathPlace ?grandchildRestingPlace .

  # Resting place of Alan Cunningham
  dbr:Alan_Cunningham dbo:deathPlace ?alanCunninghamRestingPlace .

  # Resting place of the actor of the show with Emily Richard
  {
    SELECT DISTINCT ?show (SAMPLE(?actor) AS ?actor)
    WHERE {
      ?show dbo:starring dbr:Emily_Richard .
      ?show dbo:starring ?actor .
    }
    GROUP BY ?show
  }
  
  ?actor dbo:deathPlace ?actorRestingPlace .
}",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
251,26,test,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?warLocation ?deathPlace WHERE {
  # Administration of Forza Italia in 2013
  OPTIONAL {
    dbr:Forza_Italia dbo:memberOf ?party.
    ?party dbo:officeHolder ?holder.
    ?holder dbp:termStartYear ?startYear;
            dbp:termEndYear ?endYear.
    FILTER (?startYear <= 2013 && (OPTIONAL {?endYear >= 2013} || NOT EXISTS {?endYear}))
    BIND(""Forza Italia administration in 2013"" AS ?administration)
  }

  # Location of the war involving Louis François Félix Musnier
  OPTIONAL {
    dbr:Louis_François_Félix_Musnier dbo:participatedIn ?conflict.
    ?conflict dbo:location ?warLocation.
    BIND(""War location for Louis François Félix Musnier"" AS ?administration)
  }

  # Death place of the author of The Twelve Abbots of Challant
  OPTIONAL {
    dbr:The_Twelve_Abbots_of_Challant dbo:author ?author.
    ?author dbo:deathPlace ?deathPlace.
    BIND(""Death place of the author of The Twelve Abbots of Challant"" AS ?administration)
  }
}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
92,28,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Find members of Nevermore
  ?nevermoreMember dbo:bandMemberOf dbr:Nevermore .
  
  # Ensure the member is an artist
  ?nevermoreMember a dbo:MusicalArtist .

  # Check association with Joseph Michael
  OPTIONAL { 
    ?association1 dbo:associatedBandMember ?member ;
                  dbo:associatedBandMember dbr:Joseph_Michael .
  }

  # Check association with Jim Sheppard
  OPTIONAL {
    ?association2 dbo:associatedBandMember ?member ;
                  dbo:associatedBandMember dbr:Jim_Sheppard .
  }
  
  FILTER EXISTS { ?association1 dbo:associatedBandMember ?member . } &&
               EXISTS { ?association2 dbo:associatedBandMember ?member . }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
488,54,test,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?birthPlace
WHERE {
  # Matsudaira Tadamasa's father
  ?matsudairaTadamasa a dbo:Person ;
                      foaf:parent ?father1 .

  # Father's father (Matsudaira Tadamasa's grandfather)
  ?father1 a dbo:Person ;
           foaf:parent ?grandfather .

  # Grandfather is an office holder related to Emperor Go-Yōzei
  ?officeHolder a dbo:OfficeHolder ;
               dbo:heldPosition ?position .
  ?position dbo:relatedTo dbr:Emperor_Go-Yōzei .
  FILTER(?grandfather = ?officeHolder)

  # Death place of the grandfather (politician)
  ?grandfather dbo:deathPlace ?deathPlace .

  # Commander in the Boshin War
  ?boshinWar a dbo:MilitaryConflict ;
             dbo:commander ?commander .

  # Birthplace of the commander
  ?commander dbo:birthPlace ?birthPlace .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,50,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actor WHERE {
  # Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Spouse's claim to fame (work)
  ?spouse dbo:claimToFame ?work .
  
  # Actor of the work
  ?work dbo:actor ?actor .

  # Movie with Roz Ryan that is also a television show
  ?movie dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Film ;
         dbo:genre ?genre .

  FILTER EXISTS { ?genre rdfs:subClassOf* dbo:TelevisionSeries }

  # Same actor in both the work and the movie
  ?movie dbo:actor ?actor .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
54,50,test,"Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  # Step 1: Find Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw""@en .
  
  ?thadoMinsaw dbo:childOf ?parent .

  # Step 2: Find the child of Thado Minsaw's parent
  ?parent dbo:child ?child .

  # Step 3: Find the predecessor of this child
  ?child dbo:predecessor ?predecessor .

  # Step 4: Check if the predecessor is an office holder and royalty, related to Thihapate of Mohnyin
  ?predecessor a dbo:OfficeHolder ;
               a dbo:Royalty .
  
  ?thihapate a dbo:Person ;
              foaf:name ""Thihapate""@en .

  ?predecessor dbo:relatedTo ?thihapate .

  # Step 5: Find the parent of this predecessor
  ?predecessor dbo:childOf ?parentOfChild .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
251,22,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyAdministration ?warLocation
WHERE {
  # Find Louis François Félix Musnier and the wars he was involved in
  ?musnier a dbo:Person ;
           foaf:name ""Louis François Félix Musnier""@en .
  
  ?musnier dbo:participatedIn ?war .
  ?war a dbo:MilitaryConflict .

  # Get locations of these wars
  ?war dbp:location ?warLocation .

  # Find political parties and organizations in Sicily
  ?party a dbo:PoliticalParty, dbo:Organization ;
         dbo:country dbr:Sicily .

  # Assume there's some relation to administration (this might need adjustment based on actual DBpedia schema)
  ?party dbo:administration ?partyAdministration .
}
```

This query assumes:
- Louis François Félix Musnier is represented in DBpedia with the name ""Louis François Félix Musnier"".
- Wars he participated in are linked via `dbo:participatedIn`.
- The location of wars is stored under `dbp:location`.
- Political parties that are also organizations in Sicily have a property `dbo:country` linking them to Sicily.
- There's an administrative link for political parties, which might need adjustment based on actual DBpedia schema.",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
328,65,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of Joseph Stalin and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?person dbo:awarded ?award .

  OPTIONAL {
    ?award dbo:recipient ?recipient .
    FILTER (
      ?recipient = dbr:Winston_Churchill OR
      ?recipient = dbr:Charles_Keightley
    )
  }
}
```

This query attempts to find awards associated with Bruce Fraser and checks if they were awarded to Winston Churchill or Charles Keightley. However, due to the historical context, this might not yield direct results.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
251,23,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . ?v2 <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warLocation ?deathPlace
WHERE {
  # Find the war location for Louis François Félix Musnier
  ?musnier a dbo:MilitaryPerson ;
          foaf:name ""Louis François Félix Musnier"" .
  
  ?musnier dbo:servedIn ?conflict .
  ?conflict dbo:location ?warLocation .

  # Find the death place of the author of ""The Twelve Abbots of Challant""
  ?book dbo:title ""The Twelve Abbots of Challant""@en ;
        dbo:author ?author .
  
  ?author dbo:deathPlace ?deathPlace .
}
```",4,5,5,2,2,2,3,28,0,0,2,0,0.0,0
528,66,test,Give me the war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battlePisaguaForces ?camperoForce ?rinconadaCommander ?rinconadaForces WHERE {
  # Battle of Pisagua
  ?pisaguaBattle a dbo:MilitaryConflict ;
                 dbo:participatingMilitaryUnit ?pisaguaUnit .
  
  OPTIONAL { ?pisaguaUnit dbo:militaryForce ?battlePisaguaForces . }
  
  # Narciso Campero
  dbr:Narciso_Campero_Latorre dbo:birthName ?camperoBirthName ;
                               dbo:militaryService ?camperoMilitary .
  
  OPTIONAL { ?camperoMilitary dbo:militaryForce ?camperoForce . }
  
  # Battle of La Rinconada de Ate
  ?rinconadaBattle a dbo:MilitaryConflict ;
                   dbo:commander ?rinconadaCommander ;
                   dbo:participatingMilitaryUnit ?rinconadaUnit .
  
  OPTIONAL { ?rinconadaUnit dbo:militaryForce ?rinconadaForces . }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,66,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?childRestingPlace ?actorRestingPlace WHERE {
  # Awardee of the award of Gerald Graham
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy dbr:Gerald_Graham .
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeDeathPlace . }
  
  # Child of James Burton (property developer)
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:occupation dbr:Property_developer .
  ?child dbo:parent ?jamesBurton ;
         dbo:deathPlace ?childDeathPlace .

  # Actor of ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?actor dbo:actedIn ?movie ;
         dbo:deathPlace ?actorDeathPlace .

  BIND(COALESCE(?awardeeDeathPlace, ""Unknown"") AS ?awardeeRestingPlace)
  BIND(COALESCE(?childDeathPlace, ""Unknown"") AS ?childRestingPlace)
  BIND(COALESCE(?actorDeathPlace, ""Unknown"") AS ?actorRestingPlace)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,68,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v5 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfNative WHERE {
  # Step 1: Find landmark at elevation 96.0 that is a settlement
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  # Step 2: Identify native of this settlement and their parent
  ?native dbo:nativePlace ?landmark .
  ?parentOfNative dbo:child ?native .

  # Step 3: Find child of Archduke Joseph Francis of Austria
  dbr:Archduke_Joseph_Francis_of_Austria dbo:child ?childJoseph .

  # Step 4: Find parent of Archduke Ladislaus Philipp of Austria who is royalty, and their child
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?parentLadislaus .
  FILTER (EXISTS { ?parentLadislaus a dbo:Royalty } )
  ?childOfParentLadislaus dbo:child ?parentLadislaus .

  # Step 5: Ensure the parent of native is also the child of the child from step 4
  ?parentOfNative = ?childJoseph .
  ?parentOfNative = ?childOfParentLadislaus .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
767,47,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlementGreen
WHERE {
  # Find George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .

  # Find an entity in his administration that is a settlement named Green
  ?administration dbo:member dbr:George_Kilbon_Nash .
  ?settlementGreen a dbo:Settlement ;
                  rdfs:label ""Green""@en .
  ?administration dbo:location ?settlementGreen .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
92,58,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band1 ?band2 WHERE {
  # Find Joseph Michael's birth name and associated band
  ?person1 dbo:birthName ?birthName .
  FILTER (str(?birthName) = ""Joseph Michael"") .
  
  ?person1 dbo:musicalArtist ?artist1 .
  ?artist1 dbo:associatedBand ?band1 .

  # Find Jim Sheppard as an artist and his association with Nevermore
  ?person2 foaf:name ""Jim Sheppard"" .
  ?person2 dbo:musicalArtist ?artist2 .
  
  ?artist2 dbo:associatedBand dbr:Nevermore .
  ?artist2 dbo:associatedBand ?band2 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,22,test,Give me the member of University of Tsukuba and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:almaMater <http://dbpedia.org/resource/University_of_Tsukuba> .
  ?team dbo:manager ?person .
  ?team dbo:member <http://dbpedia.org/resource/Takashi_Sekizuka> .
}
```

This query assumes:
- `dbo:almaMater` is used to find individuals affiliated with the University of Tsukuba.
- `dbo:manager` and `dbo:member` are used to identify managerial relationships involving Takashi Sekizuka.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,52,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Nysa and her parent
  dbr:Nysa_of_Pontus dbo:child dbr:Pharnaces_I_of_Pontus .
  dbr:Nysa_of_Pontus dbo:parent ?parent .

  # Antiochus III the Great's child and spouse
  dbr:Antiochus_III_the_Great dbo:child ?antiochusChild .
  ?antiochusChild dbo:spouse ?spouse .

  # Antiochus II Theos' successor who is royalty, and their royal child
  dbr:Antiochus_II_theos dbo:succeededBy ?successor .
  FILTER (dbo:Monarch(?successor)) .
  ?successor dbo:child ?royalChild .
  FILTER (dbo:Monarch(?royalChild)) .

  # Ensure the spouse is related to the royal child
  ?spouse dbo:parent ?royalChild .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
92,52,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?jimBand ?jimArtist ?josephBand
WHERE {
  # Nevermore (2006 film) associated musical artist
  dbr:Nevermore_(film)_\(2006\) dbo:musicalArtist ?artist1 .
  
  # Jim Sheppard's band and associated artists
  OPTIONAL { 
    dbr:Jim_Sheppard dbo:bandMemberOf ?jimBand .
    ?jimBand dbo:associatedMusicalArtist ?jimArtist .
  }
  
  # Joseph Michael's band
  OPTIONAL {
    dbr:Joseph_Michael dbo:bandMemberOf ?josephBand .
  }

  # Find band members who are artists
  ?artist1 dbo:bandMemberOf ?band .
  ?band dbo:bandMember ?bandMember .
  FILTER EXISTS { ?bandMember a dbo:Artist }
  
  # Linking the results
  OPTIONAL {
    ?bandMember dbr:Jim_Sheppard .
  }
  OPTIONAL {
    ?bandMember dbr:Joseph_Michael .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,51,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1Band ?writerBand WHERE {
  # Shèna Easton
  VALUES ?shena (dbr:Shena_Easton) .
  
  OPTIONAL {
    ?shena dbo:musicalArtistIn ?band1 .
    ?band1 dbo:name ?person1Band .
  }
  
  # Thomas Newson and Rob Ellmore
  VALUES ?writer1 (dbr:Thomas_Newson) .
  VALUES ?writer2 (dbr:Rob_Ellmore) .

  OPTIONAL {
    ?writer1 dbo:musicalArtistIn ?band2 .
    ?band2 dbo:name ?writerBand .
  }
  
  OPTIONAL {
    ?writer2 dbo:musicalArtistIn ?band3 .
    ?band3 dbo:name ?writerBand .
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
9,53,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?almaMater WHERE {
  # Queen's University Belfast nickname
  VALUES (?university) { dbr:Queen's_University_Belfast }
  OPTIONAL {
    ?university dbo:nickname ?nickname .
  }

  # Allen Hill's alma mater
  ?allenHill dbo:almaMater ?almaMaterAllen ;
            foaf:name ""Allen Hill""^^xsd:string .

  # Mayor of an organization in Belfast and their alma mater
  ?organization dbo:location dbr:Belfast ;
                dbo:mayor ?mayor .
  ?mayor dbo:almaMater ?almaMaterMayor ;
         rdf:type dbo:Politician .

  FILTER(?almaMaterAllen = ?university && ?almaMaterMayor = ?university)
}
```

This query does the following:
- Retrieves the nickname of Queen's University Belfast.
- Finds Allen Hill and his alma mater.
- Identifies a politician who is a mayor of an organization in Belfast and their alma mater.
- Ensures that both Allen Hill and the mayor share the same alma mater, which should be Queen's University Belfast.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,63,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Amun-her-khepeshef and his spouse's child's parent
  ?amunHerKhepeshef dbo:spouse ?spouse1 .
  ?child1 dbo:parent ?spouse1 ;
          dbo:parent ?amunHerKhepeshef .
  
  # Ramesses II and his child's parent
  dbr:Ramesses_II dbo:child ?ramessesChild .
  ?ramessesChild dbo:parent dbr:Ramesses_II .

  # Merneptah's father and his spouse
  dbr:Merneptah dbo:father ?merneptahFather .
  ?merneptahFather dbo:spouse ?spouse2 .

  # Find the common entity between these paths
  FILTER (?amunHerKhepeshef = ?commonEntity || ?spouse1 = ?commonEntity)
  FILTER (dbr:Ramesses_II = ?commonEntity || ?ramessesChild = ?commonEntity)
  FILTER (?merneptahFather = ?commonEntity || ?spouse2 = ?commonEntity)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,58,test,"Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?peninsularWarCommander ?peninsularWar ?carlPontusGahnWar ?carlPontusGahnFame ?thomasTriggeEvent
WHERE {
  # Peninsular War and its commander
  ?peninsularWar dbo:wikiPageRedirects dbr:Peninsular_War .
  ?peninsularWarCommander dbo:commanded ?peninsularWar ;
                         rdfs:label ?commanderLabel .

  FILTER(CONTAINS(LCASE(?commanderLabel), ""peninsular war""))

  # Carl Pontus Gahn's involvement in wars and his claim to fame
  ?carlPontusGahn dbr:Carl_Pontus_Gahn .
  OPTIONAL {
    ?war dbo:participatedIn ?carlPontusGahn ;
         rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""war""))
  }
  
  ?fame dbo:wikiPageRedirects dbr:Carl_Pontus_Gahn ;
        rdfs:label ?fameLabel .

  # Thomas Trigge's connection to a military conflict and societal event
  ?thomasTriggeEvent dbo:wikiPageRedirects dbr:Thomas_Trigge ;
                     rdfs:label ?eventLabel .
  
  FILTER(CONTAINS(LCASE(?eventLabel), ""military"") || CONTAINS(LCASE(?eventLabel), ""societal""))
}
ORDER BY ?peninsularWarCommander
LIMIT 10",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
427,68,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v5 <http://xmlns.com/foaf/0.1/name> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v7 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?romanoProdiParty
WHERE {
  # Find fathers of MIT alumni
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbp:father ?father .
  ?father dbo:politicalAffiliation ?fatherParty .

  # Party of Michele Pinto
  dbr:Michele_Pinto dbo:politicalAffiliation ?michelePintoParty .

  # Party of Romano Prodi
  dbr:Romano_Prodi dbo:politicalAffiliation ?romanoProdiParty .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
391,61,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor
WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Step 2: Find the claim to fame of that spouse, which is a work
  ?spouse dbo:claimToFame ?work .
  
  # Step 3: Determine the professional and actor associated with this work
  ?work dbo:profession ?professional .
  ?work dbo:actor ?actor .

  # Step 4: Identify the movie that is also classified as a work and a television show
  ?movie rdf:type dbo:Film ;
         rdf:type dbo:Work ;
         rdf:type dbo:TelevisionShow .

  # Step 5: Ensure the actor is involved in this specific movie
  ?actor dbo:actedIn ?movie .
}
```",6,10,7,3,2,3,3,71,0,0,11,0,0.0,0
528,57,test,Give me the war of the commander in the work of --01-09 and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?war ?force
WHERE {
  # Assuming --01-09 is replaced with the actual work title
  ?work dbo:title ""Actual Work Title"" .
  
  # Find wars associated with Irene Morales
  ?person dbo:name ""Irene Morales""@en .
  ?person dbo:associatedWith ?war .

  # Find military roles of Narciso Campero Leyes
  ?narciso dbo:birthName ""Narciso Campero Leyes"" .
  ?narciso dbo:militaryRole ?force .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
48,19,test,"Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?band AS ?writerBand, 
       ?show ?character ?band AS ?actorBand WHERE {
  # Part 1: Writer of ""Emotion""
  { 
    ?album dbo:title ""Emotion""@en .
    ?album dbo:artist dbr:Carly_Rae_Jepsen .
    ?song dbo:album ?album ;
          dbo:composer ?writer .
    OPTIONAL { ?writer dbo:member ?band }
  }

  # Part 2: Show with Stacey Dash as a Musical Artist
  UNION {
    ?actor foaf:name ""Stacey Dash""@en .
    ?actor dbo:role ?character ;
           dbo:work ?show .
    OPTIONAL { ?character dbo:member ?band }
    FILTER EXISTS { ?show dbo:title ?title . FILTER regex(?title, "".*"", ""i"") }
  }
}",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
391,65,test,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find a movie that is also a work and a television show
  ?movie a dbo:Film ;
         dbo:genre/dbo:subClassOf* dbo:Work ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionShow .

  # Roz Ryan as an actor in this movie
  ?movie dbo:starring dbr:Roz_Ryan .

  # Find the spouse of Sherry Hormann and their claim to fame
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  ?claimToFame dbo:associatedWith ?spouse ;
               a dbo:Work .

  # Identify a figure known as Hub City and find their native place
  ?figure rdfs:label ""Hub City""@en .
  ?figure dbo:nativePlace ?nativePlace .

  # Actor of both the movie and the claim to fame
  ?claimToFame dbo:starring ?actor .
  ?movie dbo:starring ?actor .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
617,66,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royaltyChild
WHERE {
  # Seleucus II Callinicus and his children
  ?seleucus2 dbo:child ?child1 .
  FILTER(STR(?seleucus2) = ""Seleucus_II_Callinicus"")

  # Child of Seleucus II (grandchildren)
  ?child1 dbo:child ?grandchild .

  # Royalty among grandchildren
  ?grandchild a dbo:Monarch .

  # Commander in Battle of Panium and their child
  ?commander dbp:battleOfPaniumCommander ""true"" .
  ?commander dbo:child ?commanderChild .
  
  # Parent of commander's child (should be the same as grandchild)
  ?grandchild dbo:parent ?commanderChild .

  # Antiochus III the Great and his children
  ?antiochus3 dbp:father ""Seleucus_II_Callinicus"" .
  ?antiochus3 dbo:child ?antiochusChild .

  # Spouse of Antiochus III's child
  ?antiochusChild dbo:spouse ?spouse .

  # The royalty grandchild should be the spouse
  FILTER(?grandchild = ?spouse)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
251,21,test,Give me the death place of the author of The Twelve Abbots of Challant and administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration ?battleLocation WHERE {
  # Death place of Boniface of Challant
  OPTIONAL { 
    dbr:Boniface_of_Challant dbo:placeOfBirth ?birthPlace .
    dbr:Boniface_of_Challant dbo:deathPlace ?deathPlace .
  }

  # Administration of Forza Italia in 2013
  OPTIONAL {
    dbr:Forza_Italia (dbo:leader|dbo:member) ?person .
    ?person dbo:officeHeld ?administration .
    FILTER(YEAR(?administrationStartDate) <= 2013 && YEAR(?administrationEndDate) >= 2013)
  }

  # Location of the Battle of Marengo
  OPTIONAL {
    dbr:Battle_of_Marengo dbo:location ?battleLocation .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
747,54,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 WHERE {
  # Find the writer of a song by Amba Shepherd
  ?song dbo:lyricsBy ?writer .
  ?song dbo:title ""Amba Shepherd"" .

  # Find a person born on the same date as Pavlo Khudzik
  ?person dbp:birthday ?birthday .
  ?khudzik dbp:birthday ?sameBirthday .
  FILTER (?birthday = ?sameBirthday)
  VALUES ?khudzik { dbr:Pavlo_Khudzik }

  # Find the band of Shèna
  ?shena dbo:band ?band2 .
  VALUES ?shena { dbr:Shèna }

  # Get the band of the writer found above
  ?writer dbo:band ?band1 .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,53,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childBirthName WHERE {
  # Ernest Augustus, Duke of Brunswick's father
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?father .
  
  # Father's spouse who is royalty and born
  ?spouse dbo:spouse ?father ;
          a dbo:Person ;
          dbo:birthDate ?birthDate .

  FILTER (?birthDate != """"^^xsd:date) # Ensure the person was born

  # Child of this spouse, birth name of Princess Victoria Louise of Prussia
  ?child dbo:parent ?spouse ;
         rdfs:label ""Princess Victoria Louise of Prussia""@en .
  
  # Parent of Prince Ernest Augustus of Hanover (born 1914)
  dbr:Prince_Ernest_Augustus_of_Hanover dbo:birthDate ?birthDate2 .
  FILTER (?birthDate2 != """"^^xsd:date && year(?birthDate2) = 1914)

  ?child dbo:parent dbr:Prince_Ernest_Augustus_of_Hanover .

  # Get the birth name of Princess Victoria Louise
  ?child rdfs:label ?childBirthName .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,55,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find a child of Ernest Augustus who is royalty
  ?child dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  ?child dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Find the spouse of Princess Victoria Louise of Prussia
  ?spouse dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
  
  # Ensure this spouse is a child of George V of Hanover (father of Ernest Augustus)
  ?spouse dbo:father dbr:George_V_of_Hanover .

  # Find the parent of this spouse
  ?parent dbo:child ?spouse .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
994,61,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedBand
WHERE {
  # Fredrik Thordendal is a member of an organization (band)
  dbr:Fredrik_Thordendal dbo:memberOf ?band .

  # Find band members who are musical artists and have the persona ""Don Dokken""
  ?bandMember dbo:memberOf ?band ;
              dbo:birthPlace ?birthPlace ;
              foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""don dokken""))

  # Ensure this person is a musical artist
  ?bandMember rdf:type dbo:MusicalArtist .

  # Find the associated band of this band member, which is also a group and an organization
  ?bandMember dbo:associatedBand ?associatedBand .
  ?associatedBand rdf:type dbo:Band ;
                  rdf:type dbo:Group ;
                  rdf:type dbo:Organization .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
182,26,test,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 ?war3 WHERE {
  # Wars associated with Jagath Dias
  OPTIONAL {
    ?person rdfs:label ""Jagath Dias""@en .
    ?person dbo:nationality ?nationality .
    ?event dbo:agent ?person ;
           a dbo:MilitaryConflict .
    BIND(?event AS ?war1)
  }

  # Wars associated with Tamara Kunanayakam's nationality
  OPTIONAL {
    ?kunanayakam rdfs:label ""Tamara Kunanayakam""@en .
    ?kunanayakam dbo:nationality ?nationality2 .
    ?event2 dbo:location ?country ;
            a dbo:MilitaryConflict .
    FILTER(?country dbr:Ceylon || ?country dbr:Sri_Lanka) # Assuming her nationality is Sri Lankan
    BIND(?event2 AS ?war2)
  }

  # Wars associated with the author of the 2019 Sri Lanka Easter Bombings report/analysis
  OPTIONAL {
    ?report rdfs:label ""2019 Sri Lanka Easter bombings""@en .
    ?author dbo:author ?report ;
            a dbo:Person .
    ?event3 dbo:agent ?author ;
            a dbo:MilitaryConflict .
    BIND(?event3 AS ?war3)
  }
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,62,test,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent ?spouse WHERE {
  # Prince George William of Hanover's parent who is royalty
  dbr:Prince_George_William_of_Hanover dbo:parent dbr:Ernest_Augustus_I,_King_of_Hanover .
  
  # Child of Ernest Augustus, Crown Prince of Hanover who is a royalty
  dbr:Ernest_Augustus_Crown_Prince_of_Hanover dbo:child ?child .
  FILTER EXISTS { ?child a dbo:Monarch . }
  
  # Parent of the child (Princess Victoria Louise of Prussia)
  ?child dbo:parent dbr:Ernest_Augustus_I,_King_of_Hanover .

  # Spouse of Princess Victoria Louise of Prussia
  ?child dbo:spouse ?spouse .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
421,25,test,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Identify Edin Dervišhalidović
  VALUES (?edin) { dbr:Edin_Dervišhalidović }
  
  # Get his birthplace
  ?edin dbo:birthPlace ?edinBirthPlace .
  
  # Step 2: Find Samir Bekrić's birthplace
  VALUES (?samir) { dbr:Samir_Bekrić }
  ?samir dbo:birthPlace ?samirBirthPlace .

  # Check if Edin's birthplace is the same as Samir's
  FILTER(?edinBirthPlace = ?samirBirthPlace)

  # Step 3: Find band members of awardees from ""Awards and nominations""
  ?awardee dbo:award dbr:Awards_and_nominations .
  ?band dbo:member ?person .
  ?band dbo:awardRecipient ?awardee .

  # Ensure the person is Edin Dervišhalidović
  FILTER(?person = ?edin)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,56,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Joaquín Blake and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war ?claimToFame WHERE {
  VALUES (?person ?resource) {
    (dbr:Thomas_Trigge dbr:Thomas_Trigge)
    (dbr:Joaquín_Blake dbr:Joaquín_Blake)
    (dbr:C_P_Gahn dbr:C_P_Gahn)
  }
  
  # Find the war or military conflict associated with each person
  ?person dbo:militaryConflict ?war .
  
  # Get the claim to fame related to the war
  OPTIONAL {
    ?war dbo:claimToFame ?claimToFame .
  }

  FILTER(?claimToFame != """")
}
ORDER BY ?person",6,9,7,3,3,3,3,71,0,0,2,0,0.0,0
994,52,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of Don Dokken.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower dbo:musicalArtist ?artist1 .
  FILTER(STRSTARTS(STR(?watchtower), ""http://dbpedia.org/resource/Watchtower""))

  # Step 2: Find associated musical artist of the first artist
  ?artist1 dbo:musicalArtist ?artist2 .

  # Step 3: Identify a band member of Meshuggah who is also a band and group and an organization
  ?meshuggahMember dbo:memberOf dbr:Meshuggah .
  FILTER(STRSTARTS(STR(?meshuggahMember), ""http://dbpedia.org/resource/""))

  # Ensure the member is also classified as a band, group, and organization
  ?meshuggahMember rdf:type ?type1 .
  ?meshuggahMember rdf:type ?type2 .
  ?meshuggahMember rdf:type ?type3 .

  FILTER(?type1 IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))
  FILTER(?type2 IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))
  FILTER(?type3 IN (dbo:Band, dbo:MusicalGroup, dbo:Organization))

  # Step 4: Identify a band member of Don Dokken
  ?donDokkenMember dbo:memberOf dbr:Don_Dokken .
  FILTER(STRSTARTS(STR(?donDokkenMember), ""http://dbpedia.org/resource/""))

  # Find the associated musical artist of both members
  ?meshuggahMember dbo:musicalArtist ?artist3 .
  ?donDokkenMember dbo:musicalArtist ?artist4 .

  # Final step: Ensure the artists are the same
  FILTER(?artist2 = ?artist3)
  FILTER(?artist2 = ?artist4)

  # Return the final artist
  BIND(?artist2 AS ?finalArtist)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
747,42,test,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person1 ?band1 ?person2 ?band2 WHERE {
  # Step 1: Find the birth date of Pavlo Khudzik
  VALUES ?birthDate { 
    SELECT ?date WHERE { dbr:Pavlo_Khudzik dbo:birthday ?date }
  }

  # Step 2: Find person born on the same date as Amba Shepherd and her band
  {
    SELECT ?person1 ?band1 WHERE {
      ?person1 dbo:birthday ?birthDate .
      OPTIONAL { ?person1 dbo:musicalBand ?band1 . }
      FILTER EXISTS { dbr:Amba_Shepherd dbo:birthday ?birthDate }
    }
  }

  # Step 3: Find the band associated with Tracey Elizabeth McSween
  {
    SELECT ?person2 ?band2 WHERE {
      ?person2 rdfs:label ""Tracey Elizabeth McSween""@en .
      OPTIONAL { ?person2 dbo:musicalBand ?band2 . }
    }
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,20,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # For Bob Heffron
  OPTIONAL {
    ?heffron dbo:birthPlace ?placeHeffron .
    ?placeHeffron a dbo:Country ;
                  rdfs:label ?countryLabelHeffron .
    FILTER (lang(?countryLabelHeffron) = ""en"")
  }
  
  # For Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    ?seymour dbo:birthPlace ?placeSeymour .
    ?placeSeymour a dbo:Country ;
                  rdfs:label ?countryLabelSeymour .
    FILTER (lang(?countryLabelSeymour) = ""en"")
  }
  
  # Bind entities to their respective DBpedia resources
  VALUES (?heffron ?seymour) {
    (dbr:Bob_Heffron dbr:Beauchamp_Seymour,_1st_Baron_Alcester)
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,43,test,"Give me the person born on 1985-04-29 and band of Shèna and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?bandShena ?bandWriter
WHERE {
  # Find the person born on 1985-04-29
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  
  # Find the band associated with Shèna
  ?shena dbo:associatedBand ?bandShena .
  FILTER (str(?shena) = ""Shèna"") .

  # Find the writer of a song by Amba Shepherd and their band
  ?song dbo:lyricsBy ?writer .
  ?song dbo:artist dbr:Amba_Shepherd .
  
  ?writer dbo:associatedBand ?bandWriter .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,27,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?teamManager WHERE {
  # Find the sports manager of the 1998 Kashima Antlers
  ?manager a dbo:SportsManager ;
           dbo:managedTeam dbr:Kashima_Antlers_1998_season .

  # Determine which team this sports manager manages
  ?manager dbo:manages ?team .

  # Find out who is the manager of that team
  ?team dbo:manager ?teamManager .
}
```",3,4,4,3,1,3,3,71,0,0,10,0,0.0,0
488,29,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYukiFather ?administrationGoYozei ?birthPlaceEnomoto
WHERE {
  # Yūki Hideyasu's father (politician)
  ?yukiFather a dbo:Politician ;
              foaf:name ""Yūki Hideyasu""@en ;
              dbo:child dbr:Yūki_Hideyasu .
  
  # Death place of Yūki Hideyasu's father
  ?yukiFather dbo:deathPlace ?deathPlaceYukiFather .

  # Administration of Emperor Go-Yōzei
  ?goYozei a dbo:Monarch ;
           foaf:name ""Emperor Go-Yōzei""@en .
  
  ?administrationGoYozei dbo:monarch ?goYozei ;
                         dbo:country dbr:Japan .

  # Birthplace of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
92,68,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?associatedArtist ?actor ?filmBandMember
WHERE {
  # Step 1: Find Joseph Michael Furney's band
  dbr:Joseph_Michael_Furney dbo:memberOf ?band .

  # Step 2: Find an associated musical artist of Joseph Michael Furney
  ?band dbo:artist ?associatedArtist .
  
  # Step 3: Identify the actor in ""Return to Nuke 'Em High Volume 1""
  dbr:Return_to_Nuke_'Em_High_Volume_1 dbo:actor ?actor .

  # Step 4: Find a band member associated with Nevermore (2006 film)
  dbr:Nevermore_(film) dbo:bandMember ?filmBandMember .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,42,test,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria and parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Identify the native of Budapest (e.g., Franz Liszt)
  ?liszt a dbo:Person ;
         dbo:nationality dbr:Hungary ;
         dbo:birthPlace dbr:Budapest .

  # Step 2: Find the child of Archduke Joseph August
  ?child1 dbo:parent dbr:Joseph_August_of_Austria ;
         dbo:spouse ?liszt .

  # Step 3: Identify the parent of the child of Archduke Joseph Francis
  ?child2 dbo:parent dbr:Joseph_Francis_of_Austria .
  
  # Find the common person who is both a child of Joseph August and a parent of a child of Joseph Francis
  ?commonPerson dbo:parent ?child1 ;
                dbo:child ?child2 .

  # Return this person as the ""parent""
  BIND(?commonPerson AS ?parent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
328,38,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?leader
WHERE {
  # Ferenc Szálasi's commander in force
  ?szalasi a dbo:Person ;
           foaf:name ""Ferenc Szálasi"" ;
           dbo:spouse ?commander .
  
  # Joseph Stalin's leader of an office that is a government agency
  ?stalin a dbo:Person ;
          foaf:name ""Joseph Stalin"" ;
          dbo:office ?office .
  ?office dbo:type dbr:Government_agency ;
          dbo:leader ?leader .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
801,46,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?producer WHERE {
  ?work dbo:artist dbr:50_Cent ;
        a dbo:Songs .
  
  OPTIONAL { 
    ?work dbo:lyricist ?alterEgo .
    ?alterEgo rdfs:label ""The Shadow""@en .
  }
  
  ?work dbo:producer ?producer .
}
```

This query does the following:
- Selects works (`?work`) that are associated with 50 Cent as an artist and are categorized as songs.
- Optionally checks if there is a lyricist or alter ego involved named ""The Shadow.""
- Retrieves the producer of such works.",5,8,6,3,2,3,3,71,0,0,27,0,0.0,0
232,58,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sean Pertwee and his claim to fame
  dbr:Sean_Pertwee dbo:claimToFame ?fame .
  
  # Fame is both a film and a military conflict
  ?fame rdf:type dbo:Film ;
        rdf:type dbo:MilitaryConflict .

  # Jon Pertwee is Sean Pertwee's father
  dbr:Jon_Pertwee dbo:child dbr:Sean_Pertwee .

  # Find the native politician of France who holds an office
  ?politician dbo:nationality dbr:France ;
             a dbo:Politician, dbo:OfficeHolder .
  
  # Residence is a settlement and British
  ?residence dbo:native dbr:politician ;
             rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Actor of the film/military conflict
  ?fame dbo:actor ?actor .
}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
827,17,test,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?mother WHERE {
  # Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:spouse ?mother .
  
  # The spouse must be royalty
  ?mother a dbo:Monarch .

  # Find children who are royalty
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:child ?child .
  ?child a dbo:Monarch .

  # Ensure the child is of the spouse
  ?child dbo:parent ?mother .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,59,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war WHERE {
  ?commander dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?commander dbo:commanderInMilitaryConflict ?war .
  ?war a dbo:MilitaryConflict .

  OPTIONAL { 
    ?unit dbo:knownAs ""Polish Horse""@en .
    ?unit dbo:commandedBy ?commander .
  }
}
```",6,11,7,3,2,3,3,71,0,0,71,0,0.0,0
16,63,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara"" .
  
  ?satomi dbo:profession ?profession .

  # Find Ted McGinley's birth name
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley"" .
  
  ?ted foaf:nick ?birthNameTed .

  # Find Gigi Rice's birth name
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice"" .
  
  ?gigi foaf:nick ?birthNameGigi .

  # Find the spouse of the person with Ted McGinley's birth name and Gigi Rice's birth name
  ?person1 foaf:nick ?birthNameTed .
  ?person2 foaf:nick ?birthNameGigi .
  
  ?spouse a dbo:Person ;
          dbo:spouse ?person1, ?person2 .

  # Find the professional in Satomi Ishihara's profession who is also this spouse
  ?professional a dbo:Person ;
                dbo:profession ?profession ;
                foaf:name ?spouseName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,46,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1War ?person2War WHERE {
  # Part 1: Find the war involving Carl Pontus Gahn
  VALUES ?person1 { dbr:C._P._G%C3%A5h }
  ?person1 dbo:birthName ""Carl Pontus Gahn""@en .
  ?person1 dbo:militaryConflict ?person1War .

  # Part 2: Find the war involving the commander of the Peninsular War
  VALUES ?war { dbr:Peninsular_War }
  ?war dbo:commander ?commander .
  ?commander dbo:militaryConflict ?person2War .
}",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
356,20,test,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v5 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player WHERE {
  # Identify Gary Williams' birthplace
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?birthPlace .
  
  # Ensure the birth place is an English settlement
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:England .

  # Find players from the 2015 Sacramento Republic FC season
  ?season dbo:sportTeam dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .
  
  # Identify players in that season
  ?player dbo:playsFor ?team ;
          dbo:birthPlace ?birthPlace .

  # Ensure the player is also a manager
  ?player dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .

  # Find the team of the native (Gary Williams' birthplace)
  ?nativeTeam dbo:sportTeam ?team .
}
```",6,12,7,3,2,3,2,20,0,0,1,0,0.0,0
645,17,test,Give me the entity in United Kingdom and alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Step 1: Identify Adela Pankhurst's parents
  ?parent a dbo:Person ;
          dbo:child dbr:Adela_Pankhurst .

  # Step 2: Determine the children of those parents (siblings of Adela)
  ?sibling a dbo:Person ;
           dbo:parent ?parent .

  # Step 3: Find the alma maters of those siblings
  ?sibling dbo:almaMater ?almaMater .

  # Step 4: Filter for entities in the United Kingdom
  FILTER EXISTS { ?almaMater dbo:country dbr:United_Kingdom }
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
696,17,test,Give me the landmark at elevation of the award of the commander in Battle of Chishui River and birth place of Tim Brennan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthPlace WHERE {
  # Find the commander and their award in the Battle of Chishui River
  ?battle dbo:eventLocation ?location .
  FILTER(STR(?battle) = ""Battle_of_Chishui_River"")
  
  ?commander dbo:award ?award .
  ?battle dbo:participant ?commander .

  # Assume the award has a numerical value for elevation (this is hypothetical)
  ?award dbo:value ?elevationValue .

  # Find a landmark at this elevation
  ?landmark dbo:elevation ?elevation .
  FILTER(?elevation = ?elevationValue)

  # Find Tim Brennan's birthplace
  dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
}",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
184,54,test,"Give me the parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the native of Budapest.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Step 1: Find parent of Archduchess Ilona of Austria
  ?ilonaParent dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  # Step 2: Find grandchild (child of the child) who is royalty
  ?grandchild dbo:parent ?ilonaChild .
  ?ilonaChild dbo:parent ?ilonaParent .
  ?grandchild a dbo:Monarch .

  # Step 3: Ensure connection to Archduke Ladislaus Philipp of Austria
  ?ladislaus dbr:Archduke_Ladislaus_Philipp_of_Austria .
  ?grandchild dbo:parent ?ladislaus .

  # Step 4: Find parent of a native of Budapest
  ?budaNative dbo:nativePlace dbr:Budapest .
  ?person dbo:child ?budaNative .
  
  # Ensure the person is the same as the grandchild found earlier
  FILTER (?grandchild = ?person)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,63,test,"Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?almaMater ?settlement ?writer
WHERE {
  # Find alter ego of Black Hood
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood dbo:alterEgo ?alterEgo .

  # Alma mater of George K. Nash and a settlement in his administration
  dbr:George_K._Nash dbo:almaMater ?almaMater .
  OPTIONAL {
    ?nashAdministration dbo:member dbr:EntityInNashAdministration .
    ?entityInNashAdministration dbo:settlementType ""settlement"" .
    BIND(?entityInNashAdministration AS ?settlement)
  }

  # Writer of the song ""Where It's At""
  dbr:""Where_It%27s_At_(Dustin_Lynch_song)"" dbo:lyricsWriter ?writer .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
54,53,test,"Give me the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfThadoMinsaw WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Monarch ;
               dbo:country dbr:Myanmar ;
               dbo:spouse ?mother .
  
  # Thinkhaya of Pagan's child and the child's father (Thinkhaya)
  ?thinkhaya a dbo:Monarch ;
             dbo:country dbr:Myanmar ;
             dbo:child ?child1 .

  ?child1 dbo:father ?thinkhaya ;
          dbo:child ?grandChild .

  # Predecessor of grandChild, who is an office holder and royalty related to Thihapate
  ?thihapate a dbo:Monarch ;
              dbo:country dbr:Myanmar ;
              dbo:predecessor ?predecessor .
  
  FILTER (?predecessor = ?grandChild)
  
  # Ensure the predecessor is also an office holder and royalty
  ?predecessor a dbo:OfficeHolder, dbo:Royalty .

  # Find the parent of Thado Minsaw who matches the predecessor
  ?parentOfThadoMinsaw a dbo:Monarch ;
                       dbo:child ?thadoMinsaw .
  
  FILTER (?parentOfThadoMinsaw = ?predecessor)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,58,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Francisco Largo Caballero's involvement in the Rif War
  ?rifWarEvent a dbo:MilitaryConflict ;
               dbo:participatedInMilitaryForce dbr:Fran%C3%A7ois_Largo_Caballero .

  # El Director's involvement as a commander
  ?elDirectorEvent a dbo:MilitaryConflict ;
                   dbo:commander ?commander .

  # Linking the events to find common commanders
  FILTER(?rifWarEvent = ?elDirectorEvent)
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
9,43,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v4 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterJohnAlderdice ?almaMaterQUB
WHERE {
  # Alma mater of John Alderdice
  OPTIONAL {
    dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .
  }
  
  # Alma mater associated with Queen's University Belfast (QUB) and Royal Medals
  OPTIONAL {
    dbr:Queen's_University_Belfast dbo:awardsReceived ?award .
    ?award dbo:recipient ?recipient .
    ?recipient dbo:almaMater ?almaMaterQUB .
    
    FILTER EXISTS { 
      ?award dbo:name ""Royal Medal""@en .
    }
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
645,19,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of the parent of Adela Pankhurst.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find James Wilkes Maurice's residence country
  ?mrs a dbo:Person ;
      foaf:name ""James Wilkes Maurice"" .
  
  OPTIONAL { ?mrs dbo:residenceLocation ?residence . }
  OPTIONAL { ?residence dbo:country ?country . }

  # Find Adela Pankhurst's parent and their child's alma mater
  ?ap a dbo:Person ;
      foaf:name ""Adela Pankhurst"" .
  
  OPTIONAL { ?ap dbo:parent ?parent . }
  OPTIONAL { ?parent dbo:child ?child . }
  OPTIONAL { ?child dbo:almaMater ?almaMater . }

  # Find the intersection of the country and alma mater
  FILTER (?country = ?almaMater)
  
  BIND(?country AS ?entity)
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
617,20,test,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?child ?spouse WHERE {
  # Find children of Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?child .
  
  # For each child, find their spouses
  ?child dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,3,71,4,2,0,0.6666666666666666,1.0,0.8
547,29,test,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  VALUES (?person ?label) {
    (dbr:Alan_Cunningham ""Alan Cunningham"") 
    (dbr:Enemy_at_the_Door_(film)_actor ""Actor of Enemy at the Door"")
    (dbr:James_Burton_(Egyptologist) ""James Burton (Egyptologist)"")
  }
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```

This query uses `VALUES` to specify the individuals we are interested in. It attempts to find their death places using the `dbo:deathPlace` property.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
994,50,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Fredrik Thordendal and his band Meshuggah
  dbr:Fredrik_Thordendal dbo:memberOfBand dbr:Meshuggah .
  
  # Members of Meshuggah who are also bands/groups (organizations)
  ?member dbo:memberOfBand dbr:Meshuggah .
  ?member a dbo:MusicalArtist ;
          dbo:bandMemberOf ?organization .
  FILTER(?organization != dbr:Meshuggah) .

  # Associated musical artist of the member
  ?member dbo:associatedWith ?associatedArtist .
  
  # Donald Maynard Dokken as a musical artist
  dbr:Don_Dokken dbo:birthName ""Donald Maynard Dokken"" ;
                 a dbo:MusicalArtist .
}
```",5,10,6,3,2,3,3,71,0,0,1,0,0.0,0
488,20,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEnomoto ?deathPlaceFatherYuki
WHERE {
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Yūki Hideyasu's father, who is a politician
  OPTIONAL { 
    dbr:Yūki_Hideyasu dbo:father ?fatherYuki .
    ?fatherYuki rdf:type dbo:Politician .
    ?fatherYuki dbo:deathPlace ?deathPlaceFatherYuki .
  }
}
```",3,4,4,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
392,26,test,"Give me the entity in the region, that is a country, of Central European Time and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Find Sebastiano Bianchetti's residence
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@en .
  
  ?residence dbo:resident ?person ;
             dbo:settlement dbr:Italy ;  # Ensure the settlement is in Italy
             dbo:country ?country .

  # The country should be in Central European Time
  ?country dbp:timeZone ""Central European Time"" .

  # The residence should be a settlement and Italian
  ?residence rdf:type dbo:Settlement ;
             rdfs:label ?settlementLabel .
  
  FILTER (lang(?settlementLabel) = 'it')  # Ensure the label is in Italian

  # Find the province of the residence
  ?province dbo:country ?country ;
            dbo:settlement ?residence .

  # The region should also be in Central European Time
  ?region dbp:timeZone ""Central European Time"" .
  
  # Link the province to a region
  ?province dbo:partOfRegion ?region .

  # Return the entity (settlement) that matches all criteria
  BIND(?residence AS ?entity)
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,57,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist1 ?associatedArtist2 WHERE {
  # Step 1: Find S.A. Slayer and its associated musical artist
  dbr:S_A_Slayer a dbo:Band ;
                 dbo:bandMember ?member1 .
  
  ?member1 dbo:associatedMusicalArtist ?associatedArtist1 .

  # Step 2: Find the band member of S.A. Slayer who is also part of another band and group that is an organization
  ?member1 dbo:bandMember ?otherBand ;
          dbo:associatedMusicalArtist ?associatedArtist2 .
  
  ?otherBand a dbo:Band, dbo:Organization .

  # Step 3: Find Fredrik Thordendal's band which is an organization
  dbr:Fredrik_Thordendal a dbo:Person ;
                         dbo:bandMember ?thordendalBand .
  
  ?thordendalBand a dbo:Band, dbo:Organization .

  # Step 4: Find the person born as Donald Maynard Dokken and their associated musical artist
  dbr:Don_Dokken a dbo:Person ;
                 foaf:name ""Donald Maynard Dokken""^^xsd:string ;
                 dbo:associatedMusicalArtist ?dokkenArtist .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
838,17,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of Raša Đelmaš.","SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Find members of YU Grupa
  ?yugrupa a dbo:Band ;
           dbo:bandMember ?member .

  FILTER (str(?yugrupa) = ""YU_Grupa"") .

  # Find Raša Đelmaš's band and its members
  ?rasa a dbo:Person ;
        foaf:name ""Raša Đelmaš"" ;
        dbo:bandMember ?memberOfRasaBand .

  ?rasaBand a dbo:Band ;
            dbo:bandMember ?memberOfRasaBand .

  FILTER (str(?rasaBand) = str(?yugrupa)) .
}
```

This query does the following:
- It selects distinct band members (`?member`) who are part of ""YU Grupa"".
- It checks if these members are also associated with Raša Đelmaš's band.
- The `FILTER` conditions ensure that we are comparing the correct entities.",4,7,5,3,2,3,2,20,0,0,4,0,0.0,0
994,27,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Identify Don Dokken as a musical artist with his birthdate
  dbr:Don_Dokken dbo:birthDate ?birthdate .
  
  # Ensure he is recognized as a musical artist
  dbr:Don_Dokken a dbo:MusicalArtist .

  # Find band members associated with him
  ?bandMember dbo:member dbr:Don_Dokken ;
              a dbo:Band .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
281,54,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war ?birthCountry
WHERE {
  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Wars involving this person and New Zealand Army
  ?war dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:participant ?person ;
    dbo:participant dbr:New_Zealand_Army
  ] .

  # Leader of the 1962 New South Wales state election
  ?leader dbp:office ""Leader of the Opposition (New South Wales)""@en ;
          dbo:termStart ?start .
  
  FILTER(YEAR(?start) = 1962)

  # Birthplace country of this leader
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  BIND(STR(?birthPlace) AS ?birthCountry)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,26,test,Give me the parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandparent WHERE {
  # Step 1: Identify Seti I
  ?setiI a dbo:Person ;
         rdfs:label ""Seti I""@en .

  # Step 2: Find children of Seti I
  ?child dbo:spouseOrChildOf ?setiI .

  # Step 3: Find grandchildren (children of Seti I's children)
  ?grandchild dbo:spouseOrChildOf ?child .

  # Step 4: Find parents of the grandchildren
  ?parent dbo:spouseOrChildOf ?grandchild .
  
  # Ensure we are getting distinct grandparent entities
  FILTER(?parent != ?setiI) 
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
547,54,test,Give me the resting place of the child of James Burton (property developer) and resting place of the actor of the show with Emily Richard and resting place of Alan Cunningham.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childRestingPlace ?actorRestingPlace ?alanCunninghamRestingPlace WHERE {
  # James Burton's child
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:spouse ?spouse .
  ?child dbo:parent ?jamesBurton ;
         dbo:deathPlace ?childDeathPlace .

  OPTIONAL { ?childDeathPlace dbo:location ?childRestingPlace . }

  # Emily Richard's show and actor
  ?show dbo:actor ?actor ;
        dbp:starring dbr:Emily_Richard .
  ?actor dbo:deathPlace ?actorDeathPlace .

  OPTIONAL { ?actorDeathPlace dbo:location ?actorRestingPlace . }

  # Alan Cunningham
  ?alanCunningham a dbo:Person ;
                  foaf:name ""Alan Cunningham"" ;
                  dbo:deathPlace ?alanCunninghamDeathPlace .
  
  OPTIONAL { ?alanCunninghamDeathPlace dbo:location ?alanCunninghamRestingPlace . }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
294,22,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?politicianRestingPlace ?architectRestingPlace WHERE {
  # Find the politician who received the Distinguished Service Medal (U.S. Army)
  ?person dbo:award ""Distinguished Service Medal (United States)""@en .
  ?person rdf:type dbo:Politician .

  OPTIONAL { 
    ?person dbp:placeOfBurial ?politicianRestingPlace .
  }

  # Find the architect of P. D. Houston Jr. House
  ?architect dbo:work ""P. D. Houston Jr. House""@en .
  
  OPTIONAL {
    ?architect dbp:placeOfBurial ?architectRestingPlace .
  }
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
232,47,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Identify Jon Pertwee
  dbr:Jon_Pertwee a dbo:Actor ;
                  foaf:name ""Jon Pertwee"" .

  # Find his claim to fame, which is both a film and related to a military conflict
  ?fame dbo:associatedWith dbr:Jon_Pertwee ;
        rdf:type dbo:Film ;
        dbo:genre ?genre .
  
  ?conflict dbo:relatedTo ?fame ;
            rdf:type dbo:MilitaryConflict .

  # Find the actor associated with this fame (film)
  ?fame dbo:starring ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
161,29,test,"Give me the commander in Biscay Campaign and military force of Rif War and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?rifWarForce ?societalEvent ?militaryConflict
WHERE {
  # Biscay Campaign commander
  OPTIONAL {
    ?biscayCampaign dbo:commander ?commander .
    FILTER EXISTS { ?biscayCampaign a dbo:MilitaryOperation . }
    FILTER regex(str(?biscayCampaign), ""Biscay Campaign"", ""i"")
  }

  # Rif War military force
  OPTIONAL {
    ?rifWar dbo:militaryForce ?rifWarForce .
    FILTER EXISTS { ?rifWar a dbo:Battle . }
    FILTER regex(str(?rifWar), ""Rif War"", ""i"")
  }

  # Francisco Largo Caballero's societal event and military conflict
  OPTIONAL {
    ?franciscoLargoCaballero dbo:societalEvent ?societalEvent .
    ?franciscoLargoCaballero dbo:militaryConflict ?militaryConflict .
    FILTER EXISTS { ?franciscoLargoCaballero a dbo:Person . }
    FILTER regex(str(?franciscoLargoCaballero), ""Francisco Largo Caballero"", ""i"")
  }

  # Bind Francisco Largo Caballero to the query
  VALUES ?franciscoLargoCaballero { dbr:Francisco_Largo_Caballero }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
16,47,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonProfession WHERE {
  # Find the actor of ""Unnatural"" (TV series)
  ?actor dbo:profession dbr:Actor .
  ?actor dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Find Ted Martin McGinley and his spouse
  ?ted a dbo:Person ;
      foaf:name ""Ted Martin McGinley""@en ;
      dbo:birthName ""Ted Martin McGinley"" .
  
  ?ted dbo:spouse ?spouse .

  # Get the professions of both individuals
  ?actor dbo:profession ?actorProfession .
  ?spouse dbo:profession ?spouseProfession .

  # Find common profession
  FILTER(?actorProfession = ?spouseProfession)
  BIND(?actorProfession AS ?commonProfession)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,24,test,Give me the party of Romano Prodi and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?prodiPartyLabel ?andreottiFatherPartyLabel WHERE {
  # Romano Prodi's political party
  ?prodi dbo:party ?prodiParty .
  ?prodi rdfs:label ""Romano Prodi""@en .

  # Lamberto Andreotti's father (Giuseppe Andreotti) and his political party
  ?andreottiFather dbo:fatherOf dbp:Lamberto_Andreotti .
  ?andreottiFather rdfs:label ""Giuseppe Andreotti""@en .
  ?andreottiFather dbo:party ?andreottiFatherParty .

  # Get labels for the parties
  SERVICE <http://dbpedia.org/sparql> {
    ?prodiParty rdfs:label ?prodiPartyLabel .
    FILTER(LANG(?prodiPartyLabel) = 'en')
    
    ?andreottiFatherParty rdfs:label ?andreottiFatherPartyLabel .
    FILTER(LANG(?andreottiFatherPartyLabel) = 'en')
  }
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
801,45,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in  and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album a dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Step 2: Find the writer of this album who is also a musical artist and an artist
  ?writer dbo:work ?album ;
          a dbo:MusicalArtist, dbo:Artist .

  # Step 3: Check if this writer is a producer for ""Westside Story"" (song)
  ?producerWork a dbo:Song ;
                rdfs:label ""Westside Story""@en .
  
  ?writer dbo:producedBy ?producerWork .

  # Step 4: Retrieve the associated musical artist
  ?associatedArtist dbo:associatedMusicalArtist ?writer ;
                    a dbo:MusicalArtist .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
747,62,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v0 <http://dbpedia.org/property/writer> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find the decedent's birth date
  ?decedent dbo:dateOfBirth ?birthDate .
  
  # Find a person born on the same date, who is an athlete and soccer player from Zolotonosha
  ?person dbo:dateOfBirth ?sameBirthDate ;
          dbo:birthPlace dbr:Zolotonosha ;
          rdf:type dbo:Athlete ;
          dbo:sport dbr:Soccer .
  
  # Ensure the birth dates match
  FILTER (?birthDate = ?sameBirthDate)
  
  # Find a band associated with the writer of a song by Amba Shepherd and Shèna
  ?song dbp:lyricsBy ?writer .
  ?band dbo:member ?person ;
        dbo:associatedBandMember ?writer .
  
  # Ensure the song is by Amba Shepherd and Shèna
  FILTER EXISTS { ?song dbr:Amba_Shepherd . }
  FILTER EXISTS { ?song dbr:Shèna . }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
328,45,test,"Give me the commander in Eastern Front (World War II) and awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?officeLeader WHERE {
  # Find the commander of the Eastern Front during World War II who is an awardee of the Order of Suvorov
  ?commander dbo:rank ?rank .
  ?commander dbo:awards ?award .
  ?award rdfs:label ""Order of Suvorov""@en .

  # Ensure this person was a leader of a government agency office
  ?officeLeader dbo:leader ?commander ;
                a dbo:GovernmentAgency .

  # Link the office to Gustav Jonson, who is a politician and office holder
  ?gustavJonson dbo:positionHeld ?officeLeader .
  ?gustavJonson rdfs:label ""Gustav Jonson""@en .
  ?gustavJonson a dbo:Politician ;
                a dbo:OfficeHolder .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
492,36,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent WHERE {
  # Find the capital of Khemis Miliana District
  ?capital dbo:country dbr:Algeria ;
           dbo:settlementType dbr:Settlement ;
           rdfs:label ""Khemis Miliana""@en .

  # Ensure it is a settlement
  ?capital dbo:settlementType ?settlementType .
  
  FILTER (CONTAINS(LCASE(?settlementType), ""settlement""))

  # Find person decedent associated with the capital and French Algeria
  ?personDecedent dbo:deathPlace ?capital ;
                  dbo:nationality dbr:French_Algeria .

}
```",4,5,5,3,2,3,3,71,0,0,16,0,0.0,0
16,18,test,Give me the professional in Actress and spouse of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Ted McGinley""@en .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""actress""))
}
```

This query does the following:
- Selects a person (`?person`) who is an instance of `dbo:Person`.
- Ensures that this person's birth name is ""Georgeanne Marie Rice.""
- Checks for a spouse relationship where the spouse's name is Ted McGinley.
- Confirms that one of the occupations includes ""actress.""",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,65,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick and his father
  ?ernestAugustus a dbo:Person ;
                 foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  ?father dbo:spouse ?princessVictoriaLouise ;
          dbo:child ?ernestAugustus .

  # Step 2: Identify Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         foaf:name ""Princess Victoria Louise of Prussia""@en .
  
  # Step 3: Find the child of Princess Victoria Louise who is royalty
  ?child dbo:parent ?princessVictoriaLouise ;
         a dbo:RoyalFamilyMember .

  # Step 4: Identify the parent of this child who is royalty
  ?parent dbo:child ?child ;
          a dbo:RoyalFamilyMember .

  # Step 5: Find the grandchild of this parent who is royalty
  ?grandchild dbo:parent ?parent ;
              a dbo:RoyalFamilyMember .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
959,47,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?university WHERE {
  # Step 1: Find Eiji Ōtsuka's alma mater
  ?eiji dbo:almaMater ?university .
  FILTER (strstarts(str(?university), ""University of Tokyo"")) # Assuming a known university for demonstration

  # Ensure the university is Japanese and an organization, university, educational institution
  ?university dbo:country dbr:Japan ;
              rdf:type dbo:Organisation ;
              rdf:type dbo:AcademicBuilding ;
              rdf:type dbo:EducationalOrganization .

  # Step 2: Find the leader of the 2010 Japanese House of Councillors election
  ?election dbo:leader ?leader .
  FILTER (strstarts(str(?election), ""Japanese_House_of_Councillors_election,_2010"")) # Assuming a known resource for demonstration

  # Step 3: Determine the native country of this leader based on their residence
  ?leader dbo:residenceCountry ?country .

  # Ensure the leader is a politician
  ?leader rdf:type dbo:Politician .
}
```",5,11,6,3,2,3,3,71,0,0,84,0,0.0,0
427,63,test,"Give me the party of the father of Lamberto Andreotti and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v6 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherPartyLabel ?michelePintoPartyLabel ?romanoProdiPartyLabel
WHERE {
  # Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .
  ?fatherParty rdfs:label ?fatherPartyLabel .

  # Michele Pinto's party
  dbr:Michele_Pinto dbo:partyAffiliation ?michelePintoParty .
  ?michelePintoParty rdfs:label ?michelePintoPartyLabel .

  # Romano Prodi's birthplace, office holder status, and party
  dbr:Romano_Prodi dbo:birthPlace ?birthPlace ;
                   a dbo:OfficeHolder ;
                   dbo:partyAffiliation ?romanoProdiParty .
  ?romanoProdiParty rdfs:label ?romanoProdiPartyLabel .
}
```

This query retrieves the political party affiliations for Lamberto Andreotti's father, Michele Pinto, and Romano Prodi. It uses DBpedia properties such as `dbo:father`, `dbo:partyAffiliation`, and checks if Romano Prodi is an office holder.",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
778,16,test,"Give me the entity in the award of Ralph L. Brinster and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find Ralph L. Brinster and his award
  ?ralph a dbo:Person ;
         foaf:name ""Ralph L. Brinster"" ;
         dbo:honoraryTitle ?award .

  # Find Bill Joy's works, specifically software
  ?bill a dbo:Person ;
        foaf:name ""Bill Joy"" .
  
  ?work dbo:author ?bill ;
        dbo:type dbr:Software .

  # Find the common entity related to both Ralph L. Brinster's award and Bill Joy's work
  ?entity dbo:honoraryTitle ?award ;
          dbo:software ?work .
}
```

This query assumes:
- `dbo:honoraryTitle` is used for awards.
- `foaf:name` is used for names of persons.
- `dbo:type` can be used to specify the type of work, such as software.",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
9,66,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Mayor of Northern Ireland Forum
  ?mayor dbo:position dbr:Northern_Ireland_Forum_Mayor .
  
  # Alma mater of the mayor
  ?mayor dbo:almaMater ?almaMater .

  # Awardee of Royal Medal
  ?awardee dbo:award dbr:Royal_Medal .
  ?awardee dbo:almaMater ?almaMater .

  # Figure known as a nickname for an organization and educational institution
  ?figure rdfs:label ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""northern ireland"")).
  ?figure dbo:almaMater ?almaMater .
  
  # Ensure the alma mater is both an organization and an educational institution
  ?almaMater a dbo:EducationalInstitution ;
             a dbo:Organisation .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
281,66,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInBirthPlace ?militaryUnit ?officeHolder ?awardee
WHERE {
  # Step 1: Identify Bob Heffron's birthplace
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .

  # Step 2: Check if the birthplace is a country
  ?birthPlace rdf:type dbo:Country .
  
  # Step 3: Find his profession related to military units in New Zealand Army
  OPTIONAL {
    dbr:Bob_Heffron dbo:profession ?militaryProfession .
    ?militaryProfession dbo:relatedUnit ?militaryUnit .
    FILTER(CONTAINS(LCASE(?militaryUnit), ""new zealand army""))
  }

  # Step 4: Identify any office holder and politician associated with him
  OPTIONAL {
    dbr:Bob_Heffron dbo:officeHolder ?officeHolder .
    ?officeHolder rdf:type dbo:Politician .
  }
  
  # Step 5: Check for an award of Knight Grand Cross of the Order of the Bath
  OPTIONAL {
    ?awardee dbo:award ?orderOfTheBath .
    ?orderOfTheBath dbp:name ""Knight Grand Cross of the Order of the Bath"" .
    FILTER(?awardee != dbr:Bob_Heffron) # Ensure it's not Bob Heffron himself
  }
  
  # Get entity in birth place that is a country
  OPTIONAL {
    ?birthPlace dbo:entityInBirthPlace ?entityInBirthPlace .
  }
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
747,69,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v7 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?bandOfShena ?writerBand WHERE {
  # Step 1: Find the birth date of a notable person referred to as ""decedent""
  SELECT ?birthDate WHERE {
    ?person dbo:deathPlace dbr:Decedent ;
            dbo:birthDate ?birthDate .
  } LIMIT 1

  # Step 2: Find an athlete and soccer player born in Zolotonosha on that birth date
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate .

  # Step 3: Find the band of the person born as Shèna
  ?shena a dbo:MusicalArtist ;
         rdfs:label ""Shèna""@en ;
         dbo:band ?bandOfShena .

  # Step 4: Find the writer of the song ""Apollo"" by Hardwell
  ?song dbp:composer ?writer ;
        rdfs:label ""Apollo""@en .
  
  # Step 5: Find the band of that writer
  ?writer dbo:band ?writerBand .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
92,21,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of Joseph Michael.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Artist in Nevermore
  ?nevermoreMember dbo:memberOf dbr:Nevermore .
  
  # Artist associated with Joseph Michael's band (Ill Niño)
  ?illNinoMember dbo:memberOf dbr:Ill_Ni_o .

  # Link to the artist entity
  ?nevermoreMember dbo:artist ?artist .
  ?illNinoMember dbo:artist ?artist .

  # Ensure the artist is linked to Joseph Michael
  ?artist dbo:associatedBand dbr:Ill_Ni_o ;
          dbo:memberOf dbr:Nevermore .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
161,70,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Francisco Franco's military force (Spanish Civil War)
  dbr:Francisco_Franco dbo:militaryConflict dbr:Spanish_Civil_War .
  
  # Spanish Civil War commanders
  dbr:Spanish_Civil_War dbo:commander ?commander .

  UNION

  # Predecessor of Indalecio Prieto (Alejandro Lerroux)
  dbr:Alejandro_Lerroux dbo:predecessor dbr:Indalecio_Prieto .
  
  # Alejandro Lerroux's military force
  dbr:Alejandro_Lerroux dbo:militaryConflict ?militaryEvent .

  # Commanders of the military event associated with Alejandro Lerroux
  ?militaryEvent dbo:commander ?commander .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
959,62,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  # Step 1: Find the manager born in 1958
  ?person dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:nationality dbr:Japan ;
          dbo:almaMater ?university ;
          dbp:managerOfSeason <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> .

  # Step 2: Determine the native residence (country) of this person
  ?person dbo:nativePlace ?residence .
  
  # Step 3: Find the leader of the 2010 Japanese House of Councillors election from that country
  ?leader dbo:election <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> ;
          dbo:country dbr:Japan ;
          dbo:nativePlace ?residence ;
          a dbo:Politician .

  # Step 4: Ensure the university is in Japan and an educational institution
  ?university dbo:location dbr:Japan ;
              a dbo:EducationalInstitution .
}
```",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
285,18,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in .,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  # Aristotle Onassis's spouse
  ?aristotleOnassisSpouse a dbo:Person ;
                         dbo:spouseOf <http://dbpedia.org/resource/Aristotle_Onassis> .

  # Child of the spouse (Jacqueline Kennedy Onassis)
  ?child a dbo:Person ;
         foaf:parent ?aristotleOnassisSpouse .

  # Parent of this child (John F. Kennedy)
  ?parent a dbo:Person ;
          foaf:parent ?child .

  # Spouse of the parent
  ?spouseOfParent a dbo:Person ;
                  dbo:spouse ?parent .
}
```",5,5,6,3,2,3,2,20,0,0,3,0,0.0,0
827,16,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?childOfChild WHERE {
  # Maria Pavlovna of Russia and her royal children
  ?mariaPavlovna a dbo:Person ;
                 foaf:name ""Maria Pavlovna of Russia""@en ;
                 dbo:spouse ?husband .
  
  ?royalChild1 dbo:parent ?mariaPavlovna ;
               dbo:occupation dbr:Royalty .

  # Child of Maria Pavlovna's royal child
  ?childOfChild dbo:parent ?royalChild1 ;
                dbo:occupation dbr:Royalty .

  # Charles Augustus and his royal children
  ?charlesAugustus a dbo:Person ;
                   foaf:name ""Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  ?royalChild2 dbo:parent ?charlesAugustus ;
               dbo:occupation dbr:Royalty .

  # Linking the childOfChild to being a parent of Charles Augustus' royal child
  ?royalChild2 dbo:parent ?childOfChild .
}
```

This query does the following:
- Identifies Maria Pavlovna and her children who are royalty.
- Finds the grandchildren (children of her royal children) who are also royalty.
- Identifies Charles Augustus and his royal children.
- Links the grandchild of Maria Pavlovna to being a parent of one of Charles Augustus' royal children.",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
747,39,test,Give me the band of Amba Shepherd and band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band1 ?band2 WHERE {
  # Amba Shepherd's band
  ?ambashepherd a dbo:MusicArtist ;
                foaf:name ""Amba Shepherd"" .
  ?ambashepherd dbo:memberOfBand ?band1 .

  # Shèna (Shena Easton)'s band
  ?shena a dbo:MusicArtist ;
         foaf:name ""Shena Easton"" .
  ?shena dbo:memberOfBand ?band2 .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,51,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?militaryUnit ?profession WHERE {
  # Find Bob Heffron's birthplace
  dbr:Bob_Heffron dbo:nationality dbr:Australia ;
                  dbo:birthPlace ?birthPlace .

  # Get the country of the birth place
  ?birthPlace a dbo:Country .

  # Find military units in New Zealand Army
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army ;
               dbo:participatedIn ?war .

  # Find professions related to office holders and politicians
  ?profession rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""office holder"") || CONTAINS(LCASE(?label), ""politician""))
  
  # Link the profession to the military unit (assuming a connection exists)
  ?militaryUnit dbo:hasOccupation ?profession .

}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
294,25,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  # Find politicians who received the Distinguished Service Medal (U.S. Army)
  ?person dbo:occupation dbr:Politician ;
          dbo:honoraryTitle dbr:Distinguished_Service_Medal_(United_States_Army) .

  # Ensure they are also architects of P.D. Houston Jr. House in Nashville, Tennessee
  OPTIONAL { 
    ?architecturalWork dbo:architect ?person .
    ?architecturalWork dbp:name ""P.D. Houston Jr. House""@en ;
                       dbo:location dbr:Nashville,_Tennessee .
  }

  # Retrieve the resting place of these individuals
  OPTIONAL {
    ?person dbo:finalRestingPlace ?restingPlace .
  }
  
  FILTER EXISTS { ?architecturalWork dbp:name ""P.D. Houston Jr. House""@en }
}
ORDER BY ?person",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
378,41,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war ?claimToFame WHERE {
  # Carl Pontus Gahn and his war
  OPTIONAL {
    VALUES (?person) { dbr:C._P._Gahn }
    ?person dbo:participatedInWar ?war .
  }

  # Commander in the Peninsular War and other wars
  OPTIONAL {
    ?commander dbo:participatedInWar dbr:Peninsular_War ;
               rdfs:label ?name .
    FILTER(CONTAINS(LCASE(?name), ""peninsular war""))
    ?commander dbo:participatedInWar ?otherWar .
  }

  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and his claim to fame
  OPTIONAL {
    VALUES (?person) { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
    ?person dbo:claimToFame ?claimToFame .
  }

  # Ensure we get distinct results for each person
  FILTER(?person != ?commander)
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
303,21,test,"Give me the entity in Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?party
WHERE {
  VALUES ?person { 
    dbr:Arnulfo_Arias_Madrid 
    dbr:Guillermo_Endara 
  }
  
  ?person dbo:birthPlace ?birthPlace .
  FILTER (CONTAINS(LCASE(STR(?birthPlace)), ""panama""))
  
  OPTIONAL { ?person dbo:party ?party . }
}
```",4,5,5,2,3,2,3,28,1,3,0,0.25,1.0,0.4
701,27,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find the Battle of Perire
  ?battle a dbo:Battle ;
          dbp:name ""Battle of Perire"" .

  # Identify the commander of this battle
  ?battle dbo:commander ?commander .

  # Determine the father of the commander
  ?commander dbo:father ?father .

  # Find the spouse of the father
  ?father dbo:spouse ?spouse .

  # Ensure the spouse is a royalty
  ?spouse rdf:type dbo:Monarch .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
959,58,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Find the manager of the 1998 Kashima Antlers team
  ?team dbo:manager ?manager .
  
  # Ensure the team is the 1998 Kashima Antlers
  ?team rdfs:label ""Kashima Antlers""@en .
  FILTER(YEAR(?team) = 1998)

  # The manager should be a sports manager
  ?manager rdf:type dbo:SportsManager .

  # The manager should have been a member of the University of Tsukuba
  ?manager dbo:almaMater dbr:University_of_Tsukuba .

  # The manager should be native to Japan (Yōichi Masuzoe's residence)
  ?manager dbo:nationality dbr:Japan .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
421,20,test,Give me the band member of Senidah and native of the birthplace of Samir Bekrić and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find Senidah's band member
  ?senidahBandMember dbo:memberOf dbr:Senidah .
  
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find the person born as Edin Dervišhalidović
  ?person dbo:birthName ""Edin Dervišhalidović""@en .
  
  # Ensure the band member is from Samir Bekrić's birthplace and is the same person
  ?senidahBandMember dbo:nativeOf ?birthPlace .
  ?senidahBandMember = ?person
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
767,44,test,Give me the alma mater of the administration of George K. Nash and reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo ?entityInBadenWuerttemberg WHERE {
  # Alma mater of George K. Nash
  OPTIONAL { 
    ?nash dbo:almaMater ?almaMatter .
    ?almaMatter rdfs:label ?almaMater .
    FILTER (lang(?almaMater) = 'en')
    BIND(dbr:""George_K._Nash"" AS ?nash)
  }

  # Alter ego of Black Hood
  OPTIONAL {
    ?blackHood dbo:alterEgo ?alterEgoEntity .
    ?alterEgoEntity rdfs:label ?alterEgo .
    FILTER (lang(?alterEgo) = 'en')
    BIND(dbr:""Black_Hood"" AS ?blackHood)
  }

  # Entity in Baden-Württemberg
  OPTIONAL {
    ?entity dbo:location dbr:Baden-Württemberg .
    ?entity rdfs:label ?entityInBadenWuerttemberg .
    FILTER (lang(?entityInBadenWuerttemberg) = 'en')
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
994,56,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 ?bandMember
WHERE {
  # Find associated musical artist of Watchtower
  ?watchtower dbr:Watchtower .
  ?watchtower dbo:musicalArtist ?artist1 .

  # Find associated musical artist of Red Tide
  ?redTide dbr:Red_Tide_(band) .
  ?redTide dbo:musicalArtist ?artist2 .

  # Find band member of Don Dokken who is a musical artist and was born as such
  ?dokken dbr:Don_Dokken .
  ?dokken dbo:member ?bandMember .
  ?bandMember dbo:birthPlace ?place .
  ?bandMember dbo:occupation dbr:Musical_artist .

  # Ensure the band member is a musical artist
  ?bandMember dbo:musicalArtist ?artist3 .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
488,64,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaitoHajime ?administrationFatherSpouseMasako ?deathPlaceTokugawaIeyasu
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaitoHajime .

  # War involving Saitō Hajime (assuming it is the Boshin War)
  dbr:Boshin_War a dbo:MilitaryConflict ;
                 a dbo:Event ;
                 a dbo:SocietalEvent .
  
  # Tokugawa Masako's father's spouse who is royalty
  dbr:Tokugawa_Masako dbo:father ?fatherMasako .
  ?fatherMasako dbo:spouse ?motherMasako .
  ?motherMasako rdf:type dbo:Royalty .
  ?motherMasako dbo:administration ?administrationFatherSpouseMasako .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
528,51,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero""@en ;
          dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:militaryCommanderOf ?command . }
  OPTIONAL { ?command dbo:commandedForce ?force . }
}
```

### Part 2: Commander in the Battle of La Rinconada de Ate

Next, we identify the commander involved in the Battle of La Rinconada de Ate.

```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle a dbo:Battle ;
          dbo:name ""Battle of La Rinconada de Ate""@en .
  OPTIONAL { ?battle dbo:commander ?commander . }
}
```

These queries will help us gather the necessary information to answer the question.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
92,24,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Jim Sheppard
  ?jimSheppard a dbo:Person ;
              foaf:name ""Jim Sheppard"" ;
              dbo:birthName ""Jim Sheppard"" .
  
  # Find Joseph Michael
  ?josephMichael a dbo:Person ;
                 foaf:name ""Joseph Michael"" ;
                 dbo:birthName ""Joseph Michael"" .

  # Get the band associated with Jim Sheppard
  ?band1 dbo:member ?jimSheppard .
  
  # Get the band associated with Joseph Michael
  ?band2 dbo:member ?josephMichael .

  # Find artists associated with these bands
  ?artist dbo:associatedBand ?band1 ;
          dbo:associatedBand ?band2 .
}
```

This query does the following:
- Identifies Jim Sheppard and Joseph Michael as individuals.
- Finds the bands they are members of.
- Retrieves any musical artist associated with both bands.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
617,42,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus and his children
  ?seleucus2 a dbo:Monarch ;
             dbp:spouse ?mother ;
             dbp:child ?child1 .

  # Children of Seleucus II (his grandchildren)
  ?child1 dbp:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Antiochus III the Great and his son Antiochus
  ?antiochus3 a dbo:Monarch ;
              dbp:son ?antiochus4 .

  # Child of Antiochus (son of Antiochus III)
  ?antiochus4 dbp:child ?child2 .

  # Laodice IV and her spouse
  ?laodice4 a dbo:Monarch ;
            dbp:spouse ?spouseLaodice .

  # The grandchild must be the parent of Antiochus's child and spouse of Laodice IV
  FILTER (?grandchild = ?spouseLaodice && ?grandchild = ?parentChild2) .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
92,57,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v5 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?bandMember ?associatedArtist ?finalBand
WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .

  # Step 2: Check if this actor is a band member of Nevermore
  ?actor dbo:memberOfBand dbr:Nevermore .

  # Step 3: Find the associated musical artist of Joseph Michael Furney (Jeff Loomis)
  dbr:Jeff_Loomis dbo:birthName ""Joseph Michael Furney""@en .
  ?loomisBand dbo:bandMember dbr:Jeff_Loomis .
  
  # Step 4: Find a band that includes both the actor and Jeff Loomis
  ?finalBand dbo:bandMember ?actor ;
             dbo:bandMember ?loomisBand .

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
92,35,test,"Give me the band of the person born as Joseph Michael Furney and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Warrel Dane"" ;
          dbo:birthName ""Joseph Michael Furney"" .
  
  ?membership dbo:member ?person ;
              dbo:musicGroup ?band .

  FILTER EXISTS { ?band rdfs:label ""Nevermore""@en }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
345,19,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen and figure known as the nickname of FC Vaduz.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  VALUES (?eiðurBirthDate) { 
    SELECT ?birthDate WHERE { 
      dbr:Eiður_Guðjohnsen dbo:birthday ?birthDate .
    }
  }

  # Step 2: Find a person who is both a soccer player and manager, born on Eiður's birth date
  VALUES (?person) {
    SELECT ?person WHERE {
      ?person dbo:birthDate ?eiðurBirthDate ;
              (dbo:sport dbr:Soccer ; dbo:occupation dbr:Soccer_manager) .
    }
  }

  # Step 3: Get the nickname of FC Vaduz
  VALUES (?nickname) { 
    SELECT ?nickname WHERE {
      dbr:FC_Vaduz dbp:nickname ?nickname .
    }
  }

  # Step 4: Find the team associated with this person
  ?person dbo:currentTeam ?team ;
          rdfs:label ?label .
  
  FILTER regex(?label, ""^(?!Eiður Guðjohnsen).*$"", ""i"") # Exclude Eiður Guðjohnsen himself

}",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
801,29,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify Chris Taylor as a music producer
  dbr:Chris_Taylor_(music_producer) dbo:profession dbr:Music_production .
  
  # Find works produced by Chris Taylor
  ?work dbo:producer dbr:Chris_Taylor_(music_producer) ;
        a dbo:Songs .

  # Ensure the work is associated with 50 Cent
  ?work dbo:artist dbr:50_Cent .

  # Retrieve other artists associated with these works
  ?work dbo:artist ?artist .
  
  FILTER(?artist != dbr:50_Cent)
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
184,69,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v7 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalEntity WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthDate ?birthDate .
  FILTER(YEAR(?birthDate) = 1925)

  # Parent of Margaret
  ?parent1 dbo:child ?margaret .

  # Child of the parent of Margaret
  ?grandchild1 dbo:parent ?parent1 .

  # Archduke Joseph Karl of Austria
  ?joseph a dbo:Person ;
          foaf:name ""Joseph Karl of Austria"" .

  # Child of Joseph Karl
  ?child2 dbo:parent ?joseph .

  # Parent of the child of Joseph Karl
  ?grandparent2 dbo:child ?child2 .

  # Landmark at elevation 96.0
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .

  # Native landmark of the settlement
  ?nativeLandmark dbo:nativeOf ?landmark .

  # Parent of the native landmark
  ?parent3 dbo:child ?nativeLandmark .

  # Final entity: parent of grandchild1 and child of grandparent2, and parent of parent3
  ?finalEntity dbo:child ?grandchild1 ;
               dbo:parent ?grandparent2 ;
               dbo:child ?parent3 .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
391,62,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Find the notable figure associated with Jackson, Tennessee
  ?figure dbo:nativePlace dbr:Jackson,_Tennessee .
  
  # Step 2: Identify the spouse of Sherry Hormann and their famous work
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  ?work dbo:starring ?actor .
  ?spouse dbo:film ?work .

  # Step 3: Find the actor from ""All About the Andersons""
  ?andersonFilm dbo:title ""All About the Andersons""@en .
  ?andersonFilm dbo:starring ?actor .

  # Combine conditions to find the native of the figure
  FILTER(?figure = ?actor)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,45,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of The Departed.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor ;
         dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .

  ?actor dbo:profession dbr:Acting .
  
  ?actor dbo:film dbr:The_Departed .

  ?movie dbo:starring ?actor .
  ?work dbo:starring ?actor .
  ?tvShow dbo:starring ?actor .

  FILTER(?movie != ?work && ?work != ?tvShow && ?tvShow != ?movie)
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
427,59,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?micheleParty ?fatherParty WHERE {
  # Find Michele Pinto's political party
  OPTIONAL {
    ?michele a dbo:Person ;
             foaf:name ""Michele Pinto"" .
    ?michele dbo:party ?micheleParty .
  }

  # Find an MIT alumnus and their father's political party
  OPTIONAL {
    ?alumnus a dbo:AlumniOf ;
             dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
             foaf:parent ?father .
    ?father dbo:party ?fatherParty .
  }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
754,18,test,Give me the parent of the parent of the parent of Min Linka and parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?ancestorMinLinka ?ancestorRamKhamhaeng WHERE {
  # Min Linka's lineage
  ?minLinka dbo:wikiPageRedirects db:Q123456 .
  ?parent1 dbo:child ?minLinka .
  ?grandparent1 dbo:child ?parent1 .
  ?greatGrandparent1 dbo:child ?grandparent1 .
  ?ancestorMinLinka dbo:child ?greatGrandparent1 .

  # Ram Khamhaeng's lineage
  ?ramKhamhaeng dbo:wikiPageRedirects db:Q654321 .
  ?childRamKhamhaeng dbo:parent ?ramKhamhaeng .
  ?ancestorRamKhamhaeng dbo:child ?childRamKhamhaeng .

}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
378,54,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?claimToFame ?war2
WHERE {
  # Carl Pontus Gahn's war
  dbr:C._P._Gahn dbo:militaryConflict ?war1 .
  
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ?claimToFame .

  # Peninsular War related conflict
  FILTER (CONTAINS(LCASE(?war2), ""peninsular war""))
  ?commander dbo:militaryConflict ?war2 .
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
701,65,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfGrandchild
WHERE {
  # Seti I's children
  ?setiIChild dbo:child dbr:Seti_I .
  
  # Grandchildren of Seti I (children of Seti I's children)
  ?grandchild dbo:child ?setiIChild .

  # Ramesses II is the father of Merneptah
  ?ramessesII dbo:child dbr:Merneptah .

  # Spouses of Ramesses II
  ?spouseOfRamessesII dbo:spouse ?ramessesII .
  
  # Children of Nefertari (who is a spouse of Ramesses II)
  ?childOfNefertari dbo:parent ?spouseOfRamessesII ;
                   dbo:parent dbr:Nefertari .

  # Parent of the child of Nefertari
  ?parentOfChildOfNefertari dbo:child ?childOfNefertari .
  
  # The parent we are looking for is both a spouse of Ramesses II and a parent of Seti I's grandchild
  FILTER (?spouseOfRamessesII = ?parentOfGrandchild)
  FILTER (?grandchild = ?parentOfChildOfNefertari)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
783,18,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Priscilla Opoku-Kwarteng's band members
  ?priscilla a dbo:MusicalArtist ;
             foaf:name ""Priscilla Opoku-Kwarteng"" .
  
  ?priscillaBandMember dbo:member ?priscilla .

  # Find Samuel Ofori Amponsah's band members
  ?samuel a dbo:MusicalArtist ;
          foaf:name ""Samuel Ofori Amponsah"" .
  
  ?samuelBandMember dbo:member ?samuel .

  # Find common band member
  FILTER (?priscillaBandMember = ?samuelBandMember)
  BIND(?priscillaBandMember AS ?bandMember)
}
```

This query assumes that the `dbo:MusicalArtist` class is used for both Priscilla Opoku-Kwarteng and Samuel Ofori Amponsah, and that their band memberships can be queried using the `dbo:member` property. Adjustments may be needed based on actual DBpedia schema details.",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
959,57,test,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v1 <http://dbpedia.org/property/residence> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?member WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader dbo:office ""Member of the House of Councillors""@en;
          dbo:election ""2010 Japanese House of Councillors election""@en.
  
  # Step 2: Determine the country of residence for this leader
  ?leader dbp:nationality ?country.

  # Step 3: Find members of the University of Tsukuba who are native to this country
  ?member dbo:almaMater dbr:University_of_Tsukuba;
          dbo:nationality ?country.
  
  # Step 4: Identify which of these members managed the team of Takashi Sekizuka
  ?manager dbp:managedTeam dbr:Takashi_Sekizuka;
           dbp:name ?memberName.
  
  FILTER(?member = ?manager)
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
328,46,test,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee WHERE {
  # Awardee related to Volcano and Ryukyu Islands campaign
  ?award dbo:relatedTo dbr:Volcano_and_Ryukyu_Islands_campaign .
  
  # Awardee related to Ferenc Szálasi's force
  ?commander dbo:commandedBy dbr:Ferenc_Szálasi ;
             dbo:awarded ?award .

  # The awardee is the same person in both contexts
  ?award dbo:recipient ?awardee .
}
```",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
404,66,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . }","```sparql
SELECT ?spouse WHERE {
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise of Prussia""@en .
  ?princess dbo:spouse ?spouse .
  ?spouse a dbo:RoyalPerson ;
          foaf:name ?name .
  OPTIONAL { ?spouse dbo:father ?father . }
  OPTIONAL { ?father foaf:name ?fatherName . }
  OPTIONAL { ?child dbo:parent ?father ; 
             a dbo:RoyalPerson ;
             foaf:name ""Ernest Augustus, Duke of Brunswick""@en . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
161,66,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # El Director (Francisco Franco)
  OPTIONAL {
    ?event1 dbo:militaryConflict [dbo:commander ?commander];
           dbo:participant dbr:Francisco_Franco.
  }
  
  # Francisco Franco
  OPTIONAL {
    ?event2 dbo:militaryConflict [dbo:commander ?commander];
           dbo:participant dbr:Francisco_Franco.
  }

  # Francisco Largo Caballero
  OPTIONAL {
    ?event3 dbo:militaryConflict [dbo:commander ?commander];
           dbo:participant dbr:Francisco_Largo_Caballero.
  }
  
  FILTER(?commander != dbr:Francisco_Franco && ?commander != dbr:Francisco_Largo_Caballero)
}
ORDER BY ?commander",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
184,21,test,Give me the parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentIlona ?parentBudapest WHERE {
  # Find parents of Archduchess Ilona of Austria
  OPTIONAL {
    dbr:Archduchess_Ilona_of_Austria dbo:parent ?parentIlona .
  }

  # Find individuals native to Budapest and their parents
  OPTIONAL {
    ?person dbo:birthPlace dbr:Budapest .
    ?person dbo:parent ?parentBudapest .
  }
}
```",3,3,4,2,2,3,3,71,2,17,0,0.10526315789473684,1.0,0.1904761904761905
959,70,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePlace WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:office ""Member of the House of Councillors""@en .
  ?politician dbo:election ""2010 Japanese House of Councillors election""@en .

  # Step 2: Find this person's residence, which is a country
  ?politician dbo:residence ?country .
  FILTER (isLiteral(?country) && lang(?country) = 'en')

  # Step 3: Determine the native place of that country
  ?country dbo:nativePlace ?nativePlace .

  # Step 4: Identify the manager of the team managed by the sports manager of the 1998 Kashima Antlers season
  ?sportsManager dbo:managedTeam dbr:Kashima_Antlers .
  ?sportsManager dbo:managementSeason ""1998""@en .
  
  ?teamManager dbo:managerOf ?team .
  ?team dbo:managedBy ?sportsManager .

  # Step 5: Ensure this manager is also a member of an alma mater linked to Eiji Ōtsuka
  ?teamManager dbo:almaMater ?almaMater .
  ?almaMater dbo:country dbr:Japan ;
             rdf:type dbo:University ;
             dbo:organizationType ""Educational institution""@en .

  ?almaMater dbp:member dbr:Eiji_Ōtsuka .

  # Link the politician to the team manager
  ?politician dbo:managerOfTeam ?team .
}
```",8,15,9,3,3,3,3,71,0,0,2,0,0.0,0
547,49,test,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRestingPlaceLabel ?awardeeRestingPlaceLabel WHERE {
  # Find James Burton (property developer) and his child
  ?jamesBurton a dbo:Person ;
               foaf:name ""James Burton"" ;
               dbo:occupation dbr:Property_developer .
  
  ?child dbo:parent ?jamesBurton .

  OPTIONAL { 
    ?child dbo:deathPlace ?childRestingPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

  # Find Gerald Graham and his awardee
  ?geraldGraham a dbo:Person ;
                foaf:name ""Gerald Graham"" .

  ?awardEvent dbo:recipient ?awardee ;
              dbo:givenBy ?geraldGraham .

  OPTIONAL { 
    ?awardee dbo:deathPlace ?awardeeRestingPlace .
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  }

}
```

This query assumes:
- James Burton is uniquely identified by his occupation as a property developer.
- Gerald Graham's awardees are linked through an award event.
- The `dbo:deathPlace` property is used to find the resting place, which might need adjustment based on actual DBpedia data availability.

Please note that this query may require adjustments depending on the exact structure and available properties in DBpedia. If specific identifiers or additional context were known, they could be incorporated for more precise results.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
378,66,test,"Give me the war of the person born as Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfGahn ?peninsularWarCommander ?commandersFame ?triggeConflict ?triggeSocietalEvent ?triggeEvent
WHERE {
  # Find the war associated with Carl Pontus Gahn
  ?gahn dbo:birthName ""Carl Pontus Gahn""@en .
  ?gahn dbo:occupation dbr:Military_person .
  ?gahn dbo:participatedIn ?warOfGahn .

  # Find the commander of the Peninsular War and his claim to fame
  ?peninsularWarCommander dbo:commanded dbr:Peninsular_War .
  ?peninsularWarCommander dbo:occupation dbr:Military_person .
  ?peninsularWarCommander dbo:famousFor ?commandersFame .

  # Find the military conflict, societal event, and general event associated with Thomas Trigge
  ?trigge dbo:birthName ""Thomas Trigge""@en .
  ?trigge dbo:occupation dbr:Military_person .
  ?trigge dbo:participatedIn ?triggeConflict .
  
  OPTIONAL {
    ?societalEvent dbo:relatedTo ?trigge .
    ?societalEvent rdf:type dbo:Societal_event .
    BIND(?societalEvent AS ?triggeSocietalEvent)
  }
  
  OPTIONAL {
    ?event dbo:relatedTo ?trigge .
    ?event rdf:type dbo:Event .
    BIND(?event AS ?triggeEvent)
  }
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
9,56,test,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMaterAllenHill ?nicknameEntity ?almaMaterMayor
WHERE {
  # Alma mater of Allen Hill (scientist)
  OPTIONAL {
    ?allenHill a dbo:Scientist ;
               foaf:name ""Allen Hill"" .
    ?allenHill dbo:almaMater ?institution ;
              dbo:almaMater ?almaMaterAllenHill .
  }

  # Nickname of an organisation and educational institution in Northern Ireland
  OPTIONAL {
    ?entity a dbo:EducationalInstitution, dbo:Organisation ;
            dbo:location dbr:Northern_Ireland ;
            rdfs:label ?nicknameEntity .
    FILTER(CONTAINS(LCASE(?nicknameEntity), ""nickname""))
  }

  # Alma mater of the mayor of Northern Ireland Forum
  OPTIONAL {
    ?mayor a dbo:Politician ;
           foaf:name ?mayorName ;
           dbo:almaMater ?almaMaterMayor .
    ?forum dbr:Northern_Ireland_Forum ;
           dbo:member ?mayor .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
312,9,test,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy) and entity in the birthplace of Giorgio Grigolli.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/ontology/province> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  # Entity in administration of Democratic Party (Italy)
  ?adminParty dbp:partyMember dbr:Democratic_Party_(Italy) .
  ?entity dbo:administrativeUnit ?adminParty .

  # Entity is a settlement, region, Italian, and state
  ?entity rdf:type ?type .
  VALUES ?type { 
    dbo:Settlement 
    dbo:Region 
    dbo:State 
  }
  
  ?entity dbp:country dbr:Italy .

  # Entity related to the birthplace of Giorgio Grigolli
  ?birthPlace dbo:birthPlace dbr:Giorgio_Grigolli .
  ?entity dbo:administrativeUnit ?birthPlace .
}",4,8,5,2,2,2,2,9,0,0,587,0,0.0,0
232,69,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Sean Pertwee's claim to fame that is both a film and a military conflict
  dbr:Sean_Pertwee dbo:claimToFame ?fame .
  
  FILTER EXISTS { ?fame rdf:type dbr:Film . }
  FILTER EXISTS { ?fame rdf:type dbr:MilitaryConflict . }

  # Jon Pertwee's birth name and residence in Britain
  dbr:Jon_Pertwee foaf:name ?birthName .
  dbr:Jon_Pertwee dbo:birthPlace ?residence .
  
  FILTER EXISTS { ?residence rdf:type dbo:Settlement . }
  FILTER EXISTS { ?residence dbo:country dbr:United_Kingdom . }

  # French politician and office holder's native settlement
  ?politician a dbo:Politician ;
             dbo:nativePlace ?nativeSettlement .
  
  FILTER EXISTS { ?nativeSettlement rdf:type dbo:Settlement . }
  FILTER EXISTS { ?nativeSettlement dbo:country dbr:France . }

  # Actor of the film/military conflict
  ?fame dbo:actor ?actor .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
391,70,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v1 <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Find a movie that is also a work and a television show
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow .

  # Step 2: Identify an actor of this movie
  ?actor dbo:profession dbr:Actor ;
         dbo:actedIn ?movie .

  # Step 3: Actor's professional and native connection to Hub City
  ?actor dbo:professionalAffiliation dbr:Hub_City ;
         dbo:nativePlace dbr:Hub_City .

  # Step 4: Find the claim to fame of this actor
  ?claimToFame a dbo:Work ;
               dbo:performer ?actor .

  # Step 5: Identify Sherry Hormann's spouse and their claim to fame
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  ?spouseClaimToFame a dbo:Work ;
                     dbo:performer ?spouse .

  FILTER(?claimToFame = ?spouseClaimToFame)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
161,28,test,"Give me the military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 WHERE {
  # Military forces involved in the Spanish Civil War
  ?event1 a dbo:MilitaryConflict ;
          dbo:participatingMilitaryUnit ?militaryForce1 .
  
  FILTER regex(?event1, ""Spanish Civil War"", ""i"")

  # Francisco Franco's involvement and military force during Biscay Campaign
  ?person dbr:Francisco_Franco ;
          dbo:militaryCommanderOf ?campaign .

  ?campaign a dbo:MilitaryConflict ;
            dbo:participatingMilitaryUnit ?militaryForce2 .
  
  FILTER regex(?campaign, ""Biscay Campaign"", ""i"")

}
```",4,7,5,2,3,3,3,71,0,0,3,0,0.0,0
783,20,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMemberEbony ?associatedArtistSamuel
WHERE {
  # Find Ebony Reigns as an artist and musical artist
  dbr:Ebony_Reigns a dbo:MusicalArtist ;
                   dbo:birthPlace ?ebonyBirthPlace .

  # Find band members of Ebony Reigns
  ?bandMemberEbony dbo:memberOfBand dbr:Ebony_Reigns .

  # Find Samuel Ofori Amponsah as a person born and associated with a musical artist
  dbr:Samuel_Ofori_Amponsah a dbo:Person ;
                            dbo:birthPlace ?samuelBirthPlace .

  # Find associated musical artists of Samuel Ofori Amponsah
  ?associatedArtistSamuel dbo:associatedBandMember dbr:Samuel_Ofori_Amponsah .
}
```

This query assumes the existence of certain properties like `dbo:memberOfBand` and `dbo:associatedBandMember`, which may need to be adjusted based on actual DBpedia schema.",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
281,64,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?award ?war ?profession ?militaryUnit ?entityInColony
WHERE {
  # Identify Jonathon Band and his awards
  VALUES (?jonathanBand) { dbr:Jonathan_Band }
  
  ?jonathanBand dbo:award ?award .
  
  # Find wars related to the award
  ?award dbp:relatedToWar ?war .

  # Check if he is an office holder and politician
  ?jonathanBand dbo:profession ?profession .
  FILTER (?profession IN (dbr:Office_holder, dbr:Politician))

  # Identify military unit in New Zealand Army
  OPTIONAL {
    ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army .
    ?jonathanBand dbo:memberOf ?militaryUnit .
  }

  # Entity in Colony of New Zealand
  OPTIONAL {
    ?entityInColony dbo:locatedIn dbr:Colony_of_New_Zealand .
    ?jonathanBand dbo:relatedTo ?entityInColony .
  }
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,50,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify the song ""40 Dayz & 40 Nightz""
  dbr:40_Dayz_&_40_Nightz a dbo:Song ;
    dbo:producer ?rapper .

  # Ensure the producer is a rapper
  ?rapper a dbo:MusicalArtist ;
          dbo:genre dbr:Hip_hop_music .

  # Find the associated musical artist who wrote the song and is also an artist
  ?artist a dbo:MusicalArtist, dbo:Artist ;
          dbo:work ?song .
  
  FILTER(?song = dbr:40_Dayz_&_40_Nightz)
}
```",5,11,6,3,2,3,3,71,0,0,9,0,0.0,0
435,20,test,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . }","```sparql
# Query for Article 62, Section IV of Constitution of Iceland
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?text WHERE {
  ?constitution a dbo:Constitution .
  ?constitution dbo:country dbr:Iceland .
  ?section dbo:text ?text .
  FILTER(CONTAINS(LCASE(?text), ""article 62 section iv""))
}

# Query for Territory administered from Reykjavík
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory WHERE {
  ?city a dbo:City .
  ?city rdfs:label ""Reykjavík""@en .
  ?city dbo:administrativeUnit ?territory .
}

# Query for Region of the time zone in Bombali Shebora Chiefdom
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone WHERE {
  ?chiefdom a dbo:AdministrativeRegion .
  ?chiefdom rdfs:label ""Bombali Shebora Chiefdom""@en .
  ?chiefdom dbo:timeZone ?timeZone .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
232,64,test,"Give me the actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Child of Jon Pertwee's birth name who is a politician and office holder in France
  ?child dbp:parent ?birthName .
  ?child dbo:nationality dbr:France ;
         dbo:occupation dbr:Politician ;
         dbo:officeHolderOf dbr:France .

  # Native residence of the French politician, which is a British settlement
  ?child dbo:nativePlace ?nativePlace .
  ?nativePlace dbo:country dbr:United_Kingdom ;
               rdf:type dbo:Settlement .

  # Actor of Dog Soldiers who is native to this British settlement
  dbr:Dog_Soldiers_(film) dbo:actor ?actor .
  ?actor dbo:nativePlace ?nativePlace .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
232,49,test,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childName WHERE {
  # Step 1: Identify John Pertwee
  dbr:John_Pertwee a dbo:Person ;
                   foaf:name ""John Devon Roland Pertwee""@en .

  # Step 2: Find his child
  ?pertweeChild dbo:parent dbr:John_Pertwee .
  ?pertweeChild foaf:name ?childName .

  # Step 3: Determine the residence of this child's native place
  ?childNativePlace dbo:nativePlace ?child ;
                   a dbo:Settlement ;
                   dbo:country dbr:United_Kingdom .

  # Step 4: Connect to a French politician who holds an office
  ?politician dbo:nationality dbr:France ;
             dbo:officeHolder ?office .
  ?office dbo:location ?childNativePlace .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
701,50,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfGrandchild ?spouseOfFatherMerneptah WHERE {
  # Seti I and his children
  ?setiI a dbo:Person ;
         foaf:name ""Seti I""@en .
  
  # Child of Seti I
  ?childOfSetiI dbo:father ?setiI .

  # Grandchild of Seti I
  ?grandChildOfSetiI dbo:parent ?childOfSetiI .

  # Parent of the grandchild (which is a child of Seti I)
  ?parentOfGrandchild dbo:child ?grandChildOfSetiI .
  
  # Merneptah and his father
  ?merneptah a dbo:Person ;
             foaf:name ""Merneptah""@en .
  
  ?fatherOfMerneptah dbo:son ?merneptah .

  # Spouse of the father of Merneptah
  ?spouseOfFatherMerneptah dbo:spouse ?fatherOfMerneptah .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,47,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?commanderRole WHERE {
  # Find Bruce Fraser, 1st Baron Fraser of North Cape
  ?person rdfs:label ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  
  # Find awards associated with him
  OPTIONAL { 
    ?person dbo:awardedBy ?award .
    ?award rdfs:label ?awardLabel .
  }
  
  # Find his role as a commander in Budapest
  OPTIONAL {
    ?event dbo:location dbr:Budapest ;
           dbo:commander ?person ;
           dbo:commanderRole ?commanderRole .
  }
}
```

This query attempts to:

- Identify Bruce Fraser and any awards he received.
- Determine if he had a role as a commander in an event located in Budapest.",5,5,6,3,2,3,3,71,0,0,5,0,0.0,0
747,66,test,Give me the band of the person born as the persona of Shèna and band of the writer of Apollo (Hardwell song) and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandShena ?bandWriterApollo ?bandPersonBirthDate

{
  # Shèna's band
  {
    SELECT ?personShena WHERE {
      ?personShena dbo:birthName ""Shèna""@en .
    }
    OPTIONAL {
      ?personShena dbo:musicalBand ?bandShena .
    }
  }

  # Writer of Apollo (Hardwell song) and their band
  {
    SELECT ?songApollo WHERE {
      ?songApollo dbp:title ""Apollo""@en ;
                  dbo:lyricsBy ?writerApollo .
    }
    OPTIONAL {
      ?writerApollo dbo:musicalBand ?bandWriterApollo .
    }
  }

  # Person born on Pavlo Khudzik's birth date and their band
  {
    SELECT ?birthDate WHERE {
      dbr:Pavlo_Khudzik dbo:birthDate ?birthDate .
    }
    OPTIONAL {
      ?personBirthDate dbo:birthDate ?birthDate ;
                       dbo:musicalBand ?bandPersonBirthDate .
    }
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
492,64,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorDecedent ?capitalSettlement ?francoHovaCommander
WHERE {
  # Step 1: Find the author of ""French Algeria""
  ?work dbo:title ""French Algeria""@en .
  ?work dbo:author ?author .

  # Step 2: Find the person decedent at the work of this author
  ?author dbo:deathPlace ?deceasedPlace .
  ?deceasedPlace dbo:resident ?authorDecedent .

  # Step 3: Determine the capital of Khemis Miliana District and identify it as a settlement
  dbr:Khemis_Miliana_District dbo:capital ?capitalCity .
  ?capitalCity rdf:type dbo:Settlement .

  # Step 4: Find the country associated with Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:country ?country .

  # Step 5: Identify the commander in the Franco-Hova Wars
  ?francoHovaEvent dbo:name ""Franco-Hova Wars""@en .
  ?francoHovaEvent dbo:commander ?francoHovaCommander .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
184,53,test,"Give me the child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonEntity WHERE {
  # Archduke Joseph August of Austria's child
  ?child1 dbo:parent dbr:Archduke_Joseph_August_of_Austria .
  
  # Native of a landmark at elevation 96.0 that is a settlement and their parent
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            a dbo:Settlement .
  ?native dbo:nativePlace ?landmark .
  ?parent2 dbo:child ?native .

  # Archduke Joseph Francis of Austria's child
  ?child3 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .

  # Find the common entity among these relationships
  FILTER (?child1 = ?commonEntity && ?commonEntity = ?parent2 && ?child3 = ?commonEntity)
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
701,31,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonParent WHERE {
    # Step 1: Find Amun-her-khepeshef's spouse
    ?amunHerKhepeshef dbo:spouse ?spouse .
    
    FILTER (str(?amunHerKhepeshef) = ""Amun-her-khepeshef"")

    # Step 2: Find the child of this spouse
    ?child dbo:parent ?spouse .

    # Step 3: Determine the parent of this child
    ?commonParent dbo:parent ?child .

    # Step 4: Identify Henuttawy's parent
    ?henuttawy dbp:parent ?henuttawyParent .
    
    FILTER (str(?henuttawy) = ""Henuttawy_(19th_dynasty)"")

    # Step 5: Find the common parent
    VALUES (?henuttawyParent) { ?commonParent }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,50,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?officeLeader WHERE {
  # Find Joseph Stalin's related military commander in Budapest
  ?stalin dbo:spouse|dbo:child|dbo:parent* dbr:Joseph_Stalin .
  
  # Identify the commander involved in the force at Budapest
  ?budaCommander dbo:occupation dbr:Military_officer ;
                dbo:placeOfBirth ?location ;
                dbo:deathPlace ?budaLocation .

  FILTER(CONTAINS(LCASE(?budaLocation), ""budapest""))

  # Find the leader of a government agency related to Stalin
  ?officeLeader dbo:positionHeld ?stalinOffice .
  ?stalinOffice dbo:head dbr:Joseph_Stalin ;
                a dbo:GovernmentAgency .

  # Link the commander and office leader to Stalin
  ?commander dbo:spouse|dbo:child|dbo:parent* ?budaCommander .
  ?officeLeader dbo:spouse|dbo:child|dbo:parent* ?stalinOffice .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
179,19,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as the birth name of Sirikit.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?result <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?parentOfVajiralongkornParent ?personBornAsSirikitName ?parentOfPersonBornAsSirikitName
WHERE {
  # Step 1: Find Vajiralongkorn's parent
  ?vajiralongkorn dbo:spouse ?sirikit .
  
  # Step 2: Find Sirikit's birth name and the person with that birth name
  ?sirikit foaf:name ""Sirikit"" ;
           foaf:birthName ?sirikitBirthName .

  ?personBornAsSirikit foaf:birthName ?sirikitBirthName .
  
  # Step 3: Find parent of Vajiralongkorn's parent (i.e., Sirikit)
  ?vajiralongkornParent dbo:spouse ?sirikit ;
                        a dbo:Person .

  # Step 4: Find the parent of the person born as Sirikit
  ?personBornAsSirikit dbo:parent ?parentOfPersonBornAsSirikitName .
  
  # Step 5: Get the parent of Vajiralongkorn's parent (i.e., Sirikit)
  ?sirikitParent dbo:spouse ?vajiralongkornParent ;
                 a dbo:Person .

}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
77,18,test,Give me the force of the mayor of Congress Poland and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force ?war ?award WHERE {
  # Find the mayor of Congress Poland
  ?mayor dbo:officeTitle ""Mayor""@en .
  ?mayor dbo:country dbr:Congress_Poland .

  # Find the force associated with this mayor
  OPTIONAL { ?mayor dbo:memberOf ?force . }

  # Find Maxim Grigorievich Vlasov and his war involvement
  dbr:Maxim_Grigorievich_Vlasov dbo:award ?award .
  ?war dbo:participant dbr:Maxim_Grigorievich_Vlasov .

  # Link the award to a specific war
  OPTIONAL { ?award dbo:relatedWar ?war . }
}
```",5,5,6,3,2,3,2,20,0,0,24,0,0.0,0
303,20,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara and party of Arnulfo Arias.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the country associated with El Valle de Antón
  OPTIONAL { 
    dbr:El_Valle_de_Antón dbo:locatedInCountry ?country .
  }
  
  # Find countries related to Guillermo Endara
  OPTIONAL { 
    dbr:Guillermo_Endara dbo:nationality ?endaraNationality ;
                         dbo:birthPlace ?endaraBirthPlace .
    FILTER(?endaraNationality = ?country || ?endaraBirthPlace = ?country)
  }
  
  # Find countries related to Arnulfo Arias
  OPTIONAL { 
    dbr:Arnulfo_Arias dbo:nationality ?ariasNationality ;
                      dbo:birthPlace ?ariasBirthPlace .
    FILTER(?ariasNationality = ?country || ?ariasBirthPlace = ?country)
  }
  
  # Ensure the entity is a country
  ?country rdf:type dbo:Country .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
959,24,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Identify Yōichi Masuzoe
  dbr:Yōichi_Masuzoe dbo:residence ?residence .

  # Check if the residence is a country
  ?residence rdf:type dbo:Country .

  # Get the native language or nationality of that country
  ?residence dbp:nationality ?nativeLanguage .
}
```",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
617,64,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Antiochus II Theos' successor
  dbr:Antiochus_II_Theos dbo:succeededBy ?successor .
  
  # Successor's spouse
  ?successor dbo:spouse ?spouse .
  
  # Spouse is Laodice IV
  FILTER(?spouse = dbr:Laodice_IV) .

  # Child of the successor's spouse (royalty)
  ?spouse dbo:child ?childOfSpouse .
  ?childOfSpouse a dbo:Monarch .

  # Commander in Battle of Panium and his child
  dbr:Ptolemy_III_Evergetes dbo:commanderInBattle dbr:Battle_of_Panium .
  dbr:Ptolemy_III_Evergetes dbo:child ?ptolemyChild .

  # Parent of Ptolemy III's child
  ?ptolemyChild dbo:parent ?parentOfPtolemyChild .

  # Find the child of the child (royalty)
  ?childOfSpouse dbo:child ?childOfChild .
  ?childOfChild a dbo:Monarch .

  FILTER(?childOfChild = ?parentOfPtolemyChild)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
281,59,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInBirthPlaceCountry
WHERE {
    # Step 1: Find the leader of the 1962 New South Wales State Election
    ?election dbo:leader ?politician .
    FILTER (str(?election) = ""New_South_Wales_state_election,_1962"")

    # Step 2: Identify Jonathon Band's award and its awardee involved in a war
    ?award dbo:recipient ?awardee .
    ?band dbr:Jonathon_Band .
    ?band dbo:award ?award .

    ?war dbo:participant ?awardee .
    
    # Step 3: Find the birthplace country of the politician
    ?politician dbo:birthPlace ?birthPlace .
    ?birthPlace dbo:country ?entityInBirthPlaceCountry .
    FILTER (isLiteral(?entityInBirthPlaceCountry))
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
963,20,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.","SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> ?v5 . ?v4 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration WHERE {
  # Find political parties in Bosnia and Herzegovina
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Bosnia_and_Herzegovina .

  # Filter for ruling parties (assuming there's a property or related data indicating this)
  OPTIONAL { 
    ?party dbo:rulingParty true .
  }

  # Retrieve administration details of the ruling party
  ?administration dbo:politicalParty ?party ;
                  dbo:headOfGovernment ?leader .

  FILTER EXISTS { ?party dbo:rulingParty true }
}
```",6,8,7,3,2,3,2,20,0,0,84,0,0.0,0
328,42,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:MilitaryPerson .
  
  # Commander in Eastern Front (World War II)
  ?person dbo:militaryCommanderOf dbr:Eastern_Front_(World_War_II) .

  # Leader of the office of Joseph Stalin
  ?office dbo:head dbr:Joseph_Stalin ;
          dbo:employee ?person .
  
  # Awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbo:recipient ?person ;
         dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .

}
```

This query attempts to find a person who:
- Is a military person.
- Commanded on the Eastern Front during World War II.
- Was an employee of an office led by Joseph Stalin.
- Received an award from Bruce Fraser.",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
488,66,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlace ?birthPlace ?administration

WHERE {
  # Father of Yūki Hideyasu (Yūki Munenari)
  dbr:Yūki_Munenari dbo:spouse ?yukiHideyasuMother .
  
  # Death place of Yūki Munenari
  OPTIONAL { ?yukiMunenariDeathPlace dbo:deathPlace ?deathPlace . }

  # Commander in Boshin War (Saigō Takamori)
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .

  # Spouse of Tokugawa Masako (Naruhito)
  dbr:Naruhito dbo:spouse dbr:Tokugawa_Masako .
  
  # Administration of Naruhito's father (Akihito)
  OPTIONAL { 
    dbr:Akihito dbo:birthPlace ?administration .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
10,22,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artistMattColton ?bandLukeVibert WHERE {
  # Find Matt Colton's associated musical artist
  OPTIONAL {
    dbr:Matt_Colton dbo:associatedMusicalArtist ?artistMattColton .
  }
  
  # Find Luke Francis Vibert's band membership
  OPTIONAL {
    dbr:Luke_Francis_Vibert dbo:bandMemberOf ?bandLukeVibert .
  }
}
```",4,6,5,2,2,2,3,28,1,3,0,0.25,1.0,0.4
92,46,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the film ""Nevermore"" from 2006
  ?film a dbo:Film ;
        rdfs:label ""Nevermore""@en ;
        dbo:releaseDate ?date .
  
  FILTER(YEAR(?date) = 2006)

  # Find the reference artist associated with this film
  ?film dbo:starring ?referenceArtist .

  # Jim Sheppard's role as an artist and band member related to this reference artist
  ?band a dbo:Band ;
        dbo:member ?jimSheppard .
  
  ?jimSheppard rdfs:label ""Jim Sheppard""@en ;
               dbo:associatedBand ?band ;
               dbo:associatedMusicalArtist ?artist .

  # Ensure the band is associated with the reference artist
  ?referenceArtist dbo:associatedBand ?band .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
767,69,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement ?alterEgo
WHERE {
  # Alma mater of George K. Nash
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Entity in the administration of George W. Bush that is a settlement
  ?administration dbo:member ?entity .
  ?administration dbr:George_W._Bush .
  ?entity rdf:type dbo:Settlement .
  ?settlement rdfs:label ?entityLabel FILTER (lang(?entityLabel) = 'en') .

  # Alter ego of Matthew Burland
  dbr:Matthew_Burland dbo:fictionalCharacter ?alterEgo .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
16,44,test,Give me the person born as the birth name of Gigi Rice and spouse of Ted McGinley and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice"" ;
        dbo:birthName ?birthName .

  # Find Ted McGinley's spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley"" ;
       dbo:spouse ?spouse .
  
  # Ensure the person is the same as Gigi Rice's birth name and Ted McGinley's spouse
  FILTER (?birthName = ?spouse)

  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara"" ;
          dbo:profession ?profession .

  # Ensure the person has the same profession as Satomi Ishihara
  ?person a dbo:Person ;
          foaf:name ?birthName ;
          dbo:profession ?profession .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,36,test,"Give me the birth place of Enomoto Takeaki and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?royalFatherAdmin
WHERE {
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Tokugawa Masako's spouse
  dbr:Tokugawa_Masako dbo:spouse ?spouse .

  # Spouse's father
  ?spouse dbo:father ?royalFather .

  # Check if the father is royalty and get his administration
  OPTIONAL {
    ?royalFather a dbo:Monarch .
    ?royalFather dbo:administrativeOffice ?royalFatherAdmin .
  }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
161,57,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of Emilio Mola and military force of Rif War.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessorMilitaryForce ?emilioMolaEventMilitaryForce ?rifWarMilitaryForce
WHERE {
  # Find Indalecio Prieto's predecessor and their military force
  ?prieto dbo:successor ?predecessor .
  ?predecessor dbo:militaryForce ?predecessorMilitaryForce .

  # Find the event where Emilio Mola was a commander and its military force
  ?molaEvent dbo:commander dbr:Emilio_Mola .
  ?molaEvent dbo:militaryForce ?emilioMolaEventMilitaryForce .

  # Find the military force involved in the Rif War
  dbr:Rif_War dbo:militaryForce ?rifWarMilitaryForce .
}
```",6,9,7,3,3,3,3,71,0,0,11,0,0.0,0
767,32,test,"Give me the entity in the administration, that is a settlement, of Green and alma mater of the administration of George K. Nash.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Step 1: Find George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Step 2: Find an administration where this alma mater is part of its administration
  ?administration dbo:member ?almaMater .
  
  # Step 3: Identify a settlement within that administration
  ?settlement a dbo:Settlement ;
              dbo:partOf ?administration .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
391,23,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  dbr:Andrew_Jackson dbo:nativePlace ?nativePlace .
}
```",3,3,4,3,1,3,3,71,0,0,176,0,0.0,0
404,22,test,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Find Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Person ;
                 foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 2: Find his father
  ?father dbo:spouse ?mother .
  ?father dbo:child ?ernestAugustus .

  # Step 3: Identify the spouse of Princess Victoria Louise of Prussia
  ?princessVictoriaLouise a dbo:Person ;
                         foaf:name ""Princess Victoria Louise of Prussia""@en .
  ?spouse dbo:spouse ?princessVictoriaLouise .

  # Ensure the father is also the spouse of Princess Victoria Louise
  FILTER(?father = ?spouse)

  # Step 4: Find their child
  ?child dbo:parent ?father ;
         dbo:parent ?mother .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,58,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherParty ?prodiBirthName ?prodiParty WHERE {
  # Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:politicalParty ?fatherParty .

  # Romano Prodi's birth name and political party
  dbr:Romano_Prodi dbp:birthday ?prodiBirthDate ;
                   dbo:birthName ?prodiBirthName ;
                   dbo:officeHolder ?prodiOffice ;
                   dbo:occupation ?prodiOccupation .
  
  FILTER EXISTS { ?prodiOffice a dbo:GovernmentPost } # Check if office holder
  FILTER EXISTS { ?prodiOccupation dbr:Politician }   # Check if politician

  OPTIONAL {
    ?prodiParty dbo:member dbr:Romano_Prodi .
    ?prodiParty rdfs:label ?prodiPartyLabel .
    FILTER(CONTAINS(LCASE(?prodiPartyLabel), ""partito popolare italiano""))
  }

  # Ensure we get the party if it's Partito Popolare Italiano
  OPTIONAL {
    ?party dbr:Partito_Popolare_Italiano rdfs:label ?partyLabel .
    BIND(""Partito Popolare Italiano"" AS ?prodiParty)
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
701,38,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find a child of Ramesses II
  ?child dbo:parent dbr:Ramesses_II .
  
  # Ramesses II is the parent of that child
  ?ramesses2 dbo:parent ?child .

  # Merneptah's father is Ramesses II
  ?merneptah dbo:father ?ramesses2 .
  
  # Find the spouse of Ramesses II
  ?ramesses2 dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
281,62,test,"Give me the war of New Zealand Army and war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nzWar ?awardWar ?leaderCountry
WHERE {
  # Wars involving New Zealand Army
  ?nzArmy a dbo:MilitaryUnit ;
          dbo:militaryConflict ?nzWar .
  
  FILTER (strstarts(str(?nzWar), ""dbr:""))

  # Jonathon Band's award and associated war
  dbr:Jonathon_Band dbo:award ?award .
  ?award dbo:relatedEvent ?awardWar .

  FILTER (strstarts(str(?awardWar), ""dbr:""))

  # Leader of the 1962 New South Wales State Election
  dbr:1962_New_South_Wales_state_election dbo:leader ?leader .
  
  # Birthplace of the leader that is a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country .

  BIND(str(?birthPlace) AS ?leaderCountry)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,39,test,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v2 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Red Tide as a band
  dbr:Red_Tide_(band) dbo:musicalArtist ?associatedArtist .

  # Check if the associated artist is known under the persona of Don Dokken
  OPTIONAL { 
    ?associatedArtist foaf:name ""Don Dokken""@en .
  }

  # Find band members who are also musical artists and match the persona
  ?bandMember dbo:memberOf dbr:Red_Tide_(band) ;
              a dbo:MusicalArtist .

  FILTER EXISTS {
    ?bandMember foaf:name ?name .
    OPTIONAL { 
      ?associatedArtist foaf:name ?name .
    }
  }

}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
16,62,test,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find Georgeanne Marie Rice and her spouse
  ?person foaf:name ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse ?spouse .

  # Find Ted McGinley's birth name and profession
  ?ted foaf:name ""Ted McGinley""@en .
  ?ted dbo:birthName ?birthName .
  ?ted dbo:profession ?profession .
  
  FILTER(?profession = <http://dbpedia.org/ontology/Actor>)

  # Find an actor from the TV series Unnatural
  ?unnaturalSeries dbo:title ""Unnatural (TV series)""@en .
  ?actor dbo:actedIn ?unnaturalSeries .
  ?actor dbo:profession ?actorProfession .

  FILTER(?actorProfession = <http://dbpedia.org/ontology/Actor>)

  # Ensure the spouse is related to Ted McGinley
  ?spouse foaf:name ?birthName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,49,test,Give me the force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force1 ?force2 WHERE {
  # Part 1: Find the force associated with Narciso Campero
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Narciso Campero""@en ;
            dbo:nationality dbr:Bolivia .
    ?person dbo:militaryService ?militaryService .
    ?militaryService dbo:force ?force1 .
  }

  # Part 2: Find the forces involved in the Battle of Pisagua
  OPTIONAL {
    ?battle a dbo:MilitaryConflict ;
            foaf:name ""Battle of Pisagua""@en ;
            dbo:participatedInMilitaryForce ?force2 .
  }
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
747,52,test,"Give me the band of the writer of Apollo (Hardwell song) and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?writerBand ?shenaBand ?personBornOnSameDate
WHERE {
  # Writer of ""Apollo"" (Hardwell song)
  ?song dbo:title ""Apollo""@en .
  ?song dbo:lyricist ?writer .
  
  # Band of the writer
  OPTIONAL { ?writer dbo:band ?writerBand . }
  
  # Shèna's band
  dbr:Shèna dbo:band ?shenaBand .

  # Athlete and soccer player from Zolotonosha
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha .
  
  # Birth date of the athlete
  ?athlete dbo:birthDate ?birthDate .

  # Person born on the same birth date
  ?person dbo:birthDate ?birthDate ;
          a dbo:Athlete .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,70,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v7 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryUnit ?war ?birthCountry
WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?leader dbo:officeHolderOf dbr:Premier_of_New_South_Wales ;
          dbp:term ""1962 New South Wales state election"" .

  # Step 2: Determine their birthplace (a country)
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?birthCountry .

  # Step 3: Find military units in the New Zealand Army associated with professions involving office holders and politicians
  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army ;
               dbo:profession ?profession .
  ?profession a dbo:OfficeHolder ;
              dbo:occupation dbp:Politician .

  # Step 4: Identify wars connected to individuals awarded the Knight Grand Cross of the Order of the Bath
  ?war dbo:awardee ?knight .
  ?knight dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
          dbo:militaryUnit ?militaryUnit .

}
ORDER BY ?birthCountry",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
617,69,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Antiochus III's child
  ?antiochusIII dbo:child ?childAntiochusIII .
  VALUES ?antiochusIII { <http://dbpedia.org/resource/Antiochus_III_the_Great> } .

  # Step 2: Find the child of Antiochus III's child who is royalty
  ?childAntiochusIII dbo:child ?grandChild .
  ?grandChild a dbo:Monarch .

  # Step 3: Identify successor of Antiochus II Theos who is royalty
  ?antiochusII dbo:successor ?successor .
  VALUES ?antiochusII { <http://dbpedia.org/resource/Antiochus_II_theos> } .
  ?successor a dbo:Monarch .

  # Step 4: Find the parent of the commander in Battle of Panium
  ?battle dbp:commander ?commander .
  VALUES ?battle { <http://dbpedia.org/resource/Battle_of_Panium> } .
  ?parent dbo:child ?commander .

  # Final step: Find spouse of the grand child from Step 2 who matches conditions
  ?grandChild dbo:spouse ?spouse .
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
801,71,test,"Give me the professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v8 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> ?v8 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://dbpedia.org/property/writer> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  # The Shadow and its alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Calhoun .
  
  # Lamont Calhoun's professional identity
  dbr:Lamont_Calhoun dbo:profession dbr:Rapper .

  # Rapper associated with a musical artist (producer)
  ?rapper dbo:associatedMusicalArtist ?musicalArtist .
  ?musicalArtist dbo:producedWork ?work .
  
  # The work is a song and a musical work
  ?work rdf:type dbo:SongsAndMusicRecording ;
        dbo:artist ?writer .

  # Writer who is also a musical artist and an artist
  ?writer rdf:type dbo:MusicalArtist, dbo:Artist .

  # Album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get dbo:writer ?writer .
}",9,17,10,3,3,3,3,71,0,0,8,0,0.0,0
767,54,test,"Give me the reference to  and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nash ?almaMater ?administration ?settlement
WHERE {
  # Find George Kilbon Nash
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash""@en .
  
  # Find his alma mater
  ?nash dbo:almaMater ?almaMater .

  # Find the administration he was part of
  ?administration dbo:member ?nash ;
                  dbo:location ?settlement .

  # Filter for settlement named Green
  FILTER regex(?settlement, ""Green"", ""i"")
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
179,16,test,Give me the parent of the child of Bhumibol Adulyadej and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    ?child dbo:spouse dbr:Bhumibol_Adulyadej ;
           dbo:spouse dbr:Sirikit .

    ?sirikit dbo:birthName ?birthName .

    ?person dbo:birthName ?birthName .

    ?person dbo:parent ?parent .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
801,53,test,"Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?alterEgo ?associatedArtist WHERE {
  # Producer of ""Westside Story (song)""
  OPTIONAL { 
    dbr:Westside_Story_(song) dbo:producer ?producer .
  }

  # Alter ego of The Shadow's true self
  OPTIONAL {
    dbr:The_Shadow dbo:alterEgo ?trueSelf .
    ?trueSelf dbo:profession ?alterEgo .
  }

  # Associated musical artist of the writer of ""40 Dayz & 40 Nightz""
  OPTIONAL {
    dbr:40_Dayz_&_40_Nightz dbo:writer ?writer .
    ?writer dbo:musicalArtist ?associatedArtist .
    FILTER (rdf:type(?associatedArtist, dbo:MusicalArtist) && rdf:type(?associatedArtist, dbo:Artist))
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,55,test,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v3 . ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?songwriterBand ?traceyBand ?pavloBand WHERE {
  # Part 1: Find the songwriter of ""Apollo"" by Hardwell
  ?song rdf:type dbo:Song ;
        rdfs:label ""Apollo""@en .
  ?song dbo:lyricsBy ?songwriter .

  # Find bands associated with the songwriter
  OPTIONAL { 
    ?band dbo:member ?songwriter ;
          dbp:name ?songwriterBand .
  }

  # Part 2: Identify Tracey Elizabeth McSween and her band
  ?tracey a dbo:Person ;
          rdfs:label ""Tracey Elizabeth McSween""@en ;
          dbo:birthDate ?traceyBirthDate .

  OPTIONAL {
    ?bandTracey dbo:member ?tracey ;
                dbp:name ?traceyBand .
  }

  # Part 3: Identify Pavlo Khudzik using his birth date
  ?pavlo a dbo:Person ;
         rdfs:label ""Pavlo Khudzik""@en ;
         dbo:birthDate ?pavloBirthDate .

  OPTIONAL {
    ?bandPavlo dbo:member ?pavlo ;
               dbp:name ?pavloBand .
  }

  # Ensure the birth dates match
  FILTER (?traceyBirthDate = ?pavloBirthDate)
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,54,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfParent
WHERE {
    # Step 1: Prince George William of Hanover and his parent who is royalty
    ?princeGeorgeWilliam a dbo:Person ;
                        foaf:name ""Prince George William of Hanover""@en .
    
    ?parentOfPrinceGeorgeWilliam dbo:child ?princeGeorgeWilliam ;
                                 a dbo:Monarch .

    # Step 2: Parent's child who is royalty
    ?royalChild dbo:parent ?parentOfPrinceGeorgeWilliam ;
                a dbo:Monarch .

    # Step 3: Spouse of Princess Victoria Louise of Prussia
    ?princessVictoriaLouise a dbo:Person ;
                           foaf:name ""Princess Victoria Louise of Prussia""@en .
    
    ?spouse dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?royalChild .

    # Step 4: Child of Ernest Augustus, Crown Prince of Hanover
    ?ernestAugustus a dbo:Person ;
                   foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
    
    ?childOfErnestAugustus dbo:parent ?ernestAugustus ;
                          a dbo:Monarch .

    # Final condition to match the spouse with the child
    FILTER (?spouse = ?childOfErnestAugustus)

    # Step 5: Parent of the identified royal child (from step 2)
    ?parentOfParent dbo:child ?royalChild .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
485,24,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlaceRegion WHERE {
  # Find Joseph Whitaker (naturalist) and his birthplace that is a region
  {
    SELECT ?birthPlace WHERE {
      ?person dbo:birthName ""Joseph Whitaker"" .
      ?person dbo:nationality dbr:Naturalist .
      ?person dbo:birthPlace ?birthPlace .
    }
    FILTER(isIRI(?birthPlace))
    OPTIONAL { ?birthPlace a dbo:Region . }
  }

  # Find an awardee of the Eric Gregory Award who is both a writer and a poet
  {
    SELECT ?awardeeBirthPlace WHERE {
      ?award dbr:Eric_Gregory_Award .
      ?award dbo:recipient ?awardee .
      ?awardee dbo:occupation dbr:Writer ;
              dbo:occupation dbr:Poet .
      ?awardee dbo:birthPlace ?awardeeBirthPlace .
    }
    FILTER(isIRI(?awardeeBirthPlace))
  }

  # Match the birthplaces
  VALUES (?birthPlaceRegion) {
    { ?birthPlace . FILTER(BOUND(?birthPlace)) }
    { ?awardeeBirthPlace . FILTER(BOUND(?awardeeBirthPlace)) }
  }
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,18,test,Give me the alma mater of Carl L. Nippert and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?entityInBadenWuerttemberg WHERE {
  # Find Carl L. Nippert's DBpedia resource
  ?person rdfs:label ""Carl L. Nippert""@en .
  
  # Get his alma mater
  ?person dbo:almaMater ?almaMater .

  # Filter entities in Baden-Württemberg
  ?entityInBadenWuerttemberg dbp:location ?place .
  ?place rdfs:label ""Baden-Württemberg""@en .
  
  # Optional: Link alma mater to entities in Baden-Württemberg if needed
  OPTIONAL {
    ?almaMater dbp:location ?place .
  }
}
```",3,3,4,1,3,3,3,71,1,278,0,0.0035842293906810036,1.0,0.0071428571428571435
801,23,test,Give me the professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v2 <http://dbpedia.org/property/alterEgo> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  dbr:Lamont_Cranston dbo:profession ?professional .
}
```

This query does the following:
- It identifies ""The Shadow"" and his alter ego, Lamont Cranston.
- It retrieves the profession associated with Lamont Cranston.",3,3,4,3,1,3,3,71,0,0,39640,0,0.0,0
485,26,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?region1 ?region2 WHERE {
  # Find countries in the Western European Time zone
  ?timeZone a dbo:TimeZone ;
            dbo:timezoneName ""Western European Time"" .
  
  ?country dbo:timeZone ?timeZone ;
           a dbo:Country .

  # Birthplace of Joseph Whitaker (naturalist)
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?region1 ;
                                    a dbo:Naturalist .

  # Birthplace of Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?region2 ;
                           a dbo:Poet .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,28,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumWriter ?songAuthor ?deathPlace
WHERE {
  # Find Dave Flett's album
  ?album dbo:composer dbr:Dave_Flett .
  ?album dbo:title ?albumTitle .
  ?album dbo:writer ?albumWriter .

  # Find the author of ""Blinded by the Light""
  ?song dbo:title ""Blinded by the Light"" ;
        dbo:lyricist ?songAuthor .

  # Find the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
378,62,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?war2 ?otherWar WHERE {
  # Find the war associated with Carl Pontus Gahn
  dbr:C_Pontus_Gahn dbo:birthName ""Carl Pontus Gahn"" .
  OPTIONAL { dbr:C_Pontus_Gahn dbo:militaryConflict ?war1 . }

  # Find the war associated with Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ""Peninsular War"" .
  OPTIONAL { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:militaryConflict ?war2 . }

  # Find other wars involving commanders from the Peninsular War
  {
    SELECT DISTINCT ?otherWar WHERE {
      ?commander dbo:participatedIn dbr:Peninsular_War .
      ?commander dbo:militaryConflict ?otherWar .
    }
  }
}",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
528,20,test,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  # Find events related to ""war of Irene Morales""
  { 
    ?event a dbo:Event ;
           rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""irene morales"") && CONTAINS(LCASE(?label), ""war""))
  }
  
  UNION
  
  # Find events related to ""Battle of La Rinconada de Ate""
  {
    ?event a dbo:Event ;
           rdfs:label ?label .
    FILTER(CONTAINS(LCASE(?label), ""battle of la rinconada de ate"") && CONTAINS(LCASE(?label), ""war""))
  }
  
  OPTIONAL { 
    ?event dbo:description ?description .
  }
}
ORDER BY ?event
LIMIT 10",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
488,61,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Tokugawa Masako and her spouse
  ?tokugawaMasako a dbo:Person ;
                  foaf:surname ""Tokugawa"" ;
                  dbo:spouse ?spouse .

  # Spouse's father (Royalty)
  ?spouse dbo:father ?royalFather .
  ?royalFather dbo:positionHeld ?administration .

  # Matsudaira Tadamasa and his father
  ?matsudairaTadamasa a dbo:Person ;
                      foaf:surname ""Matsudaira"" ;
                      dbo:father ?officeHolderFather .
  
  # Office Holder Father's father (Politician)
  ?officeHolderFather dbo:father ?politicianGrandfather .

  # Death place of the politician grandfather
  ?politicianGrandfather dbo:deathPlace ?deathPlace .

  FILTER(?tokugawaMasako = dbr:Tokugawa_Masako)
  FILTER(?matsudairaTadamasa = dbr:Matsudaira_Tadamasa)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
747,56,test,Give me the band of Amba Shepherd and person born on the birth date of Pavlo Khudzik and band of the person born as the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Step 1: Find the band of Amba Shepherd
SELECT ?bandOfAmbaShepherd WHERE {
    dbr:Amba_Shepherd dbo:musicalArtist ?band .
    BIND(?band AS ?bandOfAmbaShepherd)
}

UNION

# Step 2: Find the person born on Pavlo Khudzik's birth date
SELECT ?personWithSameBirthDate WHERE {
    dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
    ?person dbo:birthday ?birthDate .
    FILTER(?person != dbr:Pavlo_Khudzik)
}

UNION

# Step 3: Find the band of the person known as ""Shèna"" with the same birth date
SELECT ?bandOfPersonKnownAsShena WHERE {
    ?person foaf:name ""Shèna""@en .
    ?person dbo:birthday ?birthDate .
    FILTER(?birthDate = (SELECT ?birthDate WHERE {
        dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
    }))
    ?person dbo:musicalArtist ?band .
    BIND(?band AS ?bandOfPersonKnownAsShena)
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
54,36,test,"Give me the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfThinkhaya ?predecessor
WHERE {
  # Find Thinkhaya of Pagan's child
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  ?thinkhaya dbo:spouse|dbo:child ?childOfThinkhaya .

  # Find Thihapate of Mohnyin and his child who is an office holder and royalty
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en .
  ?thihapate dbo:spouse|dbo:child ?childOfThihapate .

  # Ensure the child of Thihapate is an office holder and royalty
  ?childOfThihapate a dbo:Monarch ;
                    dbo:officeHolder ?office .

  # Find the predecessor of the child of Thinkhaya
  ?predecessor dbo:successor ?childOfThinkhaya .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,29,test,Give me the party of the father of Lamberto Andreotti and reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?prodiParty WHERE {
  # Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:politicalAffiliation ?fatherParty .

  # Partito Popolare Italiano reference
  OPTIONAL { 
    ?party dbr:Partito_Popolare_Italiano rdfs:label ?partyLabel .
    FILTER(CONTAINS(LCASE(?partyLabel), ""partito popolare italiano""))
  }

  # Romano Prodi's party
  dbr:Romano_Prodi dbo:politicalAffiliation ?prodiParty .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,53,test,"Give me the person decedent at the work of the author of French Algeria and commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonDecedent WHERE {
  # Find the author of ""French Algeria""
  ?author dbo:work dbr:French_Algeria .
  
  # Find a commander in Franco-Hova Wars
  ?commander dbo:occupation dbr:Franco_Hova_Wars_Commander .

  # Find the capital of Algeria and its decedent
  dbr:Algiers dbo:capitalOf dbr:Algeria ;
              dbo:decedent ?capitalDecedent .

  # Ensure both individuals have a common decedent
  ?author dbo:decedent ?commonDecedent .
  ?commander dbo:decedent ?commonDecedent .
  
  # Ensure the capital's decedent is also the common decedent
  FILTER(?capitalDecedent = ?commonDecedent)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
485,25,test,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?country ?nottinghamshireEntity ?birthPlace
WHERE {
  # Find countries in the Western European Time zone
  ?country dbo:timeZone dbr:Western_European_Time ;
           a dbo:Country .

  # Find entities located in Nottinghamshire
  ?nottinghamshireEntity dbp:location dbr:Nottinghamshire .

  # Find awardees of the Eric Gregory Award who are writers and poets, and their birthplaces
  ?person dbo:award dbr:Educational_Awards#Eric_Gregory_Award ;
          a dbo:Writer ;
          dbo:occupation dbr:Poet .
  ?person dbp:birthPlace ?birthPlace .

}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
994,38,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedBand
WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  dbr:Don_Dokken dbo:birthName ""Donald Maynard Dokken"" .
  
  # Step 2: Find band members associated with Don Dokken
  ?bandMember dbo:memberOfBand dbr:Dokken .

  # Step 3: For each band member, find bands they are part of that are groups and organizations
  ?associatedBand dbo:member ?bandMember ;
                 a dbo:MusicalGroup ;
                 a dbo:Organization .
  
  # Step 4: Specifically look for associations with Meshuggah
  FILTER(?associatedBand = dbr:Meshuggah)
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
10,21,test,Give me the associated musical artist of Matt Colton and band member of Luke Vibert and professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist ?bandMember ?professional WHERE {
  # Associated musical artist of Matt Colton
  OPTIONAL {
    ?colton dbr:Matt_Colton .
    ?colton dbo:musicalArtist ?artist .
  }

  # Band member of Luke Vibert
  OPTIONAL {
    ?vibert dbr:Luke_Vibert .
    ?vibert dbo:bandMember ?bandMember .
  }

  # Professional in the birth name of Sharon Kao
  OPTIONAL {
    ?kao dbr:Sharon_Kao .
    ?kao dbo:birthName ?birthName .
    ?professional dbo:birthName ?birthName .
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
488,69,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?birthPlace ?war ?administration ?deathPlace
WHERE {
  # Saitō Hajime's birth place
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War involving Saitō Hajime
  ?war a dbo:MilitaryConflict ;
      dbo:eventParticipant dbr:Saitō_Hajime .
  
  # Tokugawa Masako's spouse's father (royalty)
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  ?spouse dbo:father ?father .
  ?father a dbo:Monarch ;
          dbo:administrativePost ?administration .

  # Yūki Hideyasu's father's death place
  dbr:Yūki_Hideyasu dbo:father ?father .
  ?father a dbo:Politician ;
          dbo:deathPlace ?deathPlace .
}
```",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
54,68,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v5 . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan and his descendants
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  
  ?child1 dbo:spouse|dbo:childOf ?thinkhaya .
  ?grandchild dbo:spouse|dbo:childOf ?child1 .

  # Thihapate of Mohnyin and his child
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en .
  
  ?royalChild dbo:spouse|dbo:childOf ?thihapate ;
              a dbo:OfficeHolder, dbo:Royalty .

  # Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Monarch ;
               foaf:name ""Thado Minsaw""@en .
  
  ?parent dbr:Prome dbo:monarch ?thadoMinsaw .

  # Find the person who matches all criteria
  ?person dbo:spouse|dbo:childOf ?child1 ; # Thinkhaya's child (predecessor of grandchild)
          dbo:spouse|dbo:childOf ?royalChild ; # Child of Thihapate, royalty and office holder
          dbo:spouse|dbo:childOf ?parent . # Parent of Thado Minsaw
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
427,48,test,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of the party of Michele Pinto.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiPartyLabel ?pintoPartyLabel
WHERE {
  # Find Romano Prodi and his political party
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:partyAffiliation ?prodiParty .
  
  # Get the label for Romano Prodi's party
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Find Michele Pinto and his political party
  dbr:Michele_Pinto a dbo:Politician ;
                    dbo:partyAffiliation ?pintoParty .
  
  # Get the label for Michele Pinto's party
  ?pintoParty rdfs:label ?pintoPartyLabel .
}
```

This query does the following:
- It identifies Romano Prodi and Michele Pinto as politicians using DBpedia resources.
- It retrieves their respective political parties through the `partyAffiliation` property.
- It fetches the labels (names) of these parties for display.

Make sure to replace `dbr:Romano_Prodi` and `dbr:Michele_Pinto` with the correct resource identifiers if they differ in DBpedia. This query assumes that both individuals are represented as politicians and have a party affiliation listed.",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
281,53,test,"Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?war ?entityInNewZealand ?militaryUnit
WHERE {
  # Jonathon Band's award
  dbr:Jonathon_Band dbo:awardReceived ?award .
  
  # War associated with the awardee of that award
  ?awardRecipient dbo:awardReceived ?award ;
                 dbo:participatedInWar ?war .

  # Entity in Colony of New Zealand related to the war
  OPTIONAL {
    ?entityInNewZealand dbo:location dbr:Colony_of_New_Zealand ;
                       dbo:relatedTo ?war .
  }

  # Heather Roy's profession as a military unit
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  FILTER (isLiteral(?militaryUnit) && regex(str(?militaryUnit), ""military unit"", ""i""))
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
404,41,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Princess ;
           foaf:name ""Victoria Louise of Prussia""@en ;
           dbo:birthPlace dbr:Berlin ;
           dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .

  # Find her spouse
  ?princess dbo:spouse ?spouse .

  # Confirm one of their children is Ernest Augustus, Duke of Brunswick
  ?child a dbo:Prince ;
         foaf:name ""Ernest Augustus, Duke of Brunswick""@en ;
         dbo:parent ?spouse .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,18,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident WHERE {
  # Director of ""Pipe Dreams"" (1976 film)
  ?film dbo:director ?director .
  FILTER(STRSTARTS(STR(?film), STR(dbr:Pipe_Dreams_(1976_film))))

  # Birthplace of the director
  ?director dbp:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .

  # Resident of the birthplace
  ?resident dbo:residence ?birthPlace .

  # Child of Phillip Spaulding
  ?spauldingChild dbo:childOf dbr:Phillip_Spaulding ;
                  a dbo:FictionalCharacter, dbo:SoapCharacter .
  
  # Ensure the director is the father of the child
  ?director dbo:parent ?spauldingChild .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
487,17,test,"Give me the country of 2022 Vermont House of Representatives election and administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?administration WHERE {
  # Find Phil Scott's birth name
  VALUES ?philScott (dbr:Phil_Scott_(politician)) .
  
  OPTIONAL { 
    ?philScott dbo:birthName ?birthName .
  }
  
  # Find a soccer player with the same birth name as Phil Scott
  ?soccerPlayer dbo:birthName ?birthName ;
               rdf:type dbo:SoccerPlayer .

  # Get the country of the 2022 Vermont House of Representatives election
  dbr:2022_Vermont_House_of_Representatives_election dbo:country ?country .
  
  # Find the administration under which the soccer player was born
  OPTIONAL {
    ?soccerPlayer dbo:birthPlace ?place ;
                  dbp:dateOfBirth ?dob .
    
    ?place dbo:administrativeTerritory ?administration .
  }
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
801,62,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v6 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  VALUES ?alterEgo { dbr:Lamont_Cranston }

  ?artist dbo:associatedMusicalArtist dbr:Chris_Taylor_(musician) .
  
  ?song dbo:producer ?professional ;
        dbo:musicalArtist ?rapper .

  ?professional rdf:type dbo:MusicalArtist, dbr:Rapper .
  
  ?alterEgo dbo:associatedMusicalArtist ?professional .
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
9,60,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?nickname WHERE {
  # Find the mayor of Belfast
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Belfast ;
         dbo:almaMater ?university .
  
  # Ensure the mayor is also a politician
  ?mayor dbo:occupation dbr:Politician .

  # Get the alma mater of the mayor
  ?university rdfs:label ?almaMater .

  # Find an educational institution in Northern Ireland with a nickname
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbp:nickname ?nickname .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
994,58,test,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?sA_Slayer_Artist ?donDokken_BandMember ?meshuggahBandMember ?associatedArtist
WHERE {
  # S.A. Slayer's associated artist (Tom Araya)
  dbr:Slayer dbo:bandMember dbr:Tom_Araya .
  BIND(dbr:Tom_Araya AS ?sA_Slayer_Artist)

  # Don Dokken's band member who is a musical artist
  dbr:Dokken dbo:bandMember ?donDokken_BandMember .
  FILTER EXISTS { ?donDokken_BandMember dbo:birthPlace ?_ } .

  # Meshuggah's band member that is also a band/group/organization
  dbr:Meshuggah dbo:bandMember ?meshuggahBandMember .
  FILTER EXISTS {
    ?meshuggahBandMember (dbo:band | dbo:musicalGroup | dbo:organisation) ?_ .
  }

  # Associated musical artist of the Meshuggah band member
  ?meshuggahBandMember dbo:associatedMusicalArtist ?associatedArtist .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
994,63,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower dbr:Watchtower .
  ?watchtower dbo:musicalArtist ?artist1 .

  # Step 2: Find associated musical artist of the band member of Meshuggah who is also a band and group and organization
  ?meshuggahMember dbr:Meshuggah ;
                  dbo:bandMember ?meshuggahBand ;
                  rdf:type dbo:MusicalArtist .
  FILTER (EXISTS { ?meshuggahBand dbo:genre ?genre . }) # Ensure it's a band/group/organization

  ?meshuggahMember dbo:musicalArtist ?artist2 .

  # Step 3: Find band member of Donald Maynard Dokken
  ?dokken dbr:Don_Dokken ;
         dbo:birthName ""Donald Maynard Dokken"" ;
         dbo:bandMember ?dokkenBand .
  
  ?dokkenBand dbo:musicalArtist ?artist3 .

  # Final step: Find the associated musical artist of the final artist
  ?artist3 dbo:musicalArtist ?finalArtist .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
391,49,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of the figure known as Hub City.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionShow ;
         dbo:workExample ?work .
  
  ?actor dbo:actedIn ?movie ;
         dbo:nationality dbr:Hub_City ;
         dbo:occupation dbr:Actor .

}
```

### Explanation:

- **?movie**: Represents the movie that is also a work and a television show.
  - `a dbo:Film`: Ensures it's a film.
  - `dbo:genre/dbo:subClassOf* dbo:TelevisionShow`: Checks if it has a genre or subclass related to television shows.
  - `dbo:workExample ?work`: Confirms it is also considered a work.

- **?actor**: Represents the actor associated with this movie.
  - `dbo:actedIn ?movie`: Links the actor to the movie.
  - `dbo:nationality dbr:Hub_City`: Ensures the actor is from Hub City.
  - `dbo:occupation dbr:Actor`: Confirms the actor's profession.",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
747,67,test,"Give me the band of the person born as the persona of Shèna and band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person1Band ?writerBand ?person2Band WHERE {
  # Person born as ""Shèna""
  ?person1 dbo:name ""Shèna""@en .
  OPTIONAL { ?person1 dbo:musicalBand ?band1 . BIND(?band1 AS ?person1Band) }
  
  # Writer of a song by Amba Shepherd
  ?song dbp:lyricsBy ?writer .
  ?song dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""amba shepherd"")) .
  OPTIONAL { ?writer dbo:musicalBand ?band2 . BIND(?band2 AS ?writerBand) }
  
  # Person born on 1985-04-29
  ?person2 dbo:birthDate ""1985-04-29""^^xsd:date .
  OPTIONAL { ?person2 dbo:musicalBand ?band3 . BIND(?band3 AS ?person2Band) }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,63,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaito ?deathPlaceYukiFather ?administrationGoMizunooFather
WHERE {
  # Birthplace of Saitō Hajime
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # Death place of Yūki Hideyasu's father (assuming his father is a politician)
  dbr:Yūki_Hideyasu dbo:father ?yukiFather .
  ?yukiFather rdf:type dbo:Politician ;
              dbo:deathPlace ?deathPlaceYukiFather .

  # Administration during the time of Emperor Go-Mizunoo's father
  dbr:Emperor_Go-Mizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:timePeriod ?administrationGoMizunooFather .
}
```

This query assumes that:
- The DBpedia resource for Saitō Hajime, Yūki Hideyasu, and Emperor Go-Mizunoo are correctly linked.
- The properties `dbo:birthPlace`, `dbo:father`, `rdf:type` (for type checking), `dbo:deathPlace`, and `dbo:timePeriod` are used appropriately.",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
994,67,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of S.A. Slayer.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?associatedArtist WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:memberOf dbr:Meshuggah .
  
  # Meshuggah as an organization
  dbr:Meshuggah a dbo:Band .

  # Find a member of Meshuggah who is also a band/group/organization
  ?member dbo:memberOf dbr:Meshuggah ;
          a dbo:Band, dbo:Organization .

  # Don Dokken's persona and birth as a musical artist
  dbr:Don_Dokken dbo:birthName dbr:Donald_Richard_Dokken ;
                 a dbo:MusicalArtist .

  # Slayer association with S.A. Slayer (Tom Araya)
  ?slayerMember dbo:associatedBand dbr:Slayer ;
                dbo:birthName dbr:Thomas_Joseph_Araya .

  # Find the associated musical artist
  ?member dbo:associatedMusicalArtist ?associatedArtist .
  
  # Ensure the associated artist is linked to Don Dokken and Slayer
  ?associatedArtist dbo:birthName dbr:Donald_Richard_Dokken ;
                   dbo:associatedBand dbr:Slayer .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
421,26,test,Give me the person born as the birth name of Dino Merlin and band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Dino Merlin's birth name
  dbr:Dino_Merlin dbo:birthName ?birthName .

  # Find a person with the same birth name who is a band member of an awardee
  ?person dbp:birthName ?birthName .
  ?band dbo:member ?person .
  ?award dbo:recipient ?band .
  
  # Ensure this person is native to the Socialist Federal Republic of Yugoslavia
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
378,68,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v5 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Wars involving Gustaf IV Adolf (King Gustav IV Adolf of Sweden)
  VALUES ?person1 { dbr:Gustav_IV_Adolf_of_Sweden }
  
  ?person1 dbo:militaryConflict ?war .
  
  UNION
  
  # Wars involving George Augustus Eliott, 1st Baron Heathfield
  VALUES ?person2 { dbr:George_Augustus_Eliott_1st_Baron_Heathfield }
  
  ?person2 dbo:militaryConflict ?war .
  
  UNION
  
  # Wars involving Arthur Wellesley, 1st Duke of Wellington
  VALUES ?person3 { dbr:Arthur_Wellesley_1st_Duke_of_Wellington }
  
  ?person3 dbo:militaryConflict ?war .
}
```",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
360,26,test,"Give me the reference to the author of Blinded by the Light and native of Johannesburg and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  # Find the author of ""Blinded by the Light""
  ?song dbo:lyricsBy dbr:Bruce_Springsteen .
  ?song rdfs:label ""Blinded by the Light""@en .

  # Ensure the author is native to Johannesburg
  ?author dbo:nationality dbr:South_Africa ;
          dbo:birthPlace dbr:Johannesburg .

  # Link the author to an album with Dave Flett
  ?album dbo:artist dbr:Bruce_Springsteen ;
         dbo:producer ?flett .
  ?flett rdfs:label ""Dave Flett""@en .

  FILTER(?author = dbr:Bruce_Springsteen)
}
```

This query does the following:
- Identifies Bruce Springsteen as the author of ""Blinded by the Light.""
- Checks if he is native to Johannesburg.
- Finds an album where Dave Flett was involved, ensuring it links back to Bruce Springsteen.",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
435,26,test,"Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?author dbo:nationality dbr:Iceland .
  ?author dbo:wikiPageDisambiguates ?disambiguation .
  ?disambiguation rdfs:label ""Iceland""@en .
  
  ?location dbo:timeZone dbr:Greenwich_Mean_Time .
  ?location rdfs:label ""Iceland""@en .

  ?work dbo:author ?author .
}
```

This query does the following:
- Identifies an author with Icelandic nationality.
- Ensures that this author has a disambiguation page linked to Iceland.
- Confirms that the location (Iceland) is in the GMT time zone.
- Retrieves works authored by this individual.",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,70,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?partyName1 ?partyName2 ?partyName3 WHERE {
  # Italian People's Party (1994)
  OPTIONAL { 
    dbr:Italian_People%27s_Party_(1994) dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ?partyName1 FILTER(LANG(?partyName1) = ""en"")
  }

  # Father of an alumnus of MIT
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
             dbo:father ?father .
    ?father dbo:politicalParty ?party2 .
    ?party2 rdfs:label ?partyName2 FILTER(LANG(?partyName2) = ""en"")
  }

  # Person born, office holder and politician with birth name Romano Prodi
  OPTIONAL {
    ?person dbo:birthName ""Romano Prodi""@it ;
            a dbo:Politician ;
            dbo:officeHolder ?office .
    ?person dbo:politicalParty ?party3 .
    ?party3 rdfs:label ?partyName3 FILTER(LANG(?partyName3) = ""en"")
  }
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
360,20,test,"Give me the reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and writer of The Roaring Silence.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manfredMannReference ?winnieDeathPlace ?writerOfRoaringSilence
WHERE {
  # Manfred Mann (the band)
  dbr:Manfred_Mann_(band) dbo:wikiPageRedirects ?manfredMannReference .

  # Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?winnieDeathPlace .
  ?winnieDeathPlace a dbo:Settlement .

  # Writer of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:author ?writerOfRoaringSilence .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
92,45,test,Give me the band member of Nevermore and associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nevermoreMember ?jimSheppardBand ?personBand 
WHERE {
  # Find a member of Nevermore
  ?member dbo:band dbr:Nevermore .
  BIND(?member AS ?nevermoreMember)

  # Find associated musical artist of Jim Sheppard
  ?sheppard dbo:birthName ""Jim Sheppard"" ;
            dbo:associatedBand ?jimSheppardBand .
  FILTER(?jimSheppardBand != dbr:Nevermore) 
  BIND(?jimSheppardBand AS ?jimSheppardBand)

  # Find the band of the person born as Joseph Michael
  ?person dbo:birthName ""Joseph Michael"" ;
          dbo:band ?personBand .
  FILTER(?personBand != dbr:Nevermore)
  BIND(?personBand AS ?personBand)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,45,test,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War and military force of Spanish Civil War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Resource for ""El Director""
  VALUES ?elDirector { dbr:Francisco_Franco }

  # Events related to Rif War and Spanish Civil War
  ?rifWar dbo:participatedInMilitaryForce ?militaryForce1 .
  ?civilWar dbo:participatedInMilitaryForce ?militaryForce2 .

  FILTER (
    ?rifWar IN (dbr:Rif_War, dbr:Spanish_Civil_War) &&
    ?civilWar IN (dbr:Rif_War, dbr:Spanish_Civil_War)
  )

  # El Director's involvement
  ?elDirector dbo:commanderOfMilitaryForce ?militaryForce1 .
  ?elDirector dbo:commanderOfMilitaryForce ?militaryForce2 .

  # Retrieve the commander
  ?militaryForce1 dbo:commander ?commander .
  OPTIONAL { ?militaryForce2 dbo:commander ?commander . }
}
```",5,6,6,3,3,3,3,71,0,0,11,0,0.0,0
232,44,test,"Give me the child of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Jon Pertwee's child
  ?jonPertwee a dbo:Person ;
              foaf:name ""Jon Pertwee"" .
  
  ?child dbo:parent ?jonPertwee .

  # Sylvie Bermann's residence
  ?sylvieBermann a dbo:Person ;
                 foaf:name ""Sylvie Bermann"" .
  
  ?residence dbo:nativePlace ?sylvieBermann ;
             dbo:settlementType dbr:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Sean Pertwee's claim to fame
  ?seanPertwee a dbo:Person ;
               foaf:name ""Sean Pertwee"" .
  
  ?film dbo:starring ?seanPertwee ;
        dbo:genre dbr:Military_conflict_film .

  # Combine conditions
  FILTER (?child = ?residence && ?child = ?film)
}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
617,37,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse
WHERE {
  # Nysa and her parent
  dbr:Nysa_of_Pontus dbo:spouse dbr:Pharnaces_I_of_Pontus .
  dbr:Nysa_of_Pontus dbo:childOf ?parent .

  # Antiochus (son of Antiochus III the Great) and his successor
  dbr:Antiochus_IV_Epiphanes dbo:succeededBy ?successor .
  
  # Child of the successor
  ?successorChild dbo:childOf ?successor .
  
  # Spouse of the child who is royalty
  ?successorChild dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
54,70,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v7 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:childOf dbr:Thihapate_of_Mohnyin .
  ?thihapateChild a dbo:Monarch ; 
                  dbo:officeHolder true .

  # Step 2: Find Soe Min Wimala Dewi's father
  ?soeMinWimalaFather dbo:parentOf dbr:Soe_Min_Wimala_Dewi .

  # Step 3: Find Thado Minsaw of Prome's parent, then their child
  ?thadoMinsawParent dbo:childOf dbr:Thado_Minsaw_of_Prome .
  ?thadoMinsawChild dbo:parentOf ?thadoMinsawParent .

  # Step 4: Find the predecessor of the office holder and royalty child from step 1
  ?predecessor dbo:successor ?thihapateChild .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
48,17,test,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash and band of Carl Falk.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorBand WHERE {
  # Find shows featuring Stacey Dash
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Find actors in those shows who are also musical artists
  ?show dbo:starring ?actor .
  ?actor foaf:pageTalkPage ?talkPage .
  ?talkPage dbo:wikiPageRedirects ?artistPage .
  ?artistPage rdf:type dbo:MusicalArtist .

  # Get the band of that actor
  ?bandMember dbo:member ?actor ;
              dbo:band ?actorBand .
  
  # Find Carl Falk's band
  ?falk foaf:name ""Carl Falk"" .
  ?falk dbo:member ?falkBand .
  ?falkBand rdf:type dbo:MusicalArtist .

  FILTER(?actorBand != ?falkBand) # Ensure it's not the same band as Carl Falk's

}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
9,68,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Find the mayor of Belfast
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Belfast ;
         dbo:almaMater ?almaMater .

  # Find the nickname of Queen's University Belfast
  dbr:""Queen's University Belfast"" dbo:nickname ?nickname .

  # Find the awardee of Royal Medals and their alma mater
  OPTIONAL {
    ?awardee dbo:award dbr:Royal_Medals ;
            dbo:almaMater ?almaMater .
  }
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
48,16,test,"Give me the band of the actor, that is a musical artist, of Honor Up and band of the writer of Emotion (Carly Rae Jepsen album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorBand ?writerBand WHERE {
  # Find the actor who is also a musical artist in ""Honor Up""
  ?movie dbo:title ""Honor Up""@en .
  ?movie dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  
  OPTIONAL { 
    ?artist dbo:stageName ?actorName .
    ?artist dbo:band ?actorBand .
  }
  
  # Find the writer of the song ""Emotion""
  ?song dbo:title ""Emotion""@en ;
        dbo:lyricsBy ?writer .
  
  OPTIONAL {
    ?writer dbo:band ?writerBand .
  }

  FILTER(?actorName = ?actorName) # Ensure we are considering the same person if applicable
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
801,48,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?associatedArtist WHERE {
  # The Shadow's alter ego
  VALUES ?alterEgo { dbr:Lamont_Cranston }

  # Method Man and his album
  VALUES ?album { dbr:40_Dayz_%26_40_Nightz }
  ?album dbo:artist dbr:Method_Man .

  # Find a professional associated with Lamont Cranston (The Shadow)
  ?professional dbo:alterEgo ?alterEgo .
  
  # Find an artist associated with Method Man
  ?associatedArtist dbo:associatedMusicalArtist dbr:Method_Man ;
                   rdf:type dbo:Musician ;
                   dbo:profession dbr:Artist .

}
```",5,7,6,3,2,3,3,71,0,0,22,0,0.0,0
488,57,test,"Give me the birth place of Enomoto Takeaki and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEnomoto ?deathPlaceFatherMatsudaira ?administrationGoMizunooFather
WHERE {
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Matsudaira Tadamasa and his father
  dbr:Matsudaira_Tadamasa dbo:father ?fatherMatsudaira .
  
  # Father of Matsudaira Tadamasa is a politician and office holder
  ?fatherMatsudaira rdf:type dbo:Politician ;
                   dbo:officeHolder ?office .

  # Death place of the father of Matsudaira Tadamasa
  ?fatherMatsudaira dbo:deathPlace ?deathPlaceFatherMatsudaira .

  # Emperor Go-Mizunoo and his father
  dbr:Emperor_Go-Mizunoo dbo:father ?fatherGoMizunoo .

  # Administration of the father of Emperor Go-Mizunoo
  ?fatherGoMizunoo dbo:officeHolder ?administrationGoMizunooFather .
}",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
427,50,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnusFatherParty ?prodiParty WHERE {
  # Find an alumnus of MIT
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .

  # Get the political party of the father
  OPTIONAL { ?father dbp:politicalAffiliation ?alumnusFatherParty . }

  # Find Romano Prodi and his political affiliation
  dbr:Romano_Prodi dbo:birthPlace ?place ;
                   a dbo:Politician ;
                   dbp:politicalAffiliation ?prodiParty .
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
492,67,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Person decedent at French Algeria
  ?person dbo:deathPlace dbr:French_Algeria .
  
  # Person decedent at the capital of Khemis Miliana District
  ?capital dbo:country dbr:Algeria ;
           dbo:administrativeUnit dbr:Khemis_Miliana_District .
  ?person dbo:deathPlace ?capital .

  # Person was a commander in the war that includes Battle of Verdun
  ?war dbo:type dbr:Military_conflict ;
       dbo:event dbr:Battle_of_Verdun .
  ?person dbo:commanderInWar ?war .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
701,60,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the spouse of Amun-her-khepeshef.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify the commander in Battle of Perire
  ?commander dbo:battle [dbo:name ""Battle of Perire""] .
  
  # Step 2: Find the father of the commander
  ?father dbo:child ?commander .

  # Step 3: Determine who is married to the father
  ?spouse dbo:spouse ?father .

  # Step 4: Ensure this spouse is a royalty
  ?spouse rdf:type dbo:Monarch .

  # Step 5: Identify the spouse of Amun-her-khepeshef
  ?amunSpouse dbo:spouse [dbo:name ""Amun-her-khepeshef""] .
  
  # Step 6: Find the child of this spouse
  ?child dbo:parent ?amunSpouse .

  # Step 7: Ensure the parent of this child is the same as the spouse found in step 3
  ?spouse dbo:parent ?child .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
747,28,test,Give me the band of Shèna and person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandShena ?personSameBirthDatePavloKhudzik ?bandAmbaShepherd
WHERE {
  # Find the band associated with Shèna
  ?shena dbo:member dbr:Shèna .
  ?shena dbo:bandName ?bandShena .

  # Find Pavlo Khudzik's birth date
  OPTIONAL { 
    ?pavloKhudzik dbp:birthday ?birthDatePavloKhudzik .
  }

  # Find the person born on the same date as Pavlo Khudzik
  OPTIONAL {
    ?personSameBirthDatePavloKhudzik dbp:birthday ?birthDatePerson .
    FILTER (?birthDatePerson = ?birthDatePavloKhudzik)
  }

  # Find the band associated with Amba Shepherd
  ?ambashepherd dbo:member dbr:Amba_Shepherd .
  ?ambashepherd dbo:bandName ?bandAmbaShepherd .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
659,50,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Rutger Jan Schimmelpennick and his military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryForce ?force .

  # Polish Horse as a military unit/organization
  dbr:Polish_Horse dbo:partOfMilitaryConflict ?event .
  
  # The event is both a societal event and a military conflict
  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:MilitaryConflict .

  # Linking the force to the event
  ?force dbo:militaryConflict ?event .

  # Finding the commander of the event
  ?event dbo:commander ?commander .
}
```",5,12,6,3,2,3,3,71,0,0,31,0,0.0,0
182,27,test,Give me the war of Mahesh Senanayake and war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warMahesh ?warGotabhaya ?nationalityTamara
WHERE {
  # Find wars associated with Mahesh Senanayake
  OPTIONAL { 
    ?person1 a dbr:Mahesh_Senanayake ;
             dbo:participatedInWar ?warMahesh .
  }
  
  # Find wars associated with Gotabhaya Rajapaksa
  OPTIONAL {
    ?person2 a dbr:Gotabhaya_Rajapaksa ;
             dbo:participatedInWar ?warGotabhaya .
  }

  # Get the nationality of Tamara Kunanayakam
  ?person3 a dbr:Tamara_Kunanayakam ;
           dbo:nationality ?nationalityTamara .
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
701,64,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfHenuttawy ?childOfSpouseAmunHerKhepeshef ?spouseOfFatherCommander WHERE {
  # Parent of Henuttawy (19th dynasty)
  OPTIONAL { 
    dbr:Henuttawy_(19th_dynasty) dbo:parent ?henuttawyParent .
    ?henuttawyParent rdfs:label ?parentOfHenuttawy .
  }

  # Child of the spouse of Amun-her-khepeshef
  OPTIONAL {
    dbr:Amun-her-khepeshef dbo:spouse ?amunHerKhepeshefSpouse .
    ?amunHerKhepeshefSpouse dbo:child ?childOfSpouse .
    ?childOfSpouse rdfs:label ?childOfSpouseAmunHerKhepeshef .
  }

  # Spouse of the father of the commander in Battle of Perire
  OPTIONAL {
    dbr:Battle_of_Perire dbo:commander ?commander .
    ?commander dbo:father ?commanderFather .
    ?commanderFather dbo:spouse ?spouseOfCommanderFather .
    ?spouseOfCommanderFather rdfs:label ?spouseOfFatherCommander .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
232,53,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?native WHERE {
  # Sylvie Bermann's residence
  ?sylvie dbo:nationality dbr:United_Kingdom .
  ?sylvie dbo:residence ?residence .
  ?residence a dbo:Settlement .

  # Actor of ""Dog Soldiers""
  ?dogSoldiersFilm dbo:starring ?actor .
  FILTER (str(?dogSoldiersFilm) = ""Dog_Soldiers_(film)"")

  # Child of Jon Pertwee
  ?jonPertwee foaf:name ""Jon_Pertwee""@en .
  ?child dbo:parent ?jonPertwee .
  ?actor foaf:surname ?child .

  # Native of the residence
  ?residence dbo:native ?native .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
197,8,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of Dumitru Nadu.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?steeleAwardeeBirthplace ?nandulescuBirthplace WHERE {
  # Assuming a recent awardee of the Leroy P. Steele Prize
  VALUES ?steeleAwardee { 
    dbr:Terence_Tao 
    # Add other known awardees if necessary
  }
  
  ?steeleAwardee dbo:birthPlace ?steeleAwardeeBirthplace .

  # Dumitru Nădulescu
  dbr:Dumitru_Nădulescu dbo:birthPlace ?nandulescuBirthplace .
}
```

This query assumes Terence Tao as a recent awardee of the Leroy P. Steele Prize, which you can adjust based on more current information or additional known recipients.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
747,45,test,Give me the person born on 1985-04-29 and band of Amba Shepherd and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?bandOfAmbaShepherd ?personaOfShena ?bandOfPersona
WHERE {
  # Find the person born on 1985-04-29
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  
  # Find the band associated with Amba Shepherd
  dbr:Amba_Shepherd dbo:member ?bandOfAmbaShepherd .

  # Find the persona of Shèna (assuming Shèna is a known entity)
  dbr:Shèna dbp:alsoKnownAs ?personaOfShena .
  
  # Find the band associated with the persona of Shèna
  ?personaOfShena dbo:member ?bandOfPersona .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
963,17,test,"Give me the entity in Serbia and administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?v0 <http://dbpedia.org/property/leaderParty> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?location WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Serbia ;
         dbo:politicalAdministrativeUnit ?adminUnit .
  
  ?adminUnit dbo:wikiPageWikiLink dbr:Location_21205 .

  OPTIONAL { 
    ?govPosition dbo:positionTitle ""Prime Minister"" ;
                 dbo:officeHolder ?partyLeader .
    ?partyLeader dbo:affiliation ?party .
  }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`).
- **SELECT Clause**: We select the political party (`?party`) and its location (`?location`).
- **WHERE Clause**:
  - We filter entities that are a `PoliticalParty` in Serbia.
  - The party is associated with an administrative unit (`?adminUnit`) linked to ""Location_21205"".
  - An optional clause checks if the party has a leader holding a significant position like Prime Minister, indicating ruling status.

This query assumes that ""Location_21205"" is correctly mapped in DBpedia. Adjustments might be needed based on actual resource identifiers and available data.",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
391,47,test,"Give me the native of the figure known as Hub City and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?native WHERE {
  # Sherry Hormann's spouse
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Spouse's claim to fame (a work)
  ?spouse dbo:film ?work .
  
  # Hub City (assuming Columbia, South Carolina)
  dbr:Columbia_(South_Carolina) dbo:nickname ""Hub City"" ;
     dbo:resident ?native .

  # Native acted in the spouse's work
  ?native dbo:actedIn ?work .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,22,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country ?sportsEvent WHERE {
  # Find countries in the Central European Time zone
  ?timeZone dbo:region ?country .
  FILTER (str(?timeZone) = ""Central_European_Time""^^xsd:string)
  
  # Ensure the country is a geographical entity
  ?country rdf:type dbo:Country .

  # Find sports events related to Aguilar de Segarra
  ?sportsEvent dbp:location dbr:Aguilar_de_Segarra .
  FILTER (rdf:type(?sportsEvent) = dbo:SportsEvent)
}
```",4,6,5,2,2,2,3,28,0,0,28787,0,0.0,0
9,35,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Northern_Ireland_Forum ;
          foaf:almaMater ?university .
  
  ?university rdfs:label ""Queen's University Belfast""@en .

  OPTIONAL { 
    ?person foaf:name ?name .
    FILTER(CONTAINS(LCASE(?name), ""mayor""))
  }

  ?person dbo:almaMater ?almaMater .
}
```

This query does the following:
- Selects individuals who are politicians and have held an office in the Northern Ireland Forum.
- Checks if they attended Queen's University Belfast, which is linked via its label.
- Filters for those with ""mayor"" in their name to ensure relevance.
- Retrieves the alma mater of these individuals.",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
488,62,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaito ?war ?administrationPeriod ?deathPlaceFather
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .

  # War involving Saitō Hajime
  ?war dbo:participatedInMilitaryConflict dbr:Saitō_Hajime ;
       a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Administration of Emperor Go-Yōzei during the war
  dbr:Emperor_Go-Yōzei dbo:reign ?administrationPeriod .
  FILTER (?war IN ?administrationPeriod) .

  # Father of Matsudaira Tadamasa
  dbr:Matsudaira_Tadamasa dbo:father ?father .
  
  # Father's death place
  ?father a dbo:Politician, dbo:OfficeHolder ;
          dbo:deathPlace ?deathPlaceFather .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
184,50,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?result WHERE {
  # Step 1: Archduke Joseph Francis of Austria's child and that child's parent
  ?joseph dbo:child ?child1 .
  ?child1 dbo:parent ?grandParent .

  # Step 2: Archduke Ladislaus Philipp of Austria's parent, that parent's child, and that child's child who is a royalty
  ?ladislaus dbo:parent ?parentLadislaus .
  ?parentLadislaus dbo:child ?child2 .
  ?child2 dbo:child ?grandChild .
  
  # Ensure the grandChild is of type royalty
  ?grandChild rdf:type ?royaltyType .
  FILTER (STRSTARTS(STR(?royaltyType), ""http://dbpedia.org/ontology/Royal""))

  # Find the intersection of both paths
  FILTER (?grandParent = ?grandChild)
  
  # Return the result
  BIND(?grandParent AS ?result)
}
```",5,6,6,3,2,3,3,71,1,2775,0,0.00036023054755043225,1.0,0.0007202016564638097
161,49,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify Francisco Franco as a commander in an event
  ?franco dbo:wikiPageRedirects dbr:Francisco_Franco .
  
  # El Director is another name for Francisco Franco
  ?elDirector dbo:wikiPageRedirects dbr:El_Director ;
              dbo:alias ""Francisco Franco""@en .

  # Link El Director to the same person as Francisco Franco
  FILTER (?franco = ?elDirector)

  # Identify the military force associated with Francisco Franco
  ?militaryForce dbo:commander ?franco .
  
  # Ensure the military force is a societal event, an event, and a military conflict
  ?militaryForce rdf:type dbo:SocietalEvent ;
                 rdf:type dbo:Event ;
                 rdf:type dbo:MilitaryConflict .
}
```",5,9,6,3,2,3,3,71,0,0,34,0,0.0,0
547,70,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v3 <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?awardee .
    ?award dbo:winner ?awardee .
    ?award dbo:holder dbr:Gerald_Graham .
    ?awardee dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of the actor of the show with Emily Richard
  {
    ?show dbo:starring ?actor .
    ?show dbo:starring dbr:Emily_Richard .
    ?actor dbo:deathPlace ?restingPlace .
  }
  
  UNION
  
  # Resting place of the child of James Burton (property developer)
  {
    ?child dbo:parent dbr:James_Burton_(property_developer) .
    ?child dbo:deathPlace ?restingPlace .
  }
}",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
488,53,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Saitō Hajime's birth place and involvement in the Boshin War
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .
  
  # The war (Boshin War) as a military conflict, event, and societal event
  dbr:Boshin_War a dbo:MilitaryConflict ;
                 a dbo:Event ;
                 a dbo:SocietalEvent .

  # Toyotomi Hideyoshi's administration period
  dbr:Toyotomi_Hideyoshi dbo:officeHolderOf ?administration .
  ?administration dbo:startDate ?startYear ;
                  dbo:endDate ?endYear .
  
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
754,17,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of Loe Thai.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Find a child of Ram Khamhaeng the Great
  ?child dbo:parent dbr:Ram_Khamhaeng_the_Great .
  
  # Find a parent of Loe Thai
  dbr:Loe_Thai dbo:parent ?loethaiParent .

  # Find the common ancestor of both
  ?commonAncestor dbo:parent ?child .
  ?commonAncestor dbo:parent ?loethaiParent .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
55,20,test,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?metallicaMember ?gunsNrosesMember ?symphonyMember
WHERE {
  # Jason Newsted's band is Metallica
  dbr:Jason_Newsted dbo:band dbr:Metallica .

  # Members of Metallica
  ?metallicaMember dbo:memberOf dbr:Metallica .
  
  # Members of Guns N' Roses
  ?gunsNrosesMember dbo:memberOf dbr:Guns_N'_Roses .

  # Check if any member is also part of the San Francisco Symphony
  OPTIONAL {
    ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony .
    FILTER (?gunsNrosesMember = ?symphonyMember)
  }
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
184,56,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthDate ?date1 .
  FILTER(YEAR(?date1) = 1925)

  ?margaretParent dbo:child ?margaret .
  ?margaretGrandChild dbo:parent ?margaretParent .

  # Native of Budapest and child of Archduke Joseph August
  ?budaPerson a dbo:Person ;
              dbo:nativePlace dbr:Budapest ;
              dbo:parent ?josephAugust .
  
  ?josephAugust a dbo:Person ;
                foaf:name ""Joseph August of Austria"" .

  # Find the common parent
  ?commonParent dbo:child ?margaretGrandChild, ?budaPerson .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,69,test,"Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . ?v7 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?micheleParty ?lambertoFatherParty ?romanoBirthName
WHERE {
  # Michele Pinto's political party
  OPTIONAL { 
    dbr:Michele_Pinto dbo:party ?micheleParty .
  }

  # Lamberto Andreotti's father and his political party
  OPTIONAL {
    dbr:Lamberto_Andreotti dbo:father ?lambertoFather .
    ?lambertoFather dbo:party ?lambertoFatherParty .
  }
  
  # Romano Prodi's birth name
  OPTIONAL {
    dbr:Romano_Prodi dbo:birthName ?romanoBirthName .
  }
}
```",8,10,9,3,3,3,3,71,2,1,0,0.6666666666666666,1.0,0.8
617,41,test,"Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?grandchild
WHERE {
  # Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child ?child1 .
  
  # Child of Antiochus III is parent of Nysa
  ?child1 dbo:parentOf dbr:Nysa .

  # Spouse of the child (parent of Nysa)
  ?child1 dbo:spouse ?spouse .

  # Seleucus II Callinicus and his grandchild
  dbr:Seleucus_II_Callinicus dbo:child ?child2 .
  ?child2 dbo:child ?grandchild .
  
  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
232,42,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Find John Pertwee and his children
  ?john a dbo:Person ;
        foaf:name ""John Pertwee""@en .
  
  ?child dbo:parent ?john ;
         dbo:nationality dbr:United_Kingdom ;
         dbo:birthPlace ?birthPlace .

  # Identify the child who acted in Dog Soldiers
  ?film dbp:starring ?child ;
        rdfs:label ""Dog Soldiers""@en .
  
  # Find Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en ;
          dbo:residence ?residence .

  # Ensure the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbo:nationality dbr:United_Kingdom .
  
  # Get the native of the residence
  ?native dbo:nativePlace ?residence .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
915,19,test,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Find Stephen Verona's birthplace
  dbr:Stephen_Verona dbo:birthPlace ?birthPlace .

  # Step 2: Find the parent of Lizzie Spaulding who resides in that birthplace
  ?parent a dbo:FictionalCharacter ;
          dbo:spouseOrPartnerOf ?lizzieSpaulding ;
          dbo:residenceLocation ?birthPlace .
  
  dbr:Lizzie_Spaulding dbo:child ?parent .

  # Step 3: Find the child of that parent who is both fictional and soap character
  ?child a dbo:FictionalCharacter, dbo:SoapCharacter ;
         dbo:parent ?parent .

  # Step 4: Find the father of that child
  ?father a dbo:FictionalCharacter, dbo:SoapCharacter ;
          dbo:spouseOrPartnerOf ?mother .
  
  ?mother dbo:child ?child .
}
```",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
427,41,test,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?italianPeopleParty ?prodiParty WHERE {
  # Lamberto Andreotti's father and his party affiliation
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) rdfs:label ?italianPeoplePartyLabel .
  FILTER(LANG(?italianPeoplePartyLabel) = 'en') 
  BIND(STR(?italianPeoplePartyLabel) AS ?italianPeopleParty)

  # Romano Prodi's party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,41,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?largoCaballeroForce ?francoForce ?biscayCampaign
WHERE {
  # Francisco Largo Caballero's military force involved in societal events and military conflicts
  dbr:Francisco_Largo_Caballero dbo:militaryConflict ?conflict1 .
  ?conflict1 a dbo:SocietalEvent ;
             dbo:participatingMilitaryForce ?largoCaballeroForce .

  # Francisco Franco's military force involved in societal events, general events, and military conflicts
  dbr:Francisco_Franco dbo:militaryConflict ?conflict2 .
  ?conflict2 a dbo:SocietalEvent ;
             dbo:event ?generalEvent ;
             dbo:participatingMilitaryForce ?francoForce .

  # Francisco Franco as commander in the Biscay Campaign
  dbr:Biscay_Campaign dbo:commander ?francoCommander .
  ?francoCommander = dbr:Francisco_Franco .
}
```",5,10,6,2,3,3,3,71,0,0,3,0,0.0,0
404,47,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
           foaf:name ""Victoria Louise, Princess Royal""@en ;
           dbo:birthPlace ?place .

  # Step 2: Find her spouse (who is royalty)
  ?princess dbo:spouse ?spouse .
  
  # Ensure the spouse is royalty
  ?spouse a dbo:Person ;
          dbo:title ?title .
  FILTER(CONTAINS(LCASE(STR(?title)), ""royalty""))

  # Step 3: Identify their child who is also royalty
  ?child dbo:parent ?princess, ?spouse .

  # Ensure the child is royalty
  ?child a dbo:Person ;
         dbo:title ?childTitle .
  FILTER(CONTAINS(LCASE(STR(?childTitle)), ""royalty""))

  # Step 4: Identify that child's parent (also royalty)
  ?grandChild dbo:parent ?child .

  # Ensure the grandchild is royalty
  ?grandChild a dbo:Person ;
              dbo:title ?grandChildTitle .
  FILTER(CONTAINS(LCASE(STR(?grandChildTitle)), ""royalty""))

  # Step 5: Find Prince George William of Hanover and identify his parent
  ?georgeWilliam a dbo:Person ;
                 foaf:name ""George William, Hereditary Prince of Brunswick-Lüneburg""@en .
  
  ?parent dbo:child ?georgeWilliam .

  # Ensure the parent is royalty
  ?parent a dbo:Person ;
          dbo:title ?parentTitle .
  FILTER(CONTAINS(LCASE(STR(?parentTitle)), ""royalty""))

  # Link the grandChild to Prince George William's parent
  ?grandChild = ?parent
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
959,55,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team
  ?team dbo:player dbr:Takashi_Sekizuka .
  
  # Yōichi Masuzoe's country of residence
  dbr:Yōichi_Masuzoe dbp:residenceCountry ?country .

  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  ?university a dbo:University ;
              rdfs:label ?universityLabel .
  
  FILTER (CONTAINS(LCASE(?universityLabel), ""japanese""))

  # Manager of the team, native to Yōichi Masuzoe's country, and member of Eiji Ōtsuka's alma mater
  ?manager dbo:nationality ?country ;
           dbo:almaMater ?university .
}
```",6,11,7,2,3,3,3,71,0,0,2,0,0.0,0
179,17,test,Give me the parent of the child of the parent of Vajiralongkorn and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfChild
WHERE {
  # Step 1: Find Queen Sirikit (Mom Rajawongse Sirikit Kitiyakara)
  ?sirikit a dbo:Person ;
           dbp:name ""Sirikit of Thailand"" ;
           dbp:spouse ?vajiralongkorn .

  # Step 2: Vajiralongkorn is the child of Queen Sirikit
  ?vajiralongkorn a dbo:Person ;
                  dbp:parent ?sirikit ;
                  dbp:name ""Vajiralongkorn"" .

  # Step 3: Find the parent of Vajiralongkorn (Queen Sirikit)
  ?parentOfVajiralongkorn a dbo:Entity ;
                         dbp:child ?vajiralongkorn ;
                         dbp:name ""Sirikit of Thailand"" .

  # Step 4: Find the child of Queen Sirikit
  ?childOfSirikit a dbo:Person ;
                  dbp:parent ?sirikit .

  # Step 5: Find the parent of this child (Vajiralongkorn)
  ?parentOfChild a dbo:Person ;
                 dbp:child ?childOfSirikit .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
303,28,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . ?v5 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?arnulfoParty ?country ?commanderParty WHERE {
  # Arnulfo Arias Madrid's political party
  dbr:Arnulfo_Arias_Madrid dbo:politicalParty ?arnulfoParty .

  # El Valle de Antón is in which country?
  dbr:El_Valle_de_Antón dbo:country ?country .

  # United States invasion of Panama commander's political party
  {
    SELECT ?commander WHERE {
      dbr:United_States_invasion_of_Panama dbo:commander ?commander .
    }
    OPTIONAL { ?commander dbo:politicalParty ?commanderParty . }
  }
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
659,69,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v7 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the war involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment a dbo:MilitaryUnit ;
            dbo:participatedIn ?war .
  
  FILTER(?regiment = dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish))
  
  # Ensure the war is both an event and a military conflict
  ?war a dbo:MilitaryConflict ;
       a dbo:Event .

  # Find the military force associated with Rutger Jan Schimmelpenninck
  ?force dbo:commandedBy ?schimmelpenninck .
  FILTER(?schimmelpenninck = dbr:Rutger_Jan_Schimmelpenninck)

  # Ensure the force is part of a societal event and a military conflict
  ?force dbo:participatedIn ?event ;
         dbo:participatedIn ?conflict .
  FILTER(?event a dbo:SocietalEvent)
  FILTER(?conflict a dbo:MilitaryConflict)

  # Find the commander in the force related to the native office holder of Kingdom of Ireland
  ?commander dbo:nativeOf ?nativePlace .
  ?officeHolder dbo:officeHolderOf dbr:Kingdom_of_Ireland ;
                dbo:nativeOf ?nativePlace .

  # Link the commander to the military unit or force
  ?commander dbo:commandedBy ?force .
}",8,14,9,3,3,3,3,71,0,0,15,0,0.0,0
281,56,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in Colony of New Zealand and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryUnit ?war ?person WHERE {
  # Find military units in the New Zealand Army
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army .

  # Find wars associated with these military units
  ?militaryUnit dbo:participatesIn ?war .

  # Find individuals who are office holders and politicians
  ?person dbo:officeHolderOf ?office ;
          a dbo:Politician .

  # Ensure the person is connected to the Colony of New Zealand
  ?person dbo:placeOfBirth dbr:Colony_of_New_Zealand .

  # Check if the person was awarded Knight Grand Cross of the Order of the Bath
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Link the military unit and war to the person
  ?militaryUnit dbo:commandedBy ?person .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,24,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  VALUES ?ernestAugustusDuke { dbr:Ernest_Augustus,_Duke_of_Brunswick }

  # Step 2: Find his children who are royalty
  ?child dbo:spouse|dbo:partnerOf ?ernestAugustusDuke .
  ?child a dbo:Monarch .

  # Step 3: Determine the parent of that child
  ?parent dbo:child ?child .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
492,62,test,"Give me the person decedent at Algiers and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/property/author> ?v4 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Person decedent at Algiers
  ?person dbo:deathPlace dbr:Algiers .
  
  # Person associated with the work ""French Algeria""
  OPTIONAL { 
    ?work dbo:author ?author .
    ?author dbo:nationality dbr:Francois_Mauriac ; # Assuming Mauriac as an example author
           dbo:wikiPageRedirects ?redirect .
    ?redirect rdfs:label ""French Algeria""@en .
    ?person dbo:deathPlace ?work .
  }
  
  # Commander in a war (military conflict and event)
  OPTIONAL {
    ?war dbo:type dbr:Military_conflict ;
         dbo:event ?event .
    ?commander dbo:commanded ?army .
    ?army dbo:participatedIn ?war .
    ?person rdfs:label ?commander .
  }
  
  # Commander in Battle of Verdun
  OPTIONAL {
    ?battle dbr:Battle_of_Verdun ;
           dbo:commander ?commander .
    ?person rdfs:label ?commander .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
391,67,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:genre/dbo:subClassOf* dbo:TelevisionProgram .
  
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California ;
         dbo:profession dbr:Actor .

  ?actor dbo:film ?movie .

  ?claimToFame a dbo:Film ;
               dbo:actor ?actor .

  ?spouse dbp:spouse dbr:Sherry_Hormann .
  
  ?claimToFame dbo:actor ?spouse .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
547,51,test,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Part 1: Resting place of the actor of ""Enemy at the Door""
  OPTIONAL {
    ?movie dbo:title ""Enemy at the Door""@en .
    ?movie dbo:starring ?actor .
    ?actor dbp:placeOfBurialOrRemains ?actorRestingPlace .
  }

  # Part 2: Resting place of the awardee of an award named after Gerald Graham
  OPTIONAL {
    ?award dbo:name ?awardName .
    FILTER(CONTAINS(LCASE(?awardName), ""gerald graham"")) .
    ?recipient dbp:honoredWith ?award .
    ?recipient dbp:placeOfBurialOrRemains ?awardeeRestingPlace .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
820,20,test,Give me the child of the parent of the professional in Actor and professional in the award of the author of Understanding Comics.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v4 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childEntity
WHERE {
  dbr:Understanding_Comics dbo:author dbr:Scott_McCloud .

  dbr:Scott_McCloud dbo:awardReceived ?award .

  ?award dbo:professionalInActor ?professional .

  ?professional dbo:parentOrganization ?parentEntity .

  ?parentEntity dbo:child ?childEntity .
}
```",6,6,7,3,2,3,2,20,0,0,128,0,0.0,0
701,54,test,Give me the parent of the child of the child of Seti I and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v5 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Seti I's child
  ?childSetiI dbo:spouse ?setiISpouse .
  
  # Child of Seti I (grandchild of Seti I)
  ?grandchildSetiI dbo:parent ?childSetiI .

  # Parent of the grandchild of Seti I (which is a child of Seti I)
  ?parentOfGrandchildSetiI dbo:spouse ?setiISpouse .
  
  # Ramesses II's spouse
  dbpedia:Ramesses_II dbo:spouse ?ramessesSpouse .

  # Nefertari's children and their parent
  dbpedia:Nefertari dbo:children ?nefertariChild .
  ?nefertariChild dbo:parent ?parentOfNefertariChild .

  FILTER (?setiISpouse = ?ramessesSpouse)
  FILTER (?parentOfGrandchildSetiI = ?parentOfNefertariChild)

}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,63,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v6 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Resting place of the child of the child of William Haliburton
SELECT DISTINCT ?grandchildRestingPlace WHERE {
  VALUES ?williamHaliburton { dbr:William_Haliburton }
  
  ?parent dbo:spouse|dbo:childOf ?williamHaliburton .
  ?grandchild dbo:childOf ?parent .
  OPTIONAL { ?grandchild dbp:placeOfBurial ?grandchildRestingPlace . }
}

UNION

# Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT DISTINCT ?awardeeRestingPlace WHERE {
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?person dbp:placeOfBurial ?awardeeRestingPlace . }
}

UNION

# Resting place of the actor of ""Enemy at the Door""
SELECT DISTINCT ?actorRestingPlace WHERE {
  dbr:Enemy_at_the_Door dbo:starring ?actor .
  OPTIONAL { ?actor dbp:placeOfBurial ?actorRestingPlace . }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
659,60,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find a military conflict or event associated with Rutger Jan Schimmelpenninck
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:participant dbr:Rutger_Jan_Schimmelpenninck .

  # Find the commander in the force of the native (Kingdom of Ireland)
  ?commander dbo:nationality dbr:United_Kingdom_of_Ireland ;
             dbo:officeHolderOf dbr:Kingdom_of_Ireland ;
             dbo:positionTitle ?position .
  
  # Ensure the position is related to military leadership
  FILTER(CONTAINS(LCASE(?position), ""commander"") || CONTAINS(LCASE(?position), ""general""))
}
```

This query attempts to find a commander associated with the Kingdom of Ireland who might have been involved in a military conflict linked to Rutger Jan Schimmelpenninck. Note that due to historical and data limitations, this query may not return results directly related to Schimmelpenninck's involvement with Ireland.",6,10,7,3,2,3,3,71,0,0,40,0,0.0,0
783,19,test,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns and associated musical artist of the band member of Ofori Amponsah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist
WHERE {
  # Find band members of Ebony Reigns
  ?ebony a dbo:MusicalArtist ;
         foaf:name ""Ebony Reigns"" .
  
  ?ebony dbo:member ?bandMember .

  # Find associated musical artists of Ofori Amponsah
  ?ofori a dbo:MusicalArtist ;
         foaf:name ""Ofori Amponsah"" .
  
  ?ofori dbo:associatedMusicalArtist ?associatedArtist .

  # Ensure the band member is also an artist and musical artist
  ?bandMember a dbo:Artist, dbo:MusicalArtist .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
232,30,test,"Give me the child of Jon Pertwee and actor of Dog Soldiers (film) and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Jon Pertwee's child
  ?person dbo:parent dbr:Jon_Pertwee .
  
  # Actor of ""Dog Soldiers""
  ?actor dbo:film dbr:Dog_Soldiers_(2002_film) .

  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:nativePlace ?residence .
  FILTER (STRSTARTS(STR(?residence), ""http://dbpedia.org/resource/"") && 
          STRCONTAINS(LCASE(STR(?residence)), ""settlement"") &&
          STRCONTAINS(LCASE(STR(?residence)), ""british""))

  # Combine conditions
  ?person = ?actor .
  ?person dbo:nativePlace ?residence .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
492,44,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentInFrenchAlgeria ?personDecedentInAlgiers ?war
WHERE {
  # Frédéric-Georges Herr's involvement in wars as a commander
  dbr:Frédéric-Georges_Herr dbo:commanderOf ?war .
  
  # Person decedent at French Algeria
  ?personDecedentInFrenchAlgeria dbo:deathPlace dbr:French_Algeria ;
                                  rdf:type dbo:Person .

  # Person decedent at Algiers, the capital of Algeria
  ?personDecedentInAlgiers dbo:deathPlace dbr:Algiers ;
                           rdf:type dbo:Person .
  
  # Ensure distinct results for each category
}
```

This query does the following:
- Identifies wars where Frédéric-Georges Herr was a commander.
- Finds individuals who died in French Algeria and Algiers, ensuring they are categorized as persons.",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
767,59,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .

  # Writer of Dustin Lynch's album ""Where It's At""
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:lyricsBy ?writer .
  
  # Settlement in the administration related to the writer
  ?writer dbo:birthPlace ?settlement .
  FILTER (isLiteral(?settlement))
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,71,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/property/birthName> ?v8 . ?v7 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v4 <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Find an actor from ""Unnatural""
  ?actor dbo:profession dbr:Actor ;
         dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Find Ted McGinley and his spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley""@en ;
       dbo:spouse ?spouse .

  # Find an alumnus of Ohio State University
  ?alumnus a dbo:Person ;
           dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?name .

  # Check if the spouse is also an alumnus or has a professional link
  OPTIONAL { ?spouse dbo:almaMater dbr:Ohio_State_University . }
  
  # Find any overlap in profession
  OPTIONAL { ?professional dbo:profession ?commonProfession .
             FILTER(?actor = ?professional || ?spouse = ?professional || ?alumnus = ?professional)
           }

}
```",9,9,10,3,3,3,3,71,0,0,1,0,0.0,0
285,19,test,Give me the spouse of the professional in the award of Stan Lee and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v4 . ?v4 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Stan Lee's award
  dbr:Stan_Lee dbo:award dbr:Some_Award .
  
  # Professional associated with the award
  ?professional dbo:award dbr:Some_Award .

  # Tina Onassis Niarchos' child
  dbr:Tina_Onassis_Niarchos dbo:child ?child .

  # Parent of Tina Onassis Niarchos' child
  ?parent dbo:child ?child .
  
  # Spouse of the professional
  ?professional dbo:spouse ?spouse .
}
```

Note: Replace `dbr:Some_Award` with the actual award resource linked to Stan Lee. This query assumes that DBpedia has structured data for these relationships.",5,5,6,3,2,3,2,20,0,0,2,0,0.0,0
391,64,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?person dbo:nickName ""Jackson, Tennessee""@en .
  ?person dbo:film ""The Departed""@en .
  ?person dbo:birthPlace ?place .
  ?movie dbo:title ""Apocalypse Now""@en ;
         dbo:workExample ?televisionShow .
  
  FILTER(?person = dbr:Martin_Sheen)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
528,45,test,Give me the war of Orozimbo Barbosa and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOrozimbo ?warIrene ?birthNameNarciso
WHERE {
  # Wars involving Orozimbo Barbosa
  OPTIONAL { 
    dbr:Orozimbo_Barbosa dbo:participatedIn ?warOrozimbo .
  }
  
  # Wars involving Irene Morales
  OPTIONAL { 
    dbr:Irene_Morales dbo:participatedIn ?warIrene .
  }

  # Birth name of Narciso Campero
  OPTIONAL {
    dbr:Narciso_Campero dbo:birthName ?birthNameNarciso .
  }
}
```",5,5,6,3,3,3,3,71,0,1,2,0.0,0.0,0
251,25,test,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warLocation ?partyLocation ?deathPlace
WHERE {
  # Find military conflicts involving Louis François Félix Musnier
  ?musnier a dbo:MilitaryPerson ;
           foaf:name ""Louis François Félix Musnier"" .
  
  OPTIONAL {
    ?conflict dbo:participant ?musnier ;
              dbo:location ?warLocation .
    FILTER (CONTAINS(LCASE(STR(?warLocation)), ""sicily""))
  }
  
  # Find political parties or organizations associated with him
  OPTIONAL {
    ?party a dbo:PoliticalParty, dbo:Organization ;
           dbo:member ?musnier .
    ?partyLocation dbo:location ?party .
    FILTER (CONTAINS(LCASE(STR(?partyLocation)), ""sicily""))
  }
  
  # Find death place of Laura Mancinelli
  ?mancinelli a dbo:Person ;
              foaf:name ""Laura Mancinelli"" ;
              dbo:deathPlace ?deathPlace .
}",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
281,49,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?militaryUnit ?war ?person WHERE {
  # Find military units in the New Zealand Army
  ?militaryUnit a dbo:MilitaryUnit ;
                dbo:militaryBranch dbr:New_Zealand_Army .

  # Find wars associated with these military units
  ?militaryUnit dbo:participatedInWar ?war .

  # Find individuals who are office holders and politicians
  ?person dbo:officeHolderOf ?office ;
          a dbo:Politician .

  # Ensure the person is also a Knight Grand Cross of the Order of the Bath
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .

  # Link the military unit to the person (assuming such a relationship exists)
  ?militaryUnit dbo:commandedBy ?person .
}
```",5,8,6,3,2,3,3,71,0,0,9,0,0.0,0
9,62,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Step 1: Identify QUB (Queen's University Belfast)
  VALUES (?qub) { dbr:Queen's_University_Belfast }
  
  # Step 2: Find the mayor of Belfast
  ?mayor dbo:officeLocation dbr:Belfast .
  ?mayor dbo:title ""Mayor""@en .

  # Step 3: Get the alma mater of the mayor
  ?mayor dbo:almaMater ?almaMater1 .

  # Step 4: Identify Royal Medals award
  VALUES (?royalMedals) { dbr:Royal_Medals }

  # Step 5: Find awardee of Royal Medals and their alma mater
  ?awardee dbo:awardReceived ?royalMedals .
  ?awardee dbo:almaMater ?almaMater2 .

  # Ensure the alma maters are from QUB
  FILTER (?almaMater1 = dbr:Queen's_University_Belfast || ?almaMater2 = dbr:Queen's_University_Belfast)
  
  # Return the alma mater if it matches QUB
  BIND(IF(?almaMater1 = dbr:Queen's_University_Belfast, ?almaMater1, IF(?almaMater2 = dbr:Queen's_University_Belfast, ?almaMater2, NULL)) AS ?almaMater)
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
994,51,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Step 1: Find Don Dokken's persona
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Don Dokken"" .

  # Step 2: Identify band members of Don Dokken who are musical artists
  ?bandMember dbo:memberOf ?band ;
              a dbo:MusicalArtist ;
              dbo:associatedBand ?dokken .

  # Step 3: Find associated musical artist of the band member
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .

  # Step 4: Ensure the band is Meshuggah and is an organization
  ?band a dbo:Band, dbo:Group, dbo:Organization ;
        foaf:name ""Meshuggah"" .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
528,56,test,Give me the war of Orozimbo Barbosa and war of the military force of Battle of Pisagua and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?battle ?person WHERE {
  # Orozimbo Barbosa and his involvement in a war
  ?barbosa dbo:birthName ""Orozimbo Barbosa""@en .
  ?barbosa dbo:nationality dbr:Peru .
  ?barbosa dbo:occupation dbr:Military_person .

  # War involving Orozimbo Barbosa
  ?war dbo:participant ?barbosa .
  
  # Battle of Pisagua and its military force
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of Pisagua""@en ;
          dbo:participatingMilitaryUnit ?militaryForce .

  # Narciso Campero's birth name and involvement in a war
  ?campero dbo:birthName ""Narciso Campero""@en .
  ?campero dbo:nationality dbr:Bolivia .
  ?campero dbo:occupation dbr:Military_person .

  # War involving Narciso Campero
  ?war2 dbo:participant ?campero .

  # Linking the wars if they are the same or related
  FILTER(?war = ?war2)
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
55,24,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?band ?group
WHERE {
  # Find members of the San Francisco Symphony
  ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony .

  # Ensure they are part of a band and a group
  ?symphonyMember dbo:memberOf ?band .
  ?band rdf:type dbp:Bands_and_Musical_Groups .

  # Find a connection to Jason Newsted through another band
  ?intermediateBandMember dbo:memberOf ?band ;
                         dbo:memberOf ?newstedRelatedBand .
  ?newstedRelatedBand dbo:member dbr:Jason_Newsted .

  # Ensure the intermediate member is also part of a group
  ?intermediateBandMember rdf:type dbp:Bands_and_Musical_Groups .

  # Link back to the original band member
  ?symphonyMember = ?intermediateBandMember .
}
```",4,7,5,2,2,2,3,28,0,0,3,0,0.0,0
16,70,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?professional WHERE {
  # Find an actor of the TV series ""Unnatural""
  ?actor dbo:profession dbr:Actor ;
         dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Ted McGinley
  ?ted foaf:name ""Ted Martin McGinley""@en ;
       dbo:spouse ?spouse .

  # Alumnus of Ohio State University with a birth name
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?birthName .
  
  # Find the spouse common to both Ted McGinley and the alumnus
  ?spouse = ?tedSpouse .
  ?spouse = ?alumnusSpouse .

  # Get the profession of this spouse
  ?spouse dbo:profession ?professional .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
404,68,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Step 1: Identify Princess Victoria Louise of Prussia's birth name
    dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .

    # Step 2: Find Ernest Augustus, Duke of Brunswick's father
    dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?fatherOfErnestAugustus .

    # Step 3: Identify the child of Ernest Augustus's father who is royalty
    ?child dbo:parent ?fatherOfErnestAugustus .
    ?child a dbo:Monarch .

    # Step 4: Determine the parent of Prince George William of Hanover who is royalty
    dbr:Prince_George_William_of_Hanover dbo:parent ?parentOfGeorgeWilliam .
    ?parentOfGeorgeWilliam a dbo:Monarch .

    # Step 5: Find the spouse of the person born as Princess Victoria Louise of Prussia
    ?person dbo:birthName ?birthName .
    ?person dbo:spouse ?spouse .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,62,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v3 <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?childOfChild ?successorAntiochusII ?spouse
WHERE {
  # Nysa's parent
  dbr:Nysa (dbo:father|dbo:mother) ?parent .

  # Child of Nysa's child who is royalty
  ?nysaChild dbo:child ?childOfChild .
  ?parent dbo:child ?nysaChild .
  ?childOfChild a dbo:Monarch .

  # Successor of Antiochus II Theos who is royalty
  dbr:Antiochus_II_Theos dbo:successor ?successorAntiochusII .
  ?successorAntiochusII a dbo:Monarch .

  # Child of the successor of Antiochus (son of Antiochus III the Great)
  dbr:Antiochus_IV_Epiphanes dbo:father dbr:Antiochus_III_the_Great .
  ?successorAntiochusIV dbo:successor ?childOfSuccessor .
  ?childOfSuccessor a dbo:Monarch .

  # Spouse of the child of the successor
  ?spouse dbo:spouse ?childOfSuccessor .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
659,18,test,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?commanderLeipzig ?commanderGermanCampaign1813 WHERE {
  # Military force involved in Napoleonic Wars
  ?event dbo:wikiPageRedirects db:Napoleonic_Wars .
  ?event dbo:militaryConflictOf ?militaryForce .

  # Commander at the Battle of Leipzig
  ?battle dbr:Battle_of_Leipzig ;
         dbo:commander ?commanderLeipzig .

  # Commander in German campaign of 1813
  ?campaign dbr:German_campaign_of_1813 ;
            dbo:commander ?commanderGermanCampaign1813 .
}
```",3,3,4,1,3,3,3,71,0,0,5,0,0.0,0
391,69,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/nickname> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Michael Ballhaus' claim to fame (a work)
  VALUES (?ballhausWork) { 
    dbr:Goodfellas 
    dbr:The_Godfather_Part_II
  }
  
  # Al Green, associated with Jackson, Tennessee
  ?alGreen dbo:nativePlace dbr:Jackson,_Tennessee .
  ?alGreen rdfs:label ""Al Green""@en .

  # Find a common actor in both a movie and TV show
  ?movie dbo:starring ?actor .
  ?tvShow dbo:starring ?actor .
  
  FILTER(?movie IN (?ballhausWork))
  FILTER EXISTS { ?tvShow dbo:title ?title . }
  
  # Ensure the actor is associated with Al Green's work
  ?alGreenWork dbo:performer ?actor .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
959,60,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName ?teamManagerName ?universityName WHERE {
  # Step 1: Find the sports manager of the 1998 Kashima Antlers season
  ?kashimaAntlers dbr:Kashima_Antlers_season_1998 dbo:manager ?sportsManager .
  
  # Step 2: Determine the team managed by this person
  ?sportsManager dbp:teamManaged ?team .
  ?team dbo:manager ?teamManager .

  # Get names of the sports manager and team manager
  ?sportsManager rdfs:label ?managerName .
  ?teamManager rdfs:label ?teamManagerName .

  # Step 3: Find the alma mater (university) that is Japanese and an organization/educational institution
  ?person dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:almaMater ?university .
  
  # Ensure the university is Japanese and an educational institution
  ?university a dbo:EducationalInstitution, dbo:Organization ;
              dbp:country dbr:Japan .

  # Get the name of the university
  ?university rdfs:label ?universityName .

  # Filter to ensure unique results
  FILTER (lang(?managerName) = ""en"")
  FILTER (lang(?teamManagerName) = ""en"")
  FILTER (lang(?universityName) = ""en"")
}
```",6,11,7,3,2,3,3,71,0,0,3,0,0.0,0
281,38,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?militaryUnit
WHERE {
  # Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?country .

  # Heather Roy's profession related to a military unit
  dbr:Heather_Roy dbo:profession ?profession .
  ?profession rdf:type dbo:MilitaryUnit ;
              rdfs:label ?militaryUnit .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
404,46,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find children of Ernest Augustus who are royalty
  ?child dbo:spouse ?spouse .
  ?child dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .
  
  # Ensure the child is a royalty
  ?child rdf:type dbo:Monarch .

  # Step 2: Find spouse of Princess Victoria Louise of Prussia and their birth name
  ?spouse dbo:birthName ?birthName .
  ?spouse dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .

  # Step 3: Find the parent of this child
  ?child dbo:parent ?parent .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,45,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of Japan and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerOfManager WHERE {
  # Find the sports manager of the 1998 Kashima Antlers
  ?sportsManager a dbo:SportsManager ;
                 dbo:managedTeam dbr:Kashima_Antlers_1998_season ;
                 dbp:nationality dbr:Japan ;
                 dbo:almaMater dbr:University_of_Tsukuba .

  # Find the team managed by this sports manager
  ?sportsManager dbo:managedTeam ?team .

  # Find who manages that team
  ?managerOfManager a dbo:SportsManager ;
                    dbo:managedTeam ?team .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
378,40,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?claimToFame WHERE {
  VALUES (?person ?name) {
    (dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"")
    (dbr:Joaquín_Blake ""Joaquín Blake"")
    (dbr:C_P_Gahn ""Carl Pontus Gahn"")
  }
  
  ?person rdfs:label ?name ;
          dbo:notableFor ?claimToFame .
}
ORDER BY ?name
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
701,62,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfGrandchild WHERE {
  # Step 1: Find Amun-her-khepeshef's spouse who is also Ramesses II's spouse
  ?amunHerKhepeshef dbo:spouse ?commonSpouse .
  ?ramessesII dbp:spouse ?commonSpouse .

  # Step 2: Identify the child of this common spouse
  ?commonSpouse dbo:child ?childOfCommonSpouse .

  # Step 3: Find the parent of this child (should be Ramesses II or Amun-her-khepeshef)
  ?parentOfChild dbo:child ?childOfCommonSpouse .
  
  # Step 4: Identify Seti I
  ?setiI a dbo:Person ;
         dbp:name ""Seti I""@en .

  # Step 5: Find Seti I's child and then the grandchild
  ?setiI dbo:child ?setiIClone .
  ?setiIClone dbo:child ?grandChildOfSetiI .

  # Step 6: Identify the parent of this grandchild (should be Seti I's child)
  ?parentOfGrandchild dbo:child ?grandChildOfSetiI .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
801,67,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://dbpedia.org/property/writer> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?song ?producer ?rapperArtist WHERE {
  # Identify the album
  VALUES ?album { dbr:What_U_See_Is_What_U_Get }

  # Find songs in the album
  ?song dbo:album ?album .

  # Get producers of the song
  OPTIONAL {
    ?song dbo:producer ?producer .
    FILTER EXISTS { ?producer a dbo:MusicalArtist }
  }

  # Get rappers associated with the song
  OPTIONAL {
    ?rapperArtist dbo:associatedMusicalArtist ?song .
    FILTER EXISTS { ?rapperArtist a dbo:MusicalArtist . 
                   ?rapperArtist dbo:genre dbr:Rap_music }
  }
}
```

This query does the following:
- It identifies songs from the album ""What U See Is What U Get.""
- For each song, it attempts to find producers who are musical artists.
- It also looks for rappers associated with these songs.",7,15,8,3,3,3,3,71,0,0,8,0,0.0,0
747,47,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on the birth date of Pavlo Khudzik.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v4 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Find the writer of a song by Amba Shepherd
  ?song dbo:lyricsBy ?writer .
  ?song rdf:type dbo:Songs .
  ?song dbo:composer dbr:Amba_Shepherd .

  # Find Pavlo Khudzik's birth date
  dbr:Pavlo_Khudzik dbp:birthday ?birthDate .

  # Find a person born on the same date as Pavlo Khudzik
  ?person dbp:birthday ?sameBirthDate .
  FILTER (?sameBirthDate = ?birthDate)

  # Check if this person is the writer found earlier
  ?person owl:sameAs ?writer .

  # Get the band associated with this writer
  ?band dbo:leadArtist ?person .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
77,20,test,"Give me the war of the awardee of the award of Maxim Grigorievich Vlasov and force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://dbpedia.org/property/leader> ?v5 . ?result <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?award ?mayorForce WHERE {
  # Find awards received by Maxim Grigorievich Vlasov
  ?person rdfs:label ""Maxim Grigorievich Vlasov""@en .
  ?person dbo:awardsReceived ?award .

  # Get the war associated with the award
  ?award dbo:relatedEvent ?war .

  # Find Warsaw's mayor and their associated organization or force
  ?mayor rdfs:label ""Mayor of Warsaw""@en .
  ?mayor dbo:memberOf ?organization .
  
  # Ensure the organization is an administrative entity
  ?organization a dbo:AdministrativeRegion ;
                dbo:administrativeCapital dbr:Warsaw .

  # Bind the mayor's force or organization to a variable
  BIND(?organization AS ?mayorForce)
}
```",6,7,7,3,2,3,2,20,0,0,26,0,0.0,0
994,46,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?meshuggahMember ?associatedBand ?watchtowerArtist ?watchtowerAssociatedArtist ?finalArtist
WHERE {
  # Step 1: Find a Meshuggah band member who is also associated with another band or group
  ?meshuggahMember dbo:memberOf dbr:Meshuggah .
  ?meshuggahMember dbo:memberOf ?associatedBand .

  # Step 2: Find the associated musical artist(s) of that band member
  OPTIONAL { ?meshuggahMember dbo:associatedMusicalArtist ?artist1 . }

  # Step 3: Identify an associated musical artist of Watchtower
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerArtist .

  # Step 4: Find the associated musical artist(s) of the artist identified in step 3
  OPTIONAL { ?watchtowerArtist dbo:associatedMusicalArtist ?watchtowerAssociatedArtist . }
  OPTIONAL { ?watchtowerAssociatedArtist dbo:associatedMusicalArtist ?finalArtist . }

}
```",5,8,6,3,2,3,3,71,0,0,5,0,0.0,0
492,45,test,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?decedent
WHERE {
  # Find commanders in the Franco-Hova Wars
  ?war dbo:partOfEvent dbr:Franco-Hova_Wars .
  ?commander dbo:commanderOf ?war .

  # Find decedents at the capital of Khemis Miliana District
  ?decedent dbo:deathPlace dbr:Khemis_Miliana .
  
  # Ensure the decedent is also associated with French Algeria
  ?decedent dbo:nationality dbr:French_Algeria .

  # Link commander and decedent if they are the same person
  FILTER (?commander = ?decedent)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,61,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v3 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?individual WHERE {
  # Step 1: Archduke Ladislaus Philipp of Austria's parent
  ?ladislausParent a dbo:Person ;
                  dbo:child ?ladislaus .

  # Step 2: Child of this parent (Ladislaus' sibling or another child)
  ?siblingOrChild a dbo:Person ;
                 dbo:parent ?ladislausParent .

  # Step 3: Ensure the individual is royalty
  ?siblingOrChild dbp:title ?royaltyTitle .
  
  # Step 4: Find their child
  ?childOfSiblingOrChild a dbo:Person ;
                        dbo:parent ?siblingOrChild .

  # Step 5: Archduchess Margaret of Austria's parent
  ?margaretParent a dbo:Person ;
                  dbo:child ?margaret .
  
  FILTER(?margaret = dbpedia:Margaret_of_Austria_(1925))

  # Step 6: Child of this parent (Margaret's sibling or another child)
  ?siblingOrChild2 a dbo:Person ;
                   dbo:parent ?margaretParent .

  # Step 7: Find their parent
  ?grandparentOfSiblingOrChild2 a dbo:Person ;
                               dbo:child ?siblingOrChild2 .

  # Final step: Match the individual from both family trees
  FILTER(?childOfSiblingOrChild = ?grandparentOfSiblingOrChild2)
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,49,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Step 1: Find an alumnus of Ohio State University
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
          foaf:name ?birthName .

  # Step 2: Identify the spouse of Ted Martin McGinley
  dbr:Ted_Martin_McGinley dbo:spouse ?spouse .

  # Step 3: Match the birth name with the person identified in step 2
  ?spouse foaf:name ?birthName .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,65,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Gigi Rice's birth name
  ?gigi a dbo:Person ;
        foaf:name ""Gigi Rice"" ;
        dbp:birthday ?birthDate .
  
  OPTIONAL { ?gigi dbp:birthName ?birthName . }
  
  # Ted Martin McGinley and his spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley"" ;
       dbp:spouse ?spouse .

  # Actor of ""Unnatural"" (TV series)
  ?unnaturalActor a dbo:Person ;
                  dbo:profession ?actorProfession ;
                  dbo:work ?work .
  
  ?work rdfs:label ""Unnatural""@en .

  # Find the person who matches all criteria
  ?person dbp:birthday ?birthDate ;
          dbp:spouse ?ted ;
          dbo:profession ?actorProfession ;
          dbp:birthName ?birthName .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
16,60,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Step 1: Find an alumnus of Ohio State University
  ?alumnus dbo:almaMater dbr_Ohio_State_University ;
          foaf:name ?alumnusBirthName .

  # Step 2: Find a person whose spouse's birth name matches the alumnus's birth name
  ?spouse foaf:name ?spouseBirthName .
  ?person dbo:spouse ?spouse .
  
  FILTER (?spouseBirthName = ?alumnusBirthName)

  # Step 3: Find Ted McGinley's birth name
  dbr_Ted_McGinley foaf:name ?tedMcGinleyBirthName .

  # Step 4: Match the spouse to someone born with the same name as Ted McGinley
  FILTER (?spouseBirthName = ?tedMcGinleyBirthName)

}
```

This query assumes that DBpedia has structured data for these relationships and names. Adjustments might be necessary based on actual data availability and structure in DBpedia.",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
547,60,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?grandchildRestingPlace WHERE {
  # Find the award associated with Gerald Graham and its awardees
  ?award dbo:recipient ?awardee .
  ?award dbo:name ""Gerald Graham"" .

  # Get the resting place of the awardee
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeDeathPlace . }
  OPTIONAL { ?awardeeDeathPlace dbo:location ?awardeeRestingPlace . }

  # Find William Haliburton and his grandchild
  ?williamHaliburton dbr:William_Haliburton .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .

  # Get the resting place of the grandchild
  OPTIONAL { ?grandchild dbo:deathPlace ?grandchildDeathPlace . }
  OPTIONAL { ?grandchildDeathPlace dbo:location ?grandchildRestingPlace . }
}
```",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
659,49,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?event1 ?event2 ?referenceToSchimmelpenninck
WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commanderOf ?militaryForce .
  
  # Find events associated with him
  OPTIONAL { ?event1 dbo:relatedTo dbr:Arthur_Wellesley_1st_Duke_of_Wellington . }
  OPTIONAL { ?event2 dbo:relatedTo dbr:Arthur_Wellesley_1st_Duke_of_Wellington . }

  # Check for reference to Rutger Jan Schimmelpenninck
  OPTIONAL {
    ?referenceToSchimmelpenninck dbo:mentionedIn ?event .
    ?event dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck .
  }
  
  FILTER(?commander = dbr:Arthur_Wellesley_1st_Duke_of_Wellington)
}
```",5,8,6,3,2,3,3,71,0,0,38,0,0.0,0
547,67,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?restingPlaceJamesBurton ?restingPlaceAwardeeGeraldGraham ?restingPlaceActorEmilyRichardShow
WHERE {
  # Resting place of James Burton (Egyptologist)
  OPTIONAL {
    dbr:James_Burton_(egyptologist) dbo:deathPlace ?placeOfDeathJamesBurton .
    ?placeOfDeathJamesBurton dbp:burialPlace ?restingPlaceJamesBurton .
  }

  # Resting place of the awardee of the award of Gerald Graham
  OPTIONAL {
    dbr:Gerald_Graham dbo:award ?award .
    ?award dbo:recipient ?awardee .
    ?awardee dbp:deathPlace ?placeOfDeathAwardee .
    ?placeOfDeathAwardee dbp:burialPlace ?restingPlaceAwardeeGeraldGraham .
  }

  # Resting place of the actor of the show with Emily Richard
  OPTIONAL {
    ?show dbo:starring dbr:Emily_Richard .
    ?show dbo:starring ?actor .
    ?actor dbp:deathPlace ?placeOfDeathActor .
    ?placeOfDeathActor dbp:burialPlace ?restingPlaceActorEmilyRichardShow .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
994,62,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtowerArtist dbo:musicalArtist dbr:Watchtower .
  
  # Step 2: Find a band member of Don Dokken who is also an associated musical artist of the result from step 1
  ?donDokkenBandMember dbo:bandMemberOf dbr:Don_Dokken ;
                      dbo:musicalArtist ?watchtowerArtist .

  # Step 3: Find the band Fredrik Thordendal is part of, which is both a band and an organization
  ?thordendalBand dbo:bandMember dbr:Fredrik_Thordendal ;
                  rdf:type dbo:MusicalGroup ;
                  rdf:type dbo:Organization .

  # Step 4: Find another band that is also an organization
  ?finalBand dbo:bandMember ?donDokkenBandMember ;
             rdf:type dbo:MusicalGroup ;
             rdf:type dbo:Organization .
  
  # Get the associated musical artist of the final band
  ?finalArtist dbo:musicalArtist ?finalBand .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,71,test,"Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . ?v8 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v7 . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/property/office> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  ?person dbo:honoraryTitle ?award .
  FILTER(CONTAINS(LCASE(STR(?award)), ""volcano"") && CONTAINS(LCASE(STR(?award)), ""ryukyu islands""))
  
  ?office dbo:leader ?commander .
  ?office a dbo:GovernmentAgency .

  ?gustavJonson dbp:leader ?commander ;
                a dbo:OfficeHolder, dbo:Politician .
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
391,66,test,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of Michael Ballhaus and native of the figure known as Hub City.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:Work ;
         a dbo:TelevisionShow .
  
  ?movie dbo:starring ?actor .

  ?actor dbo:claimToFame dbr:Michael_Ballhaus .

  ?actor dbo:nativePlace dbr:Hub_City .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
801,69,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of the true self of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find songs by 50 Cent from the album ""What U See Is What U Get""
  ?song a dbo:SongsByArtist ;
        dbo:artist dbr:50_Cent ;
        dbo:album dbr:What_U_See_Is_What_U_Get .

  # Ensure the song is also considered a musical work
  ?song a dbo:MusicalWork .

  # Find the producer of the song
  ?song dbo:producer ?producer .

  # The producer should be associated with ""The Shadow""
  ?producer foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""the shadow""))

  # Ensure the producer is a musical artist
  ?producer a dbo:MusicalArtist .
}
```",8,15,9,3,3,3,3,71,0,0,1,0,0.0,0
488,21,test,Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emperorName ?reignStart ?reignEnd ?commanderName ?birthPlace
WHERE {
  # Emperor Go-Yōzei's reign period
  dbr:Emperor_Go-Yōzei dbo:name ?emperorName .
  OPTIONAL { dbr:Emperor_Go-Yōzei dbo:begin ?reignStart . }
  OPTIONAL { dbr:Emperor_Go-Yōzei dbo:end ?reignEnd . }

  # A notable commander in the Boshin War
  {
    SELECT DISTINCT ?commanderName ?birthPlace WHERE {
      ?commander dbo:occupation dbr:Boshin_War_commander .
      ?commander dbo:name ?commanderName .
      OPTIONAL { ?commander dbo:birthPlace ?birthPlace . }
    } LIMIT 1
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
429,9,test,"Give me the country of the military force, that is an organisation, of Camden Expedition and administration of the father of Martha Johnson Patterson.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/country> ?result . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country1 ?country2 WHERE {
  # Part 1: Camden Expedition military force
  ?expedition dbo:militaryForce ?militaryOrganization .
  FILTER (str(?expedition) = ""Camden_Expedition"")
  
  ?militaryOrganization dbo:country ?country1 .

  # Part 2: Father of Martha Johnson Patterson
  dbr:Marta_Johnson_Patterson dbo:father ?father .
  
  ?father dbo:officeHeld ?administration .
  ?administration dbo:country ?country2 .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
427,53,test,"Give me the reference to the name of the party of Michele Pinto and party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyName WHERE {
  VALUES ?person { 
    dbr:Michele_Pinto_(politician) 
    dbr:Giulio_Andreotti 
    dbr:Romano_Prodi
  }
  
  OPTIONAL {
    ?person dbo:politicalParty ?party .
    ?party rdfs:label ?partyName .
    FILTER (lang(?partyName) = 'en')
  }
}
ORDER BY ?person",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
285,17,test,Give me the spouse of the professional in the award of Stan Lee and parent of Alexander Onassis.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Stan Lee and his award connection (assuming a direct link for simplicity)
  ?stanLee dbr:Stan_Lee .
  
  # Aristotle Onassis as the parent of Alexander Onassis
  ?aristotleOnassis dbo:child dbr:Alexander_Onassis ;
                   dbo:spouse ?spouse .

  # Ensure Stan Lee is connected to Aristotle Onassis through an award context
  OPTIONAL { 
    ?award dbo:recipient ?stanLee .
    ?award dbo:recipient ?aristotleOnassis .
  }
}
```",4,4,5,3,2,3,2,20,0,0,2,0,0.0,0
232,67,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Jon Pertwee's parent
  dbr:Jon_Pertwee dbo:childOf ?parent .
  
  # Parent is a politician and office holder from France
  ?parent dbo:nationality dbr:France ;
          rdf:type dbo:Politician ;
          dbo:officeHolder true .

  # Parent's native place is a British settlement
  ?parent dbo:nativePlace ?settlement .
  ?settlement dbo:country dbr:United_Kingdom ;
              rdf:type dbo:Settlement .

  # Claim to fame includes a film and a military conflict
  ?claimToFame dbo:associatedWith ?film, ?militaryConflict .
  ?film rdf:type dbo:Film .
  ?militaryConflict rdf:type dbo:MilitaryConflict .

  # Actor associated with the claim to fame
  ?actor dbo:profession dbr:Actor ;
         dbo:narrator true ;
         dbo:producer true ;
         dbo:claimToFame ?claimToFame .
}",7,13,8,3,3,3,3,71,0,0,1,0,0.0,0
281,67,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInBirthPlace
WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?leader dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .
  
  # Step 2: Determine the birthplace of this leader and ensure it is a country
  ?leader dbp:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Step 3: Find the military unit associated with Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:militaryUnit ?militaryUnit .
  
  # Step 4: Identify the professional in the New Zealand Army related to this military unit
  ?professional dbo:profession ?militaryUnit ;
                dbo:officeHolderOf dbr:New_Zealand_Army .

  # Final step: Get the entity in the birthplace that is a country
  ?birthPlace dbo:country ?entityInBirthPlace .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
487,16,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of Patricia McCoy.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/governor> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?country 
WHERE {
  # Find Philip Brian Scott who is a soccer player
  ?person dbo:name ""Philip Brian Scott""@en .
  ?person dbo:occupation dbr:Soccer_player .

  # Get the administration (club/team) of Philip Brian Scott
  ?person dbo:team ?administration .

  # Find Patricia McCoy and her country of administration
  ?patricia dbo:name ""Patricia McCoy""@en .
  ?patricia dbo:country ?country .
}
```",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
232,50,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # Residence is a settlement and British
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Actor associated with a film and military conflict
  ?actor dbo:profession dbr:Actor ;
         dbo:film ?film ;
         dbo:militaryConflict ?conflict .
  
  # Professional in Actor, narrator, and producer
  ?professional dbo:profession dbr:Actor ;
                dbo:profession dbr:Narrator ;
                dbo:profession dbr:Producer .

  # Linking the actor to the professional
  ?actor rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""actor"") && CONTAINS(LCASE(?name), ""narrator"") && CONTAINS(LCASE(?name), ""producer""))

  # Native of the residence
  ?residence dbo:nativeCitizen ?native .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
281,71,test,"Give me the war of the awardee of the award of Jonathon Band and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v8 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/occupation> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war1 ?country ?war2 WHERE {
  # Jonathon Band's award and related war
  ?jonathonBand a dbo:Person ;
                foaf:name ""Jonathon Band"" .
  ?award dbo:recipient ?jonathonBand ;
         dbo:relatedWorkOrEvent ?workOrEvent .
  ?workOrEvent dbo:subject ?war1 .

  # Leader of the 1962 New South Wales State Election
  ?election a dbo:Election ;
            dbo:electedOffice dbr:Premier_of_New_South_Wales ;
            dbo:date ""1962""^^xsd:gYear .
  ?leader dbo:officeHolder ?election ;
          dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:countryName ?country .

  # New Zealand Army professional
  ?politician a dbo:Politician, dbo:OfficeHolder ;
              foaf:name ?name .
  ?profession dbo:employee ?politician ;
              dbo:employer dbr:New_Zealand_Army .
  ?profession dbo:relatedWorkOrEvent ?war2 .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
30,9,test,Give me the professional in the profession of Édouard Alphonse James de Rothschild and native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  # Get the profession of Édouard Alphonse James de Rothschild
  dbr:Édouard_Alphonse_James_de_Rothschild dbo:profession ?profession .

  # Get the birthplace of Silvia Cohen
  dbr:Silvia_Cohen dbo:birthPlace ?birthPlace .

  # Find professionals with the same profession and native to the birthplace
  ?professional a dbo:Person ;
                dbo:profession ?profession ;
                dbo:nationality ?nationality .
  
  FILTER(?nationality = ?birthPlace)
}
```",4,4,5,2,2,2,2,9,0,0,1,0,0.0,0
528,58,test,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleCommander ?warIreneMorales ?forceIreneMorales ?narcisoBirthName ?narcisoForce
WHERE {
  # Commander in the Battle of La Rinconada de Ate
  OPTIONAL {
    ?battle dbo:participatedIn dbr:Battle_of_La_Rinconada_de_Ate .
    ?battle dbo:commander ?battleCommander .
  }

  # War involving Irene Morales and her force
  OPTIONAL {
    ?warIreneMorales dbo:participant dbr:Irene_Morales .
    ?forceIreneMorales dbo:participatedIn ?warIreneMorales .
  }

  # Narciso Campero's birth name and military involvement
  OPTIONAL {
    ?narciso dbr:Narciso_Campero ;
             foaf:name ?narcisoBirthName .
    ?narcisoForce dbo:commander ?narciso .
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
617,45,test,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?childOfAntiochus ?parentOfChildOfCommander
WHERE {
  # Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .
  
  # Seleucus IV Philopator is the child of Antiochus III the Great
  ?spouse dbo:child dbr:Antiochus_III_the_Great ;
          rdfs:label ?spouseLabel .

  # Find the commander in Battle of Panium and their child
  dbr:Ptolemy_V_Epiphanes dbo:commanderInBattle dbr:Battle_of_Panium .
  dbr:Ptolemy_V_Epiphanes dbo:child ?parentOfChildOfCommander .

  FILTER regex(?spouseLabel, ""Seleucus IV Philopator"", ""i"")
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,59,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?predecessorMilitaryForce ?decedentMilitaryForce
WHERE {
  # Find Indalecio Prieto's predecessor and their military force
  ?prieto dbr:Indalecio_Prieto .
  ?prieto dbo:successor ?predecessor .
  ?predecessor dbo:militaryForce ?predecessorMilitaryForce .
  
  FILTER EXISTS { 
    ?event dbo:type dbr:Societal_event .
    ?event dbo:relatedMilitaryConflict ?conflict1 .
    ?conflict1 dbo:involvedMilitaryForce ?predecessorMilitaryForce .
  }
  
  # Find a person who died during Francoist Spain and their military force
  ?decedent dbo:dateOfDeath ?deathDate .
  FILTER EXISTS { 
    ?spanishEvent dbo:type dbr:Francoist_Spain .
    ?spanishEvent dbo:relatedPerson ?decedent .
  }
  
  ?decedent dbo:militaryForce ?decedentMilitaryForce .
  
  FILTER EXISTS {
    ?event2 dbo:type ?eventType .
    ?event2 dbo:relatedMilitaryConflict ?conflict2 .
    ?conflict2 dbo:involvedMilitaryForce ?decedentMilitaryForce .
    
    # Ensure the event is a societal event, general event, and military conflict
    VALUES ?eventType { dbr:Societal_event dbr:Event dbr:Military_conflict }
  }
}
```",6,11,7,3,2,3,3,71,0,0,514,0,0.0,0
801,70,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v1 <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v7 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist WHERE {
  # Step 1: Identify the album ""What U See Is What U Get""
  ?album a dbo:MusicalAlbum ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Step 2: Find the producer of this album
  ?producer dbo:producedBy ?album .

  # Step 3: Determine the work (song) produced by this individual
  ?work a dbo:Songs ;
        dbo:producer ?producer ;
        dbo:artist ?producer .

  # Step 4: Identify the professional who is both a musical artist and has an alter ego named The Shadow
  ?professional a dbo:MusicalArtist ;
                rdfs:label ?alterEgoLabel .
  FILTER(CONTAINS(LCASE(?alterEgoLabel), ""the shadow""))

  # Step 5: Find the associated musical artist of the writer of that song
  ?writer dbo:wrote ?work .
  ?associatedArtist dbo:associatedMusicalArtist ?writer ;
                    a dbo:MusicalArtist .

}
```",8,16,9,3,3,3,3,71,0,0,8,0,0.0,0
981,20,test,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v5 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Identify Novala Takemoto as the author of Kamikaze Girls
  dbr:Novala_Takemoto dbo:authorOf dbr:Kamikaze_Girls .
  
  # Check if she is associated with being a beauty queen
  OPTIONAL { dbr:Novala_Takemoto dbo:occupation dbr:Beauty_queen . }
  
  # Get her birthplace
  dbr:Novala_Takemoto dbo:birthPlace ?birthPlace .
}
```

This query checks if Novala Takemoto is the author of ""Kamikaze Girls"" and optionally verifies any association with being a beauty queen. It then retrieves her birthplace.",6,7,7,3,2,3,2,20,0,0,19,0,0.0,0
666,16,test,"Give me the figure known as the nickname of England national beach soccer team and player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname ?managerName WHERE {
  # Get the nickname of the England national beach soccer team
  dbr:England_national_beach_soccer_team dbo:nickname ?nickname .

  # Find the manager of Hull City A.F.C. during the 2016–17 season
  OPTIONAL {
    ?hullCityManager a dbo:SportsAgent ;
                     dbo:managedTeam dbr:Hull_City_A.FC ;
                     dbo:managerialTenure [
                      dbo:startYear ""2016""^^xsd:gYear ;
                      dbo:endYear ""2017""^^xsd:gYear ] .

    # Check if this manager was also a player
    ?hullCityManager dbo:playerInTeam dbr:Hull_City_A.FC .
    
    # Get the name of the manager
    ?hullCityManager foaf:name ?managerName .
  }
}",4,5,5,2,2,3,2,20,0,0,2,0,0.0,0
427,22,test,"Give me the reference to Partito Popolare Italiano and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel WHERE {
  # Find Romano Prodi as a politician and office holder
  dbr:Romano_Prodi 
    a dbo:Politician ;
    dbo:officeHolderOf ?office .

  # Get the political parties associated with Romano Prodi
  OPTIONAL { ?office dbo:memberParty ?party . }
  
  # Filter for Partito Popolare Italiano and other parties
  FILTER (?party = dbr:Partito_Popolare_Italiano || !bound(?party))
  
  # Bind labels to the party names
  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
528,40,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of Narciso Campero.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Wars involving Chilean military force
  {
    ?war dbo:location dbr:Chile .
    ?war dbo:participatingMilitaryForce [
      a dbo:MilitaryUnit ;
      dbo:militaryBranch dbr:Army_of_Chile
    ] .
  }
  
  UNION
  
  # Wars involving Orozimbo Barbosa's military force
  {
    ?war dbo:participatingMilitaryForce ?military .
    ?military dbo:commander dbr:Orozimbo_Barbosa .
  }
  
  UNION
  
  # Wars involving Narciso Campero's military force
  {
    ?war dbo:participatingMilitaryForce ?military .
    ?military dbo:commander dbr:Narciso_Campero .
  }

  # Ensure the result is a societal event (war)
  FILTER(?war a dbo:MilitaryConflict)

  # Optional: Add descriptions for clarity
  OPTIONAL { ?war rdfs:comment ?description }
}
ORDER BY ?war
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
328,63,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Ferenc Szálasi's commander in force
  OPTIONAL { 
    ?szalasiCommander a dbo:MilitaryPerson ;
                      dbo:commandedBy dbr:Ferenc_Szálasi .
  }

  # Leader of the office (government agency) associated with Joseph Stalin
  OPTIONAL {
    ?stalinOffice a dbo:GovernmentAgency ;
                  dbo:leader ?person .
    ?stalinOffice dbo:head dbr:Joseph_Stalin .
  }

  # Awardee as commander in Volcano and Ryukyu Islands campaign
  OPTIONAL {
    ?campaignAwardedTo a dbo:MilitaryPerson ;
                       dbo:awardedBy dbr:Volcano_and_Ryukyu_Islands_campaign ;
                       dbo:rank ""Commander"" .
    FILTER(?campaignAwardedTo = ?person)
  }

  # Combine conditions to find the person who satisfies all
  VALUES ?person {
    ?szalasiCommander
    ?stalinOfficeLeader
    ?campaignAwardedTo
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,29,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars and commander in German campaign of 1813.",SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the commander of the 1st Light Cavalry Lancers Regiment during the Napoleonic Wars
  ?regiment a dbo:MilitaryUnit ;
            dbo:commander ?commander ;
            dbo:participatedIn dbr:Napoleonic_Wars .

  # Ensure the regiment is specifically the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  # Find involvement in the German campaign of 1813
  ?commander dbo:participatedIn dbr:German_campaign_of_1813 .
}
```",4,6,5,2,3,3,3,71,0,0,6,0,0.0,0
659,52,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:rank ""Field Marshal""@en ;
             dbo:officeHolderOf dbr:Kingdom_of_Ireland ;
             dbo:militaryConflict dbr:Napoleonic_Wars .

  OPTIONAL { ?commander dbo:commandedMilitaryUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) . }

  FILTER EXISTS {
    ?event a dbo:MilitaryConflict ;
           dbo:participatedIn ?commander .
  }
}
```",6,9,7,3,3,3,3,71,0,0,13,0,0.0,0
404,71,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
SELECT ?spouse WHERE {
  ?princess rdf:type dbo:Princess .
  ?princess rdfs:label ""Victoria Louise of Prussia""@en .
  ?princess dbo:birthName ?birthName .
  ?princess dbo:spouse ?spouse .
  FILTER(CONTAINS(LCASE(?birthName), ""princess victoria louise of prussia"")) .

  ?spouse rdf:type dbo:Prince .
  ?spouse rdfs:label ?spouseLabel .

  OPTIONAL {
    ?spouse dbo:father ?father .
    ?father rdfs:label ""George V of Hanover""@en .
  }

  OPTIONAL {
    ?father dbo:child ?child .
    ?child rdf:type dbo:Prince .
    ?child rdfs:label ""George William of Hanover""@en .
  }
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
16,55,test,Give me the person born as the birth name of Gigi Rice and professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  VALUES (?gigiBirthName) { (dbr:Gigi_Rice dbo:birthName ?name) }
  
  # Find Satomi Ishihara's profession
  VALUES (?satomiProfession) { (dbr:Satomi_Ishihara dbo:profession ?profession) }

  # Find Ted Martin McGinley's spouse
  VALUES (?tedSpouse) { (dbr:Ted_Martin_McGinley dbo:spouse ?spouse) }
  
  # Match the person with all three criteria
  ?person dbo:birthName ?gigiBirthName .
  ?person dbo:profession ?satomiProfession .
  ?person dbo:spouse ?tedSpouse .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
404,51,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commonIndividual WHERE {
  # Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Person ;
            dbp:spouse ?spouse .
  
  FILTER(?princess = dbpedia:Princess_Victoria_Louise_of_Prussia)

  # Spouse's father
  ?spouse dbo:father ?father .

  # Father's child (royalty)
  ?father dbo:child ?commonIndividual .
  ?commonIndividual a dbo:Monarch .

  # Ernest Augustus, Duke of Brunswick and his royal child
  ?duke a dbo:Person ;
        dbp:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?duke dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  FILTER(?commonIndividual = ?royalChild)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,20,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceLargoCaballero ?militaryForceRifWar
WHERE {
  # Find military forces associated with Francisco Largo Caballero in events
  ?event dbo:agent dbr:Francisco_Largo_Caballero .
  ?event dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForceLargoCaballero .

  # Find military forces involved in the Rif War
  dbr:Rif_War dbo:participatingMilitaryUnit ?militaryForceRifWar .
}
```",3,5,4,2,2,3,3,71,0,0,34,0,0.0,0
281,58,test,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v5 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  # Find Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:nationality ?nationality .
  ?nationality dbo:countryName ?birthCountry .

  # Find the war associated with Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:militaryConflict ?war .

  # Find a military unit in the New Zealand Army related to an office holder/politician and the wars
  ?militaryUnit a dbo:MilitaryUnit ;
               dbo:partOfMilitaryOrganization dbr:New_Zealand_Army ;
               dbo:member ?politician .
  
  ?politician rdf:type dbo:Politician ;
              dbo:nationality ?nationality .

  # Ensure the military unit is related to both wars
  ?militaryUnit dbo:militaryConflict ?war1, ?war2 .
  FILTER(?war1 = ?war || ?war2 = ?war)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
838,20,test,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?band ?zikaBand
WHERE {
  # YU Grupa and its band member who is also an artist/musical artist
  dbr:YU_Grupa dbo:member ?bandMember .
  
  ?bandMember a (dbo:Artist|dbo:MusicalArtist) .

  # Reference that connects to both an organization and a group
  ?reference dbo:wikiPageRedirects dbr:YU_Grupa ;
             a (dbo:Organization|dbo:Group) .

  # Band of the identified band member
  ?bandMember dbo:memberOf ?band .
  
  # Žika Jelić's band
  dbr:Žika_Jelić dbo:memberOf ?zikaBand .

  # Ensure the bands match
  FILTER (?band = ?zikaBand)
}
```",6,13,7,3,2,3,2,20,0,0,5,0,0.0,0
92,60,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
  ?person foaf:name ""Geoff Tate""@en .
  ?person dbo:musicArtist ?band .
}
```

This query searches for a person with the birth name ""Joseph Michael"" and the common name ""Geoff Tate"", then retrieves the band associated with him.",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
827,20,test,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v5 <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Charles Alexander's parent
  ?parent a dbo:Person ;
          dbo:child dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach .

  # Step 2: Find royalty children of this parent
  ?royaltyChild a dbo:RoyalFamilyMember ;
                dbo:parent ?parent .

  # Step 3: Identify Princess Pauline's spouse who is royalty
  dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach dbo:spouse ?spouse .
  ?spouse a dbo:RoyalFamilyMember .

  # Step 4: Find royalty child of this spouse
  ?royaltyChildOfSpouse a dbo:RoyalFamilyMember ;
                        dbo:parent ?spouse .

  # Step 5: Find father of this royalty child
  ?father a dbo:Person ;
          dbo:child ?royaltyChildOfSpouse .
}",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
54,46,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  ?thinkhayaChild dbo:child ?thinkhaya .

  # Narapati I of Ava and his child
  ?narapatiI a dbo:Monarch ;
             foaf:name ""Narapati I""@en .
  ?narapatiIClild dbo:parent ?narapatiI .

  # Find the common entity
  FILTER (?thinkhayaChild = ?entity)
  FILTER (?narapatiIClild = ?entity)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,71,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v7 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v8 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedArtist
WHERE {
  # Fredrik Thordendal and Meshuggah
  dbr:Fredrik_Thordendal dbo:bandMember dbr:Meshuggah .
  
  # Don Dokken and his persona as a musical artist
  dbr:Don_Dokken dbo:birthPlace ?place .
  ?persona dbo:associatedMusicalArtist dbr:Don_Dokken .

  # Watchtower reference
  dbr:Watchtower dbo:associatedMusicalArtist ?watchtowerArtist1 .
  
  # Find associated musical artist of the first artist related to Watchtower
  ?watchtowerArtist1 dbo:associatedMusicalArtist ?watchtowerArtist2 .

  # Connect back through Fredrik Thordendal's band
  ?watchtowerArtist2 dbo:bandMember dbr:Meshuggah .
  
  # Find associated musical artist of the final connection
  ?watchtowerArtist2 dbo:associatedMusicalArtist ?associatedArtist .
}
```",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
179,20,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of the parent of Vajiralongkorn.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find Vajiralongkorn's parent
  ?vajiralongkorn dbo:parent ?parentVajiralongkorn .
  
  # Step 2: Find the child of that parent (should be Vajiralongkorn)
  ?childParent dbp:child ?vajiralongkorn .

  # Step 3: Find the parent of this child (back to Vajiralongkorn's parent)
  ?parentChild dbo:parent ?parentVajiralongkorn .
  
  # Step 4: Identify Nakkhatra Mangala's child who is royalty
  ?nakkkhatraMangala dbp:child ?royaltyChild .
  ?royaltyChild a dbo:Monarch .

  # Find the person born as the birth name of this royalty child
  ?person rdfs:label ?birthName .
  FILTER (CONTAINS(LCASE(?birthName), LCASE(STR(?royaltyChild))))
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
547,53,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of the child of William Haliburton and resting place of Simon Cadell.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual ?restingPlace WHERE {
  # Knight Grand Cross of the Order of St Michael and St George (e.g., Winston Churchill)
  VALUES ?awardee { dbr:Winston_Churchill }
  
  # Child of the child of William Haliburton (e.g., Stephen Leacock)
  VALUES ?grandchild { dbr:Stephen_Leacock }
  
  # Simon Cadell
  VALUES ?actor { dbr:Simon_Cadell }

  {
    ?awardee dbo:deathPlace ?restingPlace .
    BIND(?awardee AS ?individual)
  } UNION {
    ?grandchild dbo:deathPlace ?restingPlace .
    BIND(?grandchild AS ?individual)
  } UNION {
    ?actor dbo:deathPlace ?restingPlace .
    BIND(?actor AS ?individual)
  }
}",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,48,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbp:father dbr:Antiochus_III_the_Great .
  
  # Step 2: Find his child
  ?child dbp:parent ?antiochus .

  # Step 3: Determine who is the parent of this child (could be Antiochus himself)
  ?parentOfChild dbo:spouse|dbo:child ?child .

  # Step 4: Identify a successor of Antiochus II Theos who was royalty
  ?successor dbp:predecessor dbr:Antiochus_II_theos .
  ?successor rdf:type dbo:Monarch .

  # Step 5: Find a child of this successor
  ?childOfSuccessor dbp:parent ?successor .

  # Step 6: Identify a grandchild (child of the child) of the successor who is royalty
  ?grandChildOfSuccessor dbp:parent ?childOfSuccessor .
  ?grandChildOfSuccessor rdf:type dbo:Monarch .

  FILTER(?parentOfChild = ?grandChildOfSuccessor)
}
```",5,7,6,3,2,3,3,71,0,0,2,0,0.0,0
659,23,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?officeHolder dbo:country dbr:Kingdom_of_Ireland .
  ?officeHolder a dbo:OfficeHolder .
  ?officeHolder dbo:positionTitle ?title .
  
  OPTIONAL { 
    ?militaryRole dbo:leader ?commander .
    ?militaryRole dbo:heldBy ?officeHolder .
  }
}
```",3,4,4,3,1,3,3,71,0,0,269,0,0.0,0
161,61,test,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find Indalecio Prieto's predecessor
  ?prieto dbo:predecessor ?predecessor .
  FILTER (str(?prieto) = ""Indalecio_Prieto"") .

  # The military force associated with the predecessor is both a societal event and a military conflict
  ?militaryForce dbo:type/dbo:superClass* dbr:Societal_event ;
                dbo:type/dbo:superClass* dbr:Military_conflict .
  ?predecessor dbo:associatedWith ?militaryForce .

  # Find the commander in the force associated with El Director (Francisco Franco)
  ?franco rdfs:label ""Francisco_Franco""@en .
  ?event dbo:type/dbo:superClass* dbr:Event ;
         dbo:commander ?franco .
  ?militaryForce dbo:associatedWith ?event .
}
```",6,9,7,3,2,3,3,71,0,0,32,0,0.0,0
161,60,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify El Director and his military force
  dbr:El_Director a dbo:Person ;
                  dbo:militaryCommanderOf ?force .

  # Find individuals who died during Francoist Spain
  ?personDecedent a dbo:Person ;
                  dbo:dateOfDeath ?deathDate ;
                  dbo:placeOfDeath ?francoistSpain .

  FILTER (regex(?francoistSpain, ""Francoist Spain"", ""i""))

  # Identify the military conflict involving both the force and the person
  ?militaryConflict a dbo:MilitaryConflict ;
                   dbo:militaryForce ?force ;
                   dbo:personInvolved ?personDecedent .
}
```

This query assumes:
- `El Director` is correctly identified in DBpedia.
- The relationships such as `dbo:militaryCommanderOf`, `dbo:dateOfDeath`, and `dbo:placeOfDeath` are available and accurately linked.
- The term ""Francoist Spain"" can be matched using a regex filter.",6,10,7,3,2,3,3,71,0,0,34,0,0.0,0
55,23,test,"Give me the band member of the producer, that is a band, of Used to Love Her and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?newstedBand
WHERE {
  # Step 1: Find the producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  FILTER (str(?song) = ""Used_to_Love_Her"")

  # Step 2: Check if the producer is a band
  OPTIONAL { ?producer dbo:type dbr:Band . }

  # Step 3: Find members of that producer-band
  OPTIONAL {
    ?member dbo:memberOf ?producer .
    ?member rdfs:label ?bandMember .
    FILTER (lang(?bandMember) = ""en"")
  }

  # Step 4: Identify the reference to ""Newsted""
  ?newstedReference dbo:reference dbr:Newsted .

  # Step 5: Determine the band associated with this reference
  OPTIONAL {
    ?newstedBand dbo:type dbr:Band .
    ?newstedBand dbo:member ?newstedReference .
    ?newstedBand rdfs:label ?bandLabel .
    FILTER (lang(?bandLabel) = ""en"")
  }
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
659,61,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck as a commander in a war
  ?war dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # Polish Horse as a military unit and organization involved in the same war
  ?polishHorse dbo:militaryUnitOf ?militaryForce ;
               rdf:type dbo:MilitaryUnit, dbo:Organization ;
               dbo:participatedIn ?war .

}
```",6,13,7,3,2,3,3,71,0,0,31,0,0.0,0
328,35,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?office dbo:type dbr:Government_agency ;
          dbo:head ?leader .
  
  ?stalinOffice dbo:head ?leader ;
                dbo:associatedWith dbr:Joseph_Stalin .

  ?fraserAward dbo:recipient ?leader ;
               dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,51,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of Ferenc Szálasi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeLeader WHERE {
  # Gustav Jonson's leader (office holder and politician)
  ?gustavLeader a dbo:OfficeHolder ;
                dbo:positionHeld ?gustavPosition .
  
  # Ferenc Szálasi's commander in the force
  ?ferencCommander a dbo:MilitaryPerson ;
                   dbo:commandedBy ?szalasi .

  # Gustav Jonson is related to his leader
  dbr:Gustav_Jonson dbo:leader ?gustavLeader .
  
  # Ferenc Szálasi is related to his commander
  dbr:Ferenc_Szálasi dbo:commanderInForce ?ferencCommander .

  # The office of Gustav Jonson's leader that is a government agency
  ?gustavPosition dbo:officeHolder ?gustavLeader ;
                  a dbo:GovernmentAgency .
  
  # Find the leader of this office
  ?officeLeader a dbo:OfficeHolder ;
                dbo:positionHeld ?gustavPosition .
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,54,test,"Give me the band of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfJosephMichael ?associatedArtistNevermore ?actorReturnToNukeEmHigh ?associatedMusicalArtistActor
WHERE {
  # Joseph Michael's band
  dbr:Joseph_Michael dbo:memberOf ?bandOfJosephMichael .
  
  # Nevermore associated artists
  dbr:Nevermore dbo:associatedBand ?associatedArtistNevermore .

  # Actor of Return to Nuke 'Em High Volume 1
  OPTIONAL {
    dbr:Return_to_Nuke_'Em_High_Volume_1 dbo:actor ?actorReturnToNukeEmHigh .
    
    # Associated musical artist of the actor
    ?actorReturnToNukeEmHigh foaf:musicArtist ?associatedMusicalArtistActor .
  }
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,19,test,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?awardee ?war WHERE {
  ?awardee dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  ?awardee dbo:nationality dbr:New_Zealand ;
           dbo:residence dbr:Colony_of_New_Zealand .
  OPTIONAL { ?awardee dbo:occupation dbp:MilitaryPerson . }
  ?war dbo:participatedIn ?awardee .
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
  
- **SELECT DISTINCT**: We select distinct individuals (`?awardee`) and wars (`?war`) to avoid duplicates.

- **Knight Grand Cross of the Order of the Bath**: We filter individuals who have this honorary title.

- **Nationality and Residence**: We ensure that these individuals are associated with New Zealand, specifically within the context of the Colony of New Zealand.

- **Military Occupation**: Optionally, we check if they were military personnel to strengthen the association with wars.

- **Participation in Wars**: We link these individuals to wars they participated in.

This query should help identify the relevant wars associated with such awardees in the specified historical and geographical context.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,68,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v5 . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouseOf ?sherry ;
          dbo:claimToFame ?work .

  # Identify the work associated with the spouse
  ?work dbo:actor ?actor1 .

  # Find the movie that is also a television show and involves Roz Ryan
  ?movie dbo:starring ?actor2 ;
         dbo:genre dbr:Television_show ;
         dbo:starring dbr:Roz_Ryan .

  # Ensure the actor is native to Jackson, Tennessee
  ?actor1 dbp:nativePlace dbr:Jackson,_Tennessee ;
          foaf:name ?actorName .

  FILTER(?actor1 = ?actor2)
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
404,70,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v4 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?v7 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfParent
WHERE {
  # Step 1: Find Prince George William of Hanover's parent who is royalty
  ?princeGeorge a dbo:Person ;
               dbp:father ?parent .

  FILTER (STRSTARTS(STR(?parent), ""http://dbpedia.org/resource/"") && 
          EXISTS { ?parent dbo:spouse ?spouse . })

  # Step 2: Find the child of this parent who is royalty and spouse of Princess Victoria Louise
  ?child a dbo:Person ;
         dbp:mother|dbp:father ?parent ;
         dbp:spouse ?princessVictoriaLouise .

  FILTER (STRSTARTS(STR(?princessVictoriaLouise), ""http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia"") &&
          EXISTS { ?princessVictoriaLouise dbo:spouse ?child })

  # Step 3: Find the father of this spouse
  ?father a dbo:Person ;
          dbp:son|dbp:daughter ?child .

  # Step 4: Find the parent of this father's child
  ?parentOfParent a dbo:Person ;
                  dbp:son|dbp:daughter ?father .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
659,45,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck as a commander in Battle of Leipzig and German campaign of 1813
  ?battle rdf:type dbo:MilitaryConflict .
  ?campaign rdf:type dbo:MilitaryCampaign .

  FILTER (?battle IN (dbr:Battle_of_Leipzig, dbr:German_campaign_of_1813))

  # Schimmelpenninck's involvement in these events
  ?schimmelpenninck dbo:commanderOf ?battle .
  ?schimmelpenninck dbo:commanderOf ?campaign .

  # Linking to the military force
  ?militaryForce dbo:participatedIn ?battle .
  ?militaryForce dbo:participatedIn ?campaign .

  # Ensure Schimmelpenninck is linked to the same military force
  ?schimmelpenninck dbo:militaryService ?militaryForce .
}
```",5,8,6,3,3,3,3,71,0,0,6,0,0.0,0
161,47,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?francoMilitaryForce ?prietoPredecessorMilitaryForce WHERE {
  # Francisco Franco's military conflict
  dbr:Francisco_Franco dbo:militaryConflict ?francoConflict .
  
  # Military force of Francisco Franco
  ?francoConflict dbo:participatingMilitaryForce ?francoMilitaryForce .

  # Indalecio Prieto's predecessor (assuming it is Manuel Azaña)
  dbr:Manuel_Azaña dbo:predecessor dbr:Indalecio_Prieto .
  
  # Military conflict of Manuel Azaña
  dbr:Manuel_Azaña dbo:militaryConflict ?prietoPredecessorConflict .

  # Military force of Manuel Azaña's conflict
  ?prietoPredecessorConflict dbo:participatingMilitaryForce ?prietoPredecessorMilitaryForce .
}
```",5,10,6,3,2,3,3,71,0,0,514,0,0.0,0
232,45,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and child of Jon Pertwee and actor of Dog Soldiers (film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfResidence WHERE {
  # Jon Pertwee's child who is a politician and office holder in France
  ?child dbo:nationality dbr:Francois_Pertwee ;
         dbo:parent dbr:Jon_Pertwee ;
         dbo:occupation dbr/Politician ;
         dbo:officeHolderInCountry dbr/France .

  # The same person is an actor of Dog Soldiers
  ?child dbo:film dbr/Dog_Soldiers_(2002_film) .

  # Find the residence of this person
  ?child dbo:residence ?residence .

  # Ensure the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbo:nativeOf ?nativeOfResidence .
  ?nativeOfResidence dbo:country dbr/United_Kingdom .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
617,55,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Child of Antiochus
  ?child dbo:parent ?antiochus .

  # Spouse of the child
  ?spouse dbo:spouse ?child .

  # Parent of the spouse (royalty, related to Seleucus II Callinicus)
  ?parent dbo:child ?spouse .
  ?parent a dbo:Monarch ;
          dbo:father dbr:Seleucus_II_Callinicus .
}
```",6,7,7,2,3,3,3,71,0,0,2,0,0.0,0
391,43,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouseOf ?sherry ;
          dbo:nationality dbr:United_States ;
          dbp:hometown dbr:Compton,_California .

  # Ensure the spouse is an actor of ""All About the Andersons""
  ?spouse dbo:actorInFilm dbr:All_About_the_Andersons .
  
  # Find a notable work (claim to fame) by this actor
  ?work dbo:performer ?spouse ;
        dbo:genre/dbo:subClassOf* dbo:Film .

  # Return the actor's name
  ?actor rdfs:label ?actorLabel .
  FILTER(LANG(?actorLabel) = ""en"")
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
184,71,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v7 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v4 . ?result <http://dbpedia.org/property/father> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?v8 <http://dbpedia.org/property/father> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMargaretChild ?nativeParent ?ladislausGrandchild

WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Archduchess ;
            foaf:birthday ""1925-01-01""^^xsd:date ;
            dbo:parent ?parentOfMargaret .
  
  ?parentOfMargaret dbo:child ?parentOfMargaretChild .

  # Landmark at elevation 96.0
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float ;
            dbo:native ?nativePerson .
  
  ?nativePerson dbo:parent ?nativeParent .

  # Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Archduke ;
             foaf:name ""Ladislaus Philipp of Austria""@en .
  
  ?ladislaus dbo:royalty ?royaltyStatus .
  ?royaltyStatus dbo:parent ?ladislausParent .
  
  ?ladislausParent dbo:child ?ladislausChild .
  ?ladislausChild dbo:child ?ladislausGrandchild .

  # Find the parent of the child of the parent of Margaret and the parent of the native
  FILTER(?parentOfMargaretChild = ?nativeParent)

  # Find the child of the child of the parent of Ladislaus
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
617,18,test,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/child> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentOfFatherRicheza ?childOfChildMladaParent
WHERE {
  # Richeza of Poland, Queen of Hungary
  ?richeza a dbo:Person ;
           foaf:name ""Richeza of Poland, Queen of Hungary""@en .
  
  # Her father
  ?richeza dbo:father ?fatherRicheza .

  # Parent of her father who is royalty
  ?fatherRicheza dbo:parent ?parentOfFatherRicheza .
  ?parentOfFatherRicheza a dbo:Monarch .

  # Mlada (abbess)
  ?mlada a dbo:Person ;
         foaf:name ""Mlada (abbess)""@en .

  # Her parent
  ?mlada dbo:parent ?parentMlada .

  # Child of her parent who is royalty
  ?parentMlada dbo:child ?childOfParentMlada .
  ?childOfParentMlada a dbo:Monarch .

  # Child of the child (grandchild) who is royalty
  ?childOfParentMlada dbo:child ?childOfChildMladaParent .
  ?childOfChildMladaParent a dbo:Monarch .
}",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,47,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInBirthPlace
WHERE {
  # Step 1: Find the leader of the 1962 New South Wales state election
  ?politician dbo:officeTitle ""Premier of New South Wales""@en ;
              dbo:termStart ?startTerm .
  
  FILTER(YEAR(?startTerm) = 1962)

  # Step 2: Get the birthplace of this politician and ensure it is a country
  ?politician dbp:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Step 3: Find an awardee of the Knight Grand Cross of the Order of the Bath involved in a war
  ?awardee dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ;
          dbo:award ""Order of the Bath""@en .
  
  ?war dbo:participant ?awardee .

  # Step 4: Identify an entity in the birthplace (country) related to both
  ?entityInBirthPlace rdf:type dbo:Country ;
                     rdfs:label ?label .
  FILTER(?birthPlace = ?entityInBirthPlace)
}
ORDER BY ?entityInBirthPlace",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
314,27,test,"Give me the person deceased at Madrid and awardee of the award of Sergei Makovetsky and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:awardReceived dbr:Sergei_Makovetsky_Award .
  ?person dbo:militaryRank ?rank .
  FILTER (strstarts(str(?rank), ""Commander"") || strstarts(str(?rank), ""Commanding Officer"")) .
  
  ?event dbo:associatedWith ?person ;
         dbo:relatedEvent dbr:Lisa_Gavrić_Event .
}
```

This query assumes:
- `dbo:deathPlace` is used to find the place of death.
- `dbo:awardReceived` identifies awards received by a person.
- `dbo:militaryRank` checks for military ranks, filtering for those starting with ""Commander"".
- `dbo:associatedWith` and `dbo:relatedEvent` are hypothetical properties linking events to individuals.

Please note that the exact property names might differ based on DBpedia's schema at the time of querying. Adjustments may be necessary if these assumptions do not align perfectly with the current DBpedia ontology.",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
996,16,test,Give me the entity in the award of Ekrem Akurgal and force of the awardee of 1778.0.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?force
WHERE {
  # Find Ekrem Akurgal's award
  ?award dbo:recipient dbr:Ekrem_Akurgal .
  
  # Find the entity associated with this award
  ?award dbo:associatedEntity ?entity .

  # Find the awardee in 1778 and their force
  ?award1778 dbo:year ""1778""^^xsd:gYear ;
             dbo:recipient ?awardee1778 ;
             dbo:associatedEntity ?entity .
  
  OPTIONAL {
    ?awardee1778 dbo:power ?force .
  }
}
```

This query assumes:
- `dbo:recipient` is the property linking an award to its recipient.
- `dbo:year` specifies the year of the award.
- `dbo:associatedEntity` links an award to a specific entity.
- `dbo:power` represents the ""force"" or power of the awardee (this might need adjustment based on actual DBpedia schema).",4,4,5,2,2,3,2,20,0,0,4,0,0.0,0
701,66,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify the commander in the Battle of Perire
  ?commander dbo:participatedInBattle dbp:battleOfPerire .
  
  # Step 2: Find the father of this commander
  ?father dbo:child ?commander .

  # Step 3: Determine the spouse of this father who is royalty
  ?spouse dbo:spouse ?father ;
          a dbo:Monarch .

  # Step 4: Ensure this person is also a parent of a child of Ramesses II and Nefertari
  ?child dbo:parent ?spouse .
  ?ramessesChild dbo:parent dbp:RamessesII .
  ?nefertariChild dbo:parent dbp:Nefertari .

  # Link the children to ensure they are related through the spouse
  FILTER(?child = ?ramessesChild || ?child = ?nefertariChild)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
378,61,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  ?war dbo:militaryConflict true .
  ?war dbo:societalEvent true .
  ?war dbo:partOf dbr:Peninsular_War .

  ?trigge dbo:commander ?war ;
          rdfs:label ""Thomas Trigge""@en .

  ?trigge dbo:notableFor ?claimToFame .
}
```

This query attempts to find a war that is both a military conflict and a societal event, part of the Peninsular War, where Thomas Trigge was a commander. It then retrieves his notable achievements or roles (`?claimToFame`) related to this context.",6,10,7,3,2,3,3,71,0,0,2,0,0.0,0
767,52,test,"Give me the alma mater of the administration of George K. Nash and reference to  and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/state> ?v2 . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement WHERE {
  # George K. Nash's alma mater
  dbr:George_K._Nash dbo:almaMater ?almaMater .

  # Writer of Dustin Lynch's album ""Where It's At""
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:lyricsBy ?writer .
  
  # Entity in the writer's administration that is a settlement
  ?writer dbo:administration ?adminEntity .
  ?adminEntity rdf:type dbo:Settlement ;
               rdfs:label ?settlement .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
528,70,test,Give me the war of the commander in the work of --01-09 and force of the person born as the birth name of Narciso Campero and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderWork ?narcisoForce ?battleWar
WHERE {
  OPTIONAL { 
    ?work dbo:author ?commander .
    ?commander rdfs:label ""Narciso Campero""@en .
    ?work rdfs:label ?commanderWork .
  }

  ?narciso dbo:militaryForce ?narcisoForce .

  ?battle dbr:Battle_of_Pisagua ;
         dbo:participatedInWar ?battleWar .
}
```",8,8,9,3,3,3,3,71,0,0,2,0,0.0,0
404,48,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Princess Victoria Louise of Prussia
  VALUES ?princess { dbr:Princess_Victoria_Louise_of_Prussia }
  
  # Get her birth name
  ?princess dbo:birthName ?birthName .
  
  # Find royalty with the same birth name
  ?royalty dbo:birthName ?birthName ;
           a dbo:Monarch .

  # Get spouse of that royalty
  ?royalty dbo:spouse ?spouse .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
617,38,test,Give me the spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?child .
  
  # The child who is also a parent of Antiochus IV Epiphanes
  ?child dbo:parent dbr:Antiochus_IV_Epiphanes .

  # Find the spouse of this child
  ?child dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
528,63,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile and war of the commander in Battle of La Rinconada de Ate.","SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?eventInChile ?battleCommander WHERE {
  # Find Narciso Campero Leyes and his military role
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Narciso Campero Leyes"" ;
          dbp:commanded ?militaryForce .

  # Find societal events related to military forces in Chile
  ?eventInChile a dbo:SocietalEvent ;
                dbo:location dbr:Chile ;
                dbo:relatedMilitaryForce ?militaryForce .

  # Find the Battle of La Rinconada de Ate and its commander
  ?battle a dbo:MilitaryConflict ;
          dbp:name ""Battle of La Rinconada de Ate"" ;
          dbo:commander ?battleCommander .
  
  OPTIONAL {
    ?person dbp:force ?force .
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
712,18,test,"Give me the resting place of the awardee of Hero of the Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?restingPlace WHERE {
  # Find individuals who were awarded Hero of the Soviet Union
  ?awardee dbo:award dbr:Hero_of_the_Soviet_Union .
  
  # Identify the military force involved in Vyoshenskaya Uprising
  ?militaryForce dbp:event dbr:Vyoshenskaya_Uprising ;
                a dbo:MilitaryUnit .

  # Find the country of this military force and its capital
  ?country dbo:militaryBranch ?militaryForce ;
           dbo:capitalCity ?capital .
  
  # Link the awardee to the military force
  ?awardee dbo:militaryService ?militaryForce .

  # Get the resting place of the awardee
  OPTIONAL { ?awardee dbp:burialPlace ?restingPlace }
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
281,42,test,"Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?warOfAwardee ?heatherRoyWar
WHERE {
  # Find the awardee of Knight Grand Cross of the Order of the Bath
  ?person dbo:award <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> .
  
  # Find wars associated with this person and their connection to Colony of New Zealand
  ?person dbo:participatedInWar ?warOfAwardee .
  ?warOfAwardee dbp:location dbr:Colony_of_New_Zealand .

  # Heather Roy's profession as a military unit
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  
  # Find wars related to Heather Roy's profession
  ?militaryUnit dbo:participatedInWar ?heatherRoyWar .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
360,27,test,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to the author of Blinded by the Light.",SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerOfRoaringSilence ?nativeOfDeathPlace ?authorOfBlindedByTheLight
WHERE {
  # The Roaring Silence writer
  dbr:The_Roaring_Silence dbo:author ?writerOfRoaringSilence .

  # Winnie Madikizela-Mandela's death place and a native of that place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  FILTER (isBlank(?deathPlace) || !bound(?deathPlace)) # Handle cases where the death place might not be specified
  OPTIONAL {
    ?deathPlace dbo:settlement ?settlement .
    ?nativeOfDeathPlace dbo:nativePlace ?settlement ;
                       a dbo:Person .
  }

  # Blinded by the Light author
  dbr:Blinded_by_the_Light dbo:author ?authorOfBlindedByTheLight .
}",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
701,69,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of Ramesses II and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v4 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royalty WHERE {
  # Step 1: Amun-her-khepeshef's spouse and their child's parent
  ?amunHerKhepeshef dbo:spouse ?spouse .
  ?childOfSpouse dbo:parent ?spouse ;
                 dbo:parent ?parentOfChild .

  # Step 2: Ramesses II's child and their parent
  ?ramessesII dbp:children ?childOfRamessesII .
  ?childOfRamessesII dbo:parent ?parentOfChild .

  # Step 3: Commander in the Battle of Perire, find father and spouse
  ?commander dbp:battle ?battle ;
             dbo:father ?fatherOfCommander .
  FILTER (STR(?battle) = ""Battle of Perire"")
  ?spouseOfFather dbo:spouse ?fatherOfCommander .

  # Find the common parent from steps 1, 2, and 3
  VALUES (?commonParent) {
    (?parentOfChild)
  }

  # Ensure the person is royalty
  ?royalty dbo:parent ?commonParent ;
           a dbo:Monarch .
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
528,50,test,Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force WHERE {
  # Find Narciso Campero Leyes and his birth details
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" ;
          dbo:birthPlace ?birthPlace .

  # Assuming there's a connection to a work or context (e.g., military role)
  OPTIONAL {
    ?person dbo:militaryCommanderOf ?war .
  }

  # Find the force associated with the war
  OPTIONAL {
    ?war dbo:participatingMilitaryForce ?force .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,51,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?person
WHERE {
  # Find Satomi Ishihara's profession
  dbr:Satomi_Ishihara dbo:profession ?profession .
  
  # Find an alumnus of Ohio State University and their birth name
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
          foaf:name ?alumniName ;
          foaf:givenname|foaf:surname ?birthName .

  # Find a person whose birth name matches the alumnus's birth name
  ?person foaf:givenname|foaf:surname ?birthName .
  
  # Ensure the professional is in the same profession as Satomi Ishihara
  ?professional dbo:profession ?profession .
}
```",5,5,6,3,2,3,3,71,0,0,3,0,0.0,0
378,63,test,Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  # Find wars involving George Augustus Eliott
  ?eliott dbo:occupation dbr:Military_person ;
          dbo:participatedIn ?gibraltarWar .
  
  # Ensure it's the Great Siege of Gibraltar
  ?gibraltarWar rdfs:label ""Great Siege of Gibraltar""@en .

  # Find wars involving Arthur Wellesley
  ?wellesley dbo:occupation dbr:Military_person ;
            dbo:participatedIn ?peninsularWar .
  
  # Ensure it's the Peninsular War
  ?peninsularWar rdfs:label ""Peninsular War""@en .

  # Find common wars between Eliott and Wellesley
  ?eliott dbo:participatedIn ?war ;
          rdfs:label ""George Augustus Eliott""@en .
  
  ?wellesley dbo:participatedIn ?war ;
             rdfs:label ""Arthur Wellesley, 1st Duke of Wellington""@en .
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
767,27,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?person dbo:birthName ""Matthew Burland""@en .
  OPTIONAL { ?person dbo:fictionalCharacter ?alterEgo . }
}
```",3,4,4,3,1,3,3,71,0,0,98447,0,0.0,0
281,30,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and war of the profession, that is a military unit, of Heather Roy and entity in Colony of New Zealand.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 ?militaryUnit ?nzEntity WHERE {
  # Beauchamp Seymour's wars
  OPTIONAL { 
    dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:militaryConflict ?war1 .
  }
  
  # Heather Roy's military unit (if any)
  OPTIONAL {
    dbr:Heather_Roy dbo:memberOf ?militaryUnit .
  }

  # Entity in Colony of New Zealand
  OPTIONAL {
    ?nzEntity dbo:country dbr:Colony_of_New_Zealand .
  }
  
  # Linking military unit to a war (hypothetical)
  OPTIONAL {
    ?militaryUnit dbo:militaryConflict ?war2 .
  }
}
```",4,5,5,2,3,3,3,71,0,2,1,0.0,0.0,0
488,56,test,"Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceOfCommander ?deathPlaceOfIeyasu ?administrationOfFather

WHERE {
  # Birthplace of Saigō Takamori (commander in Boshin War)
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlaceOfCommander .

  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceOfIeyasu .

  # Administration of Prince Arisugawa Taruhito (father of Princess Kazu, mother of Tokugawa Yoshinobu)
  dbr:Princess_Kazu dbo:father ?princeArisugawa .
  ?princeArisugawa dbo:administrativePost ?administrationOfFather .
}",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,34,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDeceasedAtWork ?personDeceasedAtAlgiers
WHERE {
  # Find the author of ""French Algeria""
  ?author dbo:wikiPageRedirects dbr:French_Algeria .
  
  # Find works associated with this author
  ?work dbo:author ?author .

  # Find notable deaths at these works
  OPTIONAL { 
    ?deathEvent dbo:location ?work ;
                dbo:agent ?personDeceasedAtWork .
  }

  # Find notable deaths in Algiers
  OPTIONAL {
    ?algiersDeathEvent dbo:location dbr:Algiers ;
                       dbo:agent ?personDeceasedAtAlgiers .
  }
}
```",4,4,5,3,2,3,3,71,0,0,16,0,0.0,0
10,26,test,"Give me the band member of Luke Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v4 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?profession
WHERE {
  # Find band members of Luke Vibert
  ?lukeVibert a dbo:MusicalArtist ;
              foaf:name ""Luke Vibert"" .
  
  ?bandMembership dbo:member ?bandMember ;
                  dbo:musicalArtist ?lukeVibert .

  # Find associated musical artists of Matt Colton
  ?mattColton a dbo:MusicalArtist ;
              foaf:name ""Matt Colton"" .
  
  ?association dbo:associatedMusicalArtist ?mattColton ;
               dbo:musicalArtist ?associatedArtist .

  # Identify profession of Sharon Kao using her birth name
  ?sharonKao a dbo:Person ;
             foaf:name ""Sharon Kao"" ;
             dbo:birthName ?birthName .
  
  ?professionStatement dbo:professional ?sharonKao ;
                       dbo:profession ?profession .

}
```",5,6,6,2,3,2,3,28,0,0,1,0,0.0,0
9,59,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the mayor of an organization in Belfast
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf ?organization .
  ?organization dbo:location dbr:Belfast .

  # Get the alma mater of this mayor
  ?mayor dbp:almaMater ?almaMater .

  # Find the awardee of the Royal Medals
  ?awardee dbo:awardReceived dbr:Royal_Medals .
  
  # Ensure the awardee's alma mater is the same as the mayor's
  ?awardee dbp:almaMater ?almaMater .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
115,8,test,Give me the alma mater of Vladimir Cerrón and alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?vladimirAlmaMater ?awardeeAlmaMater WHERE {
  # Alma mater of Vladimir Cerrón
  ?vladimir a dbo:Person ;
            foaf:name ""Vladimiro Huaroc Cerrón""@en .
  OPTIONAL { ?vladimir dbo:almaMater ?vldmAlmaMater . }

  # Assuming we know an awardee, e.g., ""Alberto Santos-Dumont""
  ?awardee a dbo:Person ;
           foaf:name ""Alberto Santos-Dumont""@en .
  OPTIONAL { ?awardee dbo:almaMater ?awdAlmaMater . }
  
  # Filter for National Order of Scientific Merit awardees
  ?awardee dbp:nationalOrderOfScientificMeritAward true .

  BIND(?vldmAlmaMater AS ?vladimirAlmaMater)
  BIND(?awdAlmaMater AS ?awardeeAlmaMater)
}
```

**Notes:**
- Replace `""Alberto Santos-Dumont""` with the actual name of a known awardee if available.
- The property `dbp:nationalOrderOfScientificMeritAward` is hypothetical and may not exist in DBpedia. You might need to adjust based on available data or assumptions.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
232,65,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v4 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Find Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:nativePlace ?residence .
  
  FILTER (strstarts(str(?residence), ""http://dbpedia.org/resource/"") && 
          strcontains(lcase(str(?residence)), ""british"") &&
          strcontains(lcase(str(?residence)), ""settlement""))

  # Step 2: Find John Pertwee's child who is an actor, narrator, and producer
  dbr:John_Pertwee dbo:child ?person .
  
  ?person dbo:occupationActor ?actorRole ;
          dbo:occupationNarrator ?narratorRole ;
          dbo:occupationProducer ?producerRole .

  # Step 3: Find the claim to fame that is both a film and a military conflict
  ?person dbo:famousFor ?claimToFame .
  
  ?claimToFame rdf:type/rdfs:subClassOf* dbr:Film, dbr:MilitaryConflict .

  # Step 4: Retrieve the actor associated with this claim to fame
  ?claimToFame dbo:actor ?actor .
}",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
328,24,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?leaderOfDefense ?szalasiCommander WHERE {
  # Leader of People's Commissariat of Defense (Minister of Defense) of the Soviet Union
  ?person dbo:position ""People's Commissar for Defence""@en .
  ?person rdfs:label ?leaderOfDefense .
  
  FILTER(CONTAINS(LCASE(?leaderOfDefense), ""joseph stalin""))

  # Commander in the force of Ferenc Szálasi (Arrow Cross Party)
  ?szalasi dbo:spouse ?arrowCrossLeader .
  ?arrowCrossLeader rdfs:label ""Ferenc Szálasi""@en .

  ?commander dbo:leader ?arrowCrossLeader ;
             rdfs:label ?szalasiCommander .

  FILTER(CONTAINS(LCASE(?szalasiCommander), ""arthur daranyi"") || 
         CONTAINS(LCASE(?szalasiCommander), ""ferenc szálasi""))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,63,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v6 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  # Step 1: Identify Queen's University Belfast and its nickname
  VALUES (?university) { dbr:Queen's_University_Belfast }
  
  OPTIONAL {
    ?university dbo:nickname ?nickname .
  }

  # Step 2: Find the mayor of an organization in Belfast who is also an alumnus of Queen's University Belfast
  ?mayor dbo:almaMater ?university ;
         dbo:positionTitle ""Mayor"" ;
         dbo:city dbr:Belfast .

  # Step 3: Identify an awardee of the Royal Medal who is also an alumnus of Queen's University Belfast
  ?awardee dbo:awardReceived dbr:Royal_Medal ;
          dbo:almaMater ?university .
}",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,57,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29 and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?writerBand WHERE {
  # Tracey Elizabeth McSween's band
  OPTIONAL {
    ?person1 dbo:birthName ""Tracey Elizabeth McSween""@en .
    ?person1 dbo:musicalArtist ?band1 .
  }

  # Person born on 1985-04-29's band
  OPTIONAL {
    ?person2 dbp:birthday ""1985-04-29""^^xsd:date .
    ?person2 dbo:musicalArtist ?band2 .
  }

  # Amba Shepherd's song writer and their band
  OPTIONAL {
    ?song dbo:lyricsBy ?writer .
    ?song dbo:artist dbr:Amba_Shepherd .
    ?writer dbo:musicalArtist ?writerBand .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,61,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/property/office> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Gustav Jonson as a politician and office holder
  ?gustavJonson dbo:occupation dbr:Politician ;
                dbo:officeHolderOf ?leader .

  # Identify the leader of Gustav Jonson
  ?leader dbo:positionHeld ?governmentAgency .

  # Determine the government agency associated with this leader
  ?governmentAgency a dbo:GovernmentAgency .

  # Find the commander in Budapest related to this context
  ?commander dbo:commanderOf ?force ;
             dbo:location dbr:Budapest .
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
994,48,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  dbr:Donald_Maynard_Dokken dbo:musicalArtistOf ?band .

  # Step 2: Find his band members
  ?bandMember dbo:member ?band ;
              a dbo:Band .

  # Step 3: Identify the associated musical artists of these band members
  ?associatedArtist dbo:associatedMusicalArtist ?bandMember .

  # Step 4: Determine which of these associated artists have a reference to ""Watchtower""
  ?associatedArtist dbo:reference dbr:Watchtower .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,65,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of Queen's University Belfast and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v6 <http://dbpedia.org/property/awards> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Royal Medals awardee
  ?award dbr:Royal_Medals ;
         dbo:recipient ?awardee .
  
  # Queen's University Belfast nickname and alma mater
  ?university dbr:Queen's_University_Belfast ;
              rdfs:label ?nickname ;
              dbo:almaMaterOf ?person1 .

  # Northern Ireland Forum Mayor and alma mater
  ?mayor dbo:almaMater ?almaMater ;
         dbo:occupation dbr:Northern_Ireland_Forum_Mayor .
  
  # Link awardee, person from Queen's University Belfast, and mayor
  ?awardee dbo:almaMater ?university .
  ?person1 = ?mayor .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,46,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Identify Yōichi Masuzoe
  ?person a dbo:Person ;
          dbp:birthYear ""1958""^^xsd:gYear ;
          foaf:name ""Yōichi Masuzoe""@ja .

  # Find his residence that is a country
  ?person dbo:residence ?residence .
  ?residence a dbo:Country .

  # Determine his alma mater, ensuring it's a Japanese educational institution
  ?person dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalOrganization ;
             dbo:country dbr:Japan ;
             dbo:type dbo:University .

  # Get the native of the residence (country)
  ?residence dbp:nativeName ?native .
}
```",5,10,6,3,2,3,3,71,0,0,167,0,0.0,0
547,68,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v5 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v7 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchildRestingPlace ?actorRestingPlace ?knightRestingPlace
WHERE {
  # Part 1: Resting place of the child of the child of William Haliburton
  dbr:William_Haliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
  OPTIONAL { ?grandchild dbo:deathPlace ?grandchildRestingPlace . }

  # Part 2: Resting place of the actor from a show with Emily Richard
  {
    SELECT DISTINCT ?actor WHERE {
      ?show dbo:starring dbr:Emily_Richard .
      ?show dbo:starring ?actor .
    }
    OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }
  }

  # Part 3: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    SELECT DISTINCT ?knight WHERE {
      ?knight dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    }
    OPTIONAL { ?knight dbo:deathPlace ?knightRestingPlace . }
  }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
659,62,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of Napoleonic Wars and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the military unit known as 'Polish Horse'
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Horse""@en .
  
  # Find the event/military conflict of the Napoleonic Wars
  ?event a dbo:MilitaryConflict ;
         rdfs:label ""Napoleonic Wars""@en .

  # Link the unit to the event
  ?unit dbo:participatedIn ?event .

  # Identify the commander associated with this unit during the event
  ?commander dbo:commanded ?unit ;
             a dbo:MilitaryPerson .

  # Ensure the commander is an office holder from the Kingdom of Ireland
  ?officeHolder a dbo:OfficeHolder ;
                dbo:nationality dbr:Kingdom_of_Ireland ;
                dbo:heldBy ?commander .
}
```",7,12,8,3,3,3,3,71,0,0,13,0,0.0,0
54,60,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/property/father> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder
WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # Thinkhaya's grandchild (child of Thinkhaya's child)
  ?grandchild dbo:childOf ?thinkhayaChild .

  # Predecessor of the grandchild is Thinkhaya's child
  ?predecessor dbo:parentOf ?grandchild .
  
  # Thihapate of Mohnyin reference
  ?thihapate dbr:Thihapate_of_Mohnyin .

  # Office holder and royalty condition
  ?officeHolder dbo:officeHolder ?thihapate ;
               a dbo:Monarch ;
               rdfs:label ?name .
  
  FILTER(?predecessor = ?thinkhayaChild)
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
427,64,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to the name of the party of Michele Pinto and party of Giulio Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?pintoParty ?andreottiParty WHERE {
  # Romano Prodi's party
  OPTIONAL { 
    dbr:Romano_Prodi dbo:birthName ?prodiBirthName .
    ?prodiBirthName dbo:party ?prodiParty .
  }

  # Michele Pinto's party
  OPTIONAL { 
    dbr:Michele_Pinto dbo:birthName ?pintoBirthName .
    ?pintoBirthName dbo:party ?pintoParty .
  }
  
  # Giulio Andreotti's party
  OPTIONAL { 
    dbr:Giulio_Andreotti dbo:birthName ?andreottiBirthName .
    ?andreottiBirthName dbo:party ?andreottiParty .
  }
}
```

This query uses the `dbo:birthName` property to find the birth names of Romano Prodi, Michele Pinto, and Giulio Andreotti. It then retrieves their respective political parties using the `dbo:party` property.",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
9,47,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the mayor of Northern Ireland Forum who is a politician
  ?mayor dbo:position dbr:Northern_Ireland_Forum ;
         dbo:occupation dbr:Politician .
  
  # Find their alma mater
  ?mayor dbo:almaMater ?almaMater .

  # Find an awardee of Royal Medals
  ?awardee dbo:award dbr:Royal_Medals .
  
  # Check if the awardee's alma mater is the same as the mayor's
  ?awardee dbo:almaMater ?sameAlmaMater .

  FILTER (?almaMater = ?sameAlmaMater)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
184,63,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and parent of the child of Archduke Joseph Francis of Austria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Step 1: Archduke Joseph Karl's child
  ?child1 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Step 2: Child of the above child (grandchild)
  ?grandchild dbo:parent ?child1 .

  # Step 3: Landmark at elevation 96.0
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            a dbo:Settlement .
  
  # Step 4: Native of the landmark
  ?native dbo:nativePlace ?landmark .
  
  # Step 5: Parent of the native
  ?parentOfNative dbo:child ?native .

  # Step 6: Archduke Joseph Francis's child
  ?child2 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 7: Parent of the above child
  ?parentOfChild2 dbo:child ?child2 .

  # Find common entity
  FILTER (?grandchild = ?parentOfNative && ?parentOfNative = ?parentOfChild2)
  BIND(?parentOfNative AS ?commonEntity)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
994,65,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower a dbo:Band ;
              dbo:musicalArtist ?artist1 .

  # Step 2: Find Donald Maynard Dokken and his associated musical artist
  dbr:Donald_Maynard_Dokken a dbo:Person ;
                            dbo:birthName ""Donald Maynard Dokken"" ;
                            dbo:musicalArtist ?dokkenBand .
  
  ?dokkenBand dbo:musicalArtist ?artist2 .

  # Step 3: Find Fredrik Thordendal's band
  dbr:Fredrik_Thordendal a dbo:Person ;
                         dbo:memberOfBand ?thordendalBand .

  ?thordendalBand a dbo:Organization ;
                   dbo:musicalArtist ?bandMember .

  # Step 4: Ensure the band member is also a band/group/organization
  ?bandMember a dbo:Band, dbo:Group, dbo:Organization .

  # Step 5: Connect to find the final associated musical artist
  ?bandMember dbo:musicalArtist ?finalArtist .
}
```",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
492,48,test,"Give me the person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v2 <http://dbpedia.org/property/author> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorDecedent ?capitalDecedent
WHERE {
  # Find the author of ""French Algeria""
  ?work dbo:title ""French Algeria""@en .
  ?work dbo:author ?author .

  # Find the person decedent associated with this author's work
  ?author dbo:deathPlace ?deceasedPlace .
  ?deceasedPlace dbo:personDecedent ?authorDecedent .

  # Determine the capital city of Algeria that is also a settlement
  dbr:Algeria dbo:capital ?capital .
  ?capital rdf:type dbo:Settlement .

  # Find the person decedent associated with this capital
  ?capital dbo:deathPlace ?deceasedCapitalPlace .
  ?deceasedCapitalPlace dbo:personDecedent ?capitalDecedent .
}",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
617,51,test,Give me the parent of the child of the commander in Battle of Panium and spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild ?spouseOfAntiochusChild
WHERE {
  # Commander in Battle of Panium and his child
  dbr:Ptolemy_IV_Philopator dbo:commanderInBattle dbr:Battle_of_Panium .
  dbr:Ptolemy_V_Epiphanes dbo:child dbr:Ptolemy_IV_Philopator .

  # Parent of the child (Ptolemy IV Philopator)
  ?parentOfChild dbo:child dbr:Ptolemy_V_Epiphanes .

  # Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child dbr:Seleucus_IV_Philopator .

  # Spouse of the child (Laodice IV)
  ?spouseOfAntiochusChild dbo:spouse dbr:Seleucus_IV_Philopator .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
16,61,test,Give me the professional in the profession of the actor of Unnatural (TV series) and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Step 1: Find the actor of ""Unnatural"" (TV series)
  ?actor dbo:profession dbr:Actor ;
         dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Step 2: Get their profession
  ?actor dbo:profession ?profession .

  # Step 3: Find an alumnus of Ohio State University and their birth name
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           dbp:birthdayBirthName ?birthName .

  # Step 4: Find a person born with that birth name
  ?person dbp:birthdayBirthName ?birthName .
  
  # Ensure the professional is in the same profession as the actor
  ?professional dbo:profession ?profession .
}
```",6,6,7,3,2,3,3,71,0,0,3,0,0.0,0
378,36,test,"Give me the war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?claimToFame WHERE {
  # Find Carl Pontus Gahn and Thomas Trigge
  VALUES (?person1 ?person2) { (dbr:C_Pontus_Gahn dbr:Thomas_Trigge) }

  # Find wars associated with them
  ?person1 dbo:participatedIn ?war .
  ?person2 dbo:participatedIn ?war .

  # Identify the commander of the war and their claim to fame
  ?war dbo:commander ?commander .
  ?commander dbo:famousFor ?claimToFame .
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
801,68,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v5 <http://dbpedia.org/property/alterEgo> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> ?v4 . ?v7 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
    # Find the musical work ""40 Dayz & 40 Nightz""
    ?work a dbo:Song ;
          rdfs:label ""40 Dayz & 40 Nightz""@en .
    
    # Find the producer of this song
    ?producer dbo:producedBy ?work ;
              a dbo:MusicalArtist .

    # Find the alter ego ""The Shadow"" and its true self
    ?alterEgo rdfs:label ""The Shadow""@en .
    ?trueSelf rdfs:label ""DMX""@en ;
              dbo:birthName ""Earl Simmons""@en ;
              dbo:profession dbr:Rapper .

    # Link the producer to the true self of ""The Shadow""
    ?producer foaf:name ?trueSelfLabel .
    
    FILTER(?producer = ?trueSelf)
}
```",8,14,9,3,3,3,3,71,0,0,8,0,0.0,0
547,52,test,Give me the resting place of the child of the child of William Haliburton and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?descendantRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace
WHERE {
  # Resting place of the child of the child of William Haliburton
  dbr:William_Haliburton dbo:child ?child1 .
  ?child1 dbo:child ?grandChild .
  ?grandChild dbo:deathPlace ?descendantRestingPlace .

  # Resting place of Alan Cunningham
  OPTIONAL {
    dbr:Alan_Cunningham dbo:deathPlace ?alanCunninghamRestingPlace .
  }

  # Resting place of the actor of ""Enemy at the Door""
  OPTIONAL {
    dbr:Enemy_at_the_Door dbo:actor ?actor .
    ?actor dbo:deathPlace ?actorRestingPlace .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
528,35,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?battleDetails WHERE {
  # Find Narciso Campero Leyes and his military force
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" ;
          dbo:militaryService ?service .
  
  OPTIONAL { 
    ?service dbo:memberOf ?force .
  }
  
  # Find details about the Battle of Pisagua
  ?battle a dbo:MilitaryConflict ;
          foaf:name ""Battle of Pisagua"" .
  
  OPTIONAL {
    ?battle dbo:participatedIn ?participant .
    ?participant dbo:militaryService ?service .
  }

  BIND(CONCAT(""Military force associated with "", STR(?person), "": "", STR(?force)) AS ?force)
  BIND(CONCAT(""Details about the Battle of Pisagua: "", STR(?battle)) AS ?battleDetails)
}
```

This query attempts to:

1. Identify Narciso Campero Leyes and any military service or forces he was associated with.
2. Retrieve information about the Battle of Pisagua, including participants.

Please note that the availability of specific data in DBpedia may vary, and some assumptions are made regarding property names like `dbo:militaryService` and `dbo:memberOf`, which might need adjustments based on actual DBpedia schema details.",4,4,5,2,2,3,3,71,0,0,3,0,0.0,0
92,70,test,"Give me the band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v7 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?associatedArtist WHERE {
  # Warrel Dane's band
  dbr:Warrel_Dane dbo:memberOf dbr:Nevermore .
  
  # Associated musical artists of Warrel Dane
  OPTIONAL { 
    dbr:Warrel_Dane dbo:associatedMusicalArtist ?artist .
    ?artist rdfs:label ?associatedArtist .
  }
  
  # Actor in ""Return to Nuke 'Em High Volume 1""
  ?actor dbo:film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
         dbo:associatedMusicalArtist ?band .
  
  # Ensure the band is Nevermore
  FILTER(?band = dbr:Nevermore)
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,62,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v4 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentIlona ?nativePerson ?grandChildLadislaus
WHERE {
  # Parent of Archduchess Ilona of Austria
  dbr:Archduchess_Ilona_of_Austria dbo:parent ?parentIlona .

  # Landmark at elevation 96.0 that is a settlement
  ?landmark a dbo:Settlement ;
           dbo:elevationAboveSeaLevel ""96.0""^^xsd:float .
  
  # Native of the landmark
  ?nativePerson dbo:nativePlace ?landmark .

  # Parent who is royalty of Archduke Ladislaus Philipp of Austria
  dbr:Archduke_Ladislaus_Philipp_of_Austria dbo:parent ?royalParent .
  FILTER EXISTS { ?royalParent a dbo:Royalty }

  # Child of the royal parent
  ?childLadislaus dbo:parent ?royalParent .

  # Grandchild (child of the child)
  ?grandChildLadislaus dbo:parent ?childLadislaus .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
303,22,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v3 . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?party WHERE {
  # Find the commander who was a politician during the United States invasion of Panama
  ?event dbo:agent ?commander .
  ?event rdf:type dbr:United_States_invasion_of_Panama .
  ?commander rdf:type dbo:Politician .

  # Get the political party of the commander
  ?commander dbp:party ?party .

  # Ensure the entity is related to El Valle de Antón, Panama
  OPTIONAL {
    ?entity dbo:country dbr:Panama ;
            rdfs:label ""El Valle de Antón""@en .
  }
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
547,44,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?burialPlace WHERE {
  # Actor of ""Enemy at the Door""
  {
    ?film dbo:title ""Enemy at the Door""@en .
    ?film dbo:starring ?actor .
    ?actor rdfs:label ?nameActor FILTER (LANG(?nameActor) = 'en') .
    OPTIONAL { ?actor dbo:deathPlace ?burialPlace . }
    BIND(?actor AS ?person)
  }

  UNION

  # James Burton, the Egyptologist
  {
    ?person rdfs:label ""James Burton (Egyptologist)""@en .
    OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
  }

  UNION

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:honoursReceived dbr:Order_of_St_Michael_and_St_George .
    ?person dbo:orderOfKnighthood dbr:Knight_Bachelor .
    OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
  }

  # Ensure we get the name of each person
  {
    ?person rdfs:label ?name FILTER (LANG(?name) = 'en') .
  }
}
ORDER BY ?name",5,5,6,2,3,3,3,71,0,2,1,0.0,0.0,0
492,26,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?eventLabel WHERE {
  # Find events related to Philippe Pétain
  {
    SELECT DISTINCT ?event ?eventLabel WHERE {
      VALUES ?commander { 
        dbr:Philippe_Pétain 
      }
      ?event dbo:commander ?commander .
      ?event rdfs:label ?eventLabel .
      FILTER(LANG(?eventLabel) = 'en')
    }
  }

  UNION

  # Find events related to Erich von Falkenhayn
  {
    SELECT DISTINCT ?event ?eventLabel WHERE {
      VALUES ?commander { 
        dbr:Erich_von_Falkenhayn 
      }
      ?event dbo:commander ?commander .
      ?event rdfs:label ?eventLabel .
      FILTER(LANG(?eventLabel) = 'en')
    }
  }

  # Exclude the Battle of Verdun from results
  FILTER NOT EXISTS {
    VALUES ?excludedEvent { dbr:Battle_of_Verdun }
    ?event owl:sameAs ?excludedEvent .
  }
}
ORDER BY ?eventLabel
LIMIT 10
```",3,5,4,3,1,3,3,71,0,20,92,0.0,0.0,0
339,17,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Princess Olga of Greece and Denmark
  ?olga a dbo:Person ;
        foaf:name ""Princess Olga of Greece and Denmark""@en .
  
  # Parent of Princess Olga
  ?parent dbo:child ?olga .

  # Child of the parent (i.e., sibling or another child)
  ?sibling dbo:child ?parent .

  # Ensure this sibling is also a child of George I of Greece
  ?georgeI a dbo:Person ;
           foaf:name ""George I of Greece""@en .
  
  ?sibling dbo:child ?georgeI .

  # Find the father of this sibling
  ?father dbo:spouse ?mother .
  ?parent dbo:spouse ?mother .
  FILTER (?father != ?mother)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
959,21,test,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?university WHERE {
  # Eiji Ōtsuka as manager of Júbilo Iwata in 2013
  dbr:Eiji_Ōtsuka dbo:positionHeld dbr:Júbilo_Iwata .
  
  # Find the university he attended
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .

  # Ensure the university is Japanese and an educational institution
  ?university a dbo:University ;
             dbp:country ""Japan""^^xsd:string ;
             a dbo:EducationalInstitution .
}
```",3,7,4,2,2,3,3,71,0,0,1,0,0.0,0
427,71,test,"Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v8 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?fatherParty ?michelePintoParty ?romanoProdiBirthName
WHERE {
  # Find the father of an MIT alumnus and his party
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .
  ?father dbp:party ?fatherParty .

  # Find Michele Pinto's party
  dbr:Michele_Pinto dbp:party ?michelePintoParty .

  # Find Romano Prodi's birth name
  dbr:Romano_Prodi dbo:birthName ?romanoProdiBirthName .
  FILTER EXISTS { dbr:Romano_Prodi dbo:officeHolder true } .
  FILTER EXISTS { dbr:Romano_Prodi dbo:politician true } .
}
```",9,11,10,3,3,3,3,71,0,0,2,0,0.0,0
281,55,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?heatherWar ?knightWar ?country
WHERE {
  # Heather Roy's profession as a military unit
  dbr:Heather_Roy dbo:militaryUnit ?militaryUnit .
  ?militaryUnit dbo:participatedIn ?heatherWar .

  # Awardee of Knight Grand Cross of the Order of the Bath and their war
  ?knight dbo:title ""Knight Grand Cross of the Order of the Bath""@en .
  ?knight dbo:militaryConflict ?knightWar .

  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?country .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
16,46,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?profession WHERE {
  # Step 1: Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  ?satomi dbo:occupation ?professionIshihara.

  # Step 2: Find Ted McGinley's birth name
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley""@en;
       dbp:birthName ?birthName.

  # Step 3: Find the spouse of the person with that birth name
  ?person a dbo:Person;
          dbp:birthName ?birthName.
  ?marriage dbo:husbandOrWife ?person;
            dbo:spouse ?spouse.

  # Step 4: Get the profession of this spouse
  ?spouse dbo:occupation ?professionSpouse.
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
959,50,test,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team
  ?team dbo:member dbr:Takashi_Sekizuka .
  
  # Manager of the team
  ?team dbo:coach ?manager .

  # Leader from the 2010 Japanese House of Councillors election
  ?leader dbo:election dbr:2010_Japanese_House_of_Councillors_election .
  
  # Residence of the leader, which is a country
  ?leader dbo:residence ?countryResidence .
  FILTER (isLiteral(?countryResidence) && 
          strstarts(str(?countryResidence), ""http://dbpedia.org/resource/Category:Countries_by_continent""))

}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
161,65,test,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceEmilioMola ?militaryForceFranciscoFranco ?predecessorMilitaryConflict
WHERE {
  # Emilio Mola's military force associated with an event
  ?event dbo:commander dbr:Emilio_Mola .
  ?event dbo:militaryForce ?militaryForceEmilioMola .

  # Francisco Franco's military force associated with societal events and conflicts
  ?societalEvent dbo:commander dbr:Franco_Francisco .
  ?societalEvent dbo:militaryConflict ?conflict .
  ?societalEvent dbo:militaryForce ?militaryForceFranciscoFranco .

  # Indalecio Prieto's predecessor and their military conflict
  ?prietoPredecessor dbo:predecessor dbr:Indalecio_Prieto .
  ?conflictPrieto dbo:commander ?prietoPredecessor .
  ?conflictPrieto dbo:militaryConflict ?predecessorMilitaryConflict .
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
492,69,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of the author of French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr and his role in a military conflict
  dbr:Frédéric_Georges_Herr dbo:militaryConflict ?conflict .
  
  # Military conflict as an event
  ?conflict rdf:type dbo:Event .

  # Author of French Algeria
  dbr:French_Algeria dbp:author ?author .
  
  # Person decedent at the work of the author
  ?decedent1 dbo:deathPlace ?work .
  ?work dbo:author ?author .
  
  # Capital of Khemis Miliana District
  dbr:Khemis_Miliana_District dbo:capital ?capital .
  
  # Person decedent at the capital
  ?decedent2 dbo:deathPlace ?capital .

  # Find the commander in the conflict who is also a person decedent at both places
  ?commander dbo:militaryConflict ?conflict ;
             rdf:type dbo:Person ;
             owl:sameAs ?decedent1 ;
             owl:sameAs ?decedent2 .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
54,57,test,"Give me the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # Thado Minsaw of Prome's parent and the child of that parent
  ?thadoParent dbo:parentOf dbr:Thado_Minsaw_of_Prome .
  ?grandchild dbo:childOf ?thadoParent .

  # Thihapate of Mohnyin's child and predecessor of that child
  ?thihapateChild dbo:childOf dbr:Thihapate_of_Mohnyin .
  ?predecessor dbo:succeededBy ?thihapateChild .

  # Find the common person who is an office holder and royalty
  FILTER (?thinkhayaChild = ?grandchild && ?thinkhayaChild = ?predecessor)
  ?person dbo:officeHolderOf ?office .
  ?person dbo:royalty dbr:Royal_Rank .
  
  # Ensure the person matches all conditions
  FILTER (?person = ?thinkhayaChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,67,test,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBW ?fictionalCharacter ?almaMater
WHERE {
  # Entity in Baden-Württemberg
  ?entityInBW dbo:location dbr:Baden-Württemberg .
  
  # Fictional character associated with Matthew Burland
  ?fictionalCharacter dbo:creator dbr:Matthew_Burland .
  
  # Alma mater of George Kilbon Nash's administration
  ?admin dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
  
  # Linking the fictional character to the entity in Baden-Württemberg
  ?entityInBW dbo:fictionalCharacter ?fictionalCharacter .
  
  # Linking the alma mater to the entity in Baden-Württemberg
  ?almaMater dbo:location dbr:Baden-Württemberg .
}
```

This query assumes that there are properties like `dbo:creator` for fictional characters and `dbo:almaMater` for educational institutions, which may need to be adjusted based on actual DBpedia schema.",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
492,55,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr commanded a military conflict
  dbr:Frédéric_Georges_Herr dbo:militaryConflictLeaderOf ?war .
  
  # The war is both a military conflict and an event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .

  # Joseph C. Satterthwaite's work as US Assistant Secretary of State for African Affairs
  dbr:Joseph_C._Satterthwaite dbo:officeHolderOf ?work .
  FILTER (str(?work) = ""US_Assistant_Secretary_of_State_for_African_Affairs"")

  # The capital of Algeria
  dbr:Algiers rdf:type dbo:Settlement ;
              dbo:capitalOf dbr:Algeria .

  # Find the commander in the war that matches all criteria
  ?war dbo:commander ?commander .
}
```",6,9,7,2,3,3,3,71,0,0,1,0,0.0,0
360,24,test,"Give me the reference to the author of Blinded by the Light and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?nativePlace WHERE {
  # Find the author of ""Blinded by the Light""
  ?book dbo:title ""Blinded by the Light""@en .
  ?book dbo:author ?author .

  # Find the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Check if the author is native to that settlement
  ?author dbp:nativePlace ?nativePlace .
  FILTER (?nativePlace = ?deathPlace)
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
959,39,test,"Give me the native of Japan and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?managerName WHERE {
  # Find the manager of the 1998 Kashima Antlers
  ?team dbr:Kashima_Antlers dbo:manager ?manager .
  
  # Ensure it's for the 1998 season
  ?season dbp:club ?team ;
          dbp:year ""1998""^^xsd:gYear .

  # Check if the manager is native to Japan
  ?manager dbo:nationality dbr:Japan .

  # Verify that the person is a sports manager
  ?manager rdf:type dbo:SportsManager .

  # Get the name of the manager
  ?manager rdfs:label ?managerName .
  
  FILTER (lang(?managerName) = ""en"")
}
```",4,5,5,3,2,3,3,71,0,0,6,0,0.0,0
339,19,test,Give me the child of the child of Christian IX of Denmark and father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild ?father WHERE {
  # Step 1: Identify children of Christian IX
  ?christianIX dbo:spouse ?spouse .
  ?christianIX dbp:surname ""Glücksburg"" .

  # Step 2: Identify grandchildren (children of Christian IX's children)
  ?child dbo:parent ?christianIX ;
         dbo:child ?grandchild .

  # Step 3: Identify Princess Olga and her parent
  ?olga dbp:name ""Olga of Greece and Denmark"" .
  ?olga dbo:parent ?parent .

  # Step 4: Identify the child of Princess Olga's parent (Princess Olga or sibling)
  OPTIONAL { ?sibling dbo:parent ?parent } .

  # Step 5: Find the father of the child from step 4
  ?father dbo:spouse ?mother ;
          dbo:child ?olga .
  
  FILTER(?grandchild = ?olga || ?grandchild = ?sibling)
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
55,25,test,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v4 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Step 1: Find band members of San Francisco Symphony who are also bands or groups
  ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony .
  FILTER EXISTS { ?symphonyMember a dbo:Band . }
  UNION
  FILTER EXISTS { ?symphonyMember a dbo:MusicalGroup . }

  # Step 2: Find bands associated with Newsted and their band members
  ?newstedBand dbo:band dbr:Newsted .
  ?bandMember dbo:memberOf ?newstedBand .

  # Step 3: Find the producer of ""Used to Love Her"" who is a band, and their band members
  ?producer dbo:produced dbr:Used_to_Love_Her .
  FILTER EXISTS { ?producer a dbo:Band . }
  ?bandMember dbo:memberOf ?producer .

  # Combine results from all steps
  VALUES ?commonEntity {
    ?symphonyMember
    ?newstedBand
    ?producer
  }

  # Find the intersection of these entities
  ?bandMember dbo:memberOf ?commonEntity .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
547,58,test,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?jamesBurtonRestingPlace ?awardeeRestingPlace WHERE {
  # Actor of ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
  OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . BIND(STR(?actorDeathPlace) AS ?actorRestingPlace) }

  # James Burton (Egyptologist)
  dbr:James_Burton_(Egyptologist) dbo:deathPlace ?jamesBurtonDeathPlace .
  BIND(STR(?jamesBurtonDeathPlace) AS ?jamesBurtonRestingPlace)

  # Awardee of Gerald Graham's award
  ?award dbo:recipient ?awardee .
  FILTER (STR(?award) = ""Gerald_Graham_Award""@en)
  OPTIONAL { ?awardee dbo:deathPlace ?awardeeDeathPlace . BIND(STR(?awardeeDeathPlace) AS ?awardeeRestingPlace) }
}
```

This query does the following:
- Retrieves the actor of the movie ""Enemy at the Door"" and their death place.
- Finds the resting place of James Burton, specifically noted as an Egyptologist.
- Identifies the recipient of Gerald Graham's award and their death place.

Note: The exact property names (like `dbo:starring`, `dbo:recipient`) might need adjustment based on DBpedia's current schema. Additionally, ensure that the titles and resource identifiers are correct in DBpedia.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,59,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaito ?deathPlaceFather
WHERE {
  # Saitō Hajime's birthplace and war he commanded
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaito .
  
  # Find a war that is a military conflict, event, and societal event
  ?war dbo:commander dbr:Saitō_Hajime ;
       a dbo:MilitaryConflict, dbo:Event, dbo:SocietalEvent .

  # Matsudaira Tadamasa's father
  dbr:Matsudaira_Tadamasa dbo:father ?father .
  
  # Father is a politician and office holder
  ?father a dbo:Politician, dbo:OfficeHolder ;
          dbo:deathPlace ?deathPlaceFather .
}
```",6,11,7,3,2,3,3,71,0,0,1,0,0.0,0
528,48,test,"Give me the force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force ?war WHERE {
  # Find Narciso Campero Leyes and his associated military force
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Narciso Campero Leyes"" ;
          dbo:militaryForce ?force .

  # Find wars or societal events in Chile involving the military force
  ?war dbo:location dbr:Chile ;
       dbo:participatingMilitaryUnit ?force .
}
```",5,6,6,3,2,3,3,71,0,0,4,0,0.0,0
488,51,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/leader> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration
WHERE {
  # Yūki Hideyasu's father who is a politician
  ?yukiHideyasu dbr:Yūki_Hideyasu#parent ?fatherYuki .
  ?fatherYuki dbo:occupation dbr:Politician .

  # Death place of Yūki Hideyasu's father
  ?fatherYuki dbo:deathPlace ?deathPlace .

  # Tokugawa Masako's spouse who is royalty
  ?tokugawaMasako dbr:Tokugawa_Masako#spouse ?spouse .
  ?spouse dbo:occupation dbr:Royalty .

  # Administration of the spouse's father
  ?spouse dbr:Tokugawa_Masako#parent ?fatherSpouse .
  ?fatherSpouse dbo:positionHeld ?administration .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
427,57,test,"Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?partyProdi ?partyFather ?partitoPopolareItaliano
WHERE {
  # Romano Prodi's political party
  OPTIONAL { 
    dbr:Romano_Prodi dbo:politicalParty ?partyProdi .
  }

  # Romano Prodi's father and his political party
  OPTIONAL {
    dbr:Romano_Prodi dbo:father ?father .
    ?father dbo:politicalAffiliation ?partyFather .
  }
  
  # Partito Popolare Italiano as a political party
  dbr:Partito_Popolare_Italiano dbo:politicalParty ?partitoPopolareItaliano .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
498,8,test,"Give me the band of the member, that is an artist, of Mortician (band) and band of Malevolent Creation.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?otherBand WHERE {
  # Find members of Mortician
  ?morticianMember dbo:band dbr:Mortician .
  
  # Find members of Malevolent Creation
  ?malevolentCreationMember dbo:band dbr:Malevolent_Creation .

  # Ensure the member is an artist and common to both bands
  FILTER (?morticianMember = ?malevolentCreationMember)
  FILTER EXISTS { ?member dbo:occupation dbr:Artist . }

  # Find other bands that this member has been part of
  ?otherBand dbo:bandMember ?member .
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
485,23,test,"Give me the entity in the region, that is a country, of Western European Time and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?birthPlaceRegion
WHERE {
  # Find a country in the region of Western European Time
  ?region rdfs:label ""Western European Time""@en .
  ?country dbo:timeZone ?region ;
           a dbo:Country .

  # Find the birthplace region of Joseph Whitaker (naturalist)
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?birthPlace .
  ?birthPlaceRegion rdfs:label ?birthPlaceLabel ;
                   dbo:country ?birthPlaceCountry .
  
  FILTER(CONTAINS(LCASE(?birthPlaceLabel), ""region""))
}
```",4,6,5,2,2,2,3,28,0,0,357,0,0.0,0
547,30,test,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?burialPlace WHERE {
  # James Burton (Egyptologist)
  { 
    VALUES ?person { dbr:James_Burton_(Egyptologist) }
    OPTIONAL { ?person dbo:name ?name . FILTER(lang(?name) = 'en') }
    OPTIONAL { ?person dbo:placeOfBurial ?burialPlace . }
  }

  UNION

  # Simon Cadell
  {
    VALUES ?person { dbr:Simon_Cadell }
    OPTIONAL { ?person dbo:name ?name . FILTER(lang(?name) = 'en') }
    OPTIONAL { ?person dbo:placeOfBurial ?burialPlace . }
  }

  UNION

  # Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    OPTIONAL { ?person dbo:name ?name . FILTER(lang(?name) = 'en') }
    OPTIONAL { ?person dbo:placeOfBurial ?burialPlace . }
  }
}
ORDER BY ?person
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,40,test,Give me the person decedent at the work of the author of French Algeria and person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?v1 <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the author of ""French Algeria""
  ?author dbo:title ""French Algeria""@en .
  
  # Ensure this person is Eugène Étienne
  ?author foaf:name ""Eugène Étienne"" .

  # Check if this person died in Algiers
  ?author dbo:deathPlace dbr:Algiers .

  # Find a commander in the Franco-Hova Wars
  ?commander dbo:occupation ""Military Commander""@en .
  ?commander dbo:participatedIn dbr:Franco_Hova_Wars .

  # Ensure this person is Joseph Gallieni
  ?commander foaf:name ""Joseph Gallieni"" .

  # Check if the same person fits both roles
  FILTER (?author = ?commander)
  
  BIND(?author AS ?person)
}
```

This query attempts to find a single individual who matches all the specified criteria. However, based on historical records, Eugène Étienne and Joseph Gallieni are distinct individuals, so this query might not return results unless there is an error in the assumptions or additional context.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
54,66,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapateChild dbo:childOf dbr:Thihapate_of_Mohnyin ;
                  a dbo:Monarch ;
                  dbo:officeHolder true .

  # Narapati I of Ava's child
  ?narapatiChild dbo:childOf dbr:Narapati_I_of_Ava .

  # Soe Min Wimala Dewi's father
  ?soeminFather dbo:parent dbr:Soe_Min_Wimala_Dewi .

  # The person we are interested in is the child of Thihapate's child and Narapati I's child, and also a child of Soe Min's father
  ?person dbo:childOf ?thihapateChild ;
          dbo:childOf ?narapatiChild ;
          dbo:childOf ?soeminFather .

  # Find the predecessor of this person
  ?predecessor dbo:successor ?person .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
92,50,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:starring ?actor .
  
  FILTER (str(?movie) = ""Return_to_Nuke'_Em_High_Volume_1"")

  # Ensure this actor is also a musical artist
  ?actor dbo:occupation dbr:Musical_artist .

  # Find the band associated with this artist that includes Joseph Michael Furney
  ?band dbo:member ?artist .
  ?band dbo:member dbr:Joseph_Michael_Furney .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
54,27,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             foaf:name ""Thihapate of Mohnyin""@en .

  # Step 2: Find his child who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:RoyalFamilyMember, dbo:OfficeHolder .

  # Step 3: Determine the predecessor of that child
  ?officeHolderPosition dbo:positionHeldBy ?child .
  ?predecessor dbo:positionHeldBy ?previousPerson .
  ?officeHolderPosition dbo:successorOf ?previousPerson .
  
  FILTER(?previousPerson != ?child)
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
314,25,test,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v4 . ?result <http://dbpedia.org/ontology/restingPlace> ?v3 . ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Awardee of Sergei Makovetsky's award
  ?person dbo:awardReceived dbr:Sergei_Makovetsky_Award .
  
  # Commander in the Spanish Civil War
  ?person dbo:occupation dbr:Commander_in_the_Spanish_Civil_War .

  # Deceased at the headquarters of House of Sombrerete
  ?person dbo:deathPlace dbr:Headquarters_of_House_of_Sombrerete .
}
```

This query assumes that there are specific DBpedia resources for Sergei Makovetsky's award, the role of a commander in the Spanish Civil War, and the headquarters of House of Sombrerete. You may need to adjust these resource identifiers based on actual DBpedia entries.",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
767,60,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?fictionalCharacter
WHERE {
  # Dustin Lynch as writer of ""Where It's At""
  dbr:Dustin_Lynch dbo:album dbr:Where_It%27s_At_(Dustin_Lynch_album) .
  
  # Find an entity in his administration that is a settlement
  ?administration dbo:administrator dbr:Dustin_Lynch .
  ?administration dbo:settlement ?settlement .
  FILTER (isLiteral(?settlement) = false)

  # Matthew Burland's alter ego, which is a fictional character
  dbr:Matthew_Burland dbo:fictionalCharacter ?fictionalCharacter .
}
```",6,8,7,3,2,3,3,71,0,0,8,0,0.0,0
547,59,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of the show with Emily Richard.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?grandchildRestingPlace WHERE {
    # Find William Haliburton's children
    ?child dbo:parent dbr:William_Haliburton .
    
    # Find grandchildren (children of the above children)
    ?grandchild dbo:parent ?child .

    # Get the resting place of the grandchild
    OPTIONAL { ?grandchild dbo:placeOfBurial ?grandchildRestingPlace . }
}

UNION

# Part 2: Resting place of an actor from a show with Emily Richard
SELECT ?actorRestingPlace WHERE {
    # Find shows featuring Emily Richard
    ?show dbo:starring dbr:Emily_Richard .

    # Find actors in those shows
    ?show dbo:starring ?actor .

    # Get the resting place of the actor
    OPTIONAL { ?actor dbo:placeOfBurial ?actorRestingPlace . }
}",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
251,27,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of Battle of Marengo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?partyAdministrationLocation ?battleLocation
WHERE {
  # Death place of the author of ""The Twelve Abbots of Challant""
  ?author dbo:title ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?deathPlace .

  # Administration location of the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbp:country dbr:Sicily ;
         dbp:headquarters ?partyAdministrationLocation .

  # Location of the Battle of Marengo
  ?battle dbo:title ""Battle of Marengo""@en .
  ?battle dbo:location ?battleLocation .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
747,20,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song).,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  # Find the person born on April 29, 1985
  ?person a dbo:Person ;
          dbp:birthday ""1985-04-29""^^xsd:date .

  # Find the writer of the song ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo (Hardwell song)""@en .
  
  # Ensure the writer is a person and find their associated band
  ?writer a dbo:Person ;
          dbo:musicArtist ?band .

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
712,17,test,Give me the capital of South Russia (1919–1920) and resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Capital of South Russia (1919–1920)
  VALUES ?capital { ""Krasnodar"" }

  # Resting place of a notable Soviet Union awardee
  OPTIONAL {
    ?person dbo:award ""Soviet Union award"". 
    ?person dbo:deathPlace ?restingPlace.
    FILTER(CONTAINS(LCASE(?person), ""soviet union show""))
  }
}
```

This query assumes:
- The capital of South Russia during the specified period is Krasnodar.
- There exists a DBpedia entry for a person who was an awardee of a Soviet Union show, and their resting place can be queried.",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
16,56,test,Give me the person born as the birth name of the alumnus of Ohio State University and spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
  ?spouse dbo:spouse dbr:Ted_McGinley ;
          dbo:profession dbr:Actress .
  ?alumnus dbp:spouse ?spouse .
  ?person rdfs:label ?birthName .
  FILTER (CONTAINS(LCASE(?birthName), ""actress""))
  FILTER (?person = ?spouse)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
959,54,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?university ?leaderCountry ?manager
WHERE {
  # Eiji Ōtsuka's alma mater
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .
  
  # Ensure the university is Japanese, an organization, a university, and an educational institution
  ?university dbo:country dbr:Japan ;
              rdf:type dbo:Organisation ;
              rdf:type dbo:University ;
              rdf:type dbo:EducationalInstitution .

  # Leader of the 2010 Japanese House of Councillors election
  ?election dbp:electionYear ""2010"" ;
            dbp:country dbr:Japan .
  
  ?leader dbp:officeHolderOf ?election ;
          dbo:nativePlace ?nativePlace .
  
  # Ensure the leader's native place is a country
  ?nativePlace rdf:type dbo:Country .

  # Leader's residence (country)
  ?leader dbo:residence ?leaderCountry .

  # Manager of the 2013 Júbilo Iwata season
  ?team dbp:sportTeam ""Júbilo Iwata"" ;
        dbp:season ""2013"" .
  
  ?manager dbp:manages ?team .

}
```",6,12,7,3,3,3,3,71,0,0,1,0,0.0,0
801,47,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/ontology/producer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?producer WHERE {
  # Find the artist with alter ego ""The Shadow""
  ?artist dbo:alterEgo dbr:The_Shadow .
  
  # Ensure the artist is a musical artist and rapper
  ?artist rdf:type dbo:MusicalArtist ;
          rdfs:label ?name .
  FILTER CONTAINS(LCASE(?name), ""rapper"") .

  # Find works that are both songs and musical compositions
  ?work dbo:performer ?artist ;
        rdf:type dbo:Songs ;
        dbo:musicComposition ?composition .
  
  # Retrieve the producer of these works
  ?work dbo:producer ?producer .
}
```",5,9,6,3,2,3,3,71,0,0,473,0,0.0,0
488,70,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/deathPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/property/father> ?v7 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?birthPlace ?deathPlace
WHERE {
  # Tokugawa Masako and her spouse
  dbr:Tokugawa_Masako dbo:spouse ?spouse .
  
  # Spouse's father (royalty)
  ?spouse dbo:father ?fatherOfSpouse .
  ?fatherOfSpouse a dbo:Monarch ;
                 dbo:countryAdministered ?administration .

  # Boshin War commander
  ?commander dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?commander dbo:participatedIn dbr:Boshin_War } .

  # Matsudaira Tadamasa's father (office holder)
  dbr:Matsudaira_Tadamasa dbo:father ?fatherOfTadamasa .
  ?fatherOfTadamasa a dbo:OfficeHolder ;
                   dbo:father ?grandFatherOfTadamasa .

  # Grandfather of Matsudaira Tadamasa (politician)
  ?grandFatherOfTadamasa a dbo:Politician ;
                         dbo:deathPlace ?deathPlace .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
285,16,test,Give me the parent of the child of Tina Onassis Niarchos and spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Tina Onassis Niarchos's child
  ?child dbo:parent dbr:Tina_Onassis_Niarchos .
  
  # Parent of the child (Tina herself)
  ?tina dbo:child ?child .

  # Spouse of Tina Onassis Niarchos
  ?tina dbo:spouse ?spouse .
}
```",4,4,5,2,2,3,2,20,2,3,0,0.4,1.0,0.5714285714285715
659,70,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find events involving Rutger Jan Schimmelpenninck and Arthur Wellesley
  ?event dbo:type dbr:Military_conflict ;
         dbo:commander dbr:Rutger_Jan_Schimmelpenninck ;
         dbo:commander dbr:Arthur_Wellesley_1st_Duke_of_Wellington .

  # Find the military force associated with these events
  ?militaryForce dbo:type dbr:Military_force ;
                 dbo:participatedIn ?event .

  # Ensure the event is a societal event and a military conflict
  ?event dbo:type dbr:Societal_event .

  # Check for involvement of Polish Horse
  ?polishHorse dbo:type dbr:Military_unit, dbr:Organisation ;
               rdfs:label ""Polish Horse""@en .
  
  ?militaryForce dbo:participatedIn ?event ;
                 dbo:member ?polishHorse .
}
```",8,15,9,3,3,3,3,71,0,0,15,0,0.0,0
328,59,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:commanderOf dbr:Budapest_offensive_(1944–45) .
  ?person dbo:award dbr:Commanders_Award_for_the_Volcano_and_Ryukyu_Islands_campaign .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```

This query assumes:
- `dbo:commanderOf` is the property linking a person to their command role in Budapest.
- `dbo:award` links a person to receiving the Commander's Award for the Volcano and Ryukyu Islands campaign.
- The resources `dbr:Budapest_offensive_(1944–45)` and `dbr:Commanders_Award_for_the_Volcano_and_Ryukyu_Islands_campaign` are placeholders for the actual DBpedia resources representing these events/awards.",6,6,7,3,2,3,3,71,0,0,15,0,0.0,0
54,64,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan and his lineage
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  
  ?child1 dbo:spouse|dbo:childOf ?thinkhaya .
  ?grandchild dbo:spouse|dbo:childOf ?child1 .

  # Predecessor of Thinkhaya's grandchild
  ?predecessor dbo:succession ?grandchild .

  # Thihapate of Mohnyin and his lineage
  ?thihapate a dbo:Monarch ;
              foaf:name ""Thihapate""@en .
  
  ?parent dbr:Thado_Minsaw_of_Prome dbo:spouse|dbo:childOf ?thihapate .

  # The person we are looking for
  ?person rdf:type dbo:Monarch, dbo:OfficeHolder ;
          foaf:name ?predecessor .

  FILTER (?person = ?child1)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
232,61,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/residence> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeOfBritishSettlement
WHERE {
  # Step 1: Identify the professional actor, narrator, and producer
  ?professional a dbo:Actor ;
                a dbo:Narrator ;
                a dbo:Producer .

  # Step 2: Find their claim to fame (film and military conflict)
  ?claimToFame dbo:genre dbr:Film ;
               dbo:conflict dbr:MilitaryConflict .
  
  ?professional dbo:claimToFame ?claimToFame .

  # Step 3: Determine the native of France who is a politician and office holder
  ?politician dbo:nationality dbr:France ;
              a dbo:Politician ;
              a dbo:OfficeHolder .
  
  ?claimToFame dbo:associatedWith ?politician .

  # Step 4: Locate the residence of this French politician that is a settlement and British
  ?residence dbo:settlementType dbr:Settlement ;
             dbo:country dbr:UnitedKingdom ;
             dbo:native ?politician .
  
  # Step 5: Find the native of this British settlement
  ?nativeOfBritishSettlement dbo:nativePlace ?residence .
}
```",6,12,7,3,2,3,3,71,0,0,1,0,0.0,0
184,45,test,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT DISTINCT ?parentOfGéza ?childOfParentOfMargaret ?childOfJosephAugust

WHERE {
  # Parent of Géza von Habsburg
  ?géza a dbo:Person ;
        foaf:name ""Géza von Habsburg"" .
  ?géza dbo:parent ?parentOfGéza .

  # Child of the parent of Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Archduchess Margaret of Austria""@en ;
            dbo:birthdayYear ""1925""^^xsd:gYear .
  ?parentOfMargaret dbo:child ?margaret .
  ?parentOfMargaret dbo:child ?childOfParentOfMargaret .

  # Child of Archduke Joseph August of Austria
  ?josephAugust a dbo:Person ;
                foaf:name ""Archduke Joseph August of Austria""@en .
  ?josephAugust dbo:child ?childOfJosephAugust .
}",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
747,58,test,Give me the person born on 1985-04-29 and band of the writer of Apollo (Hardwell song) and band of the person born as the persona of Shèna.,"SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v5 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?personBorn1985-04-29 ?bandOfApolloWriter ?bandOfShenaPersona
WHERE {
  # Find the person born on 1985-04-29
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  
  # Get the band of the writer of Apollo by Hardwell
  dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?apolloWriter .
  ?apolloWriter dbo:band ?bandOfApolloWriter .

  # Find the persona of Shèna and get their band
  dbr:Shèna dbo:birthName ?shenaPersona .
  ?shenaPersona dbo:band ?bandOfShenaPersona .
  
  # Bind results to variables for output
  BIND(?person AS ?personBorn1985-04-29)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,60,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # War involving Saitō Hajime (assuming he was involved in the Boshin War)
  OPTIONAL { 
    dbr:Boshin_War dbo:participant dbr:Saitō_Hajime .
  }

  # Tokugawa Masako's father
  dbr:Tokugawa_Masako dbo:father ?father .

  # Father of Tokugawa Masako's spouse (assuming her spouse is Nogi Maresuke)
  OPTIONAL {
    dbr:Nogi_Maresuke dbo:spouse dbr:Tokugawa_Masako .
    ?father dbo:administration ?administration .
  }
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
54,24,test,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Narapati I of Ava and his child
  ?narapatiI a dbo:Monarch ;
             dbo:spouse ?spouse ;
             dbo:child ?child .

  FILTER (str(?narapatiI) = ""Narapati_I_of_Ava"")

  # Find the parent of Narapati I's child
  ?child dbo:parent ?parent .

  # Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta a dbo:Monarch ;
           dbo:predecessor ?predecessor .

  FILTER (str(?ameitta) = ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"")

  # Ensure the parent is also the predecessor of Ameitta Thiri Maha Dhamma Dewi
  FILTER (?parent = ?predecessor)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
328,56,test,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Find commanders in the Eastern Front during World War II
  ?commander dbo:positionTitle ""Commander of the Eastern Front""@en .
  ?commander dbo:occupation dbr:World_War_II .

  # Check if they received an award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbp:recipient ?commander ;
         dbp:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  
  # Ensure the individual led a government agency
  ?agency dbo:head ?commander ;
          dbo:type dbr:Government_agency .

  # Verify if they were a leader of Gustav Jonson
  ?jonson dbo:leader ?commander ;
          dbp:name ""Gustav Jonson""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
534,17,test,"Give me the birth place of Garret FitzGerald and headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?v3 . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?venue ?headquarters WHERE {
  # Garret FitzGerald's birthplace
  dbr:Garrett_FitzGerald dbo:birthPlace ?birthPlace .

  # Venue of the 2012 Pro12 Grand Final
  dbr:2012_Pro12_Grand_Final dbo:location ?venue .

  # Owner of the venue and their headquarters
  ?venue dbo:owner ?owner .
  ?owner dbo:headquarters ?headquarters .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
659,65,test,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:participatedInMilitaryUnit dbr:Polish_Legion .
  ?event dbo:commandedBy ?commander .

  OPTIONAL { 
    ?commander rdfs:label ""Arthur Wellesley""@en .
  }

  OPTIONAL {
    ?event dbo:participatedInMilitaryForce dbr:Dutch_Army .
    ?dutchEvent dbo:type dbr:Military_conflict .
    ?dutchEvent dbo:commandedBy ?schimmelpenninck .
    ?schimmelpenninck rdfs:label ""Rutger Jan Schimmelpenninck""@en .
  }
}
```",7,14,8,3,3,3,3,71,0,0,15,0,0.0,0
994,59,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find Fredrik Thordendal's band (organisation)
  dbr:Fredrik_Thordendal dbo:memberOf ?band .

  # Step 2: Identify a band member who is part of another band and group
  ?bandMember dbo:memberOf ?band .
  ?bandMember dbo:memberOf ?otherBand .
  ?bandMember dbo:memberOf ?group .

  # Step 3: Find the musical artist associated with this band member
  ?bandMember dbo:musicalArtist ?artist1 .

  # Step 4: Find the associated musical artist of ""Watchtower""
  dbr:Watchtower dbo:musicalArtist ?watchtowerArtist .
  
  # Step 5: Find the associated musical artist of both results from steps 3 and 4
  ?watchtowerArtist dbo:associatedMusicalArtist ?artist2 .
  ?artist1 dbo:associatedMusicalArtist ?finalArtist .
}
```",6,10,7,3,2,3,3,71,0,0,5,0,0.0,0
712,20,test,"Give me the resting place of the awardee of the show of Soviet Union and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?award dbo:awardee ?person .
  ?person dbo:nationality dbr:Soviet_Union .
  
  ?militaryForce a dbo:MilitaryUnit ;
                 dbo:country dbr:Russia ; # Assuming the military force is Russian
                 dbo:capitalCity ?capital .

  ?event dbo:location ?place .
  ?event rdfs:label ""Vyoshenskaya Uprising""@en .

  ?person dbo:deathPlace ?restingPlace .
}
```

This query attempts to find:

- An award given in the Soviet Union.
- The awardee of that award who is linked to a military force with Russia as its country (assuming the military force is Russian).
- The capital city associated with this military force.
- The event ""Vyoshenskaya Uprising"" and its location.
- The resting place of the person.

Please note that specific details like the exact award or military unit might need further refinement based on available DBpedia data.",6,8,7,3,2,3,2,20,0,0,1,0,0.0,0
435,28,test,"Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v5 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?region ?description
WHERE {
  # Works of Halldór Laxness
  dbr:Halld%C3%B3r_Laxness dbo:literaryWork ?work .

  # Region associated with Bombali Shebora Chiefdom (Sierra Leone)
  dbr:Bombali_Shebora_Chowchiefdom dbo:locatedIn dbr:Sierra_Leone .
  dbr:Sierra_Leone dbo:timeZone ?region .

  # Information about Iceland
  dbr:Iceland dbo:officialName ""Land of Fire and Ice""@is ;
              a dbo:Settlement, dbo:Town .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
534,18,test,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex and headquarter of the owner of RDS Arena.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v3 <http://dbpedia.org/ontology/headquarter> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  # Step 1: Identify the native politician of Essex
  ?essexPolitician a dbo:Person ;
                  dbo:nationality dbr:United_Kingdom ;
                  dbo:residence dbr:Essex ;
                  dbo:occupation dbo:Politician .

  # Step 2: Find the owner of RDS Arena
  ?rdsArenaOwner dbo:location dbr:RDS_Arena .

  # Step 3: Determine the headquarter location of this owner
  ?headquarters dbp:headquartersLocation ?ownerHeadquarters ;
               dbo:organization ?rdsArenaOwner .

  # Step 4: Identify the child who is a politician and office holder
  ?child dbo:parent ?essexPolitician ;
         dbo:occupation [a dbo:OfficeHolder, dbo:Politician] .

  # Step 5: Find the birthplace of this child
  ?child dbp:birthPlace ?birthPlace .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
339,18,test,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
    # Grand Duchess Elena Vladimirovna of Russia's child
    ?child1 dbo:parent <http://dbpedia.org/resource/Elena_Vladimirovna_of_Russia> .
    
    # Frederick VIII of Denmark's predecessor and their grandchild
    ?predecessor dbp:successor <http://dbpedia.org/resource/Frederick_8,_King_of_Denmark> .
    ?grandchild1 dbo:parent ?child2 .
    ?child2 dbo:parent ?predecessor .

    # Find the father of both individuals
    ?father dbo:spouse ?mother1, ?mother2 .
    ?mother1 dbo:parent ?child1 .
    ?mother2 dbo:parent ?grandchild1 .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
666,20,test,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England and player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v4 <http://dbpedia.org/property/nickname> ?v5 . ?result <http://dbpedia.org/property/nickname> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v4 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nickname WHERE {
  # Find Leonid Slutsky
  dbr:Leonid_Slutsky a dbo:SportsManager ;
                     dbo:managedTeam ?team .

  # Ensure the team is a soccer club in England
  ?team a dbo:SoccerClub ;
        dbp:country dbr:England .

  # Retrieve the nickname of the club
  ?team dbp:nickname ?nickname .
}
```",6,12,7,3,2,3,2,20,0,0,2,0,0.0,0
16,67,test,Give me the professional in the profession of the actor of Unnatural (TV series) and spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/occupation> ?v6 . ?v1 <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/occupation> ?v6 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?professional WHERE {
  # Actor of ""Unnatural"" (TV series)
  ?actor dbo:profession dbr:Actor ;
         dbo:workFeaturedIn dbr:Unnatural_(TV_series) .

  # Spouse of Ted McGinley
  ?spouse foaf:name ?name ;
          dbo:spouse dbr:Ted_McGinley .

  # Person born as the birth name of an alumnus of Ohio State University
  ?person foaf:name ?name ;
          dbo:birthName ?birthName .
  
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           foaf:name ?birthName .

  # Joining conditions
  FILTER (?actor = ?spouse)
  FILTER (?spouse = ?person)
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
378,52,test,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?crillonWar ?crillonFame ?gahnWar
WHERE {
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:commanderOf ?crillonWar .
  
  OPTIONAL { 
    ?crillonFame dbo:wikiPageRedirects dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón .
    ?crillonFame rdfs:label ?fameLabel .
    FILTER (LANG(?fameLabel) = ""en"")
  }
  
  # Carl Pontus Gahn
  dbr:C_P_Gahn dbo:birthName ?gahnBirthName .
  OPTIONAL {
    ?gahnWar dbo:wikiPageRedirects dbr:C_P_Gahn .
    ?gahnWar rdfs:label ?warLabel .
    FILTER (LANG(?warLabel) = ""en"")
  }
}
```

This query does the following:

- Retrieves the war in which Louis des Balbes de Berton de Crillon was a commander (`?crillonWar`).
- Attempts to find any notable claim to fame associated with him (`?crillonFame`), using redirects if necessary.
- Retrieves the birth name of Carl Pontus Gahn and finds any wars he might be associated with (`?gahnWar`).",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
328,60,test,"Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?campaign dbo:name ""Volcano and Ryukyu Islands campaign"" .
  ?award dbo:relatedToCampaign ?campaign .

  ?office dbo:leader ?gustavJonson .
  ?gustavJonson a dbo:OfficeHolder ;
                foaf:name ""Gustav Jonson"" .
  
  ?governmentAgency dbo:head ?office .
}
```

This query attempts to find the awardee of an award related to the specified campaign and connects it to Gustav Jonson through his leadership role in a government agency.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
391,60,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Dolly Parton""@en ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace ?birthPlace .
  
  ?birthPlace rdfs:label ?placeLabel ;
             geo:lat ?lat ;
             geo:long ?long .

  FILTER (lang(?placeLabel) = 'en' && contains(lcase(str(?placeLabel)), ""jackson, tennessee""))

  OPTIONAL {
    ?film dbo:starring ?person ;
          a dbo:Film .
    
    ?work dbo:basedOn ?film ;
          a dbo:Work .
    
    ?tvShow dbo:basedOn ?film ;
            a dbo:TelevisionSeries .
  }
  
  BIND(?birthPlace AS ?nativePlace)
}
```

This query attempts to:

- Identify Dolly Parton as the person.
- Find her birthplace and filter it to ensure it is Jackson, Tennessee.
- Check if she starred in a film that is also considered a work and has been adapted into a television series.",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
184,46,test,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of the child of Archduke Joseph Karl of Austria.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find Archduke Joseph Karl of Austria's child
  ?archdukeChild dbo:childOf dbr:Archduke_Joseph_Karl_of_Austria .

  # Step 2: Find the child's child who is a settlement at elevation 96.0
  ?settlement dbo:childOf ?archdukeChild ;
              a dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float .

  # Step 3: Identify the landmark and its native
  ?landmark dbo:settlement ?settlement .
  ?native dbo:nativePlace ?landmark .

  # Step 4: Find the parent of this native
  ?parent dbo:child ?native .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,53,test,Give me the spouse of the father of Merneptah and parent of Henuttawy (19th dynasty) and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Merneptah's father
  ?merneptahFather dbo:child dbr:Merneptah .
  
  # Spouse of Merneptah's father
  ?merneptahFather dbo:spouse ?spouse .

  # Parent of Henuttawy (19th dynasty)
  ?spouse dbo:parent dbr:Henuttawy_(19th_dynasty) .

  # Amun-her-khepeshef's spouse and their child
  ?amunHerKhepeshefSpouse dbo:child ?amunHerKhepeshef .
  ?amunHerKhepeshefSpouse dbo:spouse ?amunHerKhepeshef .
  
  # The child of Amun-her-khepeshef's spouse
  ?amunHerKhepeshefChild dbo:parent ?amunHerKhepeshefSpouse .

  # Ensure the spouse is also a parent of this child
  ?spouse dbo:parent ?amunHerKhepeshefChild .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
488,46,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?birthPlace WHERE {
  # Yūki Hideyasu's father who is a politician
  dbr:Yūki_Hideyasu dbo:father ?father .
  ?father rdf:type dbo:Politician .

  # Death place of Yūki Hideyasu's father
  ?father dbo:deathPlace ?deathPlace .

  # Saitō Hajime and the war he was involved in
  dbr:Saitō_Hajime dbo:militaryConflict ?war .
  ?war rdf:type dbo:MilitaryConflict ;
       dbo:eventType ?eventType .

  FILTER(?eventType IN (dbr:Military_Conflict, dbr:Event, dbr:Societal_Event))

  # Commander of Saitō Hajime in the war
  ?war dbo:commander ?commander .

  # Birth place of the commander
  ?commander dbo:birthPlace ?birthPlace .
}
```",5,9,6,3,2,3,3,71,0,0,1,0,0.0,0
659,35,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck and his military force
  ?schimmelpenninck dbo:nationality dbr:Netherlands ;
                   dbo:occupation dbr:Military_person .
  
  # Arthur Wellesley, 1st Duke of Wellington and his military force
  ?wellington dbo:nationality dbr:United_Kingdom ;
              dbo:occupation dbr:Military_person .

  # Common military conflict or force
  ?militaryForce a dbo:MilitaryConflict ;
                 dbo:participatedInMilitaryConflicts ?schimmelpenninck, ?wellington .
  
  # Ensure it is categorized as an event and societal event
  ?militaryForce rdf:type dbo:Event ;
                 dbo:socialEvent true .
}
```

This query attempts to find a military conflict (`?militaryForce`) that both Rutger Jan Schimmelpenninck and Arthur Wellesley participated in, ensuring it is classified as an event and a societal event.",4,7,5,2,2,3,3,71,0,0,38,0,0.0,0
659,48,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:type dbr:Military_conflict .
  ?event dbo:participatedInMilitaryConflict dbr:Rutger_Jan_Schimmelpenninck .
  
  ?officeHolder dbo:positionTitle ?title .
  ?officeHolder dbo:country dbr:Kingdom_of_Ireland .
  ?officeHolder dbo:commander ?commander .

  FILTER EXISTS { ?commander dbo:officeHolder ?officeHolder }
}
```",5,9,6,3,2,3,3,71,0,0,40,0,0.0,0
64,8,test,"Give me the alma mater of Jovan Hristić and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?country
WHERE {
  # Find Jovan Hristić's alma mater
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Jovan Hristić"" ;
            dbo:almaMater ?almaMater .
  }

  # Find countries in the Central European Time region
  OPTIONAL {
    ?country a dbo:Country ;
             dbo:timeZone dbr:Central_European_Time .
  }
}
```",3,4,4,2,2,2,2,9,0,94,1,0.0,0.0,0
232,41,test,"Give me the native of London and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict ?parent WHERE {
  # Find Sean Pertwee
  VALUES ?seanPertwee { dbr:Sean_Pertwee }
  
  # Get films and military conflicts associated with Sean Pertwee
  OPTIONAL {
    ?seanPertwee dbo:film ?film .
  }
  OPTIONAL {
    ?seanPertwee dbo:militaryConflict ?conflict .
  }

  # Find his parent, John Devon Roland Pertwee
  ?seanPertwee dbo:parent ?parent .
  
  # Ensure the parent is John Devon Roland Pertwee
  FILTER(?parent = dbr:John_Devon_Roland_Pertwee)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
92,62,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band of Joseph Michael and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Step 1: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?film dbo:starring ?actor .
  FILTER(STRSTARTS(STR(?film), STR(dbr:Return_to_Nuke_'Em_High_Volume_1)))

  # Step 2: Find Joseph Michael's band and its members
  ?joseph dbo:bandMember ?band .
  FILTER(STRSTARTS(STR(?joseph), STR(dbr:Joseph_Michael_(musician))))
  
  ?band dbo:member ?bandMember .

  # Step 3: Find the reference artist to ""Nevermore (2006 film)""
  ?film2 dbo:referenceArtist ?refArtist .
  FILTER(STRSTARTS(STR(?film2), STR(dbr:Nevermore_\(2006_film\))))

  # Combine results to find the associated musical artist
  ?actor dbo:musicalArtist ?artist .
  ?bandMember = ?artist .
  ?refArtist = ?artist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
959,25,test,Give me the native of Japan and manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationality ?manager
WHERE {
  VALUES ?person { dbr:Takashi_Sekizuka }
  
  ?person dbo:nationality ?nationality .
  OPTIONAL { ?team dbo:player ?person . 
             ?team dbo:manager ?manager . }
}
```",3,3,4,2,2,3,3,71,0,0,6,0,0.0,0
427,61,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v5 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?prodiParty ?fatherParty WHERE {
  # Part 1: Romano Prodi's political party
  {
    SELECT ?prodiParty WHERE {
      dbr:Romano_Prodi dbo:birthName ""Romano Prodi""@en .
      OPTIONAL { dbr:Romano_Prodi dbo:officeHolder true . }
      OPTIONAL { dbr:Romano_Prodi dbo:politician true . }
      OPTIONAL { dbr:Romano_Prodi dbp:party ?prodiParty . }
    } LIMIT 1
  }

  # Part 2: Political party of the father of an MIT alumnus
  {
    SELECT ?fatherParty WHERE {
      ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
      ?alumnus dbo:parent ?father .
      OPTIONAL { ?father dbo:officeHolder true . }
      OPTIONAL { ?father dbo:politician true . }
      OPTIONAL { ?father dbp:party ?fatherParty . }
    } LIMIT 1
  }
}",6,8,7,3,2,3,3,71,0,0,3,0,0.0,0
626,18,test,"Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
    # Find an award received by Aleksey Petrovich Yermolov
    ?award dbo:recipient dbr:Aleksey_Petrovich_Yermolov .
    
    # Find the commander in the Battle of Paris (1814)
    ?battle dbo:commander ?commander .
    FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Paris_(1814)""))
    
    # Find a military conflict involving this commander
    ?conflict dbo:commander ?commander .
    
    # The awardee of the award is also involved in the same military conflict as the commander
    ?award dbo:recipient ?awardee .
    FILTER(?awardee != dbr:Aleksey_Petrovich_Yermolov)
}
```",5,6,6,3,2,3,2,20,0,0,23,0,0.0,0
959,48,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of Takashi Sekizuka.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear .
  ?person dbo:managerOfTeam ?team .
  ?team dbo:member dbr:Takashi_Sekizuka .

  ?person dbo:almaMater ?almaMater .
  
  ?almaMater a dbo:University ;
             dbo:country dbr:Japan ;
             a dbo:EducationalOrganization .
}
```

This query does the following:
- Selects individuals born in 1958.
- Checks if they manage a team that includes Takashi Sekizuka as a member.
- Identifies their alma mater, ensuring it is a Japanese university and an educational organization.",5,9,6,3,2,3,3,71,0,0,3,0,0.0,0
754,20,test,Give me the parent of the child of the reference to Ram Khamhaeng the Great and parent of the parent of the parent of Min Linka.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v2 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?result <http://dbpedia.org/ontology/child> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?result WHERE {
  # Find the child of Ram Khamhaeng the Great
  ?ram_khamhaeng dbo:child ?child_of_ram.

  # Find the parent of Min Linka's great-great-grandparent
  ?min_linka dbo:parent ?grandparent.
  ?grandparent dbo:parent ?great_grandparent.
  ?great_grandparent dbo:parent ?great_great_grandparent.
  ?great_great_grandparent dbo:parent ?ancestor.

  # Find the parent of the child of Ram Khamhaeng
  ?child_of_ram dbo:parent ?parent_of_child.

  # Find the parent of the ancestor (which is Min Linka's great-great-grandparent)
  ?ancestor dbo:parent ?result.
}
```",6,6,7,3,2,3,2,20,0,20,1,0.0,0.0,0
528,62,test,"Give me the force of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v3 <http://dbpedia.org/ontology/battle> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoCamperoForce ?societalEvent ?war ?commander WHERE {
  # Narciso Campero's involvement in a military force
  OPTIONAL { 
    dbr:Narciso_Campero dbo:militaryCommanderOf ?force .
    ?force dbo:forceStrength ?narcisoCamperoForce .
  }

  # Military force related to a societal event in Chile
  OPTIONAL {
    ?event dbo:location dbr:Chile ;
           dbo:type dbr:SocietalEvent .
    ?force dbo:involvedIn ?event .
    BIND(?event AS ?societalEvent)
  }

  # War involving a commander
  OPTIONAL {
    ?war dbo:commander ?commander .
    FILTER EXISTS { ?war dbo:date ?date . FILTER (STRSTARTS(STR(?date), ""01-09"")) }
  }
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
767,70,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/state> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?settlement ?fictionalCharacter ?university
WHERE {
  # Find the administration that includes Green as a settlement
  ?administration dbo:settlement dbr:Green .
  
  # Find the fictional character associated with Matthew Burland
  ?fictionalCharacter dbo:alterEgoOf dbr:Matthew_Burland .

  # Find the alma mater of George Kilbon Nash
  ?university dbo:almaMater dbr:George_Kilbon_Nash .

  # Link these entities to the administration
  ?administration dbo:referenceTo ?fictionalCharacter .
  ?administration dbo:referenceTo ?university .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
392,25,test,"Give me the province of Schio and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v4 . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?province ?region ?sportsEvent ?entity ?country
WHERE {
  # Province of Schio
  dbr:Schio dbo:locatedIn ?province .

  # Region of the time zone for Aguilar de Segarra
  dbr:Aguilar_de_Segarra dbo:timeZone ?tz .
  ?tz dbo:region ?region .

  # Sports event in that region
  ?sportsEvent dbo:location ?region .

  # Entity in the region for Central European Time
  ?entity dbo:locatedIn ?region .
  ?tz2 dbo:name ""Central European Time"" .
  ?tz2 dbo:region ?region .

  # Country of that entity
  ?entity dbo:country ?country .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
360,23,test,"Give me the reference to the author of Blinded by the Light and writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?albumWriter WHERE {
  # Find the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light (dbo:composer|dbo:lyricist) ?author .

  # Find albums associated with Dave Flett and their writers
  ?album dbo:artist dbr:Dave_Flett ;
         dbo:writer ?albumWriter .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
547,45,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  VALUES (?person ?label) {
    (dbr:Gerald_Graham ""Gerald Graham"") 
    (dbr:James_Burton_(Egyptologist) ""James Burton (Egyptologist)"") 
    (dbr:Simon_Cadell ""Simon Cadell"")
  }
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```

This query uses the `VALUES` clause to specify the individuals of interest and attempts to retrieve their resting places using the `dbo:deathPlace` property.",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
391,51,test,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find works associated with Michael Ballhaus
  ?work dbo:director dbr:Michael_Ballhaus .
  
  # Get actors in these works
  ?work dbo:starring ?actor .

  # Find movies that are also television shows and works
  ?movie a dbo:Film ;
         dbo:genre dbr:Television_series ;
         dbo:starring ?actor .

  # Ensure the actor is involved in both contexts
}
```",5,9,6,3,2,3,3,71,0,0,11,0,0.0,0
391,59,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Step 1: Find Sherry Hormann's spouse
  ?spouse dbo:spouse dbr:Sherry_Hormann .
  
  # Step 2: Identify a work associated with the spouse
  ?work dbo:starring ?actor ;
        dbo:director ?spouse .

  # Step 3: Determine an actor associated with that work
  ?actor rdfs:label ?actorLabel .

  # Step 4: Find the nickname for Jackson, Tennessee and identify the figure
  dbr:Jackson,_Tennessee dbo:nickname ?nickname .
  ?figure dbo:nickName ?nickname ;
          dbo:birthPlace ?nativePlace .

  FILTER regex(?actorLabel, "".*"", ""i"") # Ensure actor label matches

}
```

This query assumes that:
- Sherry Hormann's spouse is directly linked in DBpedia.
- The work associated with the spouse has a starring role for an actor.
- Jackson, Tennessee has a nickname linked to a figure whose birthplace we want.",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,66,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as the birth name of the alumnus of Ohio State University.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v6 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v6 . ?result <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professional WHERE {
  # Satomi Ishihara's profession
  ?satomi dbo:profession ?profession .
  FILTER(STR(?satomi) = ""Satomi_Ishihara"")

  # Ted Martin McGinley and his spouse
  ?ted a dbo:Person ;
      dbp:birthday ""1966-10-26""^^xsd:date ;
      dbp:spouse ?spouse .

  # Alumnus of Ohio State University
  ?alumnus dbo:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
          dbp:birthName ?birthName .

  # Linking the spouse to both Ted and the alumnus
  ?spouse = ?professional .
  FILTER(STR(?ted) = ""Ted_Martin_McGinley"")
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
421,22,test,Give me the native of the birthplace of Samir Bekrić and band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native ?band ?award WHERE {
  # Step 1: Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:nativePlace ?birthplace .

  # Step 2: Find natives of that birthplace who are band members
  ?native dbo:nativePlace ?birthplace .
  ?native dbo:memberOfBand ?band .

  # Step 3: Connect the band to an awardee
  ?band dbo:award ?award .
}
```",4,4,5,2,2,2,3,28,0,0,2,0,0.0,0
54,30,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en .
  
  # Child of Thihapate who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:Royalty, dbo:OfficeHolder .

  # This child is the parent of Thado Minsaw of Prome
  ?child dbo:child dbr:Thado_Minsaw_of_Prome .

  # This child is also the child of Thinkhaya of Pagan
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  ?child dbo:parent ?thinkhaya .

  # Find predecessor of this child
  ?predecessor dbo:successor ?child .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,53,test,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warJoquinBlake ?claimToFameGibraltar ?warCarlPontusGahn WHERE {
  # Joaquín Blake's war involvement
  OPTIONAL { 
    dbr:Joaquín_Blake dbo:militaryConflict ?warJoquinBlake .
  }
  
  # Commander in Great Siege of Gibraltar and his claim to fame
  OPTIONAL {
    dbr:George_Arthur_Cumberland_Lowe dbo:militaryCommanderOf ?gibraltarEvent .
    ?gibraltarEvent rdfs:label ""Great_Siege_of_Gibraltar""@en .
    ?gibraltarEvent dbo:claimToFame ?claimToFameGibraltar .
  }
  
  # Carl Pontus Gahn's birth during a war
  OPTIONAL {
    dbr:C_P_Gahn dbo:birthDate ?birthDate .
    ?warCarlPontusGahn dbo:endYear ?endYear .
    FILTER (?birthDate <= ?endYear)
    ?warCarlPontusGahn rdfs:label ?warLabel .
    FILTER (LANG(?warLabel) = ""en"")
  }
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
801,59,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Find the artist with the alter ego ""The Shadow""
  ?artist a dbo:MusicalArtist ;
          dbo:alterEgo dbr:The_Shadow .

  # Identify musical works by this artist
  ?work dbo:performer ?artist ;
        a dbo:SongsAndMusicRecording ;
        a dbo:Work .

  # Retrieve the producer of these works
  ?work dbo:producer ?producer .
}
```",6,10,7,3,2,3,3,71,0,0,473,0,0.0,0
767,68,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v4 <http://dbpedia.org/property/leaderParty> ?v5 . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v7 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v5 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement ?writer ?almaMater
WHERE {
  # Alter ego of Black Hood
  ?blackHood dbo:alias ""Black Hood"" .
  ?blackHood dbo:alterEgo ?alterEgo .

  # Entity in the administration that is a settlement
  ?adminEntity a dbo:Settlement ;
              dbo:partOf ?settlement .

  # Writer of ""Where It's At""
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:lyricsBy ?writer .

  # Alma mater of George Kilbon Nash
  dbr:George_Kilbon_Nash dbo:almaMater ?university .
  ?university dbo:location ?settlement .

  # Linking the settlement to both entities
  ?adminEntity rdfs:label ?settlementLabel .
  FILTER (lang(?settlementLabel) = 'en')
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,66,test,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer WHERE {
  # Find the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get
    dbo:artist dbr:50_Cent ;
    dbo:track ?song .

  # Identify songs by 50 Cent on this album
  ?song dbo:composer ?producer .
  
  # Ensure the producer is a musical artist and has an alter ego ""The Shadow""
  ?producer a dbo:MusicalArtist ;
            dbp:alias dbr:The_Shadow .

  # Ensure the producer is associated with 50 Cent as a professional or writer
  OPTIONAL { ?producer dbo:associatedWith dbr:50_Cent }
}
```",7,14,8,3,3,3,3,71,0,0,1,0,0.0,0
378,32,test,Give me the war of the commander in Peninsular War and war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 WHERE {
  # Find the war associated with Arthur Wellesley, Duke of Wellington
  dbr:Athur_Wellesley_1st_Duke_of_Wellington dbo:commanderOf ?war1 .
  
  # Find the war associated with Carl Pontus Gahn
  OPTIONAL { 
    dbr:C_P_Gahn dbo:participatedIn ?war2 .
  }
}
```

This query does the following:
- Retrieves the war (`?war1`) in which Arthur Wellesley, Duke of Wellington, was a commander.
- Optionally retrieves any war (`?war2`) associated with Carl Pontus Gahn.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
9,23,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?organisation dbo:location dbr:Belfast .
  ?mayor dbo:positionHeld ?organisation ;
         a dbo:Politician .
  ?mayor dbp:education ?almaMater .
}
```",3,5,4,3,1,3,3,71,0,0,10,0,0.0,0
328,53,test,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Commander on the Eastern Front during World War II
  ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  
  # Leader of an office or government agency under Joseph Stalin
  ?office dbo:leader ?person ;
          dbo:headOfStateOrGovernment dbr:Joseph_Stalin .

  # Awardee for actions in the Volcano and Ryukyu Islands campaigns
  ?awards dbo:recipient ?person .
  
  FILTER EXISTS { 
    ?volcanoCampaign dbo:awardRecipient ?awards ;
                     dbo:name ""Volcano_Islands_campaign"" .
  }
  FILTER EXISTS {
    ?ryukyuCampaign dbo:awardRecipient ?awards ;
                    dbo:name ""Ryukyu_Islands_campaign"" .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
492,70,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personDecedent WHERE {
  # Joseph C. Satterthwaite's role
  dbr:Joseph_C._Satterthwaite dbo:positionHeld dbr:US_Assistant_Secretary_of_State_for_African_Affairs .

  # Commander in the Battle of Verdun
  ?commander dbo:event dbr:Battle_of_Verdun .
  
  # Person decedent at the capital of Khemis Miliana District
  ?personDecedent dbo:placeOfBirth dbr:Khemis_Miliana_District ;
                  dbo:capital dbr:Capital_of_Khemis_Miliana_District .

  # Linking the commander and person decedent
  ?commander dbo:deceased ?personDecedent .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
184,70,test,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.",SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v7 . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Archduke Ladislaus Philipp of Austria
  ?ladislaus a dbo:Person ;
             foaf:name ""Archduke Ladislaus Philipp of Austria"" .
  
  # Find his parent
  ?parentLadislaus dbo:child ?ladislaus .

  # Find the child of that parent (his sibling)
  ?siblingLadislaus dbo:child ?parentLadislaus .

  # Find the child of that sibling (his niece/nephew)
  ?nieceNephewLadislaus dbo:child ?siblingLadislaus .
  
  # Archduchess Margaret of Austria
  ?margaret a dbo:Person ;
            foaf:name ""Archduchess Margaret of Austria"" ;
            dbp:birthday ""1925-01-01""^^xsd:date .

  # Find her parent
  ?parentMargaret dbo:child ?margaret .

  # Find the child of that parent (her sibling)
  ?siblingMargaret dbo:child ?parentMargaret .

  # Find the child of that sibling (her niece/nephew)
  ?nieceNephewMargaret dbo:child ?siblingMargaret .
  
  # Native of Budapest
  ?budaPerson a dbo:Person ;
              dbp:nativePlace ""Budapest"" .

  # The person we are looking for is royalty and satisfies all conditions
  ?person a dbo:Royalty ;
          dbo:child ?nieceNephewLadislaus ;
          dbo:parent ?nieceNephewMargaret ;
          dbo:parent ?budaPerson .
}",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
492,58,test,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person
WHERE {
  # Person decedent at French Algeria
  ?person dbo:deathPlace dbr:French_Algeria .

  # Person decedent at the capital of Khemis Miliana District
  ?capital dbo:country dbr:Algeria .
  ?district dbo:capital ?capital .
  ?district rdfs:label ""Khemis Miliana District""@en .
  FILTER(LANG(?district) = 'en') .
  
  ?person dbo:deathPlace ?capital .

  # Person commander in the war involving Frédéric-Georges Herr
  ?war dbo:participant dbr:Frédéric-Georges_Herr ;
       a dbo:MilitaryConflict .
  ?person dbo:commanderOf ?war .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,50,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus IV Epiphanes""@en ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Step 2: Find his successor who is royalty
  ?successor dbo:succeededBy ?antiochus ;
            a dbo:Monarch ;
            dbo:country dbr:Seleucid_Empire .

  # Step 3: Determine the child of this successor
  ?child dbo:parent ?successor .

  # Step 4: Identify the spouse of this child
  ?spouse dbo:spouse ?child .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
345,18,test,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15 and figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.","SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team ?nickname WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1978-09-15""^^xsd:date ;
          foaf:name ""Armando Heeb""@en .
  
  OPTIONAL { ?person dbo:currentClub ?team . }
  OPTIONAL { ?person dbp:nickname ?nickname . }

  FILTER EXISTS {
    ?nickname a dbo:SportsTeam ;
              dbo:member ?person .
  }
}
```

This query does the following:
- Selects individuals who are soccer players with the specified birth date and name.
- Retrieves their current club/team if available.
- Fetches any nickname associated with them, ensuring that this nickname is linked to a sports team or organization.",5,10,6,3,2,3,2,20,0,0,1,0,0.0,0
528,59,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of the commander in the work of --01-09.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:location dbr:Chile ;
      dbo:eventType dbo:SocietalEvent .
  
  ?war dbo:commander ?commander .

  ?work dbo:date ""01-09""^^xsd:gYearMonth ;
        dbo:author ?commander .
}
```

This query does the following:
- Selects wars (`?war`) that are military conflicts occurring in Chile and classified as societal events.
- Retrieves commanders (`?commander`) associated with these wars.
- Links these commanders to works dated ""01-09"".",6,7,7,3,2,3,3,71,0,0,14,0,0.0,0
281,50,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfProfession ?entityInBirthPlace
WHERE {
  # Heather Roy's profession as a military unit
  dbr:Heather_Roy dbo:militaryUnit ?militaryUnit.
  ?militaryUnit dbo:name ?warOfProfession.

  # Leader of the 1962 New South Wales state election
  dbr:1962_New_South_Wales_state_election dbo:leader ?leader.
  
  # Birthplace country of the leader
  ?leader dbo:birthPlace ?birthPlace.
  ?birthPlace dbo:country ?entityInBirthPlace.
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
281,52,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInBirthPlace ?war1 ?war2
WHERE {
  # Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?entityInBirthPlace .

  # Jonathon Band's award
  dbr:Jonathon_Band dbo:award ?award .

  # Wars involving New Zealand Army
  ?war1 dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
  
  # Wars involving the awardee of Jonathon Band
  ?award dbo:recipient ?awardee .
  ?war2 dbo:participatingMilitaryUnit ?awardee .

  FILTER (lang(?entityInBirthPlace) = 'en')
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,48,test,"Give me the leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?result <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v3 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?awardee WHERE {
  # Find the office led by Joseph Stalin that is a government agency
  ?office dbo:head dbr:Joseph_Stalin ;
          dbo:type dbr:Government_agency .
  
  # Get the leader of this office
  ?office dbo:head ?leader .

  # Find an awardee of the commander award in the Volcano and Ryukyu Islands campaign
  ?awardee dbo:award dbr:Commander_Award ;
          dbo:campaign dbr:Volcano_and_Ryukyu_Islands_campaign .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
391,71,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with the professional in  and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ?v1 . ?v7 <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v8 <http://dbpedia.org/property/starring> ?result . ?v8 <http://dbpedia.org/property/starring> ?v7 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v4 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Find the figure associated with Jackson, Tennessee
  ?figure dbo:nativePlace dbr:Jackson,_Tennessee .
  
  # Step 2: Identify the actor of a movie that is also a TV show
  ?movie dbo:starring ?actor .
  ?tvShow dbo:starring ?actor .
  ?actor dbo:birthPlace ?native .

  # Step 3: Find Sherry Hormann's spouse and their claim to fame
  dbr:Sherry_Hormann dbo:spouse ?spouse .
  ?spouse dbo:profession dbr:Actor .
  ?fameWork dbo:starring ?spouse .
  
  # Link the actor of the movie/TV show with Sherry Hormann's spouse's claim to fame
  FILTER(?actor = ?spouse)
}
```",9,13,10,3,3,3,3,71,0,0,1,0,0.0,0
659,24,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Identify the regiment and its involvement in wars during the Napoleonic Wars
  ?regiment a dbo:MilitaryUnit ;
            dbo:participatedInWar ?war .
  
  # Ensure the war is part of the Napoleonic Wars
  ?war dbo:partOf dbr:Napoleonic_Wars .

  # Find the commander associated with this regiment and war
  ?commander dbo:commanded ?regiment ;
            dbo:commandedMilitaryUnit ?unit .
  
  # Ensure the unit is part of the same war
  ?unit dbo:participatedInWar ?war .
}
```

This query does the following:
- Selects distinct commanders (`?commander`) who commanded a military unit (`?regiment`).
- Ensures that the regiment participated in a war (`?war`) which is part of the Napoleonic Wars.
- Links the commander to both the regiment and the war.",3,5,4,2,2,3,3,71,0,0,29,0,0.0,0
232,62,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v6 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?jonPertwee a dbo:Person ;
              foaf:name ""Jon Pertwee""@en .
  
  ?child dbo:parent ?jonPertwee ;
         dbo:occupation dbr:Actor ;
         dbo:occupation dbr:Narrator ;
         dbo:occupation dbr:Producer ;
         dbp:birthPlace dbr:London .

  ?claimToFame dbo:associatedWith ?child ;
               a dbo:Film ;
               dbo:relatedMilitaryConflict ?conflict .
  
  ?actor dbo:actedIn ?claimToFame .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
659,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in the force of the native, that is an office holder, of Kingdom of Ireland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v8 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's involvement in a war
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryConflict ?war .
  
  # The 'Polish Horse' figure and their military unit/organization
  ?figure rdfs:label ""Polish Horse""@en ;
          dbo:militaryUnitOrOrganization ?militaryUnit .

  # The commander of the force related to the native office holder from Kingdom of Ireland
  ?officeHolder dbo:nativeCountry dbr:Kingdom_of_Ireland .
  ?force dbo:commander ?figure .
  ?force dbo:partOf ?militaryUnit .

  # Linking the military conflict and societal event
  ?war a dbo:MilitaryConflict ;
      dbo:societalEvent ?societalEvent .

  # Finding the military force related to these entities
  ?militaryForce dbo:commander ?figure .
}
```",9,17,10,3,3,3,3,71,0,0,15,0,0.0,0
427,46,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?michelePintoParty ?fatherOfAndreottiParty WHERE {
  ?michelePinto a dbo:Person ;
                foaf:name ""Michele Pinto""@en ;
                dbo:partyAffiliation ?michelePintoParty .
  
  ?lambertoAndreotti a dbo:Person ;
                    foaf:name ""Lamberto Andreotti""@en ;
                    dbp:father ?fatherOfAndreotti .

  ?fatherOfAndreotti a dbo:Person ;
                     dbo:partyAffiliation ?fatherOfAndreottiParty .
}
```

This query does the following:

1. Selects the party affiliation of Michele Pinto.
2. Identifies Lamberto Andreotti and retrieves his father's information.
3. Retrieves the party affiliation of Lamberto Andreotti's father.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
161,62,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce ?predecessor ?decedent
WHERE {
  # Find Indalecio Prieto's predecessor
  ?indalecioPrieto dbo:predecessor ?predecessor .
  FILTER (str(?indalecioPrieto) = ""Indalecio_Prieto"")

  # Biscay Campaign details
  ?biscayCampaign dbo:commander ?commander ;
                  dbo:militaryForce ?militaryForce ;
                  a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Find the decedent during Francoist Spain
  ?francoistSpain dbo:decedent ?decedent .
  FILTER (str(?francoistSpain) = ""Francoist_Spain"")

  # Ensure military force is both a societal event and a military conflict
  ?militaryForce a dbo:SocietalEvent, dbo:MilitaryConflict .

  # Link predecessor to Biscay Campaign's military force
  ?predecessor dbo:militaryForce ?biscayMilitaryForce .
  FILTER (str(?biscayMilitaryForce) = str(?militaryForce))

  # Link decedent to the same military force
  ?decedent dbo:militaryForce ?francoistMilitaryForce .
  FILTER (str(?francoistMilitaryForce) = str(?militaryForce))
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
435,25,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v4 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Iceland as the ""Land of fire and ice""
  dbr:Iceland a dbo:Country .

  # Settlements or towns in Iceland
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Iceland .

  # Administrative divisions related to Article 62, Section IV (hypothetical)
  OPTIONAL { 
    ?settlement dbo:administrativeRegion ?region .
    FILTER EXISTS {
      ?region rdfs:label ""Article 62, Section IV""@en
    }
  }

  # Time zone reference from Bombali Shebora Chiefdom
  OPTIONAL {
    ?settlement dbo:timeZone dbr:Bombali_Shebora_Chowchiefdom_Time_Zone .
  }
}
```",5,8,6,2,3,2,3,28,0,179,1,0.0,0.0,0
281,35,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionWar ?knightGrandCrossWar
WHERE {
  # Heather Roy's profession
  dbr:Heather_Roy dbo:occupation ?heatherRoyProfession .
  
  # Find the war associated with Heather Roy's profession
  ?heatherRoyProfession dbo:fieldOfActivity ?professionField .
  ?professionField dbo:relatedWar ?professionWar .

  # Awardee of Knight Grand Cross of the Order of the Bath
  ?knightGrandCrossAward dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath ?awardee .
  
  # Find the war associated with the awardee
  ?awardee dbo:militaryConflict ?knightGrandCrossWar .
}
```",4,5,5,2,2,3,3,71,0,0,9,0,0.0,0
281,69,test,"Give me the war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v7 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v7 . ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfAwardee ?militaryUnit ?birthPlaceCountry
WHERE {
  # Jonathon Band and his award
  ?jonathonBand a dbo:Person ;
                foaf:name ""Jonathon Band"" .
  
  ?award dbo:recipient ?jonathonBand ;
         dbo:associatedWithWar ?warOfAwardee .

  # Professional in New Zealand Army
  ?professional a dbo:Person, dbo:OfficeHolder, dbo:Politician ;
                dbo:militaryUnit ?militaryUnit ;
                dbo:nationality dbr:New_Zealand .
  
  ?militaryUnit dbo:partOf dbr:New_Zealand_Army .

  # Bob Heffron and his birthplace
  ?bobHeffron a dbo:Person ;
              foaf:name ""Bob Heffron"" .
  
  ?bobHeffron dbo:birthPlace ?birthPlaceCountry .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
547,69,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v7 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v4 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v4 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v7 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?restingPlaceHaliburtonDescendant ?restingPlaceAwardee ?restingPlaceActor
WHERE {
  # Resting place of the child of the child of William Haliburton
  dbr:William_Haliburton dbo:child ?firstChild .
  ?firstChild dbo:child ?secondChild .
  ?secondChild foaf:deathPlace ?restingPlaceHaliburtonDescendant .

  # Resting place of the awardee of the award of Gerald Graham
  dbr:Gerald_Graham dbo:awardReceived ?award .
  ?awardee dbo:awardReceived ?award ;
           foaf:deathPlace ?restingPlaceAwardee .

  # Resting place of the actor of ""Enemy at the Door""
  dbr:Enemy_at_the_Door dbo:actor ?actor .
  ?actor foaf:deathPlace ?restingPlaceActor .
}",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
492,65,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at the capital, that is a settlement, of Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v4 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?successor ?algeriaPerson ?verdunCommander WHERE {
  # Find Joseph C. Satterthwaite's successor
  ?satterthwaite a dbo:GovernmentFunction ;
                 dbo:officeHolder ?person1 .
  FILTER (str(?satterthwaite) = ""US_Assistant_Secretary_of_State_for_African_Affairs_Joseph_C._Satterthwaite"")
  
  # Find the successor
  ?successor a dbo:GovernmentFunction ;
             dbo:predecessor ?person1 .

  # Find the capital of Algeria and its notable person
  ?algeriaCapital a dbo:City ;
                  dbo:country dbr:Algeria .
  ?algeriaPerson dbo:placeOfBirth ?algeriaCapital .

  # Find the commander in the Battle of Verdun
  ?verdunCommander a dbo:MilitaryConflict ;
                   dbo:commander ?person2 .
  FILTER (str(?verdunCommander) = ""Battle_of_Verdun"")
}",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
981,16,test,"Give me the entity in the region of Time in Indonesia and birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/birthName> """"@en . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?beautyQueen ?birthPlace ?region
WHERE {
  ?beautyQueen a dbo:BeautyPageantWinner ;
               dbo:birthPlace ?birthPlace .
  
  ?birthPlace dbo:country dbr:Indonesia ;
              dbo:timeZone ?region .

  FILTER EXISTS { ?beautyQueen dbp:title ?title . }
}
ORDER BY ?beautyQueen
LIMIT 10",4,5,5,2,2,3,2,20,0,0,19,0,0.0,0
391,35,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  ?actor dbo:nationality dbr:United_States .
  ?actor dbo:birthPlace ?place .
  ?movie dbo:title ""The Young and the Restless""@en .
  ?movie dbo:starring ?actor .
  ?tvShow dbo:title ""The Young and the Restless""@en .
  ?tvShow dbo:starring ?actor .
  FILTER EXISTS { ?actor foaf:name ""Eric Braeden""@en }
}
```

This query attempts to find an actor from Hollywood who starred in both a movie and TV show titled ""The Young and the Restless"" with Roz Ryan.",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
485,27,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?region
WHERE {
  # Find the awardee of Eric Gregory Award who is a writer and poet
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:occupation dbr:Writer .
  ?person dbo:occupation dbr:Poet .

  # Get their birthplace
  ?person dbp:birthPlace ?birthPlace .

  # Find the region in that birthplace where Joseph Whitaker was born
  ?whitaker dbp:birthPlace ?birthPlace .
  ?whitaker a dbr:Naturalist .
  ?region dbo:wikiPageRedirects ?birthPlace .
  
  # Ensure the region is within the United Kingdom
  ?region dbo:country dbr:United_Kingdom .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
435,23,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and work of the author of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  # J.R.R. Tolkien as a person
  dbr:J._R._Tolkien dbo:nationality dbr:Icelandic_people .
  
  # Iceland as the Land of Fire and Ice
  dbr:Iceland rdfs:label ""Land of fire and ice""@en .

  # Works by J.R.R. Tolkien inspired by Icelandic literature
  ?work dbo:author dbr:J._R._Tolkien .
  ?work dbo:inspiration dbr:Icelandic_literature .

  # Territory administered from a settlement/town in Iceland
  ?territory dbo:administeredFrom dbr:Iceland ;
             dbo:type ?type .
  
  FILTER (?type IN (dbr:Settlement, dbr:Town))
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
378,42,test,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName ?warInvolvement ?joaquinBlakeFame ?greatSiegeRole ?otherWars
WHERE {
  # Carl Pontus Gahn's information
  VALUES ?person { dbr:C._P._Gahn }
  ?person dbo:birthName ?birthName .
  
  OPTIONAL {
    ?person dbo:memberOf ?militaryOrganization .
    ?militaryOrganization dbo:participatedInMilitaryConflicts ?warInvolvement .
  }

  # Joaquín Blake's information
  VALUES ?joaquinBlake { dbr:Joaquín_Blake }
  ?joaquinBlake dbo:claimToFame ?joaquinBlakeFame .

  OPTIONAL {
    ?joaquinBlake dbo:roleDuringEvent ?greatSiegeRole .
    FILTER(CONTAINS(LCASE(?greatSiegeRole), ""gibraltar""))
  }

  OPTIONAL {
    ?joaquinBlake dbo:participatedInMilitaryConflicts ?otherWars .
  }
}
```

This query attempts to:

- Retrieve Carl Pontus Gahn's birth name and any wars he was involved in.
- Retrieve Joaquín Blake's claim to fame, his role during the Great Siege of Gibraltar, and other wars he participated in.",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
360,25,test,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v3 <http://dbpedia.org/property/writer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?album ?writer ?deathPlace WHERE {
  # Find an album associated with Dave Flett and Manfred Mann
  ?album dbo:artist dbr:Dave_Flett ;
         dbo:genre dbr:Rock_music ; # Assuming the genre is rock, adjust if necessary
         dbo:associatedBand dbr:Manfred_Mann .

  # Get the writer of the album
  ?album dbo:writer ?writer .

  # Find Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
318,9,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Get the profession of Robert Xavier Rodriguez
  dbr:Robert_Xavier_Rodriguez dbo:profession ?profession .

  # Step 2: Find the founding year of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbp:foundingYear ?foundingYear .

  # Step 3: Find a person born in that year with the same profession
  ?person dbo:birthDate ?birthDate ;
          dbo:profession ?profession .
  
  BIND(YEAR(?birthDate) AS ?birthYear)
  
  FILTER (?birthYear = ?foundingYear)
}
```",4,4,5,2,2,2,2,9,0,0,7,0,0.0,0
701,55,test,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual WHERE {
  # Ramesses II's child
  ?child dbo:parent dbr:Ramesses_II .
  
  # Parent of Ramesses II's child (likely Nefertari)
  ?individual dbo:spouse dbr:Ramesses_II ;
              dbo:parent ?child .

  # Merneptah's father is Ramesses II, and his spouse
  ?merneptahParent dbo:spouse dbr:Ramesses_II .
  
  # Nefertari's child
  ?nChild dbo:parent dbr:Nefertari .
  
  # Parent of Nefertari's child (likely herself)
  ?individual dbo:parent ?nChild .
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
285,20,test,Give me the parent of the child of the spouse of Aristotle Onassis and spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v5 . ?v5 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?spouseOfProfessional
WHERE {
  # Aristotle Onassis's spouse
  dbr:Aristotle_Onassis dbo:spouse ?onassisSpouse .
  
  # Child of that spouse
  ?child dbo:parent ?onassisSpouse ;
         dbo:parent ?otherParent .

  # Parent of that child (should be Aristotle Onassis or his spouse)
  ?parentOfChild IN (?onassisSpouse, ?otherParent) .

  # Spouse of that parent
  ?parentOfChild dbo:spouse ?spouseOfParent .

  # Stan Lee's award
  dbr:Stan_Lee dbo:award ?stanLeeAward .

  # Professional in that award
  ?professional dbo:award ?stanLeeAward .

  # Spouse of that professional
  ?professional dbo:spouse ?spouseOfProfessional .
}
```",6,6,7,3,2,3,2,20,0,0,3,0,0.0,0
487,18,test,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of the administration of the person born on 1955-01-26.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v3 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration ?country WHERE {
  # Find Philip Brian Scott who is a soccer player
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott"" ;
          dbo:birthDate ?birthDate .

  FILTER (YEAR(?birthDate) = 1955 && MONTH(?birthDate) = 1 && DAY(?birthDate) = 26)

  # Find any administration role
  OPTIONAL {
    ?person dbo:officeHeld ?administration .
    ?administration dbo:country ?country .
  }
}
```

This query does the following:
- Searches for a person named ""Philip Brian Scott"" who is classified as a `SoccerPlayer`.
- Filters by birth date to match January 26, 1955.
- Optionally retrieves any administration role (`officeHeld`) and its associated country.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
465,9,test,"Give me the death place of the native of Prague and administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?party ?organisation WHERE {
  # Assuming the leader is currently or recently known
  ?leader a dbo:Politician ;
          dbo:nationality dbr:Czech_Republic ;
          dbo:birthPlace dbr:Prague ;
          dbp:office ""Chairman of the Chamber of Deputies of the Czech Republic""@en .

  OPTIONAL { ?leader dbo:deathPlace ?deathPlace . }
  
  # Find the political party they are associated with
  ?party a dbo:PoliticalParty ;
         dbo:member ?leader .
  
  # Find the organization they administer
  ?organisation a dbo:Organization ;
                dbo:administrator ?leader .

  FILTER (lang(?partyLabel) = 'en' && lang(?organisationLabel) = 'en')
}
ORDER BY ?deathPlace",4,6,5,2,2,2,2,9,0,0,8,0,0.0,0
161,69,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v7 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceFrancoistSpain ?militaryForceLargoCaballero ?commanderElDirector
WHERE {
  # Military force during Francoist Spain
  ?event1 a dbo:SocietalEvent ;
          dbo:isPartOf dbr:Francoist_Spain .
  ?event1 dbo:hasMilitaryConflict ?conflict1 .
  ?conflict1 dbo:militaryForce ?militaryForceFrancoistSpain .

  # Military force associated with Francisco Largo Caballero
  ?event2 a dbo:SocietalEvent ;
          dbo:isPartOf dbr:Francoist_Spain .
  ?event2 dbo:hasMilitaryConflict ?conflict2 .
  ?conflict2 dbo:militaryForce ?militaryForceLargoCaballero .

  # Commander in the force associated with ""El Director""
  ?event3 a dbo:Event ;
          dbo:commander ?commanderElDirector .
  ?commanderElDirector rdfs:label ""El Director""@en .
}
```",8,14,9,3,3,3,3,71,0,0,32,0,0.0,0
488,28,test,Give me the death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administrationPeriod ?birthPlace
WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:placeOfDeath ?deathPlace .

  # Emperor Go-Yōzei's administration period
  dbr:Emperor_Go-Yōzei dbo:reignEnd ?administrationPeriod .

  # Commander in the Boshin War (likely Saigō Takamori)
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
701,68,test,Give me the parent of the child of the child of Seti I and spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v7 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v5 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v3 . ?v5 <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v7 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Seti I's grandchild
  ?setiIChild dbo:spouse ?setiIFather.
  ?setiIFather dbo:child ?setiIGrandchild1.
  ?setiIChild dbo:child ?setiIGrandchild2.

  # Merneptah's father's spouse
  dbr:Merneptah dbo:father ?merneptahFather.
  ?merneptahFather dbo:spouse ?merneptahSpouse.

  # Amun-her-khepeshef's spouse's child
  dbr:Amun-her-khepeshef dbo:spouse ?amunSpouse.
  ?amunSpouse dbo:child ?amunChild.

  # Find a common parent among these entities
  VALUES (?entity) {
    (?setiIGrandchild1)
    (?setiIGrandchild2)
    (?merneptahSpouse)
    (?amunChild)
  }
  
  ?parent dbo:child ?entity.
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
754,19,test,Give me the parent of the parent of May Hnin Htapi and parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparent1 ?parent2 WHERE {
  # Part 1: May Hnin Htapi
  ?mayHninHtapi a dbo:Person ;
                foaf:surname ""May Hnin Htapi""@en .
  
  ?mayHninHtapi dbo:childOf ?personA .
  ?personA dbo:parentOf ?grandparent1 .

  # Part 2: Ram Khamhaeng the Great
  dbr:Ram_Khamhaeng_the_Great dbo:reference ?entityB .
  
  ?entityB dbo:childOf ?childEntity .
  ?childEntity dbo:parentOf ?parent2 .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
701,51,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Ramesses II.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find the commander in the Battle of Perire
  ?commander dbo:battleFoughtIn dbp:Battle_of_Perire .
  
  # Find the father of the commander
  ?father dbo:child ?commander .

  # Find the spouse of the father who is a royalty
  ?spouse dbo:spouse ?father ;
          rdf:type dbo:Monarch .

  # Ensure this person is also a parent of one of Ramesses II's children
  ?ramessesChild dbo:parent ?spouse .
  ?ramessesChild dbo:parent dbp:Ramesses_II .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
747,48,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band
WHERE {
  # Step 1: Find Tracey Elizabeth McSween and her birth date
  ?tracey a dbo:Person ;
          foaf:name ""Tracey Elizabeth McSween""@en ;
          dbp:birthday ?birthDate .

  # Step 2: Find another person with the same birth date, who is an athlete and soccer player from Zolotonosha
  ?person a dbo:Person ;
          dbp:birthday ?birthDate ;
          dbo:sport dbr:Soccer ;
          dbo:nationality dbr:Ukraine ;
          dbo:hometown dbr:Zolotonosha .

  # Step 3: Ensure the person is an athlete
  ?person dbo:occupation dbr:Athlete .

  # Step 4: Retrieve the band associated with this person
  OPTIONAL { ?person dbo:musicalBand ?band }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
959,52,test,"Give me the manager of 2013 Júbilo Iwata season and native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Find Yōichi Masuzoe's native country
  dbr:Yōichi_Masuzoe dbo:nationality ?country .

  # Step 2: Find his alma mater, which is a Japanese university and educational institution
  dbr:Yōichi_Masuzoe dbo:almaMater ?university .
  ?university rdf:type dbo:EducationalInstitution ;
              dbo:country dbr:Japan .

  # Step 3: Determine the manager of Júbilo Iwata for the 2013 season
  dbr:Júbilo_Iwata dbp:managerDuringSeason ""2013"" ?manager .
}
```",6,11,7,3,3,3,3,71,0,0,1,0,0.0,0
16,68,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person;
        foaf:name ""Gigi Rice"" ;
        dbo:birthName ?birthNameGigi .

  # Find Ted McGinley's birth name
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley"" ;
       dbo:birthName ?birthNameTed .

  # Find the actor of ""Unnatural"" and their profession
  ?unnaturalActor a dbo:Person;
                  dbo:profession ?actorProfession;
                  dbo:film ?unnaturalFilm .
  ?unnaturalFilm foaf:name ""Unnatural (TV series)"" .

  # Find the person with Gigi Rice's birth name
  ?personWithGigiBirthName a dbo:Person;
                           dbo:birthName ?birthNameGigi .

  # Find the spouse of Ted McGinley
  ?tedSpouse a dbo:Person;
             dbo:spouse ?ted .
  
  # Ensure the person is also the spouse of Ted McGinley's birth name holder
  ?personWithGigiBirthName dbo:spouse ?tedSpouse .

  # Ensure the profession matches that of the actor from ""Unnatural""
  ?personWithGigiBirthName dbo:profession ?actorProfession .
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
328,57,test,"Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award [dbo:recipient ?person; rdf:type dbr:Order_of_Suvorov] .
  ?person dbo:militaryCommanderOf [
    dbo:commanderInForce dbr:Budapest ; 
    dbo:timePeriod ?period ;
    dbo:endTime ?endTime
  ] .
  FILTER (?endTime >= ""1944-12-01""^^xsd:date && ?endTime <= ""1945-02-13""^^xsd:date) .
  ?person dbo:leaderOf [
    a dbo:GovernmentAgency ;
    dbo:head dbr:Joseph_Stalin
  ] .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
161,71,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v8 <http://dbpedia.org/ontology/commander> ?v7 . ?v8 <http://dbpedia.org/ontology/commander> ?result . ?v7 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v4 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v5 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce1 ?militaryForce2 ?commander
WHERE {
  # Francisco Franco's military force (Spanish Civil War)
  dbr:Francisco_Franco dbo:militaryConflict dbr:Spanish_Civil_War .
  
  # Indalecio Prieto's predecessor and their military conflict (Spanish Civil War)
  dbr:Manuel_Azaña dbo:militaryConflict dbr:Spanish_Civil_War .

  # El Director (Francisco Franco) as commander in the Spanish Civil War
  dbr:Francisco_Franco dbo:commanderInMilitaryForce dbr:Spanish_Civil_War .
  
  BIND(dbr:Spanish_Civil_War AS ?militaryForce1)
  BIND(dbr:Spanish_Civil_War AS ?militaryForce2)
  BIND(dbr:Francisco_Franco AS ?commander)
}
```",9,15,10,3,3,3,3,71,0,0,32,0,0.0,0
915,17,test,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v3 <http://dbpedia.org/property/father> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?lizzie dbo:spouse ?parent .
  ?parent rdfs:label ""Victor Newman""@en .
  
  ?jack dbo:childOf ?parent .
  ?jack rdfs:label ""Jack Abbott""@en .

  ?father dbo:child ?jack .
  ?father dbo:residence dbr:Springfield,_Illinois .
  ?father rdfs:label ?label .

  FILTER CONTAINS(LCASE(?label), ""nick newman"")
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
617,46,test,"Give me the spouse of the child of Antiochus III the Great and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/property/father> ?v1 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great and his child
  VALUES (?antiochus3) { dbr:Antiochus_III_the_Great }
  ?child dbo:parent ?antiochus3 .
  
  # Child of Antiochus III's child
  ?grandchild dbo:parent ?child .

  # Spouse of the grandchild
  ?spouse dbo:spouse ?grandchild .

  # Successor of Antiochus II Theos who is royalty
  VALUES (?antiochus2) { dbr:Antiochus_II_theos }
  ?successor dbo:predecessor ?antiochus2 .
  
  # Child of the successor
  ?childOfSuccessor dbo:parent ?successor .

  # Ensure both are royalty
  FILTER (?spouse = ?childOfSuccessor)
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
767,38,test,Give me the reference to the alter ego of Black Hood and alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  # Find the alter ego of Black Hood
  ?blackHood dbo:alterEgo ?alterEgo .
  
  # Find the alma mater of George K. Nash
  ?georgeKNash dbo:almaMater ?almaMater .

  # Check if both entities share a common reference
  FILTER(?alterEgo = ?almaMater)
}
```

This query assumes that DBpedia has structured data for these relationships and entities. It looks for the alter ego of Black Hood and the alma mater of George K. Nash, then checks if they are the same entity.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
161,67,test,"Give me the military force of Rif War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarForce ?elDirectorCommander ?societalEvent ?militaryConflict ?predecessorMilitaryForce
WHERE {
  # Rif War and its military force
  ?rifWar a dbo:MilitaryConflict ;
          dbo:militaryParticipant ?rifWarForce .

  # El Director's role in the Rif War
  ?elDirector rdfs:label ""El Director""@en .
  ?elDirector dbo:commanderOf ?rifWarForce .

  # Predecessor of Indalecio Prieto
  ?indalecioPrieto a dbo:Person ;
                   foaf:surname ""Prieto"" .
  ?predecessor dbo:successor ?indalecioPrieto ;
               rdfs:label ?predecessorLabel .

  # Societal event and military conflict associated with the predecessor
  ?societalEvent dbo:agent ?predecessor ;
                 a dbo:SocietalEvent .
  ?militaryConflict dbo:militaryParticipant ?predecessorMilitaryForce ;
                    a dbo:MilitaryConflict ;
                    dbo:agent ?predecessor .

}
```",7,10,8,3,3,3,3,71,0,0,11,0,0.0,0
767,55,test,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?settlement ?alterEgo
WHERE {
  # Alma mater of George K. Nash
  ?nash a dbo:Person ;
        foaf:name ""George K. Nash"" ;
        dbo:almaMater ?almaMater .

  # Entity in the administration of Green that is a settlement
  ?green a dbo:Person ;
         foaf:name ?greenName ;
         dbo:memberOf ?administration .
  ?administration dbo:member ?settlement .
  FILTER regex(?greenName, ""Green"", ""i"") .
  FILTER (dbo:Place ?settlement) .

  # Alter ego of Black Hood
  ?blackHood a dbo:Person ;
             foaf:name ""Black Hood"" ;
             dbo:alterEgo ?alterEgo .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
429,8,test,"Give me the administration of Andrew Johnson and country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?country
WHERE {
  # Andrew Johnson's administration
  dbr:Andrew_Johnson dbo:presidentOf dbr:United_States .
  dbr:Andrew_Johnson dbo:termStart ?start ;
                     dbo:termEnd ?end .

  # Camden Expedition
  dbr:Camden_Expedition dbo:militaryConflict dbr:American_Civil_War .
  
  # Military force involved in the Camden Expedition
  ?militaryForce dbo:participatedIn dbr:Camden_Expedition ;
                 dbo:nationality ?country .

  # Filter to ensure the military force is from a country during Andrew Johnson's administration
  FILTER (?start <= ?militaryForceStart && ?end >= ?militaryForceEnd)
}
```

This query assumes that:
- The `dbo:presidentOf` property links Andrew Johnson to his presidency.
- The `dbo:termStart` and `dbo:termEnd` properties provide the start and end dates of his administration.
- The `dbo:militaryConflict` property links the Camden Expedition to the American Civil War.
- The `dbo:nationality` property identifies the country of the military force involved.",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
701,48,test,Give me the spouse of the father of Merneptah and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseOfFather WHERE {
  ?merneptah dbo:father ?father .
  FILTER(STR(?merneptah) = ""Merneptah"") .

  ?father dbo:mother|dbo:father ?spouseOfFather .

  ?amunherkhepeshef dbo:spouse ?spouseAmun .
  FILTER(STR(?amunherkhepeshef) = ""Amun-her-khepeshef"") .

  ?spouseAmun dbo:child ?childOfSpouse .
  
  ?parentOfChild dbo:child ?childOfSpouse .
  ?parentOfChild ?relation ?spouseOfFather .
}
```

This query assumes that the relationships are directly available in DBpedia and uses logical OR (`|`) to account for both mother and father roles. Adjustments may be needed based on actual data availability.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,55,test,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist1 ?associatedArtist2 WHERE {
  # Donald Maynard Dokken and his band members
  dbr:Don_Dokken a dbo:MusicalArtist ;
                 foaf:birthday ""1953-11-29""^^xsd:date ;
                 dbo:member ?bandMember .

  # Watchtower's associated musical artists
  dbr:Watchtower a dbo:Band ;
                 dbo:associatedMusicalArtist ?associatedArtist1 .

  # Meshuggah's band members who are also bands or groups
  dbr:Meshuggah a dbo:Band ;
                dbo:member ?bandMember2 .
  ?bandMember2 a (dbo:Band|dbo:Group|dbo:Organization) ;
               dbo:associatedMusicalArtist ?associatedArtist2 .

  # Linking the associated artists
  ?associatedArtist1 dbo:associatedMusicalArtist ?associatedArtist2 .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
747,26,test,"Give me the band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  # Find Amba Shepherd
  ?ambashepherd a dbo:Person ;
                foaf:name ""Amba Shepherd""@en .

  # Find works by Amba Shepherd that are songs
  ?work dbo:author ?ambashepherd ;
        rdf:type dbo:Songs .

  # Find the band associated with the song
  OPTIONAL {
    ?work dbp:performer ?band .
  }
}
```

This query does the following:
- Identifies Amba Shepherd as a person.
- Finds works authored by her that are classified as songs.
- Attempts to find any band associated with these songs.",3,4,4,3,1,3,3,71,0,0,13,0,0.0,0
528,30,test,Give me the war of Irene Morales and force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?person ?name WHERE {
  VALUES (?person ?name) {
    (dbr:Irene_Morales ""Irene Morales"")
    (dbr:Narciso_Campero_Leyes ""Narciso Campero Leyes"")
    (dbr:Orozimbo_Barbosa ""Orozimbo Barbosa"")
  }
  
  ?person dbo:wikiPageRedirects ?redirect .
  OPTIONAL { ?redirect rdfs:label ?name FILTER(LANG(?name) = 'en') . }
  ?war dbo:participatedInWar ?participant .
  ?participant dbo:wikiPageRedirects* ?person .
}
ORDER BY ?person
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
378,30,test,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of Joaquín Blake.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warGahn ?fameBlake WHERE {
  # Find wars associated with Carl Pontus Gahn
  OPTIONAL {
    ?gahn dbo:nationality dbr:Sweden .
    ?gahn dbo:occupation dbr:Military_person .
    ?gahn dbo:participatedIn ?warGahn .
    FILTER(CONTAINS(LCASE(?warGahn), ""war""))
  }

  # Find Joaquín Blake's claim to fame during the Great Siege of Gibraltar
  OPTIONAL {
    ?blake dbo:nationality dbr:Spain ;
           dbo:occupation dbr:Military_person ;
           dbo:participatedIn dbr:Great_Siege_of_Gibraltar .
    ?fameBlake dbo:wikiPageRedirects ?blake .
    FILTER(CONTAINS(LCASE(?fameBlake), ""claim to fame""))
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
16,58,test,Give me the spouse of Ted McGinley and professional in the profession of Satomi Ishihara and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ?v5 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse ?profession ?person WHERE {
  # Spouse of Ted McGinley
  dbr:Ted_McGinley dbo:spouse ?spouse .

  # Profession of Satomi Ishihara
  dbr:Satomi_Ishihara dbo:occupation ?profession .

  # Person born as the birth name of an alumnus of Ohio State University
  {
    SELECT DISTINCT ?alumnus WHERE {
      ?alumnus dbo:almaMater dbr:Ohio_State_University .
      ?alumnus dbo:birthName ?birthName .
    }
    
    ?person dbo:birthName ?birthName .
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,27,test,Give me the child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
           dbp:name ""Princess Victoria Louise of Prussia""@en .

  # Step 2: Find her spouse
  ?spouse dbo:spouseOf ?princess .

  # Step 3: Determine the father of that spouse
  ?father dbo:child ?spouse .

  # Step 4: Identify the children of this father
  ?father dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
281,65,test,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the awardee of Knight Grand Cross of the Order of the Bath and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v6 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entityInBirthPlace
WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?leader dbo:officeTitle ""Leader of the Opposition"" ;
          dbo:termStart ?start ;
          dbo:termEnd ?end .
  
  FILTER (?start <= ""1962-12-01""^^xsd:date && ?end >= ""1962-01-01""^^xsd:date)
  
  # Step 2: Determine their birthplace that is a country
  ?leader dbp:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  # Step 3: Find an entity related to the awardee of Knight Grand Cross of the Order of the Bath
  ?awardee dbo:honours ""Knight Grand Cross of the Order of the Bath"" ;
          dbo:militaryConflict ?war .
  
  # Step 4: Heather Roy's profession as a military unit
  dbr:Heather_Roy dbo:profession ?militaryUnit .
  ?militaryUnit dbo:militaryConflict ?sameWar .

  # Ensure the wars are the same
  FILTER (?war = ?sameWar)

  # Get the entity in the birthplace of the leader
  ?birthPlace dbo:entityInBirthPlace ?entityInBirthPlace .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
801,49,test,"Give me the professional in the alter ego of The Shadow and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alterEgo ?associatedArtist WHERE {
  # Step 1: Find The Shadow's alter ego
  VALUES ?shadow { dbr:The_Shadow }
  ?shadow dbo:aliasName ?alterEgo .

  # Step 2: Identify the writer of ""What U See Is What U Get""
  ?album dbo:title ""What U See Is What U Get"" ;
         dbo:artist ?writer .
  
  # Step 3: Find an associated artist who is both a musical artist and an artist
  ?writer dbo:associatedMusicalArtist ?associatedArtist .
  ?associatedArtist rdf:type dbo:Musician ;
                   dbo:occupation dbr:Artist .

}
```",5,9,6,3,2,3,3,71,0,0,22,0,0.0,0
659,58,test,"Give me the commander in German campaign of 1813 and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?militaryForce WHERE {
  # German Campaign of 1813
  ?campaign dbo:partOf dbr:War_of_the_Sixth_Coalition ;
            dbo:place dbr:Germany ;
            dbo:date ""1813""^^xsd:gYear .

  # Commander in the campaign
  ?commander dbo:commanded ?militaryForce ;
             dbo:occupation dbr:Military_officer ;
             dbo:participatedIn ?campaign .

  # Military force with societal event and military conflict
  ?militaryForce dbo:societalEvent ?societalEvent ;
                 dbo:militaryConflict ?conflict .

  # Reference to Rutger Jan Schimmelpenninck
  OPTIONAL { ?commander dbo:relatedTo dbr:Rutger_Jan_Schimmelpenninck }

  # Commander in the war of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?regiment dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) ;
            dbo:commandedBy ?commander .
}
```",6,11,7,3,3,3,3,71,0,0,7,0,0.0,0
294,26,test,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?keeblesRestingPlace ?marionsBirthSettlement ?awardeesRestingPlace WHERE {
  # Edwin A. Keeble's resting place
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:finalBurialPlace ?keeblesRestingPlace .
  }

  # Marion James' birthplace settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?marionsBirthPlace .
    ?marionsBirthPlace a dbo:Settlement ;
                      rdfs:label ?marionsBirthSettlement .
  }
  
  # Awardee of the Distinguished Service Medal (U.S. Army) who is a politician
  OPTIONAL {
    ?awardee dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) ;
             a dbo:Politician .
    ?awardee dbo:finalBurialPlace ?awardeesRestingPlace .
  }
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
16,22,test,Give me the spouse of Ted McGinley and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"SELECT ?spouse WHERE {
  ?person foaf:name ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .
}

UNION

SELECT ?person WHERE {
  ?person foaf:name ""Gigi Rice""@en .
  ?person dbp:birthName ?birthName .
  ?personWithBirthName foaf:name ?birthName .
  ?personWithBirthName foaf:name ?fullName .
  FILTER(?fullName != ""Gigi Rice"")
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
801,61,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer WHERE {
  # Identify the song ""What U See Is What U Get""
  VALUES ?song { dbr:What_U_See_Is_What_U_Get_(song) }
  
  # Find the album associated with this song
  ?album dbo:song ?song .
  
  # Find artists who are rappers and associated musical artists for the writer
  ?artist a dbo:MusicalArtist ;
          dbo:genre dbr:Hip_hop_music ;
          dbo:associatedMusicalArtist ?writer .

  # Ensure the artist is also a professional in music
  ?artist dbo:profession dbr:Musical_artist .
  
  # Find the producer of the album
  ?album dbo:producer ?producer .
}
```",6,14,7,3,2,3,3,71,0,0,9,0,0.0,0
182,23,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?war ?entity
WHERE {
  # Find an author related to the 2019 Sri Lanka Easter bombings
  ?article dbo:wikiPageWikiLink dbr:2019_Sri_Lanka_Easter_bombings .
  ?article dbo:wikiPageCreator ?author .

  # Find wars associated with this author
  ?author dbo:nationality dbr:Sri_Lanka .  # Assuming the author is from Sri Lanka
  ?author dbo:occupation dbr:Writer .
  ?war dbo:relatedTo ?author .

  # Check for entities related to Tamara Kunanayakam's nationality (Sri Lanka)
  ?entity dbo:nationality dbr:Sri_Lanka .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
303,26,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?party WHERE {
    { 
        dbr:Ari_Norberto_Arias_Madrid dbo:birthName ""Arnulfo Arias Madrid""@en .
        dbr:Ari_Norberto_Arias_Madrid dbo:politicalParty ?party .
        BIND(dbr:Ari_Norberto_Arias_Madrid AS ?person)
    }
    UNION
    {
        dbr:Manuel_Noriega dbo:politicalParty ?party .
        BIND(dbr:Manuel_Noriega AS ?person)
    }
}",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
767,62,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/property/leaderParty> ?v4 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  # George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?nashAlmaMater .

  # Dustin Lynch album writer and associated settlement
  dbr:Where_It%27s_At_(Dustin_Lynch_album) dbo:lyricsBy ?writer .
  ?writer dbo:birthPlace ?settlement .

  # Check if the alma mater of Nash is related to the settlement
  ?nashAlmaMater rdfs:label ?almaMaterLabel .
  FILTER (lang(?almaMaterLabel) = 'en')
  
  OPTIONAL {
    ?settlement dbo:isPartOf ?relatedEntity .
    ?relatedEntity dbo:almaMater ?almaMater .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
801,36,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in .","SELECT ?result WHERE { <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get
    a dbo:Album ;
    dbo:composer ?writer .

  # Check if the writer is also a musical artist
  ?writer
    a dbo:MusicalArtist, dbo:Artist ;
    foaf:name ?name .

  # Return the associated musical artist
  BIND(?writer AS ?artist)
}
```",4,8,5,3,2,3,3,71,0,0,22,0,0.0,0
617,30,test,Give me the child of Antiochus III the Great and spouse of Laodice IV and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Antiochus III the Great and his child (Antiochus IV)
  dbr:Antiochus_III_the_Great dbo:spouse ?laodiceIV .
  ?antiochusIV dbo:parent dbr:Antiochus_III_the_Great ;
              dbo:spouse ?child .

  # Laodice IV
  ?laodiceIV rdfs:label ""Laodice IV""@en .

  # The child is also a parent of another Antiochus (son of Antiochus III the Great)
  ?antiochusIV dbo:parent ?anotherAntiochus .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,60,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow.","SELECT ?result WHERE { ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the album ""What U See Is What U Get""
  ?album a dbo:MusicalWork ;
         rdfs:label ""What U See Is What U Get""@en .
  
  # Identify the writer of the album
  ?album dbo:composer ?writer .

  # Ensure the writer is both a musical artist and an artist
  ?writer a dbo:MusicalArtist, dbo:Artist .

  # Find the alter ego associated with The Shadow
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Ensure the writer is professional in this alter ego
  ?writer dbo:profession ?alterEgo .

  # Return the artist
  ?writer rdfs:label ?artist .
}
```",6,10,7,3,2,3,3,71,0,0,22,0,0.0,0
421,21,test,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Senidah's resource
  dbr:Senidah dbo:member ?bandMember .

  # Band member is native of SFRY
  ?bandMember dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .

  # Birth name of Dino Merlin
  dbr:Dino_Merlin dbp:birthdayName ?birthName .
  
  # Match birth name with band member's birth name
  ?bandMember dbp:birthdayName ?birthName .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
48,18,test,"Give me the band of the writer of the work, that is a work, of Shellback (record producer) and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandOfWriter ?bandOfActor
WHERE {
  # Find a work associated with Shellback (record producer)
  ?work dbo:producer dbr:Shellback_(record_producer) .
  
  # Find the writer of that work and their band
  ?work dbo:writer ?writer .
  ?writer foaf:musicArtist ?bandOfWriter .

  # Find an actor who is also a musical artist for ""Honor Up""
  ?honorUpWork dbo:actor ?actor .
  FILTER (CONTAINS(LCASE(STR(?honorUpWork)), ""honor up""))
  
  ?actor foaf:musicArtist ?bandOfActor .
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
747,64,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandShena ?bandAmbaShepherd WHERE {
  # Find Shèna's birth date
  VALUES (?shena) { dbr:Shena_Easton }
  ?shena dbo:birthDate ?birthDate .

  # Find the decedent who is an athlete and soccer player from Zolotonosha with the same birth date
  ?decedent dbo:birthDate ?birthDate ;
            a dbo:Athlete, dbo:SoccerPlayer ;
            dbp:placeOfBirth dbr:Zolotonosha .

  # Find Shèna's band
  ?shenaBand dbo:bandMember ?shena .
  ?shenaBand rdfs:label ?bandShena .

  # Find Amba Shepherd's band
  VALUES (?ambaShepherd) { dbr:Amba_Shepherd }
  ?ambaShepherd dbo:bandMember ?ambaBand .
  ?ambaBand rdfs:label ?bandAmbaShepherd .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
54,47,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?commonEntity WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   foaf:name ""Soe Min Wimala Dewi""@en .
  ?fatherOfSoeMinWimalaDewi dbo:child ?soeMinWimalaDewi .

  # Find the child of Soe Min Wimala Dewi's father
  ?childOfFather dbp:parent ?fatherOfSoeMinWimalaDewi .

  # Find Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw""@en .
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # The common entity is the child of Soe Min Wimala Dewi's father and parent of Thado Minsaw
  ?commonEntity rdf:type dbo:Person ;
               foaf:name ?name ;
               dbp:parent ?fatherOfSoeMinWimalaDewi ;
               dbo:child ?thadoMinsaw .
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
404,60,test,"Give me the child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?birthName WHERE {
  # Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            dbp:name ""Victoria Louise, Princess Royal"" ;
            dbp:surnameBirth ""Prussia""@en ;
            dbp:spouse ?spouse .

  # Spouse's Father
  ?spouse dbo:father ?father .

  # Child of the father who is royalty
  ?child dbo:parent ?father ;
         a dbo:Monarch .

  # Birth name of Princess Victoria Louise of Prussia
  ?princess dbp:nameBirth ?birthName .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
197,9,test,Give me the birthplace of the awardee of Leroy P. Steele Prize and birthplace of the member of FC Politehnica Timișoara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardeeBirthplace ?memberBirthplace WHERE {
  # Assuming there is a property or resource linking individuals to the Leroy P. Steele Prize
  ?awardee dbo:awardReceived dbr:Leroy_P._Steele_Prize .
  ?awardee dbo:birthPlace ?awardeeBirthplace .

  # Assuming there's a way to identify members of FC Politehnica Timișoara
  ?member dbo:team dbr:FC_Politehnica_Timișoara .
  ?member dbo:birthPlace ?memberBirthplace .
}
```

This query assumes:
- There is a property `dbo:awardReceived` linking awardees to the Leroy P. Steele Prize.
- There is a property `dbo:team` linking players to FC Politehnica Timișoara.

Adjust these assumptions based on actual DBpedia schema if necessary.",4,4,5,2,2,2,2,9,0,0,4,0,0.0,0
54,31,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfThinkhaya WHERE {
  # Step 1: Find Thinkhaya of Pagan
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  
  # Step 2: Identify the child of Thinkhaya (who is also his father)
  ?childOfThinkhaya dbo:parent ?thinkhaya .

  # Step 3: Find Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Monarch ;
                foaf:name ""Thado Minsaw""@en .
  
  # Step 4: Identify the parent of Thado Minsaw who is also a child of Thinkhaya
  ?childOfThinkhaya dbo:parent ?thadoMinsaw .

}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,26,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  ?award dbr:Royal_Medals .
  ?award dbo:recipient ?person .
  ?person dbo:almaMater ?almaMater .
}
```

This query does the following:
- Identifies the resource for ""Royal Medals.""
- Finds individuals who have received this award.
- Retrieves the alma mater of these individuals.",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
391,54,test,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons and native of the figure known as Hub City.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Sherry Hormann's spouse
  ?sherryHormann a dbo:Person ;
                 foaf:spouse ?spouse .

  FILTER (str(?sherryHormann) = ""Sherry_Hormann"") .

  # Find the actor of ""All About the Andersons""
  ?actor a dbo:Actor ;
         dbo:film ?film .
  
  ?film rdfs:label ""All About the Andersons""@en .

  # Ensure this actor is also the spouse
  FILTER (?spouse = ?actor) .

  # Find who is native to Hub City
  ?hubCityPerson a dbo:Person ;
                 dbo:nativePlace ?nativePlace .
  
  ?nativePlace rdfs:label ""Hub_City""@en .

  # Ensure this person is also the actor
  FILTER (?hubCityPerson = ?actor) .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
345,20,test,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/manager> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  # Step 1: Get Eiður Guðjohnsen's birth date
  dbr:Eiður_Guðjohnsen dbo:birthday ?birthDate .

  # Step 2: Find a soccer player and manager born on that date
  ?person dbo:birthday ?birthDate ;
          rdf:type dbo:SoccerPlayer, dbo:SoccerManager .

  # Step 3: Get the team of this person
  ?person dbp:team ?team .

  # Step 4: Get Armando Heeb's team
  dbr:Armando_Heeb dbp:team ?heebTeam .

  # Step 5: Find a nickname that is also a sports club, organization, and soccer club
  ?nickname rdf:type dbo:SportsClub, dbo:Organization, dbo:SoccerClub ;
            rdfs:label ?label .
  
  # Ensure the team matches
  FILTER(?team = ?heebTeam)

  # Return the label of the nickname
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
617,43,test,"Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great's child who is a parent of Nysa
  ?parent dbo:child dbr:Nysa ;
          dbo:spouse ?spouse .

  # Ensure the parent is a child of Antiochus III the Great
  ?parent dbo:parent dbr:Antiochus_III_the_Great .

  # The successor's child and their spouse
  ?successorChild dbo:childOf ?successor ;
                  dbo:spouse ?spouse .

  # Ensure the successor is a son of Antiochus III the Great
  ?successor dbo:parent dbr:Antiochus_III_the_Great .
}
```",5,6,6,3,3,3,3,71,0,0,2,0,0.0,0
801,20,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?producer WHERE {
  VALUES ?artist { dbr:50_Cent }
  
  ?work dbo:artist dbr:50_Cent .
  ?work a dbo:MusicalWork ;
        a dbo:Song .

  OPTIONAL { ?work dbo:composer ?professional . }
  OPTIONAL { ?work dbo:recordProducer ?producer . }

  FILTER(?professional != """")
  FILTER(?producer != """")
}
```",3,6,4,2,2,3,3,71,0,0,27,0,0.0,0
360,21,test,Give me the writer of The Roaring Silence and native of Johannesburg and reference to the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?nativeCity ?blindedByTheLightAuthor WHERE {
  # Find the writer of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:author ?writer .
  
  # Check if this writer is native to Johannesburg
  ?writer dbo:nativePlace dbr:Johannesburg .

  # Get the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light dbo:author ?blindedByTheLightAuthor .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
801,39,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of Westside Story (song).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the producer of Westside Story (song)
  ?producer a dbo:Producer ;
            dbo:produced dbr:Westside_Story_(song) .

  # Find the album What U See Is What U Get
  ?album a dbo:MusicalWork, dbo:Album ;
         rdfs:label ""What U See Is What U Get""@en .

  # Find the writer of the album who is also a musical artist and an artist
  ?writer dbo:wrote ?album ;
          a dbo:MusicalArtist, dbo:Artist .

  # Ensure the producer of Westside Story is the same as the writer of the album
  ?producer dbr:Westside_Story_(song) .
  
  # Return the associated musical artist
  ?artist rdfs:label ?writerLabel .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
314,26,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of 30.","SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  
  # Deceased at the headquarter of House of Sombrerete
  ?deathEvent dbo:place dbr:House_of_Sombrerete ;
              dbo:agent ?person ;
              dbo:deathPlace dbr:Headquarters_of_House_of_Sombrerete .

  # Commander in profession
  ?person dbo:occupation dbr:Commander .

  # Event and societal event of Lisa Gavrić
  ?event dbo:participant ?person, dbr:Lisa_Gavrić ;
         a dbo:SocietalEvent .

  # Awardee of 30
  ?awardEvent dbo:recipient ?person ;
              dbp:number ""30"" .
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
281,57,test,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of the profession, that is a military unit, of Heather Roy.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v5 . ?result <http://dbpedia.org/ontology/place> ?v5 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfBeauchampSeymour ?countryOfBirthLeader1962NSW ?warOfHeatherRoyProfession
WHERE {
  # War associated with Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL { 
    dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?warOfBeauchampSeymour .
  }

  # Leader of the 1962 New South Wales State Election and their birthplace country
  {
    SELECT DISTINCT ?leader1962NSW (SAMPLE(?countryOfBirthLeader1962NSW) AS ?countryOfBirthLeader1962NSW)
    WHERE {
      dbr:1962_New_South_Wales_state_election dbo:leader ?leader1962NSW .
      ?leader1962NSW dbo:birthPlace ?birthPlaceLeader1962NSW .
      ?birthPlaceLeader1962NSW dbo:country ?countryOfBirthLeader1962NSW .
    }
  }

  # Heather Roy's military unit and associated war
  OPTIONAL {
    dbr:Heather_Roy dbo:militaryUnit ?heatherRoyProfession .
    ?heatherRoyProfession dbo:participatedIn ?warOfHeatherRoyProfession .
  }
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,63,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v6 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v6 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # The residence is a settlement and British
  ?residence rdf:type dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Sean Pertwee's claim to fame (films or military conflicts)
  dbr:Sean_Pertwee dbo:claimToFame ?fame .
  
  # Fame is a film or military conflict
  ?fame rdf:type/(dbo:Film|dbo:MilitaryConflict) .

  # Jon Pertwee and his child Sean Pertwee
  dbr:Jon_Pertwee dbo:child dbr:Sean_Pertwee .

  # Native of the residence
  ?residence dbo:native ?native .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
659,63,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander1 ?commander2 ?officeHolder
WHERE {
  # Find the war involving Rutger Jan Schimmelpenninck
  ?war a dbo:MilitaryConflict ;
      dbo:participant dbr:Rutger_Jan_Schimmelpenninck .

  # Find the commander of the 1st Light Cavalry Lancers Regiment during this war
  ?regiment a dbo:MilitaryUnit ;
            dbo:commander ?commander1 ;
            dbo:participatedIn ?war .
  
  FILTER (str(?regiment) = ""1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)"")

  # Find the commander of Rutger Jan Schimmelpenninck's force
  ?force a dbo:MilitaryUnit ;
         dbo:commander ?commander2 ;
         dbo:participatedIn ?war .

  # Find an office holder native to the Kingdom of Ireland
  ?officeHolder a dbo:OfficeHolder ;
                dbo:nationality dbr:Kingdom_of_Ireland .
  
  FILTER (str(?force) = str(?regiment)) # Ensure it's the same force
}",7,13,8,3,3,3,3,71,0,0,15,0,0.0,0
232,31,test,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?child
WHERE {
  # Find the actor of ""Dog Soldiers""
  dbr:Dog_Soldiers_(film) dbo:starring ?actor .

  # Get Jon Pertwee's birth name
  dbr:Jon_Pertwee foaf:name ?birthName .
  
  # Find the person with that birth name
  ?person foaf:name ?birthName .
  
  # Find the child of that person
  ?child dbo:parent ?person .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
528,60,test,"Give me the force of the person born as the birth name of Narciso Campero and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war ?eventInChile WHERE {
  # Find Narciso Campero
  ?person dbo:birthName ""Narciso Campero""@en .
  
  # Find the military force associated with him
  ?person dbo:militaryForce ?force .

  # Find a war involving this military force
  ?war dbo:participatingMilitaryUnit ?force ;
       dbo:location dbr:Chile .

  # Find societal events in Chile related to this war
  ?eventInChile dbo:relatedEvent ?war .
}
```",6,7,7,3,2,3,3,71,0,0,4,0,0.0,0
232,24,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film ?conflict WHERE {
  # Find Sean Pertwee's resource
  ?person a dbo:Actor ;
          foaf:name ""Sean Pertwee""@en ;
          dbp:nationality dbr:United_Kingdom ;
          dbp:birthPlace dbr:London .

  # Find films associated with him as claim to fame
  ?film dbo:starring ?person .
  
  # Find military conflicts associated with him as claim to fame
  ?conflict dbo:participant ?person .

  FILTER (lang(?film) = 'en' && lang(?conflict) = 'en')
}
```

This query does the following:
- It identifies Sean Pertwee by his role as an actor, nationality, and birthplace.
- It retrieves films (`?film`) in which he has starred.
- It also retrieves military conflicts (`?conflict`) in which he participated.
- The `FILTER` ensures that the results are in English.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
659,53,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:Person .
  
  # Office holder in the Kingdom of Ireland
  ?officeHolderPosition dbo:country dbr:Kingdom_of_Ireland ;
                       dbo:positionHeldBy ?commander .

  # Commander in the Battle of Leipzig
  ?battle dbo:commander ?commander ;
          a dbo:MilitaryConflict ;
          rdfs:label ""Battle of Leipzig""@en .
  
  # Military force associated with Rutger Jan Schimmelpenninck
  ?militaryForce dbo:commander ?commander ;
                 dbo:associatedWith dbr:Rutger_Jan_Schimmelpenninck .

}
```

This query attempts to find a person (`?commander`) who:
- Is classified as a `Person`.
- Held an office in the Kingdom of Ireland.
- Was a commander in the Battle of Leipzig.
- Was associated with Rutger Jan Schimmelpenninck's military force.

Note: The exact properties and classes used (like `dbo:country`, `dbo:positionHeldBy`, etc.) are based on typical DBpedia ontology structures. Adjustments might be necessary depending on the actual data available in DBpedia at the time of querying.",6,10,7,3,3,3,3,71,0,0,6,0,0.0,0
54,59,test,Give me the child of the father of the child of Thinkhaya of Pagan and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfThinkhaya ?parentOfGrandparentOfThadoMinsaw WHERE {
  # Thinkhaya of Pagan and his child
  dbr:Thinkhaya_of_Pagan dbo:spouse ?spouse1 .
  ?spouse1 dbo:child ?childOfThinkhaya .

  # Thado Minsaw of Prome and his parent's parent (grandparent)
  dbr:Thado_Minsaw_of_Prome dbo:parent ?parentOfThadoMinsaw .
  ?parentOfThadoMinsaw dbo:parent ?parentOfGrandparentOfThadoMinsaw .

  # Find the common link
  FILTER (?childOfThinkhaya = ?parentOfGrandparentOfThadoMinsaw)
}
```",6,6,7,3,2,3,3,71,0,0,1,0,0.0,0
10,25,test,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist WHERE {
  # Find Luke Francis Vibert and his band members
  ?vibert dbo:birthName ""Luke Francis Vibert""@en .
  ?vibert dbo:memberOfBand ?band .
  ?band dbo:bandMember ?bandMember .

  # Find Matt Colton and his associated musical artists
  ?colton dbo:birthName ""Matt Colton""@en .
  ?colton dbp:associatedMusicalArtist ?artist .
  ?artist rdf:type dbo:MusicArtist .
  
  BIND(?artist AS ?associatedArtist)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
801,54,test,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/property/writer> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?producer ?song WHERE {
  # Find The Shadow and their alter ego
  dbr:The_Shadow dbo:alterEgo ?alterEgo .
  
  # Ensure the alter ego is a musical artist and producer
  ?alterEgo rdf:type dbo:MusicalArtist ;
            dbo:occupation ?producer .

  # Ensure the producer has produced a song
  ?producer dbo:work ?song .
  ?song rdf:type dbo:Songs .

  # Find association with Chris Taylor (music producer)
  ?producer dbo:associatedMusicalArtist dbr:Chris_Taylor_(music_producer) .
}
```",6,10,7,3,3,3,3,71,0,0,2,0,0.0,0
994,49,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v4 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower (band)
  ?watchtower dbo:associatedBandOrMusicalArtist dbr:Watchtower_(band) .
  
  # Step 2: Find the associated musical artist of that artist
  ?firstAssociatedArtist dbo:associatedBandOrMusicalArtist ?watchtower .
  
  # Step 3: Identify Don Dokken's persona as a musical artist
  ?donDokken dbr:Don_Dokken ;
            dbo:bandMemberOf ?dokkenBand .
  
  # Step 4: Find a band member of the person born who is also a musical artist
  ?finalArtist dbo:bandMemberOf ?dokkenBand ;
               a dbo:MusicalArtist .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
392,28,test,"Give me the entity in the region, that is a country, of Central European Time and region of the time zone, that is a sports event, of Aguilar de Segarra and province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v5 . ?v5 <http://dbpedia.org/ontology/province> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v5 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find countries in the region of Central European Time
  ?country dbo:timeZone dbr:Central_European_Time ;
           a dbo:Country .

  # Find sports events related to CET
  ?event dbo:location ?country ;
         a dbo:SportsEvent .

  # Find Sebastiano Bianchetti's residence details
  dbr:Sebastiano_Bianchetti dbo:nationality dbr:Italy ;
                           dbo:residence ?settlement .
  
  ?settlement dbo:province ?province ;
              a dbo:Settlement .

  # Aguilar de Segarra is in the province of Lleida, Spain
  dbr:Aguilar_de_Segarra dbo:province dbr:Lleida .

  # Match the province with Sebastiano Bianchetti's residence
  ?province rdfs:label ""Lleida""@en .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
356,18,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/team> ?result . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v1 <http://dbpedia.org/ontology/successor> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
    # Step 1: Find the native of Wolverhampton who is both a soccer player and manager.
    ?person dbo:nationality dbr:Wolverhampton .
    ?person dbo:occupation dbr:Soccer_player .
    ?person dbo:occupation dbr:Soccer_manager .

    # Step 2: Identify the predecessor of the 2015 Sacramento Republic FC season.
    ?season1 dbo:sport dbr:Soccer .
    ?season1 dbo:club dbr:Sacramento_Republic_FC_season_2015 .
    ?predecessorSeason dbo:successor ?season1 .

    # Step 3: Identify the successor of that predecessor season.
    ?successorSeason dbo:predecessor ?predecessorSeason .

    # Step 4: Find the team associated with this successor season.
    ?successorSeason dbo:club ?team .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
312,8,test,Give me the entity in the birthplace of Giorgio Grigolli and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthplace ?bergamoEntity
WHERE {
  # Find Giorgio Grigolli's birthplace
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthplace .

  # Find an entity in the Province of Bergamo
  ?bergamoEntity dbo:locatedIn dbr:Province_of_Bergamo .
}
```",3,3,4,2,2,2,2,9,0,0,228,0,0.0,0
314,22,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find awards associated with Sergei Makovetsky
  ?award dbo:recipient dbr:Sergei_Makovetsky .
  
  # Find a person who died at the headquarters of House of Sombrerete
  ?person dbo:deathPlace dbr:Headquarters_of_House_of_Sombrerete ;
          dbo:deceased true .

  # Check if this person is also an awardee of the same award
  ?award dbo:recipient ?awardee .
  
  FILTER (?awardee = ?person)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
54,51,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of Narapati I of Ava.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Thihapate of Mohnyin's child who is an office holder and royalty
    ?child1 dbo:parent dbr:Thihapate_of_Mohnyin ;
           a dbo:Monarch ;  # Assuming Monarch as a class for royalty
           dbo:officeHolder ?office .

    # Narapati I of Ava's child
    ?child2 dbo:parent dbr:Narapati_I_of_Ava .

    # Predecessor of the identified child1 who is also parent of child2
    ?predecessor dbo:succeededBy ?child1 ;
                 dbo:parentOf ?child2 .
}
```

This query assumes:
- `dbo:Monarch` as a class for royalty.
- The relationships are represented by properties like `dbo:parent`, `dbo:officeHolder`, and `dbo:succeededBy`.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
182,28,test,Give me the war of the work of Gotabhaya Rajapaksa and entity in the nationality of Tamara Kunanayakam and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?gotabhayaWarWork ?tamaraNationality ?easterBombingAuthor
WHERE {
  # Gotabhaya Rajapaksa's work related to war
  dbr:Gotabhaya_Rajapaksa dbo:occupation ?occupation .
  ?occupation rdfs:label ?gotabhayaWarWork .
  FILTER(CONTAINS(LCASE(?gotabhayaWarWork), ""war""))

  # Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .
  ?nationality rdfs:label ?tamaraNationality .

  # Author of the 2019 Sri Lanka Easter bombings (assuming 'author' refers to a key figure or entity)
  dbr:2019_Sri_Lanka_Easter_bombings dbo:creator ?easterBombingAuthor .
  ?easterBombingAuthor rdfs:label ?easterBombingAuthorLabel .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
959,61,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v4 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?managerOfManager WHERE {
  # Step 1: Find the manager of Kashima Antlers in 1998
  ?team dbr:Kashima_Antlers ;
        dbo:coach ?sportsManager .
  
  FILTER(YEAR(?team) = 1998)

  # Ensure it's a sports manager
  ?sportsManager rdf:type dbo:SportsManager .

  # Step 2: Find the residence country of this sports manager
  ?sportsManager dbo:nationality ?residenceCountry .

  # Step 3: Identify the leader in the 2010 Japanese House of Councillors election
  ?election dbr:Japanese_House_of_Councillors_election_2010 ;
           dbo:leader ?politician .
  
  # Find the residence country of this politician
  ?politician dbo:nationality ?residenceCountry .

  # Step 4: Ensure the sports manager's residence matches the politician's residence
  FILTER(?residenceCountry = ?residenceCountry)

  # Step 5: Find the manager of the team managed by the identified sports manager
  ?sportsManagerTeam dbr:Kashima_Antlers ;
                     dbo:coach ?managerOfSportsManager .
  
  ?managerOfSportsManager rdf:type dbo:SportsManager .

  ?managerOfSportsManager dbo:coach ?teamManagedByManagerOfSportsManager .
  
  ?teamManagedByManagerOfSportsManager dbo:coach ?managerOfManager .
}
```",6,9,7,3,2,3,3,71,0,0,6,0,0.0,0
179,18,test,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of the child of Bhumibol Adulyadej.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v3 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?parent a dbo:Monarch ;
          dbo:spouse dbr:Queen_Sirikit_of_Thailand ;
          dbo:child ?person .
  
  ?person a dbo:RoyalFamilyMember ;
          dbo:child ?grandchild .

  ?grandchild dbo:parent dbr:Bhumibol_Adulyadej .
}
```

This query:
- Identifies the monarch (Bhumibol Adulyadej) and his spouse (Queen Sirikit).
- Finds their children who are members of the royal family.
- Checks if these children have a child whose parent is Bhumibol Adulyadej.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
547,36,test,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace
WHERE {
  # James Burton (Egyptologist)
  OPTIONAL {
    VALUES ?person { dbr:James_Burton_(Egyptologist) }
    ?person dbo:deathPlace ?restingPlace .
  }

  # Awardee of Gerald Graham's Award
  OPTIONAL {
    ?award dbr:Gerald_Graham_Award .
    ?award dbo:recipient ?awardee .
    ?awardee dbo:deathPlace ?restingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
427,51,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of Lamberto Andreotti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?andreottiFatherParty WHERE {
  # Romano Prodi's birth name and party affiliation
  OPTIONAL {
    dbr:Romano_Prodi dbo:birthName ?prodiBirthName .
    ?prodiBirthName dbo:partyAffiliation ?prodiParty .
  }

  # Lamberto Andreotti's father and his party affiliation
  OPTIONAL {
    dbr:Lamberto_Andreotti dbo:father ?andreottiFather .
    ?andreottiFather dbo:partyAffiliation ?andreottiFatherParty .
  }
}
```",5,7,6,3,2,3,3,71,0,0,3,0,0.0,0
747,50,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v0 <http://dbpedia.org/property/writer> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band1 ?band2 WHERE {
  # Find the band associated with Tracey Elizabeth McSween
  OPTIONAL {
    ?person dbo:name ""Tracey Elizabeth McSween""@en .
    ?person dbo:memberOf ?band1 .
  }

  # Find the writer of a song by Amba Shepherd and their band
  OPTIONAL {
    ?song dbp:artist dbr:Amba_Shepherd ;
          dbo:lyricsAuthor ?writer .
    ?writer dbo:memberOf ?band2 .
  }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
9,28,test,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Mayor of Northern Ireland Forum
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Northern_Ireland_Forum .

  # Politician associated with QUB
  ?politician a dbo:Politician ;
              dbo:almaMater dbr:Queen's_University_Belfast .

  # Allen Hill, the scientist
  ?scientist a dbo:Scientist ;
             rdfs:label ""Allen Hill""@en ;
             dbo:almaMater ?almaHill .

  # Alma mater of the mayor and politician
  ?mayor dbo:almaMater ?almaMater .
  ?politician dbo:almaMater ?almaMater .

  # Alma mater of Allen Hill
  FILTER(?almaMater = ?almaHill)
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
9,70,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v4 . ?v7 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbo:almaMaterOf ?mayor ;
               dbo:almaMaterOf ?medalist .
  
  ?mayor dbp:title ""Mayor of the Northern Ireland Forum"" ;
         dbo:almaMater ?institution .

  ?medalist dbo:award dbr:Royal_Medals ;
            dbo:almaMater ?institution .

  OPTIONAL { ?institution dbp:nickname ?nickname }
}
```

This query does the following:

- Selects an institution that is both an educational institution and located in Northern Ireland.
- Ensures this institution is the alma mater of a mayor associated with the Northern Ireland Forum.
- Confirms it is also the alma mater of someone who received Royal Medals.
- Optionally retrieves the nickname of this institution.",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
184,52,test,"Give me the child of the child of Archduke Joseph Karl of Austria and parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find Archduke Joseph Karl's child
  ?joseph_karl_child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Step 2: Find the grandchild (child of the child)
  ?grandchild dbo:parent ?joseph_karl_child .

  # Step 3: Ensure this grandchild is a parent of Archduchess Ilona
  ?ilona dbo:parent ?grandchild .

  # Step 4: Identify the landmark at elevation 96.0 and its native settlement
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            dbo:native dbr:Settlement .
  
  # Ensure the grandchild is a native of this settlement
  ?grandchild dbo:native ?landmark .

  # Return the grandchild who fits all criteria
  BIND(?grandchild AS ?childOfChild)
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
391,52,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of All About the Andersons and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Find a notable figure associated with Jackson, Tennessee
  ?person dbo:nativePlace dbr:Jackson,_Tennessee .
  
  # Ensure this person is an actor in ""All About the Andersons""
  ?film dbr:All_About_the_Andersons ;
        dbo:starring ?person .
  
  # Find works considered Michael Ballhaus's claim to fame
  ?fameWork dbo:director dbr:Michael_Ballhaus .
  
  # Ensure this person acted in one of those works
  ?fameWork dbo:starring ?person .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
994,47,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower (band)
  dbr:Watchtower_(band) dbo:musicalArtist ?artist1 .

  # Step 2: Find associated musical artist of the first artist
  ?artist1 dbo:musicalArtist ?artist2 .

  # Step 3: Identify Fredrik Thordendal's band that is an organization
  dbr:Fredrik_Thordendal dbo:memberOfBand ?band .
  FILTER (dbo:Organization IN (rdf:type/rdf:first) && 
          dbo:Band IN (rdf:type/rdf:first) &&
          dbo:Group IN (rdf:type/rdf:first))

  # Step 4: Identify a member of this band who is part of another band, group, and organization
  ?member dbo:memberOfBand ?band .
  ?member dbo:musicalArtist ?artist3 .

  # Final step: Find the associated musical artist of this member's band
  ?band dbo:musicalArtist ?finalArtist .
}
```",5,9,6,3,2,3,3,71,0,0,5,0,0.0,0
659,66,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?societalEvent ?event ?conflict ?commanderInWar
WHERE {
  # Arthur Wellesley, 1st Duke of Wellington's military force
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:militaryCommanderOf ?militaryForce .

  # Societal event and event related to the military force
  ?militaryForce dbo:participatedIn ?societalEvent .
  ?militaryForce dbo:participatedIn ?event .

  # Rutger Jan Schimmelpenninck's commander in a war
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryCommanderOf ?commanderInWar .
  
  # Event and military conflict related to the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:participatedIn ?conflict .
  ?conflict rdf:type dbo:MilitaryConflict .

  # Ensure all are events and military conflicts
  ?societalEvent rdf:type dbo:Event .
  ?event rdf:type dbo:MilitaryConflict .
}
```",7,12,8,3,3,3,3,71,0,0,15,0,0.0,0
547,65,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v4 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v6 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v6 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actorRestingPlace ?awardeeRestingPlace ?childRestingPlace WHERE {
  # Resting place of the actor from ""The Crown"" with Emily Watson
  OPTIONAL {
    dbr:Claire_Foy dbo:spouse ?husband .
    ?husband dbo:profession dbr:Actor .
    ?actor dbp:roleInFilmOrTVSeries dbr:The_Crown .
    ?actor dbo:deathPlace ?actorRestingPlace .
  }

  # Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?awardee dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?awardee dbo:deathPlace ?awardeeRestingPlace .
  }

  # Resting place of the child of James Burton (property developer)
  OPTIONAL {
    dbr:James_Burton_(property_developer) dbo:child ?child .
    ?child dbo:deathPlace ?childRestingPlace .
  }
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
547,71,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of the actor of the show with Emily Richard and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v8 <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v8 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v7 . ?v4 <http://dbpedia.org/property/starring> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?restingPlace WHERE {
  # Part 1: Resting place of the awardee of the award of Gerald Graham
  {
    ?award dbo:recipient ?awardee .
    ?award dbo:winner ?awardee .
    ?awardee foaf:name ""Gerald Graham"" .
    OPTIONAL { ?awardee dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Part 2: Resting place of the actor in a show with Emily Richard
  {
    ?show dbo:starring ?actor .
    ?show dbo:starring dbr:Emily_Richard .
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Part 3: Resting place of the grandchild of William Haliburton
  {
    ?parent dbo:child ?child .
    ?child dbo:child ?grandchild .
    ?parent foaf:name ""William Haliburton"" .
    OPTIONAL { ?grandchild dbo:deathPlace ?restingPlace . }
  }
}
ORDER BY ?restingPlace",9,9,10,3,3,3,3,71,0,9,1,0.0,0.0,0
55,28,test,"Give me the band of the reference, that is a band, to Newsted and band member of the producer, that is a band, of Used to Love Her and band member of the band member, that is a band and a group, of San Francisco Symphony.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v5 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Newsted's band
  dbr:Marty_Newsted dbo:memberOf ?band1 .
  
  # Producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  ?producer dbo:memberOf ?band2 .
  FILTER (str(?song) = ""Used_to_Love_Her"") .

  # Band member of San Francisco Symphony who is also a band and group
  ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony ;
                  dbo:memberOf ?band3 .
  ?band3 rdf:type/(dbo:Band|dbo:MusicalGroup) .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
303,25,test,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v4 . ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find El Valle de Antón in Panama
  ?valle a dbo:Settlement ;
         dbo:country dbr:Panama ;
         rdfs:label ""El Valle de Antón""@en .

  # Find Arnulfo Arias as a politician from El Valle de Antón
  ?arias a dbo:Politician ;
         dbo:birthPlace ?valle ;
         dbo:party ?party .

  # Find the United States invasion of Panama event involving Arnulfo Arias
  ?invasion a dbo:Event ;
            dbo:location dbr:Panama ;
            dbo:participant ?arias .

  # Identify the country related to the party
  ?country a dbo:Country ;
           dbo:party ?party .
  
  # Return the entity (country)
  BIND(?country AS ?entity)
}
```",5,7,6,2,3,2,3,28,0,0,1,0,0.0,0
404,49,test,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Princess ;
            foaf:name ""Victoria Louise, Princess Royal""@en ;
            dbp:spouse ?spouse .

  # Step 2: Find her spouse
  ?spouse a dbo:Person ;
          foaf:name ?spouseName .

  # Step 3: Determine the father of this spouse
  ?father a dbo:Father ;
          foaf:name ?fatherName ;
          dbp:child ?spouse .

  # Step 4: Identify the child of this father who is royalty
  ?father dbp:child ?child .
  ?child a dbo:Royalty ;
         foaf:name ?childName .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,62,test,Give me the reference to the name of the party of Michele Pinto and party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v6 . ?v4 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v6 <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?micheleParty ?fatherParty ?romanoParty WHERE {
  # Michele Pinto's party affiliation
  OPTIONAL { 
    dbr:Michele_Pinto dbo:partyAffiliation ?micheleParty .
  }

  # Father of an MIT alumnus' party affiliation
  OPTIONAL {
    ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
             dbo:father ?father .
    ?father dbo:partyAffiliation ?fatherParty .
  }
  
  # Romano Prodi's party affiliation
  OPTIONAL {
    dbr:Romano_Prodi dbo:partyAffiliation ?romanoParty .
  }
}
```",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
547,48,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

# Part 1: Resting place of the child of the child of William Haliburton
SELECT ?childOfChildRestingPlace WHERE {
  # Identify William Haliburton
  dbr:William_Haliburton dbo:spouse ?spouse .
  
  # Find his child (Child A)
  ?childA dbo:parent dbr:William_Haliburton ;
         foaf:name ?childAName .

  # Find the child of Child A (Child B)
  ?childB dbo:parent ?childA ;
          foaf:name ?childBName .
  
  # Determine the resting place of Child B
  OPTIONAL { ?childB dbo:finalBurialPlace ?childOfChildRestingPlace . }
}

UNION

# Part 2: Resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT ?awardeeRestingPlace WHERE {
  # Identify individuals awarded Knight Grand Cross
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George ;
          foaf:name ?awardeeName .
  
  # Determine their resting places
  OPTIONAL { ?person dbo:finalBurialPlace ?awardeeRestingPlace . }
}",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
16,38,test,Give me the professional in the profession of Satomi Ishihara and person born as the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional ?personBornAsBirthName
WHERE {
  # Find Satomi Ishihara's profession
  dbr:Satomi_Ishihara dbo:occupation ?profession .
  
  # Find the person with that profession
  ?professional dbo:occupation ?profession .

  # Find Gigi Rice's birth name
  dbr:Gigi_Rice dbo:birthName ?birthName .
  
  # Find the person born as that name
  ?personBornAsBirthName dbo:birthName ?birthName .
}
```",4,4,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
404,31,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouseBirthName WHERE {
  # Find Prince Ernest Augustus of Hanover (born 1914)
  ?person a dbo:Person ;
          foaf:name ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?birthDate .
  
  FILTER(YEAR(?birthDate) = 1914)

  # Find his parent
  ?parent dbo:child ?person .

  # Find the spouse of that parent who is royalty and has a birth name matching Princess Victoria Louise of Prussia
  ?spouse dbo:spouse ?parent ;
          a dbo:Person, dbo:RoyalFamilyMember ;
          foaf:name ?spouseBirthName .
  
  FILTER(?spouseBirthName = ""Victoria Louise of Prussia""@en)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,49,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?decedent ?capital WHERE {
  # Find the capital of Khemis Miliana District
  ?district a dbo:District ;
            dbo:country dbr:Algeria ;
            dbo:seat ?capital .
  
  FILTER (str(?district) = ""Khemis Miliana District"")

  # Find notable person decedent associated with the capital
  ?decedent dbo:placeOfBirth ?capital .

  # Link to Joseph C. Satterthwaite
  OPTIONAL {
    ?satterthwaite dbp:occupation dbr:Assistant_Secretary_of_State_for_African_Affairs ;
                   dbo:associatedWith ?decedent .
    FILTER (str(?satterthwaite) = ""Joseph_C._Satterthwaite"")
  }
}
```

This query attempts to:

- Identify the capital of Khemis Miliana District.
- Find notable persons born in that capital.
- Check if there is any association between these persons and Joseph C. Satterthwaite.

Please note that this query assumes certain relationships and properties are available in DBpedia, which may not always be the case. Adjustments might be necessary based on actual data availability.",5,6,6,3,2,3,3,71,0,0,16,0,0.0,0
10,20,test,"Give me the professional in  and associated musical artist of Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?associatedArtist ?bandMember
WHERE {
  # Matt Colton's professional role
  dbr:Matt_Colton dbo:profession ?professionalRole .

  # Associated musical artist with Matt Colton
  ?artist dbo:associatedMusicalArtist dbr:Matt_Colton .
  ?artist rdfs:label ?associatedArtist .

  # Luke Francis Vibert's band member who is also an artist
  dbr:Luke_Francis_Vibert dbo:bandMember ?bandMember .
  ?bandMember rdf:type dbo:MusicalArtist .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,66,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?awardee ?leader
WHERE {
  # Ferenc Szálasi's commander in force
  ?szalasi dbo:commanderInForce ?commander .
  FILTER(STR(?szalasi) = ""Ferenc_Szálasi"")

  # Awardee of Bruce Fraser, 1st Baron Fraser of North Cape
  ?fraser dbo:awardee ?awardee .
  FILTER(STR(?fraser) = ""Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape"")

  # Leader of the office (government agency) of Gustav Jonson
  ?jonson dbo:leaderOfOffice ?office .
  ?office a dbo:GovernmentAgency .
  FILTER(STR(?jonson) = ""Gustav_Jonson"")
  
  # Ensure the same person is linked to all three roles
  FILTER(?commander = ?awardee && ?awardee = ?leader)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
427,34,test,Give me the party of Romano Prodi and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?prodiParty ?pintoPartyName WHERE {
  # Get Romano Prodi's political party
  dbr:Romano_Prodi dbo:politicalParty ?prodiParty .
  
  # Get Michele Pinto's political party and its name
  dbr:Michele_Pinto dbo:politicalParty ?pintoParty .
  ?pintoParty rdfs:label ?pintoPartyName .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,70,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v7 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Antiochus (son of Antiochus III the Great)
    ?antiochus a dbo:Person ;
        dbo:father dbr:Antiochus_III_the_Great ;
        rdfs:label ""Antiochus""@en .

    # Successor who is royalty
    ?successor dbo:predecessor ?antiochus ;
        a dbo:Monarch .

    # Child of successor
    ?child dbo:parent ?successor ;
        a dbo:Person .

    # Spouse of child
    ?spouse dbo:spouse ?child .

    # Commander in Battle of Panium and their child
    ?commander dbo:participatedIn dbr:Battle_of_Panium ;
        dbo:child ?commanderChild .

    # Child of commander's child (grandchild)
    ?commanderGrandchild dbo:parent ?commanderChild .

    # Seleucus II Callinicus and his royal child, then that child's child
    ?seleucus a dbo:Person ;
        rdfs:label ""Seleucus_II_Callinicus""@en .
    
    ?royalChild dbo:parent ?seleucus ;
        a dbo:Monarch .

    ?greatGrandchild dbo:parent ?royalChild .

    # Ensure the spouse is related to both grandchildren
    FILTER (?spouse = ?commanderGrandchild || ?spouse = ?greatGrandchild)
}
```",8,10,9,3,3,3,3,71,0,0,2,0,0.0,0
184,58,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of Géza von Habsburg and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/father> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfCommonality WHERE {
  # Step 1: Archduchess Margaret of Austria (born 1925)
  VALUES (?margaret) { dbr:Archduchess_Margaret_of_Austria_(1925) }
  
  # Step 2: Find her parent
  ?margaret dbo:parent ?parentMargaret .
  
  # Step 3: Find the child of this parent
  ?childOfParent dbo:parent ?parentMargaret .

  # Step 4: Identify Géza von Habsburg and find his parent
  VALUES (?geza) { dbr:Géza_von_Habsburg }
  ?geza dbo:parent ?parentGeza .
  
  # Step 5: Find the commonality between step 3 and step 4
  FILTER(?childOfParent = ?geza)

  # Step 6: Identify Archduke Joseph Karl of Austria and find his child
  VALUES (?joseph) { dbr:Archduke_Joseph_Karl_of_Austria }
  ?joseph dbo:child ?childJoseph .

  # Step 7: Find the child of this child (grandchild)
  ?grandChild dbo:parent ?childJoseph .

  # Step 8: Determine the parent of the commonality found in step 5
  ?commonIndividual dbo:parent ?parentOfCommonality .
  FILTER(?geza = ?commonIndividual)
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
404,69,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v7 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v7 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia by her birth name
  ?princess a dbo:Person ;
           foaf:name ""Princess Victoria Louise of Prussia""@en ;
           dbo:birthName ?birthName .

  # Step 2: Find the spouse of Princess Victoria Louise of Prussia
  ?princess dbo:spouse ?spouse .

  # Step 3: Identify Ernest Augustus, Duke of Brunswick and his child who is royalty
  ?ernestAugustus a dbo:Person ;
                 foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?child dbo:parent ?ernestAugustus ;
         a dbo:RoyalFamilyMember .

  # Step 4: Find the father of the spouse of Princess Victoria Louise of Prussia
  ?spouse dbo:father ?fatherOfSpouse .

  # Ensure the child is related to the father of the spouse
  ?child dbo:parent ?fatherOfSpouse .
}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
184,24,test,Give me the parent of Archduchess Ilona of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual WHERE {
  ?ilona dbo:parent ?parent .
  VALUES ?ilona { <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> }

  ?josephKarl dbo:child ?child1 .
  VALUES ?josephKarl { <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> }
  
  ?child1 dbo:child ?grandchild .

  FILTER (?parent = ?grandchild)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
820,17,test,Give me the child of the parent of the professional in Actor and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
SELECT ?child WHERE {
  ?actor dbo:occupation dbr:Actor .
  ?actor dbo:parent ?parent .
  ?parent dbo:child ?child .
}
```

This query assumes:
- `dbo:occupation` is used to identify the actor's profession.
- `dbr:Actor` refers to the DBpedia resource for ""Actor.""
- `dbo:parent` and `dbo:child` are properties linking individuals to their parents and children, respectively.",4,4,5,3,2,3,2,20,0,0,128,0,0.0,0
767,71,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of the reference to George Kilbon Nash and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v8 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?v5 <http://dbpedia.org/property/governor> ?v4 . ?v7 <http://dbpedia.org/property/alterEgo> ?v8 . ?v4 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://dbpedia.org/property/leaderParty> ?v1 . ?v7 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?almaMater ?settlement WHERE {
  # Matthew Burland's alter ego or fictional character
  ?person rdfs:label ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?alterEgo .

  # Alma mater of George Kilbon Nash's administration
  ?nash rdfs:label ""George Kilbon Nash""@en .
  ?nash dbo:positionHeld ?administration .
  ?administration dbo:almaMater ?almaMater .

  # Settlement of the writer of ""Where It's At""
  ?album rdfs:label ""Where It's At (Dustin Lynch album)""@en .
  ?album dbo:lyricsBy ?writer .
  ?writer dbo:birthPlace ?settlement .
}
```",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
77,17,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of Alexander Chechenskiy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/property/leader> ?v3 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force WHERE {
  # Find the mayor of Warsaw
  ?mayor dbo:positionTitle ""Mayor""@en .
  ?mayor dbo:city dbr:Warsaw .

  # Check if the territory is administered by an organization
  OPTIONAL { 
    ?territory dbo:administeredBy ?organisation .
    FILTER EXISTS { ?organisation a dbo:Organization }
  }

  # Find information related to Alexander Chechenskiy and war
  ?chechenskiy dbo:nationality dbr:Chechen_nation .
  ?chechenskiy rdfs:label ""Alexander Chechenskiy""@en .

  OPTIONAL {
    ?war dbo:participatedIn ?chechenskiy .
    ?war dbo:force ?force .
  }
}
```

This query attempts to find the mayor of Warsaw, checks if their territory is administered by an organization, and looks for any connection to Alexander Chechenskiy in a war context.",4,5,5,3,2,3,2,20,0,0,6,0,0.0,0
54,58,test,"Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  
  # Narapati I of Ava's grandchild (child's parent)
  ?narapatiGrandparent dbo:parentOf ?narapatiChild .
  ?narapatiChild dbo:childOf dbr:Narapati_I_of_Ava .

  # Thihapate of Mohnyin's predecessor
  ?thihapateChild dbo:successorOf ?predecessor .
  ?thihapateChild dbo:childOf dbr:Thihapate_of_Mohnyin .

  # The person must be the same in all three roles
  FILTER (?thinkhayaChild = ?narapatiGrandparent && ?thinkhayaChild = ?predecessor)

  # Ensure the person is an office holder and royalty
  ?person dbo:officeHolderOf ?office .
  ?person dbo:royalty dbr:Royal_Titles .

  # The person must be the one identified in all roles
  FILTER (?person = ?thinkhayaChild)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
391,55,test,"Give me the native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find the city known as Hub City
  ?city dbo:commonName ""Charleston, South Carolina""@en .
  
  # Find a movie that is also a work and TV show with Roz Ryan
  ?movie dbo:starring dbr:Roz_Ryan ;
         dbo:adaptationOfWork ?work ;
         dbo:tvAdaptation ?tvShow .

  # Find the actor of Michael Ballhaus's claim to fame (a film he worked on)
  ?film dbo:director ?ballhaus .
  ?ballhaus foaf:name ""Michael Ballhaus""@en .
  ?film dbo:starring ?actor .

  # Ensure the actor is from Charleston, South Carolina
  ?actor dbo:nativePlace ?city .
}
```",6,10,7,2,3,3,3,71,0,0,1,0,0.0,0
701,28,test,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Henuttawy's parent
  ?henuttawy dbo:spouse dbr:Ramesses_II .
  ?henuttawy dbo:childOf ?parent .

  # Ramesses II's spouse
  ?ramesses2 dbo:spouse ?spouse .
  
  # Nefertari's child and their parent
  ?nefertari dbo:childOf dbr:Ramesses_II ;
            dbo:child ?child .
  ?child dbo:parent ?spouse .

  FILTER (?parent = ?spouse)
}
```

This query assumes that the relationships are correctly modeled in DBpedia. It checks for the parent of Henuttawy, verifies if this person is also Ramesses II's spouse, and confirms they are the parent of Nefertari's child.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,45,test,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v0 <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseName ?actressName WHERE {
  # Find Ted McGinley's spouse
  dbr:Ted_McGinley dbo:spouse ?spouse .
  
  # Get the birth name of Ted McGinley's spouse
  ?spouse foaf:name ?spouseName ;
          foaf:nick ?birthName .

  # Find an Ohio State University alumnus who is an actress
  ?actress a dbo:Person ;
           dbo:almaMater dbr:Ohio_State_University ;
           dbo:occupation dbr:Actress .
  
  # Get the birth name of the actress
  ?actress foaf:name ?actressName ;
          foaf:nick ?birthName .

  # Ensure the birth names match
  FILTER (?birthName = ?birthName)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,64,test,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfOffice
WHERE {
  # Gustav Jonson as a leader in Eastern Front (World War II)
  ?gustavJonson dbo:officeHolderOf ?easternFrontLeaderRole .
  
  # Commander in Volcano and Ryukyu Islands campaign
  ?campaignAward dbo:awardee ?commanderInCampaign .
  
  # Link Gustav Jonson to the award
  ?gustavJonson dbr:Volcano_and_Ryukyu_Islands_campaign_award_? ?campaignAward .

  # Find the leader of the office held by this person
  ?easternFrontLeaderRole dbo:leader ?office .
  ?office dbo:head ?leaderOfOffice .
  
  FILTER(?gustavJonson = ?commanderInCampaign)
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
54,52,test,Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  # Narapati I of Ava and his child
  ?narapatiI a dbo:Monarch ;
             dbo:child ?childNarapatiI .

  # Thinkhaya of Pagan, his child, and the father (Thinkhaya himself)
  ?thinkhaya a dbo:Monarch ;
             dbo:child ?childThinkhaya .
  
  # Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameittaThiriMahaDhammaDewi a dbo:Monarch ;
                             dbo:predecessor ?predecessorAmeitta .

  # Find the parent of the child of Narapati I (which is Narapati I himself)
  ?parentOfChild a dbo:Monarch ;
                 dbo:child ?childNarapatiI .
  
  # Ensure the parent of the child of Narapati I is also the child of Thinkhaya
  ?parentOfChild dbo:child ?childThinkhaya .

  # Ensure this person is also the child of the predecessor of Ameitta Thiri Maha Dhamma Dewi
  ?predecessorAmeitta dbo:child ?parentOfChild .
}
```",6,6,7,3,3,3,3,71,0,10,1,0.0,0.0,0
9,54,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater1 ?almaMater2 WHERE {
  # Royal Medals awardee
  ?award dbr:Royal_Medals ;
         dbo:recipient ?person1 .
  
  # Alma mater of the Royal Medals awardee
  ?person1 dbo:almaMater ?almaMater1 .

  # Northern Ireland Forum Mayor and QUB figure
  ?mayor a dbo:Politician ;
         dbo:officeHolder ?office ;
         dbo:almaMater ?almaMater2 .
  
  # Office related to Northern Ireland Forum
  ?office dbr:Northern_Ireland_Forum .

  # Association with Queen's University Belfast (QUB)
  ?mayor dbo:affiliation dbr:Queen's_University_Belfast .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
492,68,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v4 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/author> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v5 . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commanderInWar WHERE {
  # Step 1: Find the commander in the Battle of Verdun
  ?battleOfVerdun dbo:commander ?verdunCommander .
  FILTER(STRSTARTS(STR(?battleOfVerdun), ""http://dbpedia.org/resource/Battle_of_Verdun""))

  # Step 2: Find a military conflict involving this commander
  ?militaryConflict dbo:commander ?verdunCommander ;
                   rdf:type dbo:MilitaryConflict .

  # Step 3: Find the capital of Algeria and a person who died there
  dbr:Algiers dbo:capitalOf dbr:Algeria .
  ?person dbp:placeOfBirth ?algiers ;
          dbo:dateOfDeath ?deathDate .

  # Step 4: Identify the author of ""French Algeria"" and find their work
  ?author dbo:work ?frenchAlgeriaWork .
  FILTER(STRSTARTS(STR(?frenchAlgeriaWork), ""http://dbpedia.org/resource/French_Algeria""))
  ?author dbo:dateOfDeath ?deathDateAuthor .

  # Step 5: Find the commander in the war identified in step 2
  ?militaryConflict dbo:commander ?commanderInWar .
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
488,55,test,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of the commander in Boshin War and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYūkiFather ?birthPlaceBoshinCommander ?administrationGoMizunooFather
WHERE {
  # Yūki Hideyasu's father who was a politician
  ?yukiHideyasu dbo:father ?yukiFather .
  ?yukiFather dbo:occupation dbr:Politician .
  ?yukiFather dbo:deathPlace ?deathPlaceYūkiFather .

  # Commander in the Boshin War
  ?boshinCommander dbo:commandedBattle dbr:Boshin_War .
  ?boshinCommander dbo:birthPlace ?birthPlaceBoshinCommander .

  # Emperor Go-Mizunoo's father
  ?goMizunoo dbo:father ?goMizunooFather .
  ?goMizunooFather dbo:administered ?administrationGoMizunooFather .
}
```",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
378,70,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warThomasTrigge ?claimToFameThomasTrigge ?warCarlPontusGahn ?claimToFameCarlPontusGahn
WHERE {
  # Thomas Trigge's involvement in the Peninsular War
  dbr:Peninsular_War dbo:commander dbr:Thomas_Trigge .
  
  # Find wars commanded by Thomas Trigge and their claims to fame
  ?warThomasTrigge dbo:commander dbr:Thomas_Trigge .
  ?claimToFameThomasTrigge dbo:relatedWork ?warThomasTrigge ;
                          a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Carl Pontus Gahn's involvement in another war
  ?personCarlPontusGahn dbo:birthName ""Carl Pontus Gahn"" .
  ?warCarlPontusGahn dbo:commander ?personCarlPontusGahn .
  
  # Find wars commanded by Carl Pontus Gahn and their claims to fame
  ?claimToFameCarlPontusGahn dbo:relatedWork ?warCarlPontusGahn ;
                             a dbo:MilitaryConflict, dbo:SocietalEvent .

}
```

This query:
- Identifies the Peninsular War as involving Thomas Trigge.
- Searches for other wars commanded by Thomas Trigge and their claims to fame that are both military conflicts and societal events.
- Finds Carl Pontus Gahn's birth name and identifies any wars he commanded, along with their claims to fame.",8,12,9,3,3,3,3,71,0,0,2,0,0.0,0
617,67,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Battle of Panium commander
  ?battle dbr:Battle_of_Panium .
  ?commander dbo:commanderOf ?battle .

  # Child of the commander
  ?child dbo:child ?commander .

  # Parent of the child (which is the commander)
  ?parent dbo:spouse ?child .

  # Antiochus III the Great and his son
  dbr:Antiochus_III_the_Great dbo:son dbr:Antiochus_IV_Epiphanes .
  
  # Successor of Antiochus IV Epiphanes
  dbr:Antiochus_IV_Epiphanes dbo:successor ?successor .

  # Child of the successor who is royalty
  ?royaltyChild dbo:child ?successor ;
                a dbo:Monarch .

  # Spouse of the royalty child
  ?spouse dbo:spouse ?royaltyChild .
  
  FILTER (?parent = ?spouse)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
747,60,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Step 1: Find the person known as ""Shèna""
  ?shena a dbo:Person ;
         rdfs:label ""Shèna""@en .
  
  # Get Shèna's birth date
  ?shena dbp:birthday ?birthday .

  # Step 2: Find another person (decedent) with the same birth date
  ?decedent a dbo:Person ;
            dbp:birthday ?birthday ;
            dbo:deathPlace dbr:Zolotonosha ;
            dbo:sport dbr:Soccer ;
            dbo:occupation dbr:Athlete .

  # Step 3: Retrieve the band associated with this decedent
  OPTIONAL { ?decedent dbo:musicalBand ?band . }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
492,66,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v6 . ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v6 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person1 ?person2 ?person3 WHERE {
  # Find the capital of Khemis Miliana District
  ?district dbo:capital ?capital .
  FILTER(STRSTARTS(LCASE(?district), ""khemis miliana district"")) .

  # Person who died at this capital (settlement)
  ?death1 dbp:placeOfDeath ?capital ;
          dbp:deceased ?person1 .
  
  # Joseph C. Satterthwaite's work
  ?work dbr:Joseph_C._Satterthwaite dbo:positionHeld ""US Assistant Secretary of State for African Affairs"" .

  # Person who died at this work
  ?death2 dbp:placeOfDeath ?work ;
          dbp:deceased ?person2 .
  
  # Frédéric-Georges Herr's war command
  ?war dbo:commander ?herr ;
       a dbo:MilitaryConflict, dbo:Event .

  FILTER(STRSTARTS(LCASE(?herr), ""frédéric-georges herr"")) .

  # Person who died in this war (military conflict and event)
  ?death3 dbp:placeOfDeath ?war ;
          dbp:deceased ?person3 .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
778,19,test,"Give me the author of the work, that is a software, of the author of Pushd and popd and entity in the award of Ralph L. Brinster.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?result <http://dbpedia.org/ontology/location> ?v2 . ?v4 <http://dbpedia.org/ontology/author> ?result . <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  # Find Bill Joy as the creator of Pushd and Popd
  ?command dbo:creator dbr:Bill_Joy .
  
  FILTER(?command IN (dbr:Pushd, dbr:Popd))
  
  # Find software authored by Bill Joy
  ?software dbo:author dbr:Bill_Joy .
  
  # Find an entity in the award of Ralph L. Brinster
  ?award dbo:recipient dbr:Ralph_L._Brinster .
  ?entity dbo:partOfAward ?award .
  
  # Return the author of the software
  VALUES (?software) { ?software }
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
360,22,test,"Give me the writer of the work, that is an album, of Dave Flett and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?albumWriter ?deathPlace
WHERE {
  # Find the album written by Dave Flett
  ?album dbo:writer dbr:Dave_Flett .
  ?album dbo:title ?title .

  # Get the writer of that album
  ?album dbo:writer ?albumWriter .

  # Find the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .
  
  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
666,18,test,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as the nickname of England national beach soccer team.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/ontology/manager> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v3 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Leonid Slutsky's associated club
  ?slutskyClub a dbo:SoccerClub ;
               dbo:manager dbr:Leonid_Slutsky .

  # Find the England National Beach Soccer Team and its nickname
  ?beachTeam a dbo:SoccerTeamSeason, dbo:SportsTeam ;
             rdfs:label ""England national beach soccer team""@en .
  ?beachTeam dbo:nickname ?nickname .

  # Find players who are sports managers for both teams
  ?player a dbo:Person ;
          dbo:sportsManager ?slutskyClub ;
          dbo:sportsManager ?beachTeam .
}
```",5,8,6,3,2,3,2,20,0,0,2,0,0.0,0
701,20,test,Give me the parent of the child of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfChild ?parentOfMeritamen WHERE {
  # Ramesses II and his children
  VALUES (?ramessesII) { dbr:Ramesses_II }
  
  ?child dbo:father ?ramessesII .
  ?child dbo:mother ?motherOfChild .

  # Parent of the child (either father or mother)
  OPTIONAL { ?parentOfChild dbo:spouse ?motherOfChild . }
  OPTIONAL { ?parentOfChild dbo:spouse ?ramessesII . }

  # Meritamen and her parents
  VALUES (?meritamen) { dbr:Meritamen }
  
  ?meritamen dbo:father ?fatherOfMeritamen .
  ?meritamen dbo:mother ?motherOfMeritamen .

  BIND(?fatherOfMeritamen AS ?parentOfMeritamen)
  OPTIONAL { BIND(?motherOfMeritamen AS ?parentOfMeritamen) }

}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,68,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v7 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v7 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck and his military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService ?service .
  
  # The service should be a societal event, general event, and military conflict
  ?service rdf:type/rdfs:subClassOf* (dbo:SocietalEvent dbo:Event dbo:MilitaryConflict) .

  # Find the native commander in Kingdom of Ireland who is also an office holder
  ?commander dbo:nativeCountry dbr:Kingdom_of_Ireland ;
             dbo:officeHolder true ;
             dbo:militaryService ?service2 .
  
  # The service should be a war involving 'Polish Horse'
  ?service2 rdf:type/rdfs:subClassOf* (dbo:War) .
  ?service2 dbo:participatingUnit dbr:Polish_Horse .

  # Link the military force of Rutger Jan Schimmelpenninck to the commander's service
  ?militaryForce dbo:militaryService ?service ;
                 dbo:militaryService ?service2 .
}
```",8,16,9,3,3,3,3,71,0,0,15,0,0.0,0
9,45,test,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?nickname WHERE {
  # Alma mater for John Alderdice, Baron Alderdice
  OPTIONAL { 
    dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
  }
  
  # Alma mater for Allen Hill (scientist)
  OPTIONAL { 
    dbr:Allen_Hill_(scientist) dbo:almaMater ?almaMater .
  }

  # Organization that is an educational institution and has a nickname in Northern Ireland
  {
    ?org dbo:type dbr:Educational_institution ;
         dbo:location dbr:Northern_Ireland ;
         rdfs:label ?nickname .
    FILTER (CONTAINS(LCASE(?nickname), ""nickname""))
  }
}
ORDER BY ?almaMater",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
281,25,test,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  # Find Heather Roy's DBpedia resource
  ?heatherRoy a dbo:Person ;
              foaf:name ""Heather Roy""@en .

  # Find associations with entities related to ""Colony of New Zealand"" and ""war of the profession""
  ?heatherRoy dbo:profession dbr:War_of_the_Profession ;
              dbo:nationality dbr:New_Zealand_Colony .

  # Ensure the association is a military unit
  ?militaryUnit dbo:militaryUnitOf ?heatherRoy ;
               a dbo:MilitaryUnit .
}
```

This query assumes:
- Heather Roy has a DBpedia entry with her name and profession linked to ""War of the Profession.""
- She has a nationality or connection to the ""Colony of New Zealand.""
- The military unit is directly associated with her.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
182,24,test,Give me the entity in the nationality of Tamara Kunanayakam and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v0 . ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationalityEntity ?warEntity
WHERE {
  # Tamara Kunanayakam's nationality
  dbr:Tamara_Kunanayakam dbo:nationality ?nationalityEntity .

  # Gotabhaya Rajapaksa's associated war
  dbr:Gotabhaya_Rajapaksa dbo:occupation ?occupation .
  ?occupation dbo:relatedWar ?warEntity .
}
```",4,4,5,2,2,2,3,28,0,0,5,0,0.0,0
994,19,test,Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of Red Tide (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist for Watchtower
  ?watchtower dbo:musicalArtist dbr:Watchtower .
  ?watchtower dbo:musicalArtist ?artist1 .

  # Step 2: Find associated musical artist for Red Tide
  ?redTide dbo:musicalArtist dbr:Red_Tide .
  ?redTide dbo:musicalArtist ?artist2 .

  # Step 3: Find the associated musical artist of the artists found in steps 1 and 2
  OPTIONAL { ?artist1 dbo:musicalArtist ?finalArtist1 . }
  OPTIONAL { ?artist2 dbo:musicalArtist ?finalArtist2 . }

  FILTER(?finalArtist1 != dbr:Watchtower)
  FILTER(?finalArtist2 != dbr:Red_Tide)

  # Combine results
  BIND(IF(BOUND(?finalArtist1), ?finalArtist1, ?finalArtist2) AS ?finalArtist)
}
```",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
747,41,test,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Step 1: Get Pavlo Khudzik's birth date
SELECT ?birthDate WHERE {
    dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
}

# Step 2: Find another person born on the same date
SELECT DISTINCT ?person WHERE {
    ?person dbo:birthday ?sameBirthDate .
    FILTER(?sameBirthDate = <INSERT_BIRTH_DATE_HERE>)
    FILTER(?person != dbr:Pavlo_Khudzik)
}

# Step 3: Get Shèna's band
SELECT ?band WHERE {
    dbr:Shèna dbo:memberOfBand ?band .
}

# Step 4: Find the writer of ""Apollo"" by Hardwell and their band
SELECT DISTINCT ?writer ?band WHERE {
    dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?writer .
    OPTIONAL { ?writer dbo:memberOfBand ?band }
}
```

**Instructions for Execution:**

1. **Run Step 1**: Execute the first query to get Pavlo Khudzik's birth date.
2. **Replace `<INSERT_BIRTH_DATE_HERE>`**: Use the retrieved birth date in place of `<INSERT_BIRTH_DATE_HERE>` in Step 2.
3. **Execute Steps 2, 3, and 4**: Run these queries to get the desired results.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
915,16,test,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v3 <http://dbpedia.org/property/father> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://dbpedia.org/ontology/residence> ?v2 . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Find Stephen Verona's birthplace that is a settlement
  ?veronaBirthPlace dbo:birthPlace dbr:Stephen_Verona ;
                   a dbo:Settlement .
  
  # Find Phillip Spaulding's child who is both a fictional character and a soap character
  ?spauldingChild dbo:childOf dbr:Phillip_Spaulding ;
                  a dbo:FictionalCharacter, dbo:SoapCharacter .

  # Determine the father of this child
  ?father dbo:child ?spauldingChild .
  
  # Find the resident of Stephen Verona's birthplace
  ?resident dbo:residence ?veronaBirthPlace .
}
```",4,7,5,2,2,3,2,20,0,0,1,0,0.0,0
184,49,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandparent ?budaParent WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret dbr:Archduchess_Margaret_of_Austria_(1925) .
  
  # Find her parent
  ?parent dbo:child ?margaret .

  # Find the child of that parent (Margaret's sibling or cousin)
  ?sibling dbo:parent ?parent .

  # Find the grandparent (parent of the sibling)
  ?grandparent dbo:child ?parent .

  # Native of Budapest
  ?budaPerson dbo:nativePlace dbr:Budapest .
  
  # Find their parent
  ?budaParent dbo:child ?budaPerson .
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
994,41,test,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower dbr:Watchtower .
  ?watchtower dbo:musicalArtist ?artist1 .

  # Step 2: Find band member of Don Dokken who is also a band member of the artist from step 1
  ?donDokken dbr:Don_Dokken .
  ?donDokken dbo:musicalArtist ?member1 .
  ?artist1 dbo:musicalArtist ?member1 .

  # Step 3: Find associated musical artist of the band member found in step 2
  ?member1 dbo:musicalArtist ?artist2 .

  # Step 4: Check if this artist is part of a band that is both a group and an organization, specifically Meshuggah
  ?meshuggah dbr:Meshuggah .
  ?meshuggah dbo:musicalArtist ?artist2 .
  ?meshuggah rdf:type dbo:Band ;
             dbo:genre/dbo:subClassOf* dbo:Group ;
             dbo:organization ?org .

}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
161,56,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in the force, that is an event, of the figure known as El Director and military force of Spanish Civil War.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?role
WHERE {
  # Francisco Franco as a commander in the Spanish Civil War
  dbr:Francisco_Franco dbo:commanderOf dbr:Spanish_Civil_War .
  
  # El Director is another name for Francisco Franco
  dbr:El_Director owl:sameAs dbr:Francisco_Franco .

  # The military force associated with Francisco Franco and the Spanish Civil War
  ?militaryForce dbo:commander dbr:Francisco_Franco .
  ?militaryForce dbo:partOf dbr:Spanish_Civil_War .

  # Role of the military force in the context of a societal event, an event, and a military conflict
  ?militaryForce a dbo:MilitaryConflict ;
                a dbo:SocietalEvent ;
                a dbo:Event .
  
  OPTIONAL {
    ?militaryForce dbo:role ?role .
  }
}
```",6,10,7,3,3,3,3,71,0,0,32,0,0.0,0
318,8,test,Give me the professional in the profession of Robert Xavier Rodriguez and person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthYear WHERE {
  # Get Robert Xavier Rodriguez's profession
  dbr:Robert_Xavier_Rodriguez dbo:profession ?profession .

  # Find other individuals with the same profession
  ?person a dbo:Person ;
          dbo:profession ?sameProfession ;
          dbp:birthday ?birthday .
  
  FILTER (?sameProfession = ?profession)

  # Extract birth year and filter by 1970
  BIND(YEAR(?birthday) AS ?birthYear)
  FILTER (?birthYear = 1970)

  # Exclude Robert Xavier Rodriguez from the results
  FILTER (?person != dbr:Robert_Xavier_Rodriguez)
}
ORDER BY ?person",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
659,43,test,"Give me the military force of Napoleonic Wars and commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce ?campaignCommander ?warCommander ?polishHorse
WHERE {
  # Napoleonic Wars as the main event
  VALUES ?event { dbr:Napoleonic_Wars }

  # German Campaign of 1813
  ?campaign dbr:German_Campaign_of_1813 .
  
  # Commanders in the German campaign of 1813
  ?campaign dbo:commander ?campaignCommander .

  # Commanders in the Napoleonic Wars
  ?event dbo:commander ?warCommander .

  # Polish Horse as a military unit and organization
  ?polishHorse dbr:Polish_Hussars .
  ?polishHorse rdf:type dbo:MilitaryUnit .
  ?polishHorse rdf:type dbo:Organization .

  # Linking the campaign to the Napoleonic Wars
  ?campaign dbo:partOf ?event .

  # Ensuring the military force is related to the event
  ?militaryForce dbo:participatedIn ?event .
}
```",5,9,6,3,3,3,3,71,0,0,6,0,0.0,0
963,19,test,"Give me the administration of the ruling party, that is a political party, in the location for 21205 and entity in the region, that is a country, of Central European Time.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?result <http://dbpedia.org/property/leaderParty> ?v4 . ?v0 <http://dbpedia.org/property/leaderParty> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  # Find a location with postal code 21205
  ?location dbo:postalCode ""21205"" .
  
  # Ensure the location is in a country within Central European Time
  ?location dbo:country ?country .
  VALUES ?cetCountries { dbr:Germany dbr:Austria dbr:Switzerland } # Add more CET countries if needed
  FILTER (?country IN(?cetCountries))
  
  # Find the ruling party's administration in that location
  ?administration dbo:politicalParty ?rulingParty .
  ?location dbo:government ?administration .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
391,53,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person dbo:nickName ""Chickasaw""@en .
  ?person dbo:birthPlace ?nativePlace .
  
  ?film dbo:starring ?person ;
        dbo:starring dbr:Roz_Ryan ;
        dbo:starring ?departedActor .

  ?departedFilm dbo:starring ?departedActor .
  ?departedFilm rdfs:label ""The Departed""@en .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
232,70,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v4 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  # Step 1: Identify John Pertwee and his claim to fame
  dbr:John_Pertwee dbo:childOf ?parent .
  
  # Find films or military conflicts associated with John Pertwee
  ?filmOrConflict dbo:actor dbr:John_Pertwee .
  
  # Step 2: Identify a French politician and office holder with the same claim to fame
  ?politician dbo:nationality dbr:France ;
              a dbo:Politician ;
              dbo:officeHolder true ;
              dbo:filmOrConflict ?filmOrConflict .

  # Step 3: Find the British settlement residence of this French politician
  ?residence dbo:resident ?politician ;
             a dbo:Settlement ;
             dbo:nationality dbr:United_Kingdom .
  
  # Step 4: Determine the native of this residence
  ?native dbo:nativePlace ?residence .
}
```",8,14,9,3,3,3,3,71,0,0,1,0,0.0,0
16,69,test,Give me the spouse of the person born as the birth name of Ted McGinley and person born as the birth name of the alumnus of Ohio State University and professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v4 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v7 . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?result <http://dbpedia.org/property/occupation> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouseTed ?spouseSatomi WHERE {
  # Ted McGinley's spouse
  ?ted a dbo:Person;
      foaf:name ""Theodore Joseph McGinley""@en.
  OPTIONAL { ?ted dbo:spouse ?spouseTed . }

  # Satomi Ishihara's spouse
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  OPTIONAL { ?satomi dbo:spouse ?spouseSatomi . }
}
```",8,8,9,3,3,3,3,71,0,0,1,0,0.0,0
701,45,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen and parent of Henuttawy (19th dynasty).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    ?commander dbo:birthPlace ?battleOfPerire .
    FILTER(CONTAINS(LCASE(?battleOfPerire), ""perire"")) .

    ?father dbo:child ?commander .
    
    ?spouse dbo:spouse ?father ;
            a dbo:Monarch ;
            dbo:parent ?meritamen, ?henuttawy .

    ?meritamen rdfs:label ""Meritamen""@en .
    ?henuttawy rdfs:label ""Henuttawy""@en .

    FILTER(CONTAINS(LCASE(?spouse), ""19th dynasty""))
}
```

This query assumes that DBpedia has structured data for these historical figures and their relationships. It looks for a commander associated with the Battle of Perire, identifies his father, and then finds the spouse who is royalty and parent to both Meritamen and Henuttawy from the 19th dynasty.",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
232,68,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of Sylvie Bermann and child of the person born as the birth name of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v7 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v4 <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://dbpedia.org/property/birthName> ?v5 . ?v7 <http://dbpedia.org/ontology/starring> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:nationality dbr:United_Kingdom ;
                     dbo:residence ?settlement .

  # Settlement is a British settlement
  ?settlement rdf:type dbo:Settlement ;
              dbp:country dbr:United_Kingdom .

  # Actor associated with the settlement
  ?actor dbo:birthPlace ?settlement ;
         dbo:occupation dbr:Actor ;
         dbo:claimToFame ?film, ?conflict .

  # Film and military conflict
  ?film rdf:type dbo:Film .
  ?conflict rdf:type dbo:MilitaryConflict .

  # Jon Pertwee's birth name
  dbr:Jon_Pertwee dbp:birthName ""John Julian Pertwee""^^xsd:string ;
                  dbo:child ?person .

  # Person associated with the actor
  ?actor dbo:parent ?person .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
378,51,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in Peninsular War.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  # Find Thomas Trigge's DBpedia resource
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Thomas Trigge"" ;
          dbo:rank ?rank .
  
  # Ensure he was involved in the Peninsular War
  ?person dbo:militaryConflict dbr:Peninsular_War .

  # Find his claim to fame related to this war
  OPTIONAL {
    ?person dbo:claimToFame ?claimToFame .
  }
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
528,42,test,Give me the war of Orozimbo Barbosa and force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?battle WHERE {
  # Orozimbo Barbosa and his involvement in wars
  OPTIONAL {
    dbr:Orozimbo_Barbosa dbo:participatedIn ?war .
    ?war a dbo:MilitaryConflict .
  }
  
  # Narciso Campero Leyes and his involvement in wars
  OPTIONAL {
    dbr:Narciso_Campero_Leyes dbo:participatedIn ?war .
    ?war a dbo:MilitaryConflict .
  }

  # Battle of Pisagua
  OPTIONAL {
    dbr:Battle_of_Pisagua a dbo:MilitaryConflict ;
                          rdfs:label ?battle .
  }
}
```",5,5,6,2,3,3,3,71,0,1,2,0.0,0.0,0
747,68,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the person born as Tracey Elizabeth McSween and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://dbpedia.org/ontology/birthDate> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete ?soccerPlayerBand ?writerBand
WHERE {
  # Step 1: Find the birth date of a decedent
  ?decedent dbo:deathDate ?deathDate .
  
  # Step 2: Find an athlete and soccer player born in Zolotonosha with that birth date
  ?athlete dbo:birthPlace dbr:Zolotonosha ;
           dbo:birthDate ?birthDate ;
           dbo:sport dbr:Soccer .
  ?soccerPlayerBand dbo:bandMember ?athlete .

  # Step 3: Find the band associated with Tracey Elizabeth McSween
  dbr:Tracey_Elizabeth_McSween dbo:bandMember ?traceyBand .

  # Step 4: Identify the writer of a song by Amba Shepherd
  ?song dbp:lyricsBy ?writer .
  ?song dbo:performer dbr:Amba_Shepherd .

  # Step 5: Find the band associated with this writer
  ?writer dbo:bandMember ?writerBand .
}
```

This query assumes that DBpedia has structured data for these entities and relationships. Adjustments may be necessary based on actual data availability.",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
427,47,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?father ?party WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:memberOf dbr:Italian_People%27s_Party_(1994) .
  
  ?alumnus foaf:parent ?father .

  OPTIONAL { 
    ?father dbo:partyAffiliation ?party .
  }
}
```

This query does the following:
- Selects individuals (`?alumnus`) who are alumni of MIT and have a membership or connection to the Italian People's Party (1994).
- Finds their fathers using the `foaf:parent` property.
- Optionally retrieves the political party affiliation of these fathers.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
994,66,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Don Dokken and his band members
  ?donDokken a dbo:MusicalArtist ;
             foaf:name ""Don Dokken"" .
  
  ?bandMember dbo:member ?donDokken .

  UNION

  # Watchtower associated musical artists
  ?watchtower a dbo:Band ;
              foaf:name ""Watchtower (band)"" .
  
  ?associatedArtist dbo:associatedMusicalArtist ?watchtower ;
                    a dbo:MusicalArtist .

  ?bandMember dbo:member ?associatedArtist .

  UNION

  # Meshuggah band members who are bands or groups
  ?meshuggah a dbo:Band ;
             foaf:name ""Meshuggah"" .
  
  ?meshuggahMember dbo:member ?meshuggah ;
                   a (dbo:Band|dbo:Group|dbo:Organization) .

  ?bandMember dbo:member ?meshuggahMember .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
356,16,test,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton and player in the successor of 2014 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v2 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team
WHERE {
  ?player a dbo:SoccerPlayer ;
          dbo:nationality dbr:Wolverhampton ;
          dbo:managerOf ?team .
  
  ?player dbo:playedFor [
    dbo:sportTeam dbr:Sacramento_Republic_FC ;
    dbo:endYear ?endYear ;
    FILTER(?endYear > 2014)
  ].
}
```

This query does the following:
- Selects individuals who are soccer players (`dbo:SoccerPlayer`).
- Filters those whose nationality is Wolverhampton (`dbo:nationality dbr:Wolverhampton`).
- Ensures they have a role as a manager (`dbo:managerOf ?team`).
- Checks if they played for Sacramento Republic FC in a season after 2014 (`FILTER(?endYear > 2014)`).",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
92,66,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as the birth name of Joseph Michael and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist1 ?band1 ?artist2 ?band2 ?nevermoreArtist
WHERE {
  # Jim Sheppard details
  dbr:Jim_Sheppard dbo:birthName ?sheppardBirthName .
  ?sheppardBand dbo:name ?band1 ;
                dbo:member ?sheppardMember .
  ?sheppardMember foaf:name ?artist1 .

  # Joseph Michael details
  dbr:Joseph_Michael dbo:birthName ?michaelBirthName .
  ?michaelBand dbo:name ?band2 ;
               dbo:member ?michaelMember .
  ?michaelMember foaf:name ?artist2 .

  # Nevermore band member
  dbr:Nevermore dbo:member ?nevermoreArtist .
  ?nevermoreArtist foaf:name ?nevermoreName .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
701,29,test,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?spouseOfRamessesII ?childParent
WHERE {
  # Parent of Meritamen
  OPTIONAL { 
    dbr:Meritamen dbo:parent ?parentOfMeritamen .
  }

  # Spouse of Ramesses II
  OPTIONAL {
    dbr:Ramesses_II dbo:spouse ?spouseOfRamessesII .
  }
  
  # Child of Ramesses II and their parent
  OPTIONAL {
    ?child dbo:parent dbr:Ramesses_II ;
           dbo:parent ?childParent .
  }
}
```",4,4,5,2,3,3,3,71,1,5,0,0.16666666666666666,1.0,0.2857142857142857
617,53,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of Laodice IV.",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus3 a dbo:Monarch ;
              dbo:spouse ?motherAntiochus3 .
  
  ?antiochus4 a dbo:Monarch ;
              dbo:child ?antiochusChild .

  # Child of Antiochus (son of Antiochus III the Great)
  ?antiochusChild dbo:parent ?antiochus3 ;
                  dbo:child ?grandchild .
  
  # Grandchild is a royalty
  ?grandchild a dbo:Monarch .

  # Successor of Antiochus II Theos and spouse of Laodice IV
  ?antiochus2 a dbo:Monarch ;
              dbo:spouse dbr:Laodice_IV .
  
  ?successor a dbo:Monarch ;
             dbo:succeededBy ?antiochus2 ;
             dbo:spouse dbr:Laodice_IV .

  # Child of the successor
  ?childOfSuccessor dbo:parent ?successor ;
                   a dbo:Monarch .

  # Parent of the grandchild (child of Antiochus)
  ?grandchild dbo:parent ?parentOfChild .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
161,33,test,"Give me the military force of Rif War and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rifWarForce ?civilWarForce WHERE {
  # Military force in the Rif War
  ?rifWarEvent dbo:wikiPageRedirects dbr:Rif_War .
  ?rifWarEvent dbo:militaryConflictParticipant ?rifWarForce .

  # Predecessor of Indalecio Prieto and associated military conflict
  ?azaña dbr:Indalecio_Prieto dbo:predecessorInOffice .
  ?civilWarEvent dbo:wikiPageRedirects dbr:Spanish_Civil_War .
  ?civilWarEvent dbo:militaryConflictParticipant ?civilWarForce .

  FILTER(?rifWarForce != ?civilWarForce)
}
```",4,6,5,3,2,3,3,71,0,0,34,0,0.0,0
801,26,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/writer> ?v1 . ?v2 <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?rapper ?producer WHERE {
  ?rapper a dbo:MusicalArtist ;
          dbo:genre dbr:Rap_music .
  
  ?work dbo:artist ?rapper ;
        a dbo:Songs .

  OPTIONAL { 
    ?work dbo:producer ?producer .
  }
}
```

This query does the following:
- Selects individuals (`?rapper`) who are classified as `MusicalArtist` and have a genre of ""Rap music.""
- Filters works (`?work`) that are associated with these rappers and are classified as ""Songs.""
- Optionally retrieves the producer (`?producer`) of these works.",3,7,4,3,1,3,3,71,0,0,956,0,0.0,0
547,46,test,Give me the resting place of the child of the child of William Haliburton and resting place of the actor of Enemy at the Door.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?grandchildRestingPlace ?actorRestingPlace WHERE {
  # Find William Haliburton's child
  ?williamHaliburton dbo:spouse ?wife .
  ?williamHaliburton foaf:name ""William Haliburton"" .

  # Find the child of William Haliburton
  ?child dbo:parent ?williamHaliburton ;
         dbo:parent ?wife .

  # Find the grandchild (child's child)
  ?grandchild dbo:parent ?child .

  # Get the resting place of the grandchild
  OPTIONAL { ?grandchild dbo:placeOfBurialOrMemorial ?grandchildRestingPlace . }

  # Find the actor of ""Enemy at the Door""
  ?film dbo:title ""Enemy at the Door"" .
  ?actor dbo:starringInFilm ?film .

  # Get the resting place of the actor
  OPTIONAL { ?actor dbo:placeOfBurialOrMemorial ?actorRestingPlace . }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
294,24,test,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architectRestingPlace ?marionBirthplaceEntity
WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""P. D. Houston Jr. House""))

  # Get the resting place of the architect
  ?architect dbo:deathPlace ?restingPlace .

  # Find Marion James and her birthplace
  ?marion dbo:birthPlace ?birthPlace .
  FILTER(STRSTARTS(STR(?marion), ""Marion James""))
  
  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Get an entity in the birthplace of Marion James
  ?entity dbo:location ?birthPlace .
}
```",4,5,5,2,2,2,3,28,0,0,1,0,0.0,0
492,51,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Frédéric-Georges Herr and his involvement in a military conflict
  ?herr dbr:Frédéric-Georges_Herr .
  ?herr dbo:militaryConflict ?conflict .

  # Identify the commander of that conflict
  ?conflict dbo:commander ?commander .

  # Find Khemis Miliana District and its capital
  ?district dbr:Khemis_Miliana_District .
  ?district dbo:capital ?capital .

  # Find a person who died in the capital
  ?decedent dbo:placeOfBirth ?capital ;
            dbo:dateOfDeath ?dateOfDeath .

}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
92,67,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of the person born as the birth name of Joseph Michael.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v6 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v3 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?film dbo:actor ?person .
  ?film rdfs:label ""Return to Nuke' Em High Volume 1""@en .

  ?person dbo:birthName dbr:Joseph_Michael .
  ?person dbo:memberOfBand dbr:Nevermore .

  ?person dbo:associatedMusicalArtist ?artist .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
488,48,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Boshin War as a military conflict, event, and societal event
  OPTIONAL { 
    dbr:Boshin_War rdf:type dbo:MilitaryConflict .
    dbr:Boshin_War rdf:type dbo:Event .
    dbr:Boshin_War rdf:type dbo:SocietalEvent .
  }

  # Toyotomi Hideyoshi's administration period
  OPTIONAL {
    dbr:Toyotomi_Hideyoshi dbo:spouse ?emperorGoMizunooFather .
    ?emperorGoMizunooFather dbo:father dbr:Emperor_Go-Mizunoo .
  }
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
232,59,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Get Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Find the actor, narrator, and producer with a claim to fame that includes a film and a military conflict
  ?actor dbo:profession dbr:Actor ;
         dbo:claimToFame ?film, ?conflict .
  
  FILTER (isLiteral(?film) && isLiteral(?conflict)) .

  # Find the child of Jon Pertwee who matches the actor's claim to fame
  ?child dbo:parent dbr:Jon_Pertwee ;
         dbo:claimToFame ?film, ?conflict .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
182,20,test,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake and entity in Sri Lanka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  VALUES ?person { 
    dbr:Gotabhaya_Rajapaksa 
    dbr:Mahesh_Senanayake
  }
  
  OPTIONAL {
    ?person dbo:associatedWithWar ?war .
    FILTER CONTAINS(LCASE(?war), ""sri lanka civil war"") || CONTAINS(LCASE(?war), ""world war ii"")
  }

  ?war dbo:location dbr:Sri_Lanka .
}
```

This query does the following:
- It selects entities (`?person`) for Gotabhaya Rajapaksa and Mahesh Senanayake.
- It checks if these individuals are associated with any wars (`dbo:associatedWithWar`).
- It filters the results to include only those wars related to the Sri Lankan Civil War or World War II, ensuring they have a connection to Sri Lanka as their location.",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
161,52,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce1 ?militaryForce2 WHERE {
  # Francisco Largo Caballero's military force during Francoist Spain
  ?person dbr:Francisco_Largo_Caballero .
  ?person dbo:militaryConflict ?conflict1 .
  FILTER (CONTAINS(LCASE(str(?conflict1)), ""francoist spain"")) .
  ?conflict1 dbo:participatingMilitaryForce ?militaryForce1 .

  # Biscay Campaign and its commander
  ?campaign dbr:Biscay_Campaign .
  ?campaign dbo:commander ?commander .
  
  # Commander's military force during Francoist Spain
  ?commander dbo:militaryConflict ?conflict2 .
  FILTER (CONTAINS(LCASE(str(?conflict2)), ""francoist spain"")) .
  ?conflict2 dbo:participatingMilitaryForce ?militaryForce2 .

  # Francisco Largo Caballero's military force in a societal event and military conflict
  ?societalEvent dbo:militaryConflict ?conflict3 .
  FILTER (CONTAINS(LCASE(str(?conflict3)), ""francoist spain"")) .
  ?conflict3 dbo:participatingMilitaryForce ?militaryForce1 .

}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
391,20,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace ?claimToFame WHERE {
  # Find Michael Ballhaus resource
  ?person a dbo:Person ;
          foaf:name ""Michael Ballhaus""@en ;
          dbo:nationality dbr:Germany ;  # Assuming nationality is known, adjust if needed

  # Identify native place as Compton, California
  ?person dbo:nativePlace dbr:Compton,_California .

  # Find claim to fame (work)
  ?person dbo:claimToFame ?claimToFame .
  
  # Return the native place and claim to fame
  BIND(dbr:Compton,_California AS ?nativePlace)
}
```

This query assumes that Michael Ballhaus is associated with Germany as his nationality, which might need adjustment based on actual data. The query retrieves the native place (Compton, California) and his claim to fame (a work).",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
345,16,test,"Give me the figure known as the nickname of FC Vaduz and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v3 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?team
WHERE {
  # Retrieve the nickname of FC Vaduz
  dbr:FC_Vaduz dbo:nickname ?nickname .

  # Identify the person born on September 15, 1978, who is a soccer player and manager
  ?person dbp:birthday ""1978-09-15""^^xsd:date ;
          dbo:occupation dbr:Soccer_player ;
          dbo:occupation dbr:Soccer_manager .
  
  # Find the team associated with this person
  ?team dbo:manager ?person .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
232,25,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace
WHERE {
  # Find Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence ?residence .
  
  # Ensure the residence is a British settlement
  ?residence rdf:type dbo:Settlement ;
             dbp:country dbr:United_Kingdom .

  # Find an actor from ""Dog Soldiers""
  dbr:Dog_Soldiers_2002 dbo:actor ?actor .

  # Get the native place of that actor
  ?actor dbo:nativePlace ?nativePlace .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
404,50,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?finalParent WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
               dbp:name ""Prince George William of Hanover""@en .

  # Step 2: Find his parent who is a royalty
  ?parent1 dbo:child ?princeGeorge .
  ?parent1 a dbo:Monarch .

  # Step 3: Identify the child of this royal parent
  ?child1 dbo:parent ?parent1 .

  # Step 4: Find the parent of this child who is also a royalty
  ?parent2 dbo:child ?child1 .
  ?parent2 a dbo:Monarch .

  # Step 5: Finally, identify the parent of this second royal
  ?finalParent dbo:parent ?parent2 .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
16,64,test,Give me the professional in Actress and person born as the birth name of the alumnus of Ohio State University and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actress WHERE {
  # Step 1: Find an alumnus of Ohio State University
  ?alumnus dbo:almaMater dbr_Ohio_State_University .
  
  # Step 2: Find their spouse
  ?spouse dbo:spouse ?alumnus .

  # Step 3: Get the birth name of this spouse
  ?spouse foaf:name ?birthName .

  # Step 4: Identify Ted McGinley by his birth name
  ?ted dbr_Ted_McGinley .
  ?ted foaf:name ?birthName .

  # Step 5: Find a professional actress with the same birth name
  ?actress dbo:profession dbr_Actress ;
          foaf:name ?birthName .
}
```

This query assumes that:
- The DBpedia resource for Ohio State University is `dbr_Ohio_State_University`.
- The DBpedia resource for Ted McGinley is `dbr_Ted_McGinley`.",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
184,34,test,"Give me the parent of Archduchess Ilona of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Parent of Archduchess Ilona of Austria
SELECT ?parent WHERE {
    dbr:Ilona_of_Austria dbo:child dbr:Archduchess_Ilona_of_Austria .
    dbr:Archduchess_Ilona_of_Austria dbo:parent ?parent .
}

UNION

# Part 2: Native of the landmark at elevation 96.0 that is a settlement
SELECT ?native WHERE {
    ?landmark a dbo:Settlement ;
              dbo:elevation ""96.0""^^xsd:float .
    ?landmark dbo:native ?native .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
617,61,test,"Give me the parent of the child of the commander in Battle of Panium and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    # Step 1: Commander in Battle of Panium
    ?battle dbr:Battle_of_Panium .
    ?commander dbo:commanderOf ?battle .

    # Step 2: Child of the Commander
    ?child dbo:child ?commander .

    # Step 3: Parent of the Child (we need this)
    ?parent dbo:spouse ?child .

    # Step 4: Successor of Antiochus III's son
    dbr:Antiochus_III_the_Great dbo:son dbr:Antiochus_IV_Epiphanes .
    ?successor dbo:succeededBy dbr:Antiochus_IV_Epiphanes .

    # Step 5: Child of the Successor
    ?child2 dbo:child ?successor .

    # Step 6: Spouse of the Child (must be royalty)
    ?spouse dbo:spouse ?child2 .
    ?spouse a dbo:Monarch ; 

    FILTER(?parent = ?spouse)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
659,56,test,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?result <http://dbpedia.org/ontology/battle> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleOfLeipzigCommander 
       ?wellingtonCommander 
       ?militaryForce 
       ?societalEvent 
       ?militaryConflict
WHERE {
  # Battle of Leipzig commander
  dbr:Battle_of_Leipzig dbo:commander ?battleOfLeipzigCommander .

  # Arthur Wellesley, 1st Duke of Wellington's commander and military force
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:commander ?wellingtonCommander .
  ?militaryForce dbo:commander dbr:Arthur_Wellesley,_1st_Duke_of_Wellington .

  # Societal event and military conflict related to Rutger Jan Schimmelpenninck
  ?societalEvent dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
  ?militaryConflict dbo:reference dbr:Rutger_Jan_Schimmelpenninck .

  # Ensure the military conflict is also a societal event
  FILTER (?societalEvent = ?militaryConflict)
}
```",6,9,7,3,3,3,3,71,0,0,6,0,0.0,0
747,34,test,"Give me the band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?athlete WHERE {
  # Find Shèna's band
  dbr:Shèna dbo:musicalBand ?band .

  # Find a decedent and their birth date
  ?decedent dbo:dateOfBirth ?birthDate .
  FILTER EXISTS { ?decedent dbo:deathDate ?deathDate } .

  # Find an athlete born on the same date as the decedent
  ?athlete dbo:dateOfBirth ?birthDate ;
           a dbo:Athlete ;
           dbo:sport dbr:Soccer .

  # Ensure the athlete is associated with Zolotonosha
  ?athlete dbo:placeOfBirth dbr:Zolotonosha .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
994,69,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Meshuggah band members who are also bands or groups
  ?meshuggahMember dbo:memberOf dbr:Meshuggah .
  ?meshuggahMember a (dbo:Band|dbo:MusicalGroup|dbo:Organization) .

  # Watchtower associated artist
  ?watchtowerArtist dbo:associatedBandOrMusicalArtist dbr:Watchtower .

  # Don Dokken persona band member
  ?donDokkenPersona dbo:birthName ""Don Dokken""@en .
  ?donDokkenPersona dbo:memberOf ?band .

  # Chain the associations
  ?meshuggahMember dbo:associatedBandOrMusicalArtist ?watchtowerArtist .
  ?watchtowerArtist dbo:associatedBandOrMusicalArtist ?donDokkenPersona .
  ?donDokkenPersona dbo:associatedBandOrMusicalArtist ?finalArtist .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
10,28,test,"Give me the professional in the birth name of Sharon Kao and associated musical artist of the person born, that is an artist, as Matt Colton and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v5 . ?v1 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v3 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v5 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?sharonBirthName ?associatedArtist ?bandMember
WHERE {
  # Find Sharon Kao's birth name
  dbr:Sharon_Kao dbo:birthName ?sharonBirthName .

  # Find associated musical artist with Matt Colton
  OPTIONAL {
    ?person dbo:birthName ""Matt Colton""@en .
    ?person dbo:associatedMusicalArtist ?associatedArtist .
  }

  # Find band member of Luke Francis Vibert
  OPTIONAL {
    ?person2 dbo:birthName ""Luke Francis Vibert""@en .
    ?person2 dbo:bandMember ?bandMember .
  }
}
```",6,8,7,2,3,2,3,28,0,2,1,0.0,0.0,0
16,48,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find Gigi Rice by birth name
  ?gigi a dbo:Person;
        foaf:name ""Gigi Rice""@en;
        foaf:nick ""Gigi Rice""@en.
  
  # Find Ted McGinley's spouse
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley""@en;
       foaf:nick ""Ted McGinley""@en.

  # Link Gigi Rice and Ted McGinley through marriage
  ?gigi dbo:spouse ?spouse.
  ?ted dbo:spouse ?spouse.
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
328,52,test,Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?awardee WHERE {
  # Find Ferenc Szálasi's resource
  VALUES ?szalasi { dbr:Ferenc_Szálasi }

  # Identify his commander in the force during his leadership role
  ?szalasi dbo:leaderOf ?leadershipRole .
  ?leadershipRole dbo:commandedBy ?commander .

  # Find awardees of the Volcano and Ryukyu Islands campaign
  ?campaign dbr:Volcano_and_Ryukyu_Islands_campaign ;
           dbo:awardedTo ?awardee .
}
```

This query assumes:
- Ferenc Szálasi's DBpedia resource is `dbr:Ferenc_Szálasi`.
- The leadership role and command structure are represented using the properties `dbo:leaderOf` and `dbo:commandedBy`.
- The campaign and its awardees are linked via `dbo:awardedTo`.

Please note that this query might need adjustments based on the actual schema and data available in DBpedia. If specific resources or properties do not exist, you may need to refine the query further.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
314,20,test,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Sergei Makovetsky""@en .
  
  OPTIONAL { ?person dbo:deathPlace dbr:Madrid . }
  OPTIONAL { ?person dbo:role ?role .
             FILTER(CONTAINS(LCASE(?role), ""commander"") && CONTAINS(LCASE(?role), ""spanish civil war"")) }
  OPTIONAL { ?person dbo:award ?award . }

  FILTER EXISTS { ?person dbo:deathPlace dbr:Madrid . }
  FILTER EXISTS { ?person dbo:role ?role .
                  FILTER(CONTAINS(LCASE(?role), ""commander"") && CONTAINS(LCASE(?role), ""spanish civil war"")) }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
712,16,test,Give me the capital of the country of Armed Forces of South Russia and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?restingPlace WHERE {
  # Part 1: Capital of Ukraine (assuming ""Armed Forces of South Russia"" refers to Ukraine)
  dbr:Ukraine dbo:capital ?capital .

  # Part 2: Resting place of Yuri Gagarin
  dbr:Yuri_Gagarin dbo:awardedTitle dbr:Hero_of_the_Soviet_Union ;
                   dbo:placeOfBurial ?restingPlace .
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
547,25,test,Give me the resting place of Simon Cadell and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
# Query to get the resting place of Simon Cadell
SELECT ?restingPlace WHERE {
  ?person dbo:name ""Simon Cadell""@en .
  ?person dbo:deathPlace ?restingPlace .
}
```

```sparql
# Query to get the resting place of an awardee of Knight Grand Cross of the Order of St Michael and St George
SELECT DISTINCT ?awardee ?restingPlace WHERE {
  ?awardee dbo:honoraryTitle ""Knight Grand Cross of the Order of St Michael and St George""@en .
  ?awardee dbo:deathPlace ?restingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
659,31,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find individuals who were commanders in the Battle of Leipzig
  ?battle dbo:commander ?person .
  FILTER (str(?battle) = ""Battle_of_Leipzig"")

  # Ensure they held an office in the Kingdom of Ireland
  ?officeHolder dbo:country dbr:Kingdom_of_Ireland ;
               dbo:officeHolder ?person .

  # Optional: Filter for native commanders if needed
  OPTIONAL { 
    ?person dbo:nationality dbr:Irish .
  }
}
```",4,5,5,3,2,3,3,71,0,0,19,0,0.0,0
328,22,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?award dbo:awardee ?person .
  FILTER(CONTAINS(LCASE(STR(?award)), ""order of suvorov"")) .

  ?office dbo:leader ?person ;
          dbo:headOfStateOrGovernment ?stalin .
  
  ?stalin rdfs:label ""Joseph Stalin""@en ;
          dbo:headOfState dbr:Soviet_Union .

  FILTER(YEAR(?awardDate) >= 1924 && YEAR(?awardDate) <= 1953)
}
```

This query attempts to find individuals who were awarded the Order of Suvorov and also held leadership positions in government agencies during Stalin's rule. Note that specific properties like `dbo:awardee` might need adjustment based on DBpedia's current schema, and additional filtering may be necessary for precise results.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
339,16,test,Give me the child of the child of Christian IX of Denmark and father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . ?v2 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Find Christian IX of Denmark and his children
  ?christianIX a dbo:Monarch ;
               dbp:spouse ?wife .

  # Step 2: Identify the child of Christian IX (one of his children)
  ?childOfChristianIX dbo:parent ?christianIX ;
                     dbo:parent ?mother .

  # Step 3: Find the grandchildren of Christian IX
  ?grandChild dbo:parent ?childOfChristianIX ;
              dbo:parent ?otherParent .

  # Step 4: Identify Grand Duchess Elena Vladimirovna and her child
  ?elena a dbo:Monarch ;
         dbp:spouse ?husband .
  
  ?childOfElena dbo:parent ?elena ;
                dbo:parent ?father .

  # Step 5: Find the father of Grand Duchess Elena's child
  FILTER(?grandChild = ?childOfElena)
  BIND(?father AS ?resultFather)

  # Return the result
  VALUES ?resultFather { ?father }
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
177,9,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in the residence of Alexander Gamelin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v3 . ?v3 <http://dbpedia.org/ontology/location> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?headquarters WHERE {
  # Find organizations associated with Joo Don-sik
  ?organization dbo:member dbr:Joo_Don-sik .
  
  # Get the headquarters of these organizations
  ?organization dbo:headquarterLocation ?location .

  # Ensure the location matches Alexander Gamelin's residence
  ?gamelinResidence dbo:residence dbr:Alexander_Gamelin .
  FILTER(?location = ?gamelinResidence)

  # Bind the headquarters to the result
  ?organization dbo:headquarter ?headquarters .
}
```",4,5,5,2,2,2,2,9,0,0,1,0,0.0,0
617,47,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild ?spouse
WHERE {
  # Seleucus II Callinicus and his children
  ?seleucus2 dbo:spouse ?spouse1 .
  FILTER (str(?seleucus2) = ""Seleucus_II_Callinicus""^^xsd:string)
  
  ?seleucus2 dbo:child ?child1 .

  # Child of Seleucus II Callinicus and their children
  ?child1 dbo:child ?grandchild .
  
  # Filter for royalty among grandchildren
  ?grandchild a dbo:Monarch .

  # Antiochus III the Great, his successor, and their children
  ?antiochus3 dbo:successor ?antiochus4 .
  FILTER (str(?antiochus3) = ""Antiochus_III_the_Great""^^xsd:string)
  
  ?antiochus4 dbo:child ?grandchild2 .

  # Filter for royalty among grandchildren of Antiochus IV
  ?grandchild2 a dbo:Monarch .

  # Find the spouse relationship
  ?grandchild dbp:spouse ?spouse .
  ?spouse str:(?grandchild2) .
}
```",5,7,6,3,2,3,3,71,0,0,4,0,0.0,0
492,60,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ?v3 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedentCapital ?personDecedentWork
WHERE {
  # Find Khemis Miliana District's capital
  dbr:Khemis_Miliana_District dbo:capital ?capitalSettlement .
  
  # Ensure the capital is a settlement
  ?capitalSettlement rdf:type dbo:Settlement .

  # Get person decedent at the capital
  ?personDecedentCapital dbo:placeOfBirth ?capitalSettlement ;
                        rdf:type dbo:Person .

  # Find an author related to French Algeria and their work
  ?author rdf:type dbo:Writer ;
          dbo:nationality dbr:French_Algérie .
  
  ?work dbo:author ?author ;
        dbo:subject dbr:French_Algeria .

  # Get person decedent associated with the work
  ?personDecedentWork dbo:placeOfBirth ?work ;
                      rdf:type dbo:Person .
}
```",6,7,7,3,2,3,3,71,0,0,16,0,0.0,0
391,57,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v3 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Sherry Hormann's spouse
  ?sherry a dbo:Person ;
          foaf:name ""Sherry Hormann""@en .
  
  ?spouse dbo:spouseOf ?sherry ;
          dbo:nationality dbr:United_States ;
          dbo:birthPlace dbr:Compton,_California .

  # Find the spouse's claim to fame (work)
  ?spouse dbo:claimToFame ?work .

  # Find Roz Ryan's movie that is also a work and TV show
  ?movie dbo:starring ?actor ;
         rdf:type dbo:Film, dbo:TelevisionShow ;
         dbo:starring dbr:Roz_Ryan .

  # Ensure the actor is from Compton, California
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .
  
  FILTER(?spouse = ?actor)
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
767,45,test,"Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entityInBW ?alterEgo
WHERE {
  # Alma mater of Carl L. Nippert
  OPTIONAL { 
    ?nippert dbo:almaMater ?almaMater .
    FILTER (str(?nippert) = ""Carl_L._Nippert"")
  }

  # Entity in Baden-Württemberg
  OPTIONAL {
    ?entityInBW dbo:location dbr:Baden-Württemberg .
    # Assuming a connection to Carl L. Nippert or another relevant entity
    ?nippert dbo:associatedWith ?entityInBW .
  }

  # Alter ego of Matthew Burland
  OPTIONAL {
    ?burland dbo:fictionalCharacter ?alterEgo .
    FILTER (str(?burland) = ""Matthew_Burland"")
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,26,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?musicalArtist WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?film dbo:starring ?actor .
  FILTER (str(?film) = ""Return_to_Nuke'_Em_High_Volume_1"")

  # Check if this person is also a musician or artist
  OPTIONAL { ?actor dbo:occupation dbr:Musician . }
  OPTIONAL { ?actor dbo:occupation dbr:Singer . }

  # Retrieve the associated musical artist
  OPTIONAL {
    ?actor dbo:musicalArtist ?musicalArtist .
  }
}
```",3,4,4,3,1,3,3,71,0,0,126,0,0.0,0
281,46,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v4 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?war 
WHERE {
  # Find Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?country .

  # Find Jonathon Band's award and related war
  dbr:Jonathon_Band dbo:award ?award .
  ?award dbo:relatedEvent ?war .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
161,55,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?largoCaballeroForce ?molaCommander ?francoForce
WHERE {
  # Francisco Largo Caballero's military force
  ?largoCaballero a dbo:Person ;
                  foaf:name ""Francisco Largo Caballero""@en .
  ?largoCaballeroForce dbo:commandedBy ?largoCaballero ;
                       a dbo:MilitaryConflict, dbo:SocietalEvent .

  # Emilio Mola's commander
  ?molaCommander a dbo:Person ;
                 foaf:name ""Emilio Mola""@en .
  ?forceMola a dbo:Event ;
             dbo:commandedBy ?molaCommander .
  
  # Francisco Franco's military force
  ?franco a dbo:Person ;
          foaf:name ""Francisco Franco""@en .
  ?francoForce dbo:commandedBy ?franco ;
               a dbo:MilitaryConflict, dbo:SocietalEvent, dbo:Event .
}
```",6,12,7,2,3,3,3,71,0,0,32,0,0.0,0
378,45,test,"Give me the war of Joaquín Blake and war of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?claimToFame WHERE {
  # Joaquín Blake's involvement in wars
  {
    ?person rdfs:label ""Joaquín Blake""@en .
    ?person dbo:militaryConflict ?war .
    ?war dbo:commander ?commander .
    OPTIONAL { ?commander dbo:claimToFame ?claimToFame }
  }

  UNION

  # Carl Pontus Gahn's involvement in wars
  {
    ?person rdfs:label ""Carl Pontus Gahn""@en .
    ?person dbo:militaryConflict ?war .
    ?war dbo:commander ?commander .
    OPTIONAL { ?commander dbo:claimToFame ?claimToFame }
  }

  UNION

  # Thomas Trigge's claim to fame in wars
  {
    ?person rdfs:label ""Thomas Trigge""@en .
    ?person dbo:militaryConflict ?war .
    ?war dbo:commander ?commander .
    OPTIONAL { ?commander dbo:claimToFame ?claimToFame }
  }

  FILTER (lang(?war) = 'en' && lang(?commander) = 'en' && lang(?claimToFame) = 'en')
}
```",5,8,6,3,3,3,3,71,0,0,2,0,0.0,0
161,32,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForceFranco ?militaryForceCaballero
WHERE {
  # Military force associated with Francisco Franco in the context of societal events and military conflicts
  ?event1 a dbo:MilitaryConflict ;
          dbo:societalEvent true .
  ?event1 dbo:participatedIn ?militaryForceFranco .
  ?militaryForceFranco dbo:commandedBy dbr:Franco_Francisco .

  # Military force associated with Francisco Largo Caballero in the context of societal events and military conflicts
  ?event2 a dbo:MilitaryConflict ;
          dbo:societalEvent true .
  ?event2 dbo:participatedIn ?militaryForceCaballero .
  ?militaryForceCaballero dbo:commandedBy dbr:Largo_Caballero_Francisco .

}
```

This query assumes:
- `dbo:MilitaryConflict` and `dbo:societalEvent` are the relevant classes.
- `dbo:participatedIn` is a property linking military forces to events.
- `dbo:commandedBy` links military forces to their commanders.",4,9,5,2,2,3,3,71,0,0,514,0,0.0,0
617,54,test,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfNysa WHERE {
  # Nysa and her parent
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en .
  
  ?nysa dbo:spouse ?pharnacesI ;
        dbo:childOf ?parentOfNysa .

  # Pharnaces I of Pontus
  ?pharnacesI a dbo:Person ;
              foaf:name ""Pharnaces I of Pontus""@en .

  # Antiochus (son of Antiochus III the Great) and his successor
  ?antiochusIII a dbo:Person ;
                foaf:name ""Antiochus III the Great""@en .
  
  ?antiochus dbr:Antiochus_IV_Epiphanes ; # Assuming Antiochus IV as successor
              dbo:childOf ?antiochusIII .

  # Child of the successor who is royalty
  ?royalChild dbr:Seleucus_IV_Philocephalus ; # Assuming Seleucus IV as a royal child
               dbo:childOf ?antiochus .
  
  # Spouse of this royal child
  ?spouseOfRoyalChild dbo:spouse ?royalChild ;
                      dbo:childOf ?parentOfNysa .

  # Seleucus II Callinicus and his descendant
  ?seleucusII a dbo:Person ;
              foaf:name ""Seleucus II Callinicus""@en .
  
  ?descendant dbr:Antiochus_IV_Epiphanes ; # Assuming Antiochus IV as a descendant
               dbo:childOf ?grandChild .

  ?grandChild dbo:childOf ?seleucusII ;
              rdf:type dbo:Person .
}
```",6,8,7,3,3,3,3,71,0,0,2,0,0.0,0
617,19,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia and his children
  dbr:Boleslaus_I,_Duke_of_Bohemia dbo:spouse ?parent1 .
  
  ?parent1 dbo:child ?child1 .

  # Children of the child (grandchildren of Boleslaus I)
  ?child1 dbo:child ?grandchild .

  # Ensure grandchild is royalty
  ?grandchild a dbo:Monarch .

  # Parent of the father (great-grandparent) and their children
  ?grandchild dbo:parent ?parent2 .
  ?parent2 dbo:father ?father .

  # Reference to Richeza of Poland among these fathers
  ?father dbo:spouse dbr:Richeza_of_Poland .

  # Ensure this reference is royalty
  ?father a dbo:Monarch .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
666,17,test,"Give me the player in Steve Bruce and figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:manager dbr:Steve_Bruce .
  ?team rdfs:label ""Newcastle United F.C.""@en .
  ?player dbo:playsFor ?team .
}
```

This query does the following:
- Identifies teams managed by Steve Bruce.
- Filters for Newcastle United F.C. using its label.
- Retrieves players who played for that team.",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,37,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInVerdun ?conflictEvent ?decedentAtAlgiers WHERE {
  # Find the commander in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?battle dbo:commander ?commanderInVerdun .

  # Find another military conflict or event involving this commander
  ?conflictEvent dbo:commander ?commanderInVerdun .
  FILTER(?conflictEvent != dbr:Battle_of_Verdun) .

  # Find a person who died in Algiers
  ?decedent dbo:deathPlace dbr:Algiers .
  
  # Connect the decedent to the commander from Verdun
  ?commanderInVerdun dbo:spouseOrPartner ?decedentAtAlgiers .
  FILTER(?decedent = ?decedentAtAlgiers)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
9,57,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater ?nickname ?awardeeAlmaMater WHERE {
  # Alma mater of John Alderdice
  OPTIONAL {
    ?johnAlderdice dbo:almaMater ?almaMater .
    FILTER(STR(?johnAlderdice) = ""John_Alderdice"")
  }

  # Nickname of Queen's University Belfast
  OPTIONAL {
    ?queenUniversity dbo:nickname ?nickname .
    FILTER(STR(?queenUniversity) = ""Queen%27s_University_Belfast"")
  }

  # Awardee of Royal Medals and their alma mater
  OPTIONAL {
    ?awardee dbo:awardReceived ?royalMedal .
    ?royalMedal rdf:type dbr:Royal_Medal .
    ?awardee dbo:almaMater ?awardeeAlmaMater .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
328,70,test,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.","SELECT ?result WHERE { ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v3 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?result <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v4 . ?v1 <http://dbpedia.org/property/office> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Step 1: Find awards of Bruce Fraser, 1st Baron Fraser of North Cape
  dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape dbo:award ?award .

  # Step 2: Identify a person who died in Budapest and was a commander in Bruce Fraser's force
  ?person dbo:deathPlace dbr:Budapest ;
          dbo:militaryCommanderOf ?commander .
  FILTER (?commander = dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape) .

  # Step 3: Find the leader of a government agency connected to Gustav Jonson
  ?office dbo:type dbr:Government_agency ;
          dbo:leader ?leader .
  FILTER (?leader = dbr:Gustav_Jonson) .

  # Combine steps to find the awardee
  ?award dbo:awardee ?awardee .
  FILTER (?awardee = ?person)
}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
534,20,test,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v4 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v5 <http://dbpedia.org/ontology/headquarter> ?result . ?v4 <http://dbpedia.org/ontology/owner> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarter WHERE {
  # Step 1: Identify the venue of the 2012 Pro12 Grand Final
  ?venue dbo:event dbr:2012_Pro12_Grand_Final .
  
  # Step 2: Ensure it is also an architectural structure
  ?venue a dbo:ArchitecturalStructure .

  # Step 3: Find the owner's headquarter
  ?venue dbo:owner ?owner .
  ?owner dbp:headquarters ?headquarter .

  # Step 4: Identify a politician native to Essex
  ?politician dbo:nationality dbr:Essex ;
              a dbo:Politician .

  # Step 5: Find the child who is both a politician and an office holder
  ?child dbo:parent ?politician ;
         a dbo:Politician, dbo:OfficeHolder .

  # Step 6: Determine the birthplace of this child
  ?child dbp:birthPlace ?venue .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
528,64,test,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?orozimboWar ?narcisoForce WHERE {
  # Wars in Chile
  ?chileEvent a dbo:MilitaryConflict ;
              dbo:location dbr:Chile .

  # War of Orozimbo Barbosa
  ?orozimboBarbosa a dbo:Person ;
                   foaf:name ""Orozimbo Barbosa"" .
  ?orozimboWar a dbo:MilitaryConflict ;
               dbo:participant ?orozimboBarbosa .

  # Force of Narciso Campero
  ?narcisoCampero a dbo:Person ;
                  foaf:name ""Narciso Campero"" ;
                  foaf:birthName ?birthName .
  ?narcisoForce a dbo:MilitaryUnit ;
                dbo:member ?narcisoCampero .

  # Find common wars
  OPTIONAL { ?chileEvent = ?orozimboWar }
  OPTIONAL { ?chileEvent ?p ?n . FILTER(?p = dbo:participant) . ?n ?q ?r . FILTER(?q = dbo:member && ?r = ?narcisoCampero) }

}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
421,27,test,Give me the band member of Senidah and person born as the birth name of Dino Merlin and native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Band member of Senidah
  ?senidahMember dbo:memberOf dbr:Senidah .
  
  # Person born as the birth name of Dino Merlin
  ?dinoMerlin dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .

  # Native of the birthplace of Samir Bekrić
  ?samirBekric dbo:birthPlace ?birthPlace .
  ?person dbo:nativePlace ?birthPlace .

  # Ensure it's the same person
  FILTER (?senidahMember = ?person)
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
404,57,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v3 . }","```sparql
SELECT ?parent WHERE {
  wd:Q123456 wdt:P22 ?parent .
}
```

In this query:
- Replace `wd:Q123456` with the actual DBpedia entity ID for Princess Victoria Louise of Prussia.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
547,21,test,Give me the resting place of Alan Cunningham and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alanCunninghamRestingPlace ?childOfJamesBurtonRestingPlace WHERE {
  # Find Alan Cunningham and his resting place
  OPTIONAL {
    ?alanCunningham a dbo:Person ;
                   foaf:name ""Alan Cunningham"" .
    ?alanCunningham dbo:deathPlace ?alanCunninghamRestingPlace .
  }

  # Find James Burton (property developer) and his child, then the child's resting place
  OPTIONAL {
    ?jamesBurton a dbo:Person ;
                 foaf:name ""James Burton (property developer)"" .
    ?childOfJamesBurton dbo:parent ?jamesBurton ;
                        dbo:deathPlace ?childOfJamesBurtonRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,33,test,Give me the spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseName ?profession WHERE {
  # Find Ted McGinley's spouse
  ?person dbo:name ""Ted McGinley""@en .
  ?person dbo:spouse ?spouse .

  # Get the spouse's name
  ?spouse dbp:name ?spouseName .

  OPTIONAL {
    # Check if the spouse is an actor or related to ""Unnatural""
    ?spouse dbo:profession ?profession .
    FILTER (
      CONTAINS(LCASE(?profession), ""actor"") ||
      EXISTS { 
        ?work dbo:title ""Unnatural""@en ;
              dbo:starring ?spouse .
      }
    )
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
696,16,test,Give me the landmark at elevation of the award of Nie Rongzhen and birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ?v3 . <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find Nie Rongzhen's award and its elevation
  ?award dbo:recipient dbr:Nie_Rongzhen .
  ?award dbo:elevation ?elevation .

  # Find a member of Dropkick Murphys and their birthplace
  ?member dbo:band dbr:Dropkick_Murphys .
  ?member dbo:birthPlace ?birthPlace .

  # Find the landmark at the elevation of Nie Rongzhen's award
  ?landmark dbo:elevation ?elevation .
  
  FILTER(?birthPlace != ?landmark) # Ensure birthplace and landmark are distinct

}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
767,39,test,"Give me the alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
# Query to find the alma mater of Carl L. Nippert
SELECT ?university WHERE {
  ?person dbo:givenName ""Carl"" .
  ?person dbo:familyName ""Nippert"" .
  ?person dbo:almaMater ?university .
}

UNION

# Query to find a fictional character associated with Matthew Burland
SELECT ?character WHERE {
  ?person foaf:name ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?character .
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
77,16,test,Give me the force of the mayor of Congress Poland and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force ?warAwardee ?war
WHERE {
  # Find the mayor of Congress Poland
  ?mayor dbo:officeTitle ""Mayor""@en .
  ?mayor dbo:country dbr:Congress_Poland .

  # Find the force associated with the mayor (assuming it's a military or governmental role)
  OPTIONAL { ?mayor dbo:memberOf ?force . }

  # Find awardees of the Golden Weapon for Bravery
  ?warAwardee dbo:award ""Golden Weapon for Bravery""@en .
  
  # Determine the war associated with the awardee
  ?warAwardee dbo:militaryConflict ?war .
}
```",4,4,5,2,2,3,2,20,0,0,13,0,0.0,0
54,55,test,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v5 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Monarch ;  # Assuming Monarch as a class for royalty
         dbo:officeHolder true .

  # Narapati I of Ava's child's parent
  ?narapatiChild dbo:parent ?parentOfNarapatiChild .
  ?narapati dbr:Narapati_I_of_Ava ;
            dbo:child ?narapatiChild .

  # Soe Min Wimala Dewi's father
  ?soemin dbr:Soe_Min_Wimala_Dewi ;
          dbo:father ?fatherOfSoemin .

  # Find the predecessor of the specified person
  ?predecessor dbo:successor ?specifiedPerson .
  
  # Ensure all conditions are met for the specified person
  FILTER (?child = ?parentOfNarapatiChild && ?child = ?fatherOfSoemin)
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
55,27,test,"Give me the band of the reference, that is a band, to Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony and band member of Guns N' Roses.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Jason Newsted was a member of Metallica
  ?newsted dbo:memberOf dbr:Metallica .
  
  # Find bands that have members who are also in other bands
  ?bandMember dbo:memberOf ?band ;
              dbo:memberOf ?otherBand .

  # The band must be associated with Jason Newsted (Metallica)
  FILTER(?band = dbr:Metallica)

  # One of the members of this band is also a member of another band
  # which includes a member from San Francisco Symphony and Guns N' Roses

  ?symphonyMember dbo:memberOf dbr:San_Francisco_Symphony .
  ?gunsnrosesMember dbo:memberOf dbr:Guns_N'_Roses .

  ?otherBandMember dbo:memberOf ?otherBand ;
                   rdf:type dbo:MusicalArtist .

  # The other band must have members from both San Francisco Symphony and Guns N' Roses
  FILTER(?otherBand = ?bandMember)

  OPTIONAL { ?otherBandMember = ?symphonyMember }
  OPTIONAL { ?otherBandMember = ?gunsnrosesMember }

}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
492,47,test,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commanderInVerdun ?otherConflict ?satterthwaiteRole
WHERE {
  # Find the commander in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?battle dbo:commander ?commanderInVerdun .

  # Find another military conflict or event involving this commander
  ?otherEvent dbo:commander ?commanderInVerdun .
  FILTER(?otherEvent != dbr:Battle_of_Verdun) .

  # Identify Joseph C. Satterthwaite's role
  ?satterthwaite dbr:Joseph_C._Satterthwaite ;
                 dbo:occupation dbr:US_Assistant_Secretary_of_State_for_African_Affairs ;
                 dbo:deathPlace ?workLocation .
  
  # Ensure the commander is linked to a military conflict or event
  ?otherEvent rdf:type dbo:MilitaryConflict .

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
404,67,test,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of the father of the spouse of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v6 . ?result <http://dbpedia.org/ontology/parent> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child ?parentOfChild ?grandParent ?fatherOfSpouse ?childOfFather
WHERE {
  # Princess Victoria Louise of Prussia's spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Child of their marriage that is royalty
  ?spouse dbo:child ?child .
  
  # Parent of this child who is royalty (should be Ernest Augustus again)
  ?child dbo:parent ?parentOfChild .

  # Prince George William of Hanover's parent that is royalty
  dbr:Prince_George_William_of_Hanover dbo:parent ?grandParent .

  # Father of Princess Victoria Louise of Prussia's spouse (King George V)
  ?spouse dbo:father ?fatherOfSpouse .

  # Child of King George V
  ?fatherOfSpouse dbo:child ?childOfFather .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
378,65,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v4 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warOfGahn ?commanderGreatSiege ?claimToFame ?relatedWar
WHERE {
  # Find the war associated with Carl Pontus Gahn
  dbr:C._P._Gahn dbo:nationality dbr:Sweden ;
                 dbo:occupation dbr:Military_person .

  # Assuming we have a property linking military persons to wars they participated in
  dbr:C._P._Gahn dbo:participatedIn ?warOfGahn .

  # Find the commander of the Great Siege of Gibraltar and their claim to fame
  dbr:Great_Siege_of_Gibraltar dbo:commander ?commanderGreatSiege ;
                               dbo:claimToFame ?claimToFame .

  # Find a military conflict related to the Peninsular War involving the same commander
  ?relatedWar dbo:participatedIn ?commanderGreatSiege .
  FILTER(?relatedWar != dbr:Peninsular_War)
}
```",7,8,8,3,3,3,3,71,0,0,2,0,0.0,0
54,32,test,Give me the child of the father of Soe Min Wimala Dewi and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfFather WHERE {
    ?soeMinWimalaDewi dbo:parent ?fatherOfSoeMinWimalaDewi .
    
    ?narapatiIChild dbo:parent ?narapatiI .

    FILTER(?narapatiI = dbpedia:Narapati_I_of_Ava) .

    ?fatherOfSoeMinWimalaDewi dbo:child ?childOfFather .

    ?narapatiIChild dbo:child ?childOfNarapatiI .
    
    ?parentOfChildOfNarapatiI dbo:child ?childOfNarapatiI .
    
    FILTER(?childOfFather = ?parentOfChildOfNarapatiI)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
161,64,test,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of the figure known as El Director and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/commander> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander ?societalEvent ?conflict ?decedent
WHERE {
  # Francisco Franco as ""El Director""
  dbr:Francisco_Franco dbo:nationality dbr:Spain ;
                       dbo:spouse ?spouse .
  
  # Military force during the Spanish Civil War
  ?militaryForce dbo:commander dbr:Francisco_Franco ;
                 dbo:partOf dbr:Spanish_Civil_War .

  # Commander of the military force
  ?militaryForce dbo:commander ?commander .

  # Societal event and military conflict related to Franco's death
  ?societalEvent a dbo:SocietalEvent, dbo:MilitaryConflict ;
                dbo:place dbr:Spain .
  
  ?conflict dbo:partOf ?societalEvent ;
            dbo:endTime ?endTime .
  
  FILTER(?endTime > ""1939-04-01""^^xsd:date && ?endTime < ""1975-11-20""^^xsd:date) # Franco's death date

  # Decedent at Francoist Spain
  dbr:Francisco_Franco dbo:deathPlace dbr:Spain ;
                       dbo:causeOfDeath ?decedent .
}",7,11,8,3,3,3,3,71,0,0,32,0,0.0,0
92,49,test,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as the birth name of Joseph Michael.","SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?bandOfJosephMichael
WHERE {
  # Find members of Nevermore who are also artists
  ?nevermoreMember dbo:memberOf dbr:Nevermore ;
                  a dbo:MusicArtist .

  # Find the person born as Joseph Michael (Warrel Dane)
  ?person foaf:name ""Warrel Dane"" ;
          foaf:birthName ""Joseph Michael"" ;
          dbo:band dbr:__BAND_OF_JOSEPH_MICHAEL__ .

  # Bind the member of Nevermore to a variable
  BIND(?nevermoreMember AS ?member)

  # Find the band associated with Joseph Michael
  ?person dbo:band ?bandOfJosephMichael .
}
```

This query does the following:
- Selects members of ""Nevermore"" who are also recognized as music artists.
- Identifies the person born as ""Joseph Michael,"" known as Warrel Dane, and finds his associated band.

Note: Replace `__BAND_OF_JOSEPH_MICHAEL__` with the actual resource identifier for Warrel Dane's band if it is known or can be dynamically resolved.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
701,59,test,Give me the parent of the child of the child of Seti I and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v5 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Seti I's parent (grandfather)
  ?setiI dbo:child ?child1 .
  ?child1 dbo:child ?grandChild1 .
  
  # Amun-her-khepeshef's spouse and their child
  ?amunHerKhepeshef dbp:spouse ?spouse .
  ?spouse dbo:child ?child2 .

  # Seti I's parent (father)
  ?setiI dbo:parent ?parent1 .
  
  # Amun-her-khepeshef's parent (father)
  ?amunHerKhepeshef dbo:parent ?parent2 .

  # Find the common parent
  FILTER (?parent1 = ?parent2)
  BIND(?parent1 AS ?parent)
}
```",6,6,7,3,2,3,3,71,0,3044,1,0.0,0.0,0
378,47,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as Carl Pontus Gahn.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find the Peninsular War resource
  VALUES (?peninsularWar) { (dbr:Peninsular_War) }
  
  # Find Carl Pontus Gahn's birth date and related wars
  ?gahn dbo:birthDate ?birthDate .
  FILTER(?gahn = dbr:C._P._Gahn)
  
  # Find wars that are related to the Peninsular War
  ?peninsularWar dbo:partOf ?relatedWar .

  # Find wars that Carl Pontus Gahn was involved in
  ?gahn dbo:militaryConflict ?gahnWar .
  
  # Match wars involving both the Peninsular War and Carl Pontus Gahn
  FILTER(?relatedWar = ?gahnWar)
  
  BIND(?relatedWar AS ?war)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
701,71,test,"Give me the parent of the child of the spouse of Amun-her-khepeshef and parent of the child of the child of Seti I and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v7 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?royalty WHERE {
  # Amun-her-khepeshef's spouse and their child's parent
  ?amunHerKhepeshef dbo:spouse ?spouse .
  ?child1 dbo:parent ?spouse ;
          dbo:parent ?parentOfChild1 .

  # Seti I's grandchild and their parent
  ?setiI dbo:child ?child2 .
  ?grandchild dbo:parent ?child2 .
  ?parentOfGrandchild dbo:parent ?grandchild .

  # Commander in Battle of Perire and his father's spouse
  ?commander dbp:battle [dbo:name ""Battle of Perire""] ;
             dbo:father ?fatherOfCommander .
  ?spouseOfFather dbo:spouse ?fatherOfCommander .

  # Ensure the result is a royalty
  FILTER (?parentOfChild1 = ?parentOfGrandchild && ?parentOfChild1 = ?spouseOfFather)
  FILTER (EXISTS { ?parentOfChild1 dbo:royalty true })

  BIND(?parentOfChild1 AS ?royalty)
}
```",9,10,10,3,3,3,3,71,0,0,1,0,0.0,0
92,61,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band ?artist WHERE {
  # Find the band associated with Joe Satriani
  dbr:Joe_Satriani dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:musicalArtist ?band . }

  # Find the artist who acted in ""Return to Nuke 'Em High Volume 1""
  dbr:Return_to_Nuke_'Em_High_Volume_1 dbo:actor ?actor .
  OPTIONAL { ?actor dbo:occupation dbr:Musician . }
  OPTIONAL { ?actor foaf:name ?artist . }

  # Ensure the person is both a musician and an actor
  FILTER (?band != """" && ?artist != """")
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
701,58,test,"Give me the parent of the child of Ramesses II and parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/spouse> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Ramesses II and his child
  dbr:Ramesses_II dbo:child dbr:ChildOfRamessesII .
  
  # Meritamen's parent is Ramesses II
  dbr:Meritamen dbo:parent dbr:Ramesses_II .

  # Commander's father (assuming a known commander)
  dbr:Commander dbo:father ?commandersFather .
  
  # Spouse of the commander's father
  ?commandersFather dbo:spouse ?spouse .

  # Ensure the spouse is royalty and involved in Battle of Perire
  ?spouse rdf:type dbo:Monarch ;
          dbo:participatedIn dbr:Battle_of_Perire .
  
  # The parent we are looking for is the same as the spouse
  BIND(?spouse AS ?parent)
}
```

This query assumes:
- You have a specific resource for ""ChildOfRamessesII"" and ""Commander"".
- The `dbo:participatedIn` property links individuals to events like battles.
- The relationships are correctly modeled in DBpedia.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,24,test,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of the author of The Twelve Abbots of Challant.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v2 . ?v0 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?deathPlace
WHERE {
  # Find the ruling political party in Sicily and its administration
  ?party a dbo:PoliticalParty ;
         dbo:areaServed dbr:Sicily ;
         dbo:leader ?administration .
  
  # Find the author of ""The Twelve Abbots of Challant"" and their death place
  ?book dbo:title ""The Twelve Abbots of Challant""@en ;
        dbo:author ?author .
  ?author dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
994,45,test,"Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?redTideArtist ?saSlayerArtist ?donDokkenBandMember
WHERE {
  # Find associated musical artist of Red Tide (band)
  OPTIONAL {
    ?redTide dbr:Red_Tide_(band) .
    ?redTide dbo:associatedMusicalArtist ?redTideArtist .
  }

  # Find associated musical artist of S.A. Slayer
  OPTIONAL {
    ?saSlayer dbr:S._A._Slayer .
    ?saSlayer dbo:associatedMusicalArtist ?saSlayerArtist .
  }

  # Find band member of Don Dokken who is also a musical artist
  OPTIONAL {
    ?donDokkenBandMember dbo:birthName ""Don Dokken"" ;
                        dbo:bandMemberOf ?band .
    FILTER EXISTS { ?donDokkenBandMember dbo:musicalArtist . }
  }
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
16,54,test,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of the actor of Unnatural (TV series) and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v5 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v0 <http://dbpedia.org/property/occupation> ?v5 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Identify Ted McGinley's resource and confirm his profession as an actor
  ?ted a dbo:Actor ;
      foaf:name ""Ted McGinley"" ;
      dbo:birthName ""Ted Martin McGinley"" .

  # Confirm he acted in the TV series ""Unnatural""
  ?role dbo:actor ?ted .
  ?role dbp:title ""Unnatural (TV series)"" .

  # Identify Georgeanne Marie Rice's resource and confirm her profession
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Marie Rice"" .

  # Retrieve the spouse of Ted McGinley
  ?ted dbo:spouse ?spouse .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,64,test,"Give me the associated musical artist of the associated musical artist of the reference to Watchtower and band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of Red Tide (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist WHERE {
  # Watchtower band member who became associated with another band
  ?watchtowerMember dbo:memberOf dbr:Watchtower .
  ?watchtowerMember dbo:associatedBand dbr:Anthrax .

  # Anthrax member (John Bush) is a musician
  ?anthraxMember dbo:birthDate ?date .
  FILTER (YEAR(?date) = 1961)
  
  # Don Dokken's band
  ?dokkenMember dbo:memberOf dbr:Dokken .

  # Red Tide member who joined Dokken
  ?redTideMember dbo:memberOf dbr:Red_Tide .
  ?redTideMember dbo:associatedBand dbr:Dokken .

  # Associated musical artist of George Lynch (Lynch Mob)
  ?lynchAssociatedArtist dbo:associatedBand dbr:Lynch_Mob .

  # Final associated artist
  BIND(?lynchAssociatedArtist AS ?finalArtist)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
161,63,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v6 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForceEmilioMola ?personDecedentFrancoistSpain ?militaryConflictFranciscoLargoCaballero
WHERE {
  # Step 1: Find the military force associated with Emilio Mola
  ?forceEmilioMola dbo:commander dbr:Emilio_Mola .
  
  # Step 2: Identify the person decedent at Francoist Spain who was a commander in this force
  ?personDecedent dbo:deceasedAt dbr:Francoist_Spain ;
                  dbo:commander ?forceEmilioMola .

  # Step 3: Find the military conflict involving Francisco Largo Caballero that is both a societal event and a military conflict
  ?militaryConflictFranciscoLargoCaballero dbo:participant dbr:Francisco_Largo_Caballero ;
                                            rdf:type dbo:SocietalEvent, dbo:MilitaryConflict .
  
  # Step 4: Find the military force of this conflict
  ?forceFranciscoLargoCaballero dbo:militaryForce ?militaryConflictFranciscoLargoCaballero .

  # Return the results
  BIND(?forceEmilioMola AS ?militaryForceEmilioMola)
  BIND(?personDecedent AS ?personDecedentFrancoistSpain)
  BIND(?forceFranciscoLargoCaballero AS ?militaryConflictFranciscoLargoCaballero)
}
```",7,13,8,3,3,3,3,71,0,0,32,0,0.0,0
54,69,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v4 <http://dbpedia.org/property/father> ?v3 . ?v7 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?result <http://dbpedia.org/ontology/successor> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Narapati I of Ava's child (Thihathu)
  dbr:Narapati_I_of_Ava dbo:child dbr:Thihathu .
  
  # Thinkhaya of Pagan's child (Kyansittha) and predecessor (Anawrahta)
  dbr:Thinkhaya_of_Pagan dbo:child dbr:Kyansittha .
  dbr:Kyansittha dbo:predecessor dbr:Thinkhaya_of_Pagan .

  # Thihapate of Mohnyin's reference as an office holder and royalty
  ?thihapate a dbo:OfficeHolder ;
              a dbo:Royalty ;
              rdfs:label ""Thihapate of Mohnyin""@en .
  
  # Find the parent of Thihathu (child of Narapati I) and child of Anawrahta (predecessor)
  ?parent dbo:child dbr:Thihathu ;
          dbo:child dbr:Thinkhaya_of_Pagan .

}
```",8,10,9,3,3,3,3,71,0,0,1,0,0.0,0
801,65,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and professional in the alter ego of The Shadow.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v4 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
    ?album dbo:artist dbr:50_Cent ;
           rdfs:label ""40 Dayz & 40 Nightz""@en .
    
    ?song dbo:album ?album ;
          rdfs:label ?title .

    ?producer dbo:producedWork ?song ;
              dbo:profession dbr:Musical_artist ;
              dbo:alias dbr:The_Shadow .

    ?artist dbo:birthName ""Curtis James Jackson III""@en ;
            dbo:stageName dbr:50_Cent ;
            dbo:alias dbr:The_Shadow ;
            dbo:profession dbr:Musical_artist .
}
```",7,13,8,3,3,3,3,71,0,0,8,0,0.0,0
44,8,test,"Give me the band member of Undertow (band) and band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?undertowMember ?queensrycheGroupMember WHERE {
  # Find band members of Undertow
  ?undertow dbr:Undertow ;
            dbo:bandMember ?undertowMember .

  # Find associated musical artist group or organization related to Queensrÿche
  ?queensrycheGroup dbr:Queensrÿche ;
                    a (dbo:Band|dbo:MusicalArtist) ;
                    dbo:bandMember ?queensrycheGroupMember .
}
```

This query does the following:
- It selects band members of ""Undertow"" using the `dbo:bandMember` property.
- It also looks for any associated musical artist group or organization related to ""Queensrÿche,"" ensuring it captures both bands and musical artists, and retrieves their members.",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
92,47,test,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nevermoreMember ?nukeEmHighActor WHERE {
  # Find band members of Nevermore who are artists
  ?bandMember dbo:memberOf dbr:Nevermore ;
              a dbo:MusicArtist .

  # Find actors in ""Return to Nuke 'Em High Volume 1"" who are also artists
  ?film dbr:Return_to_Nuke_'Em_High_Volume_1 ;
        dbo:starring ?nukeEmHighActor .
  ?nukeEmHighActor a dbo:FilmActor ;
                   dbo:birthPlace ?place .

  # Check if the Nevermore member and Nuke 'Em High actor are associated
  OPTIONAL { ?nevermoreMember dbo:associatedMusicalArtist ?nukeEmHighActor . }
  OPTIONAL { ?nukeEmHighActor dbo:associatedMusicalArtist ?nevermoreMember . }

}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
378,57,test,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of the commander in Great Siege of Gibraltar.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Find the war involving Carl Pontus Gahn
  ?person rdfs:label ""Carl Pontus Gahn""@en .
  ?person dbo:nationality dbr:Sweden .
  ?person dbo:occupation dbr:Military_person .

  OPTIONAL { 
    ?event dbo:participatedIn ?war .
    ?war rdf:type dbo:MilitaryConflict .
    ?war rdfs:label ?warLabel .
    FILTER(CONTAINS(LCASE(?warLabel), ""peninsular war""))
  }

  # Find the commander associated with the Great Siege of Gibraltar
  OPTIONAL {
    ?commander rdfs:label ?commanderLabel .
    ?commander dbo:occupation dbr:Military_person .
    ?event2 dbo:participatedIn dbr:Great_Siege_of_Gibraltar .
    ?event2 dbo:commandedBy ?commander .
    FILTER(CONTAINS(LCASE(?commanderLabel), ""george augustus eliott""))
  }

  # Ensure both conditions are met
  FILTER(EXISTS { ?war } && EXISTS { ?commander })
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
801,51,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Find the album ""What U See Is What U Get"" and its musical artist
  dbr:What_U_See_Is_What_U_Get 
    dbo:musicalArtist ?albumArtist .

  # Step 2: Ensure this artist is also recognized as an artist in general
  ?albumArtist a dbo:MusicalArtist ;
              a dbo:Artist .

  # Step 3: Find the producer of any work by 50 Cent that is both a song and a musical work
  ?work dbr:50_Cent dbo:musicalWork ;
        a dbo:Songs ;
        a dbo:MusicalWorks .
  
  ?work dbo:producer ?albumArtist .

}
```",5,12,6,3,2,3,3,71,0,0,1,0,0.0,0
404,58,test,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Ernest Augustus, Duke of Brunswick and his children
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?royalChild .
  
  # Filter for royalty among his children
  ?royalChild a dbo:Monarch .

  # Parent of this royal child (should be Ernest Augustus)
  ?parent dbo:child ?royalChild .

  # Father of the spouse of Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  ?father dbo:child ?spouse .
  
  # Spouse of Princess Victoria Louise of Prussia (should be Ernest Augustus)
  FILTER(?parent = ?spouse)

}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
767,29,test,Give me the reference to  and entity in Baden-Württemberg and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInBadenWurttemberg ?almaMater
WHERE {
  # Find entities in Baden-Württemberg
  ?entityInBadenWurttemberg dbo:location dbr:Baden-Württemberg .
  
  # Find George K. Nash's alma mater
  OPTIONAL {
    ?nash dbp:almaMater ?almaMater .
    FILTER (str(?nash) = ""George_K._Nash"")
  }
}
```",4,4,5,2,3,3,3,71,0,201,1,0.0,0.0,0
232,57,test,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Sylvie Bermann's residence
  dbr:Sylvie_Bermann dbo:residence dbr:London .
  
  # London is a British settlement
  dbr:London dbo:country dbr:United_Kingdom ;
             a dbo:Settlement .

  # Actor known for both a film and a military conflict
  ?actor dbo:film dbr:Saving_Private_Ryan ;
         dbo:militaryConflict dbr:World_War_II .
  
  # Professional in Actor, narrator, and producer who is Jon Pertwee's child
  ?person dbo:profession dbr:Actor ;
          dbo:narrator true ;
          dbo:producer true ;
          dbo:parent dbr:Jon_Pertwee .
  
  # Simon Treves is the child of Jon Pertwee
  dbr:Simon_Treves dbo:parent dbr:Jon_Pertwee .

  # Native of London (settlement)
  ?person dbo:nativePlace dbr:London .

  # Linking actor to Simon Treves
  ?actor foaf:name ""Simon Treves""@en .
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
801,64,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get and professional in the alter ego of the true self of The Shadow and producer of Westside Story (song).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Find the writer of ""What U See Is What U Get""
  ?album dbo:writer ?writer .
  
  # Ensure the album is ""What U See Is What U Get""
  VALUES ?album { dbr:What_U_See_Is_What_U_Get }
  
  # Step 2: The writer must be a musical artist and an artist
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .
  
  # Step 3: Find the alter ego of The Shadow
  ?alterEgo dbo:trueSelf dbr:The_Shadow .
  
  # Ensure the writer is this alter ego
  ?writer rdfs:label ?alterEgoLabel .
  
  # Step 4: Confirm they produced ""Westside Story (song)""
  ?producer dbo:producedSong dbr:Westside_Story_(song) .
  
  # Ensure the producer is the same person as the writer/artist
  FILTER(?writer = ?producer)
  
  # Return the artist
  BIND(?writer AS ?artist)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
281,63,test,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of the award of Jonathon Band and war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v6 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entityInBirthPlace ?warOfAwardee ?warOfProfession
WHERE {
  # Bob Heffron's birth place that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?entityInBirthPlace .

  # Jonathon Band's award and associated war
  dbr:Jonathon_Band dbo:award ?award .
  ?award dbo:relatedEvent ?warOfAwardee .

  # Heather Roy's profession as a military unit and associated war
  dbr:Heather_Roy dbo:profession ?profession .
  ?profession rdf:type dbo:MilitaryUnit ;
              dbo:participatedIn ?warOfProfession .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
767,56,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Find a settlement that is part of an administrative entity related to ""Green""
  ?adminEntity dbo:administrativeUnitOf dbr:Green .
  ?settlement dbo:partOf ?adminEntity ;
              rdf:type dbo:Settlement .

  # Find the fictional character associated with Matthew Burland
  ?character dbo:alterEgoOf ?burlandPersona .
  ?burlandPersona dbo:associatedWith dbr:Matthew_Burland .

  # Find the alma mater of Carl L. Nippert
  ?almaMater dbo:alumni dbr:Carl_L._Nippert .

  # Join these entities based on their relationships
  FILTER(?settlement = ?character && ?character = ?almaMater)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
9,61,test,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v5 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person dbo:award dbr:Royal_Medal .
  ?person foaf:name ?name .
  ?person dbo:almaMater ?almaMater .
  
  OPTIONAL { 
    ?organisation dbo:famousAlumni ?person .
    ?organisation rdfs:label ""Queen's University Belfast""@en .
  }
}
```",6,9,7,3,2,3,3,71,1,121,0,0.00819672131147541,1.0,0.016260162601626018
378,49,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?warGahn ?warTrigge WHERE {
  # Find Carl Pontus Gahn and his associated war
  ?personGahn a dbo:Person ;
              foaf:name ""Carl Pontus Gahn"" ;
              dbo:nationality dbr:Sweden .
  
  ?personGahn dbo:participatedInMilitaryConflict ?warGahn .

  # Find Thomas Trigge and his role in a war
  ?personTrigge a dbo:Person ;
                foaf:name ""Thomas Trigge"" ;
                dbo:nationality dbr:Sweden .
  
  ?personTrigge dbo:commanderOfMilitaryConflict ?warTrigge .

  # Ensure the wars are societal events
  ?warGahn a dbo:MilitaryConflict ;
           dbo:socialEvent true .
  
  ?warTrigge a dbo:MilitaryConflict ;
             dbo:socialEvent true .
}
```",5,8,6,3,2,3,3,71,0,0,2,0,0.0,0
996,18,test,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?elevation ?award ?force
WHERE {
  # Find elevation of Lac d'Avoriaz
  VALUES ?lac { dbr:Lac_d%27Avoriaz }
  ?lac dbo:elevationAboveSeaLevel ?elevation .

  # Find the award received by Ekrem Akurgal
  VALUES ?person { dbr:Ekrem_Akurgal }
  ?person dbo:honoraryTitle ?award .

  # Assuming 'force' is an attribute of the award (this might need adjustment based on actual data)
  OPTIONAL {
    ?award dbo:hasForce ?force .
  }
}
```",5,5,6,3,2,3,2,20,0,0,4,0,0.0,0
328,55,test,"Give me the commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v2 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/leader> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Commander under Ferenc Szálasi
  ?person dbo:militaryCommanderOf dbr:Ferenc_Sz%C3%A1lasi .
  
  # Leader of a government agency under Joseph Stalin
  ?office dbo:head dbr:Joseph_Stalin ;
          a dbo:GovernmentAgency .
  ?person dbo:leaderOf ?office .

  # Awardee of an award from Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbo:recipient ?person ;
         dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
}",6,7,7,2,3,3,3,71,0,0,1,0,0.0,0
959,32,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  # Eiji Ōtsuka's alma mater
  ?eiji dbo:almaMater ?university .
  
  # Yōichi Masuzoe's country of residence
  ?yoi dbo:nativePlace ?country .

  # Conditions for the university
  ?university a dbo:University ;
              a dbo:EducationalOrganization ;
              a dbo:Organisation ;
              dbo:country dbr:Japan .
  
  # Linking Eiji Ōtsuka and Yōichi Masuzoe through their respective properties
  ?eiji rdfs:label ""Eiji Ōtsuka""@en .
  ?yoi rdfs:label ""Yōichi Masuzoe""@en .

  FILTER (lang(?universityLabel) = 'en')
}
```",4,9,5,2,2,3,3,71,0,0,84,0,0.0,0
232,60,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Find a British politician and office holder from France
  ?politician a dbo:Politician ;
             dbo:nationality dbr:United_Kingdom ;
             dbo:country dbr:France ;
             dbp:residence ?settlement .
  
  # Ensure the residence is a settlement
  ?settlement a dbo:Settlement .

  # Find the child of Jon Pertwee who matches the criteria
  ?child dbo:parent dbr:Jon_Pertwee ;
         dbo:name ?birthName ;
         dbp:residence ?settlement .
}
```",6,10,7,3,2,3,3,71,0,0,1,0,0.0,0
959,41,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeOfCountry WHERE {
  # Yōichi Masuzoe's residence country
  ?yMasuzoe dbo:nationality dbr:Japan .
  ?yMasuzoe dbo:residence ?residence .
  ?residence dbo:country ?nativeOfCountry .

  # Eiji Ōtsuka's alma mater
  ?eOotsuka dbo:almaMater ?almaMater .
  ?almaMater a dbo:EducationalOrganization ;
             dbo:country dbr:Japan .

  # Manager of the 2013 Júbilo Iwata season
  ?manager dbo:managedTeam ?jubiloIwata .
  ?jubiloIwata dbo:season ?season .
  FILTER (?season = ""2013""^^xsd:gYear) .
  
  # Ensure all conditions are met by the same person
  FILTER(?yMasuzoe = ?eOotsuka && ?eOotsuka = ?manager)
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
492,31,test,Give me the commander in Franco-Hova Wars and person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander ?decedent WHERE {
  # Commander in Franco-Hova Wars
  ?war dbo:participatedIn dbr:Franco-Hova_Wars .
  ?commander dbo:commanded ?war ;
             rdfs:label ""Queen Ranavalona III""@en .

  # Person decedent at the work of the author of French Algeria (Albert Camus)
  ?author dbo:nationality dbr:France ;
          dbo:birthPlace dbr:French_Algeria .
  ?decedent dbo:deathCause ?cause ;
            dbo:spouse ?author ;
            rdfs:label ""Lucien Camus""@en .

}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
378,69,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and war of the commander in Peninsular War and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v7 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?carlWar ?peninsularCommander ?commanderFame ?thomasEvent
WHERE {
  # Carl Pontus Gahn's birth name and associated war
  dbr:C._P._G%C3%A5hn dbo:birthName ?birthName .
  OPTIONAL { ?person dbo:birthName ?birthName . ?person dbo:associatedWithWar ?carlWar . }

  # Peninsular War commander and their claim to fame
  dbr:Peninsular_War dbo:commander ?peninsularCommander .
  ?peninsularCommander dbo:famousFor ?commanderFame .

  # Thomas Trigge's associated event
  dbr:Thomas_Tr%C3%ADgge dbo:associatedWithEvent ?thomasEvent .
}
```",8,11,9,3,3,3,3,71,0,0,2,0,0.0,0
391,63,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v6 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/property/nickname> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v6 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Find the figure associated with Jackson, Tennessee's nickname
  ?figure dbo:nickName ""Jackson, Tennessee""@en .
  
  # Step 2: Find works by Michael Ballhaus and actors in those works
  ?work dbo:director dbr:Michael_Ballhaus ;
        dbo:starring ?actor .

  # Step 3: Find movies that are also TV shows with Roz Ryan
  ?movie dbo:title ?title ;
         a dbo:Film, dbo:TelevisionShow ;
         dbo:starring dbr:Roz_Ryan .
  
  # Combine the conditions to find the native of the figure
  ?actor dbo:nativePlace ?native .
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
701,56,test,"Give me the parent of Henuttawy (19th dynasty) and parent of the child of Nefertari and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?henuttawyParent ?nefertariChildParent ?commanderSpouse WHERE {
  # Henuttawy (19th dynasty)
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  
  OPTIONAL { 
    ?henuttawy dbo:parent ?henuttawyParent .
  }
  
  # Nefertari's child and that child's parent
  ?nefertari a dbo:Person ;
             rdfs:label ""Nefertari""@en .
  
  ?nefertariChild dbo:childOf ?nefertari ;
                  a dbo:Person .
  
  OPTIONAL {
    ?nefertariChild dbo:parent ?nefertariChildParent .
  }
  
  # Commander in Battle of Perire
  ?battle dbr:Battle_of_Perire ;
          dbo:commander ?commander .
  
  ?commander a dbo:Person ;
             dbo:father ?commanderFather .
  
  OPTIONAL {
    ?commanderFather dbo:spouse ?commanderSpouse .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
959,67,test,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/residence> ?v5 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  ?person a dbo:Politician ;
          dbo:memberOfPoliticalBody dbr:2010_Japanese_House_of_Councillors_election ;
          dbo:almaMater dbr:University_of_Tsukuba .

  ?sportsManager dbo:managerTeam dbr:1998_Kashima_Antlers_season .
  ?person dbo:managedBy ?sportsManager .

  ?residence dbo:nativeCountry ?nativeCountry .
  ?person dbo:residence ?residence .
}
```",7,10,8,3,3,3,3,71,0,0,2,0,0.0,0
184,60,test,"Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v1 <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonParent WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthYear ""1925"" .
  
  # Find her parent
  ?parent1 dbo:child ?margaret .

  # Find the child of that parent
  ?grandchild dbo:parent ?parent1 .

  # Landmark at elevation 96.0
  ?landmark a dbo:Settlement ;
            dbo:elevation ""96.0""^^xsd:float .
  
  # Find its native landmark
  ?nativeLandmark dbo:nativeOf ?landmark .

  # Find the parent of that native
  ?parent2 dbo:child ?nativeLandmark .

  # Find common parent
  FILTER (?parent1 = ?commonParent || ?parent2 = ?commonParent)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
747,23,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://dbpedia.org/ontology/birthDate> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  # Find an athlete who is also a soccer player
  ?athlete dbo:sport dbr:Soccer ;
           dbo:birthDate ?birthDate .

  # Find another person born on the same date in Zolotonosha
  ?person dbo:birthPlace dbr:Zolotonosha ;
          dbo:birthDate ?sameBirthDate .
  
  FILTER (?birthDate = ?sameBirthDate)
}
```

This query does the following:
- Selects a person who is an athlete and specifically plays soccer, capturing their birth date.
- Searches for another person born on that same date in Zolotonosha.",3,5,4,3,1,3,3,71,0,0,30,0,0.0,0
16,53,test,Give me the person born as the birth name of Gigi Rice and spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse WHERE {
  # Find Gigi Rice's birth name
  ?gigi a dbo:Person;
        foaf:name ""Gigi Rice"" ;
        dbo:birthName ?birthNameGigi .

  # Find Ted McGinley's birth name and his spouse who is an actress
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley"";
       dbo:birthName ?birthNameTed .
  
  ?ted dbo:spouse ?spouse .
  ?spouse a dbo:Person;
          foaf:name ?spouseName ;
          dbo:profession ?profession .

  FILTER (?profession = ""Actress"")
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
281,44,test,"Give me the war of the profession, that is a military unit, of Heather Roy and entity in the birth place, that is a country, of Bob Heffron and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/place> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?country ?war
WHERE {
  # Heather Roy's profession that is a military unit
  dbr:Heather_Roy dbo:occupation ?profession .
  ?profession rdfs:label ?professionLabel .
  FILTER(CONTAINS(LCASE(?professionLabel), ""military unit""))

  # Bob Heffron's birthplace country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace a dbo:Country ;
              rdfs:label ?country .

  # Beauchamp Seymour, 1st Baron Alcester's war
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:associatedWithWar ?war .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
294,21,test,"Give me the resting place of Edwin A. Keeble and resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v0 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?edwinRestingPlace ?lukeRestingPlace ?marionSettlement WHERE {
  # Resting place of Edwin A. Keeble
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:finalBurialPlace ?edwinRestingPlace .
  }

  # Resting place of Luke Lea (American politician, born 1879)
  OPTIONAL { 
    dbr:Luke_Lea_(politician) dbo:finalBurialPlace ?lukeRestingPlace .
  }
  
  # Entity in the birthplace that is a settlement for Marion James
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?marionBirthPlace .
    ?marionBirthPlace rdf:type dbo:Settlement .
    BIND(?marionBirthPlace AS ?marionSettlement)
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
328,69,test,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v1 <http://dbpedia.org/property/office> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/leader> ?result . ?v7 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferenc Szálasi as commander in a force
  ?szalasi dbo:positionHeld ?commanderRole .
  ?commanderRole rdfs:label ""Ferenc Szálasi""@en .

  # Awardee of the Commander's Award for Volcano and Ryukyu Islands campaign
  ?person dbo:awardReceived ?awards .
  ?awards dbo:name ""Commander's Award for the Volcano and Ryukyu Islands campaign""@en .

  # Leader of a government agency
  ?person dbo:headOf ?agency .
  ?agency dbo:type dbr:Government_agency .

  # Leader, office holder, and politician of Gustav Jonson
  ?jonson dbo:positionHeld ?leaderRole .
  ?leaderRole rdfs:label ""Gustav Jonson""@en .
  ?person dbo:subordinateOf ?jonson .
  ?person a dbo:OfficeHolder ;
          a dbo:Politician .

}
```",8,11,9,3,3,3,3,71,0,0,1,0,0.0,0
617,32,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of Antiochus III the Great.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:spouse ?spouse .
  ?parent (dbo:child|dbo:spouse) ?child .

  FILTER(?parent IN (dbr:Seleucus_II_Callinicus, ?spouse))

  # Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child ?antiochusChild .
  
  # Find the spouse of Antiochus III's child
  ?antiochusChild dbo:spouse ?spouseOfChild .

  # The grandchild who is royalty
  ?child dbo:child ?grandchild .
  FILTER(?grandchild != dbr:Seleucus_II_Callinicus)
  ?grandchild a dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,4,0,0.0,0
392,27,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?province ?region ?entityInItaly WHERE {
  # Sebastiano Bianchetti's residence in Italy
  ?person rdfs:label ""Sebastiano Bianchetti""@it .
  ?person dbo:residence ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy ;
              dbo:administrativeTerritory ?province .

  # Aguilar de Segarra's time zone region associated with a sports event
  ?place rdfs:label ""Aguilar de Segarra""@en .
  ?place dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
  ?region dbo:sportEvent ?sportsEvent .

  # Entity in Italy (assuming it's related to the above)
  ?entityInItaly a dbo:Settlement ;
                 dbo:country dbr:Italy .
}
```",5,8,6,2,3,2,3,28,0,0,1,0,0.0,0
427,60,test,"Give me the reference to the name of the party of Michele Pinto and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?micheleParty ?romanoBirthName
WHERE {
  # Find Michele Pinto's political party
  OPTIONAL {
    ?michele a dbo:Person ;
             foaf:name ""Michele Pinto"" ;
             dbo:party ?micheleParty .
  }

  # Find Romano Prodi's birth name, ensuring he is an office holder and politician
  ?romano a dbo:Politician, dbo:OfficeHolder ;
          foaf:name ""Romano Prodi"" ;
          foaf:givenName ?romanoBirthName .
}
```",6,8,7,3,2,3,3,71,0,0,2,0,0.0,0
404,26,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent WHERE {
  # Prince George William of Hanover
  ?prince a dbo:Person ;
          foaf:name ""Prince George William of Hanover""@en .
  
  # His parent who is royalty
  ?parent dbo:child ?prince ;
          a dbo:Monarch .

  # A child of this royal parent who is also royalty
  ?royalChild dbo:parent ?parent ;
              a dbo:Monarch .

  # The parent of this royal child
  ?grandparent dbo:child ?royalChild .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
767,57,test,Give me the entity in Baden-Württemberg and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?alterEgo ?almaMater
WHERE {
  # Entity in Baden-Württemberg
  ?entity dbo:location dbr:Baden-Württemberg .
  
  # Alter ego of Black Hood
  ?alterEgo dbo:alias dbr:Black_Hood ;
            dbo:associatedWith ?entity .

  # Alma mater related to George Kilbon Nash
  ?admin dbo:almaMater ?almaMater .
  ?admin dbo:relatedTo dbr:George_Kilbon_Nash .
  
  # Linking the entity with the alter ego and alma mater
  ?entity dbo:associatedWith ?alterEgo ;
          dbo:administration ?admin .
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
994,68,test,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Reference to Watchtower
  ?watchtower dbo:musicalArtist ?artist1 .
  
  # Step 2: Associated Musical Artist of Donald Maynard Dokken
  dbr:Donald_Dokken dbo:member ?bandMember .
  ?bandMember dbo:musicalArtist ?artist2 .

  # Step 3: Band Member Born as a Musical Artist
  ?bandMember dbo:birthPlace ?place .
  ?bandMember dbo:genre ?genre .
  
  # Step 4: Fredrik Thordendal's Band
  dbr:Fredrik_Thordendal dbo:member ?thordendalBand .
  
  # Step 5: Associated Musical Artist of the Band
  ?thordendalBand dbo:musicalArtist ?finalArtist .
}
```

This query assumes that each step can be linked through the `dbo:musicalArtist` and `dbo:member` properties, which are common in DBpedia for linking artists to bands. Adjustments may be needed based on actual data availability and relationships.",8,13,9,3,3,3,3,71,0,0,1,0,0.0,0
391,22,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor ;
         dbo:nationality dbr:United_States ;
         dbo:hometown dbr:Compton,_California .

  ?movie dbo:starring ?actor ;
         rdf:type dbo:Film ;
         dbo:genre dbr:Television_series .
  
  ?work dbo:starring ?actor ;
        rdf:type dbo:Work ;
        dbo:starring dbr:Roz_Ryan .

  FILTER(?movie = ?work)
}
```

This query does the following:
- Selects actors who are native to Compton, California.
- Ensures that these actors starred in a movie (`?movie`) which is also classified as both a film and a television series.
- Checks if Roz Ryan co-starred in this work.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,46,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as the birth name of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Sean Pertwee's films or military conflicts
  ?filmOrConflict dbo:actor dbr:Sean_Pertwee .
  
  # Find Jon Pertwee and his child
  dbr:Jon_Pertwee dbo:child ?child .
  
  # Get the birth name of Jon Pertwee's child
  ?child foaf:name ?birthName .

  # Find films or military conflicts associated with the child
  ?filmOrConflict2 dbo:actor ?child .

  # Find actors related to both Sean Pertwee and Jon Pertwee's child
  ?filmOrConflict dbo:actor ?actor .
  ?filmOrConflict2 dbo:actor ?actor .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,67,test,"Give me the parent of Meritamen and spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v3 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v6 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v3 . ?v6 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfMeritamen ?spouseOfFatherOfCommander
WHERE {
  # Meritamen's parent
  dbr:Meritamen dbo:mother dbr:Nefertari .
  BIND(dbr:Nefertari AS ?parentOfMeritamen)

  # Commander in Battle of Perire (assuming Ramesses II)
  dbr:Ramesses_II dbo:father dbr:Seti_I .
  
  # Spouse of Seti I
  dbr:Seti_I dbo:spouse ?spouseOfFatherOfCommander .

  # Ensure the spouse is royalty
  ?spouseOfFatherOfCommander a dbo:Monarch .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
659,42,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce
WHERE {
  # Rutger Jan Schimmelpenninck's military force
  OPTIONAL { 
    dbr:Rutger_Jan_Schimmelpenninck dbo:militaryServiceIn ?force1 .
  }

  # Commander in the Battle of Leipzig
  OPTIONAL {
    dbr:Battle_of_Leipzig dbo:commander ?commanderBattleOfLeipzig .
    ?commanderBattleOfLeipzig dbo:militaryServiceIn ?force2 .
  }

  # Arthur Wellesley, 1st Duke of Wellington's military force
  OPTIONAL {
    dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:militaryServiceIn ?force3 .
  }

  # Find the common military force
  FILTER (?force1 = ?force2 && ?force2 = ?force3)
  
  BIND(?force1 AS ?militaryForce)
}
```",5,8,6,2,3,3,3,71,0,0,6,0,0.0,0
547,23,test,Give me the resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?burialPlace WHERE {
  # Step 1: Identify William Haliburton
  VALUES ?williamHaliburton { dbr:William_Haliburton }

  # Step 2: Find his children
  ?williamHaliburton dbo:child ?child .

  # Step 3: For each child, find their children (grandchildren of William)
  ?child dbo:child ?grandchild .

  # Step 4: Determine the burial sites for these grandchildren
  OPTIONAL { ?grandchild dbo:burialPlace ?burialPlace }
}
```

This query assumes that `dbr:William_Haliburton` is the correct resource identifier for William Haliburton in DBpedia. If this identifier is incorrect, you may need to adjust it based on the actual resource available in DBpedia.",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,28,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky and person deceased at the headquarter of House of Sombrerete.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Lisa Gavrić's profession
  ?lisa a dbo:Person ;
        foaf:name ""Lisa Gavrić"" ;
        dbo:profession ?profession .

  # Event and Societal Event
  ?event a dbo:Event, dbo:SocietalEvent ;
         dbo:participant ?lisa .

  # Awardee of Sergei Makovetsky's Award
  ?award a dbo:Award ;
         dbo:givenBy dbr:Sergei_Makovetsky ;
         dbo:recipient ?lisa .

  # Person deceased at the headquarter of House of Sombrerete
  ?deathEvent a dbo:Event, dbo:Death ;
              dbo:place dbr:House_of_Sombrerete_Headquarters ;
              dbo:participant ?lisa .

  # Commander in profession
  ?commander a dbo:Commander ;
             dbo:profession ?profession .
}
```",6,8,7,2,3,2,3,28,0,0,1,0,0.0,0
184,35,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Find Archduke Joseph Francis of Austria and his child
  ?archduke a dbo:Archduke ;
            foaf:name ""Joseph Francis of Austria""@en .
  
  ?child dbo:parent ?archduke ;
         a dbo:Person .

  # Find the parent of this child
  ?parent1 dbo:child ?child .

  # Identify someone native to Budapest and their parent
  ?budaPerson dbo:nativePlace dbr:Budapest ;
              a dbo:Person .
  
  ?parent2 dbo:child ?budaPerson .

  # Find the common parent of these two individuals
  FILTER (?parent1 = ?commonParent)
  FILTER (?parent2 = ?commonParent)
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
801,55,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the song ""40 Dayz & 40 Nightz""
  ?song a dbo:Songs ;
        rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  # Identify its writer
  ?song dbo:lyricsBy dbr:50_Cent .

  # Identify the producer of the song who is also an artist and musical artist
  ?song dbo:producer ?artist ;
        dbo:musicalArtist ?artist .

  # Ensure the artist has a professional alter ego ""The Shadow""
  ?artist dbo:alterEgo dbr:The_Shadow .
}
```",6,11,7,2,3,3,3,71,0,0,1,0,0.0,0
488,42,test,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?fatherAdministration ?birthPlace
WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:placeOfDeath ?deathPlace .

  # Emperor Go-Mizunoo's father (Emperor Go-Yōzei)
  dbr:Go_Mizunoo dbo:father dbr:Go_Yozei .
  dbr:Go_Yozei dbo:title ?fatherAdministration .

  # Commander in Boshin War (Saigō Takamori)
  dbr:Saigo_Takamori dbo:birthPlace ?birthPlace .
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,46,test,"Give me the war of the commander in Battle of La Rinconada de Ate and war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?militaryForce ?eventInChile
WHERE {
  # Find information about the Battle of La Rinconada de Ate
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  # Identify the commander in this battle
  ?battle dbo:commander ?commander .

  # Determine the military force involved
  ?battle dbo:militaryForce ?militaryForce .

  # Find a societal event in Chile related to these entities
  ?eventInChile a dbo:SocietalEvent ;
                dbo:location dbr:Chile ;
                dbo:relatedTo ?commander ;
                dbo:relatedTo ?militaryForce .
}
```

This query attempts to:

- Identify the battle and its commander.
- Determine the military force involved in the battle.
- Connect these elements to a societal event located in Chile.",5,6,6,3,2,3,3,71,0,0,14,0,0.0,0
701,52,test,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II and parent of the child of Ramesses II.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  ?amunherkhepeshef dbo:spouse ?commonSpouse .
  ?ramessesII dbo:spouse ?commonSpouse .
  
  ?child dbo:parent ?commonSpouse .
  
  ?child dbo:parent ?parent .
}
```

This query assumes that the relationships are directly available in DBpedia. It identifies a common spouse of both Amun-her-khepeshef and Ramesses II, finds their child, and then retrieves the parent of this child.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
427,54,test,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and reference to the name of Italian People's Party (1994) and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alumnus ?father ?fatherParty ?italianPeopleParty ?prodiParty WHERE {
  # Find an alumnus of MIT
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  
  # Find the father of this alumnus
  ?alumnus dbp:father ?father .

  # Get the political party of the father
  OPTIONAL { ?father dbo:partyAffiliation ?fatherParty . }

  # Reference to Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) a dbo:PoliticalParty ;
     dbp:name ""Italian People's Party"" .

  # Romano Prodi's party
  OPTIONAL {
    dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  }
}
LIMIT 10",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
963,16,test,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?city ?country ?rulingParty ?administration
WHERE {
  # Find Sremski Karlovci and its country
  dbr:Sremski_Karlovci dbo:locatedIn ?country .
  
  # Ensure the country uses Central European Time
  ?country dbp:timeZone ""Central European Time"" .

  # Get the ruling party of the country
  ?country dbo:rulingParty ?rulingParty .

  # Retrieve administration details of the ruling party
  ?rulingParty dbo:administration ?administration .
  
  BIND(dbr:Sremski_Karlovci AS ?city)
}
```",4,6,5,2,2,3,2,20,0,0,84,0,0.0,0
435,27,test,Give me the territory administered from Reykjavík and work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v3 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?work ?region
WHERE {
  # Territory administered from Reykjavík (Iceland)
  dbr:Reykjavík dbo:administrativeTerritory dbr:Iceland.
  
  # Work of the author of ""Iceland"" (Halldór Laxness)
  dbr:Halldór_Laxness dbo:work dbr:Iceland_(novel).
  ?work dbo:author dbr:Halldór_Laxness.

  # Region of the time zone in Bombali Shebora Chiefdom (Sierra Leone, GMT)
  dbr:Bombali_Shebora_Cheifdom dbo:locatedIn dbr:Sierra_Leone.
  dbr:Sierra_Leone dbo:timeZone dbr:Greenwich_Mean_Time.
  ?region rdfs:label ""Africa/Freetown""@en.
}
```",5,5,6,2,3,2,3,28,0,0,1,0,0.0,0
184,48,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?parentOfNative
WHERE {
  # Step 1 & 2: Find the parent of Archduke Joseph Francis's child
  ?child dbo:father dbr:Archduke_Joseph_Francis_of_Austria .
  ?child dbo:mother ?mother .
  ?parentOfChild rdf:type dbo:Person ;
                 (dbo:father|dbo:mother) ?child .

  # Step 3 & 4: Find the native of a landmark at elevation 96.0 meters
  ?landmark dbo:elevation ""96.0""^^xsd:float ;
            dbo:settlement dbr:Settlement .
  ?native dbp:nativePlace ?landmark .
  
  # Step 5: Find the parent of this native
  ?parentOfNative rdf:type dbo:Person ;
                  (dbo:father|dbo:mother) ?native .
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,47,test,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?conflict WHERE {
  ?wellington dbo:givenName ""Arthur"" .
  ?wellington dbo:familyName ""Wellesley"" .
  ?wellington dbo:title ""1st Duke of Wellington""@en .
  ?wellington dbo:occupation dbr:Military_person .

  ?unit rdfs:label ""Polish Horse""@en .
  ?unit dbo:militaryConflict ?conflict .
  
  ?commander dbo:givenName ""Arthur"" .
  ?commander dbo:familyName ""Wellesley"" .
  ?commander dbo:title ""1st Duke of Wellington""@en .
  ?commander dbo:occupation dbr:Military_person .

  ?commander dbo:militaryCommand ?unit .
  
  FILTER(?wellington = ?commander)
}
```",5,9,6,3,2,3,3,71,0,0,71,0,0.0,0
534,16,test,"Give me the headquarter of the owner of RDS Arena and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?birthPlace WHERE {
  # Step 1: Find the owner of RDS Arena
  dbr:RDS_Arena dbo:owner ?owner .

  # Step 2: Get the headquarters of the owner
  ?owner dbo:headquarterLocation ?headquarters .

  # Step 3: Identify Desmond FitzGerald (politician)
  dbr:Desmond_FitzGerald_(Irish_politician) dbo:child ?child .

  # Step 4: Ensure the child is a politician and office holder
  ?child rdf:type dbo:Politician ;
         dbo:officeHolderOf ?office .

  # Step 5: Get the birthplace of this politician
  ?child dbo:birthPlace ?birthPlace .
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
754,16,test,Give me the parent of the child of Ram Khamhaeng and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandParentOfRamChild ?greatGrandParentOfMay WHERE {
  # Find Ram Khamhaeng's child
  ?ramChild dbo:parent dbr:Ram_Khamhaeng .
  
  # Find the parent of Ram Khamhaeng's child
  ?grandParentOfRamChild dbo:parent ?ramChild .

  # Find May Hnin Htapi's parent
  ?mayParent dbo:parent dbr:May_Hnin_Htapi .

  # Find the grandparent (great-grandparent) of May Hnin Htapi
  ?greatGrandParentOfMay dbo:parent ?mayParent .
}
```",4,4,5,2,2,3,2,20,0,4,1,0.0,0.0,0
92,64,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Joseph Michael (Joe Satriani)
  VALUES (?person) { dbr:Joe_Satriani }
  ?person dbo:birthName ?birthName .
  
  # Jim Sheppard
  VALUES (?artist) { dbr:Jim_Sheppard_(musician) }
  ?artist dbo:associatedBand ?band .

  # Nevermore (2006 film)
  VALUES (?filmArtist) { dbr:Nevermore_(band) }
  ?filmArtist dbo:member ?member .
  
  FILTER(?band = ?member)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
391,30,test,"Give me the native of Compton, California and actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California .

  ?movie dbo:starring ?actor .
  ?movie dbo:work dbr:Some_Work ; # Replace with the specific work if known
          dbo:televisionSeries dbr:Some_Television_Show . # Replace with the specific TV show if known

  ?theDeparted dbo:starring ?actor ;
               rdf:type dbo:Film .

  ?collaboration dbo:person1 ?actor ;
                 dbo:person2 dbr:Roz_Ryan .
}
```

Note:
- You may need to replace `dbr:Some_Work` and `dbr:Some_Television_Show` with the specific DBpedia resources for the work and television show if they are known.
- This query assumes that the relationships between movies, works, and TV shows are directly linked in DBpedia. Adjustments might be necessary based on actual data availability.",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
92,59,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v5 <http://dbpedia.org/property/birthName> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?bandMember ?musicalArtist
WHERE {
  # Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?movie dbo:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .

  # Check if this actor is also a band member
  OPTIONAL {
    ?bandMember dbo:member ?actor .
    ?bandMember dbo:name ?bandName .
  }

  # Find the reference to ""Nevermore"" (2006 film)
  ?film dbo:title ""Nevermore""@en ;
        dbo:releaseDate ?date .

  FILTER(YEAR(?date) = 2006)

  # Find the associated musical artist of this film
  OPTIONAL {
    ?musicalArtist dbo:associatedBand ?band .
    ?band dbo:name ?bandName .
  }
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
801,63,test,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of the true self of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v6 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/occupation> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v6 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://dbpedia.org/property/alterEgo> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
    ?album dbo:producer ?artist .
    ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
    FILTER NOT EXISTS { ?artist dbo:birthPlace ? } # Filter out non-artists
    OPTIONAL { ?artist dbo:profession dbr:Musical_artist . }
    OPTIONAL { ?artist dbo:profession dbr:Artist . }
}
```

This query does the following:
- Selects artists (`?artist`) who are producers of the album ""40 Dayz & 40 Nightz.""
- Ensures that these artists have professions related to being a musical artist or an artist.
- Filters out entities that are not likely to be artists by checking for missing birthplace data.",7,12,8,3,3,3,3,71,0,0,1,0,0.0,0
783,17,test,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  # Step 1: Find Appietus's associated musical artist
  dbr:Appietus dbo:musicArtist ?associatedArtist .

  # Step 2: Find a band member of this person who is also an artist and a musical artist
  ?associatedArtist dbo:member ?bandMember .
  
  # Ensure the band member is both an artist and a musical artist
  ?bandMember rdf:type dbo:MusicalArtist ;
              rdf:type dbo:Artist .

  # Step 3: This person should be born as the persona of Ebony Reigns
  ?bandMember foaf:name ""Ebony Reigns"" .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
9,46,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find the mayor of Belfast
  ?mayor a dbo:Mayor ;
         dbo:officeLocation dbr:Belfast ;
         dbo:almaMater ?almaMater .

  # Find an awardee of the Royal Medal and their alma mater
  ?awardee dbo:award dbr:Royal_Medal ;
          dbo:almaMater ?almaMater .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
9,50,test,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v3 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find Queen's University Belfast and its nickname
  VALUES (?university) { dbr:Queen's_University_Belfast }
  ?university dbo:nickname ?nickname .

  # Find the Royal Medals award
  ?award a dbo:Award ;
         rdfs:label ""Royal Medal""@en .
  
  # Find awardees of the Royal Medals and their alma mater
  ?awardee dbo:recipientOf ?award ;
           dbo:almaMater ?almaMater .

  # Ensure the alma mater is Queen's University Belfast
  FILTER(?almaMater = dbr:Queen's_University_Belfast)
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,18,test,Give me the resting place of Alan Cunningham and resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    dbr:Alan_Cunningham_(explorer) 
    dbr:James_Burton_(Egyptologist) 
    dbr:Simon_Cadell
  }
  
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
}
```

This query uses the `dbo:placeOfBurial` property to find the resting places of the specified individuals. The `VALUES` clause is used to specify the list of people we are interested in.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
617,49,test,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of the child of the commander in Battle of Panium.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?royalGrandchild WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:spouse ?parent1 .
  ?parent1 dbo:child ?childOfSeleucus .

  # Grandchildren of Seleucus II Callinicus
  ?childOfSeleucus dbo:child ?grandChild .

  # Filter for royalty among grandchildren
  ?grandChild a dbo:Monarch .

  # Commander in Battle of Panium and his child
  dbr:Battle_of_Panium dbo:commander ?commander .
  ?commander dbo:child ?childOfCommander .

  # Parent of the commander's child
  ?parent2 dbo:child ?childOfCommander .

  # Find if any royal grandchild is also a parent of the commander's child
  FILTER (?grandChild = ?parent2)
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
801,58,test,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?album ?producer ?associatedArtist WHERE {
  # Identify the album
  VALUES ?album { dbr:What_U_See_Is_What_U_Get_(50_Cent_album) }
  
  # Find producers of the album
  ?album dbo:producer ?producer .
  
  # Find associated musical artists with the writer (50 Cent)
  ?album dbo:artist ?associatedArtist .
  FILTER (?associatedArtist != dbr:50_Cent)

  # Ensure that these are professional roles and individuals
  ?producer a foaf:Person .
  ?associatedArtist a foaf:Person .
}
```

This query does the following:
- It identifies the album ""What U See Is What U Get"" by 50 Cent.
- Retrieves producers associated with this album.
- Finds other musical artists involved in the album, excluding 50 Cent himself to focus on associated artists.",6,13,7,3,3,3,3,71,0,0,1,0,0.0,0
92,63,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://xmlns.com/foaf/0.1/name> ?v4 . ?v6 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?artistJosephFurney ?bandJosephFurney ?artistJimSheppard
WHERE {
  # Nevermore (2006 film) band member who is an artist
  dbr:Nevermore_(film)_2006 dbo:reference dbr:Nevermore_(band) .
  dbr:Nevermore_(band) dbo:member ?bandMember .
  ?bandMember a dbo:Artist .

  # Joseph Michael Furney's associated musical artist and band
  dbr:Joseph_Michael_Furney dbp:birthName ""Joseph Michael Furney"" .
  ?furneyArtist dbo:associatedBand ?bandJosephFurney .
  ?furneyArtist a dbo:Artist .
  ?furneyArtist dbo:associatedMusicalArtist ?artistJosephFurney .

  # Jim Sheppard's associated musical artist
  dbr:Jim_Sheppard dbp:birthName ""Jim Sheppard"" .
  ?sheppardArtist dbo:associatedMusicalArtist ?artistJimSheppard .
  ?sheppardArtist a dbo:Artist .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
492,52,test,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of the author of French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v5 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v2 <http://dbpedia.org/property/author> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?decedentAtAlgiers ?workOfAuthor
WHERE {
  # Frédéric-Georges Herr and the war he was involved in
  dbr:Frédéric_Georges_Herr dbo:militaryConflict ?war .
  
  # Commander of the war
  ?war dbo:commander ?commander .

  # Person decedent at Algiers
  ?decedent dbp:placeOfDeath dbr:Algiers ;
            a dbo:Person .

  # Work of the author related to French Algeria
  ?author dbo:nationality dbr:France ;
          dbo:work ?work .
  FILTER(CONTAINS(LCASE(?work), ""french algeria""))
  
  # Linking decedent and work through commonality (e.g., same war or event)
  OPTIONAL { ?decedent dbo:militaryConflict ?war . }
  OPTIONAL { ?author dbo:deathPlace dbr:Algiers . }

}
```

This query attempts to:

- Identify the military conflict associated with Frédéric-Georges Herr.
- Find the commander of that conflict.
- Locate a person who died in Algiers.
- Identify an author related to ""French Algeria"" and their work.

Note: The query assumes certain relationships and may need adjustments based on actual DBpedia data availability and structure. Adjustments might be necessary if specific properties or resources are not directly available.",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
626,17,test,Give me the awardee of the award of the military force of Battle of Borodino and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award ?roleInLeipzig WHERE {
  # Find a person awarded by Russian military force for Battle of Borodino
  ?person dbo:awardedBy dbr:Russian_Military_Force .
  ?person dbo:award dbr:Award_for_Battle_of_Borodino .

  # Ensure the same person was a commander in the Battle of Leipzig
  ?person dbo:roleInBattle dbr:Battle_of_Leipzig ;
          dbo:position ""Commander""@en .
  
  # Bind variables for clarity
  BIND(?person AS ?awardRecipient)
  BIND(dbo:award AS ?award)
  BIND(dbo:roleInBattle AS ?roleInLeipzig)
}
```

This query assumes the existence of specific DBpedia resources and properties, such as `dbo:awardedBy`, `dbo:award`, and `dbo:roleInBattle`. Adjustments may be necessary based on actual DBpedia schema details.",4,4,5,3,2,3,2,20,0,0,9,0,0.0,0
701,49,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of Nefertari.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
    # Step 1: Identify the commander in Battle of Perire
    ?commander dbo:battleFoughtIn dbpedia:Battle_of_Perire .
    
    # Step 2: Find the father of that commander
    ?father dbo:child ?commander .
    
    # Step 3: Determine the spouse of the father who is a royalty
    ?spouse dbo:spouse ?father ;
            rdf:type dbo:Monarch .

    # Step 4: Identify any child of Nefertari
    ?nefertariChild dbo:childOf dbpedia:Nefertari .
    
    # Step 5: Ensure this parent matches the spouse found in step 3
    ?spouse dbo:parent ?nefertariChild .
}
```

This query assumes that DBpedia has structured data for these historical figures and their relationships. Adjustments may be necessary based on actual data availability.",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
994,60,test,"Give me the band member of the person born, that is a musical artist, as the persona of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v5 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v5 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Don Dokken is a musical artist
  dbr:Don_Dokken dbo:genre dbr:Metal_music .

  # Find band members of Don Dokken
  ?bandMember dbo:memberOfBand dbr:Don_Dokken .
  
  # Ensure the band member is a person and a musical artist
  ?bandMember rdf:type dbo:Person ;
              dbo:occupation dbr:Musical_artist .

  # Associated musical artist of Watchtower
  ?watchtowerArtist dbo:associatedBand dbr:Watchtower .
  
  # Linking the band member to the associated artist of Watchtower
  ?bandMember dbo:associatedBand ?watchtowerArtist .
}
```",6,7,7,3,2,3,3,71,0,0,1,0,0.0,0
16,28,test,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice and professional in Actress.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Ted McGinley
  { 
    ?person1 rdfs:label ""Ted McGinley""@en .
    ?person1 dbo:birthName ""Ted Martin McGinley"" .
    ?person1 dbo:spouse ?spouse .
  }
  
  UNION
  
  # Georgeanne Rice
  {
    ?person2 rdfs:label ""Georgeanne Rice""@en .
    ?person2 dbo:occupation dbp:Actress .
    ?person2 dbo:spouse ?spouse .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,52,test,"Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v5 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v3 <http://dbpedia.org/property/alterEgo> ?v2 . ?v5 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?professional ?associatedArtist ?producer WHERE {
  # The Shadow's alter ego
  VALUES ?alterEgo { dbr:Lamont_Cranston }

  # Chris Taylor (music producer)
  VALUES ?chrisTaylor { dbr:Chris_Taylor_(musician) }
  
  # 50 Cent's work
  VALUES ?fiftyCentWork { dbr:Curtis_(album) } # Example album

  # Find the professional in Lamont Cranston's alter ego
  ?alterEgo dbo:profession ?professional .

  # Find associated musical artist of Chris Taylor
  ?chrisTaylor dbo:associatedMusicalArtist ?associatedArtist .

  # Find producer of 50 Cent's work
  ?fiftyCentWork dbo:producer ?producer .

  FILTER(?professional = ?associatedArtist && ?associatedArtist = ?producer)
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
492,54,test,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v3 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent WHERE {
  # Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
  dbr:Joseph_C._Satterthwaite dbo:officeTitle ""Assistant Secretary of State for African Affairs""@en .
  
  # Commander in the Battle of Verdun
  ?verdunCommander dbo:commandedBattle dbr:Battle_of_Verdun ;
                   dbo:deathPlace ?algiersEvent .

  # Event in Algiers related to the commander
  ?algiersEvent a dbo:Event ;
                dbo:place dbr:Algiers .

  # Person decedent at Algiers
  ?personDecedent dbo:deathPlace ?algiersEvent .
  
  # Linking the person decedent to Joseph C. Satterthwaite's work context
  ?personDecedent dbo:relatedTo dbr:Joseph_C._Satterthwaite .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
767,61,test,"Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://dbpedia.org/property/alterEgo> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v5 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater
WHERE {
  # George Kilbon Nash's alma mater
  OPTIONAL { 
    dbr:George_Kilbon_Nash dbo:almaMater ?almaMater1 .
  }

  # Matthew Burland's alter ego (fictional character)
  OPTIONAL {
    dbr:Matthew_Burland dbo:fictionalCharacter ?alterEgo .
    ?alterEgo dbo:almaMater ?almaMater2 .
  }
  
  # Return the alma mater if found
  BIND(IF(BOUND(?almaMater1), ?almaMater1, IF(BOUND(?almaMater2), ?almaMater2, NULL)) AS ?almaMater)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
365,8,test,Give me the band of Phil Alvin and reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?realName WHERE {
  # Find the band associated with Phil Alvin
  ?person dbo:associatedBand dbr:The_Blasters .
  ?person rdfs:label ""Phil Alvin""@en .

  # Get the band's name
  ?band dbo:name ?bandLabel .
  FILTER (lang(?bandLabel) = 'en')
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?bandLabel), "" "", ""_""))) AS ?band)

  OPTIONAL {
    # Find any real name or similar property for the band
    ?band dbo:realName ?realName .
  }
}
```

This query does the following:
- It looks for a person associated with The Blasters and filters by Phil Alvin.
- It retrieves the band's name using DBpedia's ontology properties.
- It attempts to find any ""real name"" property related to the band, though this might not exist as bands typically don't have a ""real name"" like individuals do.",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
10,24,test,"Give me the professional in the birth name of Sharon Kao and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?bandMember
WHERE {
  # Find Sharon Kao's birth name
  VALUES ?sharonKao { dbr:Sharon_Kao }
  
  ?sharonKao dbo:birthName ?birthName .
  
  # Check if there is any band association with Luke Francis Vibert
  OPTIONAL {
    ?band dbo:member ?person1 ;
          dbo:member ?person2 .
    
    FILTER(?person1 = ?sharonKao || ?person2 = ?sharonKao)
    
    VALUES ?vibert { dbr:Luke_Francis_Vibert }
    
    FILTER(?person1 = ?vibert || ?person2 = ?vibert)
    
    BIND(""Yes"" AS ?bandMember)
  }

  # If no band association is found, set bandMember to ""No""
  BIND(COALESCE(STR(?bandMember), ""No"") AS ?bandMember)
}
```",4,5,5,2,2,2,3,28,0,2,1,0.0,0.0,0
617,63,test,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and spouse of the child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v4 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v4 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Antiochus II Theos' successor who is royalty
  dbr:Antiochus_II_theos dbo:succeededBy ?successor .
  
  # Successor's child who is royalty
  ?successor dbo:child ?child .
  
  # Antiochus III the Great and his spouse
  ?antiochusIII dbo:parent dbr:Antiochus_II_theos ;
               dbo:spouse ?spouse .
  
  # Spouse's child
  ?spouse dbo:child ?spouseChild .
  
  # Parent of the spouse's child
  ?spouseChild dbo:parent ?childOfChild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
963,18,test,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .

  # Find the ruling party in Sremski Karlovci
  dbr:Sremski_Karlovci dbo:rulingParty ?party .
  
  # Ensure the party is a political party
  ?party rdf:type dbo:PoliticalParty .

  # Find countries within the region of the time zone and the political party's administration
  ?country rdf:type dbo:Country ;
           dbo:timeZone ?timezone ;
           dbo:governingBody ?party .
}
```",5,7,6,3,2,3,2,20,0,0,84,0,0.0,0
528,61,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war WHERE {
  # Find Narciso Campero and his birth name
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero"" ;
          dbo:birthName ?birthName .

  # Identify the force or role he was associated with
  OPTIONAL { ?person dbo:role ?force . }

  # Find wars related to a commander in a specific context (possibly linked to a date or work)
  ?war dbo:commander ?person .
  
  # Additional filtering based on the context of --01-09, if applicable
  FILTER(STRSTARTS(LCASE(?context), ""work of --01-09""))
}
```

This query attempts to:

- Identify Narciso Campero and his birth name.
- Retrieve any military or political role (`?force`) he was associated with.
- Find wars where he might have been a commander, possibly linked to a specific context or date.

Please note that the exact details of the ""work of --01-09"" are unclear from the question, so this part is speculative and may need adjustment based on more precise information.",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
404,59,test,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
    # Step 1: Find Prince George William of Hanover's parent who is royalty
    ?princeGeorgeWilliam a dbo:Person ;
                        foaf:surname ""Hanover"" ;
                        dbo:child dbr:Prince_George_William_of_Hanover .
    
    ?parentOfPrinceGeorgeWilliam dbo:spouseOrPartner ?princeGeorgeWilliam ;
                                rdf:type dbo:Monarch .

    # Step 2: Find the child of this parent who is royalty
    ?parentOfPrinceGeorgeWilliam dbo:child ?royaltyChild .

    # Step 3: Identify Princess Victoria Louise of Prussia's birth name and spouse
    ?princessVictoriaLouise a dbo:Person ;
                           foaf:surname ""Prussia"" ;
                           dbo:birthName ?birthName .
    
    ?spouseOfPrincessVictoriaLouise dbo:spouseOrPartner ?princessVictoriaLouise .

    # Step 4: Find the parent of the royalty child identified in step 2
    ?royaltyChild dbo:parent ?parentOfChild .
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
427,38,test,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherPartyLabel ?prodiPartyLabel WHERE {
  # Lamberto Andreotti's father and his party
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:politicalAffiliation ?fatherParty .

  # Romano Prodi's political party
  dbr:Romano_Prodi dbo:birthPlace ?prodiBirthPlace ;
                   dbo:politicalAffiliation ?prodiParty .

  # Get labels for the parties
  ?fatherParty rdfs:label ?fatherPartyLabel .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  FILTER (lang(?fatherPartyLabel) = 'en')
  FILTER (lang(?prodiPartyLabel) = 'en')
}
```",4,6,5,2,2,3,3,71,0,0,3,0,0.0,0
645,16,test,"Give me the entity in the residence, that is a country, of James Wilkes Maurice and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find James Wilkes Maurice and his country of residence
  ?m maurice a dbo:Person .
  ?m dbo:residenceCountry ?country .

  # Find Richard Pankhurst's child and their alma mater
  ?p pankhurst a dbo:Person .
  ?child parent dbr:Richard_Pankhurst ;
         dbo:almaMater ?almaMater .

  # Ensure the country of residence is the same as the alma mater
  FILTER (?country = ?almaMater)
  
  BIND(?almaMater AS ?entity)
}
```

This query assumes:
- `maurice` and `pankurst` are properties linking to James Wilkes Maurice and Richard Pankhurst, respectively.
- The child of Richard Pankhurst is linked via a `parent` property.
- The country of residence and alma mater can be directly compared.

Please note that the exact property names (`residenceCountry`, `almaMater`, etc.) might need to be adjusted based on DBpedia's current schema, as these are common but not guaranteed identifiers.",4,5,5,2,2,3,2,20,0,0,1,0,0.0,0
435,22,test,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?town WHERE {
  # Iceland as a country
  dbr:Iceland dbo:countryName ""Iceland""@en .
  
  # Towns in Iceland
  ?town dbo:country dbr:Iceland ;
        a dbo:Settlement ;
        dbo:settlementType dbr:Town .

  OPTIONAL {
    # Time zone connection (assuming UTC for simplicity)
    ?town dbo:timeZone dbr:UTC .
  }
}
```

This query selects towns in Iceland, which is known as the ""Land of fire and ice."" It assumes a simple time zone connection to UTC, which might be relevant given the geographical context.",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,24,test,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić and awardee of the award of Sergei Makovetsky.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Lisa Gavrić's profession
  ?lisa a dbo:Person ;
        foaf:name ""Lisa Gavrić""@en ;
        dbo:profession ?profession .

  # Identify the event that is both an event and societal
  ?event a dbo:Event, dbo:SocietalEvent .

  # Find the award associated with Sergei Makovetsky
  ?award dbo:recipient ?lisa ;
         dbo:awardedBy dbr:Sergei_Makovetsky .

  # Link the commander to the profession, event, and award
  ?commander dbo:profession ?profession ;
             dbo:event ?event ;
             dbo:award ?award .
}
```",4,6,5,2,2,2,3,28,0,0,2,0,0.0,0
488,71,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/property/father> ?v5 . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v7 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v8 . ?v7 <http://dbpedia.org/property/father> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT 
  (dbo.administeredBy AS ?administrationOfFatherInLaw) 
  (dbr.Matsudaira_Sadanobu.dbo.placeOfBirth AS ?deathPlaceOfGrandfather)
  (dbr.Saigō_Takamori.dbo.birthPlace AS ?birthPlaceOfCommander)

WHERE {
  # Administration of Emperor Shōwa
  dbr.Emperor_Shōwa dbo:administeredBy ?administrationOfFatherInLaw .

  # Death place of Matsudaira Sadanobu
  dbr.Matsudaira_Sadanobu dbo.deathPlace ?deathPlaceOfGrandfather .

  # Birth place of Saigō Takamori
  dbr.Saigō_Takamori dbo.birthPlace ?birthPlaceOfCommander .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
485,22,test,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:occupation dbr:Writer .
  ?person dbo:occupation dbr:Poet .
  ?region dbo:timeZone dbr:Western_European_Time .
  ?person dbo:residence ?region .
  ?person dbp:birthPlace ?birthPlace .
}
```

This query does the following:
- Selects individuals (`?person`) who have received the Eric Gregory Award.
- Ensures these individuals are both writers and poets.
- Checks that their residence is in a region observing Western European Time.
- Retrieves the birthplace of such individuals.",4,7,5,2,2,2,3,28,0,0,5,0,0.0,0
617,56,test,"Give me the parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of Laodice IV.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent1 ?parent2 WHERE {
  # Step 1: Commander in Battle of Panium
  ?battle dbr:Battle_of_Panium .
  ?commander dbo:commanderOf ?battle .

  # Step 2: Child of the Commander
  ?child1 dbo:child ?commander .

  # Step 3: Parent of the Child (Step 2)
  ?parent1 dbo:parent ?child1 .

  # Step 4: Children of Seleucus II Callinicus
  dbr:Seleucus_II_Callinicus dbo:child ?child2 .

  # Step 5: Child who is royalty and spouse of Laodice IV
  ?child2 a dbo:Monarch ;
          dbo:spouse dbr:Laodice_IV .

  # Step 6: Child of the Child (Step 5)
  ?grandchild dbo:child ?child2 .

  # Step 7: Parent of the Grandchild (Step 6)
  ?parent2 dbo:parent ?grandchild .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
696,20,test,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils and landmark at elevation of the award of the commander in Battle of Chishui River.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v5 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?landmarkElevation WHERE {
  # Find a member of The Boils
  ?member dbo:associatedBand dbr:The_Boils .
  
  # Get the birthplace of this member
  ?member dbo:birthPlace ?birthPlace .

  # Find an award related to the Battle of Chishui River
  ?award dbo:relatedEvent dbr:Battle_of_Chishui_River .
  
  # Find a landmark associated with this award's elevation
  ?landmark dbo:elevation ?elevation ;
            dbo:associatedAward ?award .

  # Ensure the landmark is at an elevation (optional filter)
  FILTER(?elevation > 0)

}
```",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
959,69,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry
WHERE {
    # Yōichi Masuzoe's residence and alma mater
    dbr:Yōichi_Masuzoe dbo:residence dbr:Tokyo .
    dbr:Waseda_University dbo:country dbr:Japan .
    
    # Takeshi Okada's details
    dbr:Takeshi_Okada dbo:birthYear ""1958""^^xsd:gYear ;
                      dbo:managerOf dbr:1998_Kashima_Antlers_season .
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
251,28,test,"Give me the death place of the author of The Twelve Abbots of Challant and administration of the ruling party, that is a political party and an organisation, in Sicily and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v5 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?deathPlace ?partyAdministration ?warLocation
WHERE {
  # Death place of the author of ""The Twelve Abbots of Challant""
  ?author dbo:title ""The Twelve Abbots of Challant""@en .
  ?author dbo:deathPlace ?deathPlace .

  # Administration location of the ruling party in Sicily
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbo:headquarters ?partyAdministration .

  # Location of the war involving Louis François Félix Musnier
  ?war dbo:participant ?musnier .
  ?musnier rdfs:label ""Louis François Félix Musnier""@en .
  ?war dbo:location ?warLocation .
}
```",6,9,7,2,3,2,3,28,0,0,1,0,0.0,0
747,65,test,"Give me the band of the person born as Tracey Elizabeth McSween and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://dbpedia.org/property/writer> ?v6 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Tracey Elizabeth McSween's band
  OPTIONAL {
    ?person1 dbo:name ""Tracey Elizabeth McSween""@en .
    ?person1 dbo:memberOf ?band1 .
  }

  # Pavlo Khudzik's birth date and corresponding person's band
  OPTIONAL {
    ?person2 dbo:birthday ?birthDate .
    ?person3 dbo:birthday ?birthDate .
    FILTER(?person2 != ?person3)
    ?person3 dbo:memberOf ?band2 .
    FILTER(?person2 = dbr:Pavlo_Khudzik) # Assuming Pavlo Khudzik is a known resource
  }

  # Amba Shepherd's song and its band
  OPTIONAL {
    ?work dbo:author dbr:Amba_Shepherd ;
          rdf:type dbo:Song .
    ?work dbo:performer ?band3 .
  }
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
294,20,test,"Give me the entity in Nashville, Tennessee and resting place of the architect of P. D. Houston Jr. House and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v3 . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))

  # Find the resting place of the architect
  ?architect dbo:deathPlace ?restingPlaceArchitect .

  # Identify Luke Lea and his resting place
  dbr:Luke_Lea dbo:deathPlace ?restingPlaceLukeLea .
  
  # Check if there is a common entity in Nashville, Tennessee
  FILTER(?restingPlaceArchitect = ?restingPlaceLukeLea)
  ?entity dbp:location dbr:Nashville,_Tennessee .
  FILTER(?entity IN (?restingPlaceArchitect, ?restingPlaceLukeLea))
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
339,20,test,Give me the father of the child of the parent of Princess Olga of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
    # Princess Olga of Greece and Denmark
    dbr:Princess_Olga_of_Greece_and_Denmark dbo:parent dbr:Prince_Constantine_of_Greece_and_Denmark .

    # Prince Constantine is the father of Princess Olga
    ?olgaParent dbo:child dbr:Princess_Olga_of_Greece_and_Denmark .
    
    # Frederick VIII's predecessor was Christian IX
    dbr:Christian_IX dbo:predecessor dbr:Frederick_VIII_of_Denmark .

    # Child of Christian IX (e.g., Princess Olga's father, Prince Constantine)
    ?childOfChristianIX dbo:parent dbr:Christian_IX .
    
    # Grandchild of Christian IX
    ?grandChildOfChristianIX dbo:parent ?childOfChristianIX .

    # Find the father of Princess Olga
    ?olgaParent dbo:father ?father .
}
```",6,6,7,3,2,3,2,20,0,0,1,0,0.0,0
142,8,test,Give me the entity in Japan and birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?birthPlace ?japanEntity
WHERE {
  # Find the movie ""Paprika""
  dbr:Paprika dbo:starring ?role .
  
  # Find the character ""Papa"" (Newscaster)
  ?role dbp:characterName ""Papa""@en ;
        dbo:actor ?actor .

  # Get the actor's birthplace
  ?actor dbo:birthPlace ?birthPlace .

  # Check if the birthplace is in Japan or related to an entity in Japan
  OPTIONAL {
    ?birthPlace rdfs:label ?japanEntity .
    FILTER (CONTAINS(LCASE(?japanEntity), ""japan""))
  }
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
820,18,test,Give me the child of the parent of Jason Schwartzman and professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jason Schwartzman and his parent
  ?jason a dbo:Person ;
         foaf:name ""Jason Schwartzman""@en .
  ?parent dbo:child ?jason .

  # Find the child of that parent who is professional in an award related to Scott McCloud
  ?parent dbo:child ?child .
  
  # Identify Scott McCloud and his associated award
  dbr:Scott_McCloud a dbo:Person ;
                    foaf:name ""Scott McCloud""@en .
  ?award dbo:recipient dbr:Scott_McCloud .

  # Ensure the child is professional in that award
  ?child dbo:profession ?award .
}
```",5,5,6,3,2,3,2,20,0,0,1,0,0.0,0
10,23,test,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in the birth name of Sharon Kao.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Find Matt Colton as an artist
  { 
    ?mattColton a dbo:Artist ;
                foaf:name ""Matt Colton""@en .
    
    OPTIONAL { ?mattColton dbo:associatedMusicalArtist ?artist . }
  } UNION

  # Find Sharon Kao by her birth name and associated musical artists
  {
    ?sharonKao a dbo:Person ;
               dbp:birthName ""Sharon Kao""@en .
    
    OPTIONAL { ?sharonKao dbo:associatedMusicalArtist ?artist . }
  }
}
```",4,5,5,2,2,2,3,28,2,2,0,0.5,1.0,0.6666666666666666
391,48,test,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Assuming Elvis Presley is the figure associated with Jackson, Tennessee
  dbr:Elvis_Presley dbo:nativePlace dbr:Jackson,_Tennessee .
  
  # Find a movie that is also a work and television show featuring Roz Ryan
  ?movie dbo:starring dbr:Roz_Ryan ;
         rdf:type dbo:Film ;
         dbo:workExample ?televisionShow .

  # Ensure the actor of this movie is Elvis Presley
  ?actor dbo:actedIn ?movie .
  FILTER(?actor = dbr:Elvis_Presley)

  # Return the native place of the actor
  BIND(dbo:nativePlace(?actor) AS ?native)
}
```",5,8,6,3,2,3,3,71,0,0,1,0,0.0,0
9,69,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of Royal Medal.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v4 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v7 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leader> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v7 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  # Step 1: Identify the organization in Belfast
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .

  # Step 2: Find the politician who is the mayor of this organization
  ?mayor dbo:position ?position ;
         dbo:almaMater ?institution ;
         dbp:residence ?organization .
  
  FILTER(CONTAINS(LCASE(?position), ""mayor""))

  # Step 3: Determine the educational institution (alma mater) of this politician
  ?institution a dbo:EducationalOrganization ;
               dbo:location dbr:Northern_Ireland .

  # Step 4: Ensure this educational institution is also an alma mater of a Royal Medal awardee
  ?awardee dbo:awardReceived dbr:Royal_Medal ;
          dbo:almaMater ?institution .

  # Step 5: Retrieve the nickname of this educational institution
  ?institution dbp:nickname ?nickname .
}
```",8,12,9,3,3,3,3,71,0,0,1,0,0.0,0
232,51,test,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativeOfResidence WHERE {
  # Sean Pertwee's claim to fame (films and military conflicts)
  dbr:Sean_Pertwee dbo:film dbr:Film1 .
  dbr:Sean_Pertwee dbo:militaryConflict dbr:MilitaryConflict1 .

  # Actors of these films or conflicts
  ?actor dbo:actedIn dbr:Film1 ;
         dbo:actedIn dbr:MilitaryConflict1 .

  # Filter actors who are natives of France and politicians/office holders
  ?actor dbp:nationality dbr:France .
  ?actor dbo:occupation dbr:Politician ;
         dbo:officeHolder true .

  # Residence of this actor
  ?actor dbo:residence ?residence .

  # Check if the residence is a settlement and British
  ?residence a dbo:Settlement ;
             dbp:nationality dbr:United_Kingdom .

  # Native of the residence
  ?nativeOfResidence dbo:nativePlace ?residence .
}
```

This query assumes that DBpedia has structured data for these relationships. You may need to adjust property URIs based on actual DBpedia schema and available data.",5,11,6,3,2,3,3,71,0,0,1,0,0.0,0
378,67,test,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v6 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?fame WHERE {
  VALUES ?person { 
    dbr:Thomas_Trigge 
    dbr:Carl_Pontus_Gahn 
  }
  
  ?person dbo:militaryConflict ?conflict .
  OPTIONAL { ?conflict dbo:wikiPageRedirects ?redirect . FILTER(?redirect != """") }
  
  # Find the claim to fame related to military conflicts
  ?fame dbo:relatedTo ?conflict ;
        a dbo:Claim_to_Fame .

  # Ensure the Peninsular War is part of the context
  OPTIONAL {
    ?peninsularWar dbr:Peninsular_War .
    ?peninsularWar dbo:militaryConflict ?conflict .
  }
}
```",7,11,8,3,3,3,3,71,0,0,2,0,0.0,0
659,51,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find wars involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?war dbo:participatingUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  
  # Identify the commander of this regiment during these wars
  ?commander dbo:commanded ?unit .
  ?unit rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .

  # Link Rutger Jan Schimmelpenninck to these wars as a societal event
  ?war dbo:societalEvent dbr:Rutger_Jan_Schimmelpenninck .
  
  FILTER(LANG(?commanderLabel) = 'en')
}
```",5,10,6,3,2,3,3,71,0,0,31,0,0.0,0
959,30,test,Give me the native of Japan and manager of the team of Takashi Sekizuka and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Takashi Sekizuka""@en .
  ?person dbo:nationality dbr:Japan .
  
  OPTIONAL { 
    ?team dbo:manager ?person .
  }
  
  OPTIONAL {
    ?education dbp:almaMater dbr:University_of_Tsukuba .
    ?education dbo:student ?person .
  }

  FILTER EXISTS { ?team dbo:manager ?person . } .
  FILTER EXISTS { ?education dbo:student ?person . }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
421,28,test,Give me the band member of the awardee of [[#Awards and nominations and native of the birthplace of Samir Bekrić and person born as the birth name of Dino Merlin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v5 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  # Step 1: Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:nativePlace ?birthplace .

  # Step 2: Find a person born in that place
  ?person dbo:birthPlace dbr:?birthplace .

  # Step 3: Find Dino Merlin's birth name
  dbr:Dino_Merlin foaf:name ?merlinBirthName .

  # Step 4: Find a person with that birth name
  ?person foaf:name ?merlinBirthName .

  # Step 5: Find awards or nominations for this person
  ?award dbo:recipient ?person .
  
  # Step 6: Find a band member of the awardee
  ?bandMember dbo:member ?person .
}
```",6,6,7,2,3,2,3,28,0,0,1,0,0.0,0
378,18,test,"Give me the war of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Joaquín Blake.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war ?claimToFame
WHERE {
  # Carl Pontus Gahn's war involvement
  OPTIONAL {
    VALUES ?person { dbr:C._P._Gahn }
    ?person dbo:memberOf ?organization .
    ?organization dbo:member ?individual .
    ?individual dbo:occupation ?war .
    BIND(?war AS ?gahnWar)
  }

  # Louis des Balbes de Berton de Crillon's claim to fame
  OPTIONAL {
    VALUES ?person { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
    ?person dbo:claimToFame ?claimToFame .
  }

  # Joaquín Blake's war involvement
  OPTIONAL {
    VALUES ?person { dbr:Joaquín_Blake_y_Jordán }
    ?person dbo:memberOf ?organization .
    ?organization dbo:member ?individual .
    ?individual dbo:occupation ?war .
    BIND(?war AS ?blakeWar)
  }

  # Combine results
  OPTIONAL {
    VALUES ?person { dbr:C._P._Gahn dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbr:Joaquín_Blake_y_Jordán }
    ?person dbo:name ?name .
    BIND(CONCAT(""Name: "", STR(?name)) AS ?info)
  }

  # Output
  VALUES ?outputPerson { dbr:C._P._Gahn dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbr:Joaquín_Blake_y_Jordán }
  OPTIONAL {
    ?outputPerson dbo:name ?name .
    BIND(CONCAT(""Name: "", STR(?name)) AS ?personInfo)
  }

  FILTER (?person = ?outputPerson)

  # Return results
  VALUES ?resultType { ""Gahn's War"" ""Crillon's Claim to Fame"" ""Blake's War"" }
  OPTIONAL {
    ?outputPerson dbo:name ?name .
    BIND(CONCAT(""Name: "", STR(?name)) AS ?personInfo)
  }

  FILTER (?gahnWar != """" || ?claimToFame != """" || ?blakeWar != """")
}
ORDER BY ?resultType
LIMIT 3",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
767,50,test,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to the alter ego of Black Hood.,"SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo
WHERE {
  # George Kilbon Nash's alma mater
  OPTIONAL {
    dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
  }
  
  # Black Hood's alter ego
  OPTIONAL {
    dbr:Black_Hood dbo:alterEgo ?alterEgo .
  }
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
328,68,test,"Give me the commander in the force of the person decedent at Budapest and leader of the office, that is a government agency, of Joseph Stalin and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v5 . ?result <http://dbpedia.org/property/awards> ?v4 . ?v5 <http://dbpedia.org/property/awards> ?v4 . <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v7 <http://dbpedia.org/ontology/commander> ?v0 . ?v7 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  ?office dbo:leader ?person ;
          dbo:headOfState dbr:Joseph_Stalin .
  ?award dbo:recipient ?person ;
         dbo:name ""Commander in the Volcano and Ryukyu Islands campaign"" .
}
```

This query attempts to find a person who:
- Died in Budapest.
- Was a leader of an office or agency under Joseph Stalin.
- Received a specific award related to the Volcano and Ryukyu Islands campaigns.",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
92,51,test,"Give me the band of the person born as the birth name of Joseph Michael and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find the band associated with Joe Elliott (Joseph Michael)
  ?person1 a dbo:MusicalArtist ;
           foaf:name ""Joe Elliott"" ;
           dbo:birthName ""Joseph Michael Elliott"" .
  OPTIONAL { ?person1 dbo:associatedBand ?band1 . }

  # Find the band associated with Jimi Hendrix (Jim Sheppard)
  ?person2 a dbo:MusicalArtist ;
           foaf:name ""Jimi Hendrix"" ;
           dbo:birthName ""James Marshall 'Jimi' Hendrix"" .
  OPTIONAL { ?person2 dbo:associatedBand ?band2 . }
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
427,52,test,Give me the reference to the name of the party of Michele Pinto and party of the father of Lamberto Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyName WHERE {
  VALUES ?person { 
    dbr:Michele_Pinto 
    dbr/Giovanni_Andreotti 
    dbr:Romano_Prodi
  }
  
  OPTIONAL {
    ?person dbo:politicalParty ?party .
    ?party rdfs:label ?partyName .
    FILTER (lang(?partyName) = 'en')
  }
}
ORDER BY ?person",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
184,65,test,"Give me the parent of the child of Archduke Joseph Francis of Austria and parent of the native of Budapest and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/property/father> ?v6 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v6 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonEntity WHERE {
  # Archduke Joseph Francis of Austria's child and that child's parent
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  ?parent1 dbo:child ?child1 .

  # Native of Budapest and their parent
  ?native dbo:nativePlace dbr:Budapest .
  ?parent2 dbo:child ?native .

  # Archduke Ladislaus Philipp of Austria's parent (who is royalty), that parent's child, and that child's child
  ?royaltyParent dbo:child dbr:Archduke_Ladislaus_Philipp_of_Austria .
  FILTER EXISTS { ?royaltyParent a dbo:RoyalFamily . }
  ?parent3 dbo:child ?royaltyParent .
  ?child2 dbo:child ?parent3 .
  ?grandChild dbo:child ?child2 .

  # Find the common entity
  VALUES ?commonEntity {
    ?parent1
    ?parent2
    ?grandChild
  }

  FILTER (?commonEntity = ?parent1 || ?commonEntity = ?parent2 || ?commonEntity = ?grandChild)
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
9,64,test,"Give me the alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v3 <http://dbpedia.org/property/leader> ?v2 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v3 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayorAlmaMater ?institutionNickname WHERE {
  # Step 1: Identify the organization in Belfast
  ?organization a dbo:City ;
                dbo:location dbr:Belfast .

  # Step 2: Find its mayor who is also a politician
  ?mayor dbo:positionHeld ?organization ;
         a dbo:Politician .

  # Step 3: Determine the alma mater of this mayor
  ?mayor dbp:almaMater ?mayorAlmaMater .

  # Step 4: Identify an educational institution in Northern Ireland known by a nickname and as the alma mater of Allen Hill (scientist)
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbp:nickname ?institutionNickname .
  
  ?allenHill a dbo:Scientist ;
             dbp:name ""Allen Hill""^^xsd:string ;
             dbp:almaMater ?institution .

  FILTER(?mayorAlmaMater = ?institution)
}
```",7,11,8,3,3,3,3,71,0,0,1,0,0.0,0
487,20,test,"Give me the country of the administration of the person born on 1955-01-26 and administration of the person born, that is a soccer player, as the birth name of Phil Scott.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/birthName> ?v4 . ?v1 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/property/governor> ?v5 . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v4 . ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://dbpedia.org/ontology/country> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1 ?country1 ?person2 ?country2 WHERE {
  # Find the person born on 1955-01-26
  ?person1 dbo:birthday ""1955-01-26""^^xsd:date .
  
  # Get the country of administration for this person
  ?person1 dbo:administrativeOffice ?office1 .
  ?office1 dbo:country ?country1 .

  # Find a soccer player with birth name Phil Scott
  ?person2 dbp:sports ""Association football""@en ;
           dbp:birthName ""Phil Scott"" .

  # Get the country of administration for this person
  ?person2 dbo:administrativeOffice ?office2 .
  ?office2 dbo:country ?country2 .
}
```",6,7,7,3,2,3,2,20,0,0,1,0,0.0,0
54,61,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v5 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Thihapate of Mohnyin and his child who is an office holder and royalty
    ?thihapate a dbo:Person ;
               foaf:name ""Thihapate of Mohnyin"" .
    
    ?child1 dbo:parent ?thihapate ;
            a dbo:Royalty, dbo:OfficeHolder .

    # Thado Minsaw of Prome and his parent
    ?thadoMinsaw a dbo:Person ;
                 foaf:name ""Thado Minsaw of Prome"" .
    
    ?parent dbr:Prome dbo:child ?thadoMinsaw .

    # Child of the parent of Thado Minsaw of Prome
    ?child2 dbo:parent ?parent .

    # Predecessor of the child who is an office holder and royalty
    ?predecessor dbo:succeededBy ?child1 .
}
```",6,8,7,3,2,3,3,71,0,0,1,0,0.0,0
92,38,test,"Give me the band of the person born as Joseph Michael Furney and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?associatedArtist WHERE {
  # Find Joe Satriani's band
  OPTIONAL {
    dbr:Joe_Satriani dbo:memberOf ?band .
  }
  
  # Find Jim Sheppard's associated artist
  OPTIONAL {
    dbr:Jim_Sheppard dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",4,5,5,2,2,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
827,18,test,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?charlesFather .
  
  ?child dbo:parent dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach ;
         a dbo:Monarch .

  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?charlesAlexanderParent .
  
  ?royaltyChild dbo:parent ?charlesAlexanderParent ;
                a dbo:Monarch .

  FILTER(?child = ?royaltyChild)

  BIND(?charlesFather AS ?father)
}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
435,21,test,Give me the work of the author of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?authorName ?gmtRegion ?adminTerritory
WHERE {
  # Find the author of ""Iceland""
  dbr:Iceland dbo:author ?author .
  ?author foaf:name ?authorName .

  OPTIONAL {
    ?author dbo:work ?work .
  }

  # Find regions using GMT
  ?region dbo:timeZone dbr:Greenwich_Mean_Time ;
          rdfs:label ?gmtRegion .
  
  # Find territories administered from Reykjavík
  ?territory dbo:administrativeCenter dbr:Reykjavík ;
             rdfs:label ?adminTerritory .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
547,64,test,Give me the resting place of the child of the child of William Haliburton and resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v3 <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildRestingPlace ?awardeeRestingPlace ?simonCadellRestingPlace WHERE {
  # Resting place of the child of the child of William Haliburton
  {
    ?williamHaliburton dbo:spouse ?spouse .
    ?williamHaliburton dbo:child ?child1 .
    ?child1 dbo:child ?grandchild .
    ?grandchild dbo:deathPlace ?grandchildRestingPlace .
    FILTER (str(?williamHaliburton) = ""William_Haliburton"")
  }

  # Resting place of the awardee of the award of Gerald Graham
  {
    ?geraldGraham dbo:award ?award .
    ?awardee dbo:receivedAward ?award .
    ?awardee dbo:deathPlace ?awardeeRestingPlace .
    FILTER (str(?geraldGraham) = ""Gerald_Graham"")
  }

  # Resting place of Simon Cadell
  {
    dbr:Simon_Cadell dbo:deathPlace ?simonCadellRestingPlace .
  }
}",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
701,47,test,Give me the parent of the child of the child of Seti I and parent of the child of Nefertari.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?commonAncestor WHERE {
  # Seti I's lineage
  ?setiI dbo:child ?child1 .
  ?child1 dbo:child ?grandChild .
  ?grandChild dbo:parent ?parentOfGrandChild .

  # Nefertari's lineage
  ?nefertari dbo:child ?child2 .
  ?child2 dbo:parent ?parentOfChild2 .

  # Find the common ancestor or relationship
  ?commonAncestor rdfs:subClassOf+ ?parentOfGrandChild ;
                  rdfs:subClassOf+ ?parentOfChild2 .

  FILTER(?setiI = <http://dbpedia.org/resource/Seti_I>)
  FILTER(?nefertari = <http://dbpedia.org/resource/Nefertari>)
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
161,54,test,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForceBiscay ?predecessor ?militaryForcePredecessor
WHERE {
  # Biscay Campaign and Francisco Franco's involvement
  ?biscayCampaign dbo:type dbr:Military_conflict ;
                  dbo:participatedInMilitaryConflict dbr:Francisco_Franco .
  
  ?franco dbo:commanderOf ?militaryForceBiscay .

  # Indalecio Prieto's predecessor and their military involvement
  ?prieto dbo:predecessor ?predecessor .
  ?predecessor dbo:type dbr:Person ;
               dbo:militaryConflict ?militaryConflictPredecessor .
  
  ?militaryConflictPredecessor dbo:participatedInMilitaryConflict ?predecessor .
  ?predecessor dbo:commanderOf ?militaryForcePredecessor .

  # Ensure the events are societal and military
  ?biscayCampaign dbo:type dbr:Societal_event ;
                  dbo:type dbr:Military_conflict .
  
  ?militaryConflictPredecessor dbo:type dbr:Societal_event ;
                               dbo:type dbr:Military_conflict .
}
```",6,11,7,3,3,3,3,71,0,0,3,0,0.0,0
701,46,test,Give me the parent of the child of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent1 ?parent2 WHERE {
  # Ramesses II's child and its parent
  ?child1 dbo:father dbr:Ramesses_II .
  ?child1 dbo:mother ?mother1 .
  BIND(dbr:Ramesses_II AS ?parent1) .

  # Amun-her-khepeshef's spouse and their child
  ?spouse dbo:spouse dbr:Amun-her-khepeshef .
  ?child2 dbo:father ?spouse ;
         dbo:mother ?mother2 .
  BIND(?spouse AS ?parent2) .

}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
232,52,test,"Give me the native of London and child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v5 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?nativeOfLondon ?child
WHERE {
  # Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?jonBirthName .

  # Find Sean Pertwee and his claim to fame (film and military conflict)
  dbr:Sean_Pertwee dbo:claimToFame ?claimToFame .
  FILTER (
    EXISTS { ?claimToFame rdf:type dbo:Film . }
    && EXISTS { ?claimToFame rdf:type dbo:MilitaryConflict . }
  )

  # Find the native of London who is a child of Jon Pertwee
  ?nativeOfLondon foaf:birthPlace dbr:London .
  ?child dbo:parent ?jonBirthName .
  ?nativeOfLondon dbo:child ?child .

}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
801,37,test,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
SELECT ?artist ?work WHERE {
  ?producer a dbo:MusicProducer ;
            foaf:name ""Chris Taylor (music producer)"" .
  
  ?producer dbo:produced ?work .
  ?work a dbo:Songs .

  ?work dbo:musicalArtist ?artist .
  ?artist a dbo:MusicalArtist ;
          dbo:profession ""Rapper"" .
}
```",4,8,5,3,2,3,3,71,0,0,2,0,0.0,0
778,17,test,"Give me the entity in United States and author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/author> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?v3 <http://dbpedia.org/property/author> ?v0 . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?software ?author WHERE {
  # Find Bill Joy, the author of pushd and popd
  dbr:Bill_Joy dbo:nationality dbr:United_States ;
               dbo:occupation dbr:Computer_programmer .

  # Find software authored by Bill Joy in the United States
  ?software a dbo:Software ;
            dbo:country dbr:United_States ;
            dbo:author dbr:Bill_Joy .
  
  BIND(dbr:Bill_Joy AS ?author)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
303,24,test,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in the country, that is a country, of El Valle de Antón.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Arnulfo Arias Madrid"" ;
          dbo:nationality dbr:Panama .
  
  OPTIONAL { ?person dbo:birthPlace dbr:El_Valle_de_Antón . }
  
  ?person dbo:politicalParty ?party .
}
```

This query does the following:
- It selects individuals who are politicians (`dbo:Politician`) and have the name ""Arnulfo Arias Madrid"".
- It checks if they have a nationality of Panama (`dbr:Panama`).
- It optionally matches their birthplace to El Valle de Antón.
- Finally, it retrieves the political party associated with this person.",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
378,59,test,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and war of the person born as the birth name of Carl Pontus Gahn.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v5 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Find wars related to Peninsular War
  VALUES (?peninsularWar) { dbr:Peninsular_War }
  
  # Find military conflicts involving the Peninsular War
  ?relatedWar dbo:partOf ?peninsularWar .
  
  # Find commanders of these wars
  ?relatedWar dbo:commander ?commander .

  # Find Carl Pontus Gahn's birth name and his involvement in wars
  dbr:Carl_Pontus_Gahn dbo:birthName ?birthName .
  OPTIONAL { 
    ?warCommander dbo:birthName ?birthName .
    ?warCommander dbo:commanderOf ?war .
  }

  # Filter to find the war where both conditions are met
  FILTER(?relatedWar = ?war)
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
232,71,test,"Give me the child of the person born as the birth name of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v7 <http://dbpedia.org/property/residence> ?v8 . ?result <http://dbpedia.org/ontology/birthPlace> ?v8 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v8 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/knownFor> ?v5 . ?v7 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v4 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child
WHERE {
  # Step 1: Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Step 2: Find a person with claim to fame as both a film and a military conflict
  ?person dbp:claimToFame ?film .
  ?person dbp:claimToFame ?conflict .
  FILTER (isLiteral(?film) && isLiteral(?conflict)) .

  # Step 3: This person's residence must be a British settlement
  ?person dbo:nativePlace ?residence .
  ?residence dbo:country dbr:United_Kingdom ;
             rdf:type dbo:Settlement .

  # Step 4: Find a politician and office holder from France, whose native place is the above settlement
  ?politician dbo:nationality dbr:France ;
              dbo:officeHolder ?office .
  ?politician dbo:nativePlace ?residence .

  # Final step: Get the child of the person with Jon Pertwee's birth name
  ?birthName dbo:child ?child .
}
```",9,15,10,3,3,3,3,71,0,0,1,0,0.0,0
356,19,test,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960) and player in the successor of 2014 Sacramento Republic FC season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v4 <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/manager> ?v4 . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Step 1: Identify Gary Williams (footballer, born 1960)
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is an English settlement
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:England .

  # Step 3: Find someone native to this place who is both a soccer player and manager
  ?person dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation ?occupation .
  
  FILTER (?occupation IN (dbr:Soccer_player, dbr:Soccer_manager))

  # Step 4: Identify the team of this person in the season following 2014 for Sacramento Republic FC
  ?person dbp:team ?team .
  ?team dbp:season ""2015""^^xsd:gYear .
}
```",5,9,6,3,2,3,2,20,0,0,1,0,0.0,0
528,53,test,"Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v3 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?narcisoBirthDate ?orozimboWar ?chileMilitaryEvent WHERE {
  # Narciso Campero Leyes
  VALUES ?narciso { dbr:Narciso_Campero_Leyes }
  
  ?narciso dbo:birthDate ?narcisoBirthDate .
  
  OPTIONAL {
    ?narciso dbo:militaryForce ?militaryForce .
    ?militaryForce dbo:country dbr:Chile .
  }

  # Orozimbo Barbosa
  VALUES ?orozimbo { dbr:Orozimbo_Barbosa }
  
  ?orozimbo dbo:participatedInWar ?war .
  ?war dbp:name ?orozimboWar .

  # Military force in Chile related to societal events
  ?event dbo:location dbr:Chile ;
         a dbo:MilitaryConflict ;
         dbo:militaryForce ?militaryForce .
  
  OPTIONAL {
    ?militaryForce dbo:country dbr:Chile .
  }
}
```",6,7,7,3,3,3,3,71,0,0,2,0,0.0,0
9,38,test,Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person dbo:awardReceived dbr:Royal_Medal .
  ?person foaf:nick dbr:Queen's_University_Belfast_Nickname . # Replace with actual nickname resource if known
  ?person dbo:almaMater ?almaMater .
}
```

**Explanation**:
- `dbo:awardReceived` is used to find individuals who have received the Royal Medal.
- `foaf:nick` is a placeholder for finding a nickname associated with Queen's University Belfast. You would need to replace `dbr:Queen's_University_Belfast_Nickname` with the actual DBpedia resource if known.
- `dbo:almaMater` retrieves the alma mater of the identified person.

This query assumes that there are direct links in DBpedia for these relationships, which might require adjustments based on available data.",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
487,19,test,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott and country of the administration of Patricia McCoy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> ?result . <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?result <http://dbpedia.org/property/governor> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?administrationCountry
WHERE {
  # Find Phil Scott's birth name and confirm he is a soccer player
  ?philScott dbo:birthName ?birthName .
  ?philScott rdf:type dbr:Soccer_player .

  # Find Patricia McCoy's administration and its country
  ?patriciaMcCoy dbo:positionHeld ?administration .
  ?administration dbp:country ?administrationCountry .
}
```",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
404,56,test,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child
WHERE {
  # Step 1: Identify Prince Ernest Augustus of Hanover (born 1914)
  ?prince a dbo:Person ;
          foaf:name ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?birthDate .
  
  FILTER(YEAR(?birthDate) = 1914)

  # Step 2: Find his parent
  ?parent dbo:child ?prince .

  # Step 3: Find the spouse of this parent (Princess Victoria Louise of Prussia)
  ?spouse a dbo:Person ;
          foaf:name ""Victoria Louise, Princess Royal""@en ;
          dbo:spouse ?parent .

  # Step 4: Determine the father of Princess Victoria Louise's spouse
  ?father dbo:child ?spouse .

  # Step 5: Find the child of this father
  ?child dbo:child ?father .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
251,20,test,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battleLocation ?partyAdministration ?deathPlace
WHERE {
  # Location of the Battle of Marengo
  dbr:Battle_of_Marengo dbo:location ?battleLocation .

  # Administration of the ruling party in Sicily (assuming a political party and organization)
  OPTIONAL {
    SELECT ?partyAdministration WHERE {
      ?party dbo:country dbr:Sicily .
      ?party dbo:politicalOrganization ?organization .
      ?organization dbo:administration ?partyAdministration .
    }
  }

  # Death place of Laura Mancinelli
  dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,27,test,Give me the force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?force WHERE {
  # Find Narciso Campero's resource and birth name
  VALUES ?campero { dbr:Narciso_Campero }
  
  ?campero dbo:birthName ?birthName .
  
  # Look for related entities or concepts linked to ""force""
  OPTIONAL {
    ?relatedEntity rdfs:label ?force .
    FILTER(CONTAINS(LCASE(?force), ""force"") || CONTAINS(LCASE(?force), ""power""))
    
    # Example of linking through political or military roles
    ?campero dbo:positionHeld ?relatedEntity .
  }
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
328,58,test,"Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v5 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v5 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Awardee of Order of Suvorov
  ?person dbo:awardReceived dbr:Order_of_Suvorov .

  # Commander in the force of Ferenc Szálasi
  ?commanderRole a dbo:MilitaryCommand ;
                 dbo:commandedBy dbr:Ferenc_Szálasi .
  ?person dbo:militaryCommand ?commanderRole .

  # Leader of an office, which is a government agency
  ?office a dbo:GovernmentAgency ;
          dbo:leader ?person .

  # Leader of Gustav Jonson
  ?gustavJonsonRole a dbo:MilitaryCommand ;
                    dbo:commandedBy dbr:Gustav_Jonson .
  ?person dbo:militaryCommand ?gustavJonsonRole .
}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
404,30,test,"Give me the spouse of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Princess Victoria Louise of Prussia
    dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

    # Ensure the spouse is a child of the father of Ernest Augustus, Duke of Brunswick
    ?father dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:child ?spouse .
    
    # Ensure the spouse is a parent of Prince Ernest Augustus of Hanover (born 1914)
    ?spouse dbo:parent dbr:Prince_Ernest_Augustus_of_Hanover_(1914) .

    # Filter to ensure correct relationships
    FILTER(?father != ?spouse)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
54,48,test,"Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v3 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personA WHERE {
  # Thinkhaya of Pagan and his child (Person A)
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  ?thinkhaya dbo:child ?personA .

  # Person A's child (Person B, grandchild of Thinkhaya)
  ?personA dbo:child ?personB .

  # Thihapate of Mohnyin and his child
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en .
  ?thihapate dbo:child ?relatedPerson .

  # Ensure Person A is an office holder and royalty related to Thihapate's child
  ?personA a dbo:Monarch ;
           dbo:officeHolder true .
  ?relatedPerson foaf:name ?name .
  FILTER(?personA = ?relatedPerson)
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
392,24,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?province ?region WHERE {
  # Sebastiano Bianchetti's residence
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti"" .
  
  ?residence dbo:resident ?person ;
             dbo:settlement dbr:Italy ;
             dbo:administrativeTerritory ?province .

  # Aguilar de Segarra's time zone and sports event
  ?place a dbo:Settlement ;
         foaf:name ""Aguilar de Segarra"" .
  
  ?place dbp:timeZone ?timezone .
  
  ?event a dbo:SportsEvent ;
         dbo:locationTimezone ?timezone .
  
  ?timezone dbo:administrativeRegion ?region .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
314,23,test,"Give me the person deceased at the headquarter of House of Sombrerete and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace ?profession WHERE {
  ?event dbo:eventLocation dbr:Headquarters_of_the_House_of_Sombrerete .
  ?event dbo:societalEventOf dbr:Lisa_Gavrić .
  ?person dbo:deathPlace ?deathPlace .
  FILTER(?deathPlace = dbr:Headquarters_of_the_House_of_Sombrerete) .
  ?person dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(STR(?profession)), ""commander"")) .
}
```

This query attempts to find a person who died at the headquarters of the House of Sombrerete, was a commander by profession, and is linked to an event related to Lisa Gavrić.",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,51,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person dbo:awardReceived dbr:Royal_Medal .
  ?person rdfs:label ?nickname .
  FILTER(CONTAINS(LCASE(?nickname), ""nickname"")) .
  
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbo:isOrganisation true ;
               dbo:alumni ?person .

  ?person dbo:almaMater ?almaMater .
}
```

This query does the following:
- Selects individuals who have received the Royal Medal.
- Filters for those with a known nickname.
- Identifies an institution in Northern Ireland that is both an organization and educational institution.
- Retrieves the alma mater of such a person.",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
617,58,test,Give me the child of Antiochus III the Great and spouse of the child of Antiochus III the Great and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v5 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great and his child
  dbr:Antiochus_III_the_Great dbo:child ?child .

  # Child's spouse
  ?child dbo:spouse ?spouse .

  # Spouse's parent who is a commander in Battle of Panium
  ?spouse dbo:parent ?parent .
  
  # Ensure the parent was a commander in the Battle of Panium
  ?parent dbo:occupation dbr:Battle_of_Panium_commander .
}
```",6,6,7,3,3,3,3,71,0,0,2,0,0.0,0
767,65,test,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of the administration of the reference to George Kilbon Nash.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> ?v4 . ?v6 <http://dbpedia.org/property/governor> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  # Find the settlement of Green
  ?greenSettlement dbo:type dbr:Settlement ;
                  dbo:country dbr:Green .

  # Find the alter ego of Black Hood
  ?blackHoodAlterEgo dbo:alterEgoOf dbr:Black_Hood .

  # Find the alma mater related to George Kilbon Nash's administration
  ?nashAdministration dbo:almaMater ?almaMater .
  ?nashAdministration dbo:administrator dbr:George_Kilbon_Nash .

  # Combine these conditions
  ?entity dbo:administration ?greenSettlement ;
          dbo:alterEgoOf ?blackHoodAlterEgo ;
          dbo:almaMater ?almaMater .
}
```",7,8,8,3,3,3,3,71,0,0,1,0,0.0,0
182,22,test,Give me the war of the author of 2019 Sri Lanka Easter bombings and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?authorWar ?gotabhayaWar WHERE {
  # Assuming NTJ leader or related figure is identified as a DBpedia resource
  OPTIONAL {
    ?leader dbo:nationality dbr:Sri_Lanka .
    ?leader dbo:occupation dbr/Terrorist_Organization_Leader . # Hypothetical class for illustration
    ?event dbo:perpetrator ?leader .
    ?event dbo:subject dbr/Sri_Lankan_Easter_bombings_2019 .
    ?event dbo:relatedEvent ?war .
    ?war rdf:type dbo:War .
    BIND(?war AS ?authorWar)
  }

  # Gotabhaya Rajapaksa's involvement in the Sri Lankan Civil War
  dbr/Gotabhaya_Rajapaksa dbo:nationality dbr:Sri_Lanka ;
    dbo:occupation dbr/Defense_Minister_of_Sri_Lanka .
  ?war rdf:type dbo:War ;
    dbo:participatedIn dbr/Sri_Lankan_Civil_War .
  BIND(?war AS ?gotabhayaWar)
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,46,test,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find wars that are both events and military conflicts
  ?war a dbo:MilitaryConflict ;
      dbo:event .

  # Find the commander of the war
  ?war dbo:commander ?commander .

  # Ensure the commander is linked to the 1st Light Cavalry Lancers Regiment
  ?regiment dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) ;
           dbo:commander ?commander .

  # Find office holders from the Kingdom of Ireland and their forces
  ?officeHolder a dbo:OfficeHolder ;
                dbo:country dbr:Kingdom_of_Ireland .
  
  # Ensure the commander is linked to an office holder's force
  ?force dbo:commander ?commander ;
         dbo:officeHolder ?officeHolder .

}
```",5,8,6,3,2,3,3,71,0,0,71,0,0.0,0
485,20,test,"Give me the entity in Nottinghamshire and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?entity ?birthPlace WHERE {
  ?entity dbo:award <http://dbpedia.org/resource/Eric_Gregory_Award> .
  ?entity dbo:birthPlace ?birthPlace .
  ?entity dbo:country <http://dbpedia.org/resource/United_Kingdom> .
  ?entity rdf:type <http://dbpedia.org/class/yago/Writers100036068> .
  ?entity rdf:type <http://dbpedia.org/class/yago/Poets100036069> .
  ?birthPlace dbo:location <http://dbpedia.org/resource/Nottinghamshire> .
}
```",4,6,5,2,3,2,3,28,0,0,1,0,0.0,0
528,68,test,"Give me the war of the commander in the work of --01-09 and force of the person born as Narciso Campero Leyes and war of the military force of the entity, that is a societal event, in Chile.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v7 . ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v5 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v7 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?force WHERE {
  # Assuming --01-09 refers to a specific work or author, replace with actual resource if known
  OPTIONAL { 
    ?work dbo:author dbr:Narciso_Campero_Leyes .
    ?work dbo:subject ?relatedEntity .
  }
  
  ?commander foaf:name ""Narciso Campero Leyes"" ;
             dbo:militaryCommand ?force .

  ?war dbo:location dbr:Chile ;
       dbo:participatingMilitaryForce ?force ;
       a dbo:SocietalEvent .

  OPTIONAL { 
    ?relatedEntity dbo:country dbr:Chile .
  }
}
```

This query attempts to:

- Identify works associated with Narciso Campero Leyes.
- Find military forces commanded by him.
- Locate wars in Chile involving these forces, categorized as societal events.

Please replace `--01-09` with the correct resource if known. This query assumes that DBpedia has relevant data for these entities and relationships.",8,9,9,3,3,3,3,71,0,0,2,0,0.0,0
547,34,test,Give me the resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?alanRestingPlace ?greatGrandChildRestingPlace WHERE {
  # Alan Cunningham's final resting place
  ?alanCunningham a dbo:Person ;
                 foaf:name ""Alan Cunningham""@en .
  ?alanCunningham dbo:finalRestingPlace ?alanRestingPlace .

  # William Haliburton's great-grandchild and their final resting place
  ?williamHaliburton a dbo:Person ;
                    foaf:name ""William Haliburton""@en .
  
  ?child1 dbo:childOf ?williamHaliburton .
  ?child2 dbo:childOf ?child1 .
  ?greatGrandChild dbo:childOf ?child2 .

  ?greatGrandChild dbo:finalRestingPlace ?greatGrandChildRestingPlace .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,58,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and alma mater of the administration of George K. Nash and entity in Baden-Württemberg.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  # Find the fictional character associated with Matthew Burland
  ?person dbo:alias ?alterEgo .
  ?person rdfs:label ""Matthew Burland""@en .

  # Ensure the alter ego is a fictional character
  ?alterEgo rdf:type dbo:FictionalCharacter .

  # Find the alma mater of George K. Nash
  ?nash dbo:almaMater ?institution .
  ?nash rdfs:label ""George K. Nash""@en .

  # Ensure the alter ego is associated with an entity in Baden-Württemberg
  ?alterEgo dbo:location ?entity .
  ?entity dbo:country dbr:Germany ;
          dbo:stateOrProvince dbr:Baden-Württemberg .
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
392,20,test,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v3 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  # Aguilar de Segarra
  OPTIONAL { 
    dbr:Aguilar_de_Segarra dbo:timeZone ?tz1 .
    ?tz1 dbo:location ?loc1 .
    ?loc1 dbo:country ?country1 .
    ?country1 dbo:administrativeRegion ?region .
  }

  # Entity in Italy (assuming a general city or location)
  OPTIONAL { 
    ?italyEntity dbo:timeZone ?tz2 .
    ?tz2 dbo:location ?loc2 .
    ?loc2 dbo:country dbr:Italy .
    ?loc2 dbo:administrativeRegion ?region .
  }

  # Province of Schio
  OPTIONAL { 
    dbr:Schio dbo:timeZone ?tz3 .
    ?tz3 dbo:location ?loc3 .
    ?loc3 dbo:country ?country3 .
    ?country3 dbo:administrativeRegion ?region .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,55,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer) and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v5 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?individual ?restingPlace WHERE {
  # Knight Grand Cross of the Order of St Michael and St George
  { 
    ?individual dbo:honours dbr:Order_of_St_Michael_and_St_George.
    ?individual dbo:award ""Knight Grand Cross"".
    OPTIONAL { ?individual dbo:deathPlace ?restingPlace. }
  } UNION

  # Child of James Burton (property developer)
  {
    ?child dbo:parent dbr:James_Burton_(property_developer).
    OPTIONAL { ?child dbo:deathPlace ?restingPlace. }
  } UNION

  # Actor of ""Enemy at the Door""
  {
    ?actor dbo:film dbr:Enemy_at_the_Door.
    OPTIONAL { ?actor dbo:deathPlace ?restingPlace. }
  }

  FILTER(?restingPlace != """")
}
```",6,6,7,2,3,3,3,71,0,0,1,0,0.0,0
232,48,test,"Give me the child of the person born as the birth name of Jon Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v2 <http://dbpedia.org/property/birthName> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?birthName .

  # Find Sylvie Bermann's residence that is a settlement in Britain
  dbr:Sylvie_Bermann dbp:residence ?residence .
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Find the person with Jon Pertwee's birth name who resides in Sylvie Bermann's location
  ?person dbo:birthName ?birthName ;
          dbp:residence ?residence .

  # Find the child of that person
  ?child dbo:parent ?person .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
488,39,test,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako and death place of Tokugawa Ieyasu.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Find Tokugawa Masako and her spouse
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en .
  
  ?spouse dbo:spouse ?masako ;
          dbo:title ?title .

  FILTER(CONTAINS(LCASE(str(?title)), ""royalty""))

  # Find the father of the royal spouse
  ?father dbo:child ?spouse .

  # Get the administration of the father
  OPTIONAL { ?administration dbo:ruledBy ?father . }

  # Find Tokugawa Ieyasu and his death place
  dbr:Tokugawa_Ieyasu a dbo:Person ;
                      dbo:deathPlace ?deathPlace .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
9,71,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v4 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v7 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v7 <http://dbpedia.org/property/nickname> ?v8 . ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v1 <http://dbpedia.org/property/leader> ?v2 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ?v8 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?organisation ?nickname WHERE {
  ?organisation a dbo:EducationalInstitution ;
                dbo:location dbr:Northern_Ireland ;
                rdfs:label ?name .
  
  OPTIONAL { ?organisation dbo:nickname ?nickname . }
  
  ?mayor dbo:almaMater ?organisation ;
         dbo:position dbr:Belfast_Mayorship .

  ?awardee dbo:almaMater ?organisation ;
           dbo:awardReceived dbr:Royal_Medals .
}
```

This query does the following:
- Selects organizations that are educational institutions located in Northern Ireland.
- Checks if these organizations have a nickname.
- Ensures the organization is an alma mater for both the mayor of Belfast and an awardee of the Royal Medals.",9,14,10,3,3,3,3,71,0,0,1,0,0.0,0
427,49,test,"Give me the reference to the name of Italian People's Party (1994) and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyReference ?birthName ?partyOfPerson
WHERE {
  # Find the reference for Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) dbo:wikiPageRedirects ?partyReference .

  # Find Romano Prodi's birth name and party association
  dbr:Romano_Prodi dbo:birthName ?birthName .
  OPTIONAL { dbr:Romano_Prodi dbo:memberOfParty ?partyOfPerson }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
747,63,test,"Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v3 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v6 . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v4 <http://dbpedia.org/ontology/birthDate> ?v3 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v4 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?band3 WHERE {
  # Tracey Elizabeth McSween's band
  OPTIONAL {
    ?person1 dbo:birthName ""Tracey Elizabeth McSween""@en .
    ?person1 dbo:musicalBand ?band1 .
  }

  # Writer of Apollo (Hardwell song)
  OPTIONAL {
    ?song dbr:Apollo_(Hardwell_song) .
    ?song dbo:lyricist ?writer .
    ?writer dbo:musicalBand ?band2 .
  }

  # Athlete and soccer player from Zolotonosha
  OPTIONAL {
    ?decedent dbo:dateOfBirth ?birthDate .
    ?athlete dbo:dateOfBirth ?birthDate ;
             dbo:sport dbr:Soccer ;
             dbo:placeOfBirth dbr:Zolotonosha .
    ?athlete dbo:musicalBand ?band3 .
  }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
328,62,test,Give me the commander in the force of the person decedent at Budapest and awardee of the award of the commander in Volcano and Ryukyu Islands campaign and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v3 . ?v6 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/property/awards> ?v3 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v6 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:commanderOf dbr:Budapest_Offensive_(1945) .
  ?person dbo:award dbr:Order_of_the_Red_Banner .
  ?person dbo:leader dbr:People's_Commissariat_for_Defence .

  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
528,37,test,Give me the war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force WHERE {
  # Find Narciso Campero
  ?person rdfs:label ""Narciso Campero""@en .
  
  # Find wars he was involved in
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?warLabel .

  # Filter for specific war if needed (e.g., War of the Pacific)
  FILTER(CONTAINS(LCASE(?warLabel), ""war of the pacific""))

  # Find forces he commanded
  OPTIONAL {
    ?person dbo:commanded ?force .
  }
}
```

This query attempts to find military conflicts involving Narciso Campero and any forces he might have commanded. Note that DBpedia may not have detailed records for every historical figure or event, so the results depend on available data.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
378,71,test,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v7 <http://dbpedia.org/ontology/commander> ?v8 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v5 <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v7 . ?v8 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?war2 WHERE {
  # Carl Pontus Gahn
  dbr:C._P._Gahn dbo:birthName ?birthName .
  
  # Find wars associated with Carl Pontus Gahn
  ?person dbo:birthName ?birthName ;
          dbo:occupation ""Military personnel"" ;
          dbo:participatedIn ?war1 .

  # Thomas Trigge
  dbr:Thomas_Trigge dbo:claimToFame ?commanderRole .
  
  # Find wars associated with Thomas Trigge as a commander
  ?person2 dbo:claimToFame ?commanderRole ;
           dbo:participatedIn ?war2 .

  # Peninsular War related conflict
  dbr:Peninsular_War dbo:relatedMilitaryConflict ?relatedWar .
  
  FILTER(?war1 != ?relatedWar && ?war2 != ?relatedWar)
}
```",9,13,10,3,3,3,3,71,0,0,2,0,0.0,0
528,38,test,Give me the war of the commander in Battle of La Rinconada de Ate and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?battleCommander ?camperoForce WHERE {
  # Find the commander in the Battle of La Rinconada de Ate
  ?battle dbo:name ""Battle of La Rinconada de Ate""@en .
  OPTIONAL { ?battle dbo:commander ?battleCommander . }
  
  # Find the force commanded by Narciso Campero Leyes
  ?person dbp:birthName ""Narciso Campero Leyes"" .
  OPTIONAL { ?person dbo:commanded ?camperoForce . }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
404,45,test,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia and spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Identify Prince Ernest Augustus of Hanover (born 1914)
  ?prince a dbo:Person ;
          dbo:birthYear ""1914""^^xsd:gYear ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en .
  
  # Step 2: Find his parent
  ?parent dbo:child ?prince .

  # Step 3: Identify Princess Victoria Louise of Prussia and her spouse
  ?vl a dbo:Person ;
      rdfs:label ""Princess Victoria Louise of Prussia""@en ;
      dbo:spouse ?spouse .
  
  # Step 4: Find the father of her spouse
  ?father dbo:child ?spouse .

  # Step 5: Find the child of this father who is also the spouse of Princess Victoria Louise
  ?child dbo:parent ?father ;
         dbo:spouse ?vl .

  # Ensure the parent found in step 2 matches the child from step 5
  FILTER (?parent = ?child)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
659,36,test,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in German campaign of 1813.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find Rutger Jan Schimmelpenninck's reference
  dbr:Rutger_Jan_Schimmelpenninck a dbo:Person .

  # Identify the German Campaign of 1813 and its commander
  ?campaign dbo:type dbr:Military_conflict ;
            dbo:commander ?commander .
  
  FILTER(?campaign = dbr:German_Campaign_of_1813) .

  # Check if Rutger Jan Schimmelpenninck was involved as a commander
  OPTIONAL { ?commander rdfs:label ""Rutger Jan Schimmelpenninck""@en } .

  # Find the military force associated with this campaign
  ?campaign dbo:militaryForce ?militaryForce .
}",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
488,22,test,Give me the administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPeriod ?birthPlace
WHERE {
  # Administration period of Emperor Ōgimachi (father of Go-Mizunoo)
  dbr:Emperor_Ōgimachi dbo:reign ?administrationPeriod .

  # Birthplace of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,36,test,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbo:almaMater dbr:John_Alderdice ;
               dbp:nickname ?nickname .
}
```

This query does the following:
- It selects entities that are of type `EducationalInstitution`.
- It filters these institutions to those located in Northern Ireland.
- It further narrows down to those associated with John Alderdice as an alma mater.
- Finally, it retrieves the nickname of such an institution.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,61,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/capital> ?v3 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent WHERE {
  # Step 1: Find the capital of Khemis Miliana District
  ?district a dbo:District ;
           dbo:capital ?capital .
  
  FILTER (str(?district) = ""Khemis_Miliana_District"") .

  # Ensure the capital is a settlement
  ?capital a dbo:Settlement .

  # Step 2: Find a person who died at this capital
  ?personDecedent dbo:placeOfDeath ?capital ;
                  a dbo:Person .

  # Step 3: The person must have been a commander in a war
  ?war a dbo:MilitaryConflict, dbo:Event .
  ?personDecedent dbo:militaryCommanderOf ?war .

  # Step 4: Find the commander of the Battle of Verdun
  ?battleVerdun dbr:Battle_of_Verdun ;
                dbo:militaryCommander ?verdunCommander .

  # Ensure the person is also a commander in the Battle of Verdun
  FILTER (?personDecedent = ?verdunCommander)
}
```",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
54,26,test,Give me the parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent
WHERE {
  # Step 1: Identify Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Person ;
               rdfs:label ""Thado Minsaw""@en .

  # Step 2: Find the parent of Thado Minsaw
  ?thadoMinsaw dbo:childOf ?parent .

  # Step 3: Identify the child of this parent
  ?parent dbo:childOf ?grandparent .
  
  # Step 4: Determine the parent of this child (which is the grandparent)
  ?parent dbp:hasChild ?child .
  ?child dbo:childOf ?grandparent .

  FILTER(LANG(?thadoMinsawLabel) = 'en')
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
959,71,test,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v8 <http://dbpedia.org/ontology/manager> ?v7 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v4 . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v8 <http://dbpedia.org/ontology/manager> ?result . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v7 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v4 <http://dbpedia.org/property/residence> ?v5 . ?v7 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?politician dbo:office ""Member of the House of Councillors""@en;
              dbo:election ""2010 Japanese House of Councillors election""@en.
  
  # Step 2: Determine their place of birth and native residence (a country)
  ?politician dbp:birthYear ""1958""^^xsd:gYear;
              dbp:nationality ?country.

  # Step 3: Find the manager of the team managed by the sports manager of the 1998 Kashima Antlers season
  ?sportsManager dbo:managedTeam dbr:Kashima_Antlers_1998_season.
  ?teamManager dbo:managerOf ?team;
               dbp:manages ?sportsManager.

  # Step 4: Locate the alma mater that fits all specified criteria
  ?politician dbo:almaMater ?almaMater.
  
  FILTER EXISTS { ?almaMater a dbo:University. }
  FILTER EXISTS { ?almaMater a dbo:EducationalOrganization. }
  FILTER EXISTS { ?almaMater dbp:country dbr:Japan. }

}",9,16,10,3,3,3,3,71,0,0,3,0,0.0,0
959,68,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/property/residence> ?v6 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader dbo:office ""Member of the House of Councillors""@en;
          dbo:election ""2010 Japanese House of Councillors election""@en;
          a dbo:Politician.

  # Step 2: Find the country of residence of this leader
  ?leader dbp:country dbr:Japan.
  
  # Step 3: Locate a person born in 1958 and native to Japan
  ?person dbo:birthYear ""1958""^^xsd:gYear;
          dbo:nationality dbr:Japanese;
          dbo:almaMater ?university.

  # Step 4: Determine their alma mater, which is a Japanese university
  ?university a dbo:University;
              dbp:country dbr:Japan.
  
  # Step 5: Find Takashi Sekizuka's team manager from this university
  ?teamMember dbo:name ""Takashi Sekizuka""@en;
              dbo:almaMater ?university.
  ?manager dbo:employee ?teamMember;
           dbo:worksFor ?university.
}
```",8,14,9,3,3,3,3,71,0,0,3,0,0.0,0
232,38,test,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sean Pertwee's claim to fame (film or military conflict)
  ?fame a dbo:Film ; 
        dbo:starring dbr:Sean_Pertwee .
  UNION
  ?fame a dbo:MilitaryConflict ;
        dbo:participant dbr:Sean_Pertwee .

  # Sylvie Bermann's residence (British settlement)
  ?residence a dbo:Settlement ;
             dbo:nativeOf dbr:Sylvie_Bermann ;
             dbo:country dbr:United_Kingdom .

  # Actor of the fame
  ?fame dbo:starring ?actor .
}
```",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
378,21,test,"Give me the war of the person born as Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person1 ?war1 ?person2 ?fame2 WHERE {
  VALUES ?person1 { dbr:Pontus_Wiktorin } # Adjust to Mannerheim if needed
  OPTIONAL {
    ?person1 dbo:participatedInMilitaryConflict ?war1 .
    ?war1 a dbo:MilitaryConflict .
  }
  
  VALUES ?person2 { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
  OPTIONAL {
    ?person2 dbo:famousFor ?fame2 .
    ?fame2 a dbo:Battle .
  }
}
```",3,3,4,2,2,3,3,71,0,2,2,0.0,0.0,0
54,65,test,"Give me the child of the father of Soe Min Wimala Dewi and parent of the child of the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/child> ?result . ?v6 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v4 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?result WHERE {
  # Step 1: Find the father of Soe Min Wimala Dewi
  ?soeMinWimalaDewi dbo:childOf ?fatherSoeMinWimalaDewi .
  
  # Step 2: Find the parent of Thado Minsaw of Prome and their child
  ?thadoMinsaw dbp:parent ?parentThadoMinsaw .
  ?parentThadoMinsaw dbo:childOf ?grandParentThadoMinsaw .
  ?grandParentThadoMinsaw dbo:child ?childGrandParentThadoMinsaw .

  # Step 3: Find the child of Thihapate of Mohnyin who is an office holder and royalty
  ?thihapate dbp:child ?childThihapate .
  ?childThihapate a dbo:OfficeHolder ;
                  a dbo:Royalty .
  
  # Step 4: Find the predecessor of that child
  ?predecessor dbo:succeededBy ?childThihapate .

  # Step 5: Find the parent of the child from step 2
  ?parentChildGrandParent dbp:parent ?result .

  # Ensure the result is an office holder and royalty
  ?result a dbo:OfficeHolder ;
          a dbo:Royalty .
  
  FILTER(?fatherSoeMinWimalaDewi = ?predecessor)
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
645,18,test,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of the child of Richard Pankhurst.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the commander in Battle of Diamond Rock
  ?battle dbo:commander ?commander .
  
  FILTER (str(?battle) = ""Battle_of_Diamond_Rock"")

  # Find Richard Pankhurst's child and their alma mater
  ?pankhurst dbr:Richard_Pankhurst ;
            dbo:child ?child .

  ?child dbo:almaMater ?almaMater .

  # Check if the commander's residence is a country
  ?commander dbo:residenceCountry ?country .
  
  FILTER (str(?almaMater) = str(?entity))
}
```

This query assumes that:
- The `Battle_of_Diamond_Rock` resource exists in DBpedia.
- Richard Pankhurst has a child listed with an alma mater.
- The commander's residence is directly linked to a country.",5,6,6,3,2,3,2,20,0,0,1,0,0.0,0
767,64,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Dustin Lynch as the writer of ""Where It's At""
  ?album dbo:artist dbr:Dustin_Lynch .
  FILTER(STRSTARTS(LCASE(?album), LCASE(""where it's at (dustin lynch album)"")))

  # Alma mater of Carl L. Nippert
  ?nippert dbo:almaMater ?university .

  # Alter ego or fictional character of Matthew Burland
  ?burland dbo:fictionalCharacter ?character .

  # Entity in the administration, that is a settlement
  ?entity dbo:administration ?admin .
  FILTER EXISTS { ?admin a dbo:Settlement }

  # Combine conditions to find the entity
  VALUES ?person { dbr:Dustin_Lynch dbr:Carl_L._Nippert dbr:Matthew_Burland }
  OPTIONAL { ?person = ?album . }
  OPTIONAL { ?person = ?nippert . }
  OPTIONAL { ?person = ?burland . }

  # Ensure the entity is related to all conditions
  FILTER(?entity IN (?admin))
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
528,55,test,Give me the force of the person born as Narciso Campero Leyes and war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?v3 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v5 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v5 . ?v3 <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?pisaguaWar ?rinconadaCommander WHERE {
  # Find Narciso Campero Leyes
  ?person a dbo:Person ;
          foaf:name ""Narciso Campero Leyes"" .

  # Get the military force in the Battle of Pisagua
  OPTIONAL {
    ?battle dbr:Battle_of_Pisagua ;
           dbo:commander ?person ;
           dbo:participatingMilitaryUnit ?force .
    ?war dbo:conflict ?battle .
    BIND(?war AS ?pisaguaWar)
  }

  # Get the commander in the Battle of La Rinconada de Ate
  OPTIONAL {
    ?rinconadaBattle dbr:Battle_of_La_Rinconada_de_Ate ;
                     dbo:commander ?rinconadaCommander .
  }
}
```",6,6,7,2,3,3,3,71,0,0,2,0,0.0,0
427,67,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v6 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?party ?alumnusFatherParty
WHERE {
  # Romano Prodi's birth name and party
  dbr:Romano_Prodi dbo:birthName ?birthName .
  OPTIONAL { dbr:Romano_Prodi dbo:politicalParty ?party . }

  # Alumnus of MIT whose father is related to Partito Popolare Italiano
  ?alumnus dbp:almaMater dbr:Massachusetts_Institute_of_Technology ;
           dbo:father ?father .
  OPTIONAL { ?father dbo:memberOf dbr:Partito_Popolare_Italiano . }
  OPTIONAL { ?father dbo:politicalParty ?alumnusFatherParty . }

  FILTER(?party != """" || ?alumnusFatherParty != """")
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
177,8,test,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik and entity in South Korea.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/location> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?organisation ?headquarters WHERE {
  # Find Joo Don-sik's DBpedia resource
  ?person rdfs:label ""Joo Don-sik""@en .
  
  # Identify organizations associated with him
  ?association dbo:agent ?person ;
               dbo:organization ?organisation .

  # Get the headquarters of these organizations
  ?organisation dbo:headquarters ?headquarters .

  # Ensure the organization is in South Korea
  ?organisation dbp:country dbr:South_Korea .
  
  FILTER(LANG(?person) = 'en')
}
```",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
328,54,test,"Give me the commander in the force of the person decedent at Budapest and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v3 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  ?person dbo:leaderOf dbr:People's_Commissariat_of_Defense_of_the_Soviet_Union .
  ?person dbo:commanderInForce dbr:Budapest .
  ?person rdfs:label ?commander .
  FILTER (LANG(?commander) = 'en')
}
```

This query assumes the following:
- The person in question has a relationship with Bruce Fraser, 1st Baron Fraser of North Cape through an award (`dbo:awardedBy`).
- They were the leader of the People's Commissariat of Defense of the Soviet Union (`dbo:leaderOf`).
- They commanded forces at Budapest (`dbo:commanderInForce`).

The query selects the label of this person, filtering for English language labels.",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
547,56,test,Give me the resting place of the awardee of the award of Gerald Graham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardeeRestingPlace ?simonCadellRestingPlace ?childRestingPlace WHERE {
  # Gerald Graham's award awardee
  OPTIONAL {
    ?awardAwardedTo dbo:recipient dbr:Gerald_Graham .
    ?awardAwardedTo dbo:recipient ?awardee .
    ?awardee dbo:deathPlace ?awardeeDeathPlace .
    BIND(?awardeeDeathPlace AS ?awardeeRestingPlace)
  }

  # Simon Cadell's resting place
  dbr:Simon_Cadell dbo:deathPlace ?simonCadellRestingPlace .

  # Child of James Burton (property developer) and their resting place
  OPTIONAL {
    ?child dbo:parent dbr:James_Burton .
    ?child rdf:type dbo:Property_Developer .
    ?child dbo:deathPlace ?childDeathPlace .
    BIND(?childDeathPlace AS ?childRestingPlace)
  }
}
```",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
783,16,test,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng and associated musical artist of the band member of Ofori Amponsah.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember
WHERE {
  # Priscilla Opoku-Kwarteng as an artist and musical artist
  dbr:Priscilla_Opoku-Kwarteng a dbo:Artist ;
    dbo:musicalArtist dbr:Priscilla_Opoku-Kwarteng .

  # Find her band members
  ?bandMember dbo:member dbr:Priscilla_Opoku-Kwarteng .

  # Ofori Amponsah as an artist and musical artist
  dbr:Ofori_Amponsah a dbo:Artist ;
    dbo:musicalArtist dbr:Ofori_Amponsah .

  # Find his associated musical artists
  ?associatedArtist dbo:associatedMusicalArtist dbr:Ofori_Amponsah .

  # Check for overlap between Priscilla's band members and Ofori's associated artists
  FILTER (?bandMember = ?associatedArtist)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
827,19,test,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859) and father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Step 1: Find Maria Pavlovna's children who are royalty
  ?mariaPavlovnaChild dbo:spouse ?parent .
  ?mariaPavlovnaChild a dbo:Monarch .

  # Step 2: Find the child of one of these children (grandchildren) who is royalty
  ?childOfChild dbo:parent ?mariaPavlovnaChild .
  ?childOfChild a dbo:Monarch .
  
  # Assign this grandchild to a variable
  BIND(?childOfChild AS ?grandchild)

  # Step 3: Find Princess Pauline's spouse who is royalty
  ?pauline dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach .
  ?paulineSpouse dbo:spouse ?pauline .
  ?paulineSpouse a dbo:Monarch .

  # Step 4: Find the father of a royal child of this spouse
  ?childOfPaulineSpouse dbo:parent ?paulineSpouse .
  ?childOfPaulineSpouse a dbo:Monarch .
  
  # The father of this child is what we are looking for
  ?grandchild dbo:parent ?paulineSpouse .
}
```",5,8,6,3,2,3,2,20,0,0,1,0,0.0,0
747,46,test,"Give me the band of the writer of Apollo (Hardwell song) and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  # Step 1: Find the writer of ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo (Hardwell song)""@en .

  # Get the birth date of the writer
  OPTIONAL { ?writer dbp:birthday ?birthDate . }

  # Step 2: Find a person born on the same date who is an athlete and soccer player from Zolotonosha
  ?person dbo:birthDate ?birthDate ;
          dbo:sport dbr:Soccer ;
          dbo:nationality dbr:Ukraine ;
          dbp:hometown dbr:Zolotonosha .

  # Get the band of this person if they are a musician
  OPTIONAL { ?person dbo:band ?band . }
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
701,61,test,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of the child of the child of Seti I.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v1 <http://dbpedia.org/property/father> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v5 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify the commander in Battle of Perire
  ?commander dbo:battleFoughtIn dbp:Battle_of_Perire .
  
  # Step 2: Find the father of the commander
  ?father dbo:child ?commander .

  # Step 3: Determine the spouse of the father who is a royalty
  ?spouse dbo:spouse ?father ;
          rdf:type dbo:Monarch .

  # Step 4 & 5: Identify Seti I and his grandchild
  ?setiI dbp:name ""Seti I"" .
  ?child dbo:parent ?setiI .
  ?grandchild dbo:parent ?child .

  # Step 6: Ensure the spouse is a parent of the grandchild
  ?spouse dbo:child ?grandchild .
}
```",6,7,7,3,2,3,3,71,0,0,2,0,0.0,0
44,9,test,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche and band member of the band of John Pettibone.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Find members of Queensrÿche
  ?queensMember dbo:bandMemberOf dbr:Queensr%C3%BDche .
  
  # Find the band associated with John Pettibone
  ?pettiboneBand dbo:leadSinger dbr:John_Pettibone .

  # Ensure the member is also part of John Pettibone's band
  ?queensMember dbo:bandMemberOf ?pettiboneBand .
  
  # Return the common member
  ?member rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
378,48,test,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v3 . ?v2 <http://dbpedia.org/property/birthName> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?fame WHERE {
  VALUES (?name ?birthName) {
    (dbr:George_Augustus_Eliott ""Carl Pontus Gahn"")
  }
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person rdfs:label ?name FILTER(LANG(?name) = 'en') . }

  OPTIONAL { 
    ?person dbo:notableWork ?fame .
    FILTER (LANG(?fame) = 'en')
  }
  
  FILTER (?person != dbr:Unknown)
}
```

This query attempts to find the notable works or achievements of George Augustus Eliott and Svante Arrhenius by matching their names or birth names.",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
996,17,test,Give me the force of Dagobert Sigmund von Wurmser and entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://dbpedia.org/property/awards> ?v3 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?award ?nativeOfPalestine WHERE {
  # Dagobert Sigmund von Wurmser and his forces
  dbr:Dagobert_Sigmund_von_Wurmser dbo:commander ?force .
  
  # Awards received by Dagobert Sigmund von Wurmser
  dbr:Dagobert_Sigmund_von_Wurmser dbo:honorReceived ?award .

  # Entities native to the region of Palestine
  ?nativeOfPalestine dbo:nationality dbr:State_of_Palestine ;
                     dbo:birthPlace ?place .
  
  FILTER (regex(str(?place), ""Palestine"", ""i""))
}
```

This query attempts to retrieve:
- The forces commanded by Dagobert Sigmund von Wurmser.
- Any awards he received.
- Entities native to the region of Palestine.",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
9,67,test,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of the awardee of the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v6 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://dbpedia.org/property/nickname> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v6 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?nickname WHERE {
  # Find John Alderdice's alma mater
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
  
  # Ensure the institution is in Northern Ireland and has a nickname
  ?almaMatter dbo:location dbr:Northern_Ireland ;
             dbp:nickname ?nickname .

  # Find an awardee of Royal Medals who also attended this alma mater
  ?awardee dbo:award dbr:Royal_Medals .
  ?awardee dbo:almaMater ?almaMatter .
}
```",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
838,18,test,"Give me the band member of the band, that is a group, of YU Grupa and band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedBand ?artist ?artistBand
WHERE {
  # Step 1: Find a band member of YU Grupa
  ?member dbo:memberOf dbr:YU_Grupa .
  
  # Step 2: Find the band associated with this band member
  ?member dbo:band dbr:Associated_Band .

  # Step 3: Check if this band has an artist who is also a musical artist
  ?artist dbo:associatedBand dbr:Associated_Band ;
          rdf:type dbo:MusicalArtist .
  
  # Step 4: Find the band of this artist that includes Žika Jelić
  ?artistBand dbo:memberOf dbr:Associated_Artist_Band ;
              dbo:bandMember dbr:Žika_Jelić .
}
```

This query assumes:
- `dbr:YU_Grupa` is the DBpedia resource for YU Grupa.
- The relationships and types are correctly modeled in DBpedia.

You may need to adjust the specific resource identifiers (`dbr:Associated_Band`, `dbr:Associated_Artist_Band`) based on actual data available in DBpedia.",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
427,18,test,Give me the party of Giulio Andreotti and party of Romano Prodi and reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","```sparql
SELECT ?andreottiPartyLabel ?prodiPartyLabel WHERE {
  # Giulio Andreotti's party affiliation
  wd:Q12345 wdt:P102 ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  # Romano Prodi's party affiliation
  wd:Q67890 wdt:P102 ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Reference to Partito Popolare Italiano
  OPTIONAL {
    ?party wdt:P31 wd:Q123456 . # P31 is the instance of property, assuming Q123456 is the DBpedia ID for political party
    ?party rdfs:label ""Partito Popolare Italiano""@it .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,49,test,"Give me the reference to the alter ego of the persona, that is a fictional character, of Matthew Burland and entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/state> ?v2 . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement WHERE {
  # Find Matthew Burland's alter ego (fictional character)
  ?person rdfs:label ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?alterEgo .

  # Find an entity in the administration of Green
  ?greenEntity rdfs:label ""Green""@en .
  ?greenEntity dbo:settlement ?settlement .
}
```

This query assumes that Matthew Burland has a fictional character associated with him and that there is a settlement related to ""Green"" within its administrative context. Adjustments might be needed based on the actual data available in DBpedia.",5,7,6,3,2,3,3,71,0,0,7,0,0.0,0
488,47,test,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceOfCommanderInBoshinWar ?deathPlaceOfPoliticianFather
WHERE {
  # Matsudaira Tadamasa's father (an office holder)
  ?matsudairaTadamasa a dbo:Person ;
                     foaf:parent ?fatherOfficeHolder .

  # Father of the office holder (a politician)
  ?fatherOfficeHolder foaf:parent ?politicianFather .

  # Commander in Boshin War
  ?commanderInBoshinWar a dbo:Person ;
                        dbo:birthPlace ?birthPlaceOfCommanderInBoshinWar ;
                        dbo:occupation dbr:Boshin_War_commander .

  # Politician father's death place
  ?politicianFather dbo:deathPlace ?deathPlaceOfPoliticianFather .
  
  # Link Matsudaira Tadamasa to the specific resource
  ?matsudairaTadamasa dbr:Matsudaira_Tadamasa .
}
```",5,7,6,3,2,3,3,71,0,0,1,0,0.0,0
492,71,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District and person decedent at the work of the author of French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/property/author> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?v5 . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v4 . ?v7 <http://dbpedia.org/ontology/capital> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v8 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v7 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?personDecedent WHERE {
  # Find the capital of Khemis Miliana District
  ?district a dbo:District ;
            dbo:capital ?capital .
  FILTER (str(?district) = ""Khemis_Miliana_District"") .

  # Ensure the capital is a settlement
  ?capital a dbo:Settlement .

  # Person decedent at the capital
  ?personDecedent dbo:deathPlace ?capital ;
                  dbo:occupation dbr:Author ;
                  dbo:nationality dbr:Francois_Algeria .

  # Find an author related to French Algeria
  ?author a dbo:Writer ;
          dbo:nationality dbr:Francois_Algeria ;
          dbo:work ?work .
  
  # Ensure the person is also associated with this work
  ?personDecedent dbo:work ?work .

  # Find a commander in the Battle of Verdun
  ?commanderInVerdun dbo:commanderOf dbr:Battle_of_Verdun ;
                     a dbo:MilitaryPerson .

  # Ensure the person is also involved in another military conflict
  ?personDecedent dbo:commanderOf ?militaryConflict ;
                  a dbo:MilitaryPerson .
  
  # Link the commander from Verdun to the person decedent
  FILTER (?commanderInVerdun = ?personDecedent)
}
```",9,12,10,3,3,3,3,71,0,0,1,0,0.0,0
328,43,test,Give me the commander in the force of the person decedent at Budapest and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v4 <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:awardedOrder dbr:Order_of_Suvorov .
  ?commander dbo:leaderOf dbr:People's_Commissariat_for_Defence_of_the_Union_of_Soviet_Socialist_Republics .
  ?commander dbo:commandedMilitaryOperation dbr:Budapest_offensive_(1944–45) .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
378,43,test,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in the reference, that is a military conflict, to Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?role
WHERE {
  # Louis des Balbes de Berton de Crillon's involvement in military conflicts
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:commanderOf ?conflict .
    ?conflict a dbo:MilitaryConflict ;
              rdfs:label ?conflictLabel .
    FILTER(CONTAINS(LCASE(?conflictLabel), ""peninsular war""))
  }
  
  # Carl Pontus Gahn's involvement in military conflicts
  OPTIONAL {
    dbr:Carl_Pontus_Gahn dbo:commanderOf ?otherConflict .
    ?otherConflict a dbo:MilitaryConflict ;
                   rdfs:label ?otherConflictLabel .
  }

  # Return the conflict and role for Louis des Balbes de Berton de Crillon
  BIND(""Commander"" AS ?role)
}
ORDER BY ?conflict
```",5,6,6,3,3,3,3,71,0,1,2,0.0,0.0,0
365,9,test,"Give me the reference to the real name of The Blasters and band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?realName WHERE {
  # The Blasters band resource
  VALUES ?band { dbr:The_Blasters }
  
  # Find members of the band who are also artists and musicians
  ?member dbo:memberOfBand ?band .
  ?member a dbo:MusicalArtist ;
          (dbo:occupation|dbp:profession) dbp:Vocalist ;
          (dbo:occupation|dbp:profession) dbp:Musician ;
          (dbo:occupation|dbp:profession) dbp:SingerSongwriter .

  # Get the real name of each member
  ?member foaf:name ?realName .
}
```",4,6,5,2,2,2,2,9,0,0,1,0,0.0,0
617,20,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of the child, that is a royalty, of the parent of Mlada (abbess).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v5 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v2 <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v4 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v4 <http://dbpedia.org/property/father> ?v5 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parentOfFather WHERE {
  # Richeza of Poland's father
  ?richeza dbo:father ?father .
  FILTER (str(?richeza) = ""Richeza_of_Poland"")

  # Father's parent (grandfather)
  ?father dbo:parent ?grandfather .

  # Ensure grandfather is royalty
  ?grandfather rdf:type/rdfs:subClassOf* dbo:Monarch .

  # Reference royalty related to Richeza through lineage
  ?reference rdf:type/rdfs:subClassOf* dbo:Monarch .
  ?reference dbo:child ?greatGrandchild .
  
  # Ensure great-grandchild is royalty
  ?greatGrandchild rdf:type/rdfs:subClassOf* dbo:Monarch .

  # Mlada's parent
  ?mlada dbo:parent ?parentMlada .
  FILTER (str(?mlada) = ""Mlada_(abbess)"")

  # Parent's parent (grandparent)
  ?parentMlada dbo:parent ?grandparentMlada .

  # Ensure grandparent is royalty
  ?grandparentMlada rdf:type/rdfs:subClassOf* dbo:Monarch .

  # Find the parent of the father that matches the criteria
  ?grandfather rdfs:label ?parentOfFather .
}
ORDER BY ?parentOfFather",6,9,7,3,2,3,2,20,0,0,1,0,0.0,0
392,23,test,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v2 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?province ?country
WHERE {
  # Find Sebastiano Bianchetti's residence
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@it .
  
  ?person dbo:residence ?settlement .

  # Ensure the settlement is in Italy and is a settlement type
  ?settlement a dbo:Settlement ;
              dbp:country dbr:Italy ;
              dbo:administrativeTerritory ?province .

  # Find the country associated with Central European Time
  ?timeZoneRegion dbo:timezone dbr:Central_European_Time ;
                  dbo:country ?country .
}
```",4,7,5,2,2,2,3,28,0,0,1,0,0.0,0
767,33,test,Give me the entity in Baden-Württemberg and alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInBadenWurttemberg ?almaMater WHERE {
  # Find George Kilbon Nash's resource
  ?nash a dbo:Person ;
        foaf:name ""George Kilbon Nash""@en .

  # Find the entity in Baden-Württemberg associated with him
  OPTIONAL { 
    ?nash dbo:affiliation ?entityInBadenWurttemberg .
    ?entityInBadenWurttemberg dbo:location dbr:Baden-Württemberg .
  }

  # Find his alma mater
  OPTIONAL {
    ?nash dbo:almaMater ?almaMater .
  }
}
```",4,4,5,3,2,3,3,71,0,1,1,0.0,0.0,0
838,19,test,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?otherBand WHERE {
  # YU Grupa as an organization
  dbr:YU_Grupa a dbo:MusicalGroup .

  # Band members of YU Grupa who are artists and musical artists
  ?member dbo:memberOf dbr:YU_Grupa .
  ?member a dbo:Artist ;
          a dbo:MusicalArtist .

  # Other bands these members belong to
  ?member dbo:memberOf ?otherBand .
  ?otherBand a dbo:MusicalGroup .
}
```",5,10,6,3,2,3,2,20,0,0,5,0,0.0,0
492,27,test,"Give me the person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  # Find the capital of Khemis Miliana District
  ?capital dbo:country dbr:Algeria .
  ?capital rdfs:label ""Khemis Miliana""@en .

  # Find a person who died in that capital
  ?person dbo:placeOfBirth ?deathPlace .
  ?deathPlace rdfs:label ?capitalLabel .
  FILTER (lang(?capitalLabel) = 'en' && ?capitalLabel = ""Khemis Miliana"")
}
```

This query does the following:
- Identifies Khemis Miliana as a settlement in Algeria.
- Searches for any person whose place of death is labeled as Khemis Miliana.",3,4,4,3,1,3,3,71,0,0,122,0,0.0,0
328,34,test,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?award WHERE {
  ?leader dbo:position ""People's Commissar for Military and Naval Affairs""@en .
  OPTIONAL { ?leader dbo:honoraryTitle ?award . }
  FILTER(CONTAINS(LCASE(?award), ""volcano"") || CONTAINS(LCASE(?award), ""ryukyu""))
}
```

This query attempts to find individuals who held the position of People's Commissar for Military and Naval Affairs and have an honorary title or award that mentions ""Volcano"" or ""Ryukyu"". Note that this is a hypothetical scenario, as historical records may not directly link Soviet leaders with these specific campaigns.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
391,58,test,"Give me the native of Compton, California and actor of the claim to fame, that is a work, of Michael Ballhaus and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?v1 . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v5 . ?v5 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find works of Michael Ballhaus
  ?work dbo:director dbr:Michael_Ballhaus .
  
  # Find actors in those works
  ?work dbo:starring ?actor .

  # Filter actors native to Compton, California
  ?actor dbp:nativePlace dbr:Compton,_California .

  # Ensure the work is both a movie and a television show
  ?work rdf:type dbo:Film .
  OPTIONAL { ?work rdf:type dbo:TelevisionShow . }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
617,22,test,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?antiochusIV dbo:father dbr:Antiochus_III_the_Great .
  ?antiochusIV dbo:mother ?mother .
  ?antiochusIV dbo:spouse ?spouse .
  ?antiochusIV dbo:child ?child .
  
  OPTIONAL { ?antiochusIV dbo:parent ?parent . }
}
```

This query selects the parent of Antiochus IV, who is a child of Antiochus III the Great.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
142,9,test,Give me the birthplace of the actor of Papa wa Newscaster and entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v3 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find the actor who played ""Papa wa Newscaster""
  ?actor dbo:role ?role .
  ?role dbo:title dbr:Papa_wa_Newscaster .
  
  # Ensure the actor is associated with Japan Standard Time
  ?actor dbo:country dbr:Japan .

  # Get the birthplace of the actor
  ?actor dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
915,20,test,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v4 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://dbpedia.org/property/father> ?result . ?result <http://dbpedia.org/ontology/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v5 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v1 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?resident WHERE {
  # Step 1: Identify Lizzie Spaulding
  ?lizzie a dbo:FictionalCharacter ;
          foaf:name ""Lizzie Spaulding"" ;
          dbo:genre dbr:SoapOpera .

  # Step 2: Find Lizzie's Parent
  ?parent dbo:child ?lizzie ;
          a dbo:FictionalCharacter ;
          dbo:genre dbr:SoapOpera .

  # Step 3: Identify the Child of this Parent
  ?child dbo:parent ?parent ;
         a dbo:FictionalCharacter ;
         dbo:genre dbr:SoapOpera .

  # Step 4: Director of Pipe Dreams (1976 film)
  ?film dbo:director ?director .
  ?film foaf:name ""Pipe Dreams"" ;
        dbo:releaseYear ""1976""^^xsd:gYear .

  # Step 5: Birthplace of the Director
  ?director dbo:birthPlace ?birthplace .
  ?birthplace a dbo:Settlement .

  # Step 6: Resident of the Birthplace
  ?resident dbo:residence ?birthplace .
}
```",6,11,7,3,2,3,2,20,0,0,1,0,0.0,0
328,67,test,"Give me the awardee of Order of Suvorov and leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in the force of the person decedent at Budapest.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v6 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v6 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:award [dbo:name ""Order of Suvorov""] .
  
  ?office dbo:type dbr:Government_agency ;
          dbo:leader ?person .

  ?gustavJonson dbo:positionTitle ?title ;
                dbo:leader ?person .
  FILTER (CONTAINS(LCASE(?title), ""politician"") || CONTAINS(LCASE(?title), ""office holder""))

  ?commander dbo:commandedForceAtBudapest ?force .
  ?commander dbo:decedent ?person .
}
```

This query attempts to find a person who satisfies all the conditions mentioned in your question. Note that this is a conceptual approach, and actual results depend on the availability of data in DBpedia.",7,10,8,3,3,3,3,71,0,0,1,0,0.0,0
30,8,test,Give me the native of Paris and professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCity ?profession 
WHERE {
  VALUES ?person { dbr:Édouard_Alphonse_James_de_Rothschild }
  
  ?person dbo:nationality dbr:French ; # Assuming nationality is French
          dbo:birthPlace ?nativeCity ;
          dbo:occupation ?profession .
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
547,57,test,Give me the resting place of James Burton (Egyptologist) and resting place of the actor of the show with Emily Richard and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v5 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?burialPlace WHERE {
  # James Burton (Egyptologist)
  { 
    VALUES ?person { dbr:James_Burton_(Egyptologist) }
    OPTIONAL { ?person dbo:placeOfBurial ?burialPlace . }
  }

  UNION

  # Actor from a show with Emily Watson
  { 
    ?show dbo:starring dbr:Emily_Watson .
    ?show dbo:starring ?actor .
    ?actor dbo:deathPlace ?burialPlace .
  }

  UNION

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    ?person dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
  }
}
ORDER BY ?person",6,6,7,3,3,3,3,71,0,0,1,0,0.0,0
617,71,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and parent of the child of the commander in Battle of Panium and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v4 . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v7 <http://dbpedia.org/ontology/child> ?v8 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v7 . ?v4 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/ontology/child> ?v8 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus (son of Antiochus III the Great)
  ?antiochus dbr:Antiochus_III_the_Great#children dbo:child dbr:Antiochus_IV_Soter .
  
  # Successor who is royalty
  ?successor dbo:succeededBy ?antiochus ;
             a dbo:Monarch .

  # Child of successor who is royalty
  ?childOfSuccessor dbo:parent ?successor ;
                   a dbo:Monarch .

  # Spouse of child of successor
  ?spouse dbo:spouse ?childOfSuccessor .

  # Commander in Battle of Panium and their child
  ?commander dbr:Battle_of_Panium#commanders dbo:commander ?commander .
  ?commanderChild dbo:parent ?commander .

  # Child of commander's child
  ?grandchildOfCommander dbo:parent ?commanderChild .

  # Successor of Antiochus II Theos who is royalty
  ?antiochusII dbr:Antiochus_II_theos#succeededBy ?successorAntiochusII ;
               a dbo:Monarch .
  
  # Child of successor of Antiochus II Theos who is royalty
  ?childOfSuccessorAntiochusII dbo:parent ?successorAntiochusII ;
                             a dbo:Monarch .

  FILTER (?grandchildOfCommander = ?childOfSuccessorAntiochusII)
}
```",9,12,10,3,3,3,3,71,0,0,2,0,0.0,0
747,49,test,Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandShena ?bandPavlo WHERE {
  # Find Shèna Easton
  ?shena a dbo:Person ;
         foaf:name ""Shena Easton"" ;
         dbo:birthPlace ?placeShena .
  
  OPTIONAL { ?shena dbo:musicGroup ?bandShena . }
  
  # Find Pavlo Khudzik and his birthdate
  ?pavlo a dbo:Person ;
         foaf:name ""Pavlo Khudzik"" ;
         dbo:birthday ?birthDatePavlo .
  
  OPTIONAL { 
    ?otherPerson a dbo:Person ;
                 dbo:birthday ?birthDatePavlo ;
                 dbo:musicGroup ?bandPavlo .
  }
}
```

This query does the following:
- Identifies Shena Easton and attempts to find any music group she is associated with.
- Finds Pavlo Khudzik's birthdate and looks for another person born on that date, retrieving their associated band.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
115,9,test,Give me the alma mater of the awardee of National Order of Scientific Merit and alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?individual ?almaMater
WHERE {
  # Find individuals who have received the National Order of Scientific Merit
  ?individual dbo:honoraryTitle dbr:National_Order_of_Scientific_Merit .
  
  # Get their alma mater
  ?individual dbo:almaMater ?almaMater .

  # Ensure they are alumni of the National University of San Marcos
  ?individual dbo:almaMater dbr:National_University_of_San_Marcos .
}
```

This query does the following:
- It selects individuals who have been awarded the National Order of Scientific Merit.
- It retrieves their alma mater information.
- It ensures that these individuals are also alumni of the National University of San Marcos.",4,4,5,2,2,2,2,9,0,0,2,0,0.0,0
996,20,test,Give me the entity in the award of the native of Palestine (region) and force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v5 . ?v4 <http://dbpedia.org/property/awards> ?v5 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v1 . ?v4 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?force
WHERE {
  ?person dbo:nationality dbr:Palestine .
  ?award dbo:recipient ?person .
  ?award dbo:category ?entity .

  ?awardee dbo:elevation dbr:Lac_d%27Avoriaz .
  ?awardee dbo:memberOf ?force .
}
```

This query attempts to find:

- An entity (`?entity`) associated with an award given to a person from Palestine.
- A force or organization (`?force`) related to another awardee connected to Lac d'Avoriaz.",6,6,7,3,2,3,2,20,0,0,4,0,0.0,0
820,16,test,Give me the professional in the award of Scott McCloud and child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . ?v3 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
    ?award dbo:recipient dbr:Scott_McCloud .
    ?parent dbo:child dbr:Jason_Schwartzman .
    ?child dbo:parent ?parent .
    ?award dbo:profession ?professional .
    
    FILTER(?child != dbr:Jason_Schwartzman)
}
```",4,4,5,2,2,3,2,20,0,0,1,0,0.0,0
701,35,test,Give me the parent of the child of Nefertari and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Nefertari's child
  ?child dbo:mother dbr:Nefertari .
  
  # Parent of Nefertari's child (Nefertari or her spouse)
  ?parent dbo:spouse ?child .

  # Merneptah's father
  ?merneptahFather dbp:fatherOf dbr:Merneptah .

  # Spouse of Merneptah's father
  ?spouse dbo:spouse ?merneptahFather .
  
  # Find the intersection (common entity)
  FILTER (?parent = ?spouse)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
767,46,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of the administration of George K. Nash.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find the writer of Dustin Lynch's album ""Where It's At""
  ?album dbo:artist dbr:Dustin_Lynch ;
         rdfs:label ""Where It's At (Dustin Lynch album)""@en .
  
  ?writer dbo:worksForAlbum ?album .

  # Find George K. Nash's alma mater
  ?nash dbo:almaMater ?university ;
        foaf:name ""George K. Nash""@en .

  # Find the administration related to George K. Nash
  ?administration dbo:member ?nash .
  
  # Find a settlement in both contexts
  ?settlement dbo:partOfAdministrativeTerritory ?administration ;
              rdf:type dbo:Settlement .
}
```",5,6,6,3,2,3,3,71,0,0,1,0,0.0,0
547,61,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?v5 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v5 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

# Part 1: Resting place of an actor from ""The Devil Wears Prada""
SELECT ?actor ?restingPlaceActor WHERE {
    ?movie dbo:starring ?actor .
    ?actor dbo:birthName ?name .
    FILTER(CONTAINS(LCASE(?name), ""blunt"")) .
    ?movie dbr:The_Devil_Wears_Prada .
    
    OPTIONAL { ?actor dbo:deathPlace ?restingPlaceActor }
}

UNION

# Part 2: Resting place of an awardee associated with Gerald Graham
SELECT ?awardee ?restingPlaceAwardee WHERE {
    ?award dbo:recipient ?awardee .
    ?award dbo:name ?awardName .
    
    # Assuming a connection through awards related to Gerald Graham
    OPTIONAL { ?award dbo:relatedTo dbr:Gerald_Graham }
    
    OPTIONAL { ?awardee dbo:deathPlace ?restingPlaceAwardee }
}",6,6,7,3,2,3,3,71,0,0,2,0,0.0,0
54,67,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v6 <http://dbpedia.org/property/father> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?result <http://dbpedia.org/ontology/successor> ?v3 . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Thihapate of Mohnyin's child who is an office holder and royalty
    ?child dbo:parent dbr:Thihapate_of_Mohnyin .
    ?child a dbo:Royalty ;
           dbo:officeHolder true .

    # Parent of the child of the parent of Thado Minsaw of Prome
    ?thadoParent dbo:parent ?thadoChild .
    ?thadoChild dbo:parent dbr:Thado_Minsaw_of_Prome .
    
    # Child of Thinkhaya of Pagan
    ?thinkhayaChild dbo:parent dbr:Thinkhaya_of_Pagan .

    # Predecessor (parent) of the child from step 1
    ?predecessor dbo:child ?child .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
994,24,test,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?associatedBand
WHERE {
  # Find members of Don Dokken
  ?donDokkenMember dbo:bandMemberOf dbr:Don_Dokken .
  
  # Check if the member is associated with Meshuggah as a band, group, or organization
  ?member dbo:associatedBand dbr:Meshuggah ;
          rdf:type ?type .

  FILTER (?type IN (dbo:MusicalGroup, dbo:Organization))

  BIND(?donDokkenMember AS ?member)
}
```

This query does the following:
- It selects members of Don Dokken using `dbo:bandMemberOf`.
- It checks if these members are associated with Meshuggah (`dbr:Meshuggah`) as a band, group, or organization.
- The filter ensures that only associations where the type is either `MusicalGroup` or `Organization` are considered.",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
232,56,test,"Give me the actor of Dog Soldiers (film) and child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?child ?residence
WHERE {
  # Actor of ""Dog Soldiers""
  ?film dbo:title ""Dog Soldiers""@en .
  ?film dbo:starring ?actor .

  # Child of John Devon Roland Pertwee
  dbr:John_Pertwee dbo:child ?child .

  # British politician and office holder from France
  ?politician a dbo:Politician ;
             dbo:nationality dbr:United_Kingdom ;
             dbo:birthPlace dbr:France .
  
  # Native residence of the politician
  ?residence dbo:settlementType dbr:Settlement ;
             dbo:country dbr:United_Kingdom ;
             dbo:resident ?politician .

}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
547,47,test,Give me the resting place of the actor of the show with Emily Richard and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?actorRestingPlace ?childRestingPlace WHERE {
  # Part 1: Actor from the show with Emily Watson
  ?show dbo:starring dbr:Emily_Watson .
  ?show dbo:starring ?actor .
  ?actor foaf:name ?actorName .
  
  OPTIONAL { 
    ?actor dbo:deathPlace ?actorDeathPlace .
    BIND(STR(?actorDeathPlace) AS ?actorRestingPlace)
  }

  # Part 2: Resting place of James Burton's child
  dbr:James_Burton_(property_developer) dbo:child ?child .
  
  OPTIONAL {
    ?child dbo:deathPlace ?childDeathPlace .
    BIND(STR(?childDeathPlace) AS ?childRestingPlace)
  }
}
```",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
427,66,test,"Give me the reference to the name of Italian People's Party (1994) and party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v6 . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName (SAMPLE(?fatherParty) AS ?fatherParty)
       (SAMPLE(?prodiBirthName) AS ?prodiBirthName)
       (SAMPLE(?prodiParty) AS ?prodiParty)
WHERE {
  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) dbo:name ?partyName .

  # Father of Lamberto Andreotti
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:politicalParty ?fatherParty .

  # Romano Prodi's birth name and party
  dbr:Romano_Prodi dbo:birthName ?prodiBirthName .
  OPTIONAL { dbr:Romano_Prodi dbo:politicalAffiliation ?prodiParty . }
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
184,51,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v4 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commonAncestor WHERE {
  # Archduchess Margaret of Austria (born 1925)
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthYear ""1925""^^xsd:gYear ;
            dbo:parent ?margaretParent .

  ?margaretParentChild a dbo:Person ;
                       dbo:parent ?margaretParent .

  # Archduke Joseph Karl of Austria
  ?josephKarl a dbo:Person ;
              foaf:name ""Joseph Karl of Austria"" ;
              dbo:child ?josephKarlChild .

  ?grandchild a dbo:Person ;
              dbo:parent ?josephKarlGrandchild .

  ?josephKarlGrandchild dbo:parent ?josephKarlChild .

  # Find common ancestor or relationship
  ?commonAncestor dbo:parent ?margaretParent .
  ?commonAncestor dbo:parent ?josephKarlGrandchild .
}
```

This query attempts to find a common ancestor between the two described lineages. Note that SPARQL queries depend on the availability and structure of data in DBpedia, so results may vary based on what is actually present.",5,5,6,3,2,3,3,71,0,0,1,0,0.0,0
547,50,test,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardeeRestingPlace ?actorRestingPlace WHERE {
  # Part 1: Awardee of Knight Grand Cross
  ?person dbo:awardReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St._George .
  ?person dbp:deathPlace ?awardeeDeathPlace .
  
  OPTIONAL { 
    ?awardeeDeathPlace dbo:associatedWith ?awardeeRestingPlace .
  }
  
  # Part 2: Actor from ""The Office"" (UK)
  ?actor dbo:role dbr:The_Office_(British_TV_series) ;
         dbp:name ?actorName .
  
  OPTIONAL {
    ?actor dbp:deathPlace ?actorDeathPlace .
    
    OPTIONAL { 
      ?actorDeathPlace dbo:associatedWith ?actorRestingPlace .
    }
  }

  # Filter for a specific actor, e.g., Ricky Gervais
  FILTER(?actorName = ""Ricky Gervais"")
}
```",5,5,6,3,2,3,3,71,0,0,2,0,0.0,0
528,71,test,"Give me the war of the commander in the work of --01-09 and war of the military force of the entity, that is a societal event, in Chile and force of the person born as the birth name of Narciso Campero.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v8 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v7 . ?v4 <http://dbpedia.org/ontology/commander> ?v5 . ?v4 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?v1 . ?v8 <http://dbpedia.org/property/birthName> ?v7 . ?v5 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander ?militaryForce WHERE {
  # Assuming the work of --01-09 is related to a specific war or event
  # Placeholder for the specific work, if known:
  # dbr:SpecificWork dbo:subject ?war .

  # Wars involving Chile
  ?war dbo:location dbr:Chile ;
       dbo:commander ?commander ;
       dbo:militaryForce ?militaryForce .

  # Narciso Campero's involvement
  OPTIONAL {
    ?narciso dbo:birthName ""Narciso Campero"" .
    ?narciso dbo:role ?role .
    FILTER(?role = dbr:MilitaryPerson)
    ?war dbo:commander ?narciso .
  }
}
```

This query attempts to find wars involving Chile, with a focus on commanders and military forces. It also includes an optional condition for Narciso Campero's involvement.",9,10,10,3,3,3,3,71,0,0,2,0,0.0,0
528,67,test,Give me the force of the person born as the birth name of Narciso Campero and war of the commander in the work of --01-09 and war of Irene Morales.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/commander> ?v6 . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v6 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?war1 ?war2 WHERE {
  # Find Narciso Campero and his birth name
  ?narciso a dbo:Person ;
           foaf:name ""Narciso Campero"" ;
           dbo:birthName ?birthName .

  # Find the force or role associated with Narciso Campero
  OPTIONAL { ?narciso dbo:role ?force . }

  # Find wars involving a commander from a work dated January 9th
  ?work dbo:date ""2009-01-09"" ;
        dbo:subject ?commander .
  ?commander dbo:role ?war1 .

  # Find wars associated with Irene Morales
  ?irene a dbo:Person ;
         foaf:name ""Irene Morales"" .
  ?irene dbo:role ?war2 .
}
```

This query attempts to gather information about Narciso Campero's birth name and any roles or forces he was part of, as well as wars associated with a commander from a work dated January 9th and Irene Morales.",7,7,8,3,3,3,3,71,0,0,2,0,0.0,0
994,20,test,"Give me the associated musical artist of S.A. Slayer and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?member ?artist2 WHERE {
  # Find associated musical artist for S.A. Slayer
  OPTIONAL {
    dbr:S._A._Slayer dbo:associatedMusicalArtist ?artist1 .
  }

  # Find members of Meshuggah who are also bands or organizations
  ?member dbo:bandMemberOf dbr:Meshuggah ;
          a ?type .

  FILTER (?type IN (dbo:Band, dbo:Organization))

  # Find associated musical artist for those members
  OPTIONAL {
    ?member dbo:associatedMusicalArtist ?artist2 .
  }
}
```",3,6,4,2,2,3,3,71,0,0,2,0,0.0,0
626,19,test,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/awards> ?v4 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award WHERE {
  # Find Alexander I of Russia and his role in military conflicts
  ?alexander a dbo:Monarch ;
             foaf:name ""Alexander I"" ;
             dbo:country dbr:Russia .

  # Identify the Battle of Borodino
  ?battle dbo:participatedIn dbr:Battle_of_Borodino .

  # Find commanders involved in the battle
  ?commander dbo:commanded ?force ;
             dbo:participatedIn ?battle .

  # Check if Alexander I was a commander in this context
  ?alexander dbo:commanded ?force .

  # Identify awards related to the Battle of Borodino
  ?award dbo:awardedTo ?recipient .
  ?recipient dbo:participatedIn ?battle .

  FILTER(?commander = ?alexander)
}",5,6,6,3,2,3,2,20,0,0,44,0,0.0,0
485,28,test,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v3 <http://dbpedia.org/ontology/birthPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region1 ?region2 ?country
WHERE {
  # Joseph Whitaker's birthplace that is a region
  dbr:Joseph_Whitaker_(naturalist) dbo:birthPlace ?birthPlace1 .
  ?birthPlace1 rdf:type dbo:Region .

  # Eric Gregory Award awardee who is a writer and poet, and their birthplace that is a region
  ?awardee dbo:award [ dbp:name ""Eric Gregory Award"" ] ;
          rdf:type dbo:Writer ;
          rdf:type dbo:Poet .
  ?awardee dbo:birthPlace ?birthPlace2 .
  ?birthPlace2 rdf:type dbo:Region .

  # Country associated with Western European Time
  dbr:Western_European_Time dbo:country ?country .
}
```",6,10,7,2,3,2,3,28,0,0,1,0,0.0,0
92,53,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v3 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ?v3 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 ?artist3 WHERE {
  # Nevermore (2006 film) associated musical artist
  OPTIONAL { 
    dbr:Nevermore_(film)_2006 dbo:musicalArtist ?artist1 .
  }

  # Jim Sheppard's band and associated artists
  OPTIONAL {
    dbr:Jim_Sheppard dbo:bandMember ?band2 ;
                     dbo:associatedBand ?band2 .
    ?band2 dbo:member ?artist2 .
  }

  # Joseph Michael Furney (Joe Lynn Turner) band and associated artists
  OPTIONAL {
    dbr:Joe_Lynn_Turner dbo:birthName ""Joseph Michael Furney""^^xsd:string ;
                        dbo:bandMember ?band3 ;
                        dbo:associatedBand ?band3 .
    ?band3 dbo:member ?artist3 .
  }
}
```",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
626,20,test,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814) and awardee of the award of the military force of Battle of Borodino.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> ?v5 . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ?v5 . ?v4 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInParis ?militaryConflict ?awardeeInBorodino WHERE {
  # Find the commander in Battle of Paris (1814)
  ?battle dbr:Battle_of_Paris_(1814) .
  ?battle dbo:commander ?commanderInParis .

  # Identify the military conflict associated with this commander
  ?commanderInParis dbo:militaryConflict ?militaryConflict .

  # Find the awardee from Battle of Borodino
  ?borodinoBattle dbr:Battle_of_Borodino .
  ?borodinoBattle dbo:awardee ?awardeeInBorodino .

  # Link the awardee to the same military conflict or force
  ?awardeeInBorodino dbo:militaryConflict ?militaryConflict .
}
```",6,7,7,3,2,3,2,20,0,0,62,0,0.0,0
767,48,test,"Give me the reference to the alter ego of Black Hood and entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?settlement WHERE {
  # Find the writer of Dustin Lynch's album ""Where It's At""
  ?album dbo:artist dbr:Dustin_Lynch ;
         rdfs:label ""Where It's At""@en .
  
  ?writer dbo:workAlbum ?album .

  # Identify the alter ego of Black Hood
  ?blackHood dbo:alterEgo ?alterEgo .
  FILTER (CONTAINS(LCASE(?blackHood), ""black hood""))

  # Find an entity that is both a settlement and part of an administration
  ?settlement rdf:type dbo:Settlement ;
              dbo:partOfAdministrativeTerritory ?adminEntity .

  # Link the alter ego to the writer and the settlement
  ?alterEgo dbo:writer ?writer .
  ?alterEgo dbo:entityInAdministration ?settlement .
}
```",5,6,6,3,2,3,3,71,0,0,8,0,0.0,0
54,56,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?v1 <http://dbpedia.org/property/father> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
    # Thihapate of Mohnyin
    ?thihapate a dbo:Monarch ;
               dbo:spouse ?parentOfThadoMinsaw .

    # Child of Thihapate who is an office holder and royalty (Parent of Thado Minsaw)
    ?childOfThihapate dbo:spouse ?thadoMinsaw ;
                     a dbo:RoyalFamilyMember, dbo:OfficeHolder ;
                     dbo:parent ?thihapate .

    # Thado Minsaw of Prome
    ?thadoMinsaw dbr:Thado_Minsaw_of_Prome .

    # Father of Soe Min Wimala Dewi
    ?fatherOfSoeMinWimala a dbo:Monarch ;
                         dbo:child ?soeMinWimalaDewi .
    ?soeMinWimalaDewi dbr:Soe_Min_Wimala_Dewi .

    # The parent of the child (office holder and royalty) is also the father of Soe Min Wimala Dewi
    ?parentOfThadoMinsaw = ?fatherOfSoeMinWimala .

    # Predecessor of the identified person
    ?predecessor dbo:successor ?parentOfThadoMinsaw .
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
747,70,test,"Give me the band of the person born as the persona of Shèna and person born on the birth date of Pavlo Khudzik and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v4 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . ?v7 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v7 . ?result <http://dbpedia.org/ontology/birthDate> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band1 ?band2 ?songWriterBand
WHERE {
  # Shèna's band
  dbr:Shèna dbo:birthName ?shenaBirthName .
  OPTIONAL { ?person dbo:birthName ?shenaBirthName . }
  OPTIONAL { ?person dbo:musicalArtist ?band1 . }

  # Pavlo Khudzik's birth date and corresponding person's band
  dbr:Pavlo_Khudzik dbo:birthday ?pavloBirthDate .
  OPTIONAL { ?person2 dbo:birthday ?pavloBirthDate . }
  OPTIONAL { ?person2 dbo:musicalArtist ?band2 . }

  # Amba Shepherd's song and the writer of that song
  dbr:Amba_Shepherd dbo:work ?song .
  FILTER (dbo:SongsInAlbum ?song) .
  OPTIONAL { ?song dbo:lyricsBy ?writer . }
  OPTIONAL { ?writer dbo:musicalArtist ?songWriterBand . }
}
```",8,9,9,3,3,3,3,71,0,0,1,0,0.0,0
801,57,test,"Give me the producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in .","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v5 <http://dbpedia.org/ontology/producer> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v5 <http://dbpedia.org/property/writer> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?rapper WHERE {
  # Identify the album/work
  VALUES (?work) { dbr:40_Dayz_&_40_Nightz }

  # Find the producer of the work
  ?work dbo:producer ?producer .

  # Find rappers associated with the work
  ?work dbo:artist ?rapper .
  
  # Ensure the rapper is a musical artist
  ?rapper rdf:type dbo:MusicalArtist .
}
```",6,12,7,3,3,3,3,71,0,0,8,0,0.0,0
528,47,test,Give me the war of the commander in the work of --01-09 and war of the military force of Battle of Pisagua.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?commander ?battleOfPisaguaForce WHERE {
  # Assuming ""01-09"" refers to a specific work or event, replace `dbr:SpecificWork` with the actual resource
  ?work dbo:creator ?creator .
  FILTER (STRSTARTS(STR(?work), ""http://dbpedia.org/resource/SpecificWork"")) .

  ?work dbo:commander ?commander .

  # Battle of Pisagua and its military force
  dbr:Battle_of_Pisagua dbo:militaryForce ?battleOfPisaguaForce .
}
```

### Explanation:

- **PREFIX**: Defines common prefixes for DBpedia resources.
- **SELECT**: Specifies the variables to retrieve: `?work`, `?commander`, and `?battleOfPisaguaForce`.
- **FILTER**: Filters works starting with a specific resource URI. Replace `""http://dbpedia.org/resource/SpecificWork""` with the actual work related to ""01-09"".
- **dbo:creator** and **dbo:commander**: Used to find the creator and commander of the work.
- **dbr:Battle_of_Pisagua**: Directly references the Battle of Pisagua to find its military force.

Make sure to replace `SpecificWork` with the actual DBpedia resource that corresponds to the date ""01-09"" if it refers to a specific event or publication.",5,5,6,3,2,3,3,71,0,0,8,0,0.0,0
617,59,test,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/child> ?v5 . ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v5 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Antiochus III the Great and his son
  dbr:Antiochus_III_the_Great dbo:son dbr:Antiochus_IV_Epiphanes .

  # Successor of Antiochus IV Epiphanes who is royalty
  dbr:Antiochus_IV_Epiphanes dbo:succeededBy ?successor .
  ?successor a dbo:Monarch .

  # Child of this successor who is royalty
  ?successor dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Spouse of this royal child
  ?royalChild dbo:spouse ?spouse .
}
```",6,9,7,3,2,3,3,71,0,0,4,0,0.0,0
659,54,test,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commanderInForce ?event ?conflict WHERE {
  # Napoleonic Wars as a military conflict
  dbr:Napoleonic_Wars dbo:type dbr:Military_Conflict ;
                      dbo:eventCategory ?event .

  # Arthur Wellesley, 1st Duke of Wellington's role
  dbr:Arthur_Wellesley_1st_Duke_of_Wellington dbo:commanderInForce ?militaryForce ;
                                              dbo:role ?conflict .

  # Polish Horse as a military unit
  dbr:Polish_Horse dbo:type dbr:Military_Unit ;
                   dbo:partOf ?militaryForce .
}
```",6,10,7,3,3,3,3,71,0,0,13,0,0.0,0
767,53,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ?v3 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v3 . ?result <http://dbpedia.org/ontology/state> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find the writer of ""Where It's At"" by Dustin Lynch
  ?song dbo:lyricsBy ?writer .
  FILTER(STR(?song) = ""Where_It's_At_(Dustin_Lynch_song)"")

  # Find Carl L. Nippert's alma mater
  ?nippert dbo:almaMater ?university .

  # Find the alter ego of Black Hood
  ?blackHood dbo:alterEgo ?alterEgo .

  # Ensure all entities are related to a settlement in an administration
  ?settlement dbo:partOfAdministrativeTerritory ?admin .
  ?writer dbo:residence ?settlement .
  ?nippert dbo:residence ?settlement .
  ?alterEgo dbo:residence ?settlement .

  # Filter for settlements only
  FILTER(STR(?settlement) = ""Settlement"")
}
```

This query assumes that the relevant properties (`dbo:lyricsBy`, `dbo:almaMater`, `dbo:alterEgo`, and `dbo:partOfAdministrativeTerritory`) are correctly linked in DBpedia. Adjustments may be needed based on actual data availability.",6,7,7,3,3,3,3,71,0,0,1,0,0.0,0
435,24,test,Give me the work of the author of Iceland and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v2 . ?result <http://dbpedia.org/ontology/timeZone> ?v2 . },"```sparql
# Query for the author of ""Iceland""
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?work dbo:title ""Iceland""@en .
  ?work dbo:author ?author .
}

# Query for the region of the time zone in Bombali Shebora Chiefdom
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region WHERE {
  ?chiefdom dbo:country dbr:Sierre_Leone .
  ?chiefdom rdfs:label ""Shebora Chiefdom""@en .
  ?location dbo:locatedIn ?chiefdom .
  ?location dbo:timeZone ?timezone .
  ?timezone dbo:region ?region .
}
```",4,4,5,2,2,2,3,28,0,0,1,0,0.0,0
659,64,test,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle dbo:type dbr:Military_conflict .
  ?battle dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:location dbr:Kingdom_of_Ireland .
  
  ?commander dbo:officeHolderOf ?office .
  ?office dbo:country dbr:Kingdom_of_Ireland .
  
  ?commander dbo:commanded ?force .
  ?force dbo:participatedInMilitaryConflict ?conflict .

  ?battle dbo:commander ?commander .
  ?battle dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
  ?battle dbo:name dbr:Battle_of_Leipzig .
}
```",7,11,8,3,3,3,3,71,0,0,6,0,0.0,0
959,64,test,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v4 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v4 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?university WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Japan ;
          dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:managerOfTeam dbr:1998_Kashima_Antlers_season .
  
  ?person dbo:almaMater ?university .
  
  ?university a dbo:EducationalOrganization, dbo:University .
}
```",7,12,8,3,3,3,3,71,0,0,3,0,0.0,0
184,66,test,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and parent of the native of Budapest and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v6 . ?v3 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfBoth
WHERE {
    # Archduchess Margaret of Austria (born 1925)
    ?margaret a dbr:Archduchess_Margaret_of_Austria_(1925) .
    
    # Find her parent
    ?margaret dbo:child ?margaretParent .
    
    # Find the child of that parent
    ?margaretParent dbo:child ?margaretGrandChild .

    # Archduke Joseph Karl of Austria
    ?josephKarl a dbr:Archduke_Joseph_Karl_of_Austria .
    
    # Identify his child
    ?josephKarl dbo:child ?josephChild .
    
    # Identify the child of that child (native of Budapest)
    ?josephChild dbo:child ?budaChild .
    ?budaChild dbo:nativePlace dbr:Budapest .

    # Find the parent of both individuals
    ?margaretGrandChild dbo:parent ?parentOfBoth .
    ?budaChild dbo:parent ?parentOfBoth .
}
```",7,7,8,3,3,3,3,71,0,0,1,0,0.0,0
92,40,test,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and associated musical artist of Jim Sheppard and band of Joseph Michael.",SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?artistName WHERE {
  # Find band members of Nevermore (2006 film)
  VALUES ?film { dbr:Nevermore_(2006_film) }
  
  # Jim Sheppard is a known member of the band Nevermore
  VALUES ?sheppard { dbr:Jim_Sheppard_(musician) }
  
  # Joseph Michael is associated with the band Nevermore and others like Iced Earth
  VALUES ?michael { dbr:Joseph_Michael_(musician) }

  # Find bands associated with Jim Sheppard
  ?bandMember dbo:member ?sheppard .
  ?bandMember rdfs:label ?bandLabelSheppard .

  # Find bands associated with Joseph Michael
  ?bandMember dbo:member ?michael .
  ?bandMember rdfs:label ?bandLabelMichael .

  # Filter for the band Nevermore
  FILTER(?bandLabelSheppard = ""Nevermore"" || ?bandLabelMichael = ""Nevermore"")

  # Get artist names
  OPTIONAL { ?sheppard dbo:birthName ?artistName . }
  OPTIONAL { ?michael dbo:birthName ?artistName . }

  # Ensure distinct results
  FILTER(?artistName != """")
}
ORDER BY ?bandMember",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
959,66,test,"Give me the manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v6 . ?result <http://dbpedia.org/ontology/team> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v6 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the manager of the 1998 Kashima Antlers team
  ?team dbo:manager ?manager .
  FILTER (str(?team) = ""Kashima_Antlers_season_1998"")

  # Ensure the manager is a sports manager
  ?manager rdf:type dbo:SportsManager .

  # Find the alma mater of Eiji Ōtsuka
  dbr:Eiji_Ōtsuka dbo:almaMater ?almaMater .
  
  # Ensure the alma mater is Japanese, an organization, a university, and an educational institution
  ?almaMater rdf:type dbo:University ;
             dbo:country dbr:Japan .

  # The manager must have attended this alma mater
  ?manager dbo:almaMater ?almaMater .

  # Find the country of residence for Yōichi Masuzoe
  dbr:Yōichi_Masuzoe dbo:nationality ?country .
  
  # Ensure the manager is from the same country as Yōichi Masuzoe
  ?manager dbo:nationality ?country .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
427,27,test,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Romano Prodi""@en .
  
  OPTIONAL { ?person dbo:birthName ""Romano Prodi""@en . }
  
  ?person dbo:politicalParty ?party .
}
```",3,5,4,3,1,3,3,71,0,0,7,0,0.0,0
492,57,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v3 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?decedentAtCapital ?decedentInFrenchAlgeria ?commanderInVerdun ?warCommandedByVerdunCommander
WHERE {
  # Capital of Algeria
  dbr:Algiers dbo:capitalOf dbr:Algeria .
  
  # Person decedent at the capital of Algeria
  ?decedentAtCapital dbo:placeOfBirth ?algiers ;
                    dbo:dateOfDeath ?deathDate1 .

  # French Algeria as a historical region
  ?frenchAlgeria dbo:country dbr:France ;
                dbo:administrativeRegion dbr:Algeria .
  
  # Person decedent in French Algeria
  ?decedentInFrenchAlgeria dbo:placeOfBirth ?frenchAlgeria ;
                          dbo:dateOfDeath ?deathDate2 .

  # Battle of Verdun and its commander
  dbr:Battle_of_Verdun dbo:commander ?commanderInVerdun .
  
  # War where the same person was a commander
  ?warCommandedByVerdunCommander dbo:commander ?commanderInVerdun ;
                                rdf:type dbo:MilitaryConflict .

}
```",6,9,7,3,3,3,3,71,0,0,1,0,0.0,0
617,17,test,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Richeza of Poland's father
  dbr:Richeza_of_Poland dbo:father dbr:Mieszko_I_of_Poland .
  
  # Mieszko I's father (Siemomysł)
  dbr:Mieszko_I_of_Poland dbo:father ?grandfather .

  # Check if the grandfather is royalty
  OPTIONAL { ?grandfather a dbo:Monarch . }

  # Doubravka of Bohemia's child
  dbr:Doubravka_of_Bohemia dbo:child ?child .

  # Reference that is royalty
  ?reference a dbo:Monarch .
  
  # Find the parent of the reference (royalty)
  ?reference dbo:parent ?parent .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
54,63,test,"Give me the parent of the child of Narapati I of Ava and child of the father of the child of Thinkhaya of Pagan and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/successor> ?v2 . ?v6 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v6 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Narapati I of Ava's child
  ?narapatiChild dbo:childOf dbr:Narapati_I_of_Ava .
  
  # Thinkhaya of Pagan's child and predecessor
  ?thinkhayasChild dbo:childOf dbr:Thinkhaya_of_Pagan .
  ?predecessor dbo:succeededBy ?thinkhayasChild .

  # Thihapate of Mohnyin's office holder and royalty
  ?thihapateOfficeHolder dbo:officeHolderOf ?thihapate .
  ?thihapate rdf:type dbo:Royalty .
  
  # Find the parent of Narapati I's child who is also a predecessor related to Thinkhaya's lineage
  ?parent dbo:childOf ?narapatiChild .
  ?parent dbo:succeededBy ?predecessor .

  # Ensure the person is an office holder and royalty
  ?parent dbo:officeHolderOf ?thihapateOfficeHolder .
  ?parent rdf:type dbo:Royalty .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,53,test,"Give me the band of Amba Shepherd and band of the person born as Tracey Elizabeth McSween and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?ambaBand ?traceyBand ?athleteName WHERE {
  # Amba Shepherd's band
  OPTIONAL { 
    dbr:Amba_Shepherd dbo:musicalArtistIn ?ambaBand .
  }

  # Tracey Elizabeth McSween's details and band
  ?tracey a dbo:Person ;
          dbp:name ""Tracey Elizabeth McSween"" ;
          dbp:dateOfBirth ?birthDate ;
          dbp:placeOfBirth dbr:Zolotonosha .

  OPTIONAL {
    ?tracey dbo:musicalArtistIn ?traceyBand .
  }

  # Athlete and soccer player born on the same date at Zolotonosha
  ?athlete a dbo:Athlete, dbo:SoccerPlayer ;
           dbp:dateOfBirth ?birthDate ;
           dbp:placeOfBirth dbr:Zolotonosha .

  BIND (STR(?athlete) AS ?athleteName)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
16,41,test,Give me the professional in the profession of Satomi Ishihara and spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person;
          foaf:name ""Satomi Ishihara""@en.
  ?satomi dbo:profession ?profession.

  # Find Ted McGinley and Georgeanne Rice
  ?ted a dbo:Person;
       foaf:name ""Ted McGinley""@en;
       dbp:birthday ""1959-08-06""^^xsd:date. # Assuming the birthdate for Ted McGinley

  ?georgeanne a dbo:Person;
              foaf:name ""Georgeanne Rice""@en.

  # Find their spouses
  ?ted dbo:spouse ?spouse.
  ?georgeanne dbo:spouse ?spouse.

  # Ensure the spouse has the same profession as Satomi Ishihara
  ?spouse dbo:profession ?sameProfession;
          FILTER(?sameProfession = ?profession).
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
404,40,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914) and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia by birth name and parentage
  ?person a dbo:Person ;
          dbo:birthName ""Victoria Louise"" ;
          dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover ;
          dbo:child dbr:Prince_Ernest_Augustus_of_Hanover .

  # Find her spouse
  ?person dbo:spouse ?spouse .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
92,55,test,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v5 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Jim Sheppard is a member of Nevermore
  dbr:Jim_Sheppard dbo:bandMemberOf dbr:Nevermore .
  
  # Warrel Dane (Joseph Michael Furney) is also a member of Nevermore
  dbr:Warrel_Dane dbo:birthName ""Joseph Michael Furney"" ;
                  dbo:bandMemberOf dbr:Nevermore .

  # Find the associated musical artist for Warrel Dane
  dbr:Warrel_Dane dbo:musicalArtist ?artist .
}
```",6,8,7,2,3,3,3,71,0,0,1,0,0.0,0
488,52,test,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v2 . ?v5 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v5 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceSaitoHajime ?deathPlaceYukiHideyasusFather ?administrationGoYozei
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlaceSaitoHajime .

  # Yūki Hideyasu's father (assuming his father is a known politician)
  # Assuming the father is identified as ""Yamana Sozen"" or similar, adjust accordingly
  OPTIONAL {
    dbr:Yuki_Hideyasu dbo:father ?yukiHideyasusFather .
    ?yukiHideyasusFather dbo:deathPlace ?deathPlaceYukiHideyasusFather .
  }

  # Emperor Go-Yōzei's administration period
  OPTIONAL {
    dbr:Emperor_Go-Yozei dbo:reign ?administrationGoYozei .
  }
}
```",6,10,7,3,3,3,3,71,0,0,1,0,0.0,0
404,63,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v6 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v6 . ?v3 <http://dbpedia.org/property/birthName> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia and her birth name
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .

  # Step 2: Find Ernest Augustus, Duke of Brunswick's father
  dbr:Ernest_Augustus,_Duke_of_Brunswick dbo:father ?father .

  # Step 3: Identify the child of Ernest Augustus who is royalty
  ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick ;
         a dbo:RoyalFamilyMember .

  # Step 4: Find the spouse of the person with the birth name identified in step 1
  ?person dbo:birthName ?birthName .
  ?person dbo:spouse ?spouse .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
404,34,test,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Victoria Louise"" ;
          dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .

  ?person dbo:spouse ?spouse .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,51,test,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native
WHERE {
  # Yōichi Masuzoe's residence
  dbr:Yōichi_Masuzoe dbo:residence ?residence .

  # Residence as a country
  ?residence rdf:type dbo:Country .
  
  # Native of the country
  ?residence dbo:nativeCitizen ?native .

  # Manager of 1998 Kashima Antlers season
  dbr:Kashima_Antlers_1998_season dbo:manager ?sportsManager .

  # Sports manager's team
  ?sportsManager rdf:type dbo:SportsManager .
  ?sportsManager dbo:managedTeam ?team .
}
```",5,7,6,3,2,3,3,71,0,0,6,0,0.0,0
617,65,test,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/property/father> ?v4 . ?v6 <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?v0 <http://dbpedia.org/ontology/child> ?v6 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent
WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus dbo:childOf ?antiochusIII .
  
  # Step 2: Find his child
  ?child dbo:childOf ?antiochus .

  # Step 3: Find the grandchild of Antiochus
  ?grandchild dbo:childOf ?child .

  # Step 4: Identify Seleucus II Callinicus and his child, then grandchild
  ?seleucus2 dbo:child ?seleucusChild .
  ?seleucusGrandchild dbo:childOf ?seleucusChild .

  # Step 5: Find the successor of Antiochus (son of Antiochus III the Great)
  ?successor dbo:succeededBy ?antiochus .

  # Step 6: Find the child of this successor
  ?successorChild dbo:childOf ?successor .

  # Step 7: Identify the spouse of this child
  ?spouse dbo:spouse ?successorChild .

  # Step 8: Ensure all involved are royalty
  FILTER (rdf:type(?antiochus, dbo:Monarch) && rdf:type(?seleucus2, dbo:Monarch) &&
          rdf:type(?successor, dbo:Monarch) && rdf:type(?spouse, dbo:Monarch))

  # Step 9: Find the parent of the grandchild from step 3
  ?parent dbo:parentOf ?grandchild .
}
```",7,9,8,3,3,3,3,71,0,0,2,0,0.0,0
767,51,test,"Give me the alma mater of the administration of George K. Nash and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","# Query for George K. Nash's alma mater
SELECT ?university WHERE {
  ?person foaf:name ""George K. Nash""@en .
  ?person dbo:almaMater ?university .
}

UNION

# Hypothetical query for Matthew Burland's fictional character alter ego
SELECT ?character WHERE {
  ?person foaf:name ""Matthew Burland""@en .
  ?person dbo:fictionalCharacter ?character .
}
```

This query attempts to retrieve the alma mater of George K. Nash and any fictional character associated with Matthew Burland, if such data exists in DBpedia.",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
617,16,test,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commonAncestor WHERE {
  # Boleslaus I, Duke of Bohemia's grandchildren who are royalty
  ?child1 dbo:parent dbr:Boleslaus_I,_Duke_of_Bohemia .
  ?grandchild1 dbo:parent ?child1 .
  ?grandchild1 a dbo:Monarch .

  # Richeza of Poland, Queen of Hungary's great-grandparent
  ?father dbp:spouse ?richezaMother .
  ?richezaMother dbp:child dbr:Richeza_of_Poland,_Queen_of_Hungary .
  ?grandfather dbo:parent ?father .
  ?greatGrandparent dbo:parent ?grandfather .

  # Find the common ancestor
  FILTER (?grandchild1 = ?greatGrandparent)
}
```",4,6,5,2,2,3,2,20,0,0,1,0,0.0,0
16,35,test,Give me the spouse of the person born as Ted Martin McGinley and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouseTed McGinley ?spouseGigiRiceBirthName WHERE {
  # Find Ted Martin McGinley's spouse
  ?tedMcGinley a dbo:Person ;
               foaf:name ""Ted Martin McGinley""@en .
  ?tedMcGinley dbo:spouse ?spouseTed .

  # Find Gigi Rice's birth name and her spouse
  ?gigiRice a dbo:Person ;
            foaf:name ""Gigi Rice""@en .
  ?gigiRice dbp:birthName ?birthNameGigiRice .
  ?gigiRice dbo:spouse ?spouseGigiRice .

  # Bind the spouse's birth name
  OPTIONAL { ?spouseGigiRice dbp:birthName ?spouseGigiRiceBirthName }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
959,65,test,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/residence> ?v5 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v5 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/team> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team manager
  ?team dbo:player dbr:Takashi_Sekizuka ;
        dbo:coach ?manager .

  # Eiji Ōtsuka's alma mater
  ?almaMater dbo:alumnus dbr:Eiji_Ōtsuka ;
             a dbo:University ;
             dbo:country dbr:Japan .

  # Leader of the 2010 Japanese House of Councillors election
  ?leader dbo:residenceCountry ?country .
  
  FILTER (?country = dbr:Japan)

  # Ensure the manager is associated with Eiji Ōtsuka's alma mater
  ?manager dbo:almaMater ?almaMater .
}
```",7,13,8,3,3,3,3,71,0,0,2,0,0.0,0
378,50,test,"Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/knownFor> ?result . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?fame WHERE {
  VALUES ?conflict { 
    dbr:Great_Siege_of_Gibraltar 
    dbr:Peninsular_War 
  }
  
  # Find the person associated with the Great Siege of Gibraltar
  {
    SELECT DISTINCT ?person WHERE {
      ?event dbo:location dbr:Gibraltar .
      ?event dbo:participatedIn ?conflict .
      ?event dbo:commander ?person .
      FILTER(?conflict = dbr:Great_Siege_of_Gibraltar)
    }
  }

  UNION

  # Find the person associated with both the Great Siege of Gibraltar and Peninsular War
  {
    SELECT DISTINCT ?person WHERE {
      ?event1 dbo:location dbr:Gibraltar .
      ?event1 dbo:participatedIn dbr:Great_Siege_of_Gibraltar .
      ?event1 dbo:commander ?person .

      ?event2 dbo:participatedIn dbr:Peninsular_War .
      ?event2 dbo:commander ?person .
    }
  }

  # Retrieve the claim to fame for these persons
  {
    ?person dbo:famousFor ?fame .
  }
}
```",5,6,6,3,2,3,3,71,0,0,2,0,0.0,0
659,57,test,"Give me the commander in German campaign of 1813 and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v5 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/battle> ?v5 . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v5 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?germanCampaignCommander ?warCommander ?rutgerForce
WHERE {
  # German Campaign of 1813 and its commander
  ?campaign a dbo:MilitaryConflict ;
            dbo:date ""1813""^^xsd:gYear ;
            dbo:commander ?germanCampaignCommander .

  # War involving 'Polish Horse' and its commander
  ?polishHorseUnit a dbo:MilitaryUnit ;
                   dbo:partOf ?war .
  ?war a dbo:MilitaryConflict ;
       dbo:commander ?warCommander .

  # Rutger Jan Schimmelpenninck's military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryForce ?rutgerForce .
  
  # Force related to a societal event and a military conflict
  ?societalEvent a dbo:SocietalEvent ;
                 dbo:relatedTo ?militaryConflict .
  ?militaryConflict dbo:partOf ?rutgerForce .

}
```",6,13,7,3,3,3,3,71,0,0,7,0,0.0,0
767,23,test,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find the song ""Where It's At"" by Dustin Lynch
  dbr:Where_It%27s_At_(Dustin_Lynch_song) dbo:lyricist ?writer .

  # Get administrative entities related to the writer(s)
  ?writer dbo:birthPlace ?adminEntity .
  
  # Ensure the administrative entity is a settlement
  ?adminEntity rdf:type dbo:Settlement .
  
  # Return the settlement
  ?adminEntity rdfs:label ?settlement .
}
ORDER BY ?settlement",3,4,4,3,1,3,3,71,0,0,66,0,0.0,0
492,25,test,"Give me the person decedent at the capital, that is a settlement, of Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  # Find individuals who died in Algiers
  ?deathEvent dbo:place dbr:Algiers .
  ?deathEvent dbo:agent ?person .
  
  # Ensure the person is a commander in the Franco-Hova Wars
  ?person dbo:occupation dbp:Commander ;
          dbo:wikiPageDisambiguates ?francoHovaWars .

  # Get the name of the person
  ?person rdfs:label ?name .
  
  FILTER (lang(?name) = 'en')
}
```

This query does the following:
- It selects individuals (`?person`) who have a death event (`?deathEvent`) associated with Algiers.
- It checks if these individuals had an occupation as a commander and were involved in the Franco-Hova Wars.
- It retrieves their names, filtering for English language labels.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
294,23,test,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace ?birthPlace WHERE {
  # Find individuals who are politicians and have received the Distinguished Service Medal (U.S. Army)
  ?person dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) .
  ?person a dbo:Politician .

  # Ensure Marion James is related to this person
  ?marion dbp:awardeeOf ?person ;
          rdfs:label ""Marion James""@en .

  # Get the resting place of the awardee
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }

  # Get the birthplace of Marion James
  ?marion dbp:birthPlace ?birthPlace .
  
  FILTER (isLiteral(?birthPlace) && datatype(?birthPlace) = xsd:string)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
77,19,test,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw and war of the awardee of Golden Weapon for Bravery.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v4 . ?v0 <http://dbpedia.org/property/leader> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?force ?war ?awardee WHERE {
  # Find the mayor of Warsaw
  ?mayor dbo:positionTitle ""Mayor""@en;
         dbo:city dbr:Warsaw.
  
  # Assume 'force' is related to an organization administering a territory
  ?organisation dbo:administers ?territory.
  ?mayor dbo:memberOf ?organisation.

  # Find the war and awardee of Golden Weapon for Bravery
  ?war dbo:award dbr:Golden_Weapon_for_Bravery;
       dbo:awardee ?awardee.
  
  # Link the mayor to the war through the territory or organisation
  OPTIONAL { ?territory dbo:relatedTo ?war. }
}
```",5,6,6,3,2,3,2,20,0,0,14,0,0.0,0
184,22,test,Give me the parent of the child of Archduke Joseph Francis of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Find a child of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Find the parent of that child (which is also an ancestor)
  ?child1 dbo:parent ?commonParent .

  # Find a child of Géza von Habsburg
  ?child2 dbo:parent dbr:Géza_von_Habsburg .
  
  # Ensure the same common parent for both children
  ?child2 dbo:parent ?commonParent .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
303,23,test,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderParty ?arnulfoAriasMadridParty WHERE {
  # Find the commander of the United States invasion of Panama who is a politician
  ?commander dbo:occupation dbr:Politician ;
            dbo:memberOf ?party1 .
  
  # Ensure this person was involved in the United States invasion of Panama
  ?invasion dbo:commander ?commander ;
            rdfs:label ""United States invasion of Panama""@en .

  # Find Arnulfo Arias Madrid and his political party
  dbr:Arnulfo_Arias_Madrid dbo:birthPlace ?place ;
                           dbo:memberOf ?party2 .
  
  # Ensure Arnulfo Arias Madrid is a politician
  dbr:Arnulfo_Arias_Madrid dbo:occupation dbr:Politician .

  # Bind the political parties to variables
  BIND(?party1 AS ?commanderParty)
  BIND(?party2 AS ?arnulfoAriasMadridParty)
}
```",4,6,5,2,2,2,3,28,0,0,1,0,0.0,0
9,58,test,"Give me the alma mater of the awardee of Royal Medal and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v5 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?v5 <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the individual who is a Royal Medal awardee and has a nickname
  ?person dbo:awardReceived dbr:Royal_Medal ;
          dbp:nickname ?nickname .

  # Ensure this person is associated with an organization and educational institution in Northern Ireland
  ?organization dbo:location dbr:Northern_Ireland ;
                dbo:member ?person .
  ?institution dbo:location dbr:Northern_Ireland ;
               dbo:alumni ?person .

  # Find the alma mater of John Alderdice, Baron Alderdice
  dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?johnAlmaMater .

  # Ensure the alma mater is the same for both individuals
  ?institution dbp:name ?almaMater .
  FILTER (?almaMater = ?johnAlmaMater)
}
```",6,8,7,3,3,3,3,71,0,0,1,0,0.0,0
281,48,test,"Give me the war of the profession, that is a military unit, of Heather Roy and war of the awardee of the award of Jonathon Band.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> ?v3 . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?heatherProfessionWar ?jonathonAwardWar
WHERE {
  # Heather Roy's profession that is a military unit
  dbr:Heather_Roy dbo:profession ?heatherProfession .
  ?heatherProfession rdfs:label ?heatherProfessionLabel .
  FILTER(CONTAINS(LCASE(?heatherProfessionLabel), ""military unit""))
  OPTIONAL { ?heatherProfession dbo:wikiPageRedirects ?heatherProfessionWar . }

  # Jonathon Band's award and associated war
  dbr:Jonathon_Band dbo:award ?jonathonAward .
  ?jonathonAward rdfs:label ?jonathonAwardLabel .
  OPTIONAL { ?jonathonAward dbo:relatedTo ?war . }
}
```",5,6,6,3,2,3,3,71,0,0,9,0,0.0,0
54,71,test,"Give me the predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin and parent of the child of the parent of Thado Minsaw of Prome and child of the father of the child of Thinkhaya of Pagan.","SELECT ?result WHERE { ?v5 <http://dbpedia.org/property/father> ?v4 . ?v7 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/successor> ?v8 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v5 <http://dbpedia.org/ontology/parent> ?result . ?v8 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v8 <http://dbpedia.org/property/father> ?v7 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child dbo:parent dbr:Thihapate_of_Mohnyin ;
         a dbo:Monarch ; # Assuming Monarch as a placeholder for royalty
         dbo:officeHolder true .

  # Thado Minsaw of Prome's parent (which is himself)
  ?thadoMinsawChild dbo:parent dbr:Thado_Minsaw_of_Prome .
  
  # Thinkhaya of Pagan's child
  ?thinkhayasChild dbo:parent dbr:Thinkhaya_of_Pagan .

  # The predecessor we are looking for
  ?predecessor dbo:child ?child ;
               dbo:parent ?thadoMinsawChild ;
               dbo:child ?thinkhayasChild .
}",9,11,10,3,3,3,3,71,0,0,1,0,0.0,0
959,53,test,"Give me the manager of the team of Takashi Sekizuka and native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team
  ?team dbo:member dbr:Takashi_Sekizuka .
  
  # Manager of the team
  ?team dbo:coach ?manager .

  # Manager is a native of Japan
  ?manager dbp:nationality ""Japanese""^^xsd:string .

  # Alma mater is a Japanese university or educational institution
  ?manager dbo:almaMater ?university .
  ?university rdf:type dbo:EducationalOrganization ;
              dbo:country dbr:Japan .
}
```",6,10,7,3,3,3,3,71,0,0,3,0,0.0,0
778,18,test,"Give me the author of the work, that is a software, of Bill Joy and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v3 <http://dbpedia.org/ontology/author> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v3 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?softwareAuthor ?awardEntity WHERE {
  # Find software authored by Bill Joy
  ?software dbo:author dbr:Bill_Joy ;
            a dbo:Software .
  
  # Get the author of the software
  ?softwareAuthor rdfs:label ""Bill Joy""@en .

  # Find an American awardee of the Wolf Prize in Medicine
  ?awardEntity dbo:recipient ?person ;
               dbo:name dbr:Wolf_Prize_in_Medicine ;
               dbo:country dbr:United_States .
  
  # Ensure the person is American
  ?person dbp:nationality dbr:American .

}
```",5,7,6,3,2,3,2,20,0,0,1,0,0.0,0
161,51,test,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/battle> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commanderRole
WHERE {
  # Francisco Largo Caballero as ""El Director""
  dbr:Francisco_Largo_Caballero 
    dbo:wikiPageRedirects* dbr:El_Director ;
  
  # Military force associated with him that is both a societal event and a military conflict
  ?militaryForce dbo:participatedIn dbr:Civil_War_in_Spain ;
                rdf:type dbo:SocietalEvent, dbo:MilitaryConflict ;
                dbo:commander ?commanderRole .

  FILTER(?commanderRole = dbr:Francisco_Largo_Caballero)
}
```",5,8,6,3,2,3,3,71,0,0,32,0,0.0,0
92,65,test,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney.","SELECT ?result WHERE { ?v6 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v3 . ?v4 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v6 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v4 . ?v6 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Step 1: Identify Joseph Michael Furney
  ?furney a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" ;
          dbo:birthPlace ?birthPlace .

  # Step 2: Find the actor of ""Return to Nuke 'Em High Volume 1""
  ?actor a dbo:Actor ;
         dbo:film ?nukeFilm .
  
  ?nukeFilm rdfs:label ""Return to Nuke 'Em High Volume 1""@en .

  # Step 3: Link to Nevermore and band membership
  ?nevermoreBand a dbo:MusicalArtist ;
                 dbo:bandMember ?artist ;
                 rdfs:label ""Nevermore""@en .
  
  ?referenceBand a dbo:MusicalArtist ;
                 dbo:bandMember ?artist .

  # Ensure the artist is associated with both bands and the actor
  ?actor dbo:birthPlace ?birthPlace .
}
```",7,9,8,3,3,3,3,71,0,0,1,0,0.0,0
747,59,test,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of the writer of the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/property/writer> ?v5 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v5 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?athlete WHERE {
  # Step 1: Find Amba Shepherd's song
  ?song dbo:artist dbr:Amba_Shepherd ;
        a dbo:Song .

  # Step 2: Find the band associated with this song
  ?band dbo:member ?artist .
  ?artist dbo:recordedWith ?song .

  # Step 3: Find a decedent and their birth date
  ?decedent dbo:dateOfBirth ?birthDate ;
            dbo:deathPlace ?place .
  FILTER EXISTS { ?decedent dbo:deathDate ?deathDate } .

  # Step 4: Find an athlete and soccer player born on that date in Zolotonosha
  ?athlete dbo:birthDate ?birthDate ;
           dbo:sport dbr:Soccer ;
           dbo:birthPlace dbr:Zolotonosha .
}",6,9,7,3,2,3,3,71,0,0,1,0,0.0,0
838,12,val,"Give me the band member of the band, that is a group, of YU Grupa and band of Raša Đelmaš.",SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member WHERE {
  # Find members of YU Grupa
  ?bandMember dbo:memberOf dbr:YU_Grupa .
  
  # Check if the member is associated with Raša Đelmaš
  OPTIONAL { 
    ?association dbo:agent ?member ;
                 dbo:object dbr:Raša_Đelmaš .
  }
  
  FILTER EXISTS {
    ?association a dbo:MusicComposition ; # or another relevant class
                dbo:agent ?member .
  }
}
```",3,4,4,2,2,3,2,20,0,0,4,0,0.0,0
10,14,val,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert and associated musical artist of Matt Colton.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  # Find Luke Francis Vibert
  ?vibert a dbo:MusicalArtist ;
          foaf:name ""Luke Francis Vibert"" .

  # Find bands he was part of
  ?vibert dbo:memberOfBand ?band .

  # Ensure Matt Colton is associated as a musical artist
  ?colton a dbo:MusicalArtist ;
          foaf:name ""Matt Colton"" .
  
  # Link the band to Matt Colton
  ?band dbo:associatedWith ?colton .

  # Find other members of the same band
  ?bandMember dbo:memberOfBand ?band ;
              ! (foaf:name ""Luke Francis Vibert"") .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
963,11,val,"Give me the administration of Serbian Progressive Party and entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLeader ?countryName WHERE {
  # Find the Serbian Progressive Party and its leader(s)
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Serbian Progressive Party""@en .
  
  OPTIONAL { 
    ?party dbo:leader ?person .
    ?person rdfs:label ?partyLeader .
  }
  
  # Identify countries in the Central European Time zone
  ?country dbo:timeZone dbr:Central_European_Time ;
           rdfs:label ?countryName .

  # Ensure we are looking at a country entity
  FILTER (isLiteral(?countryName))
}
```

This query does the following:
- Identifies the Serbian Progressive Party and its leader(s).
- Finds countries that use Central European Time.
- Returns the names of these countries along with the party's leadership.",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,22,val,Give me the force of the person born as Narciso Campero Leyes and war of Irene Morales.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?force WHERE {
  VALUES ?person { 
    dbr:Narciso_Campero_Leyes 
    dbr:Irene_Morales
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:militaryRank ?force . }
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia properties.
- Selects individuals (`?person`) who are either Narciso Campero Leyes or Irene Morales.
- Retrieves their names and any military rank they might have held.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
294,18,val,"Give me the resting place of Edwin A. Keeble and entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?settlementEntity
WHERE {
  # Edwin A. Keeble's resting place
  OPTIONAL { 
    dbr:Edwin_A._Keeble dbo:deathPlace ?restingPlace .
  }
  
  # Marion James' birthplace settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?birthPlace .
    ?birthPlace a dbo:Settlement .
    ?settlementEntity rdf:type dbo:Settlement ;
                     dbo:location ?birthPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,5,1,0.0,0.0,0
48,11,val,Give me the band of the writer of Emotion (Carly Rae Jepsen album) and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerBand ?murdaMookBand WHERE {
  # Carly Rae Jepsen's album ""Emotion""
  OPTIONAL {
    ?album dbo:artist dbr:Carly_Rae_Jepsen .
    ?album dbo:title ""Emotion"" .
    ?track dbo:composer ?writer .
    FILTER(?writer IN (dbr:Dev_Hynes, dbr:Carly_Rae_Jepsen)) .
    
    # Check if the writer is part of a band
    OPTIONAL {
      ?band dbo:member ?writer .
      BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?band), "" "", ""_""))) AS ?writerBand)
    }
  }

  # Murda Mook's band association
  OPTIONAL {
    ?artist dbr:Murda_Mook .
    
    # Check if the artist is part of a band
    OPTIONAL {
      ?band dbo:member ?artist .
      BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(STR(?band), "" "", ""_""))) AS ?murdaMookBand)
    }
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
404,32,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Princess Victoria Louise of Prussia and her spouse
  ?princess a dbo:Princess ;
           foaf:name ""Victoria Louise of Prussia""@en .
  
  ?princess dbo:spouse ?spouse .

  # Ensure the spouse is royalty
  ?spouse rdf:type dbo:Monarch .

  # Find Ernest Augustus, Duke of Brunswick and his parent who is royalty
  ?duke a dbo:Duke ;
        foaf:name ""Ernest Augustus, Duke of Brunswick""@en .
  
  ?duke dbo:parent ?parent .

  ?parent rdf:type dbo:Monarch .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
54,35,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and child of the father of Soe Min Wimala Dewi.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             foaf:name ""Thihapate of Mohnyin""@en .

  # Child of Thihapate who is an office holder and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:Monarch, dbo:OfficeHolder .

  # Father of Soe Min Wimala Dewi
  ?soeminwimaladewi a dbo:Person ;
                    foaf:name ""Soe Min Wimala Dewi""@en .
  ?father dbo:child ?soeminwimaladewi .

  # Predecessor of the child
  ?predecessor dbo:successor ?child .
}
```

This query assumes that DBpedia has structured data for these individuals and their relationships. Adjustments may be necessary based on actual data availability.",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
626,12,val,Give me the awardee of the award of Aleksey Petrovich Yermolov and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?role 
WHERE {
  # Define the resource for Aleksey Petrovich Yermolov
  VALUES ?yermolov { dbr:Aleksey_Petrovich_Yermolov }

  # Find awards received by Yermolov
  ?yermolov dbo:awardsReceived ?award .

  # Find his role in the Battle of Leipzig
  OPTIONAL {
    ?battle dbr:Battle_of_Leipzig .
    ?battle dbo:commander ?role .
    FILTER(?role = ?yermolov)
  }
}
```",3,3,4,2,2,3,2,20,0,0,3,0,0.0,0
392,14,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and entity in Italy.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region ?italianEntity WHERE {
  # Find Aguilar de Segarra and its time zone
  ?place a dbo:Settlement ;
         rdfs:label ""Aguilar de Segarra""@en .
  
  OPTIONAL { ?place dbo:timeZone ?timezone . }
  
  # Find the region of the time zone
  ?timezone dbo:region ?region .

  # Find sports events in Aguilar de Segarra
  ?event dbo:location ?place ;
         a dbo:SportEvent .

  # Find an Italian entity related to the same region
  ?italianEntity dbo:country dbr:Italy ;
                 dbo:region ?region .
}
```",3,4,4,2,2,2,3,28,0,0,513,0,0.0,0
392,19,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
  ?province dbo:partOf ?country ;
            rdfs:label ""Schio""@en .
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`) to simplify the query.
  
- **SELECT Clause**: We are selecting entities that represent countries.

- **Filter by Country**: `?country a dbo:Country .` ensures that the entity is classified as a country.

- **Time Zone Filter**: `?country dbo:timeZone dbr:Central_European_Time .` filters countries in the Central European Time zone.

- **Province Specification**: 
  - `?province dbo:partOf ?country ; rdfs:label ""Schio""@en .` ensures that there is a province or area named Schio within the country.
  
This query will return the country/entities that meet all these criteria.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
9,39,val,"Give me the alma mater of Allen Hill (scientist) and figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v0 <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

# Query for Allen Hill's alma mater
SELECT ?almaMater WHERE {
  ?person a dbo:Scientist ;
          foaf:name ""Allen Hill"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for an organization or educational institution in Northern Ireland with a nickname
SELECT ?entity ?nickname WHERE {
  ?entity a (dbo:EducationalInstitution|dbo:Organization) ;
          dbp:country ""Northern Ireland"" ;
          dbo:nickname ?nickname .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,30,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at French Algeria and commander in Franco-Hova Wars.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  # Person decedent at Algiers (capital of Algeria)
  ?decedentEvent dbo:place dbr:Algiers .
  ?decedentEvent dbo:agent ?person .
  
  # Person decedent in French Algeria
  ?algeriaEvent dbo:place dbr:French_Algeria .
  ?algeriaEvent dbo:agent ?person .

  # Person commander in Franco-Hova Wars
  ?warEvent dbo:commander ?person .
  ?warEvent rdfs:label ?eventLabel .
  FILTER(CONTAINS(LCASE(?eventLabel), ""franco-hova wars""))

  # Ensure the person is a human
  ?person rdf:type dbo:Person .

  # Get the name of the person
  ?person foaf:name ?name .
}
ORDER BY ?name",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,33,val,Give me the awardee of Order of Suvorov and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?name WHERE {
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person dbo:occupation ?occupation .
  FILTER(CONTAINS(LCASE(?occupation), ""commander"") || CONTAINS(LCASE(?occupation), ""military leader""))
  
  OPTIONAL { 
    ?event dbo:location dbr:Budapest .
    ?event dbo:participant ?person .
  }
  
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
64,7,val,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica and entity in Serbia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Writer ;
          dbo:deathPlace dbr:Sremska_Kamenica ;
          dbo:almaMater ?almaMater .
}
```

This query does the following:
- Uses `dbo:Writer` to filter individuals by their profession as writers.
- Filters based on `dbo:deathPlace` being Sremska Kamenica, which is represented in DBpedia as `dbr:Sremska_Kamenica`.
- Retrieves the `?almaMater` of these individuals.",3,4,4,2,2,2,2,9,0,0,1,0,0.0,0
427,28,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994) and party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyProdi ?partyAndreotti WHERE {
  # Romano Prodi's political party affiliation
  OPTIONAL { 
    dbr:Romano_Prodi dbo:politicalParty ?partyProdi .
    FILTER EXISTS { ?partyProdi rdfs:label ""Italian People's Party (1994)""@en }
  }

  # Giulio Andreotti's political party affiliation
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:politicalParty ?partyAndreotti .
  }
}
```

This query attempts to find the political parties associated with Romano Prodi and Giulio Andreotti. It specifically looks for a match where Romano Prodi was affiliated with the ""Italian People's Party (1994)"".",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
801,27,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v1 <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify the album ""What U See Is What U Get""
  dbr:What_U_See_Is_What_U_Get a dbo:MusicalWork .

  # Find artists associated with this album
  ?albumArtist dbo:associatedBandOrMusicGroup dbr:What_U_See_Is_What_U_Get ;
              a dbo:Agent .

  # Ensure the artist is also a musical artist and an artist
  ?albumArtist a dbo:MusicalArtist .
  ?albumArtist a dbo:Artist .

  # Bind the artist to the variable
  BIND(?albumArtist AS ?artist)
}
```",3,7,4,3,1,3,3,71,0,0,50,0,0.0,0
328,28,val,"Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Minister_of_Defence_(Soviet_Union) ;
          dbo:awardReceived dbr:Order_of_the_British_Empire ;
          dbp:name ?name .

  OPTIONAL { ?person dbo:spouseOrPartner ?partner . }
  
  FILTER(CONTAINS(LCASE(?name), ""georgy zhukov""))
}
```

This query does the following:
- Selects individuals who are of type `dbo:Person`.
- Filters those who held the occupation of Minister of Defence of the Soviet Union.
- Checks for an award received, specifically the Order of the British Empire, which was awarded by Bruce Fraser to Zhukov.
- Uses a filter to narrow down to Georgy Zhukov based on his name.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,35,val,Give me the administration of the father of Emperor Go-Mizunoo and birth place of the commander in Boshin War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPeriod ?birthPlace
WHERE {
  # Administration period of Emperor Ōgimachi
  dbr:Emperor_Ogimachi dbo:reignStart ?start .
  dbr:Emperor_Ogimachi dbo:reignEnd ?end .
  BIND(CONCAT(?start, "" - "", ?end) AS ?administrationPeriod)

  # Birthplace of Saigō Takamori
  dbr:Saigo_Takamori dbo:birthPlace ?birthPlace .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
345,12,val,"Give me the figure known as Stolz von Liechtenstein and team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer ;
          dbo:birthDate ""1978-09-15""^^xsd:date ;
          rdfs:label ""Stolz von Liechtenstein""@en .
  
  OPTIONAL { 
    ?person dbo:managerTeam ?team .
  }
  
  FILTER (lang(?personLabel) = 'en')
}
```

This query does the following:
- It selects individuals who are of type `dbo:SoccerPlayer`.
- It filters those born on ""1978-09-15"".
- It checks if their label matches ""Stolz von Liechtenstein"" in English.
- It optionally retrieves any team they manage.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
488,40,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace ?administrationLocation
WHERE {
  # Saitō Hajime's birthplace
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .

  # Emperor Go-Yōzei's administration location (capital)
  dbr:Emperor_Go-Yōzei dbo:ruledDuring ?administrationLocation .
}
```",5,8,6,3,3,3,3,71,0,0,1,0,0.0,0
360,15,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?v1 <http://dbpedia.org/property/writer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist dbr:Manfred_Mann ;
         dbo:composer ?writer .
  ?writer foaf:name ""Dave Flett"" .
}
```

This query does the following:
- It looks for albums (`?album`) associated with Manfred Mann as an artist.
- It retrieves the composer or writer of those albums (`?writer`).
- It filters to find a writer named Dave Flett.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
314,12,val,Give me the commander in Spanish Civil War and awardee of 30 and person deceased at Madrid.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson ;
          dbo:deathPlace dbr:Madrid ;
          dbo:awardReceived dbr:Order_of_the_Golden_Fleece ;
          dbo:causeOfDeath ?cause .
  
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'es') }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`).
- **SELECT**: We are selecting the person and their name.
- **FILTER**: The query filters individuals who:
  - Are a `MilitaryPerson`.
  - Died in Madrid (`dbo:deathPlace dbr:Madrid`).
  - Received the Order of the Golden Fleece (`dbo:awardReceived dbr:Order_of_the_Golden_Fleece`).
- **OPTIONAL**: We use an optional clause to get the name in Spanish if available.

This query assumes that DBpedia has structured data for these specific attributes. Adjustments might be necessary based on actual data availability and structure.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
232,22,val,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann and child of Jon Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativePlace WHERE {
  # Find Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en .
  
  ?residence dbo:resident ?sylvie ;
             dbo:settlementType ?settlementType ;
             dbo:country dbr:United_Kingdom .

  # Ensure the residence is a settlement
  FILTER(?settlementType IN (dbo:Settlement, dbo:Town, dbo:CivilParish))

  # Find Jon Pertwee's child connection to the residence
  ?jon a dbo:Person ;
       foaf:name ""Jon Pertwee""@en .
  
  ?child dbo:parent ?jon ;
         dbo:residence ?residence .

  # Get the native place of the residence
  ?residence dbp:nativePlace ?nativePlace .
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
838,13,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandOfMember
WHERE {
  # Žika Jelić is a member of a band
  ?band dbo:member Žika_Jelić .
  
  # The band has members who are artists and musical artists
  ?band dbo:member ?member .
  ?member rdf:type dbo:Artist ;
          rdf:type dbo:MusicalArtist .

  # Get the band of such a member
  ?member dbp:bands ?bandOfMember .
}
```",3,7,4,3,1,3,2,20,0,0,21,0,0.0,0
16,23,val,Give me the spouse of the person born as the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Ted McGinley's resource and his birth name
  dbr:Ted_McGinley dbo:birthName ""Ted McGinley"" .
  
  # Step 2: Find the spouse of Ted McGinley
  dbr:Ted_McGinley dbo:spouse ?spouse .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
427,25,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Romano_Prodi 
    dbr:Giulio_Andreotti
  }
  
  ?person dbo:birthName ?name .
  FILTER(?name IN (""Romano Antonio Prodi"", ""Giulio Andreotti""))
  
  OPTIONAL { ?person dbo:party ?party . }
  OPTIONAL { ?person dbo:officeHolder ?office . }
  
  FILTER EXISTS {
    ?person a dbo:Politician .
    ?person a dbo:OfficeHolder .
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel .
    FILTER(LANG(?partyLabel) = 'en')
  }
}
ORDER BY ?person
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
427,43,val,Give me the reference to Partito Popolare Italiano and party of Romano Prodi and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v4 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v4 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party1Label ?party2Label ?party3Label
WHERE {
  # Partito Popolare Italiano
  dbr:Partito_Popolare_Italiano dbo:wikiPageRedirects ?party1 .
  
  # Party of Romano Prodi (Democratic Party)
  dbr:Romano_Prodi dbo:politicalParty ?party2 .
  
  # Party associated with the father of an MIT alumnus (Barack Obama Sr.)
  dbr:Barack_Obama dbo:father dbr:Barack_Obama_Sr .
  dbr:Barack_Obama_Sr dbo:politicalAffiliation ?party3 .

  # Get labels for readability
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
30,7,val,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder and native of the birthplace of Silvia Cohen.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Find the birthplace of Silvia Cohen
  ?silviaCohen dbo:nationality dbr:Israel ;
               dbo:birthPlace ?birthPlace .

  # Step 2: Find individuals who are natives of this location
  ?person dbo:birthPlace ?birthPlace .

  # Step 3: Filter based on professions
  {
    ?person dbo:occupation dbr:Financier .
  } UNION {
    ?person dbo:occupation dbr:Businessman .
  } UNION {
    ?person dbo:occupation dbr:Vineyard_owner .
  } UNION {
    ?person dbo:occupation dbr:Art_collector .
  } UNION {
    ?person dbo:occupation dbr:Racehorse_owner .
  }
}
```",3,3,4,2,2,2,2,9,0,43,1,0.0,0.0,0
314,16,val,"Give me the person deceased at Madrid and commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace ?profession ?event
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Lisa Gavrić""@en ;
          dbo:deathPlace ?deathPlace ;
          dbo:occupation ?profession .
  
  FILTER(CONTAINS(LCASE(?deathPlace), ""madrid""))
  FILTER(CONTAINS(LCASE(?profession), ""commander""))

  OPTIONAL {
    ?event dbo:agent ?person ;
           a dbo:Event, dbo:SocietalEvent .
  }
}
```

This query does the following:
- Selects individuals who are of type `dbo:Person`.
- Filters for those named ""Lisa Gavrić"".
- Checks if their death place contains ""Madrid"" and their occupation includes ""commander"".
- Optionally selects events that involve this person, ensuring these events are both a general event (`dbo:Event`) and specifically a societal event (`dbo:SocietalEvent`).",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
994,25,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?bandMember
WHERE {
  # Find associated musical artist of Red Tide (band)
  OPTIONAL {
    dbr:Red_Tide_(band) dbo:musicalArtist ?associatedArtist .
  }

  # Find band member who is a musical artist and was born as Donald Maynard Dokken
  OPTIONAL {
    ?person dbp:birthName ""Donald Maynard Dokken"" ;
            dbo:memberOfBand ?bandMember ;
            dbo:musicalArtist ?musicalArtist .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
801,24,val,"Give me the associated musical artist of Chris Taylor (music producer) and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v2 <http://dbpedia.org/ontology/producer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Identify Chris Taylor as a music producer
  dbr:Chris_Taylor_(music_producer) dbo:profession dbr:Music_producer .
  
  # Find works produced by Chris Taylor that are songs or musical works
  ?work dbo:producer dbr:Chris_Taylor_(music_producer) ;
        a dbo:Songs .

  # Check if these works involve 50 Cent
  ?work dbo:artist dbr:50_Cent ;
        dbp:associatedActs ?artist .
  
  FILTER(?artist != dbr:50_Cent)
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
696,11,val,Give me the landmark at elevation of 50 and birth place of the member of Dropkick Murphys.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthPlace WHERE {
  ?landmark a dbo:Lighthouse ;
            dbo:elevationAboveSeaLevel ?elevation .
  FILTER (?elevation = ""50""^^xsd:float)

  ?member dbo:band dbr:Dropkick_Murphys ;
          dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,31,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?royalChild
WHERE {
  # Antiochus II Theos and his successor
  dbr:Antiochus_II_Theos dbo:successor ?successor .
  
  # Ensure the successor is royalty
  ?successor a dbo:Monarch .

  # Find a child of the successor who is royalty
  ?successor dbo:child ?royalChild .
  ?royalChild a dbo:Monarch .

  # Laodice IV and her spouse
  dbr:Laodice_IV dbo:spouse ?spouse .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
328,30,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:commanderOf ?easternFront .
  ?person dbo:leaderOf ?office .
  ?person dbo:awardeeOfOrderOfSuvorov true .
  ?person rdfs:label ?name .
  FILTER (CONTAINS(LCASE(?name), ""georgy zhukov""))
}
```

This query does the following:
- Searches for a person who was a commander on the Eastern Front (`dbo:commanderOf`).
- Checks if this person led an office or agency (`dbo:leaderOf`).
- Confirms that they were awarded the Order of Suvorov (`dbo:awardeeOfOrderOfSuvorov`).
- Filters results to include only those with a name containing ""Georgy Zhukov"".",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
427,23,val,Give me the reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Person ;
          foaf:name ""Michele Pinto""@en .
  OPTIONAL { ?person dbo:partyAffiliation ?party . }
}
```",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
328,39,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and commander in Eastern Front (World War II).",SELECT ?result WHERE { <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v0 <http://dbpedia.org/property/office> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leaderOfOffice WHERE {
  # Step 1: Identify Gustav Jonson's role as a politician
  ?gustavJonson dbo:occupation dbr:Politician .
  
  # Step 2: Find the leader related to Gustav Jonson
  ?relatedLeader dbo:officeHolder ?gustavJonson .

  # Step 3: Identify the commander in Eastern Front (World War II)
  ?commander dbo:role dbr:Commander_in_the_Eastern_Front_(World_War_II) .
  
  # Step 4: Find the office or agency led by this commander
  ?office dbo:leader ?commander .

  # Step 5: Identify the current leader of that office
  ?currentLeader dbo:leaderOf ?office .

  FILTER(?relatedLeader = ?commander)
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
232,34,val,Give me the child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Jon Pertwee's resource
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee"" ;
          dbp:birthName ?birthName ;
          dbp:nativePlace dbr:London .

  # Find the child of Jon Pertwee
  ?child dbo:parent ?person .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
281,31,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee ?war ?entityInNewZealand
WHERE {
  # Find Jonathon Band and his awards
  ?person rdfs:label ""Jonathon Band""@en .
  ?person dbo:honoraryAward ?award .

  # Find the awardees of those awards
  ?award dbo:recipient ?awardee .

  # Check if any awardee is connected to a war
  OPTIONAL {
    ?awardee dbo:participatedIn ?war .
  }

  # Find entities related to the Colony of New Zealand
  ?entityInNewZealand dbo:country dbr:Colony_of_New_Zealand .

  # Link the awardee or award to an entity in the Colony of New Zealand
  OPTIONAL {
    ?awardee dbo:birthPlace ?entityInNewZealand .
    UNION
    ?award dbo:location ?entityInNewZealand .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
9,24,val,Give me the figure known as QUB and alma mater of the awardee of Royal Medal.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?almaMater WHERE {
  ?awardee dbo:honoraryTitle ""Royal Medal"" .
  ?awardee dbo:almaMater dbr:Queen's_University_Belfast .
  BIND(dbr:Queen's_University_Belfast AS ?almaMater)
}
```

This query does the following:
- It selects individuals (`?awardee`) who have been awarded the Royal Medal.
- It checks if their alma mater is Queen's University Belfast (`dbr:Queen's_University_Belfast`).
- It binds the alma mater to `?almaMater` for clarity in results.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,38,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  dbr:Ernest_Augustus,_Duke_of_Brunswick a dbo:Person ;
    dbo:father ?father .

  # Step 2: Find the father's children
  ?father dbo:child ?child .

  # Step 3: Filter to include only royals
  ?child a dbo:Monarch .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
232,33,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and child of Jon Pertwee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Identify Jon Pertwee's child who is an actor, narrator, and producer
  ?child a dbo:Actor ;
         dbo:spouseOrPartner ?parent .
  FILTER (?parent = dbr:Jon_Pertwee)
  
  ?child dbo:narratorOf ?narration .
  ?child dbo:producerOf ?production .

  # Find claims to fame that are both films and military conflicts
  ?claimToFame a dbo:Film ;
               dbo:militaryConflict ?conflict .

  # Link the child to these claims to fame
  ?child dbo:claimToFame ?claimToFame .
  
  # Retrieve the actor associated with the claim to fame
  ?actor dbo:actor ?claimToFame .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,40,val,Give me the war of the awardee of the award of Jonathon Band and entity in Colony of New Zealand and war of New Zealand Army.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . ?v1 <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?warNewZealandArmy ?warColonyNZ
WHERE {
  # Find Jonathon Band and his awards
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Jonathon Band"" .
    ?person dbo:honoraryAward ?award .
  }

  # Wars involving the New Zealand Army
  ?warNewZealandArmy dbo:participatingMilitaryUnit dbr:New_Zealand_Army .

  # Historical wars involving the Colony of New Zealand
  ?warColonyNZ dbo:location dbr:Colonial_New_Zealand ;
              dbo:participatingMilitaryUnit ?militaryUnit .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
421,17,val,Give me the person born as Edin Dervišhalidović and native of the birthplace of Samir Bekrić.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Samir Bekrić's birthplace
  dbr:Samir_Bekrić dbo:birthPlace ?birthPlace .

  # Find Edin Dervišhalidović who was born in the same place
  ?person rdfs:label ""Edin Dervišhalidović""@en .
  FILTER(LANG(?person) = 'en')
  ?person dbo:birthPlace ?birthPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,14,val,"Give me the father of the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Princess Pauline of Saxe-Weimar-Eisenach
  VALUES ?princess { dbr:Princess_Pauline_of_Saxe-Weimar-Eisenach }
  
  # Step 2: Find her spouse who is royalty
  ?spouse dbo:spouseOf ?princess .
  ?spouse a dbo:Monarch .

  # Step 3: Determine their children and identify those who are royalty
  ?child dbo:parent ?spouse ;
         dbo:parent ?princess .
  ?child a dbo:Monarch .

  # Step 4: Retrieve the father of that royal child
  ?father dbo:parent ?child .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
485,14,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in United Kingdom.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Writer .
  ?person a dbo:Poet .
  ?award dbo:recipient ?person ;
         rdfs:label ""Eric Gregory Award""@en .
  OPTIONAL { ?person dbo:birthPlace ?birthPlace . }
  FILTER EXISTS { 
    ?person dbp:nationality dbr:United_Kingdom .
  }
}
ORDER BY ?person
LIMIT 10",3,5,4,2,2,2,3,28,0,0,5,0,0.0,0
404,18,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:child dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
  ?person dbo:spouse dbr:Victoria_Louise_of_Prussia .
  ?person dbo:parent dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
767,26,val,Give me the alma mater of the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?v2 <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMater .
}
```",3,3,4,3,1,3,3,71,0,0,6,0,0.0,0
915,11,val,"Give me the father of Lizzie Spaulding and resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Find Lizzie Spaulding's father
  ?lizzie a dbo:Person ;
          dbp:father ?father .

  FILTER (str(?lizzie) = ""Lizzie_Spaulding"") .

  # Find Stephen Verona's birthplace that is a settlement
  ?stephen a dbo:Person ;
           dbp:birthPlace ?birthPlace .
  
  ?birthPlace a dbo:Settlement .

  FILTER (str(?stephen) = ""Stephen_Verona"") .

  # Ensure the father is also a resident of Stephen Verona's birthplace
  ?father dbo:residenceLocation ?birthPlace .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
617,40,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouseChild WHERE {
    # Antiochus II Theos and his successors who are royalty
    ?antiochus2 dbo:successor ?successor .
    FILTER (strstarts(str(?antiochus2), ""Antiochus_II_Theos"") && 
            strstarts(str(?successor), ""Royal""))

    # Successor's child who is royalty
    ?successorChild dbo:childOf ?successor .
    FILTER (strstarts(str(?successorChild), ""Royal""))

    # Laodice IV and her spouse
    dbr:Laodice_IV dbo:spouse ?spouse .

    # Spouse's child who is the successor's child and royalty
    ?spouseChild dbo:childOf ?spouse .
    FILTER (?spouseChild = ?successorChild)

    # Ensure the spouse's child is a parent of Nysa (wife of Pharnaces I of Pontus)
    ?nysa dbo:parent ?spouseChild .
    FILTER (strstarts(str(?nysa), ""Nysa_(wife_of_Phar"") &&
            strstarts(str(?nysa), ""Pharnaces_I_of_Pontus"")))
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
492,32,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent ?militaryConflict WHERE {
  # Find Joseph C. Satterthwaite's resource
  dbr:Joseph_C._Satterthwaite dbo:positionHeld dbr:Assistant_Secretary_of_State_for_African_Affairs .
  
  # Identify his decedent who was a commander in a military conflict
  ?decedent dbo:deceased dbr:Joseph_C._Satterthwaite ;
           dbo:occupation dbr:Military_Commander ;
           dbo:participatedIn ?militaryConflict .

  # Ensure the military conflict involved Frédéric-Georges Herr
  ?militaryConflict dbo:participant dbr:Frédéric-Georges_Herr .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
838,11,val,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa and band member of Kerber.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?band WHERE {
  ?person dbo:memberOfBand <http://dbpedia.org/resource/YU_Grupa> .
  ?person dbo:memberOfBand <http://dbpedia.org/resource/Kerber_(band)> .
  ?person dbo:memberOfBand ?band .
  FILTER(?band != <http://dbpedia.org/resource/YU_Grupa>)
  FILTER(?band != <http://dbpedia.org/resource/Kerber_(band)>)
}
```

This query does the following:
- It selects individuals (`?person`) who are members of both YU Grupa and Kerber.
- It then finds other bands (`?band`) that these individuals are part of, excluding YU Grupa and Kerber themselves to avoid redundancy.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
659,27,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?militaryForce WHERE {
  # Find Rutger Jan Schimmelpenninck's related events
  ?event dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
  
  # Ensure the event is both a societal event and a military conflict
  ?event rdf:type dbo:SocietalEvent ;
         rdf:type dbo:MilitaryConflict .

  # Find the military force associated with this event
  ?event dbo:militaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1127,0,0.0,0
767,37,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to .,"SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v3 <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  VALUES ?person { dbr:George_Kilbon_Nash }
  ?person dbo:almaMater ?university .
}
```

This query uses the `dbo:almaMater` property to find the university associated with George Kilbon Nash. The `VALUES` clause specifies the resource for George Kilbon Nash, and the query retrieves any linked universities.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
994,36,val,"Give me the associated musical artist of S.A. Slayer and band member of the person born, that is a musical artist, as the persona of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v3 . ?v0 <http://dbpedia.org/property/birthName> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find S.A. Slayer as a musical artist
  dbr:S._A._Slayer dbo:musicalArtistOf ?artist.

  # Find Don Dokken and his band members
  dbr:Don_Dokken dbo:birthName ""Donald Jay Dokken"" .
  dbr:Don_Dokken dbo:member ?bandMember .

  # Ensure the band member is a musical artist
  ?bandMember rdf:type dbo:MusicalArtist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
981,15,val,"Give me the birth place of Novia Indriani Mamuaja and entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?entityInRegion WHERE {
  # Find Novia Indriani Mamuaja's birthplace
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Novia Indriani Mamuaja"" ;
            dbo:birthPlace ?birthPlace .
  }

  # Find entities in the region of the time zone in Salak, North Sumatra
  ?region dbp:timeZone dbr:Time_zone_in_Salak,_North_Sumatra ;
          dbo:wikiPageRedirects ?entityInRegion .

}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
659,34,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?office ?militaryRole WHERE {
  ?person dbo:nationality dbr:Ireland .
  ?person dbo:occupation dbr:Military_officer .
  
  OPTIONAL { 
    ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
    ?person rdfs:label ?office .
  }
  
  OPTIONAL {
    ?person dbo:militaryConflict dbr:Napoleonic_Wars .
    ?person rdfs:label ?militaryRole .
  }

  FILTER (lang(?office) = 'en' && lang(?militaryRole) = 'en')
}
ORDER BY ?person
LIMIT 10
```",4,5,5,3,2,3,3,71,0,0,34,0,0.0,0
184,37,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Archduchess Ilona of Austria.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Step 1: Find the parent of Archduke Ladislaus Philipp of Austria
  ?parent dbo:spouse ?ladislaus .
  ?ladislaus dbp:name ""Ladislaus Philipp of Austria""@en ;
             dbo:child ?archduke .

  # Step 2: From that parent, find their child (the grandchild of Ladislaus)
  ?parent dbo:child ?childOfChild .

  # Step 3: Ensure this child is royalty
  ?childOfChild a dbo:RoyalFamilyMember .

  # Step 4: Check if they are the parent of Archduchess Ilona of Austria
  ?childOfChild dbo:child ?ilona .
  ?ilona dbp:name ""Ilona of Austria""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
182,17,val,Give me the entity in Sri Lanka and war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInSriLanka ?war
WHERE {
  # Gotabhaya Rajapaksa's DBpedia resource
  dbr:Gotabhaya_Rajapaksa dbo:nationality dbr:Sri_Lankan ;
                          dbo:occupation dbr:Military_officer .

  # Entity in Sri Lanka related to his work
  ?entityInSriLanka a dbo:Place ;
                   dbo:country dbr:Sri_Lanka ;
                   dbo:relatedTo dbr:Gotabhaya_Rajapaksa .

  # War associated with Gotabhaya Rajapaksa's work
  ?war a dbo:Military_conflict ;
      dbo:place dbr:Sri_Lanka ;
      dbo:relatedTo dbr:Gotabhaya_Rajapaksa .
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
161,36,val,"Give me the commander in the force, that is an event, of the figure known as El Director and military force of Rif War.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Identify the event related to the Rif War
  ?event dbo:wikiPageRedirects dbr:Rif_War .
  
  # Find the military force involved in this event
  ?militaryForce dbo:participatedIn ?event ;
                 dbo:commander ?commander .

  # Filter for ""El Director""
  ?commander foaf:name ""El Director""@en .
}
```",4,5,5,3,2,3,3,71,0,0,12,0,0.0,0
547,33,val,Give me the resting place of the actor of the show with Emily Richard and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?burtonRestingPlace WHERE {
  # Actor from ""Emily Owens, M.D.""
  OPTIONAL {
    ?show dcterms:title ""Emily Owens, M.D.""@en .
    ?show dbo:starring ?actor .
    ?actor dbo:deathPlace ?actorDeathPlace .
    ?actorDeathPlace dbo:location ?actorRestingPlace .
  }

  # James Burton (Egyptologist)
  OPTIONAL {
    dbr:James_Burton_(Egyptologist) dbo:deathPlace ?burtonDeathPlace .
    ?burtonDeathPlace dbo:location ?burtonRestingPlace .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
701,40,val,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II and parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfHenuttawy ?spouseOfRamessesII ?parentOfChild
WHERE {
  # Parent of Henuttawy (19th dynasty)
  ?henuttawy dbo:birthPlace ?place .
  ?henuttawy dbo:fatherOrMother ?parentOfHenuttawy .
  FILTER(CONTAINS(LCASE(?henuttawy), ""henuttawy"") && CONTAINS(LCASE(?place), ""19th dynasty""))

  # Spouse of Ramesses II
  ?ramessesII dbo:spouse ?spouseOfRamessesII .
  FILTER(CONTAINS(LCASE(?ramessesII), ""ramesses ii""))

  # Parent of the child of the spouse of Amun-her-khepeshef
  ?amunHerKhepeshef dbo:spouse ?spouseAmunHerKhepeshef .
  ?childOfSpouse dbo:parent ?spouseAmunHerKhepeshef .
  ?spouseAmunHerKhepeshef dbo:fatherOrMother ?parentOfChild .

}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,37,val,"Give me the band member of Don Dokken and associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist ?secondBand
WHERE {
  # Don Dokken and his band
  dbr:Don_Dokken dbo:memberOf ?donDokkenBand .
  
  # Band member of Don Dokken's band
  ?bandMember dbo:memberOf ?donDokkenBand .
  
  # Associated musical artist of the band member
  ?associatedArtist dbo:associatedMusicalArtist ?bandMember .
  
  # The associated artist is part of a second band or group that is an organization
  ?secondBand dbo:member ?associatedArtist ;
              a dbo:Band ;
              a dbo:Organization .

  # This second band is connected to Fredrik Thordendal
  ?secondBand dbo:member dbr:Fredrik_Thordendal .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
421,13,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?bandName WHERE {
  ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
  ?person dbo:award ?award .
  ?bandMember dbo:member ?band .
  ?band rdfs:label ?bandName .
  FILTER(LANG(?bandName) = ""en"")
  ?bandMember dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .
  ?person dbp:name ?bandMember .
}
ORDER BY ?bandName
LIMIT 10",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
378,38,val,Give me the claim to fame of the commander in Great Siege of Gibraltar and war of the commander in Peninsular War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?fame WHERE {
  VALUES ?person { 
    dbr:George_Augustus_Eliott 
    dbr:Arthur_Wellesley_1st_Duke_of_Wellington
  }
  
  OPTIONAL { ?person dbo:famousFor ?fame . }
}
```",4,4,5,2,2,3,3,71,0,2,2,0.0,0.0,0
626,13,val,"Give me the commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInConflict
WHERE {
  # Step 1: Find the commander of the Battle of Paris (1814)
  ?battle a dbo:MilitaryEngagement ;
          dbo:commander ?commanderParis .

  FILTER(STRSTARTS(STR(?battle), ""http://dbpedia.org/resource/Battle_of_Paris_(1814)""))

  # Step 2: Find the military conflict associated with this commander
  ?conflict a dbo:MilitaryConflict ;
            dbo:commander ?commanderParis .

  # Step 3: Find the commander of that military conflict
  ?conflict dbo:commander ?commanderInConflict .
}
```",3,4,4,3,1,3,2,20,0,0,364,0,0.0,0
356,11,val,Give me the player in the successor of 2014 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v2 . ?v2 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team
WHERE {
  # Find the successor of the 2014 Sacramento Republic FC season
  dbr:Sacramento_Republic_FC dbo:sportTeamInSeason [
    dbo:seasonYear ?year ;
    dbo:successor ?nextSeason .
  ] FILTER(?year = ""2014"")

  # Get players in the next season
  ?player dbo:playsForTeam ?team .
  ?team dbo:sportTeamInSeason ?nextSeason .

  # Find Mark Briggs's team
  dbr:Mark_Briggs dbo:playsForTeam ?markBriggsTeam .

  # Return player and their team, ensuring it matches the successor season
  FILTER(?team != ?markBriggsTeam)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
9,41,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?university WHERE {
  # Identify QUB
  VALUES ?qub { dbr:Queen's_University_Belfast }

  # Find the mayor of Northern Ireland Forum who attended QUB
  ?mayor dbo:almaMater ?qub ;
         dbo:occupation dbr:Politician ;
         dbp:position ""Mayor of Northern Ireland Forum""@en .

  # Find the awardee of Royal Medal who attended QUB
  ?awardee dbo:almaMater ?qub ;
           dbo:honoraryTitle dbr:Royal_Medal .

  # Ensure both conditions are met for the same university
  ?university rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""queen's university belfast""))
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
54,33,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfCommonEntity
WHERE {
  # Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbr:Thado_Minsaw_of_Prome ;
               dbo:childOf ?parentOfThadoMinsaw .

  # Parent's child (grandchild of Thado Minsaw)
  ?parentOfThadoMinsaw dbo:child ?grandChildOfThadoMinsaw .

  # Thinkhaya of Pagan and his child
  ?thinkhaya a dbr:Thinkhaya_of_Pagan ;
             dbo:child ?childOfThinkhaya .

  # Common entity that is both the grandchild of Thado Minsaw and child of Thinkhaya
  FILTER (?grandChildOfThadoMinsaw = ?childOfThinkhaya) .

  # Parent of this common entity
  ?commonEntity dbo:parent ?parentOfCommonEntity .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,34,val,Give me the person born as Georgeanne Marie Rice and spouse of the person born as the birth name of Ted McGinley.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:birthName ""Georgeanne Marie Rice""@en .
  ?person dbo:spouse ?spouse .
  FILTER NOT EXISTS { ?person dbo:spouse ?otherSpouse . FILTER(?otherSpouse != ?spouse) }
}
```

This query does the following:
- It looks for a person with the birth name ""Georgeanne Marie Rice"".
- It retrieves that person's spouse.
- The `FILTER` clause ensures we only get one spouse, assuming monogamy in this context.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,14,val,"Give me the team of the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  # Step 1: Identify Gary Williams (footballer, born 1960)
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is an English settlement
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:England .

  # Step 3: Find a native of this place who is both a soccer player and a soccer manager
  ?person dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation ?occupation1, ?occupation2 .
  
  FILTER (?occupation1 = dbp:Soccer_player && ?occupation2 = dbp:Soccer_manager)

  # Step 4: Get the team of this person
  ?person dbo:currentTeam ?team .
}
```",3,7,4,3,1,3,2,20,0,0,46,0,0.0,0
617,35,val,"Give me the parent of the child of Antiochus (son of Antiochus III the Great) and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v2 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
    # Antiochus (son of Antiochus III the Great)
    ?antiochus3 a dbo:Monarch ;
                dbo:spouse ?wife .
    
    ?child1 dbo:father ?antiochus3 ;
            a dbo:Person .

    # Seleucus II Callinicus
    ?seleucus2 a dbo:Monarch ;
               dbo:spouse ?wife2 .

    ?grandchild2 dbo:parent ?child2 ;
                 dbo:parent ?seleucus2 ;
                 a dbo:RoyalFamilyMember .

    # Find the parent of both child1 and grandchild2
    ?parent dbo:child ?child1 .
    ?parent dbo:child ?grandchild2 .
}
```

This query assumes that:
- The children are directly linked to their parents via `dbo:father` or `dbo:mother`.
- Royal family members can be identified with the class `dbo:RoyalFamilyMember`.",4,5,5,2,2,3,3,71,0,0,2,0,0.0,0
232,39,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France and actor of Dog Soldiers (film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?nativePlace WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Francois ; # Assuming the politician is Francois Weller
          dbo:actorInFilm dbr:Dog_Soldiers_(film) ;
          dbp:residence ?settlement .
  
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom ;
              dbp:nativePlace ?nativePlace .

}
```

This query assumes that the politician in question is Francois Weller, who fits the criteria of being both an actor in ""Dog Soldiers"" and a French politician. Adjust the resource identifier `dbr:Francois` if necessary to match the exact DBpedia entry for the person you are referring to.",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
626,11,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?conflict WHERE {
  # Find Alexander I of Russia
  ?alexander a dbo:Monarch ;
             foaf:name ""Alexander I""@en ;
             dbo:country dbr:Russia .

  # Identify the person who received the Order of St. Andrew and was associated with Alexander I
  ?person dbo:awardeeOf dbr:Order_of_St._Andrew ;
          dbo:monarch ?alexander ;
          dbo:militaryCommanderIn ?conflict .

  # Ensure the conflict is a military conflict
  ?conflict a dbo:MilitaryConflict .
}
```",3,4,4,2,2,3,2,20,0,0,9,0,0.0,0
547,22,val,Give me the resting place of James Burton (Egyptologist) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  # James Burton (Egyptologist)
  VALUES ?person { 
    dbr:James_Burton_(Egyptologist) 
  }
  
  OPTIONAL {
    ?person dbo:deathPlace ?restingPlace .
  }

  UNION

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  ?awardee dbo:honoraryTitle ""Knight Grand Cross of the Order of St Michael and St George""@en ;
           dbo:deathPlace ?restingPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
701,42,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah and parent of the child of Nefertari.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Henuttawy (19th dynasty) parent
  OPTIONAL { 
    dbr:Henuttawy_(19th_dynasty_of_Egypt) dbo:parent dbr:?henuttawyParent .
  }
  
  # Merneptah's father and his spouse
  dbr:Ramesses_II dbo:child dbr:Merneptah .
  dbr:Ramesses_II dbo:spouse ?spouse .

  # Nefertari's child (Merneptah) parent
  OPTIONAL {
    dbr:Nefertari dbo:child dbr:Merneptah .
    dbr:Merneptah dbo:parent dbr:Ramesses_II .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
959,18,val,Give me the member of University of Tsukuba and native of Japan and manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # University of Tsukuba membership
  ?person dbo:almaMater dbr:University_of_Tsukuba .
  
  # Native of Japan
  ?person dbo:nationality dbr:Japan .

  # Manager of Júbilo Iwata in 2013
  ?managerPosition dbp:team dbr:Júbilo_Iwata ;
                   dbp:season ""2013""^^xsd:string ;
                   dbp:player ?person .
}
```

This query uses the following prefixes:
- `dbo:` for DBpedia ontology properties.
- `dbr:` for DBpedia resources.
- `dbp:` for DBpedia properties.

The query looks for a person (`?person`) who satisfies all three conditions:
1. They are an alumnus of the University of Tsukuba.
2. Their nationality is Japan.
3. They were listed as a manager for Júbilo Iwata in the 2013 season.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
404,20,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .

  # Check if the spouse has a child who is royalty and related to Ernest Augustus, Duke of Brunswick
  ?spouse dbo:child ?child .
  ?child rdf:type dbo:Monarch .
  
  OPTIONAL {
    ?child dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick .
  }
}
```

This query does the following:
- It starts by identifying Princess Victoria Louise of Prussia and her spouse.
- Then, it checks if this spouse has any children who are classified as a Monarch (a type of royalty).
- Finally, it optionally checks if one of these children is related to Ernest Augustus, Duke of Brunswick.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
232,26,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?person a dbo:Actor ;
          dbo:narratorOf ?narration ;
          dbo:producerOf ?production .
  
  ?person dbo:claimToFame ?fame .
  
  ?fame rdf:type dbo:Film ;
        rdfs:label ?filmLabel .

  OPTIONAL { 
    ?fame rdf:type dbo:MilitaryConflict ;
          rdfs:label ?conflictLabel .
  }
  
  FILTER (CONTAINS(LCASE(?filmLabel), ""actor"") && CONTAINS(LCASE(?conflictLabel), ""military conflict""))
  
  ?person foaf:name ?actor .
}
LIMIT 10",3,5,4,3,1,3,3,71,0,0,3,0,0.0,0
281,21,val,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?war
WHERE {
  ?person a dbo:Person .
  ?person dbo:honoraryTitle dbr:Knight_Bachelor ; # Assuming Knight Grand Cross is linked to this title
          dbo:militaryService dbr:New_Zealand_Army ;
          dbo:participatedInWar ?war .
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`), resources (`dbr`), and properties (`dbp`).
- **SELECT DISTINCT**: We select distinct persons and wars to avoid duplicates.
- **?person a dbo:Person**: Ensures we are dealing with individuals.
- **?person dbo:honoraryTitle dbr:Knight_Bachelor**: Filters for those awarded the Knight Grand Cross of the Order of the Bath. Note that DBpedia might not have a direct resource for ""Knight Grand Cross,"" so this is an approximation using `Knight Bachelor`.
- **?person dbo:militaryService dbr:New_Zealand_Army**: Ensures the person served in the New Zealand Army.
- **?person dbo:participatedInWar ?war**: Retrieves wars they participated in.

This query assumes that DBpedia has structured data for these relationships. Adjustments might be necessary based on actual DBpedia schema and available data.",3,3,4,2,2,3,3,71,0,0,9,0,0.0,0
488,41,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v2 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?birthPlace ?deathPlace
WHERE {
  # Administration of Emperor Go-Yōzei
  OPTIONAL {
    dbr:Emperor_Go-Yōzei dbo:reignStart ?startYear .
    dbr:Emperor_Go-Yōzei dbo:reignEnd ?endYear .
    BIND(CONCAT(""Reigned from "", STR(?startYear), "" to "", STR(?endYear)) AS ?administration)
  }

  # Birthplace of the commander in the Boshin War
  OPTIONAL {
    dbr:Takigawa_Kunihide dbo:birthPlace ?birthPlace .
  }

  # Death place of the father, who is a politician, of Yūki Hideyasu
  OPTIONAL {
    dbr:Yūki_Hideyasu dbo:father ?father .
    ?father rdf:type dbo:Politician .
    ?father dbo:deathPlace ?deathPlace .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
767,31,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert.",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Find Dustin Lynch's writer role for ""Where It's At""
  ?dustin a dbo:Singer ;
          dbo:song [""Where It's At""@en] .

  # Find Carl L. Nippert's alma mater
  ?carl a dbo:Person ;
        dbo:almaMater ?university .

  # Identify the common entity in administration or settlement
  ?settlement dbo:administrator ?dustin ;
              (dbo:administrator|dbo:settlement) ?carl .
}
```

This query attempts to find a settlement that is administratively linked to both Dustin Lynch and Carl L. Nippert, based on their respective roles as a singer/writer and an alumnus.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
994,34,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberOfDonDokken WHERE {
  # Step 1: Find a musical artist associated with Watchtower
  ?artist dbo:associatedBand dbr:Watchtower .
  
  # Step 2: Find another musical artist associated with the first artist
  ?secondArtist dbo:associatedBand ?artist .

  # Step 3: Find band members of Don Dokken
  ?bandMemberOfDonDokken dbo:memberOf dbr:Don_Dokken .

  # Step 4: Check if this member is also associated with the second artist
  ?bandMemberOfDonDokken dbo:associatedBand ?secondArtist .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
251,12,val,Give me the death place of Laura Mancinelli and location of Battle of Marengo and administration of Forza Italia (2013).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?battleLocation ?administration
WHERE {
    # Laura Mancinelli's death place
    OPTIONAL {
        dbr:Laura_Mancinelli dbo:placeOfBirth ?birthPlace .
        dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
    }
    
    # Location of the Battle of Marengo
    OPTIONAL {
        dbr:Battle_of_Marengo dbo:location ?battleLocation .
    }

    # Administration of Forza Italia in 2013
    OPTIONAL {
        dbr:Forza_Italia (dbo:member) ?person .
        ?person dbo:officeHeld ?administration .
        FILTER(YEAR(?administrationStartDate) = 2013)
    }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
659,33,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse' and commander in German campaign of 1813.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?war WHERE {
  # Find the military unit known as 'Polish Horse'
  ?unit a dbo:MilitaryUnit ;
        rdfs:label ""Polish Horse""@en .
  
  # Identify the commander of this unit
  ?unit dbo:commander ?commander .

  # Ensure the commander was involved in the German campaign of 1813
  ?campaign dbo:commander ?commander ;
            dbo:date ""1813""^^xsd:gYear ;
            dbo:place dbr:Germany .
  
  # Find wars (events and military conflicts) this commander participated in
  ?war a dbo:MilitaryConflict, dbo:Event ;
       dbo:commander ?commander .

}
```",4,8,5,3,2,3,3,71,0,0,30,0,0.0,0
547,42,val,Give me the resting place of the child of James Burton (property developer) and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of Simon Cadell.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRestingPlace ?knightRestingPlace ?simonCadellRestingPlace WHERE {
  # James Burton's child (assuming it is a known individual)
  OPTIONAL { 
    dbr:James_Burton_(property_developer) dbo:child ?child .
    ?child dbo:deathPlace ?childDeathPlace .
    ?childDeathPlace dbo:burialLocation ?childRestingPlace .
  }

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?knight a dbo:Person ;
            dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?knight dbo:deathPlace ?knightDeathPlace .
    ?knightDeathPlace dbo:burialLocation ?knightRestingPlace .
  }

  # Simon Cadell
  OPTIONAL {
    dbr:Simon_Cadell dbo:deathPlace ?simonCadellDeathPlace .
    ?simonCadellDeathPlace dbo:burialLocation ?simonCadellRestingPlace .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
9,29,val,"Give me the alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal and figure known as QUB.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterJohnAlderdice ?almaMaterRoyalMedalist WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  OPTIONAL {
    dbr:John_Alderdice dbo:almaMater ?almaMaterJohnAlderdice .
  }

  # Alma mater of a Royal Medal awardee known as QUB (Queen's University Belfast)
  OPTIONAL {
    ?person dbo:awardReceived dbr:Royal_Medal ;
            dbo:almaMater ?almaMaterRoyalMedalist .
    FILTER EXISTS { ?person dbo:affiliation dbr:Queen%27s_University_Belfast }
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,30,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater ?nickname WHERE {
  # Allen Hill (scientist)
  OPTIONAL {
    VALUES (?person) { dbr:Allen_Hill_(scientist) }
    ?person dbo:almaMater ?almaMater .
  }

  # John Alderdice, Baron Alderdice
  OPTIONAL {
    VALUES (?person) { dbr:John_Alderdice }
    ?person dbo:almaMater ?almaMater .
  }

  # Queen's University Belfast nickname
  OPTIONAL {
    VALUES (?institution) { dbr:Queen's_University_Belfast }
    ?institution dbo:nickname ?nickname .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,20,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?role ?conflict WHERE {
  # Identify Frédéric-Georges Herr
  VALUES ?herr { dbr:Frédéric-Georges_Herr }
  
  # Find his role as a commander in the Algerian War
  ?herr dbo:commanderOf ?conflict .
  ?conflict rdfs:label ""Algerian War""@en .

  # Ensure the conflict is an event and a military conflict
  ?conflict rdf:type dbo:Event ;
            dbo:militaryConflict true .

  # Find his status as a decedent of French Algeria
  ?herr dbo:nationality dbr:French_Algérie .
  
  BIND(?herr AS ?person)
  BIND(""Commander in the Algerian War"" AS ?role)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
9,18,val,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice and alma mater of Allen Hill (scientist).","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?university WHERE {
  # John Alderdice, Baron Alderdice
  ?john dbo:almaMater ?university .
  FILTER(STRSTARTS(STR(?john), ""http://dbpedia.org/resource/John_Alderdice""))

  # Allen Hill (scientist)
  ?allen dbo:almaMater ?university .
  FILTER(STRSTARTS(STR(?allen), ""http://dbpedia.org/resource/Allen_Hill_(scientist)""))
  
  # QUB is the university we are looking for
  ?university rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""queen's university belfast""))
}
ORDER BY ?university",3,3,4,1,3,3,3,71,1,0,0,1.0,1.0,1.0
378,29,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the commander in Peninsular War and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?crillonClaimToFame ?peninsularWarRole ?gahnClaimToFame
WHERE {
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:claimToFame ?crillonClaimToFame .
  
  OPTIONAL {
    dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:roleInWar ?peninsularWarRole .
    FILTER(CONTAINS(LCASE(?peninsularWarRole), ""peninsular war""))
  }
  
  # Carl Pontus Gahn
  dbr:C_P_Gahn dbo:claimToFame ?gahnClaimToFame .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
10,15,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Matt Colton""@en ;
          dbo:birthPlace ?birthPlace ;
          dbo:profession ?profession .

  FILTER(CONTAINS(LCASE(?profession), ""audio engineer""))

  ?person dbo:associatedMusicalArtist ?artist .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
378,39,val,"Give me the war of Joaquín Blake and claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?joaquinBlakeFame ?thomasTriggeEvent
WHERE {
  # Joaquín Blake's involvement in a war and his claim to fame as a commander
  ?joaquinBlake dbo:nationality dbr:Spain ;
                dbo:occupation dbr:Military_person ;
                dbo:knownFor ?joaquinBlakeFame .
  
  ?war dbo:participant ?joaquinBlake ;
       rdf:type dbo:MilitaryConflict .

  # Thomas Trigge's societal event
  ?thomasTriggeEvent dbo:associatedWith dbr:Thomas_Trigge ;
                     rdf:type dbo:SocietalEvent .

  FILTER (str(?joaquinBlakeFame) CONTAINS ""commander"")
}
```",4,7,5,3,2,3,3,71,0,0,2,0,0.0,0
994,18,val,Give me the associated musical artist of Red Tide (band) and band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"# Query for associated musical artist of Red Tide (band)
SELECT ?artist WHERE {
  ?redTide dbr:Red_Tide_(band) .
  ?redTide dbo:associatedMusicalArtist ?artist .
}

UNION

# Query for band member of Don Dokken
SELECT ?member WHERE {
  ?donDokken dbr:Don_Dokken .
  ?donDokken dbo:bandMember ?member .
}

UNION

# Query for associated musical artist of S.A. Slayer (interpreted as Slayer)
SELECT ?artist WHERE {
  ?slayer dbr:Slayer .
  ?slayer dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
783,12,val,"Give me the associated musical artist of Appietus and band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?associatedArtist ?bandMember WHERE {
  # Find Appietus and associated musical artist
  ?appietus a dbo:MusicalArtist ;
            foaf:name ""Appietus"" .
  
  OPTIONAL { 
    ?appietus dbo:associatedMusicalArtist ?associatedArtist .
  }
  
  # Find band members who are both an artist and a musical artist, specifically Priscilla Opoku-Kwarteng
  ?bandMember a dbo:Band ;
              dbo:member ?priscilla .
  
  ?priscilla a dbo:Person , dbo:MusicalArtist ;
             foaf:name ""Priscilla Opoku-Kwarteng"" .

}
```

This query does the following:
- Identifies Appietus as a `MusicalArtist`.
- Optionally retrieves any associated musical artists linked to Appietus.
- Finds band members who are both an artist and a musical artist, specifically targeting Priscilla Opoku-Kwarteng.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
485,19,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?birthPlace ?countryInRegion ?nottinghamshireEntity
WHERE {
  # Find the birthplace of Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .

  # Find a country in the same region that uses Western European Time
  ?region dbp:country ?countryInRegion .
  ?countryInRegion dbo:timeZone dbr:Western_European_Time .
  ?birthPlace dbo:locatedIn ?region .

  # Find an entity located in Nottinghamshire
  ?nottinghamshireEntity dbo:location dbr:Nottinghamshire .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
427,37,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology and party of Romano Prodi.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alumnus ?father ?fatherParty ?prodiParty WHERE {
  # Find MIT alumni and their fathers
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:father ?father .

  OPTIONAL { 
    ?father dbo:party ?fatherParty .
  }

  # Romano Prodi's political party
  dbr:Romano_Prodi dbo:party ?prodiParty .
}
```",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
378,24,val,"Give me the war of the commander in Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?fame WHERE {
  # Define the resource for Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  VALUES ?person { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }

  # Find wars he participated in
  OPTIONAL {
    ?person dbo:participatedInWar ?war .
    FILTER regex(str(?war), ""Peninsular War"", ""i"")
  }
  
  # Find his claim to fame or notable achievements
  OPTIONAL {
    ?person dbo:notableWorkOrContribution ?fame .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,11,val,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia and parent of Mieszko II Lambert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia
  ?boleslaus a dbo:Person ;
             foaf:name ""Boleslaus I"" .

  # Boleslaus's children
  ?boleslaus dbo:child ?child .

  # Child's child (Boleslaus's grandchild)
  ?child dbo:child ?grandchild .

  # Grandchild is royalty
  ?grandchild a dbo:Monarch ;
              foaf:name ?name .

  # Grandchild is parent of Mieszko II Lambert
  ?grandchild dbo:child dbr:Mieszko_II_Lambert .
}
```

This query assumes that the relationships and properties are correctly modeled in DBpedia. It identifies Boleslaus I, finds his children, then their children (his grandchildren), checks if they hold a royal title, and finally verifies if any of them is a parent of Mieszko II Lambert.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
659,22,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck's involvement in a military conflict during the German campaign of 1813
  ?conflict dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
  
  # The conflict is categorized as a societal event, an event, and a military conflict
  ?conflict rdf:type dbo:SocietalEvent ;
            rdf:type dbo:Event ;
            rdf:type dbo:MilitaryConflict .

  # The military force associated with the conflict
  ?conflict dbo:militaryForce ?militaryForce .
}
```",3,6,4,2,2,3,3,71,0,0,7,0,0.0,0
281,37,val,"Give me the war of New Zealand Army and entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war WHERE {
  # Step 1: Identify the leader of the 1962 New South Wales state election
  ?leader a dbo:Politician ;
          dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .

  # Step 2: Determine the birthplace of this leader, ensuring it is a country
  ?leader dbp:birthPlace ?country .
  FILTER (isBlank(?country) = false && 
          EXISTS { ?country a dbo:Country })

  # Step 3: Find any wars involving the New Zealand Army and that country
  ?war dbo:participatingArmy dbr:New_Zealand_Army ;
       dbo:location ?location .
  FILTER (?location = ?country)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
378,37,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Identify Louis des Balbes de Berton de Crillon, 1st Duke of Mahón
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón dbo:commanderOf ?war .
  
  # Filter for the Peninsular War
  FILTER (str(?war) = ""Peninsular_War"")
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,20,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band member of Nevermore.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Jim Sheppard and his association with Nevermore
  ?person a dbo:Musician ;
          foaf:name ""Jim Sheppard"" ;
          dbo:memberOfBand dbr:Nevermore .

  # Retrieve associated musical artists or bands he is known for
  OPTIONAL { ?person dbo:associatedMusicalArtist ?artist . }
}
```

This query does the following:
- It identifies Jim Sheppard as a musician (`dbo:Musician`) and checks his association with Nevermore using `dbo:memberOfBand`.
- It then attempts to find any associated musical artists or bands he is known for through `dbo:associatedMusicalArtist`.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
54,41,val,Give me the parent of the child of Narapati I of Ava and child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
    # Narapati I of Ava's child
    ?narapatiI dbr:Narapati_I_of_Ava .
    ?child1 dbo:childOf ?narapatiI .

    # Soe Min Wimala Dewi's father and his child
    ?soeminwimaladewi dbr:Soe_Min_Wimala_Dewi .
    ?father dbr:fatherOf ?soeminwimaladewi .
    ?child2 dbo:childOf ?father .

    # Ameitta Thiri Maha Dhamma Dewi's predecessor
    ?ameittathirimahadhammadewi dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
    ?predecessor dbo:predecessorOf ?ameittathirimahadhammadewi .

    # Find the parent of Narapati I's child
    ?parent1 dbo:parentOf ?child1 .

    # Find the child of Soe Min Wimala Dewi's father
    FILTER(?child2 = ?child1)

    # Ensure the predecessor is related to the query
    FILTER(?predecessor = ?narapatiI)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
251,14,val,"Give me the location of Battle of Marengo and administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v2 . <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location ?partyName ?organisation
WHERE {
  # Get the location of the Battle of Marengo
  dbr:Battle_of_Marengo dbo:place dbr:Marengo ;
                        dbo:location ?location .

  # Get the ruling party in Sicily
  OPTIONAL {
    ?sicily dbo:government ?government .
    ?government dbo:rulingParty ?party .
    ?party rdfs:label ?partyName .
    FILTER (lang(?partyName) = 'en')
    
    # Check if the ruling party is also an organization
    ?party dbo:isPartOf ?organisation .
    ?organisation rdfs:label ?organisationLabel .
    FILTER (lang(?organisationLabel) = 'en')
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
712,13,val,"Give me the capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  # Step 1: Identify the military force related to Vyoshenskaya Uprising
  ?militaryForce dbo:wikiPageRedirects dbr:Vyoshenskaya_Uprising .
  
  # Step 2: Determine the country this military force is part of
  ?militaryForce dbo:country ?country .

  # Step 3: Find the capital city of that country
  ?country dbo:capital ?capital .
}
```

This query assumes that there is a direct link between the Vyoshenskaya Uprising and a specific military force in DBpedia, which may require some exploration or adjustment based on available data.",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
9,31,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Allen Hill's alma mater
  dbr:Allen_Hill_(scientist) dbo:almaMater ?allenHillAlmaMater .

  # Organization in Belfast
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .

  # Mayor of the organization (assuming there is a direct link or known association)
  ?mayor dbo:position ?position ;
         dbo:almaMater ?mayorAlmaMater .
  
  FILTER(CONTAINS(LCASE(?position), ""mayor""))
  FILTER(?organization = dbr:Organization_in_Belfast) # Replace with actual organization if known

}
```

This query assumes:
- There is a direct link between the mayor and the organization in Belfast.
- The position of the mayor can be identified by filtering for ""mayor"" in their role.

You may need to adjust the query based on specific DBpedia data availability, especially regarding the exact organization in Belfast and its associated political figure.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
492,33,val,"Give me the person decedent at French Algeria and commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Step 1: Identify the commander in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun ;
         dbo:commander ?verdunCommander .

  # Step 2: Find wars or military conflicts commanded by this person
  ?war dbo:commander ?verdunCommander ;
       a dbo:MilitaryConflict .

  # Step 3: Check if the war involved French Algeria as an event
  ?algeriaEvent dbo:event ?war ;
                dbr:French_Algeria .

  # Step 4: Identify decedents at French Algeria who were commanders in these wars
  ?decedent dbo:placeOfBirth dbr:French_Algeria ;
            dbo:commander ?war .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
427,36,val,"Give me the party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?partyName WHERE {
  # Identify Romano Prodi
  dbr:Romano_Prodi a dbo:Politician ;
                  dbo:birthName ""Romano Prodi"" .

  # Check if he has been associated with any political party
  OPTIONAL { 
    dbr:Romano_Prodi dbo:party ?party .
    
    # Filter for Partito Popolare Italiano
    FILTER(?party = dbr:Partito_Popolare_Italiano)
    
    # Get the name of the party
    ?party rdfs:label ?partyName .
  }
}
```

This query does the following:
- It identifies Romano Prodi as a politician with his birth name.
- It checks if he has been associated with any political party, specifically filtering for Partito Popolare Italiano.
- It retrieves the label (name) of the party.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
778,14,val,"Give me the author of the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?softwareAuthor WHERE {
  # Step 1: Find the author of ""pushd"" and ""popd""
  ?command a dbo:Software ;
           dbo:author ?originalAuthor .

  FILTER (?command IN (dbr:Pushd, dbr:Popd))

  # Step 2: Find a software work by that author
  ?softwareWork a dbo:Software ;
                dbo:author ?originalAuthor .

  # Step 3: Retrieve the author of that software
  ?softwareWork dbo:author ?softwareAuthor .
}
```",3,4,4,3,1,3,2,20,0,0,2,0,0.0,0
959,29,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Find Yōichi Masuzoe's DBpedia resource
  dbr:Yōichi_Masuzoe dbo:almaMater dbr:University_of_Tsukuba .
  
  # Get his residence
  dbr:Yōichi_Masuzoe dbo:residence ?residence .

  # Check if the residence is a country
  ?residence rdf:type dbo:Country .

  # Find the native country of the residence
  ?residence dbo:nativeOf ?nativeCountry .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
820,12,val,Give me the professional in  and child of the parent of Jason Schwartzman.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child ?profession WHERE {
  # Find Jason Schwartzman's parent
  ?jason a dbo:Person ;
         foaf:name ""Jason Schwartzman""@en .
  
  ?parent dbo:spouse ?jason ;
          dbo:child ?child .

  # Get the profession of each child
  ?child dbo:occupation ?profession .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
801,18,val,Give me the professional in  and producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?associatedArtist WHERE {
  # Find the producer of ""West Side Story"" (song)
  dbr:West_Side_Story_(song) dbo:composer ?producer .

  # Find Chris Taylor and his associated musical artist
  dbr:Chris_Taylor_(music_producer) dbo:musicalArtist ?associatedArtist .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
184,20,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Archduke Joseph Karl of Austria and his children
  dbr:Archduke_Joseph_Karl_of_Austria dbo:child ?child .
  
  # Children's children (Joseph Karl's grandchildren)
  ?child dbo:child ?grandchild .

  # Géza von Habsburg and his parent
  dbr:Géza_von_Habsburg dbo:parent ?parent .

  # Find the grandchild who is a parent of Géza von Habsburg
  FILTER (?grandchild = ?parent)
}
```",3,3,4,2,2,3,3,71,1,0,0,1.0,1.0,1.0
54,28,val,Give me the child of the father of Soe Min Wimala Dewi and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbo:father ?father .
  
  # Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?ameittaThiriMahaDhammaDewi dbp:predecessor ?predecessor .

  # Thado Minsaw of Prome's parent
  ?thadoMinsaw dbo:parent ?parent .

  # Find the common individual
  FILTER (?father = ?predecessor && ?father = ?parent)
  
  # The child we are looking for is the same as Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi dbp:child ?child .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
161,21,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and commander in Biscay Campaign.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Franco as a person
  dbr:Franco_Francisco (dbo:commandedBy|dbo:participatedIn) ?event .
  
  # The event is the Biscay Campaign, which is a military conflict
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ""Biscay Campaign""@en .

  # Find the military force involved in this campaign
  ?militaryForce dbo:participatedIn ?event .
}
```",3,6,4,2,2,3,3,71,0,0,3,0,0.0,0
435,13,val,"Give me the region of Greenwich Mean Time and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?administeredTerritory WHERE {
  # Identify Reykjavik as a settlement and town in Iceland
  dbr:Reykjavík 
    dbo:country dbr:Iceland ;
    a dbo:Settlement, dbo:Town .

  # Find the region of GMT for Reykjavik
  ?region dbo:timeZone dbr:GMT .
  
  # Find territories administered from Reykjavik
  OPTIONAL {
    ?administeredTerritory dbo:administrativeCapital dbr:Reykjavík .
  }
}
```",3,6,4,2,2,2,3,28,0,2339,1,0.0,0.0,0
54,40,val,Give me the child of the father of the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thinkhaya of Pagan and his child
  ?thinkhaya a dbo:Monarch ;
             foaf:name ""Thinkhaya""@en .
  
  ?child dbo:parent ?thinkhaya ;
         dbo:spouse ?spouse .

  # Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Monarch ;
               foaf:name ""Thado Minsaw""@en .
  
  ?thadoParent dbo:child ?thadoMinsaw .

  # Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta a dbo:Monarch ;
           foaf:name ""Ameitta Thiri Maha Dhamma Dewi""@en .
  
  ?predecessor dbo:succeededBy ?ameitta .

  # Find the person who fits all criteria
  FILTER (?child = ?thadoParent && ?thinkhaya = ?predecessor)
  BIND(?child AS ?person)
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
161,37,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and commander in Biscay Campaign.",SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find Indalecio Prieto's predecessor in a relevant role
  ?prieto dbr:Indalecio_Prieto .
  ?role dbo:predecessor ?predecessor .
  ?predecessor dbr:Indalecio_Prieto .

  # Identify the commander in Biscay Campaign
  ?campaign dbr:Biscay_Campaign .
  ?commander dbo:commanderOf ?campaign .
  ?commander ?role ?predecessor .

  # Find the military force involved in both a societal event and a military conflict
  ?militaryForce dbo:participatedIn ?societalEvent, ?militaryConflict .
  FILTER(?societalEvent != ?militaryConflict)
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
421,14,val,Give me the native of the birthplace of Samir Bekrić and band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Find Samir Bekrić and his association with Senidah
  ?person a dbo:Person ;
          foaf:name ""Samir Bekrić""@en ;
          dbo:musicGroup dbr:Senidah .

  # Get the birthplace of Samir Bekrić
  ?person dbo:birthPlace ?birthPlace .

  # Find the native language spoken in the birthplace
  ?birthPlace dbo:language ?nativeLanguage .
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
9,25,val,Give me the figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/property/nickname> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find Queen's University Belfast and its nickname
  dbr:Queen's_University_Belfast dbo:nickname ?nickname .

  # Ensure Allen Hill (scientist) is an alumnus of this university
  OPTIONAL { 
    dbr:Allen_Hill_(scientist) dbo:almaMater dbr:Queen's_University_Belfast .
  }
}
```

This query does the following:
- It selects the nickname (`?nickname`) associated with Queen's University Belfast.
- It ensures that Allen Hill (scientist) is listed as an alumnus of this university using an optional pattern.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,43,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v4 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
SELECT ?spouse WHERE {
  # Step 1: Identify Prince George William's parent who is royalty
  ?parent rdf:type dbo:RoyalFamily ;
          dbo:child ?princeGeorgeWilliam .
  
  FILTER(?princeGeorgeWilliam = dbpedia:Prince_George_William_of_Hanover)

  # Step 2: Find the royalty child of this parent
  ?royaltyChild rdf:type dbo:RoyalFamily ;
                dbo:parent ?parent .

  # Step 3: Identify Princess Victoria Louise's spouse
  ?princessVictoriaLouise dbp:spouse ?spouse .
  
  FILTER(?princessVictoriaLouise = dbpedia:Princess_Victoria_Louise_of_Prussia)

  # Step 4: Find the royalty child of this spouse
  ?child rdf:type dbo:RoyalFamily ;
         dbo:parent ?spouse .

  # Step 5: Determine if this child is the same as the royalty child from step 2
  FILTER(?royaltyChild = ?child)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
959,26,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Find the politician who was a leader in the 2010 Japanese House of Councillors election
  ?politician dbo:office ?office .
  ?office dbo:election dbr:Japanese_House_of_Councillors_election,_2010 .

  # Get their place of residence
  ?politician dbp:residence ?residence .

  # Find the country where this residence is located
  ?residence dbo:country ?country .

  # Determine the native country of that residence
  ?country dbo:nativeCountry ?nativeCountry .
}
```",3,5,4,3,1,3,3,71,0,0,8419,0,0.0,0
391,42,val,"Give me the actor of The Departed and native of the figure known as Hub City and actor of the movie, that is a movie and a work and a television show, with Roz Ryan.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Step 1: Find actors of ""The Departed""
  ?departedActor dbo:starringIn dbr:The_Departed .
  
  # Step 2: Identify the figure known as ""Hub City"" and its native
  ?hubCity dbp:name ""Hub City""@en ;
           dbo:nativeCitizenOf ?nativePlace .

  # Step 3: Ensure this person is an actor in a movie that is also a work and TV show with Roz Ryan
  ?actor dbo:starringIn ?work .
  ?work rdf:type dbo:Film ;
        dbo:starring dbr:Roz_Ryan .
  
  # Link the actor from ""The Departed"" to the native of ""Hub City""
  ?departedActor dbp:name ?actorName .
  ?nativePlace dbo:nativeCitizen ?actor .

  FILTER(?actor = ?departedActor)
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
378,22,val,Give me the war of Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame WHERE {
  # Find wars associated with Carl Pontus Gahn
  OPTIONAL { 
    ?gahn dbo:nationality dbr:Sweden .
    ?gahn dbo:occupation dbr:Military_person .
    ?gahn dbo:participatedIn ?war .
    BIND(?war AS ?war)
  }
  
  # Find claim to fame during the Great Siege of Gibraltar
  OPTIONAL {
    ?gahn dbo:nationality dbr:Sweden .
    ?gahn dbo:occupation dbr:Military_person .
    ?gahn dbo:participatedIn <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> .
    ?gahn dbo:claimToFame ?claimToFame .
  }
  
  # Bind the person variable
  VALUES ?gahn { dbr:C._P._Gahn }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
232,37,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer and native of London.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  ?person a dbo:Actor ;
          dbo:nationality dbr:United_Kingdom ;
          dbo:birthPlace dbr:London .
  
  ?film dbo:starring ?actor ;
        dbo:subject ?militaryConflict .

  ?militaryConflict a dbo:MilitaryConflict .

  FILTER EXISTS { ?person dbo:claimToFame ?film }
  FILTER EXISTS { ?person dbo:claimToFame ?militaryConflict }

}
```

This query does the following:

- Selects individuals (`?person`) who are actors, have British nationality, and were born in London.
- Identifies films (`?film`) that star an actor (`?actor`) and are related to a military conflict (`?militaryConflict`).
- Ensures that both the film and the military conflict are part of the person's claim to fame.",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
959,28,val,"Give me the native of Japan and manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry ?managerRole ?university
WHERE {
  # Eiji Ōtsuka's resource
  VALUES ?eijiOotsuka { dbr:Eiji_Ōtsuka }

  # Native of Japan
  ?eijiOotsuka dbo:nationality ?nationality .
  FILTER (str(?nationality) = ""Japan"")

  # Manager of Júbilo Iwata in 2013
  OPTIONAL {
    ?managerRole dbo:positionTitle ?title ;
                dbo:team dbr:Júbilo_Iwata ;
                dbo:startDate ?startYear .
    FILTER (?startYear <= ""2013""^^xsd:gYear && (BOUND(?endYear) -> ?endYear >= ""2013""^^xsd:gYear || !BOUND(?endYear)))
  }

  # Alma mater
  OPTIONAL {
    ?eijiOotsuka dbo:almaMater ?university .
    FILTER EXISTS { ?university a dbo:EducationalOrganization }
  }
}
```",4,8,5,2,3,3,3,71,0,0,1,0,0.0,0
232,40,val,Give me the actor of Dog Soldiers (film) and child of the person born as the birth name of Jon Pertwee and native of London.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?child
WHERE {
  # Find the actor of ""Dog Soldiers""
  dbr:Dog_Soldiers_(film) dbo:starring ?actor .

  # Find Jon Pertwee's birth name
  dbr:Jon_Pertwee dbp:birthName ?jonBirthName .
  
  # Find a person with that birth name who is native to London
  ?person dbp:birthName ?jonBirthName ;
          dbo:nativePlace dbr:London .

  # Find the child of this person
  ?person dbo:child ?child .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
77,11,val,Give me the force of Alexander I of Russia and war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?awardee WHERE {
  # Find Alexander I of Russia
  ?alexander a dbo:Monarch ;
             foaf:name ""Alexander I""@en ;
             dbo:country dbr:Russia .

  # Find military force associated with Alexander I
  ?militaryForce dbo:commander ?alexander .
  
  # Find individuals awarded the Golden Weapon for Bravery
  ?awardee dbo:award dbr:Golden_Weapon_for_Bravery ;
           dbo:recipientOfAward ?event .

  OPTIONAL {
    ?event dbo:relatedEvent ?war .
    FILTER(?war != dbr:None)
  }
}
```

This query attempts to:

- Identify Alexander I of Russia as a monarch.
- Retrieve any military force he commanded.
- Find individuals awarded the Golden Weapon for Bravery and optionally link them to related wars.",3,3,4,2,2,3,2,20,0,0,11,0,0.0,0
959,33,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and member of University of Tsukuba.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nativeCountry WHERE {
  # Find politicians involved in the 2010 Japanese House of Councillors election
  ?politician dbo:electionCandidateFor dbr:Japanese_House_of_Councillors_election,_2010 .
  
  # Check if they are associated with University of Tsukuba
  ?politician dbo:almaMater dbr:University_of_Tsukuba .

  # Find the residence country of this politician
  ?politician dbo:residence ?residenceCountry .

  # Get the native country of that residence
  ?residenceCountry dbo:nativeCountry ?nativeCountry .
}
```",4,6,5,3,2,3,3,71,0,0,84,0,0.0,0
16,29,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v3 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?profession WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  ?satomi dbo:occupation ?profession .

  # Find Georgeanne Marie Rice (spouse of Ted McGinley)
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Marie Rice""@en ;
              dbo:spouse ?ted .
  ?ted foaf:name ""Ted McGinley""@en .

  FILTER(?profession = ?satomiProfession) # Ensure the professions match
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
427,44,val,"Give me the party of the father of Lamberto Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v4 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v4 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherPartyLabel ?prodiPartyLabel WHERE {
  # Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father ?father .
  ?father dbo:partyAffiliation ?fatherParty .

  # Romano Prodi and his party affiliation
  dbr:Romano_Prodi dbo:partyAffiliation ?prodiParty .
  
  # Filter for Partito Popolare Italiano
  FILTER(?prodiParty = dbr:Partito_Popolare_Italiano)

  # Get labels for the parties
  ?fatherParty rdfs:label ?fatherPartyLabel .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  # Ensure labels are in English
  FILTER(LANG(?fatherPartyLabel) = 'en')
  FILTER(LANG(?prodiPartyLabel) = 'en')
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
666,13,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?playerInManager WHERE {
  # Leonid Slutsky as a football coach
  dbr:Leonid_Slutsky dbo:occupation dbr:Football_manager .
  
  # Teams managed by Leonid Slutsky
  ?team dbo:manager dbr:Leonid_Slutsky ;
        a dbo:Soccer_club, dbo:Sports_team_season .

  # Player in the manager relationship who is a sports manager of these teams
  ?playerInManager dbo:occupation dbr:Sports_manager .
  ?playerInManager dbo:manager ?team .
}
```",3,6,4,3,1,3,2,20,0,0,28,0,0.0,0
801,43,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper and associated musical artist of Chris Taylor (music producer).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/writer> ?v0 . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://dbpedia.org/property/occupation> """"@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?professional ?producer WHERE {
  ?work a dbo:Song ;
        dbo:artist ?professional ;
        dbo:producer ?producer .
  
  ?professional a dbo:MusicalArtist ;
                dbo:genre dbr:Rap_music .

  ?producer rdfs:label ""Chris Taylor (music producer)""@en .
}
```

This query does the following:
- Selects musical works that are songs.
- Ensures the artist of the song is classified as a musical artist and specifically a rapper.
- Checks for an association with Chris Taylor, identified by his label.",5,9,6,3,3,3,3,71,0,0,2,0,0.0,0
767,19,val,"Give me the entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Find Carl L. Nippert's alma mater
  ?person dbo:almaMater ?university .
  
  # Ensure the person is Carl L. Nippert
  FILTER (str(?person) = ""Carl_L._Nippert"")

  # The university should be a settlement and have an administrative role
  ?university rdf:type dbo:Settlement .

  OPTIONAL {
    ?university dbo:administrativeUnit ?adminRole .
  }
}
```

This query does the following:
- It looks for a person (`?person`) who has an alma mater (`dbo:almaMater`) that is a settlement (`rdf:type dbo:Settlement`).
- It filters to ensure this person is Carl L. Nippert.
- It optionally checks if the university has an administrative role.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
427,35,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
    # Identify Romano Prodi
    dbr:Romano_Prodi a dbo:Politician ;
        dbo:politicalParty ?party .

    # Ensure the party is related to Italian People's Party (1994)
    ?party rdfs:label ?partyLabel .
    FILTER(CONTAINS(LCASE(?partyLabel), ""italian people's party 1994""))

    # Return the name of the party
    BIND(REPLACE(STR(?partyLabel), ""(Italian People's Party \(1994\))"", """") AS ?partyName)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,26,val,"Give me the spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus IV Epiphanes""@en ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Step 2: Find his successor who is royalty
  ?successor dbo:succeededBy ?antiochus ;
            a dbo:Monarch ;
            dbo:country dbr:Seleucid_Empire .

  # Step 3: Determine the child of that successor
  ?child dbo:parent ?successor ;
         a dbo:Person .

  # Step 4: Find the spouse of that child
  ?spouse dbo:spouse ?child .
}
```",3,4,4,3,1,3,3,71,0,0,5,0,0.0,0
9,19,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?scientistAlmaMater ?mayorAlmaMater WHERE {
  # Find Allen Hill (the scientist) and his alma mater
  OPTIONAL {
    ?scientist a dbo:Scientist ;
               foaf:name ""Allen Hill"" .
    ?scientist dbo:almaMater ?scientistAlmaMater .
  }

  # Find the mayor of Northern Ireland Forum who is a politician and their alma mater
  OPTIONAL {
    ?mayor a dbo:Politician ;
           dbo:officeHolderOf dbr:Northern_Ireland_Forum ;
           foaf:name ?mayorName .
    ?mayor dbo:almaMater ?mayorAlmaMater .
  }
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
281,24,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?relation
WHERE {
  # Find Bob Heffron's birthplace
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a country
  ?birthPlace rdf:type dbo:Country .
  
  # Bind the country to a variable
  BIND(?birthPlace AS ?country)

  # Find any relation between this country and New Zealand Army
  OPTIONAL {
    ?relation dbo:location ?country ;
              rdfs:label ""New Zealand Army""@en .
  }
}
```",3,4,4,2,2,3,3,71,0,1,1,0.0,0.0,0
994,43,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberArtist ?sA_SlayerArtist ?donDokkenBandMember
WHERE {
  # Fredrik Thordendal's band
  dbr:Fredrik_Thordendal dbo:memberOf ?meshuggah .
  
  # Meshuggah as a band, group, and organization
  ?meshuggah rdf:type dbo:MusicalArtist ;
             rdf:type dbo:Band ;
             rdf:type dbo:Organization .

  # Associated musical artist of S.A. Slayer (Tom Araya)
  dbr:Slayer dbo:member ?sA_Slayer .
  ?sA_Slayer foaf:name ""S.A. Slayer""^^xsd:string .
  ?sA_Slayer dbo:associatedMusicalArtist ?sA_SlayerArtist .

  # Band member of Don Dokken
  dbr:Don_Dokken dbo:memberOf ?dokkenBand .
  ?dokkenBand dbo:member ?donDokkenBandMember .

  # Find the associated musical artist of the band member from Meshuggah
  ?meshuggahBandMember dbo:associatedMusicalArtist ?bandMemberArtist .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
701,32,val,Give me the parent of the child of Nefertari and parent of the child of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentNefertariChild ?parentRamessesChild
WHERE {
  # Find children of Nefertari
  ?childNefertari dbo:mother dbr:Nefertari .
  
  # Find parents (father) of those children
  ?childNefertari dbo:father ?parentNefertariChild .

  # Find children of Ramesses II
  ?childRamesses dbo:father dbr:Ramesses_II .
  
  # Find parents (mother) of those children
  ?childRamesses dbo:mother ?parentRamessesChild .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
55,18,val,"Give me the band of the reference, that is a band, to Newsted and band member of Metallica.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:memberOfBand dbr:Metallica .
  ?person rdfs:label ""Jason Newsted""@en .
  FILTER NOT EXISTS { ?person dbo:memberOfBand ?otherBand . FILTER(?otherBand != dbr:Metallica) }
}
```",3,4,4,2,2,2,3,28,0,0,3,0,0.0,0
92,25,val,Give me the band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?associatedArtist WHERE {
  # Find Joe Satriani and his band
  ?satriani a dbo:Musician ;
           foaf:name ""Joe Satriani"" ;
           dbp:birthName ""Joseph Michael Furney"" .
  
  OPTIONAL { 
    ?satriani dbo:memberOf ?band .
  }
  
  # Find Jim Sheppard and his associated artist
  ?sheppard a dbo:Musician ;
            foaf:name ""Jim Sheppard"" .

  OPTIONAL {
    ?sheppard dbp:associatedBand ?associatedArtist .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,36,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://dbpedia.org/property/occupation> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryUnit WHERE {
  # Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:profession ?profession .
  
  # Check if he was an office holder and politician
  FILTER EXISTS { ?profession rdf:type dbo:OfficeHolder . }
  FILTER EXISTS { ?profession rdf:type dbo:Politician . }

  # Find military units associated with him
  OPTIONAL {
    ?militaryUnit dbo:commander ?person .
    ?person rdfs:label ""Beauchamp Seymour""@en .
    FILTER NOT EXISTS { ?militaryUnit dbo:country dbr:United_Kingdom } # Exclude UK units
    FILTER EXISTS { ?militaryUnit dbo:country dbr:New_Zealand } # Focus on New Zealand Army
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
391,39,val,"Give me the actor of The Departed and actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/occupation> """"@en . ?v1 <http://dbpedia.org/property/starring> ?v0 . ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actorTheDeparted ?actorMovieAndShow WHERE {
  # Find actor from ""The Departed""
  ?theDeparted dbo:starring ?actorTheDeparted .
  FILTER(STRSTARTS(STR(?theDeparted), STR(dbr:The_Departed)))

  # Find a work that is both a movie and a television show
  ?work dbo:type/dbo:sameAs dbr:Film ;
        dbo:type/dbo:sameAs dbr:TelevisionShow .

  # Find an actor from this work
  ?work dbo:starring ?actorMovieAndShow .
}
```",4,7,5,3,2,3,3,71,0,0,7,0,0.0,0
767,41,val,"Give me the alma mater of the administration of George K. Nash and entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v4 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?result <http://dbpedia.org/ontology/state> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?settlement WHERE {
  # Find the alma mater of George K. Nash
  ?nash dbo:almaMater ?almaMater .
  FILTER(STRSTARTS(STR(?nash), ""http://dbpedia.org/resource/George_K._Nash""))

  # Find an entity in the administration of someone named Green that is a settlement
  ?green dbo:positionHeld ?administration .
  ?administration dbo:member ?settlement .
  FILTER(STRSTARTS(STR(?green), ""http://dbpedia.org/resource/"") && CONTAINS(LCASE(STR(?green)), ""green""))
  FILTER(dbo:isSettlement ?settlement)
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
659,44,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v2 . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander1 ?commander2 WHERE {
  # Rutger Jan Schimmelpenninck's military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService ?militaryForce .
  
  # Societal event and military conflict related to the military force
  ?militaryForce dbo:participatedIn ?event1 .
  ?event1 a dbo:MilitaryConflict ;
          dbo:socialEvent ?societalEvent .

  # 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:militaryService ?regiment .
  
  # German campaign of 1813
  dbr:German_campaign_of_1813 a dbo:MilitaryConflict ;
                               dbo:commander ?commander2 .

  # Commanders in the respective conflicts
  ?militaryForce dbo:commander ?commander1 .
  ?regiment dbo:commander ?commander2 .
}
```",5,10,6,2,3,3,3,71,0,0,7,0,0.0,0
528,32,val,Give me the war of the military force of Battle of Pisagua and war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battlePisaguaForces ?battleLaRinconadaCommander WHERE {
  # Retrieve military forces involved in the Battle of Pisagua
  OPTIONAL {
    ?pisaguaBattle a dbo:MilitaryConflict ;
                   dbo:participatingMilitaryForce ?battlePisaguaForces .
    FILTER (str(?pisaguaBattle) = ""Battle_of_Pisagua"")
  }
  
  # Retrieve commander in the Battle of La Rinconada de Ate
  OPTIONAL {
    ?rinconadaBattle a dbo:MilitaryConflict ;
                     dbo:commander ?battleLaRinconadaCommander .
    FILTER (str(?rinconadaBattle) = ""Battle_of_La_Rinconada_de_Ate"")
  }
}
```",4,4,5,2,2,3,3,71,0,0,8,0,0.0,0
294,12,val,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlace WHERE {
  # Luke Lea's resting place
  OPTIONAL { 
    dbr:Luke_Lea (dbo:deathPlace|dbo:placeOfBurial) ?lukeRestingPlace .
  }
  
  # Edwin A. Keeble's resting place
  OPTIONAL { 
    dbr:Edwin_A._Keeble (dbo:deathPlace|dbo:placeOfBurial) ?edwinRestingPlace .
  }

  # Check if the resting places are in Nashville, Tennessee
  FILTER (?lukeRestingPlace = ?restingPlace && ?edwinRestingPlace = ?restingPlace)
  
  # Ensure the location is Nashville, Tennessee
  ?restingPlace dbo:location dbr:Nashville,_Tennessee .
}
```

This query does the following:
- It uses `dbo:deathPlace` or `dbo:placeOfBurial` to find where Luke Lea and Edwin A. Keeble are buried.
- It checks if both individuals share the same resting place.
- It ensures that this shared resting place is located in Nashville, Tennessee.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
48,15,val,"Give me the band of Murda Mook and band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?murdaMookBand ?shellbackWriterBand WHERE {
  # Find Murda Mook's band
  ?murdaMook a dbo:MusicArtist ;
             foaf:name ""Murda Mook"" .
  
  ?murdaMookBand dbo:bandMember ?murdaMook .

  # Find Shellback's work and its writer
  ?shellbackWork dbo:producer dbr:Shellback_(record_producer) .
  ?shellbackWork dbo:writer ?writer .

  # Find the band of the writer
  ?writer a dbo:MusicArtist ;
          foaf:name ?writerName .
  
  ?shellbackWriterBand dbo:bandMember ?writer .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
547,40,val,Give me the resting place of Simon Cadell and resting place of Alan Cunningham and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v2 <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  # Simon Cadell
  { 
    VALUES ?person { dbr:Simon_Cadell }
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Alan Cunningham
  { 
    VALUES ?person { dbr:Alan_Cunningham_(actor) } # Ensure correct Alan Cunningham is selected
    OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  }

  UNION

  # Child of the child of William Haliburton
  {
    ?williamHaliburton a dbo:Person ;
                      dbp:name ""William Haliburton""@en .
    ?child1 dbo:child ?williamHaliburton .
    ?grandChild dbo:child ?child1 .
    OPTIONAL { ?grandChild dbo:deathPlace ?restingPlace . }
  }
}
ORDER BY ?person
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,40,val,Give me the band member of Don Dokken and associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist1 ?associatedArtist2 WHERE {
  # Don Dokken's band members
  VALUES (?dokkenBand) { dbr:Dokken }
  
  ?dokkenBand dbo:member ?person .
  ?person rdfs:label ?bandMember .

  FILTER regex(?bandMember, ""Don Dokken"", ""i"")

  OPTIONAL {
    # Red Tide's associated musical artist
    VALUES (?redTide) { dbr:Red_Tide_(band) }
    
    ?redTide dbo:associatedMusicalArtist ?artist1 .
    ?artist1 rdfs:label ?associatedArtist1 .

    # Watchtower's associated musical artist
    VALUES (?watchtower) { dbr:Watchtower_(band) }
    
    ?watchtower dbo:associatedMusicalArtist ?artist2 .
    ?artist2 rdfs:label ?associatedArtist2 .

    OPTIONAL {
      # Associated musical artist of the artist associated with Watchtower
      ?artist2 dbo:associatedMusicalArtist ?artist3 .
      ?artist3 rdfs:label ?associatedArtist3 .
      
      FILTER(?associatedArtist1 = ?associatedArtist3)
    }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
345,15,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb and team of Alessandro Mangiarratti.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?player dbo:playsFor ?club .
  FILTER (
    (?player = dbr:Armando_Heeb || ?player = dbr:Alessandro_Mangiarratti)
  )
  ?club a dbo:SoccerClub ;
        dbo:nickname ?nickname .
}
```

This query assumes:
- `dbo:playsFor` is the property linking players to their clubs.
- The club has a type of `dbo:SoccerClub`.
- The nickname is stored in `dbo:nickname`.",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
492,21,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor ?algiersPerson WHERE {
  # Find the successor of Joseph C. Satterthwaite as US Assistant Secretary of State for African Affairs
  OPTIONAL {
    ?satterthwaite dbo:positionHeld dbr:US_Assistant_Secretary_of_State_for_African_Affairs .
    ?satterthwaite dbo:endTime ?endTime .
    ?successor dbo:positionHeld dbr:US_Assistant_Secretary_of_State_for_African_Affairs ;
              dbo:startTime ?startTime .
    FILTER (?startTime > ?endTime)
  }

  # Find the person associated with Algiers
  OPTIONAL {
    ?algiersPerson dbo:city dbr:Algiers .
  }
}
```",3,3,4,2,2,3,3,71,0,49,16,0.0,0.0,0
994,21,val,Give me the band member of Don Dokken and associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?watchtowerAssociatedArtist WHERE {
  # Step 1: Find band members of Don Dokken
  ?member dbo:memberOf dbr:Don_Dokken .
  
  # Step 2: Find associated musical artist of the band member
  ?member dbo:memberOf ?otherBand .
  ?otherBand rdfs:label ?associatedArtist .

  # Step 3: Find bands associated with Watchtower and then find an associated artist for one of those bands
  ?watchTowerMember dbo:memberOf dbr:Watchtower .
  ?watchTowerMember dbo:memberOf ?watchTowerAssociatedBand .
  ?watchTowerAssociatedBand rdfs:label ?watchtowerAssociatedArtist .

  FILTER (lang(?associatedArtist) = 'en')
  FILTER (lang(?watchtowerAssociatedArtist) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
44,7,val,Give me the band member of the band of John Pettibone and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Assuming John Pettibone is a member of ""The Dillinger Escape Plan""
  { 
    ?person dbo:memberOf dbr:The_Dillinger_Escape_Plan .
    ?person foaf:name ""John Pettibone""@en .
    ?person dbp:memberOf ?bandMember .
  }
  
  UNION
  
  # Assuming Sledgeback is a band
  {
    ?band dbp:bandName ""Sledgeback""@en .
    ?band dbo:member ?bandMember .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
645,11,val,"Give me the alma mater of Sylvia Pankhurst and entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater ?countryResidence
WHERE {
  # Alma mater of Sylvia Pankhurst
  ?sylviaPankhurst a dbo:Person ;
                   foaf:name ""Sylvia Pankhurst"" ;
                   dbo:almaMater ?almaMater .

  # Residence country of James Wilkes Maurice
  ?jamesWilkesMaurice a dbo:Person ;
                      foaf:name ""James Wilkes Maurice"" ;
                      dbo:residence ?residence .
  
  ?residence dbp:countryName ?countryResidence .
}
```

This query assumes that the names are unique identifiers for these individuals in DBpedia. It retrieves the alma mater of Sylvia Pankhurst and the country associated with James Wilkes Maurice's residence.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
712,12,val,Give me the capital of South Russia (1919–1920) and resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?hero ?restingPlace WHERE {
  ?hero a dbo:Person ;
        dbo:honoraryTitle dbr:Hero_of_the_Soviet_Union .
  
  OPTIONAL { 
    ?hero dbo:placeOfBurial ?restingPlace .
  }
}
LIMIT 10
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
485,17,val,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award and entity in Nottinghamshire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:birthPlace ?birthPlace .
  ?person dbo:genre dbr:Poetry .
  ?person dbo:occupation dbr:Writer .
  ?person dbp:location dbr:Nottinghamshire .
}
```

This query does the following:
- Selects individuals (`?person`) who have received the Eric Gregory Award.
- Ensures these individuals are associated with Nottinghamshire.
- Confirms they are recognized as poets and writers.
- Retrieves their birthplace.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
488,44,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and birth place of Enomoto Takeaki and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceYūkiFather ?birthPlaceEnomoto ?administrationGoMizunooFather
WHERE {
  # Yūki Hideyasu's father (politician)
  ?yukiHideyasu dbo:father ?fatherYūki .
  ?fatherYūki rdf:type dbo:Politician .
  ?fatherYūki dbo:deathPlace ?deathPlaceYūkiFather .

  # Enomoto Takeaki's birth place
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomoto .

  # Emperor Go-Mizunoo's father and his administration
  dbr:Emperor_Go-Mizunoo dbo:father ?fatherGoMizunoo .
  ?fatherGoMizunoo dbo:positionHeld ?administrationGoMizunooFather .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
303,18,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and entity in Panama.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Arnulfo Arias Madrid""@en ;
          dbo:nationality dbr:Panama .
  OPTIONAL { ?person dbo:politicalParty ?party . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,17,val,"Give me the professional in  and band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?result <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?band 
WHERE {
  VALUES ?person { dbr:Luke_Francis_Vibert }
  
  ?person a dbo:Artist .
  OPTIONAL { ?person dbo:occupation ?profession . }
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
92,22,val,Give me the band member of Nevermore and band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?band 
WHERE {
  # Find members of Nevermore
  {
    SELECT DISTINCT ?member WHERE {
      ?album dbo:artist dbr:Nevermore .
      ?album dbo:performer ?member .
    }
  }

  UNION

  # Find the band associated with Warrel Dane (Joseph Michael Furney)
  {
    SELECT DISTINCT ?band WHERE {
      dbr:Warrel_Dane dbo:birthName ""Joseph Michael Furney""@en ;
                      dbo:associatedBand ?band .
    }
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
251,18,val,Give me the administration of Forza Italia (2013) and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace
WHERE {
  # Find the administration of Forza Italia in 2013
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  
  OPTIONAL {
    ?administration dbo:leader ?person .
    ?administration dbo:startDate ?start .
    ?administration dbo:endDate ?end .
    
    FILTER (?start <= ""2013-12-31""^^xsd:date && (?end >= ""2013-01-01""^^xsd:date || NOT EXISTS { ?administration dbo:endDate ?end }))
  }
  
  # Find the author of ""The Twelve Abbots of Challant""
  ?book a dbo:Book ;
        rdfs:label ""The Twelve Abbots of Challant""@en .
  
  OPTIONAL {
    ?author dbo:author ?book .
    ?deathEvent dbo:place ?deathPlace ;
               dbo:agent ?author .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,11,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify William Ernest, Grand Duke of Saxe-Weimar-Eisenach
  dbr:William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?father .

  # Step 2: Ensure the father is a child (has children) who are grandchildren of Maria Pavlovna
  ?child dbo:parent ?father .
  ?grandchild dbo:parent ?child .
  
  # Step 3: Identify Grand Duchess Maria Pavlovna as a parent of one of these children
  ?grandchild dbo:parent dbr:Maria_Pavlovna_of_Russia_(1786–1859) .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
184,43,val,"Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria and child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v4 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?result WHERE {
  # Parent of Géza von Habsburg
  ?geza dbo:parent ?parentGeza .
  FILTER (str(?geza) = ""Géza von Habsburg"") .

  # Parent of Archduchess Ilona of Austria
  ?ilona dbo:parent ?parentIlona .
  FILTER (str(?ilona) = ""Archduchess Ilona of Austria"") .

  # Parent of Archduke Ladislaus Philipp of Austria
  ?ladislaus dbo:parent ?parentLadislaus .
  FILTER (str(?ladislaus) = ""Archduke Ladislaus Philipp of Austria"") .

  # Child of the child of the parent of Archduke Ladislaus Philipp of Austria
  ?child1 dbo:parent ?parentLadislaus .
  ?grandchild dbo:parent ?child1 .

  # Ensure result is a royalty
  ?result dbp:royalty ""true""^^xsd:boolean .

  # Find common entity that satisfies all conditions
  FILTER (
    (?result = ?parentGeza || ?result = ?parentIlona) &&
    ?grandchild = ?result
  )
}",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
488,23,val,"Give me the birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Saitō Hajime as a person
  dbr:Sait%C5%8D_Hajime dbo:nationality dbr:Japan ;
                        dbo:birthPlace ?birthPlace .

  # The Satsuma Rebellion as an event and societal event
  OPTIONAL { 
    ?event dbo:wikiPageRedirects dbr:Satsuma_Rebellion .
    ?event a dbo:Event .
    ?event dbo:socialEvent true .
  }
}
```",3,6,4,3,1,3,3,71,0,0,17,0,0.0,0
492,39,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v0 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?deathPlace WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:rank ""Commander"" ;
             dbo:participatedInBattle ?battle .
  
  ?battle dbo:conflict [dbo:name ""Franco-Hova Wars""] .

  ?commander dbo:placeOfBirth ?birthPlace ;
             dbo:dateOfDeath ?deathDate ;
             dbo:causeOfDeath ?causeOfDeath ;
             dbo:deceasedAt ?deathPlace .

  FILTER (str(?deathPlace) = str(dbr:Khemis_Miliana))

}
```

This query attempts to find a military person who was a commander in the Franco-Hova Wars and died in Khemis Miliana. Note that this is a hypothetical query, as specific data availability can vary.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
528,24,val,Give me the war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?battle ?commander1 ?force1 ?commander2 ?force2 WHERE {
  ?battle a dbo:Battle ;
          rdfs:label ""Battle of La Rinconada de Ate""@en .
  
  OPTIONAL { 
    ?battle dbp:commander ?commander1 .
    ?commander1 rdfs:label ""Narciso Campero""@en .
    ?commander1 dbo:participatedInMilitaryConflicts ?conflict .
    ?conflict dbo:opposingForce ?force1 .
  }
  
  OPTIONAL {
    ?battle dbp:opposingCommander ?commander2 .
    ?commander2 rdfs:label ?otherCommanderLabel .
    ?commander2 dbo:participatedInMilitaryConflicts ?conflict .
    ?conflict dbo:opposingForce ?force2 .
  }
}
```

This query attempts to find the battle and its commanders, specifically looking for Narciso Campero as one of them. It also tries to retrieve information about the forces involved.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
712,11,val,Give me the capital of the country of Armed Forces of South Russia and resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital ?burialPlace WHERE {
  # Assuming ""Armed Forces of South Russia"" refers to Ukraine
  OPTIONAL { 
    dbr:Ukraine dbo:capital ?capital .
  }
  
  # Finding Nina Onilova and her burial place
  OPTIONAL {
    ?person rdfs:label ""Nina Onilova""@en .
    ?person dbo:deathPlace ?burialPlace .
  }
}
```",3,3,4,2,2,3,2,20,0,1,1,0.0,0.0,0
281,43,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v4 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?election dbo:leader ?leader .
  FILTER (str(?election) = ""1962_New_South_Wales_state_election"")

  # Get the birthplace of this leader and ensure it is a country
  ?leader dbp:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .

  BIND (?birthPlace AS ?country)

  OPTIONAL {
    # Check if Beauchamp Seymour, 1st Baron Alcester participated in wars involving the New Zealand Army
    dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedInWar ?war .
    ?war dbo:involvedMilitaryForce dbr:New_Zealand_Army .
  }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
318,7,val,Give me the person born in the founding year of Eel Pie Publishing and professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ?v2 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?birthDate WHERE {
  # Find the founding year of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbo:foundingYear ?foundingYear .
  
  # Find persons born in that year who are composers
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          dbo:occupation ?occupation .

  FILTER (YEAR(?birthDate) = ?foundingYear)
  FILTER CONTAINS(LCASE(str(?occupation)), ""composer"")
}
```",3,3,4,2,2,2,2,9,0,0,7,0,0.0,0
404,39,val,Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfErnestAugustus ?childOfFatherOfSpouse
WHERE {
  # Prince Ernest Augustus of Hanover (born 1914)
  dbr:Prince_Ernest_Augustus_of_Hanover_(1914) dbo:parent ?parentOfErnestAugustus .

  # Princess Victoria Louise of Prussia and her spouse
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouseOfVictoriaLouise .
  
  # Father of the spouse of Princess Victoria Louise of Prussia
  ?spouseOfVictoriaLouise dbo:father ?fatherOfSpouse .

  # Child of the father of the spouse
  ?fatherOfSpouse dbo:child ?childOfFatherOfSpouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
339,12,val,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Prince Nicholas of Greece and Denmark
  ?child a dbo:Person ;
         foaf:name ""Nicholas, Crown Prince of Greece"" ;
         dbo:spouse ?mother .

  # Mother is Grand Duchess Elena Vladimirovna of Russia
  ?mother dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia .

  # Father is the person we want to find
  ?child dbo:father ?father .

  # Ensure father is also a child of George I of Greece
  ?father dbo:spouse ?mother ;
          dbo:child ?child .
  
  ?father dbo:parent dbr:George_I_of_Greece .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,32,val,"Give me the commander in the force of Ferenc Szálasi and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v1 . ?v3 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find commanders under Ferenc Szálasi
  ?szalasi dbo:leaderOf ?force .
  ?commander dbo:commanderOf ?force .

  # Ensure the commander is a person
  ?commander rdf:type dbo:Person .

  # Check if the commander received an award similar to Bruce Fraser's
  ?commander dbo:awardReceived dbr:Victoria_Cross_for_Gallantry .
  
  # Link Ferenc Szálasi to his role
  dbr:Ferenc_Szálasi dbo:leaderOf ?force .
}
```

This query assumes:
- There is a direct relationship between commanders and forces they led.
- The award received by the commander can be linked through DBpedia's ontology.",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
981,13,val,"Give me the entity in the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> ?v0 . <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?entityLabel WHERE {
  ?region dbo:timeZone dbr:Western_Indonesian_Time .
  ?entity dbo:location ?region .
  OPTIONAL { ?entity rdfs:label ?entityLabel . FILTER (lang(?entityLabel) = 'en') }
}
```

### Explanation:

- **PREFIX**: Define prefixes for DBpedia ontology (`dbo`) and properties (`dbp`).
- **SELECT**: Choose the entity and its label.
- **WHERE**:
  - Find regions with the time zone `Western_Indonesian_Time`.
  - Identify entities located in these regions using `dbo:location`.
  - Optionally, retrieve the English label of the entity.

This query assumes that DBpedia has structured data linking locations to their respective time zones and that such a link exists for Salak, North Sumatra.",3,3,4,3,1,3,2,20,0,0,2949,0,0.0,0
754,14,val,Give me the parent of the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find Ram Khamhaeng the Great's resource
  ?ram_khamhaeng a dbo:Person ;
                 rdfs:label ""Ram Khamhaeng the Great""@en .

  # Step 2: Identify children of Ram Khamhaeng (e.g., descendants)
  ?child dbo:parent ?ram_khamhaeng .

  # Step 3: Find parents of those children
  ?child dbo:parent ?parent .
}
```

This query assumes that the relationship between a person and their parent is represented using `dbo:parent`. Adjustments might be necessary depending on how DBpedia structures these relationships.",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
16,27,val,Give me the person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person WHERE {
  # Find alumni of Ohio State University
  ?alumnus dbo:almaMater dbr:Ohio_State_University ;
           dbp:birthday ?birthDate ;
           dbp:birthName ?birthName .

  # Find people with the same birth name
  ?person dbp:birthName ?birthName .
}
```

This query does the following:
- It selects alumni of Ohio State University by checking their `almaMater` property.
- For each alumnus, it retrieves their `birthName`.
- It then finds any person (`?person`) whose `birthName` matches that of an alumnus.",3,3,4,3,1,3,3,71,0,0,90,0,0.0,0
303,19,val,"Give me the entity in Panama and party of Arnulfo Arias and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?politician ?party WHERE {
  # Find Arnulfo Arias and his political affiliations
  VALUES (?arnulfoArias) { dbr:Ariosto_Arias }
  
  # Get the parties associated with Arnulfo Arias
  ?arnulfoArias dbo:memberOfParty ?party .
  
  # Find politicians in Panama related to these parties during the United States invasion of Panama
  ?politician dbo:nationality dbr:Panama ;
              dbo:memberOfParty ?party ;
              a dbo:Politician ;
              dbo:relatedToEvent dbr:United_States_invasion_of_Panama .
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
617,21,val,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Seleucus II Callinicus and his children
  dbr:Seleucus_II_Callinicus dbo:spouse ?parent .
  ?parent dbo:child ?child .

  # Children of Seleucus II (his grandchildren)
  ?child dbo:child ?grandchild .

  # Ensure the grandchild is royalty
  ?grandchild a dbo:Monarch .

  # The grandchild must be the parent of Nysa
  ?grandchild dbo:spouse ?nysaParent .
  ?nysaParent dbo:child dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .
}
```",3,4,4,2,2,3,3,71,0,0,2,0,0.0,0
996,15,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz and entity in France.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?force WHERE {
  VALUES ?location { dbr:Lac_d'Avoriaz }
  
  ?award dbo:recipient ?location .
  OPTIONAL { ?award dbo:attribute ?force . } # Assuming 'force' is an attribute of the award
}
```

This query assumes that awards have a recipient property linking them to Lac d'Avoriaz and that any associated force or impact might be captured as an attribute.",4,4,5,3,2,3,2,20,0,0,4,0,0.0,0
92,36,val,Give me the band of the person born as the birth name of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael"" .
  ?person dbo:memberOf dbr:Nevermore .
  ?person dbo:memberOf ?band .
}
```

This query does the following:
- It looks for a person (`?person`) whose birth name is ""Joseph Michael"".
- Ensures that this person is a member of the band Nevermore.
- Retrieves any other bands (`?band`) that this person is associated with.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
492,28,val,"Give me the commander in Franco-Hova Wars and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and person decedent at Algiers.","SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?descendant
WHERE {
  # Find the commander in the Franco-Hova Wars
  ?war dbo:commander ?commander .
  FILTER(STRSTARTS(STR(?war), ""Franco-Hova War""))

  # Find descendants of Joseph C. Satterthwaite
  dbr:Joseph_C._Satterthwaite dbo:descendant ?satterthwaiteDescendant .

  # Find a person associated with Algiers and their descendants
  ?algiersPerson dbo:location dbr:Algiers .
  ?algiersPerson dbo:descendant ?algiersDescendant .

  # Find common descendants
  FILTER(?satterthwaiteDescendant = ?algiersDescendant)
  BIND(?satterthwaiteDescendant AS ?descendant)
}
```

This query attempts to:
- Identify the commander of the Franco-Hova Wars.
- Retrieve descendants of Joseph C. Satterthwaite.
- Find individuals associated with Algiers and their descendants.
- Determine if there are common descendants between these two groups.

Note: The actual availability of data in DBpedia may vary, and some assumptions about property usage (like `dbo:commander` or `dbo:descendant`) might need adjustments based on the dataset's structure. Adjustments may be necessary depending on the specific details available in DBpedia at the time of querying.",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
232,21,val,Give me the native of London and child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbr:John_Devon_Roland_Pertwee .
  ?person dbo:child ?child .

  ?child dbo:nativePlace dbr:London .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
645,15,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock and alma mater of Sylvia Pankhurst.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the commander of the Battle of Diamond Rock
  ?battle dbo:commander ?commander .
  
  FILTER (str(?battle) = ""Battle_of_Diamond_Rock"")

  # Find Sylvia Pankhurst's alma mater
  ?sylvia dbo:almaMater ?university .

  FILTER (str(?sylvia) = ""Sylvia_Pankhurst"")

  # Get the residence of both individuals
  ?commander dbo:residenceLocation ?location .
  ?sylvia dbo:residenceLocation ?location2 .

  # Ensure they have the same country as their residence
  ?location dbo:country ?country .
  ?location2 dbo:country ?country2 .

  FILTER (?country = ?country2)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
488,24,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administration
WHERE {
  # Yūki Hideyasu's father, Yūki Ujitomo
  dbr:Yuki_Ujitomo dbo:deathPlace ?deathPlace .

  # Emperor Go-Yōzei's administration
  dbr:Emperor_Go-Yozei dbo:reign ?administration .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
435,15,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?articleText ?territory ?nickname WHERE {
  # Retrieve information about the Constitution of Iceland
  OPTIONAL {
    dbr:Iceland_Constitution dbo:text ?constitutionText .
    FILTER(CONTAINS(LCASE(?constitutionText), ""article 62 section iv""))
    BIND(SUBSTR(?constitutionText, STRSTARTS(UCASE(?constitutionText), ""ARTICLE 62 SECTION IV""), 1000) AS ?articleText)
  }
  
  # Retrieve information about the territory of Iceland
  dbr:Iceland dbo:administrativeTerritory ?territory .
  
  # Retrieve the nickname ""Land of Fire and Ice""
  OPTIONAL {
    dbr:Iceland dbp:nickname ?nickname .
    FILTER(LCASE(?nickname) = ""land of fire and ice"")
  }
}
```",3,6,4,2,2,2,3,28,0,0,1,0,0.0,0
838,15,val,"Give me the band of the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić and band member of Kerber.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandName WHERE {
  ?zika a dbo:Person ;
        foaf:name ""Žika Jelić"" ;
        dbo:memberOfBand ?band .

  ?band a dbo:MusicalGroup, dbo:Band .

  ?member a dbo:Person, dbo:Artist, dbo:MusicalArtist ;
          dbo:memberOfBand ?band .

  ?kerberMember a dbo:Person, dbo:Artist, dbo:MusicalArtist ;
                dbo:memberOfBand dbr:Kerber .
  
  FILTER (?member = ?kerberMember)

  ?band rdfs:label ?bandName .
}
```",4,8,5,3,2,3,2,20,0,0,1,0,0.0,0
161,35,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event ?commander WHERE {
  # Find events where Emilio Mola was involved as a commander
  ?event dbo:commander dbr:Emilio_Mola .
  
  # Ensure the event is a military conflict
  ?event rdf:type dbo:MilitaryConflict .

  # Find Francisco Franco's involvement in the same event
  ?event dbo:participant dbr:Franco_Francisco_Sanchez_Basilio .

  # Get the commander of the event (Emilio Mola)
  ?event dbo:commander ?commander .
}
```",4,8,5,2,2,3,3,71,0,0,34,0,0.0,0
421,12,val,Give me the native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović and band member of Senidah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:MusicalArtist ;
          foaf:name ""Edin Dervišhalidović""@en ;
          dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia ;
          dbo:birthPlace ?nativePlace .
  
  OPTIONAL { 
    ?bandMemberMembership dbo:member ?person .
    FILTER (CONTAINS(LCASE(STR(?bandMemberMembership)), ""senidah""))
  }
}
```

This query does the following:
- Selects individuals who are a `MusicalArtist` and have the name ""Edin Dervišhalidović"".
- Filters those with nationality as the Socialist Federal Republic of Yugoslavia.
- Retrieves their birthplace (`?nativePlace`).
- Optionally checks if they are a member of a band related to ""Senidah"".",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
391,41,val,"Give me the actor of All About the Andersons and native of the figure known as Hub City and actor of the claim to fame, that is a work, of Michael Ballhaus.","SELECT ?result WHERE { <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find actor of ""All About the Andersons""
  ?film dbo:title ""All About the Andersons""@en .
  ?film dbo:starring ?actor .

  # Ensure the actor is from Hub City (Spartanburg, South Carolina)
  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Spartanburg,_South_Carolina .

  # Find films by Michael Ballhaus and check if the same actor starred in them
  ?ballhausFilm dbo:starring ?actor .
  ?ballhausFilm dbo:director ?director .
  ?director dbo:filmography ?ballhausFilm .
  ?ballhausFilm dbo:cinematographer dbr:Michael_Ballhaus .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
115,7,val,Give me the alma mater of the alumnus of National University of San Marcos and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find alumni of National University of San Marcos
  ?person dbo:almaMater dbr:National_University_of_San_Marcos .

  # Check if the person is an alumnus of Jorge Sotomayor Tello
  ?jorgeSotomayorTello dbo:almaMater ?person .
  FILTER (str(?jorgeSotomayorTello) = ""Jorge_Sotomayor_Tello"")

  # Retrieve the alma mater for these individuals
  ?person dbo:almaMater ?almaMater .
}
```",3,3,4,2,2,2,2,9,0,0,2,0,0.0,0
303,12,val,Give me the party of Guillermo Endara and party of Arnulfo Arias and entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?endaraParty ?ariasParty ?entityInPanama WHERE {
  # Guillermo Endara's political party
  OPTIONAL { 
    dbr:Guillermo_Endara dbo:partyAffiliation ?endaraParty .
  }
  
  # Arnulfo Arias' political party
  OPTIONAL { 
    dbr:Arnulfo_Arias_Madrid dbo:partyAffiliation ?ariasParty .
  }

  # Entities in Panama
  OPTIONAL {
    ?entityInPanama a dbo:Place ;
                   dbo:country dbr:Panama .
  }
}
```",3,3,4,1,3,2,3,28,0,851,1,0.0,0.0,0
294,14,val,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of the architect of P. D. Houston Jr. House.","SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?burialPlace WHERE {
  # Luke Lea's burial place
  OPTIONAL {
    VALUES ?person { dbr:Luke_Lea_(American_politician) }
    ?person dbo:deathPlace ?burialPlace .
  }

  # Architect of P. D. Houston Jr. House and their burial place
  OPTIONAL {
    ?house dbo:architect ?architect .
    FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))
    VALUES ?person { ?architect }
    ?person dbo:deathPlace ?burialPlace .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,27,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/office> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?governmentAgencyLeader WHERE {
  # Step 1: Find Gustav Jonson's office
  ?officeHolder a dbo:OfficeHolder ;
               foaf:name ""Gustav Jonson""@en .
  
  # Step 2: Identify the leader of Gustav Jonson's office
  ?gustavJonsonsOffice dbo:leader ?officeLeader .

  # Step 3: Find the government agency led by this leader
  ?governmentAgency a dbo:GovernmentAgency ;
                   dbo:head ?officeLeader .
  
  # Return the name of the government agency leader
  ?governmentAgencyLeader foaf:name ?name .
}
```",3,6,4,3,1,3,3,71,0,0,1,0,0.0,0
778,12,val,"Give me the entity in United States and author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?software ?entity WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bill Joy"" ;
          dbo:birthPlace dbr:United_States .
  
  ?person dbo:work ?software .
  ?software a dbo:Software .

  OPTIONAL { ?software dbp:country dbr:United_States . }
}
```

This query does the following:
- Selects software works authored by Bill Joy.
- Ensures that either the software or its associated entity is linked to the United States.",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
161,30,val,"Give me the military force of Rif War and military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?militaryForce ?commander WHERE {
  # Rif War
  VALUES (?rifWar) { dbr:Rif_War }
  
  ?rifEvent dbo:event = ?rifWar .
  ?rifEvent dbo:militaryCommander ?rifCommander .
  OPTIONAL { ?rifEvent dbo:militaryForce ?rifMilitaryForce . }

  # Spanish Civil War
  VALUES (?civilWar) { dbr:Spanish_Civil_War }
  
  ?civilEvent dbo:event = ?civilWar .
  ?civilEvent dbo:militaryCommander ?civilCommander .
  OPTIONAL { ?civilEvent dbo:militaryForce ?civilMilitaryForce . }

  # Emilio Mola
  VALUES (?emilioMola) { dbr:Emilio_Mola }
  
  OPTIONAL {
    ?rifCommander foaf:name ?commanderName ;
                 dbo:wikiPageRedirects ?emilioMola .
    
    ?civilCommander foaf:name ?commanderName ;
                   dbo:wikiPageRedirects ?emilioMola .
  }

  BIND(?rifEvent AS ?event)
  OPTIONAL { BIND(?rifMilitaryForce AS ?militaryForce) }
  OPTIONAL { BIND(?rifCommander AS ?commander) }

  BIND(?civilEvent AS ?event)
  OPTIONAL { BIND(?civilMilitaryForce AS ?militaryForce) }
  OPTIONAL { BIND(?civilCommander AS ?commander) }
}
```",4,5,5,2,3,3,3,71,0,0,11,0,0.0,0
994,30,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?redTideArtist ?dokkenBandMember ?saSlayerArtist
WHERE {
  # Associated musical artist of Red Tide (band)
  OPTIONAL {
    dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?redTideArtist .
  }

  # Band member of Donald Maynard Dokken
  OPTIONAL {
    dbr:Don_Dokken dbo:birthName ""Donald Maynard Dokken"" ;
                   dbo:associatedBandMember ?dokkenBandMember .
  }

  # Associated musical artist of S.A. Slayer
  OPTIONAL {
    dbr:S._A._Slayer dbo:associatedMusicalArtist ?saSlayerArtist .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
161,22,val,"Give me the military force of Rif War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Identify the Rif War event
  dbr:Rif_War a dbo:Event .

  # Find Emilio Mola as a commander in this event
  ?commanderRole dbo:agent dbr:Emilio_Mola ;
                 dbo:event dbr:Rif_War ;
                 a dbo:MilitaryCommanderRole .

  # Retrieve the military force associated with this role
  ?commanderRole dbo:militaryForce ?militaryForce .
}
```",3,4,4,2,2,3,3,71,0,0,12,0,0.0,0
9,20,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the alma mater of the Royal Medal awardee
  {
    ?person dbo:award dbr:Royal_Medal .
    ?person dbo:almaMater ?almaMater .
  }
  
  UNION
  
  # Find the alma mater of John Alderdice, Baron Alderdice
  {
    dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
  }
}
```",3,3,4,2,2,3,3,71,1,126,0,0.007874015748031496,1.0,0.015625
360,17,val,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela and reference to Manfred Mann.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native ?manfredMannReference
WHERE {
  # Find Winnie Madikizela-Mandela's death place
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Get natives of the death place
  ?native dbp:nativeOf ?deathPlace .

  # Reference to Manfred Mann (assuming some connection or property)
  OPTIONAL {
    ?manfredMannReference dbp:relatedTo dbr:Manfred_Mann .
  }
}
```

This query does the following:
- Retrieves the death place of Winnie Madikizela-Mandela.
- Ensures that this place is a settlement.
- Finds individuals native to this location.
- Optionally includes any reference or connection to Manfred Mann.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
378,33,val,"Give me the war of Carl Pontus Gahn and war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?relatedWar WHERE {
  # Find wars associated with Carl Pontus Gahn
  ?gahn a dbo:MilitaryPerson ;
        foaf:name ""Carl Pontus Gahn"" ;
        dbo:participatedIn ?war .

  OPTIONAL {
    # Check if the war is related to the Peninsular War
    ?war dbo:relatedTo dbr:Peninsular_War .
    BIND(dbr:Peninsular_War AS ?relatedWar)
  }

  UNION

  OPTIONAL {
    # Alternatively, find wars where Carl Pontus Gahn's commander was involved in the Peninsular War
    ?gahn dbo:commandedBy ?commander ;
          dbo:participatedIn ?war .
    ?commander dbo:participatedIn ?relatedWar .
    FILTER(?relatedWar = dbr:Peninsular_War)
  }
}
```",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
996,13,val,Give me the force of the awardee of the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Identify Lac d'Avoriaz
  dbr:Lac_d%27Avoriaz dbo:elevation ?elevation .
  
  # Find the awardee related to this elevation (hypothetical property)
  ?elevation dbo:awardee ?person .

  # Retrieve the force associated with that person (hypothetical property)
  ?person dbo:force ?force .
}
```

This query assumes hypothetical properties `dbo:elevation`, `dbo:awardee`, and `dbo:force` exist in DBpedia, which may not be directly available. You might need to adjust based on actual data availability.",3,3,4,3,1,3,2,20,0,0,11,0,0.0,0
281,34,val,Give me the war of the awardee of the award of Jonathon Band and war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?war
WHERE {
  # Jonathan Band and his award
  ?person rdfs:label ""Jonathan Band""@en .
  ?award dbo:recipient ?person ;
         dbo:awardedFor ?event .
  
  # Wars associated with the event of the award
  ?event dbo:participatedIn ?war .

  # New Zealand Army and its wars
  ?army rdfs:label ""New Zealand Army""@en .
  ?army dbo:participatedIn ?war .
}
```

This query assumes:
- Jonathan Band has an entry in DBpedia.
- The award he received is linked to a specific event or war.
- The New Zealand Army's participation in wars is directly available.",4,4,5,3,2,3,3,71,0,0,9,0,0.0,0
55,15,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band of Newsted.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Used to Love Her is by Metallica
  dbr:Metallica dbo:member ?metallicaBandMember .
  
  # Jason Newsted was a member of Metallica and later formed Echobrain
  dbr:Jason_Newsted dbo:member dbr:Echobrain ;
                    dbo:band dbr:Metallica .

  # Find the producer who is also a band, associated with Metallica
  ?producerBand dbo:producedBy dbr:Metallica .
  
  # The producer must be a band itself
  ?producerBand rdf:type dbo:MusicalArtist .

  # Find the band member of this producer-band
  ?producerBand dbo:member ?bandMember .

  # Ensure the band member is also in Echobrain (Newsted's band)
  ?bandMember dbo:member dbr:Echobrain .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
981,12,val,"Give me the birth place of the person born, that is a beauty queen, as  and entity in Indonesia.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/birthName> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:nationality dbr:Indonesia .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query does the following:
- Selects individuals (`?person`) who are classified as `dbo:BeautyQueen`.
- Ensures these individuals have a nationality of Indonesia (`dbr:Indonesia`).
- Retrieves their birthplace (`?birthPlace`).",3,4,4,2,2,3,2,20,0,0,19,0,0.0,0
534,11,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?birthPlace WHERE {
  # Find the headquarters of Royal Dublin Society
  dbr:Royal_Dublin_Society dbo:location ?headquarters .

  # Find Desmond FitzGerald and his child who is a politician and an office holder
  dbr:Desmond_FitzGerald_(politician) dbo:child ?child .
  
  # Ensure the child is a politician and an office holder
  ?child rdf:type dbo:Politician ;
         dbo:officeHolderOf ?office .

  # Get the birthplace of that child
  ?child dbo:birthPlace ?birthPlace .
}
```",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
161,42,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Emilio Mola and his military force
  OPTIONAL {
    dbr:Emilio_Mola dbo:militaryCommanderOf ?militaryForce1 .
    ?militaryForce1 a dbo:MilitaryConflict ;
                   dbo:participatedIn ?event1 .
    FILTER(?event1 = dbr:Spanish_Civil_War)
  }

  # Francisco Franco and his military force
  OPTIONAL {
    dbr:Franco dbo:militaryCommanderOf ?militaryForce2 .
    ?militaryForce2 a dbo:MilitaryConflict ;
                   dbo:participatedIn ?event2 .
    FILTER(?event2 = dbr:Spanish_Civil_War)
  }

  # Find common commanders
  OPTIONAL {
    ?commander dbo:militaryCommanderOf ?militaryForce1 .
    ?commander dbo:militaryCommanderOf ?militaryForce2 .
  }
}
```

This query attempts to find a commander who was associated with both Emilio Mola's and Francisco Franco's military forces during the Spanish Civil War. It uses optional patterns to capture these relationships and filters for the specific event of interest.",5,9,6,2,3,3,3,71,0,0,32,0,0.0,0
801,35,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?writer foaf:name ""Zev Love X""@en .
  ?writer dbo:birthName ""Daniel Dumile""@en .
  ?writer dbo:alterEgo dbr:The_Shadow_(comics) .
  ?album dbo:composer ?writer .
  ?album dbo:title ""40 Dayz & 40 Nightz""@en .
  ?artist dbo:associatedBand ?band .
  ?band dbo:leadArtist ?writer .
  ?artist a dbo:MusicalArtist .
}
```",4,6,5,2,2,3,3,71,0,0,22,0,0.0,0
801,32,val,"Give me the professional in the alter ego of The Shadow and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?producer WHERE {
  # The Shadow's alter ego and associated individual
  dbr:The_Shadow dbo:alterEgoOf ?shadowAlterEgo .
  
  # Find the professional linked to this alter ego
  ?shadowAlterEgo dbp:profession ?professional .

  # 50 Cent's songs
  ?song dbo:artist dbr:50_Cent ;
        a dbo:Songs .

  # Producer of the song
  ?producer dbo:produced ?song .
  
  # Link producer to professional in The Shadow's alter ego
  ?shadowAlterEgo dbp:name ?producerName .
  FILTER(?producerName = ?producer)
}
```",4,7,5,2,2,3,3,71,0,0,27,0,0.0,0
534,12,val,Give me the birth place of Garret FitzGerald and headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?headquarters WHERE {
  # Garret FitzGerald's birthplace
  ?person a dbo:Person ;
          foaf:name ""Garret FitzGerald""@en .
  ?person dbo:birthPlace ?birthPlace .

  # RDS Arena owner and headquarters
  ?arena a dbo:Arena ;
         dbp:name ""RDS Arena""@en ;
         dbo:location ?location .
  ?owner dbo:owns ?arena .
  ?owner dbp:headquarters ?headquarters .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
392,16,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and entity in Italy.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/province> ?result . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?province WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@it .
  
  OPTIONAL { ?person dbo:nationality dbr:Italy . }
  
  ?settlement dbo:settlement dbr:Sebastiano_Bianchetti ;
              a dbo:Settlement ;
              dbp:country dbr:Italy .

  ?settlement dbo:locatedIn dbr:?province .
}
```

This query does the following:
- Searches for an entity named ""Sebastiano Bianchetti"" that is of type `dbo:Person`.
- Ensures this person has a nationality linked to Italy.
- Finds a settlement associated with Sebastiano Bianchetti, ensuring it's classified as a `dbo:Settlement` and located in Italy.
- Retrieves the province (`?province`) where this settlement is located.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
421,18,val,Give me the person born as the birth name of Dino Merlin and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?placeOfBirth WHERE {
  ?person a dbo:MusicalArtist ;
          dbp:birthName ?birthName ;
          dbo:birthPlace ?placeOfBirth .
  
  FILTER (?birthName = ""Dino Merlin"")
  
  ?placeOfBirth dbo:country dbr:SFR_Yugoslavia .
}
```

This query does the following:
- Selects individuals who are classified as `MusicalArtist`.
- Filters those whose birth name is ""Dino Merlin"".
- Ensures that their place of birth is in the Socialist Federal Republic of Yugoslavia.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
488,25,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
# Query 1: Death Place of Tokugawa Ieyasu
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
    dbr:Tokugawa_Ieyasu dbo:placeOfBirth ?birthPlace .
    dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}

# Query 2: Administration of the Father of Emperor Go-Mizunoo
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
    dbr:Emperor_Go-Mizunoo dbo:father ?father .
    ?father dbo:officeHeld ?administration .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,23,val,Give me the child of the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jon Pertwee""@en .
  
  OPTIONAL { 
    ?person dbo:birthName ""Jon Pertwee""@en .
  }
  
  ?parentChildRelation dbo:parent ?person ;
                      dbo:child ?child .
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
488,18,val,Give me the birth place of Enomoto Takeaki and death place of Tokugawa Ieyasu and administration of Emperor Go-Yōzei.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace ?administrationPeriod
WHERE {
  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlace .

  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .

  # Emperor Go-Yōzei's administration period
  dbr:Emperor_Go-Yozei dbo:reignStart ?start .
  dbr:Emperor_Go-Yozei dbo:reignEnd ?end .
  BIND(CONCAT(""Reigned from "", STR(?start), "" to "", STR(?end)) AS ?administrationPeriod)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
820,13,val,Give me the professional in the award of the author of Understanding Comics.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession 
WHERE {
  dbr:Understanding_Comics dbo:author dbr:Scott_McCloud .
  dbr:Scott_McCloud dbo:occupation ?profession .
}
```",3,3,4,3,1,3,2,20,0,0,39650,0,0.0,0
378,25,val,Give me the war of Joaquín Blake and claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame WHERE {
  # Joaquín Blake's involvement in a war
  dbr:Joaqu%C3%ADn_Blake dbo:participatedIn ?war .
  
  # Joaquín Blake's claim to fame during the Great Siege of Gibraltar
  OPTIONAL { 
    dbr:Great_Siege_of_Gibraltar dbo:commander ?commander .
    ?commander rdfs:label ""Joaquín Blake""@en .
    ?commander dbo:famousFor ?claimToFame .
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
281,32,val,"Give me the entity in the birth place, that is a country, of Bob Heffron and war of the awardee of Knight Grand Cross of the Order of the Bath.",SELECT ?result WHERE { <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?result <http://dbpedia.org/ontology/place> ?v3 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country ?war 
WHERE {
  # Find Bob Heffron's birthplace that is a country
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country ;
              rdfs:label ?country .

  # Find the war associated with an awardee of Knight Grand Cross of the Order of the Bath
  ?person dbo:award ?order .
  ?order rdfs:label ""Knight Grand Cross of the Order of the Bath""@en .
  ?person dbo:militaryConflict ?war .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
492,41,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v4 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Frédéric-Georges Herr and his involvement in a war
  ?war dbo:participant dbr:Frédéric-Georges_Herr .
  
  # The war is an event linked to Algiers
  ?war dbo:location dbr:Algiers .

  # Joseph C. Satterthwaite's connection through his role
  ?role dbo:agent dbr:Joseph_C._Satterthwaite ;
        a dbo:Position ;
        rdfs:label ""US Assistant Secretary of State for African Affairs""@en .
  
  ?war dbo:relatedWork ?role .

  # Find the commander of the war
  ?war dbo:commander ?commander .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
232,43,val,"Give me the native of London and child of Jon Pertwee and actor of the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v0 <http://dbpedia.org/ontology/knownFor> ?v4 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace dbr:London .
  
  ?child dbo:parent dbr:Jon_Pertwee ;
         dbo:actorIn ?film, ?militaryConflict .

  FILTER (?film rdf:type dbo:Film && ?militaryConflict rdf:type dbo:MilitaryConflict)

  BIND(?child AS ?person)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
747,19,val,Give me the person born on the birth date of Pavlo Khudzik and band of Amba Shepherd.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band 
WHERE {
  # Get the birthdate of Pavlo Khudzik
  VALUES ?khudzikBirthDate { dbr:Pavlo_Khudzik dbo:birthday ?khudzikBirthDate }

  # Find people born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?birthdate .
  FILTER (?birthdate = ?khudzikBirthDate && ?person != dbr:Pavlo_Khudzik)

  OPTIONAL {
    # Get the band associated with Amba Shepherd
    VALUES ?ambashepherd { dbr:Amba_Shepherd }
    ?ambashepherd dbo:band ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,11,val,Give me the spouse of Aristotle Onassis and parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Aristotle Onassis and his spouse
  dbr:Aristotle_Onassis dbo:spouse ?spouse .

  # Tina Onassis Niarchos as a child of the spouse
  ?tina dbo:parent ?spouse .
  FILTER (str(?tina) = ""Tina_Onassis_Niarchos"")

  # Children of Tina Onassis Niarchos
  ?child dbo:parent ?tina .

}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
547,43,val,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/property/starring> ?v4 . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  # James Burton (Egyptologist)
  VALUES (?person) { 
    dbr:James_Burton_(Egyptologist) 
  }
  
  OPTIONAL {
    ?person dbo:name ?name .
  }
  
  OPTIONAL {
    ?person dbo:placeOfBurial ?restingPlace .
  }

  UNION

  # Alan Cunningham
  VALUES (?person) { 
    dbr:Alan_Cunningham_(explorer)
  }
  
  OPTIONAL {
    ?person dbo:name ?name .
  }
  
  OPTIONAL {
    ?person dbo:placeOfBurial ?restingPlace .
  }

  UNION

  # Actor of the show with Emily Richard
  ?show dbo:starring dbr:Emily_Richard ;
        dbo:starring ?actor .

  VALUES (?person) { 
    ?actor
  }
  
  OPTIONAL {
    ?actor dbo:name ?name .
  }
  
  OPTIONAL {
    ?actor dbo:placeOfBurial ?restingPlace .
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
801,21,val,Give me the associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the resource for Chris Taylor, music producer
  ?chrisTaylor a dbo:MusicProducer ;
               foaf:name ""Chris Taylor"" ;
               dbo:alsoKnownAs dbr:The_Shadow .

  # Find associated musical artists
  ?chrisTaylor dbo:associatedMusicalArtist ?artist .
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
435,18,val,Give me the region of Greenwich Mean Time and work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?work 
WHERE {
  # Find the region associated with Greenwich Mean Time
  ?gmt a dbo:TimeZone ;
      rdfs:label ""Greenwich Mean Time""@en .
  
  OPTIONAL { ?gmt dbo:inRegion ?region . }
  
  # Find an author who wrote about Iceland and one of their works
  ?book dbo:about dbr:Iceland ;
        dbo:author ?author .
  
  OPTIONAL { ?author dbo:work ?work . }
  
  FILTER (lang(?gmt) = 'en' && lang(?region) = 'en')
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
328,20,val,Give me the awardee of Order of Suvorov and commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v2 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:awardeeOf dbr:Order_of_Suvorov .
  ?person dbo:commanderInForce dbr:Ferenc_Szálasi .
}
```

This query assumes that the properties `dbo:awardeeOf` and `dbo:commanderInForce` are used in DBpedia to link individuals to these specific roles. Adjustments might be necessary if different properties or resource identifiers are used.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
754,12,val,Give me the parent of the child of Ram Khamhaeng and parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?parentOfLoeThai WHERE {
  # Find children of Ram Khamhaeng
  ?child dbo:father dbr:Ram_Khamhaeng .
  
  # Find parents of those children (grandchildren of Ram Khamhaeng)
  ?child dbo:motherOrFather ?parentOfChild .

  # Find parent of Loe Thai
  dbp:Lö_Thai dbo:father|dbo:mother ?parentOfLoeThai .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,32,val,"Give me the associated musical artist of the associated musical artist of Watchtower (band) and associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of Watchtower
  ?watchtower a dbo:Band ;
              dbo:associatedMusicalArtist ?artist1 .

  FILTER (str(?watchtower) = ""Watchtower_(band)"")

  # Step 2: Find associated musical artist of the first artist
  ?artist1 dbo:associatedMusicalArtist ?artist2 .

  # Step 3: Identify a Meshuggah member who is also a band and group and organization
  ?meshuggahMember a dbo:Band ;
                   dbo:bandMember ?meshuggah ;
                   a dbo:Organization ;
                   a dbo:Group .

  FILTER (str(?meshuggah) = ""Meshuggah"")

  # Step 4: Find associated musical artist of this Meshuggah member
  ?meshuggahMember dbo:associatedMusicalArtist ?artist3 .

  # Final step: Ensure the final artist is the same for both paths
  FILTER (?artist2 = ?artist3)
  
  BIND(?artist2 AS ?finalArtist)
}
```",4,7,5,2,2,3,3,71,0,0,5,0,0.0,0
391,19,val,Give me the native of the figure known as Hub City and actor of The Departed.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Matt Damon""@en .
  ?film dbo:starring ?person ;
        rdfs:label ""The Departed""@en .
  ?person dbo:birthPlace ?nativePlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,18,val,Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?civilWarForce ?rifWarForce WHERE {
  # Biscay Campaign commander during the Spanish Civil War
  OPTIONAL {
    ?campaign dbo:partOf dbr:Spanish_Civil_War .
    ?campaign dbo:commander ?commander .
    FILTER(STRSTARTS(STR(?campaign), ""http://dbpedia.org/resource/Biscay_Campaign""))
  }

  # Military forces in the Spanish Civil War
  OPTIONAL {
    ?civilWarForce dbo:partOf dbr:Spanish_Civil_War .
    ?civilWarForce a dbo:MilitaryUnit .
  }

  # Military forces in the Rif War
  OPTIONAL {
    ?rifWarForce dbo:partOf dbr:Rif_War .
    ?rifWarForce a dbo:MilitaryUnit .
  }
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
48,13,val,"Give me the band of the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find works produced by Shellback
  ?work dbo:producer dbr:Shellback_(record_producer) .
  
  # Find writers of those works
  ?work dbo:writer ?writer .

  # Find bands associated with the writer
  ?writer dbo:musicalBand ?band .
}
```",3,4,4,3,1,3,2,20,0,0,922,0,0.0,0
54,23,val,Give me the child of the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?childOfThinkhaya WHERE {
  # Step 1: Find Thinkhaya of Pagan
  ?thinkhaya dbo:spouse ?spouse .
  ?thinkhaya rdfs:label ""Thinhlaing""@en .

  # Step 2: Find a child of Thinkhaya
  ?child dbo:parent ?thinkhaya ;
         rdf:type dbo:Person .

  # Step 3: The father of that child is Thinkhaya himself

  # Step 4: Find the child of Thinkhaya (father)
  ?grandChild dbo:parent ?thinkhaya .
}
```",3,3,4,3,1,3,3,71,0,0,3,0,0.0,0
435,19,val,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice and region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?territory dbo:country dbr:Iceland .
  ?territory a dbo:Settlement .
  OPTIONAL { ?territory rdfs:label ?label FILTER (lang(?label) = 'is') }
}
```",4,7,5,2,3,2,3,28,0,179,1,0.0,0.0,0
314,14,val,Give me the awardee of the award of Sergei Makovetsky and person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?deceasedPerson WHERE {
  # Find Sergei Makovetsky and his awards
  ?s dbr:Sergei_Makovetsky dbo:awardedBy ?award .

  # Find persons deceased in Madrid
  ?d dbr:Madrid dbo:deathPlace ?person .
  ?person rdfs:label ?deceasedPerson .
  
  FILTER (lang(?deceasedPerson) = 'en')
}
```

This query does the following:
- It selects awards associated with Sergei Makovetsky.
- It finds persons who have a death place of Madrid and retrieves their labels.

Note: The exact DBpedia resource for Sergei Makovetsky (`dbr:Sergei_Makovetsky`) should be verified as it might not exist directly. Adjust the query based on the actual resource identifier if needed.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,15,val,"Give me the parent of Mieszko II Lambert and child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentOfMieszkoII ?royalChild
WHERE {
  # Find Mieszko II Lambert's parent
  ?mieszko2 dbo:spouse ?spouse .
  ?spouse dbo:child ?parentOfMieszkoII .

  # Find Mlada's parent
  ?mlada dbo:child ?childOfParentOfMlada .
  ?childOfParentOfMlada dbo:parent ?parentOfMlada .

  # Find a child of the parent of Mlada who is royalty
  ?parentOfMlada dbo:child ?royalChild .
  ?royalChild rdf:type dbo:Monarch .
}
```",4,5,5,3,2,3,2,20,1,14363,0,6.961849067112225e-05,1.0,0.0001392272885485555
303,17,val,"Give me the party of Arnulfo Arias and entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?country
WHERE {
  # Arnulfo Arias and his political party
  dbr:Aarnulfo_Arias dbo:politicalParty ?party .

  # El Valle de Antón in Panama
  dbr:El_Valle_de_Antón dbo:country ?country .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
392,12,val,Give me the region of Central European Time and entity in Italy and province of Schio.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?province WHERE {
  ?region a dbo:Region .
  ?region dbo:timeZone dbr:Central_European_Time .
  ?region dbo:country dbr:Italy .
  
  OPTIONAL { 
    ?region dbo:part dbr:Province_of_Schio .
    BIND(dbr:Province_of_Schio AS ?province)
  }
}
```

This query does the following:
- Selects regions that are classified as `dbo:Region`.
- Filters these regions to those using `Central European Time`.
- Ensures the region is in Italy.
- Optionally checks if the region includes the Province of Schio and binds it to the variable `?province`.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
285,12,val,Give me the spouse of the professional in  and parent of Alexander Onassis.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person dbo:child dbr:Aristotle_Onassis .
  ?person dbo:spouse ?spouse .
}
```",3,3,4,2,2,3,2,20,0,0,2,0,0.0,0
492,22,val,"Give me the person decedent at French Algeria and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?personFrenchAlgeria ?personAlgiers
WHERE {
  # Find person decedent at French Algeria
  ?personFrenchAlgeria dbo:deathPlace dbr:French_Algeria .
  
  # Find person decedent at Algiers, the capital of Algeria
  ?personAlgiers dbo:deathPlace dbr:Algiers .
}
```",3,4,4,2,2,3,3,71,16,120,0,0.11764705882352941,1.0,0.21052631578947367
16,32,val,Give me the spouse of the person born as Ted Martin McGinley and professional in the profession of Satomi Ishihara.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ?v3 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouse WHERE {
  VALUES ?person { 
    dbr:Ted_McGinley 
    dbr:Satomi_Ishihara
  }
  
  OPTIONAL { ?person dbo:birthName ?birthName . FILTER(?birthName = ""Ted Martin McGinley"") }
  OPTIONAL { ?person dbo:profession ?profession . FILTER(?profession = dbp:Actress) } # Assuming Satomi Ishihara's profession is Actress

  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",4,4,5,2,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
378,35,val,Give me the war of the person born as Carl Pontus Gahn and claim to fame of the commander in Great Siege of Gibraltar.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander
WHERE {
  # Carl Pontus Gahn and his involvement in wars
  dbr:C._P._Gahn dbo:militaryConflict ?war .
  
  # George Augustus Eliott as the commander during the Great Siege of Gibraltar
  dbr:George_Augustus_Eliott dbo:commanded ?siege .
  FILTER(CONTAINS(LCASE(?siege), ""great siege of gibraltar""))
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
747,40,val,"Give me the band of Amba Shepherd and band of Shèna and person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v2 <http://dbpedia.org/ontology/birthDate> ?v1 . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?ambaBand ?shenaBand ?personBornOnSameDate
WHERE {
  # Find Amba Shepherd's band
  ?ambaShepherd dbo:birthName ""Amba Shepherd""@en.
  ?ambaShepherd dbo:musicalArtist ?ambaBand.

  # Find Shèna's band
  ?shena dbo:birthName ""Shèna""@en.
  ?shena dbo:musicalArtist ?shenaBand.

  # Find a deceased athlete and soccer player from Zolotonosha
  ?deceasedPerson dbo:deathPlace dbr:Zolotonosha;
                  dbo:sport dbp:Soccer;
                  dbo:occupation dbp:Athlete;
                  dbo:birthDate ?birthDate.

  # Find a person born on the same date as the deceased athlete
  ?personBornOnSameDate dbo:birthDate ?birthDate.
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
783,14,val,"Give me the band member of the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v2 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the DBpedia resource for Ebony Reigns
  dbr:Ebony_Reigns a dbo:MusicalArtist ;
                   dbo:birthPlace ?birthPlace .

  # Ensure she is recognized as an artist and musical artist
  FILTER EXISTS { dbr:Ebony_Reigns a dbo:Artist . }
  FILTER EXISTS { dbr:Ebony_Reigns a dbo:MusicalArtist . }

  # Find any band memberships associated with her
  OPTIONAL {
    ?bandMembership dbo:member ?bandMember .
    ?bandMembership dbo:artist dbr:Ebony_Reigns .
  }
}
```

This query does the following:
- Identifies Ebony Reigns as a `MusicalArtist` and checks if she is also an `Artist`.
- Searches for any band memberships (`?bandMembership`) where she is listed as a member.
- Retrieves the members of those bands (`?bandMember`).",3,5,4,3,1,3,2,20,0,0,7,0,0.0,0
161,27,val,"Give me the commander in the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Assuming El Director is a known entity in DBpedia
  dbr:El_Director dbo:associatedEvent ?event .
  
  # Find the commander associated with the event
  ?event dbo:commanderInForce ?commander .
}
```",3,4,4,3,1,3,3,71,0,0,85,0,0.0,0
427,31,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?andreottiParty ?michelePintoPartyName WHERE {
  ?andreotti a dbo:Person ;
             foaf:name ""Giulio Andreotti""@en ;
             dbo:party ?andreottiParty .

  ?michelePinto a dbo:Person ;
                foaf:name ""Michele Pinto""@en ;
                dbo:party ?michelePintoParty .
  
  ?michelePintoParty rdfs:label ?michelePintoPartyName .
  FILTER (lang(?michelePintoPartyName) = 'en')
}
```",4,4,5,3,2,3,3,71,2,5,0,0.2857142857142857,1.0,0.4444444444444445
54,25,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/successor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?child ?predecessor WHERE {
  # Find Thado Minsaw of Prome's parent
  ?thadoMinsaw a dbo:Monarch ;
               dbo:spouseOrPartner ?parent .

  # Find Thihapate of Mohnyin's child who is an office holder and royalty
  ?thihapate a dbo:Monarch ;
             dbo:child ?child .
  
  FILTER (?child != dbr:Thado_Minsaw_of_Prome) .
  FILTER EXISTS { ?child a dbo:Royalty . }
  FILTER EXISTS { ?child a dbo:OfficeHolder . }

  # Find the predecessor of this child
  ?officeHolderPosition a dbo:Monarchy ;
                       dbo:incumbent ?child ;
                       dbo:predecessor ?predecessor .
  
  # Ensure the predecessor is an office holder and royalty
  FILTER EXISTS { ?predecessor a dbo:Royalty . }
  FILTER EXISTS { ?predecessor a dbo:OfficeHolder . }

}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
820,11,val,Give me the child of Jack Schwartzman and professional in the award of Scott McCloud.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?profession WHERE {
  # Find Jack Schwartzman and his child
  ?jack a dbo:Person ;
        foaf:name ""Jack Schwartzman"" ;
        dbo:child ?child .

  # Find Scott McCloud's profession related to an award
  ?scott a dbo:Person ;
         foaf:name ""Scott McCloud"" ;
         dbo:profession ?profession .
  
  FILTER EXISTS { ?award dbo:recipient ?scott . }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
617,25,val,Give me the parent of the child of Antiochus (son of Antiochus III the Great) and spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III)
  ?antiochus dbp:father dbr:Antiochus_III_the_Great ;
             dbp:spouse ?laodice .

  # Step 2: Identify Laodice IV
  ?laodice rdfs:label ""Laodice IV""@en .

  # Step 3: Find their children
  ?child dbp:parent ?antiochus ;
         dbp:parent ?laodice .

  # Step 4: Determine the parents of those children (which should be Antiochus and Laodice)
  ?child dbp:parent ?parent .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
427,39,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as the birth name of Romano Prodi.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiPartyLabel ?prodiPartyLabel WHERE {
  # Giulio Andreotti's party affiliation
  dbr:Giulio_Andreotti dbo:partyAffiliation ?andreottiParty .
  ?andreottiParty rdfs:label ?andreottiPartyLabel .

  # Romano Prodi's birth name and party affiliation
  dbr:Romano_Prodi dbo:birthName ""Romano Prodi"" ;
                   dbo:partyAffiliation ?prodiParty .
  ?prodiParty rdfs:label ?prodiPartyLabel .

  FILTER (lang(?andreottiPartyLabel) = 'en')
  FILTER (lang(?prodiPartyLabel) = 'en')
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
54,43,val,Give me the parent of the child of the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v4 <http://dbpedia.org/property/father> ?v0 . ?v4 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
  # Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Person ;
               foaf:name ""Thado Minsaw""@en .
  
  ?thadoMinsaw dbo:childOf ?parentOfThado .

  # Parent's child (who is also predecessor of Ameitta Thiri Maha Dhamma Dewi)
  ?parentOfThado dbo:child ?predecessor .

  # Predecessor is also a child of Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             foaf:name ""Thinkhaya""@en .
  
  ?thinkhaya dbo:child ?predecessor .

  # Ameitta Thiri Maha Dhamma Dewi and her predecessor
  ?ameittaThiriMahaDhammaDewi a dbo:Person ;
                             foaf:name ""Ameitta Thiri Maha Dhamma Dewi""@en .
  
  ?ameittaThiriMahaDhammaDewi dbo:predecessor ?predecessor .

  # Find the parent of this predecessor
  ?predecessor dbo:childOf ?parentOfChild .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
184,38,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/property/father> ?v3 . ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find children of Archduke Joseph Francis of Austria
  ?child1 dbo:parent dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 2: Find grandchildren (children of the child)
  ?grandchild dbo:parent ?child1 .

  # Step 3: Find children of Archduke Joseph Karl of Austria
  ?child2 dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Step 4: Find great-grandchildren (children of the child)
  ?greatGrandchild dbo:parent ?child2 .

  # Step 5: Find parent of these individuals
  OPTIONAL { ?grandchild dbo:parent ?parent . }
  OPTIONAL { ?greatGrandchild dbo:parent ?parent . }

  FILTER(?parent != dbr:Archduke_Joseph_Francis_of_Austria && ?parent != dbr:Archduke_Joseph_Karl_of_Austria)
}
```",4,4,5,2,2,3,3,71,0,2,1,0.0,0.0,0
528,19,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?war ?militaryForce1 ?militaryForce2 WHERE {
  # Battle of Pisagua and its associated war
  VALUES (?battle ?war) { 
    (dbr:Battle_of_Pisagua dbr:War_of_the_Pacific)
  }
  
  # Military forces involved in the Battle of Pisagua
  ?battle dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce1 ;
            dbo:opposingMilitaryUnit ?militaryForce2 .

  # War associated with Orozimbo Barbosa (War of the Pacific)
  VALUES (?war) { dbr:War_of_the_Pacific }
  
  # Military forces involved in the War of the Pacific
  ?war dbo:militaryConflicts ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce1 ;
            dbo:opposingMilitaryUnit ?militaryForce2 .

  FILTER(?battle = dbr:Battle_of_Pisagua || ?war = dbr:War_of_the_Pacific)
}
```",3,3,4,2,2,3,3,71,0,0,4,0,0.0,0
659,30,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in German campaign of 1813 and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck as a person
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryCommanderOf ?command1 .
  
  # German campaign of 1813
  ?campaign dbo:name ""German campaign of 1813"" ;
            dbo:commander ?command1 .

  # Battle of Leipzig
  ?battle dbo:name ""Battle of Leipzig"" ;
          dbo:commander ?command2 .

  # Ensure the same person commanded both events
  FILTER (?command1 = ?command2)

  # Find the military force he commanded
  ?command1 dbo:militaryForce ?militaryForce .
}
```",4,7,5,2,3,3,3,71,0,0,6,0,0.0,0
801,31,val,Give me the producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/property/alterEgo> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v0 . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?alterEgo
WHERE {
  # Find the producer of ""Westside Story"" song
  OPTIONAL {
    ?song dbo:producer ?producer .
    FILTER (str(?song) = str(dbr:Westside_Story_(song)))
  }

  # Find the alter ego of The Shadow's true self
  OPTIONAL {
    ?shadow dbo:alterEgo ?alterEgo .
    FILTER (str(?shadow) = str(dbr:The_Shadow))
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
251,15,val,"Give me the death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?deathPlace ?warLocation
WHERE {
  # Laura Mancinelli's death place
  ?mancinelli a dbo:Person ;
              foaf:name ""Laura Mancinelli"" ;
              dbo:deathPlace ?deathPlace .

  # Louis François Félix Musnier's associated war location
  ?musnier a dbo:Person ;
           foaf:name ""Louis François Félix Musnier"" ;
           dbo:associatedWith ?war .
  
  ?war a dbo:MilitaryConflict ;
       dbo:location ?warLocation .
}
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
996,12,val,Give me the entity in the award of Ekrem Akurgal and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find the award associated with Ekrem Akurgal
  ?ekremAkurgalAward dbo:recipient dbr:Ekrem_Akurgal .
  
  # Find the military force associated with Dagobert Sigmund von Wurmser
  ?wurmserForce dbo:commander dbr:Dagobert_Sigmund_von_Wurmser .

  # Look for entities that are both an award and a military force
  ?entity rdf:type/rdfs:subClassOf* dbo:Award .
  ?entity rdf:type/rdfs:subClassOf* dbo:MilitaryConflict .

  # Ensure the entity is related to both Ekrem Akurgal's award and Wurmser's force
  OPTIONAL { ?ekremAkurgalAward dbo:award ?entity . }
  OPTIONAL { ?wurmserForce dbo:militaryConflict ?entity . }
}
```",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
404,35,val,"Give me the child of the father of Ernest Augustus, Duke of Brunswick and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?ernestAugustus dbo:father ?father .
  FILTER (str(?ernestAugustus) = ""Ernest Augustus, Duke of Brunswick"")

  ?father dbo:spouse ?princessVictoriaLouise .
  ?princessVictoriaLouise dbp:birthName ""Princess Victoria Louise of Prussia"" .

  ?princessVictoriaLouise dbo:child ?child .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
92,33,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore.",SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v3 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify the person who is an actor in ""Return to Nuke 'Em High Volume 1""
  ?person dbo:actorIn dbr:Return_to_Nuke_'Em_High_Volume_1 .
  
  # Ensure this person is also a band member of Nevermore
  ?person dbo:bandMemberOf dbr:Nevermore .

  # Retrieve the associated musical artist for this person
  ?person dbo:musicalArtist ?artist .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
232,29,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and native of London and child of Jon Pertwee.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v3 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?film ?conflict WHERE {
  # Find Sean Pertwee
  ?person a dbo:Actor ;
          foaf:name ""Sean Pertwee""@en ;
          dbp:nationality dbr:United_Kingdom ;
          dbp:birthPlace dbr:London .

  # Ensure he is the child of Jon Pertwee
  ?person dbp:parent dbr:Jon_Pertwee .

  # Find films Sean Pertwee acted in
  ?film dbo:starring ?person .
  FILTER (STRSTARTS(STR(?film), ""http://dbpedia.org/resource/""))

  # Find military conflicts he is associated with
  OPTIONAL {
    ?conflict dbo:participant ?person .
    FILTER (STRSTARTS(STR(?conflict), ""http://dbpedia.org/resource/""))
  }
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
161,34,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain and commander in Biscay Campaign.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?person dbo:deathPlace dbr:Francoist_Spain .
  ?person dbo:militaryCommanderOf dbr:Biscay_Campaign .
  ?person dbo:militaryService ?militaryForce .
}
```

This query assumes:
- `dbo:deathPlace` is used to find the place of death, which we assume includes Francoist Spain.
- `dbo:militaryCommanderOf` identifies the military campaign they commanded.
- `dbo:militaryService` gives us the military force associated with the person.",4,7,5,3,2,3,3,71,0,0,3,0,0.0,0
281,39,val,"Give me the entity in Colony of New Zealand and war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/occupation> ?v1 . ?v0 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?militaryUnit ?officeHolder ?politician
WHERE {
  ?entity dbo:country dbr:New_Zealand .
  ?entity dbo:profession ?warProfession .
  FILTER(CONTAINS(LCASE(?warProfession), ""war"") || CONTAINS(LCASE(?warProfession), ""military"")) .

  ?militaryUnit dbo:militaryBranch dbr:New_Zealand_Army ;
                dbo:member ?entity .

  ?officeHolder dbo:occupation ?politician .
  FILTER(CONTAINS(LCASE(?politician), ""politician"") && CONTAINS(LCASE(?officeHolder), ""office holder"")) .
  
  ?entity dbo:memberOf ?militaryUnit .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
77,15,val,Give me the force of Alexander I of Russia and war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?award
WHERE {
  # Find wars associated with Alexander I of Russia
  OPTIONAL {
    dbr:Alexander_I_of_Russia dbo:participatedIn ?war .
    BIND(""Alexander I of Russia"" AS ?person1)
  }

  # Find awards received by Maxim Grigorievich Vlasov
  OPTIONAL {
    dbr:Maxim_Grigorievich_Vlasov dbo:awardReceived ?award .
    BIND(""Maxim Grigorievich Vlasov"" AS ?person2)
  }
}
```",4,4,5,3,2,3,2,20,0,0,20,0,0.0,0
184,23,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?landmark a dbo:PopulatedPlace ;
            dbo:elevationAboveSeaLevel ""96.0""^^xsd:float .
  
  ?native dbo:nativeOf ?landmark .
  
  ?native dbo:country ?country .
  
  ?country dbo:partOf ?parent .
}
```

This query does the following:
- Selects landmarks that are populated places with an elevation of 96.0.
- Finds the native entity associated with these landmarks.
- Identifies the country related to this native.
- Retrieves the parent entity (e.g., a larger administrative region or country) of this country.",3,4,4,3,1,3,3,71,0,0,31,0,0.0,0
404,28,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find children of Ernest Augustus, Crown Prince of Hanover
  ?parent a dbo:Person ;
          foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .
  
  ?child dbo:parent ?parent .

  # Check if the child is a parent of Prince Ernest Augustus of Hanover (born 1914)
  ?child dbo:child dbr:Prince_Ernest_Augustus_of_Hanover_(1914-1987) .

  # Check if the child was married to Princess Victoria Louise of Prussia
  ?child dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
487,12,val,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott and country of 2022 Vermont House of Representatives election.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://dbpedia.org/property/governor> ?v0 . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administrationRole ?country WHERE {
  # Find the DBpedia resource for Philip Brian Scott
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Philip Brian Scott"" .

  OPTIONAL {
    # Check if he has any administration role related to soccer
    ?person dbo:positionHeld ?administrationRole .
  }

  OPTIONAL {
    # Retrieve information about his election in Vermont House of Representatives
    ?electionEvent dbp:electedTo dbr:Vermont_House_of_Representatives ;
                   dbp:electionYear ""2022"" ;
                   dbp:electedPerson ?person .

    # Get the country related to this election event
    ?country dbo:country ?location .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
666,12,val,Give me the player in Steve Bruce and figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Find Steve Bruce's management roles
  ?managementRole dbo:agent dbr:Steve_Bruce ;
                  dbo:teamManaged ?team .

  # Find the nickname of the England National Beach Soccer Team
  dbr:England_national_beach_soccer_team dbo:nickname ?nickname .

  # Link players to both Steve Bruce's teams and the nickname
  ?player dbo:playsFor ?team ;
          rdfs:label ?playerLabel .
  
  FILTER (CONTAINS(LCASE(?playerLabel), LCASE(?nickname)))
}
```

### Explanation:
- **Steve Bruce's Management**: We query for roles where Steve Bruce is an agent managing a team.
- **Nickname of the Team**: We retrieve the nickname of the England national beach soccer team.
- **Player Association**: We find players who play for teams managed by Steve Bruce and whose label contains the nickname.

This query assumes that DBpedia has structured data linking these entities appropriately. Adjustments may be needed based on actual data availability in DBpedia.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
994,23,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?finalArtist WHERE {
  # Step 1: Find the artist associated with ""Watchtower""
  ?watchtowerAlbum dbo:musicalArtist dbr:Watchtower ;
                   dbo:album dbr:__I_Am_the_Eye .

  # Step 2: Find the artist associated with that first artist
  ?firstArtistAlbum dbo:musicalArtist ?firstArtist ;
                    dbo:album ?watchtowerAlbum .

  # Step 3: Find the final artist associated with the second artist
  ?secondArtistAlbum dbo:musicalArtist ?finalArtist ;
                     dbo:album ?firstArtistAlbum .
}
```

This query assumes that ""Watchtower"" is a band and uses their album ""I Am the Eye"" as an example to find associations. Adjust the album or resource if necessary based on DBpedia's current data.",3,3,4,3,1,3,3,71,0,0,16,0,0.0,0
701,33,val,Give me the parent of Meritamen and parent of the child of the child of Seti I.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v3 . },"```sparql
# Part 1: Parent of Meritamen
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    ?meritamen a dbo:Person ;
               foaf:name ""Meritamen""@en .
    OPTIONAL { ?meritamen dbo:mother ?parent . }
    OPTIONAL { ?meritamen dbo:father ?parent . }
}

# Part 2: Parent of the Child of the Child of Seti I
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchildParent WHERE {
    ?setiI a dbo:Person ;
           foaf:name ""Seti I""@en .
    ?child dbo:parent ?setiI .
    ?grandchild dbo:parent ?child .
    OPTIONAL { ?grandchildParent dbo:parent ?grandchild . }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
285,13,val,Give me the parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Identify Aristotle Onassis
  ?onassis a dbo:Person ;
           foaf:name ""Aristotle Onassis""@en .

  # Step 2: Find his spouse(s)
  ?onassis dbo:spouse ?spouse .

  # Step 3: Identify children of the spouse
  ?spouse dbo:child ?child .

  # Step 4: Find parents of these children
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,2,20,5,0,0,1.0,1.0,1.0
994,35,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Step 1: Identify Donald Maynard Dokken as a musical artist
  dbr:Donald_Maynard_Dokken dbo:musicalArtistOf ?band .

  # Step 2: Find band members associated with him
  ?bandMember dbo:memberOf ?band .
  
  # Step 3: For each band member, find their associated musical artists
  ?bandMember dbo:associatedMusicalArtist ?associatedArtist .

  # Step 4: Specifically look for the band ""Watchtower""
  OPTIONAL { 
    ?associatedArtist rdfs:label ""Watchtower (band)""@en .
  }
  
  FILTER EXISTS {
    ?associatedArtist rdfs:label ""Watchtower (band)""@en .
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
328,36,val,"Give me the leader of the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson and awardee of Order of Suvorov.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v0 <http://dbpedia.org/property/office> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader ?officeLeader
WHERE {
  # Gustav Jonson
  ?gustavJonson a dbo:Person ;
                foaf:name ""Gustav Jonson""@en .

  # Leader of Gustav Jonson
  ?gustavJonson dbo:subordinateOf ?leader .

  # Leader is an office holder and politician
  ?leader dbo:officeHolder true .
  ?leader dbo:politician true .

  # Leader is awardee of Order of Suvorov
  ?leader dbo:award dbr:Order_of_Suvorov .

  # Office led by the leader is a government agency
  ?officeLeader dbo:head ?leader ;
                dbo:type dbr:Government_agency .
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
312,7,val,"Give me the entity in Italy and entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v2 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?settlement ?region WHERE {
  # Find settlements in Italy associated with the Democratic Party (Italy)
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy ;
              dbo:politicalParty dbr:Democratic_Party_(Italy) .
  
  # Find regions in Italy associated with the Democratic Party (Italy)
  ?region a dbo:Region ;
          dbo:country dbr:Italy ;
          dbo:politicalParty dbr:Democratic_Party_(Italy) .

  FILTER(?settlement != ?region) # Ensure we get distinct entities
}
```",3,7,4,2,2,2,2,9,0,0,587,0,0.0,0
747,27,val,Give me the band of the person born as the persona of Shèna.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
    ?person a dbo:MusicalArtist ;
            foaf:name ""Sherrié Austin""@en .
    OPTIONAL { ?person dbo:stageName ""Shèna""@en . }
    ?person dbo:memberOfBand ?band .
}
```

This query does the following:
- It looks for an entity that is of type `dbo:MusicalArtist` and has a name ""Sherrié Austin.""
- It checks if this person has a stage name ""Shèna.""
- It retrieves any band (`?band`) that Sherrié Austin (or Shèna) is a member of.",3,3,4,3,1,3,3,71,0,0,8,0,0.0,0
391,44,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v4 <http://dbpedia.org/ontology/starring> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v4 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Roz_Ryan ;
         dbo:televisionSeries .
  
  ?work dbo:claimToFame dbr:Michael_Ballhaus .

  ?actor dbo:nationality dbr:United_States ;
         dbo:birthPlace dbr:Compton,_California ;
         dbo:starring ?movie .

}
```",5,9,6,2,3,3,3,71,0,0,1,0,0.0,0
232,18,val,Give me the native of London and child of Jon Pertwee and actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  # Person is native to London
  ?person dbo:nativePlace dbr:London .
  
  # Person has Jon Pertwee as a parent
  ?person dbo:parent dbr:Jon_Pertwee .

  # Person acted in ""Dog Soldiers""
  ?film dbo:starring ?person ;
        rdfs:label ""Dog Soldiers""@en .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
547,27,val,Give me the resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v1 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?restingPlace WHERE {
  # Find the award associated with Gerald Graham
  ?award dbo:awardedBy dbr:Gerald_Graham .
  
  # Find recipients of that award
  ?award dbo:recipient ?recipient .

  # Get the resting place of each recipient
  OPTIONAL { 
    ?recipient dbo:placeOfBurial ?restingPlace .
  }
}
```",3,3,4,3,1,3,3,71,0,0,704,0,0.0,0
16,19,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ted Martin McGinley""@en ;
          dbo:birthName ""Ted Martin McGinley"" .
  OPTIONAL { ?person dbo:profession dbr:Actress . }
  ?person dbp:spouse ?spouse .
}
```

This query does the following:
- It looks for a person with the birth name ""Ted Martin McGinley"".
- It checks if this person has a profession related to being an actress.
- It retrieves the spouse of that person.

Please note that this query assumes there is a DBpedia entry for such a person, which might not exist. If you meant a different individual or need further clarification, please provide more details.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
285,15,val,Give me the spouse of Aristotle Onassis and parent of the child of the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?spouse ?child ?parent
WHERE {
  # Find Aristotle Onassis
  ?aristotle a dbo:Person ;
             foaf:name ""Aristotle Onassis""@en .

  # Find his spouse
  ?aristotle dbo:spouse ?spouse .

  # Find the children of this spouse
  ?spouse dbo:child ?child .

  # The parent of the child should be Aristotle Onassis or his spouse
  OPTIONAL { ?child dbo:parent ?parent . }
}
```",4,4,5,3,2,3,2,20,2,8,0,0.2,1.0,0.33333333333333337
696,12,val,Give me the birth place of Tim Brennan and landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
# Query for the birthplace of Tim Brennan
SELECT ?birthPlace WHERE {
  ?person foaf:name ""Tim Brennan""@en .
  ?person dbo:birthPlace ?birthPlace .
}

UNION

# General query structure for a landmark at an elevation related to Nie Rongzhen's award
SELECT ?landmark WHERE {
  ?award dbo:recipient ?nieRongzhen .
  ?nieRongzhen foaf:name ""Nie Rongzhen""@en .
  ?award dbo:elevation ?elevation .
  
  # Assuming there is a way to relate elevation to landmarks
  ?landmark geo:elevation ?elevation .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
328,37,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?v0 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?commander WHERE {
  # Leader of the People's Commissariat of Defense (Stalin)
  dbr:Joseph_Stalin a dbo:Politician ;
                    dbo:officeHolderOf dbr:People%27s_Commissar_for_Defence_of_the_Soviet_Union .

  # Commander during the Budapest Offensive (Zhukov)
  OPTIONAL {
    dbr:Georgy_Zhukov a dbo:MilitaryPerson ;
                      dbo:commanderInForce dbr:Budapest_Offensive .
  }

  BIND(dbr:Joseph_Stalin AS ?leader) .
  OPTIONAL { 
    ?commander a dbo:MilitaryPerson ;
               dbo:commanderInForce dbr:Budapest_Offensive .
    FILTER(?commander = dbr:Georgy_Zhukov)
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
356,12,val,"Give me the player in 2015 Sacramento Republic FC season and team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?result <http://dbpedia.org/ontology/manager> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?player ?team WHERE {
  # Find players in the 2015 Sacramento Republic FC season
  ?player dbo:nationality dbr:Wolverhampton_Wanderers_F.C. ;
          dbo:birthPlace dbr:Wolverhampton ;
          dbo:position dbp:Soccer_position ;
          dbo:memberOfTeam dbr:2015_Sacramento_Republic_FC_season .

  # Ensure the player is also a manager of Wolverhampton Wanderers
  ?player dbo:managerOf dbr:Wolverhampton_Wanderers_F.C. .
  
  # Get the team they played for in 2015 Sacramento Republic FC season
  ?team dbo:member dbr:2015_Sacramento_Republic_FC_season .

  FILTER(?player != ?team)
}",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
492,18,val,Give me the commander in Franco-Hova Wars and person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name ?deathPlace WHERE {
  # Find commanders or notable figures in the Franco-Hova Wars
  { 
    ?event dbo:wikiPageRedirects dbr:Franco-Hova_Wars .
    ?event dbo:agent ?person .
    ?person dbp:name ?name .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  }

  UNION

  # Find decedents in French Algeria
  {
    ?event dbo:wikiPageRedirects dbr:French_Algeria .
    ?event dbo:agent ?person .
    ?person dbp:name ?name .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  }

  UNION

  # Find decedents in Algiers
  {
    ?event dbo:wikiPageRedirects dbr:Algiers .
    ?event dbo:agent ?person .
    ?person dbp:name ?name .
    OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  }

  FILTER (?deathPlace != """" && 
          (CONTAINS(LCASE(?deathPlace), ""algeria"") || CONTAINS(LCASE(?deathPlace), ""algiers"")))
}
ORDER BY ?name",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
55,14,val,"Give me the band member of Guns N' Roses and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?gnaMember ?otherBand ?symphonyConnection
WHERE {
  # Step 1: Find a member of Guns N' Roses
  ?gnaMember dbo:memberOf dbr:Guns_N%27_Roses .

  # Step 2: Check if this member is part of another band or group
  ?gnaMember dbo:memberOf ?otherBand .
  
  # Step 3: Determine if the other band/group has a connection with San Francisco Symphony
  OPTIONAL {
    ?otherBand dbo:location dbr:San_Francisco_Symphony ;
              rdf:type dbo:MusicalGroup .
  }
}
```",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
16,30,val,Give me the person born as the birth name of Gigi Rice and professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:name ""Gigi Rice"" .
  ?person dbo:birthName ?birthName .
  ?person dbo:profession ?profession .
  FILTER(CONTAINS(LCASE(?profession), ""actress""))
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?spouse dbp:name ""Ted McGinley"" . }
}
```

This query does the following:
- Selects a person (`?person`) who is an instance of `dbo:Person`.
- Matches the name ""Gigi Rice"".
- Retrieves her birth name.
- Checks if one of her professions includes ""actress"".
- Optionally checks for a spouse named ""Ted McGinley"".",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
92,44,val,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard and band of the person born as Joseph Michael Furney and band member of Nevermore.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v2 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist1 ?band1 ?artist2 ?band2 WHERE {
  # Find Jim Sheppard and his associated band
  ?person1 a dbo:Person ;
           foaf:name ""Jim Sheppard"" ;
           dbo:associatedBand ?band1 .
  
  OPTIONAL { ?band1 dbp:leadArtist ?artist1 . }
  
  # Find Joseph Michael Furney (of Nevermore) and his associated band
  ?person2 a dbo:Person ;
           foaf:name ""Joseph Michael Furney"" ;
           dbo:associatedBand ?band2 .

  FILTER(?band2 = <http://dbpedia.org/resource/Nevermore_(band)>)
  
  OPTIONAL { ?band2 dbp:leadArtist ?artist2 . }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
404,23,val,"Give me the spouse of the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .
  
  dbr:Princess_Victoria_Louise_of_Prussia a dbo:Royal .

  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
}
```",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
161,40,val,"Give me the commander in Biscay Campaign and military force of Spanish Civil War and military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce1 ?militaryForce2 ?decedentPerson
WHERE {
  # Biscay Campaign and its commander
  ?campaign dbo:partOf dbr:Spanish_Civil_War ;
            dbo:commander ?commander .

  # Military forces involved in the Spanish Civil War
  ?force1 dbo:involvedIn dbr:Spanish_Civil_War ;
          rdfs:label ?militaryForce1 .
  
  ?force2 dbo:opponentOf ?force1 ;
          rdfs:label ?militaryForce2 .

  # Societal event and military conflict linked to a decedent person
  ?event dbo:partOf dbr:Spanish_Civil_War ;
         dbo:decedent ?decedentPerson .
  
  ?conflict dbo:partOf dbr:Spanish_Civil_War ;
            dbo:decedent ?decedentPerson .

  # Ensure the decedent person is linked to Francoist Spain
  ?decedentPerson dbo:nationality dbr:Spain ;
                  dbo:deathPlace dbr:Francoist_Spain .
  
  FILTER (lang(?militaryForce1) = 'en' && lang(?militaryForce2) = 'en')
}
```",5,8,6,3,3,3,3,71,0,0,3,0,0.0,0
184,19,val,Give me the parent of the native of Budapest and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person dbo:nativePlace dbr:Budapest .
  ?person dbo:childOf dbr:Archduke_Joseph_August_of_Austria .
  ?person dbo:parent ?parent .
}
```

This query does the following:
- It selects individuals (`?person`) who are native to Budapest (`dbo:nativePlace`).
- It checks if these individuals are children of Archduke Joseph August of Austria (`dbo:childOf`).
- Finally, it retrieves their parent (`dbo:parent`).",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
303,14,val,"Give me the entity in the country, that is a country, of El Valle de Antón and party of Guillermo Endara.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find El Valle de Antón and its country
  dbr:El_Valle_de_Antón dbo:locatedInCountry dbr:Panama .

  # Find Guillermo Endara's political affiliation or related country
  OPTIONAL { 
    dbr:Guillermo_Endara dbo:nationality dbr:Panama .
  }

  # Ensure the entity is a country
  ?country rdf:type dbo:Country ;
           dbo:locatedInCountry dbr:Panama .

}
```

This query does the following:
- Identifies El Valle de Antón and confirms it's located in Panama.
- Optionally checks Guillermo Endara's nationality to confirm his association with Panama.
- Retrieves entities that are of type `dbo:Country` and located in Panama.",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
645,12,val,Give me the alma mater of the child of Richard Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?almaMater WHERE {
  # Find children of Richard Pankhurst
  ?person dbo:spouse|dbo:partner dbr:Richard_Pankhurst .
  ?person dbo:child ?child .

  # Ensure the child is an entity in the United Kingdom
  ?child dbp:nationality dbr:United_Kingdom .

  # Retrieve the alma mater of the child
  OPTIONAL { ?child dbo:almaMater ?almaMater . }
}
```

This query does the following:
- Uses `dbo:spouse|dbo:partner` to find individuals related to Richard Pankhurst.
- Identifies their children using `dbo:child`.
- Filters these children by nationality, ensuring they are from the United Kingdom (`dbp:nationality dbr:United_Kingdom`).
- Retrieves the alma mater of each qualifying child with `dbo:almaMater`.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
701,22,val,Give me the spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ramesses II is the father of Merneptah
  dbr:Ramesses_II dbo:child dbr:Merneptah .
  
  # Find spouse of Ramesses II who is also a parent of Meritamen
  dbr:Ramesses_II dbo:spouse ?spouse ;
                  dbo:child dbr:Meritamen .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
492,43,val,"Give me the commander in the war, that is a military conflict and an event, of the commander in Battle of Verdun and person decedent at French Algeria and person decedent at Algiers.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderInVerdun ?otherConflictCommander WHERE {
  # Find the commander in the Battle of Verdun
  ?battle dbr:Battle_of_Verdun .
  ?battle dbo:commander ?commanderInVerdun .

  # Ensure this person was also a commander in another military conflict or event
  ?otherBattle dbo:commander ?commanderInVerdun ;
               rdf:type dbo:MilitaryConflict .

  # Find individuals who died in both French Algeria and Algiers
  ?person dbo:deathPlace dbr:French_Algeria .
  ?person dbo:deathPlace dbr:Algiers .

  # Ensure the commander from Verdun is one of these persons
  FILTER (?commanderInVerdun = ?person)
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
77,13,val,Give me the war of the awardee of the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find the DBpedia resource for Maxim Grigorievich Vlasov
  dbr:Maxim_Grigorievich_Vlasov a dbo:Person .

  # Get all awards associated with Maxim Grigorievich Vlasov
  OPTIONAL { 
    dbr:Maxim_Grigorievich_Vlasov dbo:award ?award .
    
    # Find the war related to each award
    ?award dbo:relatedWar ?war .
  }
}
```",3,3,4,3,1,3,2,20,0,0,436,0,0.0,0
701,44,val,Give me the parent of the child of Ramesses II and spouse of the father of Merneptah and parent of Meritamen.,SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> ?v2 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Ramesses II's spouse
  dbr:Ramesses_II dbo:spouse ?spouse .
  
  # Meritamen's parent (should be the same as Ramesses II's spouse)
  dbr:Meritamen dbo:parent ?parent .

  FILTER (?spouse = ?parent)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
801,42,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and professional in the alter ego of The Shadow and producer of Westside Story (song).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Identify Jay-Z based on the given criteria
  ?jayz a dbo:MusicArtist ;
        dbo:birthName ""Shawn Corey Carter"" ;
        dbo:alias dbr:The_Shadow ;
        dbo:producer dbr:Westside_Story_(song) .

  # Find the associated musical artist of Jay-Z
  ?jayz dbo:musicalArtist ?artist .
  
  FILTER (?artist != ?jayz)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
328,21,val,"Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?title WHERE {
  ?person a dbo:Person .
  ?person dbo:officeTitle dbr:People's_Commissar_for_Defence_of_the_Soviet_Union ;
          dbo:honoraryDegree dbr:Order_of_the_Bath_(United_Kingdom) .

  OPTIONAL { 
    ?awardEvent dbo:recipient ?person ;
                dbo:awardedBy dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  }

  FILTER EXISTS {
    ?person rdfs:label ?title .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,37,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann and actor of All About the Andersons.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/knownFor> ?v3 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Step 1: Identify Sherry Hormann's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Sherry_Hormann.

  # Step 2: Find the claim-to-fame work of this spouse
  ?work dbo:performer ?spouse;
        rdf:type dbo:Film; # Assuming it's a film, adjust if necessary

  # Step 3: Determine the actor associated with that work
  ?actor dbo:film ?work.

  # Step 4: Ensure this actor is also linked to ""All About the Andersons""
  ?andersonFilm rdf:type dbo:Film;
                rdfs:label ""All About the Andersons""@en.
  
  ?andersonActor dbo:film ?andersonFilm;
                 owl:sameAs ?actor.
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
365,7,val,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter and reference to The Blasters.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist dbo:genre dbr:The_Blasters .
  ?artist dbo:occupation dbr/Vocalist ;
          dbo:occupation dbr/Musician ;
          dbo:occupation dbr/Songwriter .
}
```

This query does the following:
- It selects artists (`?artist`) who are of type `MusicalArtist`.
- It checks if these artists have a genre associated with The Blasters.
- It ensures that these artists have occupations listed as Vocalist, Musician, and Songwriter.",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
339,14,val,Give me the father of the child of the parent of Princess Olga of Greece and Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Identify Princess Olga of Greece and Denmark
  ?olga a dbo:Person ;
       dbp:name ""Princess Olga of Greece and Denmark""@en .

  # Step 2: Find her parent(s)
  ?parent dbo:child ?olga .

  # Step 3: Identify the child(ren) of this parent
  ?child dbo:child ?parent .

  # Step 4: Find the father of that child
  ?child dbo:father ?father .
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
360,18,val,Give me the reference to the author of Blinded by the Light and native of Johannesburg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?birthPlace WHERE {
  ?book dbo:author ?author .
  ?author dbo:birthPlace ?birthPlace .
  FILTER(CONTAINS(LCASE(?birthPlace), ""johannesburg""))
  FILTER(STRSTARTS(STR(?book), STR(dbr:Blinded_by_the_Light_(novel))))
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
345,11,val,Give me the figure known as the nickname of FC Vaduz and team of Alessandro Mangiarratti.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v2 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . ?result <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nickname ?teamName WHERE {
  # Retrieve the nickname of FC Vaduz
  { 
    ?club a dbo:FootballClub ;
          rdfs:label ""FC Vaduz""@en .
    OPTIONAL { ?club dbp:commonName ?nickname . }
  }

  # Find the team associated with Alessandro Mangiarratti
  {
    ?player a dbo:FootballPlayer ;
            foaf:name ""Alessandro Mangiarratti"" ;
            dbo:team ?team .
    ?team rdfs:label ?teamName .
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
303,15,val,"Give me the party of the commander, that is a politician, in United States invasion of Panama and party of Arnulfo Arias.",SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commanderPartyLabel ?arnulfoAriasPartyLabel WHERE {
  # George H.W. Bush's political party during the invasion of Panama
  dbr:George_H._W._Bush dbo:politicalAffiliation ?commanderParty .
  ?commanderParty rdfs:label ?commanderPartyLabel .

  # Arnulfo Arias's political party
  dbr:Arnulfo_Arias_Madrid dbo:politicalAffiliation ?arnulfoAriasParty .
  ?arnulfoAriasParty rdfs:label ?arnulfoAriasPartyLabel .

  FILTER (lang(?commanderPartyLabel) = 'en')
  FILTER (lang(?arnulfoAriasPartyLabel) = 'en')
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,18,val,"Give me the actor of The Departed and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Actor in ""The Departed""
  ?movie1 dbo:title ""The Departed""@en .
  ?movie1 dbo:starring ?actor .

  # Native of Compton, California
  ?actor dbo:nativePlace dbr:Compton,_California .

  # Actor in ""All About the Andersons""
  ?movie2 dbo:title ""All About the Andersons""@en .
  ?movie2 dbo:starring ?actor .
}
```

This query checks for an actor who is associated with both movies and has a native place of Compton, California.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
465,7,val,Give me the administration of Czech Pirate Party and death place of the native of Prague.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace WHERE {
  # Query for administration of Czech Pirate Party
  OPTIONAL {
    dbr:Czech_Pirate_Party dbo:leader ?person .
    ?person dbo:office ?administration .
  }

  # Query for death place of a notable person native to Prague
  OPTIONAL {
    ?person dbo:birthPlace dbr:Prague ;
            dbo:deathPlace ?deathPlace .
  }
}
```",3,3,4,2,2,2,2,9,1,253,0,0.003937007874015748,1.0,0.00784313725490196
92,27,val,Give me the band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v2 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Joseph Michael""@en.
  ?person dbo:musicalBand ?band.
}
```",3,3,4,3,1,3,3,71,0,0,1,0,0.0,0
392,18,val,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti and region of Central European Time.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?province WHERE {
  # Find Sebastiano Bianchetti's residence
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@it .
  
  ?person dbo:residence ?settlement .

  # Ensure the settlement is in Italy and is a populated place
  ?settlement a dbo:Settlement ;
              dbp:country dbr:Italy ;
              dbo:stateProvince ?province .

  # Check if the province observes Central European Time
  OPTIONAL { 
    ?province dbo:timeZone dbr:Central_European_Time .
  }
  
  FILTER EXISTS {
    ?settlement dbo:timeZone dbr:Central_European_Time .
  }
}
```

This query does the following:
- It identifies Sebastiano Bianchetti as a person and finds his residence.
- Ensures that the residence is a settlement in Italy.
- Checks if the province of this settlement observes Central European Time.",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
626,14,val,Give me the awardee of the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find awards related to the Battle of Borodino by Russian or French forces
  ?award dbo:recipient ?awardee .
  ?award dbo:givenBy ?militaryForce .
  
  FILTER (
    EXISTS { ?battle dbo:participatedIn ?award . ?battle dbr:Battle_of_Borodino }
    ||
    EXISTS { ?militaryForce dbr:Russian_Empire || ?militaryForce dbr:French_First_Republic }
  )
}
```",3,3,4,3,1,3,2,20,0,0,7855,0,0.0,0
392,17,val,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra and province of Schio.",SELECT ?result WHERE { <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
  # Aguilar de Segarra in Spain
  OPTIONAL { 
    dbr:Aguilar_de_Segarra dbo:timeZone ?tzAguilar .
    ?tzAguilar dbo:country ?countryAguilar ;
              dbo:region ?regionAguilar .
  }
  
  # Schio in Italy
  OPTIONAL {
    dbr:Schio dbo:timeZone ?tzSchio .
    ?tzSchio dbo:country ?countrySchio ;
             dbo:region ?regionSchio .
  }

  # Ensure the regions are related to sports events
  FILTER EXISTS { 
    ?regionAguilar dbp:sportsEvent ?eventAguilar .
    ?regionSchio dbp:sportsEvent ?eventSchio .
  }
  
  # Return the region if it matches for both locations
  VALUES (?region) {
    (?regionAguilar)
    (?regionSchio)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,31,val,Give me the commander in Eastern Front (World War II) and awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?award
WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:militaryCommand ?easternFrontCommand ;
             dbo:awardsReceived ?award .

  ?easternFrontCommand dbo:location dbr:Eastern_Front_(World_War_II) .
  
  ?campaignAward a dbo:Award ;
                 dbo:recipient ?commander ;
                 dbo:relatedEvent dbr:Battle_of_the_Volcano_and_Ryukyu_Islands .

}
```

This query does the following:
- Selects individuals (`?commander`) who are military persons.
- Checks if they commanded on the Eastern Front during World War II (`dbo:militaryCommand`).
- Verifies that they received an award related to the Volcano and Ryukyu Islands campaign.

Note: The exact DBpedia resources for specific campaigns or awards might need adjustment based on available data. This query assumes there are direct links between commanders, their commands, and awards in DBpedia.",4,4,5,3,2,3,3,71,0,0,5,0,0.0,0
55,19,val,"Give me the band member of Metallica and band of Newsted and band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?metallicaMember ?newstedBand ?producerBand 
WHERE {
  # Metallica members
  ?metallicaMember dbo:memberOf dbr:Metallica .
  
  # Jason Newsted's band after Metallica
  OPTIONAL {
    ?newsted dbr:Jason_Newsted ;
             dbo:memberOf ?newstedBand .
  }
  
  # Producer of ""Used to Love Her""
  ?song dbr:Used_to_Love_Her ;
        dbo:producer ?producer .
  
  # Check if the producer is a band
  OPTIONAL {
    ?producer dbo:memberOf ?producerBand .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
528,43,val,Give me the war of Irene Morales and war of the commander in the work of --01-09 and force of Narciso Campero.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v0 <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person { 
    dbr:Irene_Morales 
    dbr:Narciso_Campero 
  }
  
  ?person dbo:participatedIn ?war .
}
```

This query selects wars (`?war`) in which either Irene Morales or Narciso Campero participated. Adjust the resource identifiers if needed based on DBpedia's current structure.",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
184,27,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandparentParent
WHERE {
  # Step 1: Find Archduchess Margaret of Austria (born 1925)
  ?margaret dbo:birthYear ""1925""^^xsd:gYear ;
           rdfs:label ""Archduchess Margaret of Austria""@en .

  # Step 2: Find her parent
  ?parent dbo:child ?margaret .

  # Step 3: Find a child of this parent (grandchild of Archduchess)
  ?child dbo:parent ?parent .

  # Step 4: Find the parent of this grandchild
  ?grandparentParent dbo:child ?child .
}
LIMIT 1",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
281,28,val,Give me the entity in Colony of New Zealand and war of New Zealand Army and war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Entity related to Colony of New Zealand
  ?entity dbo:country dbr:New_Zealand .
  
  # Wars involving the New Zealand Army
  ?war dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
  
  # Awardees of Knight Grand Cross of the Order of the Bath
  ?person dbo:award dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  
  # Linking wars and entities (assuming war participants are linked to entities)
  ?entity dbo:participatingMilitaryUnit ?war .
  
  # Linking awardees to entities (assuming awardees are linked to entities)
  ?person dbo:awardRecipient ?entity .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,43,val,Give me the alma mater of the administration of the reference to George Kilbon Nash and reference to  and entity in Baden-Württemberg.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . ?v4 <http://dbpedia.org/property/governor> ?v0 . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMaterNash ?almaMaterEntity
WHERE {
  # George Kilbon Nash's alma mater
  dbr:George_Kilbon_Nash dbo:almaMater ?almaMaterNash .

  # Entity in Baden-Württemberg (example: a notable person)
  ?entity dbo:location dbr:Baden-Württemberg .
  ?entity dbo:almaMater ?almaMaterEntity .
  
  FILTER(?entity != dbr:George_Kilbon_Nash) # Ensure it's not the same entity
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
783,15,val,Give me the band member of Ebony Reigns and associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT DISTINCT ?bandMemberEbony ?associatedArtistEbony ?bandMemberSamuel ?associatedArtistSamuel
WHERE {
  # Step 1: Find Ebony Reigns' band members
  dbr:Ebony_Reigns dbo:musicalBandMember ?bandMemberEbony .

  # Step 2: Find associated musical artists of those band members
  ?bandMemberEbony dbo:associatedMusicalArtist ?associatedArtistEbony .

  # Step 3: Identify Samuel Ofori Amponsah (Stonebwoy)
  dbr:Stonebwoy foaf:name ""Samuel Ofori Amponsah""@en ;
                dbo:musicalBandMember ?bandMemberSamuel .

  # Step 4: Find associated musical artists of those band members
  ?bandMemberSamuel dbo:associatedMusicalArtist ?associatedArtistSamuel .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
485,15,val,"Give me the entity in the region, that is a country, of Western European Time and entity in Nottinghamshire.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time .
  OPTIONAL { 
    ?location dbo:locatedIn dbr:Nottinghamshire .
    ?location dbo:country ?country .
  }
}
```

This query does the following:
- Selects entities that are of type `dbo:Country`.
- Filters these countries to those in the Western European Time zone.
- Optionally checks if there is a location within Nottinghamshire associated with each country.",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
659,32,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the military conflict involving the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  ?conflict dbo:participatedInMilitaryConflict [
    a dbo:MilitaryUnit;
    dbo:name ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""
  ].
  
  # Find the military conflict involving Arthur Wellesley, 1st Duke of Wellington
  ?conflict2 dbo:commander dbr:Arthur_Wellesley,_1st_Duke_of_Wellington;
             a dbo:MilitaryConflict.

  # Ensure both conflicts are the same event
  FILTER (?conflict = ?conflict2)

  # Find the commander of this conflict
  ?conflict dbo:commander ?commander.
}
```",4,6,5,2,2,3,3,71,0,0,71,0,0.0,0
701,21,val,Give me the spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Ramesses_II dbo:spouse ?spouse .

  dbr:Nefertari dbo:child ?child .

  ?spouse dbo:parent ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,28,val,Give me the native of the figure known as Hub City and actor of All About the Andersons and actor of The Departed.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Jack Nicholson""@en .
  ?film1 dbo:starring ?person ;
         rdfs:label ""All About the Andersons""@en .
  ?film2 dbo:starring ?person ;
         rdfs:label ""The Departed""@en .
  ?person dbo:birthPlace ?nativePlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
492,38,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find Frédéric-Georges Herr's involvement in a war
  ?war dbo:participant dbr:Frédéric-Georges_Herr .
  
  # The war is also an event
  ?war rdf:type dbo:Event .

  # Find the commander of that war
  ?war dbo:commander ?commander .

  # Find the capital of Algeria
  dbr:Algeria dbo:capital ?capital .

  # Ensure the person decedent at the capital is the same as the commander
  ?commander dbo:deathPlace ?capital .
}
```",4,7,5,2,2,3,3,71,0,0,1,0,0.0,0
427,21,val,Give me the party of Romano Prodi and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  # Find Romano Prodi and his political party affiliation
  dbr:Romano_Prodi dbo:politicalParty ?party .
  
  # Filter for the Italian People's Party in 1994
  FILTER (
    EXISTS { 
      ?party rdfs:label ""Italian People's Party (1994)""@en .
    }
  )
  
  # Retrieve the name of the party
  ?party rdfs:label ?partyName .
  FILTER(LANG(?partyName) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,20,val,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish) and commander in German campaign of 1813.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find the regiment
  VALUES ?regiment { dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) }
  
  # Find wars that are both events and military conflicts
  ?war dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
       dbo:type/dbo:subClassOf* dbo:Event .
  
  # Find the commander during these wars
  ?regiment dbo:commander ?commander ;
            dbo:participatedInWar ?war .

  # Specific campaign in 1813
  OPTIONAL {
    ?campaign dbr:German_campaign_of_1813 ;
              dbo:commander ?commander .
  }
}
```",3,5,4,2,2,3,3,71,0,0,30,0,0.0,0
294,16,val,"Give me the resting place of Luke Lea (American politician, born 1879) and entity in the birth place, that is a settlement, of Marion James.","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?restingPlace ?settlement WHERE {
  # Luke Lea's resting place
  OPTIONAL {
    dbr:Luke_Lea dbo:deathPlace ?deathPlace .
    ?deathPlace dbo:location ?restingPlace .
  }

  # Marion James' birthplace and a related settlement
  OPTIONAL {
    dbr:Marion_James dbo:birthPlace ?birthPlace .
    ?birthPlace dbp:settlement ?settlement .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
54,29,val,Give me the parent of the child of Narapati I of Ava and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of Thinkhaya of Pagan.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Narapati I of Ava's child
  ?narapatiChild dbo:childOf dbr:Narapati_I_of_Ava .
  
  # Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?ameittaPredecessor dbo:predecessor dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava .
  
  # Thinkhaya of Pagan's child
  ?thinkhayaChild dbo:childOf dbr:Thinkhaya_of_Pagan .

  # Find the common entity
  FILTER (?narapatiChild = ?ameittaPredecessor && ?ameittaPredecessor = ?thinkhayaChild)

  # Get the parent of this common entity
  ?commonEntity dbo:parent ?parent .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
528,25,val,Give me the force of the person born as Narciso Campero Leyes and war of Orozimbo Barbosa.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?force WHERE {
  VALUES (?person ?name) {
    (dbo:Narciso_Campero_Leyes ""Narciso Campero Leyes"")
    (dbo:Orozimbo_Barbosa ""Orozimbo Barbosa"")
  }
  
  OPTIONAL { ?person dbo:rank ?force . }
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') . }
}
```

This query attempts to find the military rank or force associated with each individual. Note that the exact properties (`dbo:rank` in this case) might need adjustment based on available data in DBpedia.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,42,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka and manager of the team of Takashi Sekizuka and native of Japan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?university WHERE {
  # Eiji Ōtsuka's alma mater
  ?eiji dbo:almaMater ?university .
  
  # The university must be a Japanese organization, university, and educational institution
  ?university rdf:type dbo:University ;
              dbo:country dbr:Japan ;
              rdf:type dbo:EducationalOrganization .

  # Find the manager of Takashi Sekizuka's team who is also native to Japan
  ?manager dbp:nativeCountry dbr:Japan .
  ?takashi dbo:teamManager ?manager .
  
  # Ensure the university is related to both Eiji Ōtsuka and the manager
  ?eiji rdfs:label ""Eiji Ōtsuka""@en .
  ?takashi rdfs:label ""Takashi Sekizuka""@en .

  FILTER (lang(?universityLabel) = 'en')
}
```",5,9,6,2,3,3,3,71,0,0,2,0,0.0,0
328,23,val,Give me the awardee of the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:campaign dbr:Battle_of_the_Volcano_Islands ;
         dbo:recipient ?awardee .
}
```

This query assumes that there is a direct relationship between the award and the campaign in DBpedia. It selects the recipient (`?awardee`) of an award associated with the Battle of the Volcano Islands.",3,3,4,3,1,3,3,71,0,0,13262,0,0.0,0
701,41,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II and parent of the child of Nefertari.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/child> ?v4 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Ramesses II and his spouse Nefertari
  ?ramesses2 a dbo:Person ;
             dbo:spouse ?nefertari ;
             dbo:child ?child .

  ?nefertari a dbo:Person ;
             dbp:spouse ?ramesses2 ;
             dbo:child ?childNefertari .

  # Parent of the child of Ramesses II
  ?child dbo:parent ?parent .

  # Parent of the child of Nefertari
  ?childNefertari dbo:parent ?parent .
}
```

This query does the following:
- Identifies `?ramesses2` as Ramesses II and his spouse `?nefertari`.
- Finds children (`?child`) of Ramesses II.
- Finds children (`?childNefertari`) of Nefertari.
- Determines the parent (`?parent`) of both sets of children.

Since Ramesses II and Nefertari are married, they share their children, making them both parents. The query finds this common parent entity.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
488,26,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Matsudaira Tadamasa and his father
  dbr:Matsudaira_Tadamasa dbo:father ?officeHolderFather .
  
  # The office holder's father who is a politician
  ?officeHolderFather dbo:father ?politicianFather .
  ?politicianFather rdf:type dbo:Politician .

  # Death place of the politician
  ?politicianFather dbo:deathPlace ?deathPlace .
}
```",3,5,4,3,1,3,3,71,0,0,2,0,0.0,0
161,26,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Step 1: Identify Indalecio Prieto and his predecessor
  ?indalecioPrieto a dbo:Politician ;
                   foaf:name ""Indalecio Prieto""@en .
  
  ?predecessor dbo:successor ?indalecioPrieto ;
               foaf:name ?name .

  # Step 2: Find societal event and military conflict related to the predecessor
  ?event dbo:relatedTo ?predecessor ;
         a (dbo:SocietalEvent | dbo:MilitaryConflict) .
  
  # Step 3: Identify the military force involved in that context
  ?militaryForce dbo:involvedIn ?event ;
                 a dbo:MilitaryForce .
}
```",3,5,4,3,1,3,3,71,0,0,514,0,0.0,0
666,15,val,"Give me the player in the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach) and figure known as The Three Lions.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?playerInManager WHERE {
  # Identify Leonid Slutsky and his role as a manager
  dbr:Leonid_Slutsky dbo:managerOf ?team .
  
  # Identify ""The Three Lions"" (England national football team)
  dbr:England_national_football_team dbo:nickname dbr:The_Three_Lions ;
                                      rdf:type dbo:SoccerClub .

  # Ensure the team is a soccer club and sports team season
  ?team rdf:type dbo:SoccerClub, dbo:SportsTeamSeason .
  
  # Find the player in manager of Leonid Slutsky
  ?playerInManager dbo:manager dbr:Leonid_Slutsky ;
                   rdf:type dbo:Person .

}
```",4,7,5,3,2,3,2,20,0,0,2,0,0.0,0
547,28,val,Give me the resting place of Alan Cunningham and resting place of Simon Cadell and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  # Alan Cunningham
  VALUES (?person) { 
    (dbr:Alan_Cunningham_(British_officer)) 
  }
  
  OPTIONAL {
    ?person dbo:deathPlace ?restingPlace .
  }

  BIND(?person AS ?individual)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Simon Cadell
  VALUES (?person) { 
    (dbr:Simon_Cadell) 
  }
  
  OPTIONAL {
    ?person dbo:deathPlace ?restingPlace .
  }

  BIND(?person AS ?individual)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Child of James Burton (property developer)
  VALUES (?parent) { 
    (dbr:James_Burton_(property_developer)) 
  }

  ?child dbo:parent ?parent .
  OPTIONAL {
    ?child dbo:deathPlace ?restingPlace .
  }

  BIND(?child AS ?individual)
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
  
  # Ensure we get the name of each individual
  ?individual rdfs:label ?name .
}
GROUP BY ?person ?name ?restingPlace",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
16,24,val,Give me the professional in the profession of Satomi Ishihara and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . ?result <http://dbpedia.org/property/occupation> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person (SAMPLE(?profession) AS ?sharedProfession) (SAMPLE(?birthName) AS ?sharedBirthName)
WHERE {
  # Find individuals with the same profession as Satomi Ishihara
  {
    SELECT ?person ?profession WHERE {
      dbr:Satomi_Ishihara dbo:occupation ?profession .
      ?person dbo:occupation ?profession .
      FILTER (?person != dbr:Satomi_Ishihara)
    }
  }

  UNION

  # Find individuals with the same birth name as Georgeanne Marie Rice
  {
    SELECT ?person ?birthName WHERE {
      dbr:Georgeanne_Marie_Rice foaf:name ""Georgeanne Marie Rice""@en .
      ?person foaf:name ?birthName .
      FILTER (?birthName = ""Georgeanne Marie Rice""@en && ?person != dbr:Georgeanne_Marie_Rice)
    }
  }

  # Combine results to find individuals who match either condition
  {
    SELECT ?person WHERE {
      VALUES ?profession { <http://dbpedia.org/resource/Actor> <http://dbpedia.org/resource/Singer> } # Example professions
      ?person dbo:occupation ?profession .
    }
  }

  UNION

  {
    SELECT ?person WHERE {
      ?person foaf:name ""Georgeanne Marie Rice""@en .
    }
  }
}
GROUP BY ?person
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
485,16,val,"Give me the entity in United Kingdom and entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://dbpedia.org/ontology/country> ?v2 . <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntity ?birthPlaceRegion WHERE {
  # Find Joseph Whitaker (naturalist)
  ?person a dbo:Naturalist ;
          foaf:name ""Joseph Whitaker"" .

  # Get the birthplace of Joseph Whitaker
  ?person dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a region
  ?birthPlaceRegion rdfs:label ?regionLabel .
  FILTER (lang(?regionLabel) = 'en')
  FILTER regex(?regionLabel, ""region"", ""i"")

  # Get the entity in United Kingdom associated with Joseph Whitaker
  ?person dbo:nationality dbr:United_Kingdom ;
          dbo:residence ?ukEntity .

  # Ensure the UK entity is a region
  ?ukEntity rdfs:label ?ukLabel .
  FILTER (lang(?ukLabel) = 'en')
  FILTER regex(?ukLabel, ""region"", ""i"")
}
```

This query does the following:

1. Identifies Joseph Whitaker as a naturalist.
2. Retrieves his birthplace and checks if it is labeled as a region.
3. Finds an entity in the United Kingdom associated with him that is also labeled as a region.",3,4,4,2,2,2,3,28,0,0,357,0,0.0,0
712,15,val,"Give me the resting place of Nina Onilova and capital of the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/capital> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?burialSite ?capitalCity WHERE {
  # Nina Onilova's burial site
  OPTIONAL {
    dbr:Nina_Onilova dbo:placeOfBurial ?burialSite .
  }

  # Vyoshenskaya Uprising military force and its country
  OPTIONAL {
    ?uprising dbo:militaryForce ?militaryForce ;
             a dbo:Revolution .
    FILTER(STRSTARTS(LCASE(?uprising), ""vyoshenskaya uprising""))
    
    ?militaryForce dbo:country ?country .
  }

  # Capital of the country
  OPTIONAL {
    ?country dbo:capital ?capitalCity .
  }
}
```",4,6,5,3,2,3,2,20,1,4407,0,0.00022686025408348456,1.0,0.000453617600362894
378,19,val,Give me the war of the person born as Carl Pontus Gahn and war of Joaquín Blake.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war
WHERE {
  VALUES (?person ?birthName) {
    (dbr:C._P._Gahn ""Carl Pontus Gahn"")
    (dbr:Joaquín_Blake ""Joaquín Blake y Joyes"")
  }
  
  OPTIONAL { ?person dbo:birthName ?birthName . }
  OPTIONAL { ?person dbo:participatedInWar ?war . }
}
```

This query does the following:
- Uses `VALUES` to specify both the DBpedia resource and birth name for Carl Pontus Gahn and Joaquín Blake.
- Checks if the person's birth name matches using an optional pattern.
- Retrieves any wars they participated in.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
617,39,val,Give me the spouse of Laodice IV and parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .

  # Identify the commander in the Battle of Panium and their child
  ?commander dbo:participatedInBattle dbr:Battle_of_Panium ;
             dbo:child ?child .

  # The parent of that child should be Laodice IV's spouse
  ?child dbo:parent ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
328,25,val,"Give me the commander in Eastern Front (World War II) and leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . ?v1 <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?leader WHERE {
  # Find commanders on the Eastern Front during World War II
  ?commander dbo:officeLabel ""Commander of the Soviet Union"" .
  ?commander dbo:spouseOrPartner dbr:Joseph_Stalin ;
             dbo:birthPlace ?place .

  # Find leader of a government agency under Joseph Stalin
  ?leader dbo:officeLabel ?agencyLabel ;
          dbo:spouseOrPartner dbr:Joseph_Stalin ;
          dbo:birthPlace ?place .
  
  FILTER regex(?agencyLabel, ""NKVD"", ""i"")
}
```

This query attempts to find individuals who were commanders on the Eastern Front and leaders of government agencies under Stalin. It uses labels like ""Commander of the Soviet Union"" and filters for agency labels containing ""NKVD"". Adjustments might be needed based on available DBpedia data.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
827,12,val,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894) and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Resource for Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach
  dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:child ?child .
  
  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # Find the father of that child
  ?child dbo:father ?father .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
492,24,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  # Find the war involving Frédéric-Georges Herr
  ?war dbo:participant dbr:Frédéric-Georges_Herr .
  
  # Ensure the person died in Algiers
  dbr:Frédéric-Georges_Herr dbo:deathPlace dbr:Algiers .

  # Find the commander of that war
  ?war dbo:commander ?commander .
}
```

This query does the following:
- It identifies wars (`?war`) where Frédéric-Georges Herr was a participant.
- It checks if Frédéric-Georges Herr died in Algiers.
- It retrieves the commander of that war.",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
179,11,val,Give me the parent of Ubol Ratana and person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentUbolRatana ?personBornAsSirikit WHERE {
  # Find Ubol Ratana's parent (father)
  OPTIONAL { 
    dbr:Ubol_Ratana dbo:father ?parentUbolRatana .
  }

  # Find the person born as Sirikit
  OPTIONAL {
    ?person dbo:birthName ""Sirikit"" ;
            a dbo:Person .
    BIND(?person AS ?personBornAsSirikit)
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
427,40,val,Give me the party of Giulio Andreotti and reference to the name of the party of Michele Pinto and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v2 . ?v2 <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?andreottiPartyLabel ?pintoPartyLabel ?prodiPartyLabel WHERE {
  ?andreotti dbo:party ?andreottiParty .
  ?pinto dbo:party ?pintoParty .
  ?prodi dbo:party ?prodiParty .

  FILTER(?andreotti foaf:name ""Giulio Andreotti""@en)
  FILTER(?pinto foaf:name ""Michele Pinto""@it)
  FILTER(?prodi foaf:name ""Romano Prodi""@en)

  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

  ?andreottiParty rdfs:label ?andreottiPartyLabel .
  ?pintoParty rdfs:label ?pintoPartyLabel .
  ?prodiParty rdfs:label ?prodiPartyLabel .

}
```",5,5,6,3,3,3,3,71,0,0,2,0,0.0,0
747,35,val,Give me the person born on the birth date of Pavlo Khudzik and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ?v2 . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band 
WHERE {
  # Find Pavlo Khudzik's birthdate
  VALUES ?khudzikBirthDate { 
    SELECT ?birthdate WHERE { 
      dbr:Pavlo_Khudzik dbo:birthday ?birthdate .
    }
  }

  # Find people born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?sameBirthDate .
  FILTER (?sameBirthDate = ?khudzikBirthDate)

  # Find Tracey Elizabeth McSween's band
  VALUES ?traceyBand { 
    SELECT ?band WHERE { 
      dbr:Tracey_Elizabeth_McSween dbo:memberOf ?band .
    }
  }

  # Return the person and the band
  BIND(?sameBirthDate AS ?personBirthDate)
  BIND(?traceyBand AS ?band)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
92,43,val,"Give me the associated musical artist of the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1 and band member of Nevermore and band of Joseph Michael.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v0 . ?v4 <http://dbpedia.org/property/birthName> ?v0 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Identify the person who is an actor in ""Return to Nuke 'Em High Volume 1""
  ?person dbo:spouse ?actor .
  ?actor dbo:film ?film .
  ?film rdfs:label ""Return to Nuke 'Em High Volume 1""@en .

  # Ensure this person is a band member of Nevermore
  ?person dbo:member ?bandMember .
  ?bandMember rdfs:label ""Nevermore""@en .

  # Ensure this person is associated with Joseph Michael
  ?person dbo:spouse ?josephMichael .
  ?josephMichael rdfs:label ""Joseph Michael""@en .

  # Find the musical artist(s) associated with this person
  ?person dbo:musicalArtist ?artist .
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
701,24,val,Give me the parent of the child of Ramesses II and spouse of Ramesses II.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parentOfChild ?spouse WHERE {
  # Ramesses II entity
  VALUES ?ramessesII { <http://dbpedia.org/resource/Ramesses_II> }

  # Find children of Ramesses II
  ?child dbo:father ?ramessesII .
  
  # For each child, find their parent (mother or father)
  OPTIONAL {
    ?child dbo:mother ?parentOfChild .
  }
  OPTIONAL {
    ?child dbo:father ?parentOfChild .
  }

  # Find spouse of Ramesses II
  ?spouse dbp:spouse ?ramessesII .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
959,23,val,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://dbpedia.org/ontology/almaMater> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?university WHERE {
  ?person dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:nationality dbr:Japan ;
          dbo:almaMater ?university .
  
  ?university a dbo:EducationalOrganization ;
              a dbo:University ;
              a dbo:Organisation .
}
```

This query does the following:
- Filters for persons born in 1958 and of Japanese nationality.
- Retrieves their alma mater, ensuring it is classified as an educational organization, university, and organization.",3,7,4,3,1,3,3,71,0,0,524,0,0.0,0
251,19,val,"Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v2 <http://dbpedia.org/ontology/place> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace ?warLocation
WHERE {
  # Forza Italia (2013) administration
  OPTIONAL {
    dbr:Forza_Italia_(political_party)_in_the_2013_general_election dbo:administrativeBody ?administration .
  }

  # Laura Mancinelli's place of death
  OPTIONAL {
    dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
  }

  # Louis François Félix Musnier's military conflict location
  OPTIONAL {
    ?musnier dbo:militaryConflict ?war .
    ?war dbo:location ?warLocation .
    FILTER(CONTAINS(LCASE(STR(?war)), ""military conflict""))
    dbr:Louis_François_Félix_Musnier ?musnier .
  }
}
```",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
547,26,val,Give me the resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""David Boreanaz""@en .
  OPTIONAL { ?actor dbo:spouse ?spouse . }
  OPTIONAL { ?actor dbo:character ?character . }
  OPTIONAL { ?actor dbo:film ?film . }
  OPTIONAL { ?actor dbo:televisionSeries ?tvSeries . }
  FILTER EXISTS {
    ?tvSeries foaf:name ""Bones""@en .
  }
  OPTIONAL { ?actor dbo:placeOfBirth ?birthPlace . }
  OPTIONAL { ?actor dbo:deathPlace ?deathPlace . }
  OPTIONAL { ?actor dbo:restingPlace ?restingPlace . }
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
314,13,val,Give me the person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?deathPlace ?award
WHERE {
  ?person dbo:placeOfBirth dbr:House_of_Sombrerete ;
          dbo:deathPlace ?deathPlace .
  
  FILTER (?deathPlace = dbr:Headquarters_of_the_House_of_Sombrerete)

  OPTIONAL { 
    ?person dbp:awards ?award .
    FILTER (regex(str(?award), ""30""))
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,19,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse ?child WHERE {
  # Find Laodice IV
  ?laodiceIV a dbo:Person ;
             rdfs:label ""Laodice IV""@en .
  
  # Find her spouse
  ?laodiceIV dbp:spouse ?spouse .

  # Find the children of this spouse who are royalty
  ?child dbo:parent ?spouse ;
         a dbo:Monarch ;
         rdfs:label ?childLabel .
}
```

This query assumes that Laodice IV is represented in DBpedia with the label ""Laodice IV"" and uses properties like `dbo:Person`, `dbp:spouse`, and `dbo:Monarch` to navigate relationships. Adjustments might be necessary based on actual data availability and structure.",3,4,4,2,2,3,3,71,0,0,3,0,0.0,0
16,39,val,Give me the person born as the birth name of the alumnus of Ohio State University and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:almaMater dbr:Ohio_State_University .
  ?person dbo:occupation dbr:Actress .
  ?person dbp:birthName ?birthName .
}
```

This query does the following:
- Uses `dbo:almaMater` to find individuals who attended Ohio State University.
- Filters these individuals by their occupation using `dbo:occupation` to ensure they are actresses.
- Retrieves the birth name of these individuals using `dbp:birthName`.",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
528,31,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and war of Orozimbo Barbosa.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?war a dbo:MilitaryConflict .
  
  # Wars involving Chile
  ?chileWar dbo:militaryConflict ?war ;
           dbo:country dbr:Chile .

  # Wars involving Orozimbo Barbosa
  OPTIONAL { 
    ?barbosaWar dbo:militaryConflict ?war ;
                rdfs:label ""Orozimbo Barbosa""@en .
  }
  
  FILTER EXISTS { ?chileWar dbo:militaryConflict ?war } &&
              EXISTS { ?barbosaWar dbo:militaryConflict ?war }
}
ORDER BY ?war
```",4,5,5,3,2,3,3,71,0,0,9,0,0.0,0
659,28,val,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in Battle of Leipzig and military force of Napoleonic Wars.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?commander WHERE {
  ?battle dbp:commander ?commander .
  
  FILTER (
    EXISTS { ?battle rdfs:label ""Battle of Leipzig""@en }
    && EXISTS { ?commander foaf:name ""Arthur Wellesley, 1st Duke of Wellington""@en }
  )
  
  OPTIONAL {
    ?commander dbo:militaryForce ?force .
    FILTER EXISTS { ?force rdfs:label ""Napoleonic Wars""@en }
  }
}
```",4,4,5,2,3,3,3,71,0,0,5,0,0.0,0
9,22,val,"Give me the alma mater of John Alderdice, Baron Alderdice and figure known as the nickname of Queen's University Belfast.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?nickname WHERE {
  # Alma mater of John Alderdice, Baron Alderdice
  OPTIONAL { 
    dbr:John_Alderdice_Baron_Alderdice dbo:almaMater ?almaMater .
  }
  
  # Nickname of Queen's University Belfast
  OPTIONAL {
    dbr:Queen's_University_Belfast dbo:nickname ?nickname .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,27,val,"Give me the war of the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/occupation> ?v2 . ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:New_Zealand .
  
  ?unit dbo:militaryUnitOf dbr:New_Zealand_Army ;
        dbo:member ?person .

  ?unit dbo:participatedInWar ?war .
}
```

This query does the following:
- Selects individuals who are both politicians and office holders in New Zealand.
- Finds military units within the New Zealand Army that these individuals are members of.
- Retrieves wars associated with those military units.",3,6,4,3,1,3,3,71,0,0,14,0,0.0,0
392,13,val,"Give me the entity in the region, that is a country, of Central European Time and region of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time ;
           dbo:region dbr:Europe_Central .
}
```

This query does the following:
- Selects distinct entities that are classified as countries (`dbo:Country`).
- Filters these countries to those with a time zone of Central European Time (`dbr:Central_European_Time`).
- Ensures they belong to the region associated with Central Europe (`dbr:Europe_Central`).",3,4,4,2,2,2,3,28,0,0,28787,0,0.0,0
360,12,val,Give me the writer of The Roaring Silence and native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?birthPlace WHERE {
  # Find the book ""The Roaring Silence""
  ?book dbo:title ""The Roaring Silence""@en .
  
  # Identify its author
  ?book dbo:author ?author .

  # Ensure the author is native to Johannesburg
  ?author dbp:birthPlace dbr:Johannesburg .

  # Check for a connection with Manfred Mann
  OPTIONAL {
    ?author dbo:bandMember ?manfredMann .
    ?manfredMann rdfs:label ""Manfred Mann""@en .
  }
  
  FILTER EXISTS { ?author dbo:bandMember ?manfredMann . }
}
```

This query does the following:
- It identifies the book titled ""The Roaring Silence.""
- Retrieves its author.
- Ensures that this author was born in Johannesburg.
- Checks for a connection to Manfred Mann, specifically through band membership.",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
161,24,val,"Give me the commander in Biscay Campaign and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the Biscay Campaign as a military conflict and societal event
  ?campaign dbo:type/dbo:subClassOf* dbo:MilitaryConflict ;
            dbo:type/dbo:subClassOf* dbo:SocietalEvent ;
            rdfs:label ""Biscay Campaign""@en .

  # Link the campaign to Francisco Largo Caballero
  ?campaign dbo:participatedIn dbr:Francisco_Largo_Caballero .

  # Find the commander of the Biscay Campaign
  ?campaign dbo:commander ?commander .

  # Identify the military force involved in the Biscay Campaign
  ?campaign dbo:militaryForce ?militaryForce .
}
```",3,5,4,2,2,3,3,71,0,0,3,0,0.0,0
915,15,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film) and father of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Find the director of ""Pipe Dreams"" (1976 film)
  ?film dbo:director ?director .
  ?film rdfs:label ""Pipe Dreams""@en .
  FILTER(CONTAINS(str(?film), ""1976""))

  # Get the birthplace of this director
  ?director dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Find residents of that birthplace
  ?resident dbo:residence ?birthPlace .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
528,18,val,Give me the war of Orozimbo Barbosa and force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?description WHERE {
  # Wars involving Orozimbo Barbosa
  {
    ?barbosa dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdfs:label ""Orozimbo Barbosa""@en .
    ?barbosa dbo:participatedIn ?war .
    ?war dbo:description ?description .
  }
  
  UNION
  
  # Wars involving Narciso Campero
  {
    ?campero dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdfs:label ""Narciso Campero""@en .
    ?campero dbo:participatedIn ?war .
    ?war dbo:description ?description .
  }
  
  UNION
  
  # Wars involving Irene Morales
  {
    ?morales dbo:wikiPageDisambiguates ?disambiguation .
    ?disambiguation rdfs:label ""Irene Morales""@en .
    ?morales dbo:participatedIn ?war .
    ?war dbo:description ?description .
  }
}
ORDER BY ?war
```",3,3,4,1,3,3,3,71,0,0,2,0,0.0,0
547,38,val,Give me the resting place of the actor of Enemy at the Door and resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?awardeeRestingPlace WHERE {
  # Actor in ""Enemy at the Door""
  OPTIONAL {
    ?film dbo:starring dbr:Ray_Winstone .
    ?film rdfs:label ""Enemy at the Door""@en .
    ?rayWinstone dbo:deathPlace ?actorRestingPlace .
  }

  # Awardee of Knight Grand Cross of the Order of St Michael and St George
  OPTIONAL {
    ?person dbo:honoursReceived dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
    ?person rdfs:label ""David Attenborough""@en .
    ?davidAttenborough dbo:deathPlace ?awardeeRestingPlace .
  }
}
```",4,4,5,2,2,3,3,71,0,0,2,0,0.0,0
77,12,val,Give me the force of the mayor of Congress Poland and war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?mayorDescription ?war ?warDescription WHERE {
  # Find the mayor of Congress Poland
  ?mayor a dbo:Mayor ;
         dbo:country dbr:Congress_Poland ;
         rdfs:label ?mayorLabel .
  
  # Get description or related information about the mayor
  OPTIONAL { ?mayor dbo:description ?mayorDescription . }
  
  # Find wars involving Alexander Chechenskiy
  ?war a dbo:MilitaryConflict ;
       dbo:participant dbr:Aleksandr_Chechenskyi .
  
  # Get description or related information about the war
  OPTIONAL { ?war dbo:description ?warDescription . }

  FILTER (lang(?mayorLabel) = 'en')
}
```",3,3,4,2,2,3,2,20,0,0,6,0,0.0,0
404,37,val,"Give me the parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild WHERE {
  # Step 1: Identify Prince George William of Hanover
  ?princeGeorge a dbo:Person ;
               foaf:name ""Prince George William of Hanover""@en .
  
  # Step 2: Find his parent who is a royalty (Ernest Augustus)
  ?parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover ;
          dbo:child ?princeGeorge .

  # Step 3: Identify the child of Ernest Augustus who is also a royalty
  ?royalChild dbo:child ?parent .
  
  # Step 4: Find the parent of that royal child
  ?parentOfChild dbo:child ?royalChild .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
285,14,val,Give me the spouse of the professional in the award of Stan Lee.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/property/occupation> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Replace 'AwardName' with the specific award related to Stan Lee
  dbr:Stan_Lee dbo:awardReceived dbr:AwardName .
  
  # Find a professional associated with this award
  ?professional dbo:awardReceived dbr:AwardName .

  # Ensure it's not Stan Lee himself
  FILTER (?professional != dbr:Stan_Lee)

  # Get the spouse of the professional
  ?professional dbo:spouse ?spouse .
}
```

**Notes**:
- Replace `dbr:AwardName` with the actual DBpedia resource for the award.
- This query assumes that the award is directly linked to both Stan Lee and another professional in DBpedia.",3,3,4,3,1,3,2,20,0,0,4149,0,0.0,0
659,21,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?militaryForce ?commander WHERE {
  ?person foaf:name ""Arthur Wellesley, 1st Duke of Wellington""@en .
  ?person dbo:rank ?rank .
  ?person dbo:militaryConflict ?conflict .
  FILTER(?conflict = dbpedia:Napoleonic_Wars) .

  OPTIONAL { 
    ?militaryForce dbo:commander ?person .
    ?militaryForce rdfs:label ?forceLabel .
    FILTER(LANG(?forceLabel) = ""en"") .
    BIND(CONCAT(""Military Force: "", STR(?forceLabel)) AS ?militaryForce)
  }

  OPTIONAL {
    ?person dbo:rank ?commanderRank .
    ?commander foaf:name ?commanderName .
    FILTER(?commanderRank = dbpedia:Field_Marshal) .
    BIND(CONCAT(""Commander in Force: "", STR(?commanderName)) AS ?commander)
  }
}
```",3,3,4,2,2,3,3,71,0,0,32,0,0.0,0
92,29,val,"Give me the band of Joseph Michael and band member of Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandOfJosephMichael ?nevermoreMember ?associatedArtist
WHERE {
  # Find Joseph Michael's band
  ?person a dbo:Musician ;
          foaf:name ""Joseph Michael"" .
  ?person dbo:memberOfBand ?bandOfJosephMichael .

  # Find members of Nevermore
  ?nevermore dbr:Nevermore ;
             dbo:member ?nevermoreMember .

  # Find associated musical artists for Jim Sheppard
  ?sheppard a dbo:Musician ;
            foaf:name ""Jim Sheppard"" .
  ?sheppard dbo:associatedMusicalArtist ?associatedArtist .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
328,19,val,"Give me the commander in Eastern Front (World War II) and awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander ?name WHERE {
  ?commander a dbo:MilitaryPerson ;
             dbo:awardReceived dbr:Victoria_Cross ;
             rdfs:label ?name .
  
  FILTER(CONTAINS(LCASE(?name), ""eastern front"") || CONTAINS(LCASE(?name), ""soviet union""))

  OPTIONAL { 
    ?awardee dbo:awardedBy dbr:Bruce_Fraser_1st_Baron_Fraser_of_North_Cape ;
             dbo:awardReceived dbr:Victoria_Cross .
    
    FILTER(?commander = ?awardee)
  }
}
ORDER BY ?name
LIMIT 10",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
184,31,val,"Give me the parent of the native of the landmark at elevation, that is a settlement, of 96.0 and child of Archduke Joseph August of Austria.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  ?landmark a dbo:Settlement ;
            dbo:elevationAboveSeaLevel ""96.0""^^xsd:float .
  
  ?person dbo:nativePlace ?landmark ;
          dbo:childOf dbr:Archduke_Joseph_August_of_Austria .

  ?nativePlace dbo:parent ?parent .
}
```

This query does the following:
- Selects landmarks that are settlements with an elevation of 96.0 meters.
- Finds persons whose native place is this landmark and who are children of Archduke Joseph August of Austria.
- Retrieves the parent of these natives.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
487,14,val,"Give me the administration of the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  ?person a dbo:SoccerPlayer ;
          foaf:name ""Phil Scott""@en ;
          dbp:birthName ""Phil Scott"" .
  
  OPTIONAL { 
    ?person dbo:holdsPublicOffice ?office .
    ?office dbo:position ?administration .
  }
}
```

This query does the following:
- It looks for a person (`?person`) who is of type `dbo:SoccerPlayer`.
- The person's name should be ""Phil Scott"" and their birth name should also match ""Phil Scott"".
- It then checks if this person holds any public office (`dbo:holdsPublicOffice`), and retrieves the position or administration role associated with that office.",3,4,4,3,1,3,2,20,0,0,14,0,0.0,0
294,17,val,"Give me the resting place of the architect of P. D. Houston Jr. House and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect ?restingPlace WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  FILTER(STRSTARTS(STR(?house), ""http://dbpedia.org/resource/P._D._Houston_Jr._House""))

  OPTIONAL {
    # Get the resting place of the architect
    ?architect dbo:deathPlace ?deathPlace .
    ?architect dbo:burialPlace ?restingPlace .
    
    FILTER(EXISTS { ?architect dbo:deathPlace ?deathPlace } || EXISTS { ?architect dbo:burialPlace ?restingPlace })
  }
}
```",3,3,4,2,2,2,3,28,0,1,1,0.0,0.0,0
547,41,val,Give me the resting place of the child of James Burton (property developer) and resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v4 . ?v4 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRestingPlace ?alanCunninghamRestingPlace ?actorRestingPlace WHERE {
  # Assuming the child of James Burton is a notable person
  ?person rdfs:label ""Child of James Burton (property developer)""@en .
  ?person dbo:deathPlace ?childRestingPlace .

  # Alan Cunningham's resting place
  dbr:Alan_Cunningham dbo:deathPlace ?alanCunninghamRestingPlace .

  # Actor of ""Enemy at the Door""
  ?film rdfs:label ""Enemy at the Door""@en .
  ?film dbo:starring ?actor .
  ?actor dbo:birthName ?actorName .
  
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }
}
```

This query assumes:
- The child of James Burton is identifiable by a specific label.
- Alan Cunningham's DBpedia resource is `dbr:Alan_Cunningham`.
- ""Enemy at the Door"" has an associated DBpedia entry with actors listed under `dbo:starring`.",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
645,14,val,Give me the alma mater of the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v2 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT ?almaMater WHERE {
  # Step 1: Identify Adela Pankhurst's parents
  dbpedia:Adela_Pankhurst dbo:parent ?parent .

  # Step 2: Determine the children of those parents
  ?child dbo:parent ?parent .
  
  # Step 3: Find the alma maters of those children
  ?child dbo:almaMater ?almaMater .
}
```",3,3,4,3,1,3,2,20,0,0,2,0,0.0,0
281,33,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find the leader of the 1962 New South Wales state election
  ?election dbo:leader ?leader .
  FILTER (str(?election) = ""New_South_Wales_state_election,_1962"")

  # Ensure the leader is a politician
  ?leader rdf:type dbr:Politician .

  # Find the birthplace of this leader and ensure it's a country
  ?leader dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbr:Country .
  BIND(?birthPlace AS ?country)

  # Find the war associated with Beauchamp Seymour, 1st Baron Alcester
  OPTIONAL {
    dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:participatedInWar ?war .
  }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
981,14,val,"Give me the birth place of the person born, that is a beauty queen, as the author of Kamikaze Girls.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v2 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          dbo:authorOf dbr:Kamikaze_Girls ;
          dbo:titleHolder dbr:Miss_Japan_1980 .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query assumes that the person who authored ""Kamikaze Girls"" and was a beauty queen (specifically Miss Japan in 1980) is Kyoko Okazaki. The query looks for a person with these properties and retrieves their birthplace.",3,4,4,3,1,3,2,20,0,0,170,0,0.0,0
801,25,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song).",SELECT ?result WHERE { <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the artist who wrote ""40 Dayz & 40 Nightz""
  ?song1 dbo:lyricsBy ?writer .
  ?song1 rdfs:label ""40 Dayz & 40 Nightz""@en .

  # Ensure this writer is also an artist
  ?writer a dbo:MusicalArtist .

  # Find the producer of ""Westside Story (song)""
  ?song2 dbo:producer ?artist .
  ?song2 rdfs:label ""Westside Story (song)""@en .

  # Ensure this person is both the writer and the producer
  FILTER (?writer = ?artist)
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
747,18,val,Give me the band of Shèna and person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandShena ?person1985 ?bandAmbaShepherd
WHERE {
  # Find the band associated with Shèna
  ?shena a dbo:MusicalArtist ;
         foaf:name ""Shèna""@en .
  ?shena dbo:memberOf ?bandShena .

  # Find the person born on 1985-04-29 and their band
  ?person1985 dbo:birthDate ""1985-04-29""^^xsd:date ;
              dbo:memberOf ?bandPerson1985 .

  # Find the band associated with Amba Shepherd
  ?ambaShepherd a dbo:MusicalArtist ;
                foaf:name ""Amba Shepherd""@en .
  ?ambaShepherd dbo:memberOf ?bandAmbaShepherd .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
645,13,val,"Give me the entity in the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/property/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the commander of the Battle of Diamond Rock
  ?battle dbo:commander ?commander .
  
  FILTER (str(?battle) = ""Battle_of_Diamond_Rock"")

  # Get the residence of this commander
  ?commander dbo:residence ?residence .

  # Determine which country corresponds to this residence
  ?residence dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,42999,0,0.0,0
488,19,val,Give me the birth place of the commander in Boshin War and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?deathPlace
WHERE {
  # Birthplace of Saigō Takamori (Commander in the Boshin War)
  dbr:Saig%C5%8D_Takamori dbo:birthPlace ?birthPlace .

  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,37,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and parent of the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . ?v3 <http://dbpedia.org/ontology/parent> ?result . ?v3 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Ameitta Thiri Maha Dhamma Dewi of Ava's predecessor
  ?ameitta a dbo:Monarch ;
           dbo:predecessor ?predecessor .

  FILTER (str(?ameitta) = ""Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava"")

  # Find Thado Minsaw of Prome and his parent's child
  ?thado a dbo:Monarch ;
         dbo:parent ?parent .
  
  FILTER (str(?thado) = ""Thado_Minsaw_of_Prome"")
  
  OPTIONAL { ?parent dbo:child ?child . }
  
  # Find the common person who is both predecessor and parent's child
  VALUES ?person { ?predecessor ?child }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
801,38,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v3 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find the writer of ""40 Dayz & 40 Nightz""
  ?song dbo:lyricsBy ?writer .
  ?song dbr:""40 Dayz & 40 Nightz"" .

  # Ensure the writer is a musical artist and an artist
  ?writer rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  # Find works related to ""50 Cent""
  ?work dbo:producer ?artist .
  ?work dbr:""50 Cent"" .

  # Ensure the producer is also a musical artist and an artist
  ?artist rdf:type dbo:MusicalArtist ;
          rdf:type dbo:Artist .

  # Link the writer and the producer as the same individual
  FILTER (?writer = ?artist)
}
```",4,9,5,2,2,3,3,71,0,0,1,0,0.0,0
421,16,val,Give me the band member of Senidah and person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v2 . ?result <http://dbpedia.org/property/birthName> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember ?birthNamePerson WHERE {
  # Find Senidah's band members
  ?senidah dbo:stageName ""Senidah""@en .
  ?senidah dbo:bandMember ?bandMember .

  # Find Dino Merlin and his birth name
  ?dinoMerlin foaf:name ""Dino Merlin""@en ;
              dbp:birthday ?birthDate .
  ?dinoMerlin foaf:givenName ?birthName .

  # Match the band member with the person born as Dino Merlin's birth name
  ?person foaf:givenName ?birthName ;
          dbo:birthDate ?birthDate .
  
  BIND(?person AS ?birthNamePerson)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
767,30,val,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?entityInBW ?alterEgoOfBlackHood
WHERE {
  # Alma mater of Carl L. Nippert
  OPTIONAL { 
    dbr:C_L_Nippert dbo:almaMater ?almaMater .
  }

  # Entity in Baden-Württemberg
  OPTIONAL {
    ?entityInBW dbo:location dbr:Baden-Württemberg .
  }
  
  # Alter ego of Black Hood
  OPTIONAL {
    ?blackHood dbo:alterEgo ?alterEgoOfBlackHood .
    FILTER (CONTAINS(LCASE(?blackHood), ""black hood""))
  }
}
```",4,4,5,2,3,3,3,71,0,201,1,0.0,0.0,0
754,13,val,Give me the parent of the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?grandGrandParent WHERE {
  ?minLinka dbo:birthPlace ?parent1 .
  ?parent1 dbo:partOfCountry ?parent2 .
  ?parent2 dbo:partOfCountry ?grandParent .
  ?grandParent dbo:partOfCountry ?grandGrandParent .

  VALUES ?minLinka { <http://dbpedia.org/resource/Min_Linka> }
}
```",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
528,21,val,Give me the war of the military force of Battle of Pisagua and force of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleForce ?camperoForce WHERE {
  # Battle of Pisagua forces
  OPTIONAL {
    ?battleEvent a dbo:MilitaryConflict ;
                 dbo:participatingMilitaryUnit ?battleForce .
    FILTER (str(?battleEvent) = ""Battle_of_Pisagua"")
  }
  
  # Narciso Campero's military force
  OPTIONAL {
    ?campero dbr:Narciso_Campero ;
             dbo:militaryCommanderOf ?camperoForce .
  }
}
```

This query attempts to find the participating military units in the Battle of Pisagua and any forces commanded by Narciso Campero. Note that the exact properties and resources might need adjustment based on DBpedia's current schema and available data.",3,3,4,2,2,3,3,71,0,0,3,0,0.0,0
182,18,val,Give me the war of Jagath Dias and entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v2 . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?nationality
WHERE {
  # Find wars associated with Jagath Dias
  ?person rdfs:label ""Jagath Dias""@en .
  ?person dbo:participatedIn ?war .

  # Get Tamara Kunanayakam's nationality
  ?kunanayakam rdfs:label ""Tamara Kunanayakam""@en .
  ?kunanayakam dbo:nationality ?nationality .

  # Ensure the war is related to Jagath Dias and Tamara Kunanayakam's nationality
  FILTER(?person = dbr:Jagath_Dias)
}
```",3,3,4,2,2,2,3,28,0,0,5,0,0.0,0
184,41,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/property/father> ?v4 . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfChild
WHERE {
  # Step 1: Find the child of Archduke Joseph Karl of Austria
  ?parent dbr:Archduke_Joseph_Karl_of_Austria dbo:child ?child .

  # Step 2: Find the grandchild (child of the child)
  ?child dbo:child ?grandChild .

  # Step 3: Ensure this grandchild is a native of Budapest
  ?grandChild dbo:nativePlace dbr:Budapest .

  # Step 4: Ensure this person is also a parent of Archduchess Ilona of Austria
  ?parent dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  # The result we want is the grandchild who satisfies all conditions
  BIND(?grandChild AS ?childOfChild)
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
161,43,val,"Give me the military force of the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto and military force of Rif War and commander in Biscay Campaign.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://dbpedia.org/ontology/battle> ?v4 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find the predecessor of Indalecio Prieto
  ?prieto dbo:predecessor ?successor .
  FILTER (str(?successor) = ""Indalecio_Prieto"") .

  # Identify the military force involved in both a societal event and a military conflict
  ?event dbo:type dbr:Spanish_Civil_War ;
         dbo:militaryForce ?militaryForce .

  # Identify the military force of the Rif War
  ?rifWar dbo:militaryForce ?rifMilitaryForce .
  FILTER (str(?rifMilitaryForce) = str(?militaryForce)) .
  FILTER (str(?rifWar) = ""Rif_War"") .

  # Find the commander in Biscay Campaign
  ?campaign dbo:commander ?commander ;
            dbo:militaryForce ?biscayMilitaryForce .
  FILTER (str(?biscayMilitaryForce) = str(?militaryForce)) .
  FILTER (str(?campaign) = ""Biscay_Campaign"") .

}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
360,16,val,Give me the writer of The Roaring Silence and reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerTheRoaringSilence ?authorBlindedByTheLight
WHERE {
  # Find the writer of ""The Roaring Silence""
  dbr:The_Roaring_Silence dbo:author ?writerTheRoaringSilence .
  
  # Find the author of ""Blinded by the Light""
  dbr:Blinded_by_the_Light dbo:composer ?authorBlindedByTheLight .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
9,40,val,"Give me the alma mater of Allen Hill (scientist) and alma mater of the mayor, that is a politician, of the entity, that is an organisation, in Belfast and figure known as QUB.","SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v2 <http://dbpedia.org/property/leader> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?allenHillAlmaMater ?mayorAlmaMater WHERE {
  # Allen Hill (scientist)
  dbr:Allen_Hill_(scientist) dbo:almaMater ?allenHillAlmaMater .

  # Mayor of Belfast
  ?belfastMayor a dbo:Mayor ;
                dbo:officeLocation dbr:Belfast ;
                dbo:almaMater ?mayorAlmaMater .

  # QUB is Queen's University Belfast
  dbr:Queen's_University_Belfast dbo:location dbr:Belfast .
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
184,30,val,Give me the parent of the child of Archduke Joseph Francis of Austria and child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Find children of Archduke Joseph Francis of Austria
  ?child1 dbo:child dbr:Archduke_Joseph_Francis_of_Austria .
  
  # Step 2: Find children of Archduke Joseph August of Austria
  ?child2 dbo:child dbr:Archduke_Joseph_August_of_Austria .

  # Step 3: Ensure the child is common to both
  FILTER (?child1 = ?child2)

  # Step 4: Find the parent of this common child
  ?parent dbo:parent ?commonChild .
  
  # Step 5: Ensure this parent is also the parent of Géza von Habsburg
  ?parent dbo:parent dbr:Géza_von_Habsburg .

  BIND(?child1 AS ?commonChild)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
281,18,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in Colony of New Zealand and war of New Zealand Army.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInNewZealand ?warOfNZArmy
WHERE {
  # Find the resource for Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour_1st_Baron_Alcester dbo:participatedIn ?war .

  # Find entities related to the Colony of New Zealand
  ?entityInNewZealand a dbo:Place ;
                     dbo:country dbr:Colony_of_New_Zealand .

  # Find wars involving the New Zealand Army
  ?warOfNZArmy a dbo:MilitaryConflict ;
              dbo:participatingMilitaryUnit dbr:New_Zealand_Army .
  
  # Link the war of Beauchamp Seymour to the above entities
  FILTER(?war = ?entityInNewZealand || ?war = ?warOfNZArmy)
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
747,30,val,Give me the person born on 1985-04-29 and band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person1 ?band1 ?person2 ?band2 WHERE {
  # Find Tracey Elizabeth McSween and her band
  ?person1 a dbo:MusicalArtist ;
           foaf:name ""Tracey Elizabeth McSween""@en ;
           dbp:birthday ""1985-04-29""^^xsd:date .
  
  OPTIONAL { 
    ?band1 dbo:member ?person1 .
    ?band1 foaf:name ?bandName1 .
  }
  
  # Find Amba Shepherd and her band
  ?person2 a dbo:MusicalArtist ;
           foaf:name ""Amba Shepherd""@en .

  OPTIONAL {
    ?band2 dbo:member ?person2 .
    ?band2 foaf:name ?bandName2 .
  }

  BIND(?bandName1 AS ?band1)
  BIND(?bandName2 AS ?band2)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,26,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Find the parent of Archduke Ladislaus Philipp of Austria
  ?parent dbo:spouse|dbo:child ?ladislaus .
  
  FILTER(?ladislaus = dbpedia:Archduke_Ladislaus_Philipp_of_Austria)

  # Step 2: Find children (children of the parent)
  ?sibling dbo:child ?child .

  FILTER(?sibling IN (?parent))

  # Step 3: Find grandchildren (children of the child from step 2)
  ?child dbo:child ?grandchild .

  # Step 4: Filter to include only those who are royalty
  ?grandchild a dbo:Monarch ;
              dbp:title ?title .
}
```

This query assumes that:
- The parent-child relationships can be found using `dbo:spouse` or `dbo:child`.
- Royalty is identified by the class `dbo:Monarch`.",3,4,4,3,1,3,3,71,0,0,1,0,0.0,0
838,14,val,"Give me the band member of the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find YU Grupa and its associated groups or organizations
  dbr:YU_Grupa dbo:member ?group .
  
  # Ensure the group is both a band and an organization
  ?group rdf:type dbo:Band ;
         rdf:type dbo:Organization .

  # Extract band members from these groups
  ?group dbo:bandMember ?bandMember .
}
```",3,6,4,3,1,3,2,20,0,0,40,0,0.0,0
356,13,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC season
  ?season a dbo:SoccerClubSeason ;
          dbo:sportTeam dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .

  # Step 2: Find its predecessor (the previous season)
  ?predecessor a dbo:SoccerClubSeason ;
               dbo:successor ?season ;
               dbo:sportTeam dbr:Sacramento_Republic_FC ;
               dbo:year ?prevYear .

  # Step 3: Determine the successor of that predecessor
  ?originalSeason a dbo:SoccerClubSeason ;
                  dbo:predecessor ?predecessor ;
                  dbo:sportTeam dbr:Sacramento_Republic_FC ;
                  dbo:year ?origYear .

  # Ensure it's a sports team season and a soccer club season
  ?originalSeason a dbo:SportsTeamSeason, dbo:SoccerClubSeason .

  # Step 4: Get the player involved in that season
  ?player a dbo:Player ;
          dbo:playsFor ?originalSeason .
}
```",3,5,4,3,1,3,2,20,0,0,1,0,0.0,0
754,15,val,Give me the parent of the parent of the parent of Min Linka and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . ?v0 <http://dbpedia.org/ontology/parent> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?greatGreatGrandparentMinLinka ?greatGreatGrandparentMayHninThweDa WHERE {
  # Min Linka's family tree
  ?minLinka dbo:birthName ""Min Linka""@en.
  ?minLinka dbo:mother ?motherMinLinka.
  ?motherMinLinka dbo:mother ?grandmotherMinLinka.
  ?grandmotherMinLinka dbo:mother ?greatGrandmotherMinLinka.
  ?greatGrandmotherMinLinka dbo:mother ?greatGreatGrandparentMinLinka.

  # May Hnin Thwe-Da's family tree
  ?mayHninThweDa dbo:birthName ""May Hnin Thwe-Da""@en.
  ?mayHninThweDa dbo:mother ?motherMayHninThweDa.
  ?motherMayHninThweDa dbo:mother ?grandmotherMayHninThweDa.
  ?grandmotherMayHninThweDa dbo:mother ?greatGrandmotherMayHninThweDa.
  ?greatGrandmotherMayHninThweDa dbo:mother ?greatGreatGrandparentMayHninThweDa.

  # Ensure the great-great-grandparents are the same
  FILTER (?greatGreatGrandparentMinLinka = ?greatGreatGrandparentMayHninThweDa)
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
232,27,val,"Give me the native of the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?native ?residence WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:France ;
          dbo:officeHolder true .
  
  ?person dbo:birthPlace ?native .

  ?person dbo:residence ?residence .

  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .
}
```",3,7,4,3,1,3,3,71,0,0,9121,0,0.0,0
92,19,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:MusicArtist ;
          foaf:name ""Jim Sheppard"" .
  
  ?band a dbo:Band ;
        dbo:member ?person ;
        foaf:name ""Nevermore"" .

  ?person dbo:associatedMusicalArtist ?artist .
}
```

This query does the following:
- It selects entities that are of type `dbo:MusicArtist` and have the name ""Jim Sheppard"".
- It identifies bands (`dbo:Band`) where Jim Sheppard is a member, specifically looking for the band named ""Nevermore"".
- It retrieves any associated musical artists linked to Jim Sheppard.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,38,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?warEvent WHERE {
  # Rutger Jan Schimmelpenninck's military involvement
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService ?militaryForce .
  
  # The military force is involved in a societal event and a military conflict
  ?militaryForce dbo:participatedIn ?warEvent .
  ?warEvent rdf:type dbo:SocietalEvent ;
            rdf:type dbo:MilitaryConflict .

  # The war involves the 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  OPTIONAL {
    ?warEvent dbo:participatingUnit dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) .
  }
  
  # Rutger Jan Schimmelpenninck's role as a commander
  ?militaryForce dbo:commander dbr:Rutger_Jan_Schimmelpenninck .
}
```",4,9,5,2,2,3,3,71,0,0,31,0,0.0,0
617,27,val,Give me the parent of the child of the commander in Battle of Panium.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/child> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Find the commander in the Battle of Panium
  ?battle dbp:battleOfPanium ""true""^^xsd:boolean .
  ?battle dbo:commander ?commander .

  # Step 2: Find children of this commander
  ?child dbo:father ?commander ;
         dbo:mother ?mother .

  # Step 3: Find the parents of these children (either father or mother)
  OPTIONAL { ?parent dbo:child ?child . }
}
```",3,3,4,3,1,3,3,71,0,0,4,0,0.0,0
754,11,val,Give me the parent of May Hnin Thwe-Da and parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?mayHninThweDaParent ?mayHninHtapiGrandparent
WHERE {
  # Find the parent of May Hnin Thwe-Da
  ?mayHninThweDa dbo:parent ?mayHninThweDaParent .
  
  # Find the parent of May Hnin Htapi
  ?mayHninHtapi dbo:parent ?mayHninHtapiParent .

  # Find the grandparent (parent of the parent) of May Hnin Htapi
  ?mayHninHtapiParent dbo:parent ?mayHninHtapiGrandparent .
  
  # Bind the DBpedia resources for May Hnin Thwe-Da and May Hnin Htapi
  VALUES (?mayHninThweDa ?mayHninHtapi) {
    (dbpedia:May_Hnin_Thwe-Da dbpedia:May_Hnin_Htapi)
  }
}
```

This query assumes that the individuals are represented in DBpedia with specific URIs. You may need to adjust these URIs based on how they are actually stored in DBpedia.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
182,14,val,Give me the war of the work of Gotabhaya Rajapaksa and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war
WHERE {
  VALUES ?person { 
    dbr:Gotabhaya_Rajapaksa 
    dbr:Mahesh_Senanayake 
  }
  
  OPTIONAL {
    ?person dbo:militaryConflict ?war .
  }

  FILTER(?war != """")
}
```",3,3,4,2,2,2,3,28,0,2,1,0.0,0.0,0
485,18,val,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist) and birth place of Thomas Warner (poet).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?region
WHERE {
  # Find Joseph Whitaker's birthplace that is a region
  ?jw dbo:birthPlace ?birthPlaceJW .
  ?birthPlaceJW rdf:type dbo:Region .

  # Find Thomas Warner's birthplace that is a region
  ?tw dbo:birthPlace ?birthPlaceTW .
  ?birthPlaceTW rdf:type dbo:Region .

  # Ensure the regions are the same
  FILTER (?birthPlaceJW = ?birthPlaceTW)

  # Bind the common region to the variable
  BIND(?birthPlaceJW AS ?region)
}
```",3,4,4,2,2,2,3,28,0,10979,1,0.0,0.0,0
767,28,val,"Give me the reference to  and entity in the administration, that is a settlement, of Green and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement ?university WHERE {
  # Assuming ""Green"" refers to a notable person or place, we need more context.
  # For this example, let's assume it refers to a city named Green.

  # Find the settlement associated with ""Green""
  dbr:Green dbo:administrativeTerritory ?settlement .

  # Find the alma mater of Carl L. Nippert
  dbr:C_L_Nippert dbo:almaMater ?university .
  
  FILTER(?university = dbr:University_of_Cincinnati)
}
```

This query assumes:
- ""Green"" is a city or place with an administrative territory.
- Carl L. Nippert's alma mater is the University of Cincinnati.",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
767,21,val,"Give me the entity in the administration, that is a settlement, of Green and reference to .","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?region a dbo:AdministrativeRegion ;
          rdfs:label ""Green""@en .
  
  ?region dbo:hasSettlement ?settlement .
  
  ?settlement a dbo:Settlement .
}
```",3,4,4,2,2,3,3,71,0,0,7,0,0.0,0
427,30,val,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to Partito Popolare Italiano and party of Giulio Andreotti.","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel WHERE {
  # Romano Prodi's political party affiliation
  OPTIONAL { 
    dbr:Romano_Prodi dbo:politicalParty ?prodiParty .
    ?prodiParty rdfs:label ?partyLabel .
    FILTER (lang(?partyLabel) = 'en')
  }
  
  # Partito Popolare Italiano reference
  OPTIONAL {
    dbr:Partito_Popolare_Italiano rdfs:label ?ppiLabel .
    FILTER (lang(?ppiLabel) = 'en' && ?ppiLabel = ""Partito Popolare Italiano"")
  }

  # Giulio Andreotti's political party affiliation
  OPTIONAL {
    dbr:Giulio_Andreotti dbo:politicalParty ?andreottiParty .
    ?andreottiParty rdfs:label ?andreottiPartyLabel .
    FILTER (lang(?andreottiPartyLabel) = 'en')
  }
}
```

This query does the following:
- Retrieves the political party of Romano Prodi and labels it in English.
- References Partito Popolare Italiano to ensure its presence in the dataset.
- Retrieves the political party associated with Giulio Andreotti for context.",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
712,14,val,Give me the resting place of the awardee of the show of Soviet Union.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee ?restingPlace WHERE {
  ?award dbo:recipient ?person .
  ?person a dbo:AwardRecipient ;
          foaf:name ?awardee .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
  
  FILTER (regex(str(?award), ""Hero of the Soviet Union"", ""i""))
}
LIMIT 10
```

This query does the following:
- Searches for awards with recipients.
- Filters to find those related to the ""Hero of the Soviet Union.""
- Retrieves the awardee's name and their resting place if available.

Note: The exact class `dbo:AwardRecipient` and property `dbo:deathPlace` are hypothetical and may need adjustment based on actual DBpedia schema details. Adjustments might be necessary depending on the specific award or show being referred to.",3,3,4,3,1,3,2,20,0,0,63,0,0.0,0
528,44,val,Give me the war of the commander in Battle of La Rinconada de Ate and war of Irene Morales and force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v4 . ?v2 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?v4 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?commander ?warIrene ?narcisoBirthDate ?forceNarciso
WHERE {
  # Battle of La Rinconada de Ate and its commander
  OPTIONAL {
    ?battle dbo:name ""Battle of La Rinconada de Ate""@en .
    ?battle dbo:commander ?commander .
  }

  # War involving Irene Morales
  OPTIONAL {
    ?warIrene dbo:participant dbr:Irene_Morales .
  }

  # Narciso Campero Leyes birth date and associated force
  OPTIONAL {
    ?narciso dbr:Narciso_Campero_Leyes .
    ?narciso dbo:birthday ?narcisoBirthDate .
    ?narciso dbo:memberOf ?forceNarciso .
  }
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
963,15,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton and administration of Serbian Progressive Party.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . ?v1 <http://dbpedia.org/property/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .

  # Find countries associated with this time zone
  ?country dbo:timeZone ?timezone .
  
  # Ensure the country is also related to the Serbian Progressive Party
  ?party dbr:Serbian_Progressive_Party dbo:administrativeRegion ?country .
}
```",4,5,5,3,2,3,2,20,0,0,84,0,0.0,0
339,11,val,Give me the child of the child of Christian IX of Denmark and father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v2 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild ?father WHERE {
  # Christian IX and his children
  ?christianIX a dbo:Monarch ;
               foaf:name ""Christian IX of Denmark""@en .
  
  ?child dbo:spouse ?partner ;
         dbo:parent ?christianIX .

  # Children of the child (grandchildren of Christian IX)
  ?grandchild dbo:parent ?child .

  # Princess Elizabeth and her father
  ?princess dbp:name ""Princess Elizabeth of Greece and Denmark""@en .
  
  ?father dbo:spouse ?mother ;
          dbo:parent ?grandchild ;
          foaf:name ?name .

  FILTER(?princess = ?grandchild)
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
391,31,val,"Give me the actor of The Departed and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?nativePerson WHERE {
  # Find actors of ""The Departed""
  ?movie dbo:title ""The Departed""@en .
  ?movie dbo:starring ?actor .

  # Find the nickname of Jackson, Tennessee
  ?city rdfs:label ""Jackson, Tennessee""@en ;
        dbo:nickname ?nickname .

  # Find a person native to the figure represented by the nickname
  ?nativePerson dbo:birthPlace ?city .
  ?figure rdfs:label ?nickname .
  ?nativePerson dbo:associatedWith ?figure .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,39,val,Give me the associated musical artist of Jim Sheppard and band of the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> ?v1 . <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band1 ?band2 WHERE {
  # Find Jim Sheppard and his associated band
  OPTIONAL {
    ?person rdfs:label ""Jim Sheppard""@en .
    ?person dbo:musicGroup ?band1 .
  }

  # Find the person born as Joseph Michael and their associated band
  OPTIONAL {
    ?person rdfs:label ""Joseph Michael""@en .
    ?person dbo:birthName ""Joseph Michael"" .
    ?person dbo:musicGroup ?band2 .
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,25,val,Give me the alma mater of Carl L. Nippert and reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater ?alterEgo WHERE {
  # Query for Carl L. Nippert's alma mater
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""Carl L. Nippert"" .
    ?person dbo:almaMater ?almaMatter .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?almaMatter))) AS ?almaMater)
  }

  # Query for Black Hood's alter ego
  OPTIONAL {
    ?character a dbo:FictionalCharacter ;
               foaf:name ""Black Hood"" .
    ?character dbo:alterEgo ?alterEgo .
    BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", STR(?alterEgo))) AS ?alterEgo)
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,44,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and professional in  and associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/producer> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v2 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?producer ?associatedArtist WHERE {
  # Find the song ""40 Dayz & 40 Nightz"" by 50 Cent
  ?song dbo:artist dbr:50_Cent ;
        rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  # Get the producer of this song
  ?song dbo:producer ?producer .

  # Find the writer of the song
  ?song dbo:lyricist ?writer .

  # Get an associated musical artist of the writer
  ?writer dbp:associatedMusicalArtist ?associatedArtist .
}
```",5,10,6,2,3,3,3,71,0,0,1,0,0.0,0
701,43,val,Give me the parent of Meritamen and spouse of Ramesses II and parent of the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://dbpedia.org/property/father> ?v0 . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentOfMeritamen ?spouseOfRamessesII ?grandchildParent
WHERE {
  # Parent of Meritamen
  OPTIONAL { 
    ?meritamen dbo:parent ?parentOfMeritamen .
    FILTER(STRSTARTS(STR(?meritamen), ""http://dbpedia.org/resource/Meritamen""))
  }

  # Spouse of Ramesses II
  OPTIONAL {
    ?ramessesII dbo:spouse ?spouseOfRamessesII .
    FILTER(STRSTARTS(STR(?ramessesII), ""http://dbpedia.org/resource/Ramses_II""))
  }
  
  # Parent of the child of the child of Seti I
  OPTIONAL {
    ?setiI dbo:child ?child1 .
    FILTER(STRSTARTS(STR(?setiI), ""http://dbpedia.org/resource/Seti_I""))

    ?child1 dbo:child ?grandchild .
    
    ?grandchild dbo:parent ?grandchildParent .
  }
}
```",5,5,6,3,3,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
701,25,val,Give me the parent of Henuttawy (19th dynasty) and spouse of the father of Merneptah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Step 1: Find Henuttawy's parent
  ?henuttawy dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(?henuttawy), ""henuttawy"") && CONTAINS(LCASE(?place), ""19th dynasty""))
  
  OPTIONAL { ?henuttawy dbo:parent ?parent . }
  
  # Step 2: Find Merneptah's father and his spouse
  ?merneptah dbo:birthPlace ?place .
  FILTER(CONTAINS(LCASE(?merneptah), ""merneptah""))
  
  OPTIONAL { ?merneptah dbo:father ?father . }
  OPTIONAL { ?father dbo:spouse ?spouse . }

  # Ensure the parent of Henuttawy and spouse of Merneptah's father are the same
  FILTER(?parent = ?spouse)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
547,19,val,Give me the resting place of the child of James Burton (property developer) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRestingPlace ?simonCadellRestingPlace WHERE {
  # James Burton's child (assuming his notable child is John Burton)
  OPTIONAL { 
    dbr:John_Burton dbo:deathPlace ?johnBurtonDeathPlace .
    ?johnBurtonDeathPlace dbo:location ?childRestingPlace .
  }
  
  # Simon Cadell
  OPTIONAL {
    dbr:Simon_Cadell dbo:deathPlace ?simonCadellDeathPlace .
    ?simonCadellDeathPlace dbo:location ?simonCadellRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,21,val,Give me the spouse of the person born as Ted Martin McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouse WHERE {
  VALUES (?person ?name) { 
    (<http://dbpedia.org/resource/Ted_McGinley> ""Ted Martin McGinley"")
    (<http://dbpedia.org/resource/Georgeanne_Rice> ""Georgeanne Marie Rice"")
  }
  
  OPTIONAL {
    ?person dbo:spouse ?spouse .
  }

  FILTER(lang(?name) = 'en')
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
659,41,val,"Give me the military force of Napoleonic Wars and commander in the force of Arthur Wellesley, 1st Duke of Wellington and commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v4 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commanderInForce ?event ?conflict
WHERE {
  # Arthur Wellesley, 1st Duke of Wellington
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:militaryCommanderOf ?militaryForce .
  
  # Napoleonic Wars as an event and military conflict
  dbr:Napoleonic_Wars a dbo:MilitaryConflict ;
                      dbo:event ?event .

  # 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)
  OPTIONAL {
    dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) dbo:militaryCommanderOf ?commanderInForce .
  }
  
  FILTER(?militaryForce != dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish))
}
```",5,7,6,2,3,3,3,71,0,0,13,0,0.0,0
54,19,val,Give me the child of the father of Soe Min Wimala Dewi and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Soe Min Wimala Dewi's father
  ?soeMinWimalaDewi a dbo:Person ;
                   foaf:parent ?fatherOfSoeMinWimalaDewi .
  
  # Find Thado Minsaw of Prome's parent
  dbr:Thado_Minsaw_of_Prome a dbo:Person ;
                            foaf:child ?parentOfThadoMinsaw .

  # The child we are looking for is both the child of Soe Min Wimala Dewi's father and Thado Minsaw's parent
  ?fatherOfSoeMinWimalaDewi foaf:child ?child .
  ?parentOfThadoMinsaw foaf:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
16,36,val,Give me the spouse of Ted McGinley and person born as the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?personWithSameBirthName WHERE {
  # Find Ted McGinley's spouse
  ?ted a dbo:Person ;
      foaf:name ""Ted McGinley"" ;
      dbo:spouse ?spouse .

  # Find alumni of Ohio State University and their birth names
  ?alumnus a dbo:Person ;
           dbp:almaMater <http://dbpedia.org/resource/Ohio_State_University> ;
           dbo:birthName ?birthName .

  # Find any person with the same birth name as an alumnus
  ?personWithSameBirthName a dbo:Person ;
                          dbo:birthName ?birthName .
}",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
820,14,val,Give me the child of the parent of the professional in Actor.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/property/occupation> ""Actor""@en . ?result <http://dbpedia.org/property/father> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?childClass WHERE {
  # Find a professional actor
  ?actor rdf:type dbo:Actor .
  
  # Get the parent class of this actor
  ?actor rdfs:subClassOf+ ?parentClass .

  # Ensure we are looking at direct subclasses (children) of the parent class
  ?childClass rdfs:subClassOf ?parentClass .
}
```",3,3,4,3,1,3,2,20,0,0,354,0,0.0,0
547,20,val,Give me the resting place of the actor of Enemy at the Door and resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?burtonRestingPlace WHERE {
  # Find Michael Fassbender's resting place
  OPTIONAL {
    dbr:Michael_Fassbender dbo:film dbr:Enemy_at_the_Door .
    dbr:Michael_Fassbender dbo:deathPlace ?actorRestingPlace .
  }

  # Find James Burton (Egyptologist)'s resting place
  OPTIONAL {
    dbr:James_Burton_(Egyptologist) dbo:deathPlace ?burtonRestingPlace .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
528,26,val,Give me the war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  ?work dbo:wikiPageRedirects dbr:The_Lord_of_the_Rings .
  ?work dbo:character ?commander .
  ?commander dbo:occupation ""Commander"" .
  ?commander dbo:participatedIn ?war .
}
```

This query assumes:
- The work is ""The Lord of the Rings.""
- There's a character with the occupation ""Commander.""
- This character participated in a war.

If ""--01-09"" refers to something specific, please provide more context or details for a more accurate query.",3,3,4,3,1,3,3,71,0,0,14,0,0.0,0
767,24,val,Give me the reference to  and alma mater of the administration of George K. Nash.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?administration ?reference ?almaMater
WHERE {
  ?person foaf:name ""George K. Nash""@en .
  ?person dbo:positionHeld ?administration .
  
  OPTIONAL { ?administration ?p ?reference . FILTER(?p = dbo:wikiPageWikiLink || ?p = dbo:wikiPageExternalLink) }
  
  OPTIONAL { ?person foaf:almaMater ?almaMater . }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
801,34,val,Give me the professional in the alter ego of the true self of The Shadow and associated musical artist of Chris Taylor (music producer).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?associatedArtist WHERE {
  # The Shadow's alter ego
  dbr:The_Shadow dbo:alterEgo dbr:Lamont_Cranston .
  
  # Chris Taylor's associated musical artist
  dbr:Chris_Taylor_(musician) dbo:associatedBand dbr:Grizzly_Bear .
  
  BIND(dbr:Lamont_Cranston AS ?alterEgo)
  BIND(dbr:Grizzly_Bear AS ?associatedArtist)
}
```",4,4,5,3,2,3,3,71,0,0,4,0,0.0,0
666,14,val,"Give me the figure known as the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v2 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/nickname> ?v0 . ?v2 <http://dbpedia.org/property/nickname> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        dbo:sport dbr:Soccer ;
        dbo:country dbr:England .
  
  OPTIONAL { ?club dbo:nickname ?nickname . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
- **SELECT Clause**: We are interested in the `?nickname`.
- **WHERE Clause**:
  - `?club a dbo:SoccerClub`: Ensures that the entity is a soccer club.
  - `dbo:sport dbr:Soccer`: Confirms it's related to the sport of soccer.
  - `dbo:country dbr:England`: Filters clubs based in England.
  - `OPTIONAL { ?club dbo:nickname ?nickname . }`: Retrieves the nickname if available.

This query will return the nicknames of soccer clubs that are also sports clubs located in England. The most famous example fitting this description is ""The Red Devils,"" which is the nickname for Manchester United FC.",3,6,4,3,1,3,2,20,0,0,12,0,0.0,0
492,23,val,Give me the person decedent at the work of the author of French Algeria.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Step 1: Identify the author of ""French Algeria""
  dbr:François_Mitterrand dbo:author dbr:French_Algeria .

  # Step 2: Find out where this author died
  dbr:François_Mitterrand dbo:deathPlace ?deathPlace .

  # Step 3: Retrieve details about the person associated with the location or event of their death
  OPTIONAL {
    ?decedent dbo:placeOfBirth ?deathPlace .
  }
}
```",3,3,4,3,1,3,3,71,0,0,30,0,0.0,0
747,25,val,Give me the band of the person born as Tracey Elizabeth McSween and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band
WHERE {
  # For Tracey Elizabeth McSween (Tracy Bonham)
  { 
    ?person rdfs:label ""Tracey Elizabeth McSween""@en .
    OPTIONAL { ?person dbo:musicalBand ?band . }
  } UNION
  # For Amba Shepherd
  { 
    ?person rdfs:label ""Amba Shepherd""@en .
    OPTIONAL { ?person dbo:musicalBand ?band . }
  }

  FILTER (lang(?person) = 'en')
}
ORDER BY ?person",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
9,27,val,"Give me the figure known as the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/property/nickname> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?institution ?nickname WHERE {
  ?institution a dbo:EducationalInstitution ;
               dbo:location dbr:Northern_Ireland ;
               dbp:nickname ?nickname .
}
```

This query does the following:
- Uses `dbo:EducationalInstitution` to filter for educational institutions.
- Filters by location using `dbo:location` and specifies Northern Ireland with `dbr:Northern_Ireland`.
- Retrieves the nickname using `dbp:nickname`.",3,5,4,3,1,3,3,71,0,0,13,0,0.0,0
378,44,val,Give me the war of the commander in Peninsular War and claim to fame of the commander in Great Siege of Gibraltar and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v4 . ?v4 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame WHERE {
  # Arthur Wellesley in the Peninsular War
  VALUES (?person1) { dbr:Arthur_Wellesley_1st_Duke_of_Wellington }
  ?person1 dbo:participatedIn ?peninsularWar.
  ?peninsularWar a dbo:MilitaryConflict;
                 rdfs:label ?war.

  # George Augustus Eliott in the Great Siege of Gibraltar
  VALUES (?person2) { dbr:George_Augustus_Eliott_1st_Baron_Heathfield }
  ?person2 dbo:claimToFame ?gibraltarSiege.
  ?gibraltarSiege rdfs:label ?claimToFame.

  # Carl Pontus Gahn's association with a war
  VALUES (?person3) { dbr:C._P._Gahn }
  OPTIONAL {
    ?person3 dbo:participatedIn ?war2.
    ?war2 rdfs:label ?war2Label.
  }

  FILTER (lang(?war) = 'en' && lang(?claimToFame) = 'en')
}
```",5,5,6,2,3,3,3,71,0,0,2,0,0.0,0
801,30,val,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz and producer of Westside Story (song) and professional in .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the producer of ""Westside Story (song)""
  ?producer a dbo:MusicArtist ;
            dbo:productionOf dbr:Westside_Story_(song) .

  # Ensure this producer is also associated with ""40 Dayz & 40 Nightz""
  ?album a dbo:Album ;
         dbo:artist ?producer ;
         rdfs:label ?albumLabel .
  FILTER(CONTAINS(LCASE(?albumLabel), ""40 dayz & 40 nightz""))

  BIND(?producer AS ?artist)
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
378,20,val,Give me the war of the commander in Peninsular War and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v2 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Wars in the Peninsular War
  VALUES ?peninsularWar { 
    dbr:Péninsule_War 
  }
  
  ?peninsularBattle dbo:partOf ?peninsularWar .
  ?peninsularBattle dbo:commandedBy ?commander .

  UNION

  # Wars involving Carl Pontus Gahn
  {
    SELECT ?war WHERE {
      ?gahn dbr:Carl_Pontus_Gahn ;
            dbo:servedIn ?army .
      ?battle dbo:partOf ?army ;
              dbo:partOf ?war .
    }
  }

  OPTIONAL { ?war rdfs:label ?warLabel . FILTER (lang(?warLabel) = 'en') }
}
ORDER BY ?commander
```

This query does the following:
- Retrieves battles that are part of the Peninsular War and their commanders.
- Identifies wars associated with Carl Pontus Gahn by checking where he served and linking those to specific battles or wars.",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
9,44,val,"Give me the figure known as the nickname of Queen's University Belfast and alma mater of John Alderdice, Baron Alderdice and alma mater of the awardee of Royal Medal.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?result <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v2 . ?v4 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?nickname WHERE {
  # Find Queen's University Belfast and its nickname
  VALUES ?university { dbr:Queen's_University_Belfast }
  
  ?university dbo:nickname ?nickname .
  
  OPTIONAL {
    # Check if John Alderdice attended this university
    ?alderdice dbo:almaMater ?university ;
              rdfs:label ""John Alderdice, Baron Alderdice""@en .
  }

  OPTIONAL {
    # Check for an awardee of the Royal Medal who attended this university
    ?medalist dbo:award ?royalMedal ;
              dbo:almaMater ?university ;
              dbo:award ?award .
    
    ?royalMedal rdfs:label ""Royal Medal""@en .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
339,15,val,Give me the father of Princess Elizabeth of Greece and Denmark and child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Princess Elizabeth of Greece and Denmark's father
  dbr:Princess_Elizabeth_of_Greece_and_Denmark dbo:father ?father .

  # Predecessor of Frederick VIII of Denmark
  dbr:Fredrick_VIII_of_Denmark dbo:predecessor ?predecessor .

  # Child of Christian IX (George I)
  ?predecessor dbo:child ?child1 .
  
  # Child of George I (Constantine I)
  ?child1 dbo:child ?father .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
547,39,val,Give me the resting place of Simon Cadell and resting place of the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v0 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?restingPlaceSimonCadell ?awardeeRestingPlace WHERE {
  # Resting place of Simon Cadell
  OPTIONAL {
    dbr:Simon_Cadell dbo:placeOfBurial ?restingPlaceSimonCadell .
  }

  # Find the award associated with Gerald Graham and its awardee's resting place
  OPTIONAL {
    ?award dbo:recipient ?awardee .
    ?awardee dbo:placeOfBurial ?awardeeRestingPlace .
    ?award dbo:associatedWith dbr:Gerald_Graham .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
528,36,val,Give me the war of Irene Morales and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force WHERE {
  # Find wars involving Irene Morales
  ?person rdfs:label ""Irene Morales""@en .
  ?person dbo:memberOf ?organization .
  ?organization dbo:member ?war .

  # Find the force associated with Narciso Campero's birth name
  ?campero rdfs:label ""Narciso Campero""@en .
  ?campero foaf:name ?birthName .
  ?force rdfs:label ?birthName .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
617,24,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v2 . ?v2 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify Antiochus III the Great
  ?antiochus3 a dbo:Monarch ;
              foaf:name ""Antiochus III""@en .

  # Step 2: Find his children
  ?child dbo:parent ?antiochus3 .

  # Step 3: Determine which child is parent of Nysa
  ?nysa a dbo:Person ;
        foaf:name ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?child dbo:child ?nysa .

  # Step 4: Retrieve the spouse of that child
  ?spouse dbo:spouse ?child .
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
339,13,val,Give me the child of the child of the predecessor of Frederick VIII of Denmark.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?v1 <http://dbpedia.org/property/father> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?grandchild WHERE {
  ?frederickVIII dbo:spouse ?spouse .
  ?frederickVIII foaf:name ""Frederick VIII""@en .

  ?predecessor dbo:successor ?frederickVIII .

  ?child dbp:parent ?predecessor .
  
  ?grandchild dbp:parent ?child .
}
```",3,3,4,3,1,3,2,20,0,0,32,0,0.0,0
16,20,val,Give me the professional in the profession of Satomi Ishihara and spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find Satomi Ishihara's profession
  ?satomi a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  ?satomi dbo:profession ?profession .

  # Find Ted McGinley's spouse
  ?ted a dbo:Person ;
       foaf:name ""Ted McGinley""@en .
  ?ted dbp:spouse ?person .

  # Check if the person matches both conditions
  ?person dbo:profession ?profession .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,18,val,Give me the spouse of Laodice IV and child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Laodice IV and her spouse
  dbr:Laodice_IV dbo:spouse ?spouse .
  
  # The spouse is a child of Antiochus III the Great
  ?spouse dbo:childOf dbr:Antiochus_III_the_Great .

  # The spouse is a parent of Nysa
  ?spouse dbo:parent dbr:Nysa_(wife_of_Pharmaaces_I_of_Pontus) .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
996,14,val,Give me the entity in the award of the native of Palestine (region).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . ?v2 <http://dbpedia.org/property/awards> ?v0 . ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?recipient WHERE {
  ?person dbo:nationality dbr:Palestine .
  ?person dbo:honoraryTitle ?award .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

### Explanation:

- **PREFIX**: We define prefixes for DBpedia ontology (`dbo`) and resources (`dbr`).
  
- **SELECT DISTINCT**: We select distinct awards and recipients to avoid duplicates.

- **?person dbo:nationality dbr:Palestine**: This part of the query filters individuals who have a nationality linked to Palestine.

- **?person dbo:honoraryTitle ?award**: This retrieves any honorary titles or awards associated with these individuals.

- **SERVICE wikibase:label**: This service is used to get labels for entities in multiple languages, ensuring we can understand the results regardless of language settings.

This query assumes that DBpedia has structured data linking people to their nationality and any honorary titles they might have received. Adjustments may be necessary based on the actual schema and available data in DBpedia.",3,3,4,3,1,3,2,20,0,0,292,0,0.0,0
391,21,val,Give me the native of the figure known as Hub City and actor of All About the Andersons.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/property/nickname> ""Hub City""@en . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Michael J. Fox"" ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL { 
    ?film dbo:title ""All About the Andersons""@en ;
          dbo:starring ?person .
  }
  
  FILTER EXISTS { ?film dbo:title ""All About the Andersons""@en }

  ?birthPlace dbo:country ?nativeCountry .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
345,14,val,"Give me the team of the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v2 . ?v0 <http://dbpedia.org/ontology/birthDate> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  # Get Eiður Guðjohnsen's birthdate
  dbr:Eiður_Guðjohnsen dbo:birthday ?birthDate .

  # Find individuals with the same birthdate who are both soccer players and managers
  ?person dbo:birthDate ?birthDate .
  ?person a dbo:SoccerPlayer ;
          a dbo:SoccerManager .

  # Retrieve the team associated with those individuals
  OPTIONAL { ?person dbp:team ?team . }
}
```",3,5,4,3,1,3,2,20,0,0,2,0,0.0,0
9,37,val,"Give me the alma mater of the awardee of the reference, that is an award, to Royal Medals and figure known as QUB.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?recipient dbo:awardReceived dbr:Royal_Medal .
  ?recipient dbo:almaMater ?almaMater .
  OPTIONAL { ?recipient dbo:affiliation dbr:Queen's_University_Belfast . }
}
```

This query does the following:
- Selects recipients of the Royal Medal.
- Retrieves their alma mater.
- Optionally checks if they have an affiliation with Queen's University Belfast.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
492,42,val,"Give me the commander in Franco-Hova Wars and person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?commander WHERE {
  # Find commanders in the Franco-Hova Wars
  ?commander dbo:occupation dbr:Military_commander .
  ?commander dbo:participatedInMilitaryConflict dbr:Franco-Hova_Wars .

  # Check if they died at Algiers, the capital of Algeria
  OPTIONAL {
    ?deathEvent dbo:place dbr:Algiers ;
               dbo:agent ?commander .
  }

  # Check if they died at the workplace of Joseph C. Satterthwaite
  OPTIONAL {
    ?satterthwaiteOffice dbp:office ""Assistant Secretary of State for African Affairs""@en .
    ?satterthwaiteOffice dbo:employee dbr:Joseph_C._Satterthwaite .

    ?deathEvent2 dbo:place ?satterthwaiteOffice ;
                 dbo:agent ?commander .
  }
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
617,28,val,"Give me the spouse of Laodice IV and child of the child, that is a royalty, of Seleucus II Callinicus and parent of Nysa (wife of Pharnaces I of Pontus).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse ?child ?grandchild WHERE {
  # Laodice IV's spouse
  dbr:Laodice_IV dbo:spouse ?spouse .

  # Child of Laodice IV and her spouse
  ?spouse dbo:child ?child .
  
  # Ensure the child is royalty
  ?child a dbo:Monarch .

  # The child must be a parent of Nysa
  ?child dbo:parent dbr:Nysa_(wife_of_Pharaces_I_of_Pontus) .

  # Find the grandchild (royalty)
  ?child dbo:child ?grandchild .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
534,13,val,"Give me the birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?childBirthPlace WHERE {
  ?politician a dbo:Politician ;
             dbo:nationality dbr:Essex .
  
  ?politician dbo:child ?child .
  
  OPTIONAL { ?child dbo:occupation dbr:Politician . }
  OPTIONAL { ?child dbo:officeHolder true . }

  ?child dbp:birthPlace ?childBirthPlace .
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,23,val,Give me the parent of the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find the spouse of Amun-her-khepeshef
  ?spouse a dbo:Person ;
          dbo:spouse ?amunHerKhepeshef .
  
  FILTER(?amunHerKhepeshef = dbp:Amun-Her-Khepeshef)

  # Step 2: Find the children of this spouse
  ?child dbo:parent ?spouse .

  # Step 3: Determine the parents of those children
  ?child dbo:parent ?parent .
}
```",3,3,4,3,1,3,3,71,0,0,2,0,0.0,0
48,12,val,"Give me the band of Carl Falk and band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?carlFalkBand ?honorUpBand WHERE {
  # Find Carl Falk's band
  ?carlFalk a dbo:MusicArtist ;
            foaf:name ""Carl Falk"" .
  OPTIONAL { 
    ?carlFalk dbo:bandMemberOf ?band .
    ?band dbp:name ?carlFalkBand .
  }

  # Find the actor who is also a musical artist named ""Honor Up""
  ?honorUp a dbo:Actor ;
           foaf:name ""Honor Up"" .
  OPTIONAL {
    ?honorUp dbo:musicalArtistOf ?band .
    ?band dbp:name ?honorUpBand .
  }
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
182,15,val,Give me the entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInSriLanka ?war
WHERE {
  # Identify Zahran Hashim as the author of the bombings
  ?person a dbo:Person ;
          foaf:name ""Zahran Hashim""@en ;
          dbo:nationality dbr:Sri_Lankan_people .

  # Find entities in Sri Lanka related to him
  ?entityInSriLanka dbo:location dbr:Sri_Lanka ;
                   dbo:relatedTo ?person .
  
  # Find wars he might be associated with
  OPTIONAL {
    ?war dbo:participant ?person .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
528,23,val,"Give me the war of the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://dbpedia.org/ontology/battle> ?result . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?v0 <http://dbpedia.org/ontology/battle> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war WHERE {
  ?event a dbo:SocietalEvent ;
         dbo:location dbr:Chile .
  
  ?militaryForce dbo:participatedIn ?event ;
                 dbo:participatesIn ?war .

  FILTER EXISTS { ?war a dbo:MilitaryConflict }
}
```",3,4,4,3,1,3,3,71,0,0,235,0,0.0,0
429,7,val,Give me the administration of the father of Martha Johnson Patterson and country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v2 . <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherName ?administration ?country
WHERE {
  # Martha Johnson Patterson's father
  dbr:Martha_Johnson_Patterson dbo:father ?father .
  ?father rdfs:label ?fatherName .
  FILTER (lang(?fatherName) = 'en')
  
  OPTIONAL { 
    ?father dbo:officeHolderOf ?administration .
    ?administration rdfs:label ?adminLabel .
    FILTER (lang(?adminLabel) = 'en')
  }
  
  # 77th Ohio Infantry Regiment
  dbr:77th_Ohio_Infantry_Regiment dbo:nationality ?country .
  ?country rdfs:label ?countryLabel .
  FILTER (lang(?countryLabel) = 'en')
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
54,34,val,Give me the child of the father of the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childOfThinkhaya WHERE {
  # Thinkhaya of Pagan and his child
  dbr:Thinkhaya_of_Pagan dbo:spouse ?spouse .
  ?spouse dbo:child ?thinkhayasChild .

  # Child of Thinkhaya's child (grandchild)
  ?thinkhayasChild dbo:child ?childOfThinkhaya .

  # Predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava
  dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava dbo:predecessor ?predecessor .

  # The child of Thinkhaya is the predecessor we are looking for
  FILTER(?childOfThinkhaya = ?predecessor)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
959,20,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find Yōichi Masuzoe's birthplace
  dbr:Yōichi_Masuzoe dbo:nativePlace ?birthPlace .
  
  # Extract the country from the birthplace
  ?birthPlace dbo:country ?country .

  # Find members of University of Tsukuba who are native to that country
  ?person dbo:almaMater dbr:University_of_Tsukuba ;
          dbo:nativePlace ?nativePlace .
  
  # Ensure the native place is in the same country as Yōichi Masuzoe's birthplace
  ?nativePlace dbo:country ?country .
}
```",3,4,4,2,2,3,3,71,0,0,84,0,0.0,0
435,14,val,Give me the territory administered from Reykjavík and region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?territory ?timeZoneRegion
WHERE {
  # Find territories administered from Reykjavík
  ?reikjavik dbo:administrativeTerritory ?territory .
  VALUES ?reikjavik { <http://dbpedia.org/resource/Reykjavík> }

  # Find time zone region for Bombali Shebora Chiefdom
  ?chiefdom dbp:timeZone ?timeZone .
  ?timeZone dbo:region ?timeZoneRegion .
  VALUES ?chiefdom { <http://dbpedia.org/resource/Bombali_Shebora_Chamber> }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
747,21,val,Give me the person born on the birth date of Pavlo Khudzik and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band 
WHERE {
  # Find Pavlo Khudzik's birthdate
  VALUES ?khudzikBirthDate { 
    SELECT ?birthdate WHERE { 
      dbr:Pavlo_Khudzik dbo:birthday ?birthdate .
    }
  }

  # Find people born on the same date as Pavlo Khudzik
  ?person dbo:birthday ?sameBirthDate .
  FILTER (?sameBirthDate = ?khudzikBirthDate)

  # Exclude Pavlo Khudzik from results
  FILTER (!str(?person) = ""Pavlo_Khudzik"")

  OPTIONAL {
    # Find the band associated with Shèna
    dbr:Shèna dbo:band ?band .
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
994,29,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah and associated musical artist of S.A. Slayer and band member of Don Dokken.",SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Meshuggah band member's associated artist
  {
    ?meshuggahMember dbo:memberOf dbr:Meshuggah .
    ?meshuggahMember dbo:associatedMusicalArtist ?artist .
  }
  
  UNION
  
  # Slayer (S.A.) associated musical artist
  {
    ?slayerPerson foaf:name ""Jeff Hanneman"" .  # Assuming S.A. refers to Jeff Hanneman of Slayer
    ?slayerPerson dbo:associatedMusicalArtist ?artist .
  }
  
  UNION
  
  # Don Dokken band member's associated artist
  {
    ?donDokkenMember dbo:memberOf dbr:Don_Dokken .
    ?donDokkenMember dbo:associatedMusicalArtist ?artist .
  }
}
```",4,7,5,2,3,3,3,71,0,0,1,0,0.0,0
528,29,val,Give me the war of Irene Morales and war of the commander in Battle of La Rinconada de Ate and force of Narciso Campero.,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v3 . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?battle ?force WHERE {
  # Irene Morales' involvement in wars or battles
  OPTIONAL { 
    ?person rdfs:label ""Irene Morales""@en .
    ?person dbo:participatedIn ?war .
  }

  # Battle of La Rinconada de Ate details
  OPTIONAL {
    dbr:Battle_of_La_Rinconada_de_Ate dbo:participatingCommander ?commander ;
                                        dbo:opposingForce ?force .
  }

  # Narciso Campero's involvement in wars or battles
  OPTIONAL {
    ?person rdfs:label ""Narciso Campero""@en .
    ?person dbo:commanderOf ?battle .
  }
  
  # Linking the entities
  FILTER(?war = ?battle)
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
617,23,val,"Give me the child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Find Antiochus II Theos
  ?antiochus2 a dbo:Monarch ;
              foaf:name ""Antiochus II Theos""@en .

  # Find his successor who is royalty
  ?successor dbo:predecessor ?antiochus2 ;
             a dbo:Monarch .

  # Find the child of this successor who is royalty
  ?child dbp:parent ?successor ;
         a dbo:Monarch .

  # Finally, find the grandchild (child of the child) who is royalty
  ?grandchild dbp:parent ?child ;
              a dbo:Monarch .
}
```",3,5,4,3,1,3,3,71,0,0,5,0,0.0,0
54,20,val,Give me the child of Thinkhaya of Pagan and parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . ?v2 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfThinkhaya ?parentOfChildOfNarapatiI
WHERE {
  # Find Thinkhaya of Pagan's child
  ?thinkhaya dbo:spouse ?spouse .
  ?thinkhaya dbp:name ""Thinkhaya of Pagan""@en .
  
  OPTIONAL { ?thinkhaya dbo:child ?childOfThinkhaya . }
  
  # Find Narapati I of Ava's child and then the parent of that child
  ?narapatiI dbp:name ""Narapati I of Ava""@en .
  ?narapatiI dbo:child ?childOfNarapatiI .
  OPTIONAL { ?childOfNarapatiI dbo:parent ?parentOfChildOfNarapatiI . }
  
  # Match the child of Thinkhaya with the parent of Narapati I's child
  FILTER (?childOfThinkhaya = ?parentOfChildOfNarapatiI)
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
281,22,val,"Give me the war of the profession, that is a military unit, of Heather Roy and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?militaryUnit WHERE {
  VALUES ?person { 
    dbr:Heather_Roy 
    dbr:Beauchamp_Seymour_1st_Baron_Alcester
  }
  
  OPTIONAL {
    ?person dbo:militaryService ?service.
    ?service dbo:unit ?militaryUnit.
  }

  FILTER(?militaryUnit != """")
}
```

This query does the following:
- It uses `VALUES` to specify the two individuals of interest: Heather Roy and Beauchamp Seymour, 1st Baron Alcester.
- It looks for any military service (`dbo:militaryService`) associated with these individuals.
- If such a service exists, it attempts to find the military unit (`dbo:unit`) related to that service.
- The `FILTER` ensures that only non-empty results are returned.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,40,val,"Give me the commander in the force of the native, that is an office holder, of Kingdom of Ireland and commander in Battle of Leipzig and military force of Napoleonic Wars.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:birthPlace dbr:Ireland .
  ?person dbo:officeHolderOf dbr:Kingdom_of_Ireland .
  ?person dbo:militaryCommanderOf dbr:Battle_of_Leipzig .
  ?person dbo:militaryForce dbr:Napoleonic_Wars .
  ?person rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",5,6,6,3,3,3,3,71,0,0,5,0,0.0,0
184,40,val,"Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria and parent of the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find parent of Archduchess Ilona of Austria
  ?ilona a dbo:Person ;
         foaf:name ""Ilona, Archduchess of Austria""@en .
  ?parent dbo:child ?ilona .

  # Ensure the person is also a child of Archduke Joseph August of Austria
  ?josephAugust a dbo:Person ;
                foaf:name ""Joseph August, Archduke of Austria""@en .
  ?parent dbo:child ?josephAugust .

  # Find landmark with elevation 96.0 that is a settlement
  ?landmark a dbo:Place ;
            dbo:elevation ""96.0""^^xsd:float ;
            rdf:type dbo:Settlement .
  
  # Identify native of the landmark
  ?native dbo:nativePlace ?landmark .

  # Ensure the person is the parent of this native
  ?parent dbo:child ?native .

  # Bind the person to the variable
  BIND(?parent AS ?person)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
378,26,val,"Give me the war of the commander in the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?commander WHERE {
  # Find the commander of the Peninsular War
  dbr:Peninsular_War dbo:commander ?peninsularCommander .
  
  # Find other wars commanded by the same person
  ?war a dbo:MilitaryConflict ;
      dbo:commander ?peninsularCommander .
}
```

This query does the following:
- It identifies the commander of the Peninsular War.
- It then finds other military conflicts (wars) that were also commanded by this individual.",3,4,4,3,1,3,3,71,0,0,118,0,0.0,0
767,35,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://dbpedia.org/ontology/state> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?entity dbo:administrativeUnit dbr:Green .
  ?entity a dbo:Settlement .
  ?entity rdfs:label ?settlementLabel .
  
  OPTIONAL { 
    ?alterEgo dbo:alias ""Black Hood"" ;
              rdfs:label ?alterEgoLabel .
    FILTER(CONTAINS(LCASE(?alterEgoLabel), LCASE(""black hood"")))
  }
  
  FILTER EXISTS {
    ?entity dbo:administrativeUnit ?alterEgo .
  }
}
```

This query attempts to find settlements that are administratively linked to ""Green"" and have a connection to an entity known as the alter ego of ""Black Hood.""",4,5,5,2,2,3,3,71,0,0,7,0,0.0,0
747,38,val,Give me the band of the writer of Apollo (Hardwell song) and band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writerBand ?traceyThornBand WHERE {
  # Find the writer of ""Apollo"" by Hardwell and their band
  OPTIONAL {
    ?song dbo:lyricsBy ?writer .
    ?writer foaf:name ""Thomas Newson""@en .
    ?writer dbo:band ?writerBand .
  }
  
  # Find Tracey Thorn's band
  OPTIONAL {
    dbr:Tracey_Thorn dbo:band ?traceyThornBand .
  }

  # Filter for the song ""Apollo"" by Hardwell
  ?song foaf:name ""Apollo""@en ;
        dbo:artist dbr:Hardwell .
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
360,19,val,"Give me the writer of the work, that is an album, of Dave Flett and reference to Manfred Mann and native of Johannesburg.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v2 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v2 <http://dbpedia.org/property/writer> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?album ?writer WHERE {
  ?album a dbo:Album ;
         dbo:artist dbr:Manfred_Mann ;
         dbo:composer ?writer .
  
  ?writer dbo:nationality dbr:South_Africa ;
          dbo:birthPlace dbr:Johannesburg .

  FILTER(CONTAINS(LCASE(?writer), ""dave flett""))
}
```

This query does the following:
- Selects albums (`?album`) and their composers/writers (`?writer`).
- Filters albums where Manfred Mann is an artist.
- Ensures the writer is from South Africa, specifically born in Johannesburg.
- Checks if the writer's name contains ""Dave Flett"" (case-insensitive).",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
994,42,val,"Give me the associated musical artist of Red Tide (band) and band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of the associated musical artist of Watchtower (band).","SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?redTideArtist ?dokkenBandMember ?watchtowerArtist ?finalArtist 
WHERE {
  # Find the associated musical artist of Red Tide (band)
  dbr:Red_Tide_(band) dbo:associatedMusicalArtist ?redTideArtist .

  # Identify band members of Donald Maynard Dokken who are also musical artists
  dbr:Don_Dokken dbo:member ?dokkenBandMember .
  FILTER EXISTS { ?dokkenBandMember a dbo:Musician . }

  # Determine the associated musical artist of Watchtower (band)
  dbr:Watchtower_(band) dbo:associatedMusicalArtist ?watchtowerArtist .

  # Find the associated musical artist of the associated musical artist of Watchtower
  ?watchtowerArtist dbo:associatedMusicalArtist ?finalArtist .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
251,13,val,"Give me the administration of Forza Italia (2013) and location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/place> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?conflictLocation
WHERE {
  # Forza Italia administration in 2013
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           rdfs:label ""Forza Italia""@en .
    ?office dbo:positionTitle ""Prime Minister"" ;
            dbo:incumbent ?person ;
            dbo:startDate ?start ;
            dbo:endDate ?end .
    FILTER (?start <= ""2013-12-31T23:59:59Z""^^xsd:dateTime && 
            (?end >= ""2013-01-01T00:00:00Z""^^xsd:dateTime || NOT EXISTS { ?office dbo:endDate ?end }))
    BIND(?person AS ?administration)
  }
  
  # Military conflict involving Louis François Félix Musnier
  OPTIONAL {
    ?musnier a dbo:MilitaryPerson ;
             rdfs:label ""Louis François Félix Musnier""@en .
    ?conflict dbo:participant ?musnier ;
              dbo:location ?location .
    BIND(?location AS ?conflictLocation)
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
492,35,val,"Give me the person decedent at the capital, that is a settlement, of Algeria and person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent ?deathPlace ?relationToSatterthwaite
WHERE {
  # Find a person who died in Algiers, the capital of Algeria
  ?decedent dbo:placeOfBirth ?birthPlace .
  ?decedent dbo:deathPlace dbr:Algiers .

  OPTIONAL {
    # Check if there is any relation to Joseph C. Satterthwaite
    ?relation dbo:agent dbr:Joseph_C._Satterthwaite ;
              dbo:object ?decedent .
    BIND(""Related to Joseph C. Satterthwaite"" AS ?relationToSatterthwaite)
  }

  OPTIONAL {
    # If no direct relation, check for any other connection
    ?relation dbo:agent dbr:Joseph_C._Satterthwaite ;
              dbo:predicate ?predicate .
    ?decedent ?predicate ?object .
    BIND(""Indirectly related to Joseph C. Satterthwaite"" AS ?relationToSatterthwaite)
  }
}
ORDER BY ?decedent
LIMIT 10",4,5,5,2,2,3,3,71,0,0,16,0,0.0,0
161,25,val,"Give me the military force of Spanish Civil War and commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Emilio Mola as a person involved in the Spanish Civil War
  dbr:Emilio_Mola dbo:nationality dbr:Spain ;
                  dbo:occupation dbr:Military_person .

  # The military force associated with Emilio Mola during the Spanish Civil War
  ?militaryForce dbo:commander dbr:Emilio_Mola ;
                 dbo:partOf dbr:Spanish_Civil_War .

  # Retrieve the commander of that military force (which is Emilio Mola himself)
  OPTIONAL { ?militaryForce dbo:commander ?commander . }
}
```",3,4,4,2,2,3,3,71,0,0,32,0,0.0,0
801,28,val,Give me the producer of Westside Story (song) and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v1 . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?producer ?artist ?shadowProfessional
WHERE {
  # Producer of ""Westside Story"" (song)
  OPTIONAL {
    dbr:Westside_Story_(song) dbo:composer ?producer .
  }

  # Associated musical artist of Chris Taylor (music producer)
  OPTIONAL {
    dbr:Chris_Taylor_(record_producer) dbo:associatedMusicalArtist ?artist .
  }

  # Professional in the alter ego of The Shadow
  OPTIONAL {
    ?shadowProfessional rdfs:label ""The Shadow""@en ;
                       dbo:profession ?profession .
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
981,11,val,Give me the entity in the region of Time in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v2 . ?v2 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInTimeRegion ?birthPlaceOfNoviaIndrianiMamuaja
WHERE {
  # Find entities in the region of ""Time"" in Indonesia
  ?entityInTimeRegion dbo:region dbr:Time_(regency) .
  
  # Find Novia Indriani Mamuaja and her birthplace
  dbr:Novia_Indriani_Mamuaja dbo:birthPlace ?birthPlaceOfNoviaIndrianiMamuaja .
}
```

This query does the following:
- It selects entities that are in the region of ""Time"" (a regency in Indonesia) using the `dbo:region` property.
- It retrieves the birthplace of Novia Indriani Mamuaja by linking her DBpedia resource to her birthplace.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
232,19,val,Give me the child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify John Pertwee by his birth name and role in ""Dog Soldiers""
  dbr:John_Pertwee a dbo:Person ;
    foaf:name ""John Devon Roland Pertwee"" ;
    dbo:spouse ?spouse .

  # Confirm he acted in ""Dog Soldiers""
  OPTIONAL { 
    dbr:John_Pertwee dbo:filmRole ?role .
    FILTER(CONTAINS(LCASE(?role), ""dog soldiers""))
  }

  # Retrieve his children
  ?spouse dbo:child ?child .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
617,13,val,"Give me the child of the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?royaltyChild WHERE {
  # Step 1: Find Mlada (abbess)
  ?mlada a dbo:ApostolicAbbess ;
         foaf:name ""Mlada""@en .
  
  # Step 2: Find her parent
  ?parent dbo:child ?mlada .

  # Step 3: Find the children of that parent
  ?parentChild dbo:child ?parent .

  # Step 4: Filter for a child who is royalty
  ?parentChild a dbo:Monarch ;
               dbp:title ?title .
  
  # Return the result
  BIND(?parentChild AS ?royaltyChild)
}
```",3,4,4,3,1,3,2,20,0,0,4,0,0.0,0
801,33,val,"Give me the professional in  and producer of the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/producer> ?result . ?v3 <http://dbpedia.org/property/writer> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/occupation> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rapper ?song ?producer
WHERE {
  ?rapper a dbo:MusicalArtist ;
          rdfs:label ?rapperLabel .
  
  FILTER regex(?rapperLabel, ""Rapper"", ""i"") .

  ?song a dbo:Song ;
        dbo:artist ?rapper ;
        dbo:producer ?producer .

  ?producer a dbo:Person ;
            rdfs:label ?producerLabel .
}
ORDER BY ?rapper
LIMIT 10",4,8,5,3,2,3,3,71,4,15,469,0.21052631578947367,0.008456659619450317,0.016260162601626015
959,38,val,"Give me the native of the residence, that is a country, of Yōichi Masuzoe and manager of the team of Takashi Sekizuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v3 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativeCountry WHERE {
  # Step 1: Find Yōichi Masuzoe's residence
  dbr:Yōichi_Masuzoe dbo:residence ?residence .

  # Step 2: Check if the residence is a country
  ?residence rdf:type dbo:Country .
  
  # Step 3: Find Takashi Sekizuka's team manager
  ?teamManager dbo:managerOf dbr:Takashi_Sekizuka .

  # Step 4: Ensure the manager is the same as Yōichi Masuzoe's residence
  FILTER (?residence = ?teamManager)

  # Step 5: Get the native country of the residence (which is a country)
  ?residence dbo:nativeCountry ?nativeCountry .
}
```",4,5,5,2,2,3,3,71,0,0,6,0,0.0,0
959,34,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?almaMater WHERE {
  # Find the manager of Júbilo Iwata in 2013
  ?team dbo:coach ?manager .
  ?manager dbo:birthYear ""1958""^^xsd:gyear ;
           dbo:nationality dbr:Japan .

  # Ensure the team is Júbilo Iwata and the season is 2013
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER(CONTAINS(LCASE(?teamLabel), ""jubilo iwata""))
  
  # Find the alma mater of the manager
  ?manager dbo:almaMater ?almaMater .

  # Ensure the alma mater is a university and an educational institution
  ?almaMater rdf:type dbo:University ;
             rdf:type dbo:EducationalOrganization .
}
```",4,8,5,3,2,3,3,71,0,0,1,0,0.0,0
378,31,val,Give me the war of Joaquín Blake and war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warJoquinBlake ?warBerzelius WHERE {
  # Joaquín Blake's war involvement
  OPTIONAL {
    dbr:Joaqu%C3%ADn_Blake dbo:militaryConflict ?warJoquinBlake .
  }
  
  # Jöns Jacob Berzelius (Carl Pontus Gahn) - checking for any historical context or associations
  OPTIONAL {
    dbr:J%C3%B6ns_Jacob_Berzelius dbo:militaryConflict ?warBerzelius .
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
959,44,val,"Give me the manager of the team of Takashi Sekizuka and native of the residence, that is a country, of Yōichi Masuzoe and member of University of Tsukuba.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> ?v4 . <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v4 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Takashi Sekizuka's team
  ?team dbo:player dbr:Takashi_Sekizuka .
  
  # Yōichi Masuzoe's country of residence
  ?country dbo:native dbr:Yōichi_Masuzoe .
  
  # University of Tsukuba member who is the manager of Takashi Sekizuka's team and native of Yōichi Masuzoe's country
  ?manager dbo:team ?team ;
           dbo:nationality ?country ;
           dbo:almaMater dbr:University_of_Tsukuba .
}
```",5,6,6,2,3,3,3,71,0,0,2,0,0.0,0
182,12,val,Give me the war of Mahesh Senanayake and entity in Sri Lanka and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Mahesh Senanayake
  OPTIONAL {
    ?person1 a dbo:Person ;
             foaf:name ""Mahesh Senanayake""@en .
    ?event1 dbo:agent ?person1 ;
            a dbo:MilitaryConflict ;
            rdfs:label ?war .
    ?event1 dbo:description ?description .
  }
  
  # Jagath Dias
  OPTIONAL {
    ?person2 a dbo:Person ;
             foaf:name ""Jagath Dias""@en .
    ?event2 dbo:agent ?person2 ;
            a dbo:MilitaryConflict ;
            rdfs:label ?war .
    ?event2 dbo:description ?description .
  }
  
  FILTER (lang(?war) = 'en' && lang(?description) = 'en')
}
ORDER BY ?war
LIMIT 10",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
488,27,val,"Give me the administration of the father of the spouse, that is a royalty, of Tokugawa Masako.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?administration WHERE {
  # Step 1: Identify Tokugawa Masako
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en .

  # Step 2: Find her spouse
  ?masako dbp:spouse ?spouse .

  # Step 3: Check if the spouse is royalty
  ?spouse dbo:nationality ?nationality .
  FILTER EXISTS { ?spouse a dbo:Monarch } .

  # Step 4: Identify the father of this royal spouse
  ?spouse dbp:father ?royalFather .

  # Step 5: Retrieve the administration associated with this father
  ?administration dbo:monarch ?royalFather .
}
```",3,4,4,3,1,3,3,71,0,0,2,0,0.0,0
232,20,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of Jon Pertwee.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  ?actor foaf:name ""Sean Pertwee""@en .
  
  OPTIONAL { 
    ?film dbo:starring ?actor .
    ?film rdf:type dbo:Film .
  }
  
  OPTIONAL { 
    ?conflict dbo:participant ?actor .
    ?conflict rdf:type dbo:MilitaryConflict .
  }

  FILTER EXISTS {
    ?film rdf:type dbo:Film .
  }
  
  FILTER EXISTS {
    ?conflict rdf:type dbo:MilitaryConflict .
  }
}
```",3,5,4,2,2,3,3,71,0,0,1,0,0.0,0
328,26,val,Give me the commander in the force of the person decedent at Budapest.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . ?v2 <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?person dbo:deathPlace dbr:Budapest .
  
  OPTIONAL { 
    ?militaryRole dbo:agent ?person .
    ?force dbo:commander ?commander .
    ?militaryRole dbo:militaryUnit ?force .
  }
}
```",3,3,4,3,1,3,3,71,0,0,306,0,0.0,0
16,25,val,Give me the professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Gigi Rice"" .
  OPTIONAL { ?person dbo:occupation dbr:Actress . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
232,32,val,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee and child of the person born as John Devon Roland Pertwee.","SELECT ?result WHERE { ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor WHERE {
  # Sean Pertwee's claim to fame that is both a film and a military conflict
  dbr:Sean_Pertwee dbo:claimToFame ?fame .
  
  # Ensure the fame is both a film and a military conflict
  ?fame rdf:type dbo:Film ;
        rdf:type dbo:MilitaryConflict .

  # Find the actor associated with this claim to fame
  ?fame dbo:actor ?actor .

  # Ensure Sean Pertwee is the child of John Devon Roland Pertwee
  dbr:Sean_Pertwee foaf:parent dbr:John_Devon_Roland_Pertwee .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
767,42,val,"Give me the entity in the administration, that is a settlement, of Green and reference to the alter ego of Black Hood and alma mater of Carl L. Nippert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v2 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?v2 <http://dbpedia.org/property/leaderParty> ""Green""@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  # Find a settlement related to ""Green"" in administration
  ?green dbo:administrativeTerritory ?settlement .
  FILTER regex(?green, ""Green"", ""i"") .

  # Connect the alter ego of Black Hood (Dick Grayson)
  dbr:Dick_Grayson dbo:almaMater ?osu .
  
  # Connect Carl L. Nippert's alma mater
  dbr:C_L_Nippert dbo:almaMater ?osu .

  # Ensure Ohio State University is the common link
  ?osu rdfs:label ""Ohio State University""@en .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,22,val,Give me the band of the person born as Tracey Elizabeth McSween and person born on 1985-04-29.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Tracey Elizabeth McSween""@en ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1985 && MONTH(?birthDate) = 4 && DAY(?birthDate) = 29)
  
  OPTIONAL { ?person dbp:band ?band . }
}
```

This query does the following:
- Searches for a person with the name ""Tracey Elizabeth McSween"" and a birth date of April 29, 1985.
- Uses optional binding to find any band associated with this person.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
404,29,val,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v3 . ?result <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?parent WHERE {
  # Define Ernest Augustus, Duke of Brunswick and Princess Victoria Louise of Prussia
  VALUES (?father) { dbr:Ernest_Augustus,_Duke_of_Brunswick }
  VALUES (?mother) { dbr:Princess_Victoria_Louise_of_Prussia }

  # Find their children who are royalty
  ?child dbo:parent ?father .
  ?child dbo:parent ?mother .
  ?child a dbo:Monarch .

  # Get the parent information for each child
  OPTIONAL {
    ?child dbo:parent ?parent .
  }
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
659,26,val,"Give me the commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v2 <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Find the entity 'Polish Horse'
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .

  # Find wars related to 'Polish Horse'
  ?polishHorse dbo:participatedIn ?war .
  
  # Ensure that the war is an event and a military conflict
  ?war a dbo:MilitaryConflict ;
      a dbo:Event .

  # Find commanders involved in these wars
  ?war dbo:commander ?commander .
}
```",3,7,4,3,1,3,3,71,0,0,130,0,0.0,0
747,31,val,"Give me the person born on the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha and band of Amba Shepherd.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find an athlete who is a soccer player and get their birth date
  ?athlete a dbo:Athlete ;
           dbo:sport dbr:Soccer ;
           dbp:birthday ?birthDate .

  # Find another person born on the same date in Zolotonosha
  ?person dbp:birthPlace dbr:Zolotonosha ;
          dbp:birthday ?birthDate .

  # Check if this person is associated with Amba Shepherd as a band
  OPTIONAL {
    ?bandMembership dbo:member ?person .
    ?bandMembership dbo:band dbr:Amba_Shepherd .
  }
  
  FILTER EXISTS { ?bandMembership dbo:band dbr:Amba_Shepherd }
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
701,39,val,"Give me the parent of Henuttawy (19th dynasty) and spouse of the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Find Henuttawy's parent
  ?henuttawy dbo:birthName ""Henuttawy"" .
  ?henuttawy dbo:fatherOrMother ?parent .

  # Identify the commander in the Battle of Perire and his father
  ?battle dbp:commander ?commander .
  FILTER (str(?battle) = ""Battle_of_Perire"") .
  ?commander dbo:fatherOrMother ?fatherOfCommander .

  # Find the spouse of the father of the commander
  ?fatherOfCommander dbo:spouse ?spouse .
  
  # Ensure the parent and spouse are royalty
  ?parent a dbo:Monarch .
  ?spouse a dbo:Monarch .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
696,15,val,"Give me the landmark at elevation of 50 and birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?landmark WHERE {
  # Identify The Boils as an organization, group, and band
  dbr:The_Boils a dbo:Band ;
                 dbo:bandMember ?member .

  # Find the birthplace of that member
  ?member dbp:birthPlace ?birthPlace .

  # Locate landmarks in that birthplace with elevation of 50 meters
  ?landmark a dbo:Lighthouse ; 
            dbo:elevationAboveSeaLevel ""50""^^xsd:float ;
            dbo:locationCity ?birthPlace .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
404,42,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of the father of Ernest Augustus, Duke of Brunswick and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
            rdfs:label ""Princess Victoria Louise of Prussia""@en ;
            dbo:birthPlace ?birthPlace .

  # Find her father, who is also the father of Ernest Augustus, Duke of Brunswick
  ?father a dbo:Person ;
          dbo:child ?princess ;
          dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .

  # Determine her spouse
  ?princess dbo:spouse ?spouse .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
345,13,val,"Give me the figure known as the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://dbpedia.org/property/nickname> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find Armando Heeb
  dbr:Armando_Heeb dbo:nationality ?nationality .
  
  # Find clubs associated with him
  OPTIONAL { dbr:Armando_Heeb dbo:team ?club . }
  
  # Ensure the club is a sports club and soccer club
  ?club rdf:type dbo:SportsClub ;
        dbo:sport dbr:Soccer .

  # Retrieve nickname of the player
  OPTIONAL { dbr:Armando_Heeb dbo:nickname ?nickname . }

  FILTER(?nickname != """")
}
```",3,6,4,3,1,3,2,20,0,0,1,0,0.0,0
492,29,val,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr and person decedent at Algiers and person decedent at French Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v3 . ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commander WHERE {
  # Find Frédéric-Georges Herr
  VALUES ?herr { dbr:Frédéric-Georges_Herr }
  
  # Find wars he was involved in
  ?war dbo:participant ?herr .
  
  # Ensure the war is a military conflict and an event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event .

  # Find the commander of the war
  ?war dbo:commander ?commander .

  # Ensure Frédéric-Georges Herr died in Algiers, French Algeria
  ?herr dbo:placeOfBirth dbr:Algiers ;
        dbo:deathPlace dbr:Algiers .
}
```",4,6,5,2,3,3,3,71,0,0,1,0,0.0,0
184,29,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?grandchild dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  ?child dbo:parent ?grandchild .

  ?person dbo:parent dbr:G%C3%A9za_von_Habsburg .
  ?person dbo:parent dbr:Archduchess_Ilona_of_Austria .

  FILTER (?child = ?person)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
9,21,val,"Give me the figure known as QUB and alma mater of the mayor, that is a politician, of Northern Ireland Forum.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/nickname> ""QUB""@en . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?university WHERE {
  # Find Queen's University Belfast
  VALUES ?qub { dbr:Queen's_University_Belfast }
  
  # Identify politicians who were mayors in the Northern Ireland Forum
  ?person dbo:almaMater ?university .
  ?person dbo:occupation dbr:Politician .
  ?person dbo:officeHolderOf dbr:Northern_Ireland_Forum_Mayorship .

  FILTER (?university = ?qub)
}
```

This query does the following:
- It identifies Queen's University Belfast using its DBpedia resource.
- It looks for individuals who are politicians and have held a mayoral position in the Northern Ireland Forum.
- It checks if these individuals attended Queen's University Belfast as their alma mater.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
778,11,val,Give me the author of Chroot and entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?awardEntity
WHERE {
  # Find the author of ""Chroot""
  OPTIONAL {
    dbr:Chroot dbo:author ?author .
  }
  
  # Find the award entity associated with Ralph L. Brinster
  OPTIONAL {
    dbr:Ralph_L._Brinster dbo:receivedAward ?award .
    ?award dbo:entity ?awardEntity .
  }
}
```",3,3,4,2,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
16,40,val,Give me the professional in Actress and spouse of the person born as the birth name of Ted McGinley and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?spouse ?profession WHERE {
  # Ted McGinley
  ?ted a dbo:Person ;
      foaf:name ""Ted McGinley""@en ;
      dbo:birthName ""Ted McGinley"" .
  
  # Georgeanne Marie Rice
  ?georgeanne a dbo:Person ;
              foaf:name ""Georgeanne Marie Rice""@en .

  # Find spouses of Ted McGinley and Georgeanne Marie Rice
  {
    ?ted dbo:spouse ?spouse .
  } UNION {
    ?georgeanne dbo:spouse ?spouse .
  }

  # Check if the spouse is an actress
  OPTIONAL { ?spouse dbo:occupation ?occupation . }
  FILTER (CONTAINS(LCASE(?occupation), ""actress""))

  # Get the profession of the spouse
  OPTIONAL { ?spouse dbp:profession ?profession . }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
994,22,val,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken and associated musical artist of S.A. Slayer.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associationWithSlayer
WHERE {
  # Find Donald Dokken
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken"" .

  # Get band members of Dokken
  ?dokken dbo:member ?bandMember .

  OPTIONAL {
    # Check if there's any association with Slayer
    ?association dbr:Slayer dbo:associatedBandMember ?bandMember .
    BIND(""Associated with Slayer"" AS ?associationWithSlayer)
  }

  FILTER NOT EXISTS { ?associationWithSlayer = ""None"" }
}
```

This query does the following:
- Identifies Donald Dokken as a musical artist.
- Retrieves band members associated with him.
- Checks for any association between these band members and Slayer.",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
659,39,val,"Give me the commander in Battle of Leipzig and military force of the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Identify the Battle of Leipzig as an event and military conflict
  dbr:Battle_of_Leipzig a dbo:MilitaryConflict ;
                        dbo:participatedInMilitaryEngagement ?battleEvent .
  
  # Ensure it is also considered a societal event
  ?battleEvent a dbo:SocietalEvent .

  # Find the commander of this battle
  ?battleEvent dbo:commander ?commander .

  # Get the military force associated with the commander
  ?commander dbo:militaryForce ?militaryForce .

  # Ensure there is a reference to Rutger Jan Schimmelpenninck
  ?battleEvent dbo:reference dbr:Rutger_Jan_Schimmelpenninck .
}
```",4,7,5,3,2,3,3,71,0,0,6,0,0.0,0
959,36,val,"Give me the member of University of Tsukuba and manager of the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v3 . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. ?v0 <http://dbpedia.org/ontology/manager> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  # Find the manager of the 1998 Kashima Antlers team
  ?team dbo:coach ?manager .
  
  # Ensure the team is related to the 1998 Kashima Antlers season
  ?team rdfs:label ""Kashima Antlers""@en .
  FILTER(CONTAINS(STR(?team), ""1998""))

  # Check if the manager has a sports occupation
  ?manager dbo:occupation dbr:Sports_manager .

  # Find connection to University of Tsukuba
  ?manager dbo:almaMater dbr:University_of_Tsukuba .
}
```

This query does the following:
- It selects individuals who were managers (`?manager`) of a team (`?team`).
- The team is identified as ""Kashima Antlers"" with a filter to ensure it's related to the 1998 season.
- The manager must have an occupation of ""Sports manager.""
- Finally, the manager should be an alumnus of the University of Tsukuba.",4,5,5,3,2,3,3,71,0,0,2,0,0.0,0
92,34,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film) and band of Joseph Michael.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?v2 . ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the band associated with Joseph Michael
  ?band dbo:member ?person .
  ?person foaf:name ""Joseph Michael"" .

  # Ensure the person is an artist in the band
  ?person dbo:occupation dbr:Musician .

  # Find the film ""Nevermore"" (2006)
  ?film dbr:Nevermore_(2006_film) .

  # Check if the band member is also associated with the film
  ?bandMember dbo:member ?band .
  ?bandMember dbo:occupation dbr:Musician .
  ?film dbo:starring ?bandMember .
  
  FILTER(?person != ?bandMember)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
701,30,val,Give me the parent of Meritamen and spouse of the father of Merneptah and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v1 . <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?meritamenParent ?fatherOfMerneptahSpouse WHERE {
  # Meritamen's parent
  ?meritamen dbo:child dbr:Mertseger .
  ?meritamen rdfs:label ""Meritamen""@en .

  # Parent of Meritamen (could be a mother or father)
  ?meritamenParent dbo:parent ?meritamen .

  # Father of Merneptah
  ?merneptah dbo:child dbr:Merenptah .
  ?merneptah rdfs:label ""Merneptah""@en .
  
  ?fatherOfMerneptah dbo:child ?merneptah .
  
  # Spouse of the father of Merneptah
  ?fatherOfMerneptahSpouse dbo:spouse ?fatherOfMerneptah .

  # Parent of Henuttawy (19th dynasty)
  OPTIONAL {
    ?henuttawy dbo:child dbr:Henttawy .
    ?henuttawy rdfs:label ""Henuttawy""@en .
    
    ?parentOfHenuttawy dbo:parent ?henuttawy .
    
    FILTER(?meritamenParent = ?parentOfHenuttawy)
  }
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
488,37,val,"Give me the administration of Emperor Go-Yōzei and death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPeriod ?deathPlace
WHERE {
  # Matsudaira Tadamasa and his father
  dbr:Matsudaira_Tadamasa dbo:father ?father .

  # Father of Matsudaira Tadamasa and his father (grandfather)
  ?father dbo:father ?grandfather .

  # Check if grandfather was a politician and office holder
  OPTIONAL { ?grandfather dbo:occupation dbr:Politician . }
  OPTIONAL { ?grandfather dbo:officeHolder true . }

  # Death place of the grandfather
  ?grandfather dbo:deathPlace ?deathPlace .

  # Administration period of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:administrationPeriod ?administrationPeriod .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
92,32,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v3 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find Jim Sheppard's birthdate and associated artists
  dbr:Jim_Sheppard dbo:birthDate ?birthdate .
  
  OPTIONAL {
    ?artist dbo:birthDate ?birthdate ;
            dbp:associatedBand dbr:Nevermore .
    BIND(?artist AS ?bandMember)
  }
  
  # Find associated artists of Jim Sheppard
  ?sheppardArtist dbo:birthDate ?birthdate ;
                  dbp:associatedBand ?associatedBand .
  FILTER(?associatedBand != dbr:Nevermore) 
  BIND(?sheppardArtist AS ?associatedArtist)
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
528,39,val,Give me the war of Orozimbo Barbosa and force of the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/ontology/commander> ?v1 . <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?force 
WHERE {
  # Find wars involving Orozimbo Barbosa
  ?barbosa dbo:wikiPageID ""Orozimbo_Barbosa"" .
  ?barbosa dbo:participatedIn ?war .

  # Find military forces associated with Narciso Campero
  ?campero dbo:birthName ""Narciso_Antonio_de_la_Camara_y_Mendoza"" ;
           dbo:wikiPageID ""Narciso_Campero"" .
  ?campero dbo:commanded ?force .
}
```

This query attempts to find:

- Wars (`?war`) that Orozimbo Barbosa participated in.
- Military forces (`?force`) commanded by Narciso Campero, using his birth name.",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
534,15,val,"Give me the headquarter of Royal Dublin Society and birth place of the child, that is a politician and an office holder, of the native, that is a politician, of Essex.",SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?birthPlace WHERE {
  # Step 1: Find a politician native to Essex
  ?essexPolitician dbo:nationality dbr:Essex ;
                  rdf:type dbo:Politician .

  # Step 2: Find their child who is also a politician and an office holder
  ?child dbo:parent ?essexPolitician ;
         rdf:type dbo:Politician ;
         dbo:officeHolder true .

  # Step 3: Get the birthplace of this child
  ?child dbo:birthPlace ?birthPlace .

  # Step 4: Find the headquarters of the Royal Dublin Society
  dbr:Royal_Dublin_Society dbo:headquarters ?headquarters .
}
```",4,7,5,3,2,3,2,20,0,0,1,0,0.0,0
701,34,val,Give me the parent of the child of the spouse of Amun-her-khepeshef and spouse of Ramesses II.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v2 . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . ?v2 <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Step 1: Find the spouse of Amun-her-khepeshef who is also a spouse of Ramesses II
  ?spouse dbo:spouseOf <http://dbpedia.org/resource/Ramesses_II> .
  ?spouse dbo:spouseOf <http://dbpedia.org/resource/Amun-her-khepeshef> .

  # Step 2: Find the children of this spouse
  ?child dbo:parent ?spouse .

  # Step 3: Find the parents of these children (which includes the original spouse)
  ?child dbo:parent ?parent .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
747,29,val,Give me the band of the writer of Apollo (Hardwell song) and person born on 1985-04-29 and band of Shèna.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writerBand ?shenaBand WHERE {
  # Find the writer of ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo""@en .

  # Filter for songs by Hardwell
  ?song dbo:artist dbr:Hardwell .

  # Check if the writer was born on April 29, 1985
  OPTIONAL {
    ?writer dbp:birthday ?birthday .
    FILTER (YEAR(?birthday) = 1985 && MONTH(?birthday) = 4 && DAY(?birthday) = 29)
  }

  # Get the band of the writer if they were born on that date
  OPTIONAL {
    ?writer dbo:band ?writerBand .
  }

  # Find Shèna and her associated band
  dbr:Shèna dbo:band ?shenaBand .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
179,14,val,Give me the parent of the child of the parent of Vajiralongkorn.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?grandparentParent
WHERE {
  # Step 1: Identify Vajiralongkorn
  ?vajiralongkorn rdfs:label ""Vajiralongkorn""@en .
  
  # Step 2: Find his parent (father)
  ?vajiralongkorn dbo:spouse ?parent .

  # Step 3: Find a child of this parent
  ?parent dbo:child ?sibling .

  # Step 4: Find the parent of this sibling
  ?sibling dbo:parent ?grandparentParent .
}
```

This query assumes that `dbo:spouse` and `dbo:child` are used to denote familial relationships, which is common in DBpedia. Adjustments might be needed based on actual data availability.",3,3,4,3,1,3,2,20,0,0,3,0,0.0,0
9,32,val,"Give me the alma mater of the awardee of Royal Medal and alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/ontology/almaMater> ?result . ?v3 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Find the alma mater of the Royal Medal awardee
  {
    SELECT ?person WHERE {
      ?award dbo:recipient ?person .
      ?award rdfs:label ""Royal Medal""@en .
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    
    OPTIONAL {
      ?person dbo:almaMater ?almaMater .
    }
  }

  UNION

  # Find the alma mater of the mayor who is a politician from Northern Ireland Forum
  {
    SELECT ?mayor WHERE {
      ?mayor dbo:position dbr:Northern_Ireland_Forum_Mayor .
      ?mayor dbo:occupation dbr:Politician .
      
      SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
    }

    OPTIONAL {
      ?mayor dbo:almaMater ?almaMater .
    }
  }
}",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
747,44,val,Give me the band of the person born as Tracey Elizabeth McSween and band of the writer of Apollo (Hardwell song) and person born on 1985-04-29.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v4 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  # Tracey Elizabeth McSween (Tracy Morgan)
  { 
    VALUES ?person { dbr:Tracy_Morgan }
    OPTIONAL { ?person dbo:musicalBand ?band . }
  }

  UNION

  # Writer of Apollo by Hardwell
  { 
    ?song dbo:lyricsBy ?writer .
    ?song dbp:title ""Apollo"" .
    ?song dbo:artist dbr:Hardwell .
    VALUES ?writer { ?person }
    OPTIONAL { ?person dbo:musicalBand ?band . }
  }

  UNION

  # Person born on April 29, 1985
  {
    ?person dbo:birthday ""1985-04-29""^^xsd:date .
    OPTIONAL { ?person dbo:musicalBand ?band . }
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
528,33,val,Give me the war of Irene Morales and war of the commander in the work of --01-09.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v3 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . ?v0 <http://dbpedia.org/ontology/commander> ?v3 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?description WHERE {
  # Assuming ""Irene Morales"" and ""war of the commander"" are related to specific works or events
  OPTIONAL { 
    ?work dbo:wikiPageDisambiguates dbr:Irene_Morales .
    ?work dbo:description ?description .
  }
  
  OPTIONAL {
    ?work dbo:wikiPageDisambiguates dbr:War_of_the_Commander .
    ?work dbo:description ?description .
  }

  # If --01-09 is a date or identifier, you might need to refine this part
  FILTER (CONTAINS(LCASE(?description), ""01-09""))
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
915,13,val,"Give me the resident of the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?resident WHERE {
  # Step 1: Identify the director of ""Pipe Dreams"" (1976 film)
  dbr:Pipe_Dreams_(film)_1976 dbo:director ?director .

  # Step 2: Find the birthplace of this director, ensuring it is a settlement
  ?director dbp:birthPlace ?birthPlace .
  ?birthPlace a dbo:Settlement .

  # Step 3: Determine who resides in that birthplace
  ?resident dbo:residence ?birthPlace .
}
```",3,4,4,3,1,3,2,20,0,0,15,0,0.0,0
498,7,val,"Give me the band of Will Rahmer and band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?willRahmerBand ?solaceOfRequiemBand
WHERE {
  # Find the band associated with Will Rahmer
  ?willRahmer a dbo:Person ;
              foaf:name ""Will Rahmer"" ;
              dbo:member ?willRahmerBand .

  # Find Solace of Requiem as both an organization and a band
  ?solaceOfRequiem a dbo:MusicalGroup, dbo:Organization ;
                   foaf:name ""Solace of Requiem"" .
  
  # Ensure the band is associated with Solace of Requiem
  ?solaceOfRequiemBand a dbo:MusicalGroup ;
                       foaf:name ""Solace of Requiem"" .

}
```

This query does the following:
- It looks for a person named Will Rahmer and finds the musical group he is a member of.
- It identifies Solace of Requiem as both an organization and a band.",3,5,4,2,2,2,2,9,0,0,1,0,0.0,0
392,15,val,"Give me the entity in the region, that is a country, of Central European Time and province of Schio.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
  ?province dbo:locatedIn dbr:Schio .
  ?province dbo:partOf ?country .
}
```

This query does the following:
- Selects entities that are of type `dbo:Country`.
- Filters these countries to those in the Central European Time zone.
- Checks if Schio is a province or part of any country.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
534,14,val,"Give me the headquarter of the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v2 . ?v2 <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  # Step 1: Identify the venue of the 2012 Pro12 Grand Final
  dbr:2012_Pro12_Grand_Final dbo:location dbr:RDS_Arena .

  # Step 2: Ensure the location is both a venue and an architectural structure
  dbr:RDS_Arena rdf:type dbo:SportsVenue ;
                rdf:type dbo:ArchitecturalStructure .

  # Step 3: Find out who owns this location
  dbr:RDS_Arena dbo:owner ?owner .

  # Step 4: Retrieve the headquarters of the owner
  ?owner dbo:headquarters ?headquarters .
}
```",3,5,4,3,1,3,2,20,0,0,3,0,0.0,0
488,38,val,"Give me the death place of the father, that is a politician, of Yūki Hideyasu and administration of the father of Emperor Go-Mizunoo.",SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v2 . ?result <http://dbpedia.org/property/leader> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceYūkiUjitomo ?administrationToyotomiHideyori
WHERE {
  # Yūki Hideyasu's father, Yūki Ujitomo
  OPTIONAL {
    dbr:Yūki_Ujitomo dbo:deathPlace ?deathPlaceYūkiUjitomo .
  }

  # Toyotomi Hideyori's administration (Toyotomi clan)
  OPTIONAL {
    dbr:Toyotomi_Hideyori dbo:spouse ?toyotomiSpouse .
    ?toyotomiSpouse dbo:positionHeld ?administrationToyotomiHideyori .
    FILTER(CONTAINS(LCASE(?administrationToyotomiHideyori), ""toyotomi""))
  }
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
55,12,val,Give me the band member of Guns N' Roses and band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  # Find members of Guns N' Roses
  ?person dbo:memberOf dbr:Guns_N%27_Roses .
  
  # Find members of Metallica
  ?person dbo:memberOf dbr:Metallica .

  # Check if the person is also Newsted (to find his band)
  OPTIONAL {
    ?newsted dbo:birthName ""Jason Newsted"" .
    FILTER(?person = ?newsted)
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
10,13,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Matt Colton
  ?mattColton a dbo:Person ;
              foaf:name ""Matt Colton""@en .
  
  # Ensure he is associated with Luke Vibert as a band member
  ?bandMembership dbo:member ?mattColton ;
                  dbo:associatedBand dbr:Luke_Vibert .

  # Retrieve the musical artist information related to this association
  ?bandMembership dbo:musicalArtist ?artist .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
77,14,val,"Give me the force of the mayor of the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?v2 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v2 <http://dbpedia.org/property/leader> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?force WHERE {
  # Find the mayor of Warsaw
  ?mayor a dbo:Mayor ;
         dbo:city dbr:Warsaw .

  # Identify the organization administering Warsaw
  ?organization dbo:head ?mayor ;
                dbo:location dbr:Warsaw .

  # Find the force associated with this organization
  ?force dbo:partOfOrganization ?organization .
}
```",3,4,4,3,1,3,2,20,0,0,40,0,0.0,0
963,12,val,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci and entity in Serbia.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?administration
WHERE {
  # Find Sremski Karlovci in Serbia
  ?location a dbo:Settlement ;
            dbo:country dbr:Serbia ;
            rdfs:label ""Sremski Karlovci""@en .

  # Identify political parties with administrative power in Sremski Karlovci
  ?party a dbo:PoliticalParty ;
         dbo:hasGovernmentRole ?role .
  
  # Find the administration details of these parties
  OPTIONAL { ?party dbp:administration ?administration . }

  # Link the party to the location (Sremski Karlovci)
  ?location dbo:administrativeAuthority ?party .

  FILTER(LANG(?administration) = 'en')
}
ORDER BY ?party
```",3,4,4,2,2,3,2,20,0,0,84,0,0.0,0
528,34,val,"Give me the war of the military force of the entity, that is a societal event, in Chile and force of Narciso Campero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryForce [
        dbo:country dbr:Chile ;
        ^dbo:commander ?commander1 .
      ] ;
      dbo:participatingMilitaryForce [
        dbo:commander ?commander2 .
        FILTER (?commander2 = dbr:Narciso_Campero)
      ] .
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
404,33,val,"Give me the spouse of Princess Victoria Louise of Prussia and parent of the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover.",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Princess ;
           foaf:name ""Victoria Louise, Princess Royal""@en ;
           dbo:spouse ?spouse .

  # Step 2: Find the spouse's child who is royalty
  ?child dbo:parent ?spouse ;
         a dbo:RoyalFamilyMember .

  # Step 3: Identify that child's parent (who must also be royalty)
  ?royalParent dbo:parent ?child ;
               a dbo:RoyalFamilyMember .

  # Step 4: Find Prince George William of Hanover and his royal parent
  ?georgeWilliam a dbo:Prince ;
                 foaf:name ""George William, Hereditary Prince of Brunswick-Lüneburg""@en ;
                 dbo:parent ?royalParent .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
391,40,val,"Give me the native of the figure known as the nick name of Jackson, Tennessee and actor of The Departed and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  ?person a dbo:Actor ;
          foaf:name ""Jack Nicholson""@en .
  OPTIONAL { ?person dbo:nationality dbr:United_States . }
  OPTIONAL { ?film dbo:starring ?person . 
             FILTER (str(?film) IN (""The Departed"", ""All About the Andersons"")) }
  ?person dbo:birthPlace ?nativePlace .
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
328,41,val,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape and commander in the force of Ferenc Szálasi and leader of People's Commissariat of Defense of the Soviet Union.","SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v2 . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?result <http://dbpedia.org/property/awards> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  # Find awards associated with Bruce Fraser, 1st Baron Fraser of North Cape
  ?award dbo:recipient dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape .
  
  # Find the awardee of that award
  ?award dbo:awardee ?awardee .

  OPTIONAL {
    # Identify Ferenc Szálasi's role as a commander in a force
    ?szalasi dbo:commanderOf ?force .
    FILTER (str(?force) = ""Ferenc_Szálasi"")

    # Find the leader of People's Commissariat of Defense of the Soviet Union
    ?leader dbo:title dbr:People's_Commissar_for_Defence_of_the_Soviet_Union ;
            dbo:leaderOf dbr:Soviet_Union .
  }
}
```",5,5,6,2,3,3,3,71,0,0,1,0,0.0,0
281,23,val,Give me the war of the awardee of the award of Jonathon Band.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee ?war WHERE {
  # Find Jonathon Band's DBpedia resource
  ?jonathanBand a dbo:Person ;
                foaf:name ""Jonathon Band""@en .
  
  # Find awards associated with Jonathon Band
  ?award dbo:recipient ?jonathanBand ;
         dbo:category ?awardCategory .

  OPTIONAL {
    # Find the awardee of the award (if different from Jonathon Band)
    ?award dbo:recipient ?awardee .
    
    # Check if the awardee is associated with a war
    ?awardee dbo:wikiPageRedirects ?war .
  }
}
```

This query attempts to:

- Identify Jonathon Band's DBpedia resource.
- Retrieve any awards he has received.
- Optionally find other recipients of those awards and check if they are linked to any wars.",3,3,4,3,1,3,3,71,0,0,450,0,0.0,0
963,13,val,"Give me the entity in the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find the time zone of Herzegovina-Neretva Canton
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .

  # Find the country associated with this time zone
  ?timezone dbo:country ?country .
}
```",3,4,4,3,1,3,2,20,0,0,173261,0,0.0,0
701,18,val,Give me the spouse of Ramesses II and parent of Henuttawy (19th dynasty) and parent of Meritamen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ramesses II
  ?ramesses2 a dbo:Person ;
             foaf:name ""Ramesses II""@en .

  # Spouse of Ramesses II
  ?ramesses2 dbo:spouse ?spouse .
  
  # Henuttawy (19th dynasty) as child of the spouse
  ?henuttawy a dbo:Person ;
             foaf:name ""Henuttawy (19th dynasty)""@en ;
             dbo:parent ?spouse .

  # Meritamen as child of the spouse
  ?meritamen a dbo:Person ;
             foaf:name ""Meritamen""@en ;
             dbo:parent ?spouse .
}
```

This query does the following:
- Identifies Ramesses II using his name.
- Finds his spouse by looking at the `dbo:spouse` property.
- Checks if this spouse is listed as a parent of both Henuttawy (19th dynasty) and Meritamen.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
9,42,val,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum and figure known as the nickname of Queen's University Belfast and alma mater of Allen Hill (scientist).",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v2 . ?result <http://dbpedia.org/property/nickname> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  # Mayor of Northern Ireland Forum
  ?mayor a dbo:Politician ;
         dbo:officeHolderOf dbr:Northern_Ireland_Forum .
  
  # Figure known as the nickname of Queen's University Belfast
  ?figure rdfs:label ""Queen's University Belfast""@en ;
          dbo:nickname ?nickname .

  # Alma mater of Allen Hill (scientist)
  ?allenHill a dbo:Scientist ;
             foaf:almaMater ?almaMater .
  
  # Linking the alma mater
  ?mayor foaf:almaMater ?almaMater .
  ?figure foaf:almaMater ?almaMater .

  FILTER (str(?nickname) = ""Queen's University Belfast"")
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
547,32,val,Give me the resting place of the actor of Enemy at the Door and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v3 . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actorRestingPlace ?childRestingPlace WHERE {
  # Find the actor of ""Enemy at the Door""
  ?movie dbo:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .

  # Get the resting place of this actor
  OPTIONAL { ?actor dbo:deathPlace ?actorDeathPlace . }
  OPTIONAL { ?actorDeathPlace dbo:location ?actorRestingPlace . }

  # Find James Burton (property developer)
  ?james dbr:James_Burton_(property_developer) .

  # Identify a child of James Burton
  ?child dbo:parent ?james .
  
  # Get the resting place of this child
  OPTIONAL { ?child dbo:deathPlace ?childDeathPlace . }
  OPTIONAL { ?childDeathPlace dbo:location ?childRestingPlace . }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
179,15,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala and parent of Ubol Ratana.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . ?v0 <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  # Identify Nakkhatra Mangala (Srinagarindra)
  ?nakBirthName dbo:spouse ?sirikit .
  
  # Find Sirikit, the child of Nakkhatra Mangala
  ?sirikit dbo:child ?ubolRatana ;
           rdfs:label ""Sirikit""@en .

  # Confirm Ubol Ratana is a child of Sirikit
  ?ubolRatana rdfs:label ""Ubol Ratana"" .
  
  # Retrieve the birth name of Sirikit
  ?sirikit dbo:birthName ?birthName .
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
184,32,val,Give me the child of the child of Archduke Joseph Karl of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild ?parentOfBudapest
WHERE {
  # Archduke Joseph Karl's children
  ?child1 dbo:spouse* dbr:Archduke_Joseph_Karl_of_Austria .
  
  # Grandchildren of Archduke Joseph Karl
  ?child1 dbo:child ?grandchild .

  # Natives of Budapest and their parents
  ?person dbo:nativePlace dbr:Budapest .
  ?person dbo:parent ?parentOfBudapest .

  # Find the intersection
  FILTER (?grandchild = ?parentOfBudapest)
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
996,11,val,Give me the force of the awardee of 1778.0 and entity in France.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . ?v2 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/commander> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?award ?force WHERE {
  ?award dbo:recipient ?awardee .
  ?award dbo:dateReceived ?date .
  FILTER (YEAR(?date) = 1778)
  
  OPTIONAL { ?awardee dbo:nationality dbr:Francois ""France"" . }
  OPTIONAL { ?awardee dbo:birthPlace dbr:Francois ""France"" . }
  OPTIONAL { ?awardee dbo:deathPlace dbr:Francois ""France"" . }

  ?award dbp:force ?force .
}
```

### Explanation:

- **PREFIX**: We define prefixes for common DBpedia namespaces.
- **SELECT**: We select the awardee, the award they received, and any associated force (if applicable).
- **FILTER**: We filter awards by the year 1778 using `YEAR(?date)`.
- **OPTIONAL Clauses**: These check if the awardee has a nationality, birthplace, or death place in France.
- **Force**: If there's a property like `dbp:force` associated with the award, it is selected.

This query assumes that awards have a `dbo:dateReceived` and possibly a `dbp:force` property. Adjustments might be needed based on actual DBpedia schema details.",3,3,4,2,2,3,2,20,0,0,4,0,0.0,0
915,12,val,"Give me the resident of Springfield, Illinois and father of the child, that is a fictional character and a soap character, of Phillip Spaulding.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?father a dbo:FictionalCharacter .
  ?father dbo:residence dbr:Springfield_(The_Simpsons) .
  ?father dbo:spouse ?spouse .
  ?child dbo:parent ?father ;
         rdfs:label ""Phillip Spaulding""@en .
  FILTER(CONTAINS(LCASE(?father), ""soap""))
}
```

This query does the following:
- Selects entities that are fictional characters (`dbo:FictionalCharacter`).
- Ensures they reside in Springfield from ""The Simpsons"" (`dbo:residence`).
- Checks for a relationship where this character is a parent of Phillip Spaulding.
- Filters to ensure the character is associated with soap operas.",3,5,4,2,2,3,2,20,0,0,1,0,0.0,0
404,44,val,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick and child of the father of Ernest Augustus, Duke of Brunswick and spouse of Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> ?v2 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v4 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Ernest Augustus, Duke of Brunswick
  VALUES ?ernestAugustus { dbr:Ernest_Augustus,_Duke_of_Brunswick }

  # His children who are royalty
  ?child dbo:fatherOrMother ?ernestAugustus .
  ?child a dbo:Monarch .

  # Find the parent of this child (who is also Ernest Augustus)
  ?parent dbo:child ?child .
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
391,27,val,"Give me the actor of the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/occupation> """"@en . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v2 <http://dbpedia.org/property/starring> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:genre ?workGenre ;
         dbo:televisionSeries ?tvShow .
  
  FILTER EXISTS { ?workGenre rdf:type dbo:Work . }
  FILTER EXISTS { ?tvShow rdf:type dbo:TelevisionSeries . }

  ?movie dbo:starring ?actor .
}
```

This query does the following:
- Selects movies that are also classified as a work and a television series.
- Filters to ensure the genre is of type `Work` and the television series is of type `TelevisionSeries`.
- Retrieves distinct actors who starred in these movies.",3,6,4,3,1,3,3,71,0,0,7061,0,0.0,0
963,14,val,"Give me the administration of the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v2 <http://dbpedia.org/ontology/postalCode> ""21205"" . ?result <http://dbpedia.org/property/leaderParty> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?administration WHERE {
  # Identify Baltimore, Maryland
  VALUES ?location { dbr:Baltimore_(Maryland) }
  
  # Find political parties in power in this location
  ?party dbo:country dbr:United_States ;
         dbo:politicalPartyInPower dbp:state ?location .
  
  # Get the administration details of these parties
  OPTIONAL {
    ?administration dbo:headOfGovernment ?leader ;
                    dbo:politicalParty ?party .
  }
}
```

This query does the following:
- It identifies Baltimore, Maryland as the location.
- It looks for political parties that are in power in this state.
- It attempts to retrieve any administration details related to these parties.

Note: The exact properties and resources might need adjustments based on the current DBpedia schema and available data. This is a general approach and may require refinement with actual DBpedia queries.",3,4,4,3,1,3,2,20,0,0,86,0,0.0,0
55,16,val,"Give me the band member of Guns N' Roses and band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?band 
WHERE {
  # Find members of Guns N' Roses
  ?member dbo:memberOf dbr:Guns_N%27_Roses .
  
  # Find bands associated with Newsted (Jason Newsted)
  ?newstedBand dbo:member dbr:Jason_Newsted ;
               a dbo:MusicalGroup .

  # Check if the member of Guns N' Roses is also in any band that includes Newsted
  ?band dbo:member ?member .
  
  FILTER(?band = ?newstedBand)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
10,16,val,Give me the professional in the birth name of Sharon Kao and associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?professionalName ?associatedArtist
WHERE {
  # Find Sharon Kao's professional name using her birth name
  ?sharonKao a dbo:Person ;
             foaf:name ""Sharon Kao""@en .
  
  OPTIONAL { 
    ?sharonKao dbp:profession ?professionalName .
  }
  
  # Find Matt Colton's associated musical artist
  ?mattColton a dbo:Person ;
              foaf:name ""Matt Colton""@en .
  
  OPTIONAL {
    ?mattColton dbp:associatedMusicalArtist ?associatedArtist .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
547,37,val,Give me the resting place of Alan Cunningham and resting place of the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/starring> ?v3 . ?v3 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
# Query for Alan Cunningham's resting place
SELECT ?restingPlace WHERE {
  ?person dbo:birthName ""Alan Cunningham""@en .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```

```sparql
# Query to find the show associated with Emily Richard and its actors' resting places
SELECT DISTINCT ?actor ?actorRestingPlace WHERE {
  # Find the TV series associated with Emily Richard (Emily in Paris)
  ?series dbo:starring ""Emily Richard""@en .
  
  # Get all actors from that series
  ?series dbo:starring ?actor .

  # Get their resting places if available
  OPTIONAL { ?actor dbo:deathPlace ?actorRestingPlace . }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
92,31,val,"Give me the associated musical artist of Jim Sheppard and band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Jim Sheppard's associated musical artist
  OPTIONAL { 
    dbr:Jim_Sheppard dbo:musicalArtist ?artist .
  }
  
  # Find the band member of Nevermore (2006 film) who is also an artist
  OPTIONAL {
    dbr:Nevermore_(film)_2006 dbo:bandMember ?member .
    ?member a dbo:MusicalArtist .
  }

  FILTER(?artist = ?member)
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
356,15,val,"Give me the player in the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season and team of Mark Briggs.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v1 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC season
  ?season a dbo:SoccerSeason ;
          dbo:team dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .

  # Step 2: Find its predecessor
  ?predecessor a dbo:SoccerSeason ;
               dbo:succeeds ?season ;
               dbo:team dbr:Sacramento_Republic_FC .

  # Step 3: Find the successor of that predecessor
  ?successor a dbo:SoccerSeason ;
             dbo:precedes ?predecessor ;
             dbo:team dbr:Sacramento_Republic_FC .

  # Ensure it is both a sports team season and a soccer club season
  ?successor a dbo:SportsTeamSeason, dbo:SoccerClubSeason .

  # Step 5: Identify the player associated with Mark Briggs in this context
  ?player a dbo:FootballPlayer ;
          dbo:playsFor dbr:Sacramento_Republic_FC ;
          dbo:memberOf ?team .
  
  ?team dbo:season ?successor .
  
  # Ensure Mark Briggs is part of the team
  ?markBriggs a dbo:Person ;
              foaf:name ""Mark Briggs"" ;
              dbo:memberOf ?team .
}
```",4,6,5,3,2,3,2,20,0,0,1,0,0.0,0
92,23,val,"Give me the band member of the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v0 <http://xmlns.com/foaf/0.1/name> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName WHERE {
    # Find the band Nevermore
    dbr:Nevermore a dbo:Band .

    # Get members of the band
    ?bandMember dbo:memberOf dbr:Nevermore .
    
    # Check if any member is an artist related to the 2006 film ""Nevermore""
    OPTIONAL {
        ?film dbr:Nevermore_2006_film ;
              dbo:starring ?actor .
        
        ?actor foaf:name ?actorName .
        
        FILTER (?bandMember = ?actor)
    }
    
    # Get the name of the band member
    ?bandMember foaf:name ?memberName .
}
```",3,4,4,3,1,3,3,71,0,0,12,0,0.0,0
251,17,val,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily and death place of Laura Mancinelli.",SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"SELECT ?administration WHERE {
  # Query for administration of ruling party in Sicily
  ?party dbo:isPoliticalParty true .
  ?party dbo:country dbr:Sicily .
  ?party dbo:rulingParty true .
  ?party dbo:administration ?administration .
  
  UNION

  # Query for death place of Laura Mancinelli
  OPTIONAL {
    dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
    BIND(?deathPlace AS ?administration)
  }
}
LIMIT 10",3,5,4,2,2,2,3,28,0,0,1,0,0.0,0
427,33,val,Give me the reference to Partito Popolare Italiano and party of the father of the alumnus of Massachusetts Institute of Technology.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v3 <http://dbpedia.org/ontology/party> ?result . ?v0 <http://dbpedia.org/property/father> ?v3 . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus ?father ?party WHERE {
  # Find MIT alumni
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .

  # Find the father of each alumnus
  ?alumnus dbo:parent ?father .

  # Get the political party associated with the father
  OPTIONAL {
    ?father dbo:partyAffiliation ?party .
  }

  # Filter for Partito Popolare Italiano
  FILTER (?party = dbr/Partito_Popolare_Italiano)
}
```

This query does the following:
- Selects alumni of MIT.
- Identifies their fathers.
- Checks if these fathers have a political party affiliation.
- Filters results to include only those affiliated with Partito Popolare Italiano.",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
404,36,val,Give me the spouse of Princess Victoria Louise of Prussia and child of the father of the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Princess Victoria Louise of Prussia
  ?princess a dbo:Person ;
           foaf:name ""Victoria Louise, Princess Royal""@en ;
           dbo:spouse ?spouse .

  # Step 2: Find her spouse
  ?spouse a dbo:Person ;
          foaf:name ?spouseName .

  # Step 3: Determine the father of that spouse
  ?father a dbo:Person ;
          foaf:name ?fatherName ;
          dbo:child ?spouse .

  # Step 4: List the children of that father
  ?father dbo:child ?child .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
161,23,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://dbpedia.org/ontology/commander> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?militaryForce ?event
WHERE {
  # Find persons who died during Francoist Spain (1939-1975)
  ?person dbo:dateOfDeath ?deathDate .
  FILTER (?deathDate >= ""1939-01-01""^^xsd:date && ?deathDate <= ""1975-12-31""^^xsd:date) .

  # Link person to a military force
  ?person dbo:militaryService ?militaryForce .

  # Find events that are societal and military conflicts
  ?event a dbo:SocietalEvent ;
         a dbo:MilitaryConflict .

  # Ensure the event is linked to both the person and the military force
  ?event dbo:participant ?person .
  ?event dbo:involvedMilitaryForce ?militaryForce .
}
```",3,6,4,3,1,3,3,71,0,0,1073,0,0.0,0
617,36,val,Give me the parent of the child of the commander in Battle of Panium and child of Antiochus III the Great.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Step 1: Identify the commander in the Battle of Panium
  ?battle dbr:Battle_of_Panium .
  ?commander dbo:commanderOf ?battle .

  # Step 2: Find the child of this commander
  ?child dbo:child ?commander .

  # Step 3: Determine who is the parent of that child
  ?parent dbo:child ?child .

  # Step 4: Ensure this person is also a child of Antiochus III the Great
  ?parent dbo:child dbr:Antiochus_III_the_Great .
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
54,44,val,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin and parent of the child of Narapati I of Ava and child of Thinkhaya of Pagan.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v2 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?v4 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?v4 <http://dbpedia.org/ontology/parent> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/successor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Thihapate of Mohnyin's child who is an office holder and royalty
  ?child1 dbo:parent dbr:Thihapate_of_Mohnyin .
  ?child1 a dbo:Monarch ;
          dbo:officeHolder true .

  # Narapati I of Ava's child
  ?child2 dbo:parent dbr:Narapati_I_of_Ava .

  # Thinkhaya of Pagan's child
  ?child3 dbo:parent dbr:Thinkhaya_of_Pagan .

  # Find the common individual among these children
  FILTER (?child1 = ?commonChild && ?child2 = ?commonChild && ?child3 = ?commonChild)

  # Get the predecessor (parent) of this common child
  ?predecessor dbo:child ?commonChild .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
10,18,val,Give me the professional in the birth name of Sharon Kao and band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthName ?bandMemberOf
WHERE {
  ?sharonKao a dbo:MusicalArtist ;
             foaf:name ""Sharon Kao"" ;
             dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?sharonKao dbo:bandMemberOf ?bandMemberOf .
  }
  
  FILTER(?bandMemberOf = <http://dbpedia.org/resource/Luke_Vibert>)
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
16,37,val,Give me the person born as Georgeanne Marie Rice and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v3 . ?v0 <http://dbpedia.org/property/occupation> ?v3 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?actor ?birthName ?tvSeries WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Georgeanne Marie Rice""@en ;
         dbo:birthName ?birthName .
  
  OPTIONAL { 
    ?actor dbo:profession dbr:Acting .
  }
  
  ?tvSeries dbo:title ""Unnatural (TV series)""@en ;
            dbo:starring ?actor .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
92,18,val,Give me the band of Joseph Michael and associated musical artist of Jim Sheppard and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?relation ?entity WHERE {
  VALUES (?person ?relation) {
    (dbo:Joseph_Michael dbo:band)
    (dbo:Jim_Sheppard dbo:musicalArtist)
    (dbo:Nevermore dbo:member)
  }
  
  ?person ?relation ?entity .
}
```

This query uses the `VALUES` clause to specify the entities and their relationships we are interested in. It retrieves the related entity for each specified relationship.",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
915,14,val,"Give me the father of the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Step 1: Identify Lizzie Spaulding
  ?lizzie a dbo:FictionalCharacter ;
          dbo:spouseOrPartner ?parent .

  FILTER (str(?lizzie) = ""Lizzie_Spaulding"")

  # Step 2: Find her parent who is also a fictional character and soap character
  ?parent a dbo:FictionalCharacter ;
          dbo:spouseOrPartner ?child .

  # Step 3: Identify the child of that parent who is a fictional character and soap character
  ?child a dbo:FictionalCharacter ;
         dbo:spouseOrPartner ?father .

  FILTER (str(?lizzie) = ""Lizzie_Spaulding"")
}
```

This query assumes:
- Lizzie Spaulding has a spouse or partner (`?parent`) who is also a fictional character.
- The parent has children (`?child`) who are fictional characters and soap characters.
- We're looking for the father of such a child.

Note: This query might need adjustments based on the actual structure and availability of data in DBpedia. It assumes relationships like `spouseOrPartner` to navigate family connections, which may not be directly available or accurate in DBpedia's schema. Adjustments might be necessary depending on the specific ontology used by DBpedia for soap operas.",3,7,4,3,1,3,2,20,0,0,1,0,0.0,0
303,13,val,"Give me the entity in Panama and party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?name ?role WHERE {
  # Find entities related to the United States invasion of Panama
  ?event dbo:wikiPageRedirects dbr:United_States_invasion_of_Panama .
  
  # Filter for individuals involved in this event
  ?event dbo:agent ?individual .
  
  # Ensure the individual is a politician or commander
  OPTIONAL { ?individual dbo:occupation dbp:politician . }
  OPTIONAL { ?individual dbo:positionHeld ?role . FILTER(CONTAINS(LCASE(?role), ""commander"")) }

  # Filter for entities located in Panama
  ?individual dbo:birthPlace dbr:Panama .

  # Get the name of the individual
  ?individual rdfs:label ?name .
  
  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?name), "" "", ""_""))) AS ?entity)
}
ORDER BY ?name
```",3,4,4,2,2,2,3,28,0,0,2,0,0.0,0
488,33,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki.",SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfGrandfather ?birthPlaceOfEnomotoTakeaki
WHERE {
  # Matsudaira Tadamasa's father and grandfather
  ?matsudairaTadamasa a dbo:Person ;
                     foaf:parent ?father .
  
  ?father a dbo:Politician ;
          foaf:parent ?grandfather .

  ?grandfather dbo:deathPlace ?deathPlaceOfGrandfather .

  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceOfEnomotoTakeaki .
  
  FILTER (?matsudairaTadamasa = dbr:Matsudaira_Tadamasa)
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
281,26,val,"Give me the entity in the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  # Find the politician who was the leader in the 1962 NSW state election
  ?politician a dbo:Politician ;
              dbo:officeHolderOf dbr:1962_New_South_Wales_state_election .

  # Get their place of birth
  ?politician dbp:birthPlace ?birthPlace .

  # Check if this place is a country
  ?birthPlace a dbo:Country .
  
  # Bind the country entity to the variable
  BIND(?birthPlace AS ?country)
}
```",3,5,4,3,1,3,3,71,0,0,1,0,0.0,0
391,25,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of The Departed.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Find movies that are also works and television shows
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         dbo:televisionEpisode .

  # Ensure Roz Ryan is part of the cast
  ?castMember1 dbo:characterName dbr:Roz_Ryan ;
               dbo:actor ?rozRyan .
  ?rozRyan foaf:name ""Roz Ryan"" .

  # Ensure an actor from ""The Departed"" is also in this movie
  ?departedActor dbo:film dbr:The_Departed ;
                 a dbo:Actor .
  
  ?castMember2 dbo:actor ?departedActor ;
               dbo:actor ?actor .

  # Link the actors to the same movie
  ?castMember1 dbo:film ?movie .
  ?castMember2 dbo:film ?movie .
}
```",3,6,4,2,2,3,3,71,0,0,1,0,0.0,0
994,28,val,Give me the associated musical artist of Red Tide (band) and associated musical artist of the associated musical artist of Watchtower (band) and band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist1 ?artist2 ?donDokkenBandMember WHERE {
  # Step 1: Find associated musical artist of Red Tide (band)
  dbr:Red_Tide_(band) dbo:musicalArtist ?artist1 .

  # Step 2: Find associated musical artist of the result from step 1
  ?artist1 dbo:musicalArtist ?artist2 .

  # Step 3: Find band member of Don Dokken
  dbr:Don_Dokken dbo:bandMember ?donDokkenBandMember .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
378,27,val,"Give me the claim to fame of the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v2 <http://dbpedia.org/ontology/knownFor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?role WHERE {
  ?person dbo:wikiPageRedirects dbr:Thomas_Trigge .
  ?person dbo:militaryConflict ?conflict .
  ?conflict a dbo:MilitaryConflict ;
            dbo:socialEvent true .
  OPTIONAL { ?person dbo:role ?role . }
}
```

This query attempts to find military conflicts associated with Thomas Trigge that are also societal events and retrieves any roles or achievements he might have had.",3,6,4,3,1,3,3,71,0,0,6,0,0.0,0
182,16,val,Give me the entity in the nationality of Tamara Kunanayakam and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v2 . ?result <http://dbpedia.org/ontology/place> ?v2 . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:nationality dbr:Sri_Lanka .
}
```

This query selects all entities (`?entity`) that have a nationality of Sri Lanka. The `dbo:nationality` property is used to link an entity to its nationality, and `dbr:Sri_Lanka` refers to the DBpedia resource for Sri Lanka.",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
827,13,val,"Give me the child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
SELECT ?childOfChild WHERE {
  # Step 1: Identify Charles Alexander and his father
  dbpedia:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:father ?father .

  # Step 2: Find the children of this parent (father)
  ?parentChild rdf:type dbo:Person .
  ?parentChild dbo:parent ?father .

  # Step 3: Among these children, find one who is royalty
  ?childOfChild rdf:type dbo:RoyalFamilyMember .
  ?childOfChild dbo:parent ?parentChild .
}
```",3,4,4,3,1,3,2,20,0,0,8,0,0.0,0
492,19,val,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite and commander in Franco-Hova Wars.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?decedent WHERE {
  # Find the resource for Joseph C. Satterthwaite
  ?satterthwaite a dbo:Person ;
                 foaf:name ""Joseph C. Satterthwaite"" .

  # Identify his parent (decedent)
  ?satterthwaite dbo:parent ?decedent .

  # Check if the decedent was involved in any relevant roles
  OPTIONAL {
    ?decedent dbo:occupation dbr:Assistant_Secretary_of_State_for_African_Affairs .
  }
  OPTIONAL {
    ?decedent dbo:militaryCommanderOf dbr:Franco-Hova_Wars .
  }

  # Ensure the decedent has at least one of these roles
  FILTER (?decedent != ?satterthwaite && 
          (BOUND(?decedent.occupation) || BOUND(?decedent.militaryCommanderOf)))
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
696,13,val,"Give me the birth place of the member of the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/bandMember> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?birthPlace WHERE {
  # Identify the band ""The Boils""
  VALUES ?band { dbr:The_Boils }
  
  # Find members of the band
  ?band dbo:bandMember ?member .
  
  # Get birthplace information for each member
  OPTIONAL { 
    ?member dbp:birthPlace ?birthPlace .
  }
}
```",3,6,4,3,1,3,2,20,0,0,6,0,0.0,0
701,36,val,"Give me the spouse of the father of the commander, that is a royalty, in Battle of Perire and parent of Meritamen.",SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> ?v1 . ?v0 <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?meritamen dbo:parent ?royalParent .
  ?royalParent dbp:spouse ?spouse .

  ?commander dbo:father ?royalParent .
  ?battle dbo:commander ?commander .
  
  FILTER (str(?battle) = ""Battle of Perire"") .

  ?meritamen rdfs:label ""Meritamen""@en .
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
328,29,val,Give me the commander in the force of Ferenc Szálasi and awardee of Order of Suvorov and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . ?v3 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v3 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Ferenc Szálasi's commander
  ?commander dbo:commandedBy dbr:Ferenc_Szálasi .
  
  # Awardee of the Order of Suvorov
  ?awardee dbo:awardReceived dbr:Order_of_Suvorov .
  
  # Leader of People's Commissariat of Defense of the Soviet Union
  ?leader dbo:headOf dbr:People%27s_Commissariat_of_Defense_of_the_Soviet_Union .

  # The person must be all three roles
  FILTER (?commander = ?awardee && ?awardee = ?leader)
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
404,21,val,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . ?v1 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v1 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbo:birthName ""Victoria Louise of Prussia"" ;
          dbo:parent dbr:Ernest_Augustus,_Crown_Prince_of_Hanover ;
          dbo:title dbr:Princess_Victoria_Louise_of_Prussia .
  
  ?person dbo:spouse ?spouse .
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
666,11,val,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season and figure known as The Three Lions.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . ?v2 <http://dbpedia.org/ontology/team> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?manager WHERE {
  ?team dbo:season = dbr:Hull_City_A.F.C._2016–17_season .
  ?team dbo:manager ?manager .
  
  OPTIONAL { 
    ?manager rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), ""the three lions""))
  }
}
```

This query does the following:
- It looks for a team (`?team`) that has a season matching Hull City A.F.C.'s 2016–17 season.
- It retrieves the manager of that team.
- It checks if any label associated with the manager contains ""the three lions"" (case-insensitive).",3,4,4,2,2,3,2,20,0,0,2,0,0.0,0
778,13,val,"Give me the entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?award a dbo:Award ;
         dbo:name ""Wolf Prize in Medicine""@en .
  
  ?recipient dbo:recipientOf ?award ;
             dbo:nationality dbr:United_States .

  ?recipient dbo:field dbp:medicine .
  ?award dbo:awardedTo ?entity .
}
```

This query does the following:
- Selects awards that are of type `dbo:Award` and have the name ""Wolf Prize in Medicine.""
- Filters recipients (`?recipient`) who received this award and whose nationality is the United States.
- Ensures the field of the recipient is medicine, which aligns with the Wolf Prize in Medicine.
- Retrieves the entity associated with the award.",3,4,4,3,1,3,2,20,0,0,18629,0,0.0,0
161,44,val,"Give me the commander in the force, that is an event, of Emilio Mola and military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero and military force of Rif War.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v4 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?v2 <http://dbpedia.org/ontology/commander> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v2 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander1 ?commander2 WHERE {
  # Emilio Mola and the Spanish Civil War
  dbr:Emilio_Mola dbo:commanderOf ?event1 .
  ?event1 rdf:type dbo:MilitaryConflict ;
          rdfs:label ""Spanish Civil War""@en .

  # Francisco Largo Caballero and the Spanish Civil War
  dbr:Francisco_Largo_Caballero dbo:commanderOf ?event2 .
  ?event2 rdf:type dbo:MilitaryConflict ;
          rdfs:label ""Spanish Civil War""@en .

  # Rif War and military forces
  ?rifWar rdf:type dbo:MilitaryConflict ;
          rdfs:label ""Rif War""@en .
  ?rifWar dbo:participatingMilitaryForce ?militaryForce1 .
  ?militaryForce1 dbo:commander ?commander2 .

  # Ensure commanders are distinct and related to the events
  FILTER(?event1 = ?event2)
}
```",5,8,6,2,3,3,3,71,0,0,11,0,0.0,0
48,14,val,"Give me the band of the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor ?band WHERE {
  # Find shows featuring Stacey Dash
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Get actors from those shows
  ?show dbo:starring ?actor .

  # Check if the actor is also a musical artist
  OPTIONAL { 
    ?artist dbo:alias ?actor .
    ?artist dbo:band ?band .
  }
}
```",3,4,4,3,1,3,2,20,1,101,35,0.00980392156862745,0.027777777777777776,0.014492753623188404
659,25,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck and commander in Battle of Leipzig.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Rutger Jan Schimmelpenninck and his military force
  dbr:Rutger_Jan_Schimmelpenninck dbo:militaryService ?service.
  ?service dbo:organization ?militaryForce.

  # Battle of Leipzig and its commander
  dbr:Battle_of_Leipzig dbo:commander ?commander.
  
  # Ensure the military force is a societal event, an event, and a military conflict
  ?militaryForce rdf:type dbo:SocietalEvent .
  ?militaryForce rdf:type dbo:Event .
  ?militaryForce rdf:type dbo:MilitaryConflict .

  # Linking Schimmelpenninck to the Battle of Leipzig through the military force
  ?service dbo:commander ?schimmelpenninck.
  ?commander dbr:Rutger_Jan_Schimmelpenninck .
}
```",3,6,4,2,2,3,3,71,0,0,6,0,0.0,0
92,42,val,"Give me the band member of the reference, that is an artist, to Nevermore and band of the person born as Joseph Michael Furney and associated musical artist of Jim Sheppard.","SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMemberArtist ?jimSheppardsBand ?associatedArtists
WHERE {
  # Find band members of Nevermore who are artists
  ?member dbo:memberOf dbr:Nevermore .
  ?member dbo:occupation dbr:Musician .

  # Get the name of the artist member
  ?member rdfs:label ?bandMemberArtist .
  
  FILTER (lang(?bandMemberArtist) = 'en')

  # Find Jim Sheppard's band
  dbr:Jim_Sheppard dbo:birthName ""Joseph Michael Furney""@en ;
                   dbo:memberOf ?jimSheppardsBand .

  # Get the name of Jim Sheppard's band
  ?jimSheppardsBand rdfs:label ?bandLabel .
  
  FILTER (lang(?bandLabel) = 'en')

  # Find associated musical artists with Jim Sheppard
  dbr:Jim_Sheppard dbo:associatedMusicalArtist ?associatedArtists .

  # Get the name of the associated artists
  ?associatedArtists rdfs:label ?artistLabel .
  
  FILTER (lang(?artistLabel) = 'en')
}
```",5,6,6,2,3,3,3,71,0,0,1,0,0.0,0
747,32,val,Give me the person born on the birth date of Pavlo Khudzik and band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v1 . ?result <http://dbpedia.org/ontology/birthDate> ?v1 . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v3 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?band WHERE {
  # Find Pavlo Khudzik's birth date
  VALUES ?khudzikBirthDate { 
    SELECT ?birthDate WHERE {
      dbr:Pavlo_Khudzik dbo:birthday ?birthDate .
    }
  }

  # Find the writer of ""Apollo"" by Hardwell and their band
  {
    SELECT ?writer ?band WHERE {
      dbr:Apollo_(Hardwell_song) dbo:lyricsBy ?writer ;
                                  dbo:musicalArtist ?artist .
      OPTIONAL { ?writer dbo:memberOfBand ?band . }
    }
  }

  # Match the birth date of Pavlo Khudzik with the writer's birth date
  {
    SELECT ?person WHERE {
      ?person dbo:birthday ?khudzikBirthDate .
    }
  }
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
232,35,val,"Give me the child of the person born as John Devon Roland Pertwee and native of the residence, that is a settlement and British, of Sylvie Bermann.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?v2 <http://dbpedia.org/ontology/child> ?result . ?v2 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find John Pertwee
  ?john a dbo:Person ;
        foaf:name ""John Devon Roland Pertwee""@en .
  
  # Identify his child
  ?john dbo:child ?child .

  # Find Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en .
  
  ?sylvie dbo:residenceLocation ?settlement .
  ?settlement a dbo:Settlement ;
              dbo:country dbr:United_Kingdom .

  # Ensure the child is associated with Sylvie's residence
  ?child dbo:birthPlace ?settlement .
}
```",4,6,5,2,2,3,3,71,0,0,1,0,0.0,0
617,29,val,Give me the spouse of the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus) and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v3 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Step 1: Identify children of Antiochus III the Great
  ?child dbo:parent dbr:Antiochus_III_the_Great .
  
  # Step 2: Determine which child is a parent of Nysa
  ?child dbo:child dbr:Nysa_of_Pontus .

  # Step 3: Find the spouse of that child
  ?child dbo:spouse ?spouse .
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
427,26,val,Give me the party of the father of the alumnus of Massachusetts Institute of Technology.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/father> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father ?party 
WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  ?alumnus dbo:parent ?father .
  OPTIONAL { ?father dbp:politicalAffiliation ?party . }
}
```",3,3,4,3,1,3,3,71,0,21,7,0.0,0.0,0
179,13,val,"Give me the person born as the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?birthName WHERE {
  # Find Nakkhatra Mangala's resource
  VALUES ?nakResource { dbr:Nakkhatra_Mangala }

  # Identify children of Nakkhatra Mangala
  ?nakResource dbo:spouse ?parent .
  ?parent dbo:child ?child .

  # Ensure the child is royalty
  ?child a dbo:Monarch ;
         dbp:title ?title .

  # Retrieve the birth name of the child
  OPTIONAL { ?child dbp:birthName ?birthName }
}
```

This query assumes that Nakkhatra Mangala's resource is `dbr:Nakkhatra_Mangala`. Adjust this if necessary based on DBpedia's current structure. The query looks for children who are monarchs and retrieves their birth names.",3,4,4,3,1,3,2,20,0,0,1,0,0.0,0
378,28,val,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of the person born as Carl Pontus Gahn and war of Joaquín Blake.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?fame WHERE {
  VALUES (?person ?name) {
    (dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"")
    (dbr:Carl_Pontus_Gahn ""Carl Pontus Gahn"")
    (dbr:Joaquín_Blake ""Joaquín Blake"")
  }
  
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:notableFor ?fame . FILTER(lang(?fame) = 'en') }
}
ORDER BY ?name
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
783,11,val,Give me the associated musical artist of the band member of Ofori Amponsah and band member of Ebony Reigns.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find band members of Ofori Amponsah
  {
    SELECT ?bandMember WHERE {
      ?band dbo:member ?bandMember .
      ?band dbr:Ofori_Amponsah .
    }
  }

  UNION

  # Find band members of Ebony Reigns
  {
    SELECT ?bandMember WHERE {
      ?band dbo:member ?bandMember .
      ?band dbr:Ebony_Reigns .
    }
  }

  # Get associated musical artists for these band members
  ?bandMember dbo:musicalArtist ?artist .
}
```

This query does the following:
1. It searches for band members of Ofori Amponsah and Ebony Reigns using DBpedia's ontology.
2. It then retrieves the musical artists associated with those band members.

Please note that this query assumes that the resources `dbr:Ofori_Amponsah` and `dbr:Ebony_Reigns` exist in DBpedia, which may not be the case if they are not well-documented or indexed. Adjustments might be necessary based on actual data availability.",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
659,37,val,"Give me the military force of Napoleonic Wars and commander in the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v3 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . ?v0 <http://dbpedia.org/ontology/battle> ?v3 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander ?event WHERE {
  # Identify the Polish Horse as a military unit
  VALUES ?polishHorse { dbr:Polish_Horse }

  # Find the military force they were part of
  ?polishHorse dbo:militaryUnitOf ?militaryForce .

  # Find the commander associated with this military unit
  OPTIONAL {
    ?commander dbo:commandedMilitaryUnit ?polishHorse .
  }

  # Identify events related to the Napoleonic Wars
  VALUES ?event { dbr:Napoleonic_Wars }
  
  # Link the event to the military force or commander
  OPTIONAL {
    ?militaryForce dbo:event ?event .
  }
  OPTIONAL {
    ?commander dbo:participatedIn ?event .
  }
}
```",4,8,5,3,2,3,3,71,0,0,29,0,0.0,0
421,15,val,Give me the band member of the awardee of [[#Awards and nominations and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?bandMember WHERE {
  # Identify Dino Merlin by his birth name
  dbr:Dino_Merlin dbo:birthName ""Edin Dervišhalidović""@en .
  
  # Find awards associated with Dino Merlin
  OPTIONAL { 
    dbr:Dino_Merlin dbo:award ?award .
  }
  
  # Retrieve band members related to Dino Merlin
  OPTIONAL {
    ?bandMember dbo:member ?dinoMerlinRole .
    ?dinoMerlinRole foaf:page ?dinoMerlinPage .
    ?dinoMerlinPage foaf:primaryTopic dbr:Dino_Merlin .
  }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
487,15,val,Give me the country of the administration of the person born on 1955-01-26 and administration of Phil Scott.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> ?v0 . ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person1Country ?person2Country WHERE {
  # Find George W. Bush by birth date
  ?person1 dbo:birthDate ""1955-01-26""^^xsd:date .
  ?person1 dbo:country dbr:United_States .
  ?person1 dbo:office dbr:President_of_the_United_States .
  ?person1 dbo:country ?person1Country .

  # Find Phil Scott by name
  ?person2 rdfs:label ""Phil Scott""@en .
  ?person2 dbo:office dbr:Governor_of_Vermont .
  ?person2 dbo:country ?person2Country .
  
  FILTER (lang(?person2Label) = 'en')
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
404,19,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?spouse WHERE {
  # Find Prince Ernest Augustus of Hanover born in 1914
  ?person a dbo:Person ;
          foaf:name ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthYear ""1914""^^xsd:gYear .

  # Identify his parent(s)
  ?parent dbo:child ?person .
  
  # Check if the parent is royalty and married to Princess Victoria Louise of Prussia
  ?parent a dbo:Monarch ;
          dbo:spouse dbr:Princess_Victoria_Louise_of_Prussia .

}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
747,24,val,Give me the band of the writer of Apollo (Hardwell song) and band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v2 . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?writerBand ?shenaBand
WHERE {
  # Find the writer of ""Apollo"" by Hardwell
  ?song dbo:lyricsBy ?writer .
  ?song rdfs:label ""Apollo (Hardwell song)""@en .

  # Get the band associated with this writer
  OPTIONAL { 
    ?writer dbo:band ?writerBand .
  }

  # Find Shèna and her band
  dbr:Shèna dbo:band ?shenaBand .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
54,18,val,Give me the parent of Thado Minsaw of Prome and child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Thado Minsaw of Prome
  ?thadoMinsaw dbo:parent ?person .
  ?thadoMinsaw dbr:Prome .

  # Thinkhaya of Pagan
  ?thinkhaya dbo:child ?thadoMinsaw .
  ?thinkhaya dbr:Pagan .

  # Ameitta Thiri Maha Dhamma Dewi of Ava
  ?ameittaThiri dbo:predecessor ?person .
  ?ameittaThiri dbr:Ava .
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
427,19,val,Give me the party of Giulio Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  # Identify the resource for Giulio Andreotti
  dbr:Giulio_Andreotti dbo:politicalParty ?party .
  
  # Filter by the time period (1994)
  FILTER EXISTS { 
    ?party dbo:startDate ?start .
    ?party dbo:endDate ?end .
    FILTER (?start <= ""1994-12-31""^^xsd:date && (?end >= ""1994-01-01""^^xsd:date || NOT EXISTS { ?party dbo:endDate ?end }))
  }
  
  # Identify the party as Italian People's Party (PPI)
  OPTIONAL {
    ?party rdfs:label ?partyName .
    FILTER(lang(?partyName) = 'en' && regex(str(?partyName), ""Italian People's Party""))
  }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
747,37,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and band of Shèna.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://dbpedia.org/property/writer> ?v3 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandAmba ?bandShena WHERE {
  # Find songs by Amba Shepherd and their writers
  ?songAmba dbo:artist dbr:Amba_Shepherd ;
           dbo:composer ?writerAmba .
  
  # Find the band of the writer of Amba Shepherd's song
  OPTIONAL { ?writerAmba dbo:musicalBand ?bandAmba . }
  
  # Find songs by Shèna and their writers
  ?songShena dbo:artist dbr:Shèna ;
             dbo:composer ?writerShena .
  
  # Find the band of the writer of Shèna's song
  OPTIONAL { ?writerShena dbo:musicalBand ?bandShena . }
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
747,36,val,Give me the band of the person born as the persona of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/property/birthName> ?v0 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band1 ?band2 WHERE {
  # Find the person born as Shèna
  ?person1 a dbo:Person ;
           dbp:birthName ""Shèna"" ;
           dbo:musicBand ?band1 .

  # Find the person born on 1985-04-29
  ?person2 a dbo:Person ;
           dbo:birthday ""1985-04-29""^^xsd:date ;
           dbo:musicBand ?band2 .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
10,12,val,Give me the professional in  and associated musical artist of Matt Colton and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?professionalRole ?associatedArtist ?bandMember
WHERE {
  # Matt Colton's professional role and associated musical artist
  ?mattColton a dbo:Person ;
              foaf:name ""Matt Colton"" .
  
  OPTIONAL { 
    ?mattColton dbo:profession ?professionalRole .
  }
  
  OPTIONAL {
    ?mattColton dbp:associatedMusicalArtist ?associatedArtist .
  }

  # Luke Vibert's band membership
  ?lukeVibert a dbo:Person ;
              foaf:name ""Luke Vibert"" .

  OPTIONAL {
    ?lukeVibert dbo:bandMemberOf ?bandMember .
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
528,28,val,Give me the war of the military force of Battle of Pisagua and war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?battle ?war1 ?war2 ?force1 ?force2 ?leader
WHERE {
  # Battle of Pisagua and its military forces
  OPTIONAL {
    dbr:Battle_of_Pisagua dbo:militaryConflicts ?battle .
    ?battle dbo:participatingMilitaryUnit ?force1 .
  }

  # War associated with Orozimbo Barbosa
  OPTIONAL {
    dbr:Orozimbo_Barbosa dbo:associatedWithWar ?war1 .
    ?war1 dbo:participatingMilitaryUnit ?force2 .
  }

  # Force led by Narciso Campero
  OPTIONAL {
    dbr:Narciso_Campero dbo:commandedForce ?leader .
    ?leader dbo:participatedInBattleOrWar ?war2 .
  }
}
```",4,4,5,2,3,3,3,71,0,0,2,0,0.0,0
435,12,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of Greenwich Mean Time and territory administered from Reykjavík.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?articleContent ?gmtRegion ?administeredTerritory
WHERE {
  # Query for Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    ?constitution dbr:Iceland#Constitution_of_Iceland .
    ?section dbo:text ?articleContent .
    FILTER(CONTAINS(LCASE(?articleContent), ""article 62 section iv""))
  }

  # Query for regions using Greenwich Mean Time (GMT)
  OPTIONAL {
    ?region dbo:timeZone dbr:Greenwich_Mean_Time .
    ?region rdfs:label ?gmtRegion .
    FILTER(langMatches(lang(?gmtRegion), ""en""))
  }
  
  # Query for territories administered from Reykjavík
  OPTIONAL {
    ?territory dbo:administrativeCapital dbr:Reykjavík .
    ?territory rdfs:label ?administeredTerritory .
    FILTER(langMatches(lang(?administeredTerritory), ""en""))
  }
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
485,13,val,"Give me the birth place of Thomas Warner (poet) and entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?country WHERE {
  # Find Thomas Warner's birthplace
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .

  # Find countries in the same region as his birthplace
  ?birthPlace dbo:locatedIn ?region .
  ?country dbo:location ?region ;
           a dbo:Country .

  # Filter by Western European Time zone
  ?country dbp:timeZone ""Europe/London""^^xsd:string .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
487,11,val,Give me the country of the administration of Patricia McCoy and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . ?v2 <http://dbpedia.org/ontology/country> ?result . ?v2 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Patricia McCoy
  OPTIONAL {
    ?patricia a dbo:Politician ;
              foaf:name ""Patricia McCoy"" .
    ?patricia dbo:officeHolderOf ?position1 .
    ?position1 dbo:administrativeRegion ?region1 .
    ?region1 dbo:country ?country1 .
    BIND(?country1 AS ?country)
  }
  
  # Phil Scott
  OPTIONAL {
    ?phil a dbo:Politician ;
          foaf:name ""Phil Scott"" .
    ?phil dbo:officeHolderOf ?position2 .
    ?position2 dbo:administrativeRegion ?region2 .
    ?region2 dbo:country ?country2 .
    BIND(?country2 AS ?country)
  }
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
959,37,val,"Give me the native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . ?v1 <http://dbpedia.org/property/residence> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeCountry WHERE {
  # Identify Yoshikatsu Kawaguchi
  ?person a dbo:Politician ;
          foaf:name ""Yoshikatsu Kawaguchi""@en ;
          dbo:officeHolder dbr:2010_Japanese_House_of_Councillors_election ;
          dbo:manager dbr:Júbilo_Iwata_2013_season .

  # Get the residence of Yoshikatsu Kawaguchi
  ?person dbo:residence ?residence .

  # Find the country of the residence
  ?residence dbo:country ?nativeCountry .
}
```",4,6,5,3,2,3,3,71,0,0,3,0,0.0,0
314,15,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
# Query for the commander of the Spanish Civil War
SELECT ?person WHERE {
  ?person dbo:occupation dbr:Military_person .
  ?person dbo:nationality dbr:Spain .
  ?person dbo:wikiPageWikiLink dbr:Spanish_Civil_War .
}

UNION

# Hypothetical query for a person deceased at the headquarters of House of Sombrerete
SELECT ?deceased WHERE {
  ?event dbo:eventLocation dbr:House_of_Sombrerete_Headquarters .
  ?event dbo:deathPlace ?location .
  ?person dbo:causeOfDeath ?event .
  ?person rdfs:label ?deceased .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
701,19,val,Give me the parent of the child of Nefertari and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?commonParent WHERE {
  # Nefertari's children
  ?childNefertari dbo:parent dbr:Nefertari ;
                 dbo:spouse ?nefertariSpouse .
  
  # Henuttawy's parent
  ?henuttawyParent dbo:child dbr:Henuttawy .

  # Find the common parent between Nefertari's children and Henuttawy
  VALUES (?parent) {
    (dbr:Nefertari ?nefertariSpouse)
    (?henuttawyParent)
  }
  
  # Common parent of both sets
  ?commonParent dbo:child ?childNefertari .
  ?commonParent dbo:child dbr:Henuttawy .
}
```

This query assumes that the relationships are directly available in DBpedia and that Nefertari's spouse is also considered a parent. Adjustments might be necessary based on actual data availability.",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
391,38,val,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan and actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?v2 <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         dbo:starring dbr:Roz_Ryan ;
         dbo:genre ?genre .
  
  FILTER EXISTS { ?movie dbo:genre dbr:Television_series . }
  
  ?work dbo:director dbr:Michael_Ballhaus .
  ?work dbo:title ?title .

  ?movie rdfs:label ?title .
  
  ?movie dbo:starring ?actor .
}
```

This query does the following:

- Selects movies that have Roz Ryan as a starring actor.
- Ensures these movies are also classified under television series.
- Identifies works directed by Michael Ballhaus and matches their titles with the movie's title.
- Retrieves distinct actors from this specific movie.",4,8,5,2,2,3,3,71,0,0,1,0,0.0,0
142,7,val,Give me the birthplace of George Tokoro and entity in the region of Japan Standard Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthPlace ?jstEntity WHERE {
  # Find George Tokoro's birthplace
  OPTIONAL {
    ?person a dbo:Person ;
            foaf:name ""George Tokoro""@en .
    ?person dbo:birthPlace ?birthPlace .
  }

  # Find an entity in the Japan Standard Time region
  OPTIONAL {
    ?region dbp:timeZone ""Japan Standard Time"" .
    ?entity dbo:locatedIn ?region .
    BIND(?entity AS ?jstEntity)
  }
}
```",3,3,4,2,2,2,2,9,1,0,0,1.0,1.0,1.0
696,14,val,Give me the landmark at elevation of the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v2 . ?result <http://dbpedia.org/ontology/elevation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?elevation ?award WHERE {
  ?landmark dbo:elevation ?elevation .
  
  ?battle dbo:commander ?commander .
  ?battle dbr:Battle_of_Chishui_River .

  ?award dbo:recipient ?commander .
  
  ?landmark dbo:location ?battle .
}
```",3,3,4,3,1,3,2,20,0,0,1731,0,0.0,0
55,17,val,"Give me the band of Newsted and band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?memberBand ?memberName WHERE {
  # Step 1: Find Newsted's band
  ?newsted a dbo:MusicalArtist ;
           foaf:name ""Jason Newsted"" .
  
  ?newsted dbo:bandMemberOf ?band .

  # Step 2: Check if any member of that band is part of another band or group
  ?member a dbo:MusicalArtist ;
          dbo:bandMemberOf ?band ;
          dbo:bandMemberOf ?memberBand .

  # Step 3: Check if the member's band is associated with San Francisco Symphony
  ?memberBand dbo:location dbr:San_Francisco_Symphony .
  
  # Optional: Get names of members for clarity
  OPTIONAL { ?member foaf:name ?memberName }
}
```",3,5,4,2,2,2,3,28,0,0,3,0,0.0,0
54,42,val,"Give me the parent of Thado Minsaw of Prome and child of the father of Soe Min Wimala Dewi and predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfThadoMinsaw ?childOfFatherSoeMinWimalaDewi ?predecessorOfChildThihapate
WHERE {
  # Thado Minsaw of Prome's parent
  ?thadoMinsaw dbr:Thado_Minsaw_of_Prome .
  ?thadoMinsaw dbo:parent ?parentOfThadoMinsaw .

  # Soe Min Wimala Dewi's father and his child
  ?soeMinWimalaDewi dbr:Soe_Min_Wimala_Dewi .
  ?soeMinWimalaDewi dbo:father ?fatherSoeMinWimalaDewi .
  ?childOfFatherSoeMinWimalaDewi dbo:parent ?fatherSoeMinWimalaDewi .

  # Thihapate of Mohnyin's child who is an office holder and royalty, and their predecessor
  ?thihapate dbr:Thihapate_of_Mohnyin .
  ?childOfThihapate dbo:parent ?thihapate .
  ?childOfThihapate a dbo:OfficeHolder ;
                   a dbo:Royalty .
  ?predecessorOfChildThihapate dbo:successor ?childOfThihapate .

  # Ensure the same entity is returned
  FILTER (?parentOfThadoMinsaw = ?childOfFatherSoeMinWimalaDewi)
  FILTER (?childOfFatherSoeMinWimalaDewi = ?predecessorOfChildThihapate)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
378,23,val,Give me the war of the person born as the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v2 . ?v0 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find Carl Pontus Gahn's resource in DBpedia
  ?person a dbo:Person ;
          foaf:name ""Carl Pontus Gahn""@en .
  
  # Get his birth name
  OPTIONAL { ?person dbo:birthName ?birthName . }
  
  # Check if he was involved in any wars
  ?person dbo:participatedInWar ?war .
}
```",3,3,4,3,1,3,3,71,0,0,12,0,0.0,0
360,14,val,"Give me the writer of The Roaring Silence and native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/birthPlace> ?v2 . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?nativeSettlement WHERE {
  # Find the writer of ""The Roaring Silence""
  ?book dbo:title ""The Roaring Silence""@en .
  ?book dbo:author ?writer .

  # Find the death place of Winnie Madikizela-Mandela
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Get the native settlement of the death place
  ?deathPlace dbo:nativeName ?nativeSettlement .
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
391,34,val,"Give me the actor of All About the Andersons and native of the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/nickname> ?v2 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v2 . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the movie resource for ""All About the Andersons""
  ?movie rdfs:label ""All About the Andersons""@en .
  
  # Get actors associated with this movie
  ?movie dbo:starring ?actor .

  # Ensure the actor is a person
  ?actor rdf:type dbo:Person .

  # Find the native place of the actor, which should be Jackson, Tennessee
  ?actor dbo:nativePlace dbr:Jackson,_Tennessee .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,42,val,Give me the spouse of the person born as Ted Martin McGinley and professional in Actress and person born as the birth name of Gigi Rice.,"SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . ?v2 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Ted Martin McGinley (actor and comedian)
  OPTIONAL {
    VALUES ?person1 { dbr:Ted_McGinley }
    ?person1 dbo:spouse ?spouse .
  }

  # Gigi Rice
  OPTIONAL {
    VALUES ?person2 { dbr:Gigi_Rice }
    ?person2 dbo:spouse ?spouse .
  }
}
```",5,5,6,2,3,3,3,71,1,0,0,1.0,1.0,1.0
314,17,val,Give me the awardee of the award of Sergei Makovetsky and commander in Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?role 
WHERE {
  # Find the resource for Sergei Makovetsky
  ?person rdfs:label ""Sergei Makovetsky""@en .
  
  # Find awards received by Sergei Makovetsky
  ?person dbo:awardsReceived ?award .

  # Find his role in the Spanish Civil War
  OPTIONAL {
    ?event dbo:participants ?person ;
           rdfs:label ""Spanish Civil War""@en .
    ?person dbo:role ?role .
  }
}
```",3,3,4,2,2,2,3,28,0,0,2,0,0.0,0
360,13,val,"Give me the writer of the work, that is an album, of Dave Flett and native of Johannesburg.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?writer WHERE {
  ?album dbo:artist dbr:Dave_Flett ;
         dbo:composer ?writer .
  
  ?writer dbo:nationality dbr:South_Africa ;
          dbo:birthPlace dbr:Johannesburg .

}
```

This query does the following:
- It selects albums where Dave Flett is listed as an artist.
- It identifies the composer (or writer) of these albums.
- It checks if this person has a nationality linked to South Africa and was born in Johannesburg.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,33,val,"Give me the child of the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria and parent of Géza von Habsburg.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?childOfChild WHERE {
  # Step 1: Find Archduke Ladislaus Philipp's parent
  ?ladislaus a dbo:Person ;
            dbp:parent ?parent .

  FILTER (str(?ladislaus) = ""Archduke_Ladislaus_Philipp_of_Austria"")

  # Step 2: Find the child of this parent
  ?childOfParent a dbo:Person ;
                dbp:parent ?parent .

  # Step 3: Find the child's child who is royalty and parent of Géza von Habsburg
  ?childOfChild a dbo:Person, dbo:Royalty ;
               dbp:parent ?childOfParent ;
               dbp:child ?geza .

  FILTER (str(?geza) = ""Géza_von_Habsburg"")
}
```",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
427,32,val,Give me the party of the father of Lamberto Andreotti and reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v3 . ?v3 <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?fatherParty ?partyName WHERE {
  # Lamberto Andreotti's father
  dbr:Lamberto_Andreotti dbo:father dbr:Giovanni_Andreotti .
  
  # Giovanni Andreotti's political party affiliation
  OPTIONAL { 
    dbr:Giovanni_Andreotti dbo:politicalParty ?party .
    ?party rdfs:label ?fatherParty .
    FILTER (lang(?fatherParty) = 'it')
  }
  
  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
16,31,val,Give me the spouse of the person born as the birth name of Ted McGinley and professional in Actress.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  # Step 1: Find Ted McGinley's birth name
  dbr:Ted_McGinley dbo:birthName ?birthName .

  # Step 2: Find individuals with this birth name who are actresses
  ?person dbo:birthName ?birthName .
  ?person a dbo:Actress .

  # Step 3: Retrieve the spouse(s) of such individuals
  ?person dbo:spouse ?spouse .
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
232,28,val,Give me the native of London and child of the person born as John Devon Roland Pertwee and actor of Dog Soldiers (film).,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Find John Pertwee
  dbr:John_Pertwee a dbo:Person ;
                   foaf:name ""John Devon Roland Pertwee""@en .

  # Find his children who are natives of London
  ?child dbo:parent dbr:John_Pertwee ;
         dbo:nationality dbr:London ;
         dbo:birthPlace dbr:London .

  # Ensure the child acted in ""Dog Soldiers""
  ?film dbp:starring ?child .
  FILTER (CONTAINS(LCASE(str(?film)), 'dog soldiers'))
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
747,33,val,"Give me the band of the writer of the work, that is a song, of Amba Shepherd and person born on 1985-04-29.","SELECT ?result WHERE { ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . ?v0 <http://dbpedia.org/property/writer> ?v3 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthday ""1985-04-29""^^xsd:date .
  ?person dbo:birthName ?name .
  
  ?work dbo:composer ?person ;
        dbo:lyricist ?person ;
        dbp:title ?title .

  OPTIONAL { ?work dbo:performer ?band . }

  FILTER EXISTS {
    ?ambashepherd dbo:worksWritten ?work .
    dbr:Amba_Shepherd dbo:birthName ""Amba Shepherd"" .
  }
}
```

This query does the following:
- It looks for a person with the specified birthdate.
- It checks if this person is associated as a composer or lyricist of a work by Amba Shepherd.
- It attempts to find any band associated with that work.",4,5,5,3,2,3,3,71,0,0,1,0,0.0,0
959,40,val,"Give me the manager of 2013 Júbilo Iwata season and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958 and native of Japan.","SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v3 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v3 <http://dbpedia.org/ontology/almaMater> ?v1 . ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager ?almaMater WHERE {
  # Find the manager of Júbilo Iwata in 2013
  ?team dbo:coach ?manager .
  ?manager dbo:birthYear ""1958""^^xsd:gyear ;
           dbo:nationality dbr:Japan .

  # Ensure the team is Júbilo Iwata and the season is 2013
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER(CONTAINS(LCASE(?teamLabel), ""jubilo iwata""))
  
  # Find the alma mater of the manager
  ?manager dbo:almaMater ?almaMater .

  # Ensure the alma mater is a university, organization, and educational institution
  ?almaMater rdf:type dbo:University ;
             rdf:type dbo:Organisation ;
             rdf:type dbo:EducationalOrganization .
}
```",5,9,6,3,3,3,3,71,0,0,1,0,0.0,0
378,34,val,"Give me the war of the person born as the birth name of Carl Pontus Gahn and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ?v2 . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  VALUES ?person (dbr:C._W._Scheele dbr:Louis_des_Balbes_de_Berton_de_Crillon)
  
  OPTIONAL { 
    ?person dbo:birthName ?birthName .
    FILTER (?birthName IN (""Carl Wilhelm Scheele"", ""Louis des Balbes de Berton de Crillon""))
  }
  
  OPTIONAL {
    ?person dbo:famousFor ?fame .
    ?fame dbo:wikiPageRedirects ?war .
    FILTER (?war IN (dbr:Napoleonic_Wars dbr:Seven_Years'_War))
  }
}
```",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
485,12,val,Give me the birth place of Thomas Warner (poet) and entity in Nottinghamshire and entity in United Kingdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?nottinghamshireLabel ?ukLabel
WHERE {
  # Thomas Warner (poet)
  dbr:Thomas_Warner_(poet) dbo:birthPlace ?birthPlace .
  
  # Nottinghamshire
  dbr:Nottinghamshire a dbo:AdministrativeRegion ;
                     rdfs:label ?nottinghamshireLabel .

  # United Kingdom
  dbr:United_Kingdom a dbo:Country ;
                     rdfs:label ?ukLabel .
}
```",3,3,4,1,3,2,3,28,0,0,1,0,0.0,0
767,36,val,"Give me the entity in Baden-Württemberg and reference to the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v0 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://dbpedia.org/property/alterEgo> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entityInBadenWurttemberg ?fictionalCharacter WHERE {
  # Find Matthew Burland
  ?matthewBurland dbo:birthName ""Matthew Burland""@en .
  
  # Check if he has a fictional alter ego
  OPTIONAL { 
    ?matthewBurland dbo:fictionalAlterEgo ?fictionalCharacter .
  }
  
  # Find the entity in Baden-Württemberg related to the fictional character
  ?entityInBadenWurttemberg dbo:location dbr:Baden-Württemberg ;
                           dbo:associatedWith ?fictionalCharacter .
}
```

This query attempts to:

- Identify Matthew Burland using his birth name.
- Check if there is a fictional alter ego associated with him.
- Find an entity in Baden-Württemberg linked to this fictional character.

Please note that the exact properties and relationships might need adjustment based on the actual data available in DBpedia. The query assumes certain properties (`dbo:birthName`, `dbo:fictionalAlterEgo`, `dbo:location`, `dbo:associatedWith`) which may not exist or be named differently.",4,5,5,3,2,3,3,71,0,0,7,0,0.0,0
959,19,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v2 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . ?v2 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/team> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  # Find Eiji Ōtsuka's resource
  dbr:Eiji_Ōtsuka dbo:almaMater ?university .

  # Ensure the university is in Japan
  ?university dbo:country dbr:Japan .

  # Ensure the university is classified as an organization and a university
  ?university rdf:type dbo:University .
  ?university rdf:type dbo:Organisation .
}
```",3,7,4,2,2,3,3,71,0,1,84,0.0,0.0,0
487,13,val,Give me the country of the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . ?v1 <http://dbpedia.org/ontology/country> ?result . ?v1 <http://dbpedia.org/property/leader> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person dbo:birthday ""1955-01-26""^^xsd:date .
  ?person dbo:birthPlace ?birthPlace .
  ?administration dbo:headOfState ?person ;
                  dbo:country ?country .
}
```

This query assumes that the person is a head of state, which might not always be true. If you have more context about the individual (e.g., name), it would help refine the query further.",3,3,4,3,1,3,2,20,0,0,1,0,0.0,0
820,15,val,Give me the professional in the award of the author of Understanding Comics and child of Jack Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?professionalRole
WHERE {
  # Scott McCloud is the author of ""Understanding Comics""
  dbr:Scott_McCloud dbo:author dbr:Understanding_Comics .

  # Scott McCloud is a child of Jack Schwartzman
  dbr:Scott_McCloud dbo:childOf dbr:Jack_Schwartzman .

  # Find awards related to Scott McCloud
  ?award dbo:recipient dbr:Scott_McCloud .
  
  # Get the professional role in the award context
  ?award dbo:profession ?professionalRole .
}
```",4,4,5,3,2,3,2,20,0,0,1,0,0.0,0
827,15,val,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?v0 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherOfWilliamErnest WHERE {
  # Step 1: Find Charles Alexander's parent
  ?charlesAlexander a dbo:GrandDuke ;
                   dbp:father ?parentOfCharlesAlexander .

  # Step 2: Identify the children of this parent who are royalty
  ?childOfParent a dbo:RoyalPerson ;
                 dbp:father ?parentOfCharlesAlexander .

  # Step 3: Find William Ernest and his father
  wd:Q1234567 a dbo:GrandDuke ;  # Replace with actual DBpedia ID for William Ernest
                  dbp:father ?fatherOfWilliamErnest .

  # Step 4: Ensure the child of Charles Alexander's parent is also a child of William Ernest's father
  ?childOfParent dbp:father ?fatherOfWilliamErnest .
}
```

**Notes:**
- Replace `wd:Q1234567` with the actual DBpedia resource identifier for William Ernest, Grand Duke of Saxe-Weimar-Eisenach.
- Ensure that the properties used (`dbo:father`, `dbp:father`) are correct and available in DBpedia. Adjust them if necessary based on the ontology.",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
391,26,val,"Give me the actor of the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?v2 . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v2 <http://dbpedia.org/ontology/starring> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Sherry Hormann's spouse
  ?spouse a dbo:Spouse;
          dbo:spouse dbr:Sherry_Hormann.

  # The claim to fame (work) of the spouse
  ?work dbo:performer ?spouse;
        a dbo:Film; # Assuming it's a film, adjust if necessary

  # Actor of that work
  ?work dbo:actor ?actor.
}
```

This query assumes:
- Sherry Hormann has a spouse listed in DBpedia with the `dbo:Spouse` relationship.
- The spouse's claim to fame is a film (or another type of work, which you can adjust).
- The actor information is available under the `dbo:actor` property.",3,4,4,3,1,3,3,71,0,0,20,0,0.0,0
659,19,val,"Give me the commander in Battle of Leipzig and commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> ?result . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleCommander ?wellingtonCommander WHERE {
  # Find the commander of the Battle of Leipzig
  ?battleEvent a dbo:MilitaryEngagement ;
               dbo:commander ?battleCommander .
  FILTER (str(?battleEvent) = ""Battle_of_Leipzig"")

  # Find Arthur Wellesley, 1st Duke of Wellington's command
  dbr:Arthur_Wellesley,_1st_Duke_of_Wellington dbo:commanded ?wellingtonCommander .

}
```

This query does the following:
- It selects commanders from two different contexts: one for the Battle of Leipzig and another for Arthur Wellesley, 1st Duke of Wellington.
- The `FILTER` clause ensures that we are specifically looking at the Battle of Leipzig by matching its DBpedia resource identifier.",3,3,4,2,2,3,3,71,0,0,19,0,0.0,0
617,33,val,"Give me the child of Antiochus III the Great and spouse of the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v0 <http://dbpedia.org/ontology/child> ?v3 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v0 . ?v3 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
    # Step 1: Identify Antiochus III the Great's child
    ?antiochusIII a dbo:Monarch ;
                  foaf:surname ""Antiochus III"" ;
                  dbo:child ?childOfAntiochusIII .

    # Step 2: Find Antiochus (son of Antiochus III) and his successor
    ?childOfAntiochusIII a dbo:Monarch ;
                        foaf:name ""Antiochus"" ;
                        dbo:successor ?successor .

    # Identify the child of the successor
    ?successor a dbo:Monarch ;
               dbo:child ?childOfSuccessor .

    # Step 3: Find the spouse of this child
    ?childOfSuccessor dbo:spouse ?spouse .
    
    FILTER (?spouse a dbo:RoyalPerson)
}
```",4,5,5,3,2,3,3,71,0,0,4,0,0.0,0
617,12,val,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary and child of Doubravka of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Richeza of Poland, Queen of Hungary
  ?richeza a dbo:Person ;
           dbp:name ""Richeza of Poland"" ;
           dbp:title ""Queen of Hungary""@en .
  
  # Step 2: Find her father
  ?richeza dbo:father ?father .

  # Step 3: Determine if her father holds a royal title
  OPTIONAL { ?father dbo:title ?title . FILTER(CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) }

  # Step 4: Retrieve the parent of this royal father
  ?father dbo:mother ?parent .
}
```",3,4,4,2,2,3,2,20,0,0,1,0,0.0,0
281,29,val,"Give me the war of Beauchamp Seymour, 1st Baron Alcester and entity in the birth place, that is a country, of Bob Heffron and war of New Zealand Army.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v3 . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?warOfBeauchampSeymour ?countryOfBirthBobHeffron ?newZealandWar
WHERE {
  # War involving Beauchamp Seymour, 1st Baron Alcester
  dbr:Beauchamp_Seymour,_1st_Baron_Alcester dbo:militaryConflict ?warOfBeauchampSeymour .

  # Birthplace country of Bob Heffron
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .
  ?birthPlace dbo:country ?countryOfBirthBobHeffron .

  # War associated with the New Zealand Army
  ?newZealandWar dbo:militaryBranch dbr:New_Zealand_Army .
}",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
959,35,val,"Give me the manager of the team of Takashi Sekizuka and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/team> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Takashi Sekizuka's team
  ?team dbo:member dbr:Takashi_Sekizuka .
  
  # Manager of the team
  ?team dbo:coach ?manager .

  # Eiji Ōtsuka's alma mater
  ?almaMater dbo:alumni dbr:Eiji_Ōtsuka ;
             a dbo:University ;
             dbo:country dbr:Japan .

  # The manager must have attended the same university as Eiji Ōtsuka
  ?manager dbo:almaMater ?almaMater .
}
```",4,8,5,2,2,3,3,71,0,0,2,0,0.0,0
55,13,val,"Give me the band member of the producer, that is a band, of Used to Love Her and band member of Metallica.",SELECT ?result WHERE { <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember WHERE {
  # Find the producer of ""Used to Love Her""
  ?song dbo:producer ?producer .
  
  FILTER (str(?song) = ""Used_to_Love_Her"")

  # Check if this producer is a band
  ?producer dbo:type dbr:Band .

  # Get members of this band
  ?bandMember dbo:memberOf ?producer .

  # Check if the same person is also a member of Metallica
  ?metallicaMember dbo:memberOf dbr:Metallica .
  
  FILTER (?bandMember = ?metallicaMember)
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
182,13,val,Give me the war of Jagath Dias and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event1Label ?event2Label WHERE {
  # Battle of Gannoruwa (War of Jagath Dias)
  dbr:Battle_of_Gannoruwa dbo:wikiPageRedirects ?redirect1 .
  OPTIONAL { ?redirect1 rdfs:label ?event1Label . FILTER(LANG(?event1Label) = ""en"") }

  # Conflict related to Zahran Hashim
  dbr:Zahran_Hashim dbo:occupation ?occupation .
  ?occupation dbo:wikiPageRedirects ?redirect2 .
  OPTIONAL { ?redirect2 rdfs:label ?event2Label . FILTER(LANG(?event2Label) = ""en"") }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
435,17,val,"Give me the work of Article 62, Section IV of Constitution of Iceland and region of the time zone in Bombali Shebora Chiefdom.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v1 . ?result <http://dbpedia.org/ontology/timeZone> ?v1 . }","```sparql
# Query to find information about Article 62, Section IV of the Constitution of Iceland
SELECT ?article ?description WHERE {
  ?article a dbo:LegalDocument .
  ?article dbo:country dbr:Iceland .
  ?article rdfs:label ""Article 62, Section IV""@en .
  OPTIONAL { ?article dbo:description ?description . }
}
```

```sparql
# Query to find the time zone region of Bombali Shebora Chiefdom
SELECT ?chiefdom ?timezone WHERE {
  ?chiefdom a dbo:AdministrativeDivision ;
            rdfs:label ""Bombali Shebora Chiefdom""@en .
  OPTIONAL { ?chiefdom dbo:timeZone ?timezone . }
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
617,34,val,"Give me the parent of Nysa (wife of Pharnaces I of Pontus) and child of the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v2 . <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v2 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  # Find Nysa and her parent
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en .
  
  ?pharnacesI a dbo:Person ;
              foaf:name ""Pharnaces I of Pontus""@en ;
              dbo:spouse ?nysa .

  ?parent a dbo:Person ;
          dbo:child ?nysa .

  # Find the grandchild of Nysa's parent
  ?grandchild a dbo:Person ;
              dbo:child ?child .
  
  ?child a dbo:Person ;
         dbo:child ?nysa .

  # Ensure the grandchild is royalty
  ?grandchild dbo:royalty ""true""^^xsd:boolean .

  # Find successor of Antiochus II Theos and ensure they are royalty
  ?antiochusII a dbo:Person ;
               foaf:name ""Antiochus II Theos""@en .
  
  ?successor a dbo:Person ;
             dbo:succeededBy ?antiochusII ;
             dbo:royalty ""true""^^xsd:boolean .

}
```",4,6,5,3,2,3,3,71,0,0,2,0,0.0,0
54,39,val,"Give me the parent of Thado Minsaw of Prome and predecessor of the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/successor> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfThadoMinsaw ?predecessorOfChild
WHERE {
  # Find Thado Minsaw of Prome
  ?thadoMinsaw a dbo:Monarch ;
               foaf:name ""Thado Minsaw""@en ;
               dbo:country dbr:Prome_Region .

  # Find his parent
  ?parentOfThadoMinsaw dbo:child ?thadoMinsaw .

  # Find Thihapate of Mohnyin
  ?thihapate a dbo:Monarch ;
             foaf:name ""Thihapate""@en ;
             dbo:country dbr:Mohnyin_Region .

  # Find the child of Thihapate who is an office holder and royalty
  ?childOfThihapate dbo:parent ?thihapate ;
                   a dbo:Monarch, dbo:OfficeHolder .

  # Find the predecessor of this child
  ?predecessorOfChild dbo:succeededBy ?childOfThihapate .
}
```",4,6,5,3,2,3,3,71,0,0,1,0,0.0,0
294,19,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v2 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?entity WHERE {
  # Find politicians who received the Distinguished Service Medal (U.S. Army)
  ?politician a dbo:Politician ;
              dbo:awardsReceived dbr:Distinguished_Service_Medal_(United_States_Army) .

  # Ensure their resting place is in Nashville, Tennessee
  ?politician dbo:deathPlace ?restingPlace .
  ?restingPlace dbo:location dbr:Nashville,_Tennessee .

  # Find Edwin A. Keeble's resting place
  dbr:Edwin_A._Keeble dbo:deathPlace ?keeblesRestingPlace .

  # Ensure the resting places match
  FILTER (?restingPlace = ?keeblesRestingPlace)

  # Return the entity (resting place)
  BIND(?restingPlace AS ?entity)
}",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,22,val,Give me the reference to the alter ego of Black Hood and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo ?entityInBadenWuerttemberg WHERE {
  # Find the alter ego of Black Hood
  ?character rdfs:label ""Black Hood""@en .
  ?character dbo:alias ?alterEgo .

  # Find an entity in Baden-Württemberg
  ?entity dbr:location <http://dbpedia.org/resource/Baden-Wuerttemberg> ;
          rdf:type dbo:Place .
  
  FILTER (lang(?alterEgo) = 'en')
}
```

This query does the following:
- Searches for a character labeled ""Black Hood"" and retrieves its alias, which is assumed to be the alter ego.
- Finds entities located in Baden-Württemberg.",3,3,4,2,2,3,3,71,0,0,7,0,0.0,0
547,24,val,Give me the resting place of Alan Cunningham and resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v2 . ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  # Alan Cunningham
  { 
    VALUES ?person { dbr:Alan_Cunningham_(explorer) }
    OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
    OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
  }

  # Actor of ""Enemy at the Door""
  UNION
  {
    ?film dbo:starring ?actor .
    VALUES ?film { dbr:Enemy_at_the_Door_(film) }
    OPTIONAL { ?actor rdfs:label ?nameActor . FILTER (lang(?nameActor) = 'en') }
    OPTIONAL { ?actor dbo:placeOfBurial ?restingPlaceActor . }
  }
}
```",3,3,4,2,2,3,3,71,0,0,2,0,0.0,0
391,24,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and actor of All About the Andersons.",SELECT ?result WHERE { ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v2 <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find Michael Ballhaus' claim to fame (Goodfellas)
  dbr:Goodfellas dbo:director dbr:Martin_Scorsese .
  
  # Get actors from Goodfellas
  ?goodfellasActor dbo:starring dbr:Goodfellas .

  # Check if the actor also appeared in All About the Andersons
  ?andersonsActor dbo:starring dbr:All_About_the_Andersons .
  
  # Ensure it's the same person
  FILTER (?goodfellasActor = ?andersonsActor)

  # Bind the actor to a variable
  BIND(?goodfellasActor AS ?actor)
}
```",3,4,4,2,2,3,3,71,0,0,1,0,0.0,0
547,35,val,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George and resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v2 . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?individual (GROUP_CONCAT(?restingPlace; separator="", "") AS ?restingPlaces)
WHERE {
  # Find the awardee of Knight Grand Cross of the Order of St Michael and St George
  {
    SELECT DISTINCT ?individual WHERE {
      ?award dbo:awardee ?individual .
      ?award dbp:name ""Knight Grand Cross of the Order of St Michael and St George"" .
    }
  }

  UNION

  # Find a child of James Burton (property developer)
  {
    SELECT DISTINCT ?child WHERE {
      ?parent foaf:name ""James Burton (property developer)"" .
      ?parent dbo:child ?child .
    }
  }

  # Get the resting place for each individual found
  OPTIONAL { ?individual dbo:placeOfBurial ?restingPlace . }
}
GROUP BY ?individual
```",4,4,5,2,2,3,3,71,0,0,1,0,0.0,0
801,40,val,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song) and professional in the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . ?v2 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> ?v1 . ?v2 <http://dbpedia.org/property/alterEgo> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Chris Taylor as a music producer
  ?chrisTaylor a dbo:MusicProducer ;
               foaf:name ""Chris Taylor"" .

  # Westside Story (song) and its associated artist and producer
  ?westsideStory dbr:Westside_Story_(song) ;
                 dbo:musicalArtist ?artist ;
                 dbo:producer ?producer .

  # The Shadow's alter ego concept
  ?shadow a dbo:FictionalCharacter ;
          foaf:name ""The Shadow"" .
  
  # Linking the producer of Westside Story to Chris Taylor
  ?producer = ?chrisTaylor .

  # Assuming the artist is also linked to The Shadow's alter ego concept
  OPTIONAL { ?artist dbo:alterEgoOf ?shadow }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
778,15,val,"Give me the author of Chroot and entity in the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> ?v1 . ?v0 <http://dbpedia.org/property/awards> ?v1 . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author ?awardEntity WHERE {
  # Find the author of Chroot
  ?chroot dbo:wikiPageWikiLink* dbr:Chroot .
  
  # Ensure the person is an American
  ?person dbo:nationality dbr:United_States_of_America ;
          dbo:wikiPageRedirects ?chroot .

  # Check if they have received the Wolf Prize in Medicine
  ?award dbo:prize dbp:name ""Wolf Prize in Medicine""@en .
  ?award dbo:recipient ?person .
  
  # Get the award entity and author name
  BIND(?person AS ?author)
  BIND(?award AS ?awardEntity)
}
```",4,5,5,3,2,3,2,20,0,0,1,0,0.0,0
92,41,val,"Give me the band member of the reference, that is an artist, to Nevermore and associated musical artist of the person born, that is an artist, as Jim Sheppard and band of Joseph Michael.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v2 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?v4 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v4 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?bandMember ?associatedArtist ?josephsBand
WHERE {
  # Find Jim Sheppard's associated musical artist
  dbr:Jim_Sheppard dbo:musicalArtist ?associatedArtist .

  # Find Joseph Michael's band
  dbr:Joseph_Michael dbo:memberOf ?josephsBand .

  # Find Nevermore members who are also artists
  {
    SELECT DISTINCT ?bandMember
    WHERE {
      dbr:Nevermore dbo:member ?bandMember .
      ?bandMember a dbo:Artist .
    }
  }

  FILTER (?associatedArtist = ?bandMember)
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
959,43,val,"Give me the member of University of Tsukuba and native of the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election and manager of 2013 Júbilo Iwata season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/residence> ?v3 . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/birthPlace> ?v3 . <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Step 1: Identify the leader of the 2010 Japanese House of Councillors election
  ?leader dbo:electionLeaderOf dbr:Japanese_House_of_Councillors_election,_2010 .
  
  # Step 2: Determine their country of residence
  ?leader dbp:residenceCountry ?country .

  # Step 3: Find members of the University of Tsukuba who are native to that country
  ?person dbo:almaMater dbr:University_of_Tsukuba ;
          dbo:nationality ?country .

  # Step 4: Check if any of these individuals were managers of Júbilo Iwata in the 2013 season
  OPTIONAL { 
    ?person dbo:managerOfSeason dbr:Júbilo_Iwata_season,_2013 .
  }

  FILTER EXISTS { ?person dbo:managerOfSeason dbr:Júbilo_Iwata_season,_2013 }
}
```",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
994,31,val,Give me the associated musical artist of the associated musical artist of the reference to Watchtower and associated musical artist of Red Tide (band).,"SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?finalArtist WHERE {
  # Step 1: Find associated musical artist of ""Watchtower""
  ?watchtower dbo:musicalArtist ?artist1 .
  FILTER(STR(?watchtower) = ""http://dbpedia.org/resource/Watchtower_(band)"")

  # Step 2: Find associated musical artist of the result from step 1
  ?artist1 dbo:musicalArtist ?artist2 .

  # Step 3: Find associated musical artist of ""Red Tide (band)""
  ?redTide dbo:musicalArtist ?artist3 .
  FILTER(STR(?redTide) = ""http://dbpedia.org/resource/Red_Tide_(band)"")

  # Step 4: Combine results to find a common or related entity
  ?artist2 rdfs:label ?finalArtistLabel .
  ?artist3 rdfs:label ?finalArtistLabel .

  FILTER(LANG(?finalArtistLabel) = 'en')
}
ORDER BY ?finalArtist",4,4,5,3,2,3,3,71,0,0,3,0,0.0,0
314,19,val,Give me the commander in Spanish Civil War and person deceased at the headquarter of House of Sombrerete and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v2 . <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:militaryConflict dbr:Spanish_Civil_War .
  ?person dbo:deathPlace dbr:House_of_Sombrerete .
  ?person dbo:honourReceived ?award .
  FILTER (strafter(str(?award), ""Award_"") = ""30"")
  
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
294,15,val,"Give me the entity in Nashville, Tennessee and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity WHERE {
  ?person dbo:nationality dbr:United_States ;
          dbo:occupation dbr:Politician ;
          dbo:awardReceived dbr:Distinguished_Service_Medal_(U.S._Army) .
  
  ?place dbp:location dbr:Nashville,_Tennessee ;
         dbo:restingPlaceOf ?person .

  ?entity rdf:type dbo:Place ;
          rdfs:label ?label ;
          owl:sameAs ?place .
}
```

This query does the following:
- Selects entities that are places (`dbo:Place`).
- Filters individuals who are U.S. politicians and have received the Distinguished Service Medal (U.S. Army).
- Ensures these individuals' resting place is in Nashville, Tennessee.",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
294,13,val,"Give me the resting place of Edwin A. Keeble and resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  # Edwin A. Keeble's resting place
  OPTIONAL {
    dbr:Edwin_A._Keeble dbo:finalBurialPlace ?keeblesRestingPlace .
    BIND(?keeblesRestingPlace AS ?restingPlace)
  }
  
  # Politician awardee of Distinguished Service Medal (U.S. Army)
  OPTIONAL {
    ?person dbo:award dbr:Distinguished_Service_Medal_(United_States_Army) ;
            a dbo:Person ;
            dbp:occupation ?occupation .
    FILTER(CONTAINS(LCASE(?occupation), ""politician""))
    ?person dbo:finalBurialPlace ?restingPlace .
  }
}
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
184,28,val,Give me the child of Archduke Joseph August of Austria and parent of Archduchess Ilona of Austria and parent of the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Archduke Joseph August of Austria
  ?archduke a dbo:Person ;
            foaf:name ""Joseph August, Archduke of Austria"" ;
            dbo:spouse ?spouse .

  # His children
  ?archduke dbo:child ?child .

  # The child is a parent of Archduchess Ilona of Austria
  ?child dbo:parent dbr:Ilona_of_Austria .

  # The child is also a parent of someone native to Budapest
  ?child dbo:parent ?budaParent .
  ?budaParent dbo:nativePlace dbr:Budapest .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
767,40,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and alma mater of Carl L. Nippert and reference to .","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?settlement WHERE {
  # Dustin Lynch's place of origin or residence
  ?dustin a dbo:MusicalArtist ;
          foaf:name ""Dustin Lynch"" .
  
  OPTIONAL { ?dustin dbo:hometown ?hometown . }
  OPTIONAL { ?dustin dbo:birthPlace ?birthplace . }

  # Carl L. Nippert's alma mater
  ?carl a dbo:EducationalInstitution ;
        foaf:name ""University of Kentucky"" .

  # Find the settlement related to both
  OPTIONAL { ?hometown rdfs:label ?settlementLabel .
             FILTER (lang(?settlementLabel) = 'en') }
  OPTIONAL { ?birthplace rdfs:label ?settlementLabel .
             FILTER (lang(?settlementLabel) = 'en') }

  # Administrative connection
  OPTIONAL { ?admin dbo:location ?settlement ;
               a dbo:AdministrativeRegion . }

  FILTER (?hometown = ?settlement || ?birthplace = ?settlement)
}
```",5,6,6,3,3,3,3,71,0,0,1,0,0.0,0
179,12,val,Give me the parent of the child of Bhumibol Adulyadej and person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent
WHERE {
  # Bhumibol Adulyadej and Sirikit
  ?bhumibol a dbo:Person ;
            foaf:name ""Bhumibol Adulyadej""@en .
  ?sirikit a dbo:Person ;
           foaf:name ""Sirikit Kitiyakara""@en .

  # Their child
  ?child dbo:parent ?bhumibol ;
         dbo:parent ?sirikit .

  # The parent of the child (which should be Bhumibol or Sirikit)
  ?parent dbo:child ?child .
}
```",3,3,4,2,2,3,2,20,0,0,1,0,0.0,0
488,34,val,"Give me the administration of Emperor Go-Yōzei and birth place of the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPeriod ?birthPlace
WHERE {
  # Get administration period of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reignStart ?startYear .
  dbr:Emperor_Go-Yōzei dbo:reignEnd ?endYear .
  BIND(CONCAT(?startYear, "" - "", ?endYear) AS ?administrationPeriod)

  # Get birthplace of Saitō Hajime
  dbr:Saitō_Hajime dbo:birthPlace ?birthPlace .

  OPTIONAL {
    # Ensure the military conflict is related to Saitō Hajime
    ?event dbo:participant dbr:Saitō_Hajime .
    FILTER (STRSTARTS(STR(?event), ""http://dbpedia.org/resource/Battle_of_Shiroyama""))
  }
}
```",4,7,5,3,2,3,3,71,0,0,1,0,0.0,0
488,30,val,Give me the death place of Tokugawa Ieyasu and administration of the father of Emperor Go-Mizunoo and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?tokugawaDeathPlace ?goYozeiReign ?enomotoBirthPlace
WHERE {
  # Tokugawa Ieyasu's death place
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?tokugawaDeathPlace .

  # Emperor Go-Yōzei's reign (father of Emperor Go-Mizunoo)
  dbr:Emperor_Go-Yozei dbo:reign ?goYozeiReign .

  # Enomoto Takeaki's birthplace
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .
}
```",4,4,5,2,3,3,3,71,0,0,1,0,0.0,0
184,39,val,Give me the parent of the child of the parent of Archduchess Margaret of Austria (born 1925) and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?v1 <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentOfChild
WHERE {
    # Step 1: Identify Archduchess Margaret of Austria (born 1925)
    ?margaret a dbo:Person ;
              foaf:name ""Margaret of Austria"" ;
              dbo:birthDate ?birthDate .
    FILTER(YEAR(?birthDate) = 1925)

    # Step 2: Find her parent
    ?parentOfMargaret dbo:child ?margaret .

    # Step 3: Determine the child of this parent (other than Margaret)
    ?childOfParent a dbo:Person ;
                   dbo:parent ?parentOfMargaret .
    FILTER(?childOfParent != ?margaret)

    # Step 4: Identify Archduke Joseph August of Austria
    ?josephAugust a dbo:Person ;
                  foaf:name ""Joseph August of Austria"" .

    # Step 5: Find his child
    ?childOfJoseph dbr:Joseph_August_of_Austria dbo:child .

    # Step 6: Find the parent of the child identified in steps 3 and 5
    OPTIONAL { ?parentOfChild dbo:child ?childOfParent . }
    OPTIONAL { ?parentOfChild dbo:child ?childOfJoseph . }

    FILTER(?parentOfChild != ?parentOfMargaret)
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
16,43,val,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley and professional in the profession of the actor of Unnatural (TV series).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ?v4 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?spouse ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Georgeanne Marie Rice""@en ;
          dbp:birthName ""Georgeanne Marie Rice"" .
  
  ?person dbo:spouse ?spouse .
  ?spouse foaf:name ""Ted McGinley""@en .

  OPTIONAL { 
    ?person dbo:profession ?profession .
    FILTER EXISTS {
      ?work dbo:title ""Unnatural (TV series)""@en ;
            dbo:actor ?person .
    }
  }
}
```",5,5,6,3,3,3,3,71,0,0,1,0,0.0,0
488,32,val,"Give me the birth place of the commander in Boshin War and death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v3 . <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v1 . ?v3 <http://dbpedia.org/ontology/deathPlace> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceOfCommander ?deathPlaceOfPoliticianFather
WHERE {
  # Find Saigō Takamori's birthplace
  dbr:Saigō_Takamori dbo:birthPlace ?birthPlaceOfCommander .

  # Find Yūki Hideyasu and his father
  dbr:Yūki_Hideyasu dbo:father ?politicianFather .
  
  # Ensure the father is a politician
  ?politicianFather rdf:type dbo:Politician .

  # Find the death place of Yūki Hideyasu's father
  ?politicianFather dbo:deathPlace ?deathPlaceOfPoliticianFather .
}
```",4,5,5,2,2,3,3,71,0,0,1,0,0.0,0
617,14,val,"Give me the parent of the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v2 <http://dbpedia.org/property/father> ?v0 . ?v2 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandfather ?referenceParent WHERE {
  # Richeza of Poland and her father
  ?richeza dbo:parent ?father .
  FILTER (str(?richeza) = ""Richeza_of_Poland"")

  # Father's parent who is royalty
  ?father dbo:parent ?grandfather .
  ?grandfather a dbo:Monarch .

  # Reference person and their royal parent
  ?reference dbo:parent ?referenceParent .
  ?referenceParent a dbo:Monarch .

  # Assuming the reference is related to Richeza in some way, e.g., through family or historical context
  # This part might need more specific information about who the ""reference"" is.
  # For now, we assume it's another person connected historically or genealogically.

  # Example: If the reference is a known relative or historical figure related to Richeza
  ?richeza dbo:spouse|dbo:childOf ?reference .
}
```

This query assumes that you have some context about who the ""reference"" might be. You may need to adjust the query based on additional information about this reference person.",3,5,4,3,1,3,2,20,0,0,4,0,0.0,0
435,16,val,Give me the work of the author of Iceland and territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v2 . ?result <http://dbpedia.org/property/author> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Identify Jules Verne as the author of a work related to Iceland
  ?author dbo:nationality dbr:French; 
          foaf:name ""Jules Verne""@en.
  
  ?book dbo:author ?author;
        dbo:wikiPageWikiLink dbr:Iceland.

  # Find works by Jules Verne
  ?work dbo:author ?author.
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
182,19,val,Give me the war of Jagath Dias and entity in Sri Lanka and war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v2 . ?v2 <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war1 ?entity1 ?war2 ?entity2 WHERE {
  # Jagath Dias and the Sri Lankan Civil War
  OPTIONAL {
    ?person rdfs:label ""Jagath Dias""@en.
    ?person dbo:nationality dbr:Sri_Lanka.
    ?person dbo:occupation dbr:Military_officer.
    ?war1 dbo:participatedIn ?person.
    ?war1 rdfs:label ?labelWar1.
    FILTER(LANG(?labelWar1) = ""en"").
  }

  # Zahran Hashim and the 2019 Sri Lanka Easter bombings
  OPTIONAL {
    ?author rdfs:label ""Zahran Hashim""@en.
    ?event dbo:perpetrator ?author.
    ?event rdfs:label ?labelEvent.
    FILTER(LANG(?labelEvent) = ""en"").
    ?war2 dbo:participatedIn ?author.
    ?war2 rdfs:label ?labelWar2.
    FILTER(LANG(?labelWar2) = ""en"").
  }
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
404,25,val,"Give me the parent of Prince Ernest Augustus of Hanover (born 1914) and child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/parent> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Prince Ernest Augustus of Hanover (born 1914)
  ?person a dbo:Person ;
          rdfs:label ""Prince Ernest Augustus of Hanover""@en ;
          dbo:birthDate ?birthDate .
  
  FILTER(YEAR(?birthDate) = 1914)

  # Get his parent
  ?person dbo:parent ?parent .

  # Ensure the parent is a child of Ernest Augustus, Duke of Brunswick
  ?parent dbo:child dbr:Ernest_Augustus,_Duke_of_Brunswick .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
161,19,val,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco and military force of Spanish Civil War.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForceFranco ?militaryForceSpanishCivilWar
WHERE {
  # Francisco Franco and his military force
  dbr:Francisco_Franco dbo:militaryService [
    a dbo:MilitaryUnit ;
    rdfs:label ?militaryForceFranco .
  ] .

  # Spanish Civil War and its military forces
  dbr:Spanish_Civil_War dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:opposingMilitaryForce [
      a dbo:MilitaryUnit ;
      rdfs:label ?militaryForceSpanishCivilWar .
    ] .
  ]
}
```",3,6,4,2,2,3,3,71,0,0,514,0,0.0,0
10,19,val,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton and band member of Luke Vibert and professional in .","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?v3 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . ?v3 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Artist ;
          foaf:name ""Matt Colton"" ;
          dbo:birthPlace ?birthPlace ;
          dbo:memberOfBand ?band .
  
  ?band dbo:bandMember ?vibert ;
        dbo:bandMember dbr:Luke_Vibert .

  ?artist dbo:associatedMusicalArtist ?person .
}
```

This query attempts to find the associated musical artist of Matt Colton, who is a band member of Luke Vibert. It uses DBpedia's ontology and resource prefixes to navigate relationships between artists, bands, and their members.",4,5,5,2,3,2,3,28,0,0,1,0,0.0,0
767,20,val,Give me the alma mater of the administration of George K. Nash and entity in Baden-Württemberg.,SELECT ?result WHERE { ?v2 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?v2 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"# Query for the alma mater of George K. Nash
SELECT ?almaMater WHERE {
  ?person dbo:wikiPageID ""George_K._Nash"" .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query for entities in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity dbp:stateOrProvince ""Baden-Württemberg""@en .
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
783,13,val,Give me the associated musical artist of the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Find Shaggy by his birth name
  ?person dbo:birthName ""Samuel Ofori Amponsah""@en .
  
  # Ensure the person is Shaggy
  ?person rdfs:label ""Shaggy""@en .

  # Find bands or groups he is a member of
  ?band dbo:member ?person .

  # Get associated musical artists with those bands
  ?band dbo:musicalArtist ?artist .
}
```",3,3,4,3,1,3,2,20,0,0,35,0,0.0,0
54,21,val,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava and child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor ?child
WHERE {
  # Find Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta a dbo:Monarch ;
           dbo:succession ?succession .
  OPTIONAL { ?succession dbo:predecessor ?predecessor . }

  # Find Soe Min Wimala Dewi's father
  ?soemin dbr:Soe_Min_Wimala_Dewi ;
          dbo:parent ?father .

  # Find the child of Soe Min Wimala Dewi's father
  OPTIONAL { ?father dbo:child ?child . }
}
```",3,3,4,2,2,3,3,71,0,0,1,0,0.0,0
184,36,val,Give me the parent of Géza von Habsburg and parent of the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . ?result <http://dbpedia.org/ontology/child> ?v1 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"SELECT ?parentOfGeza ?grandParentOfMargaret WHERE {
  SERVICE wikibase:mwapi { bd:serviceParam wikibase:api ""EntitySearch"" .
    bd:serviceParam mwapi:search ""Géza von Habsburg"" .
    ?entitySearchResult schema:itemListElement ?item .
    BIND(IRI(CONCAT(""http://www.wikidata.org/entity/"", STR(?item))) AS ?geza)
  }
  ?geza wdt:P22 ?parentOfGeza .

  SERVICE wikibase:mwapi { bd:serviceParam wikibase:api ""EntitySearch"" .
    bd:serviceParam mwapi:search ""Archduchess Margaret of Austria (born 1925)"" .
    ?entitySearchResult schema:itemListElement ?item .
    BIND(IRI(CONCAT(""http://www.wikidata.org/entity/"", STR(?item))) AS ?margaret)
  }
  ?margaret wdt:P22 ?parentOfMargaret .
  ?parentOfMargaret wdt:P22 ?grandParentOfMargaret .
}",4,4,5,3,2,3,3,71,0,0,2,0,0.0,0
547,31,val,Give me the resting place of Simon Cadell and resting place of the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . ?v1 <http://dbpedia.org/ontology/child> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?simonCadellRestingPlace ?greatGrandchildRestingPlace WHERE {
  # Simon Cadell's resting place
  OPTIONAL {
    dbr:Simon_Cadell dbo:deathPlace ?simonCadellDeathPlace .
    ?simonCadellDeathPlace dbo:burialSite ?simonCadellRestingPlace .
  }

  # William Haliburton's great-grandchild
  OPTIONAL {
    dbr:William_Haliburton dbo:child ?haliburtonChild .
    ?haliburtonChild dbo:child ?haliburtonGrandchild .
    ?haliburtonGrandchild dbo:child ?haliburtonGreatGrandchild .

    # Resting place of the great-grandchild
    OPTIONAL {
      ?haliburtonGreatGrandchild dbo:deathPlace ?greatGrandchildDeathPlace .
      ?greatGrandchildDeathPlace dbo:burialSite ?greatGrandchildRestingPlace .
    }
  }
}
```",4,4,5,3,2,3,3,71,0,0,1,0,0.0,0
767,34,val,"Give me the entity in the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album) and reference to .","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leaderParty> ?v2 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://xmlns.com/foaf/0.1/name> """"@en . ?result <http://dbpedia.org/ontology/state> ?v1 . <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v2 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?adminEntity WHERE {
  # Step 1: Identify the writer of ""Where It's At""
  ?song dbo:lyricsBy ?writer .
  
  # Filter for the specific song
  VALUES ?song { dbr:Where_It%27s_At_(Dustin_Lynch_song) }
  
  # Step 2: Find the settlement associated with the writer
  OPTIONAL {
    ?writer dbo:birthPlace ?settlement .
  }

  # Step 3: Get the administrative entity of that settlement
  ?settlement dbo:administrativeTerritory ?adminEntity .
}
```",4,5,5,3,2,3,3,71,0,0,8,0,0.0,0
391,29,val,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus and native of Compton, California and actor of All About the Andersons.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?v3 <http://dbpedia.org/ontology/starring> ?result . ?v3 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v3 . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  # Find Michael Ballhaus's claim to fame (a work)
  dbr:Michael_Ballhaus dbo:claimToFame ?work .

  # Find an actor of that work
  ?work dbo:starring ?actor .

  # Ensure the actor is native of Compton, California
  ?actor dbp:nativePlace dbr:Compton,_California .

  # Ensure the actor acted in ""All About the Andersons""
  dbr:All_About_the_Andersons dbo:starring ?actor .
}
```",4,5,5,2,3,3,3,71,0,0,1,0,0.0,0
801,41,val,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent and associated musical artist of Chris Taylor (music producer) and professional in the alter ego of The Shadow.",SELECT ?result WHERE { ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v4 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v4 <http://dbpedia.org/ontology/producer> ?result . ?result <http://dbpedia.org/property/occupation> ?v2 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?producer ?alterEgo WHERE {
  ?work dbo:artist dbr:50_Cent ;
        dbo:producer ?producer .
  
  ?producer rdfs:label ""Chris Taylor (music producer)""@en .

  OPTIONAL { 
    ?work dbo:associatedMusicalArtist ?alterEgo .
    ?alterEgo rdfs:label ""The Shadow""@en .
  }
}
```",5,8,6,2,3,3,3,71,0,0,1,0,0.0,0
251,16,val,Give me the location of Battle of Marengo and death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v2 . <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?v2 <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battleLocation ?deathPlace WHERE {
  # Find the location of the Battle of Marengo
  dbr:Battle_of_Marengo dbo:location ?battleLocation .

  # Find the author of ""The Twelve Abbots of Challant""
  dbr:The_Twelve_Abbots_of_Challant dbo:author ?author .

  # Find the death place of the author
  ?author dbo:deathPlace ?deathPlace .
}
```",3,3,4,2,2,2,3,28,0,0,1,0,0.0,0
994,26,val,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v2 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?v2 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?associatedBand WHERE {
  # Fredrik Thordendal is a member of a band that is an organization
  ?band dbo:member dbr:Fredrik_Thordendal ;
        a dbo:MusicalGroup ;
        dbo:organization dbr:Some_Organization .

  # Find other bands or groups that are organizations and associated with the same members
  ?otherBand dbo:member ?member .
  FILTER(?member != dbr:Fredrik_Thordendal)

  # Ensure these bands/groups are also organizations
  ?otherBand a dbo:MusicalGroup ;
             dbo:organization ?org .

  # Return distinct bands that meet the criteria
  BIND(?otherBand AS ?associatedBand)
}
```",3,7,4,3,1,3,3,71,0,0,33,0,0.0,0
427,42,val,"Give me the party of Giulio Andreotti and party of the person born, that is an office holder and a politician, as Romano Antonio Prodi and reference to the name of Italian People's Party (1994).","SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v2 . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ?v2 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?andreottiParty ?prodiParty ?ipp1994Name WHERE {
  # Giulio Andreotti's political party
  OPTIONAL { 
    dbr:Giulio_Andreotti dbo:party ?andreottiParty .
  }
  
  # Romano Prodi's political party
  OPTIONAL { 
    dbr:Romano_Prodi dbo:party ?prodiParty .
  }

  # Italian People's Party (1994)
  dbr:Italian_People%27s_Party_(1994) rdfs:label ?ipp1994Name .
}
```",5,7,6,2,3,3,3,71,0,0,1,0,0.0,0
303,16,val,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid and party of Guillermo Endara.","SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . ?v2 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v2 <http://dbpedia.org/ontology/party> ?result . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Arnulfo_Arias_Madrid 
    dbr:Guillermo_Endara
  }
  
  ?person dbo:birthName ?birthName .
  FILTER (CONTAINS(LCASE(?birthName), ""arnulfo arias madrid"") || CONTAINS(LCASE(?birthName), ""guillermo endara""))
  OPTIONAL { ?person dbo:party ?party . }
  SERVICE <http://dbpedia.org/sparql> {
    ?party rdfs:label ?partyLabel .
    FILTER (LANG(?partyLabel) = 'en')
  }
}
ORDER BY ?person
```",3,4,4,2,2,2,3,28,0,0,1,0,0.0,0
328,18,val,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:officeTitle dbr:People's_Commissar_for_Defence_of_the_Soviet_Union .
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person dbo:commanderOf dbr:Eastern_Front_(World_War_II) .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",3,3,4,1,3,3,3,71,0,0,1,0,0.0,0
421,19,val,Give me the band member of the awardee of [[#Awards and nominations and native of Socialist Federal Republic of Yugoslavia and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Identify the person Edin Dervišhalidović (Edo Maajka)
  dbr:Edo_Maajka a dbo:Person ;
                 dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia .

  # Find awards related to Edo Maajka
  OPTIONAL { 
    ?award dbo:recipient dbr:Edo_Maajka .
  }

  # Identify band members associated with Edo Maajka
  ?bandMember dbo:member dbr:Edo_Maajka ;
              a dbo:Band .
}
```",4,4,5,2,3,2,3,28,0,0,1,0,0.0,0
626,15,val,"Give me the awardee of Order of St. Andrew and commander in the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?v0 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:awardeeOf dbr:Order_of_St._Andrew .
  ?battle dbo:commander ?person ;
          rdfs:label ""Battle of Paris (1814)""@en .
}
```

This query selects individuals who are awardees of the Order of St. Andrew and were commanders in the Battle of Paris (1814).",4,5,5,3,2,3,2,20,0,0,9,0,0.0,0
617,44,val,Give me the spouse of the child of Antiochus III the Great and child of Antiochus III the Great and parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v2 . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . ?v4 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v4 . <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v2 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?spouse WHERE {
  # Identify Antiochus III the Great
  VALUES ?antiochusIII { dbr:Antiochus_III_the_Great }

  # Find children of Antiochus III
  ?child dbo:parent ?antiochusIII .
  
  # Ensure the child is a person (to avoid non-person entities)
  ?child rdf:type dbo:Person .

  # Find spouses of each child
  OPTIONAL { 
    ?spouse dbo:spouse ?child .
    ?spouse rdf:type dbo:Person .
  }
}
```",5,5,6,2,3,3,3,71,2,3,0,0.4,1.0,0.5714285714285715
959,31,val,"Give me the native of Japan and member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?v2 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?v2 <http://dbpedia.org/ontology/almaMater> ?v0 . ?result <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?university WHERE {
  ?person a dbo:Person ;
          dbo:nationality dbr:Japan ;
          dbo:birthYear ""1958""^^xsd:gYear ;
          dbo:almaMater ?university .
  
  ?university a dbo:EducationalOrganization, dbo:University ;
              rdf:type dbo:Institution .
}
```

This query does the following:
- Selects individuals (`?person`) who are of Japanese nationality and were born in 1958.
- Ensures that their alma mater (`?university`) is both an educational organization and a university, which are types of institutions.",4,8,5,3,2,3,3,71,0,0,167,0,0.0,0
314,18,val,"Give me the awardee of 30 and commander in the profession, that is an event and a societal event, of Lisa Gavrić.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?v2 <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v2 . ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Lisa Gavrić""@en .
  
  ?award dbo:recipient ?person ;
         dbo:field ""Commander""@en ;
         dbo:type ?eventType .

  FILTER(?eventType IN (dbr:Event, dbr:Societal_event))
}
```",3,5,4,2,2,2,3,28,0,0,2,0,0.0,0
488,43,val,"Give me the death place of the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa and birth place of Enomoto Takeaki and administration of Emperor Go-Yōzei.",SELECT ?result WHERE { ?v4 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . ?v0 <http://dbpedia.org/property/father> ?v4 . ?v4 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?deathPlaceOfPoliticianFather ?birthPlaceOfEnomotoTakeaki ?administrationOfEmperorGoYozei
WHERE {
  # Matsudaira Tadamasa's father who is an office holder
  ?officeHolderFather a dbo:OfficeHolder ;
                     foaf:parent ?politicianFather .

  # Politician father of the above and his death place
  ?politicianFather a dbo:Politician ;
                   foaf:deathPlace ?deathPlaceOfPoliticianFather .

  # Birth place of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceOfEnomotoTakeaki .

  # Administration period of Emperor Go-Yōzei
  dbr:Emperor_Go-Yozei dbo:administration ?administrationOfEmperorGoYozei .
}",5,7,6,3,3,3,3,71,0,0,1,0,0.0,0
197,7,val,Give me the birthplace of the member of FC Politehnica Timișoara and birthplace of George Lusztig.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberBirthplace ?lusztigBirthplace WHERE {
  # Find a member of FC Politehnica Timișoara
  ?player dbo:team dbr:FC_Politehnica_Timișoara .
  
  # Get the birthplace of that player
  ?player dbo:birthPlace ?memberBirthplace .

  # Find George Lusztig
  ?lusztig a dbo:Person ;
           rdfs:label ""George Lusztig""@en .

  # Get the birthplace of George Lusztig
  ?lusztig dbo:birthPlace ?lusztigBirthplace .
}
```",3,3,4,2,2,2,2,9,2,169,0,0.011695906432748537,1.0,0.023121387283236997
177,7,val,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in the residence of Alexander Gamelin.","SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters ?residenceEntity WHERE {
  # Find the headquarters of the Ministry of Culture, Sports and Tourism in South Korea
  OPTIONAL {
    dbr:Ministry_of_Culture_Sports_and_Tourism_(South_Korea) dbo:headquarter ?headquarters .
  }

  # Find an entity related to Alexander Gamelin's residence
  OPTIONAL {
    ?residenceEntity dbo:resident dbr:Aleksandr_Gamelin ;
                     dbo:location ?residenceLocation .
  }
}
```",3,3,4,2,2,2,2,9,0,0,1,0,0.0,0
701,4,train,Give me the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?nefertari dbo:spouse ?husband .
  ?husband dbo:child ?child .
  FILTER (str(?nefertari) = ""Nefertari"")
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
959,2,train,Give me the manager of 2013 Júbilo Iwata season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:season ""2013"" .
  ?team rdfs:label ""Júbilo Iwata""@en .
  OPTIONAL { ?team dbo:coach ?manager . }
}
```

This query does the following:
- It looks for a team (`?team`) that has a season property set to ""2013"".
- It matches this team with the label ""Júbilo Iwata"" in English.
- It optionally retrieves the coach (or manager) of this team using the `dbo:coach` property.

Please note that the availability and accuracy of data depend on how well DBpedia has been populated for Júbilo Iwata's 2013 season. If the specific information is not available, you might need to explore related resources or datasets.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
485,5,train,"Give me the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Joseph Whitaker"" .
  ?person dbo:occupation dbr:Naturalist .
  ?person dbo:birthPlace ?birthPlace .
  FILTER (isBlank(?birthPlace) || ?birthPlace a dbo:Region)
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
339,6,train,Give me the father of Princess Elizabeth of Greece and Denmark and child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:spouse dbr:Princess_Elizabeth_of_Greece_and_Denmark .
  ?person dbo:childOf dbr:George_I_of_Greece .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
528,13,train,Give me the war of the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander ?commanderLabel WHERE {
  ?battle dbo:place dbr:La_Rinconada_de_Ate ;
          dbo:commander ?commander .
  
  OPTIONAL { 
    ?commander rdfs:label ?commanderLabel .
  }
  
  FILTER (lang(?commanderLabel) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,14,0,0.0,0
994,0,train,Give me the associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q123456 rdfs:label ""S.A. Slayer""@en .
  OPTIONAL { wd:Q123456 wdt:P175 ?artist . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for S.A. Slayer if it is known.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
48,10,train,"Give me the actor, that is a musical artist, of the show with Stacey Dash.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . ?v0 <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?actor WHERE {
  # Find shows featuring Stacey Dash
  ?show dbo:starring dbr:Stacey_Dash .
  
  # Find co-actors in these shows
  ?show dbo:starring ?coActor .

  # Ensure the co-actor is not Stacey Dash herself
  FILTER (?coActor != dbr:Stacey_Dash)

  # Check if the co-actor is a musical artist
  OPTIONAL { ?coActor dbo:musicalArtist true . }

  # Bind the actor who is also a musical artist
  BIND(?coActor AS ?actor)
}
ORDER BY ?actor",2,3,3,2,1,3,2,20,8,93,0,0.07920792079207921,1.0,0.14678899082568805
44,3,train,"Give me the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?band dbo:musicalArtist dbr:Queensrÿche .
  ?band a dbo:Band ;
        a dbo:Organization .
  BIND(?band AS ?artist)
}
```",1,3,2,1,1,2,2,9,0,0,3,0,0.0,0
492,0,train,Give me the person decedent at French Algeria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Algeria ;
          dbo:country dbr:French_Republic .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```

This query attempts to find individuals who died in Algeria and were associated with the French Republic, which could include decedents during the period of French Algeria. The `dbo:deathPlace` property is used to specify the location of death, and `dbo:country` helps filter those linked to France.",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
747,1,train,Give me the band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Amba Shepherd""@en .
  ?person dbo:musicalArtist ?band .
}
```",1,1,2,1,1,3,3,71,0,0,13,0,0.0,0
645,10,train,Give me the child of the parent of Adela Pankhurst.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Find Adela Pankhurst's parent(s)
  ?adela a dbo:Person ;
         foaf:name ""Adela Pankhurst""@en .
  
  OPTIONAL { 
    ?adela dbo:parent ?parent .
  }
  
  # Find the children of those parents
  ?parent dbo:child ?child .
}
```

This query does the following:
- Identifies Adela Pankhurst using her name.
- Finds any parent(s) associated with her.
- Retrieves the children of those parents.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
617,14,train,Give me the parent of the child of Antiochus (son of Antiochus III the Great).,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?v1 . ?result <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent
WHERE {
  # Find Antiochus, son of Antiochus III the Great
  ?antiochus a dbo:Person ;
             rdfs:label ""Antiochus (son of Antiochus III)""@en .
  
  # Find his children
  ?child dbo:parent ?antiochus .

  # Find the parent of those children
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,13,train,Give me the child of the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  # Find Archduke Joseph Karl of Austria's children
  ?child dbo:parent dbr:Archduke_Joseph_Karl_of_Austria .
  
  # For each child, find their children (grandchildren)
  ?grandchild dbo:parent ?child .
}
```

This query uses the `dbo:parent` property to navigate from Archduke Joseph Karl of Austria to his children and then to his grandchildren.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
177,3,train,"Give me the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joo Don-sik""@en .
  OPTIONAL { ?person dbo:office ?office . }
  FILTER EXISTS { ?office a dbo:Organization . }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
838,0,train,Give me the band of Raša Đelmaš.,SELECT ?result WHERE { <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  ?person dbo:birthName ""Raša Đelmaš""@sr .
  ?person dbo:associatedBand ?band .
}
```

This SPARQL query searches for a person with the birth name ""Raša Đelmaš"" and retrieves any associated band.",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
161,16,train,"Give me the force, that is a societal event and a military conflict, of the predecessor of Indalecio Prieto.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Identify Francisco Largo Caballero as Indalecio Prieto's predecessor
  dbr:Francisco_Largo_Caballero dbo:predecessorOf dbr:Indalecio_Prieto .

  # Find forces associated with societal events and military conflicts related to Francisco Largo Caballero
  ?event dbo:relatedTo dbr:Francisco_Largo_Caballero .
  ?event a ?eventType .
  
  FILTER (?eventType IN (dbo:SocietalEvent, dbo:MilitaryConflict))
  
  ?event dbo:hasForce ?force .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
487,9,train,Give me the administration of the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?administration WHERE {
  ?person a dbo:Person ;
          dbo:birthDate ""1955-01-26""^^xsd:date .
  
  OPTIONAL { 
    ?politicalRole dbo:officeHolder ?person ;
                   dbo:positionHeld ?administration .
  }
}
```

This query does the following:
- Searches for a person (`?person`) with a birth date of January 26, 1955.
- Uses an optional pattern to find any political roles (`?politicalRole`) associated with that person and retrieves the administration or position held (`?administration`).",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
488,2,train,Give me the administration of Emperor Go-Yōzei.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
SELECT ?administration WHERE {
  wd:Q123456 wdt:P39 ?administration .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Emperor Go-Yōzei. You can find this by searching for ""Emperor Go-Yōzei"" in DBpedia or using a SPARQL query to retrieve his unique identifier.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
487,2,train,Give me the person born on 1955-01-26.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1955-01-26""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = ""1955"" && MONTH(?birthday) = ""01"" && DAY(?birthday) = ""26"")
}
```",1,1,2,1,1,3,2,20,0,0,23,0,0.0,0
820,4,train,Who is the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor WHERE {
  ?actor a dbo:Actor .
}
```",1,1,2,1,1,3,2,20,850,4079,20730,0.17244877257050112,0.03938832252085264,0.06412916368025953
392,9,train,Give me the province of Schio and region of Central European Time.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?region WHERE {
  ?city a dbo:City ;
        rdfs:label ""Schio""@en .
  
  OPTIONAL { ?city dbo:locatedInProvince ?province . }
  OPTIONAL { ?province dbo:partOfRegion ?region . }

  FILTER regex(?region, ""Central European Time"", ""i"")
}
```

This query does the following:
- Selects cities with the label ""Schio"" in English.
- Retrieves the province where Schio is located using `dbo:locatedInProvince`.
- Attempts to find the region associated with that province using `dbo:partOfRegion`.
- Filters regions by checking if they are related to the Central European Time zone.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
981,6,train,Give me the entity in Indonesia and birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInIndonesia ?birthPlace WHERE {
  VALUES ?person { dbr:Novia_Indriani_Mamuaja }
  
  ?person dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?birthPlace dbo:country dbr:Indonesia .
    BIND(?birthPlace AS ?entityInIndonesia)
  }
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
701,3,train,Give me the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Amun-her-khepeshef dbo:spouse ?spouse .
}
```

This query uses the `dbo:spouse` property to find the spouse of Amun-her-khepeshef. It assumes that DBpedia has an entry for this individual and that their spouse information is available.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
747,6,train,Who is the writer of Apollo (Hardwell song)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?song dbo:title ""Apollo"" ;
        dbo:artist dbr:Hardwell .
  OPTIONAL { ?song dbo:composer ?writer . }
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
378,17,train,"Who is the commander in the war, that is a military conflict and a societal event and an event, of Thomas Trigge?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander WHERE {
  ?trigge a dbo:Person ;
          foaf:name ""Thomas Trigge""@en .
  
  ?trigge dbo:participatedIn ?war .

  ?war a dbo:MilitaryConflict ;
      dbo:commander ?commander .
}
```",2,5,3,2,1,3,3,71,0,0,169,0,0.0,0
696,7,train,Give me the birth place of the member of Dropkick Murphys.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?member ?birthPlace WHERE {
  # Find members of Dropkick Murphys
  ?bandMember dbo:memberOfBand dbr:Dropkick_Murphys .
  
  # Get the individual member's resource
  ?bandMember foaf:name ?member .

  # Retrieve birthplace information for each member
  OPTIONAL { 
    ?bandMember dbo:birthPlace ?birthPlace .
  }
}
```

This query does the following:
- Uses `dbo:memberOfBand` to find individuals who are members of the band ""Dropkick Murphys.""
- Retrieves their names using `foaf:name`.
- Optionally retrieves their birthplace using `dbo:birthPlace`.",2,2,3,2,1,3,2,20,0,0,6,0,0.0,0
55,8,train,"Give me the band member of the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?v1 . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Find the song ""Used to Love Her""
  ?song dbo:title ""Used to Love Her"" .
  
  # Identify its producer
  ?song dbo:producer ?producer .

  # Check if the producer is a band
  ?producer rdf:type dbo:Band .

  # Get members of that band
  ?producer dbo:bandMember ?member .
}
```",2,3,3,2,1,2,3,28,0,0,55,0,0.0,0
318,2,train,Give me the founding year of Eel Pie Publishing.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?result . },"```sparql
SELECT ?foundingYear WHERE {
  ?entity a dbo:Company ;
          foaf:name ""Eel Pie Publishing"" .
  OPTIONAL { 
    ?entity dbo:foundingDate ?date .
    BIND(YEAR(?date) AS ?foundingYear)
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
197,4,train,Give me the birthplace of Dumitru Nadu and birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace WHERE {
  VALUES ?person { 
    dbr:Dumitru_Nadu 
    dbr:George_Lusztig
  }
  
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,2,2,9,1,4,0,0.2,1.0,0.33333333333333337
429,6,train,"Give me the country of the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Identify the military force involved in the Camden Expedition
  ?militaryForce dbo:partOf ?conflict .
  
  # The conflict is the Camden Expedition, part of the American Civil War
  ?conflict rdfs:label ""Camden Expedition""@en .

  # Find the country associated with this military force
  ?militaryForce dbo:nationality ?country .
}
```

This query assumes that there are DBpedia entries linking a military force to the Camden Expedition and further linking that force to a country. Adjustments might be necessary based on actual data availability in DBpedia.",2,3,3,2,1,2,2,9,0,0,7,0,0.0,0
994,15,train,Give me the associated musical artist of the reference to Watchtower.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?artist WHERE {
  ?song dcterms:title ""Watchtower"" .
  ?song dbo:artist ?artist .
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
404,14,train,"Give me the child of the father of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v1 . <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:father dbr:Ernest_Augustus,_Duke_of_Brunswick .
  ?person dbo:child ?child .
}
```

This query does the following:
- It identifies a person (`?person`) who is listed as the father of Ernest Augustus, Duke of Brunswick.
- Then it finds all children (`?child`) of that identified person.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
328,2,train,Give me the leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?position a dbo:GovernmentAgency ;
            dbo:head ?leader .
  FILTER(CONTAINS(LCASE(STR(?position)), ""people's commissariat of defense""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,1,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects dbpedia-owl:Battle_of_Leipzig .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,21,0,0.0,0
778,9,train,"Give me the award of the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?v0 <http://dbpedia.org/property/awards> ?result . ?v0 <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?awardee ?awardName WHERE {
  ?award a dbo:Award ;
        dbo:name ""Wolf Prize in Medicine""@en .
  
  ?award dbo:recipient ?awardee .
  
  ?awardee dbo:nationality dbr:United_States ;
          dbp:honorificPrefix ?honorificPrefix .

  BIND(""Wolf Prize in Medicine"" AS ?awardName)
}
```

This query does the following:
- Selects awards that are of type `dbo:Award` and have the name ""Wolf Prize in Medicine.""
- Filters recipients (`?awardee`) who have a nationality linked to the United States.
- Retrieves the award name for clarity.",2,3,3,2,1,3,2,20,0,0,9,0,0.0,0
767,12,train,Give me the alma mater of Carl L. Nippert and reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?university WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?university .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
626,8,train,Give me the awardee of the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?recipient WHERE {
  # Identify Aleksey Petrovich Yermolov
  VALUES ?yermolov { dbr:Aleksey_Petrovich_Yermolov }
  
  # Find awards associated with him
  ?yermolov dbo:award ?award .
  
  # Retrieve recipients of those awards
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,2,20,0,0,230,0,0.0,0
378,13,train,Give me the war of the commander in Peninsular War.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?war dbo:wikiPageRedirects dbr:Peninsular_War .
  ?war dbo:participatedInMilitaryConflict ?conflict .
  ?conflict dbo:commander ?commander .
  ?commander rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,118,0,0.0,0
547,5,train,Give me the show with Emily Richard.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?castMember dbo:actorIn ?show .
  ?castMember foaf:name ""Emily Richard"" .
}
```",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
712,9,train,"Give me the country of the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v0 <http://dbpedia.org/ontology/country> ?result . ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Vyoshenskaya Uprising is related to Cossacks
  dbr:Vyoshenskaya_Uprising dbo:relatedTo dbr:Cossacks .
  
  # Cossacks are a military force in Russia
  dbr:Cossacks dbo:militaryForceOf dbr:Russia .

  # Get the country of Russia
  dbr:Russia dbo:country ?country .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
534,1,train,Give me the headquarter of Royal Dublin Society.,SELECT ?result WHERE { <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
SELECT ?headquarters WHERE {
  wd:Q123456 rdfs:label ""Royal Dublin Society""@en .
  OPTIONAL { wd:Q123456 wdt:P159 ""Royal Dublin Society"" . }
  OPTIONAL { wd:Q123456 wdt:P856 ?website . }
  OPTIONAL { wd:Q123456 wdt:P131 ?location . }
  OPTIONAL { ?location wdt:P625 ?coordinates . }
  OPTIONAL { ?location wdt:P276 ?headquarters . }
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
488,14,train,Give me the administration of the father of Emperor Go-Mizunoo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"```sparql
SELECT ?father ?administration WHERE {
  ?emperor rdf:type dbo:Monarch ;
           foaf:name ""Go-Mizunoo""@en .
  
  ?emperor dbo:father ?father .

  OPTIONAL { 
    ?father dbo:officeHolderOf ?position .
    ?position dbo:administrativeArea ?administration .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
356,7,train,Give me the player in the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://dbpedia.org/ontology/team> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
    # Find the team that Sacramento Republic FC was promoted to in 2022
    ?team dbo:sportTeamLeague dbr:Major_League_Soccer ;
          dbo:successorOf dbr:Sacramento_Republic_FC .

    # Get players from this team
    ?player dbo:playsFor ?team .
}
```

This query assumes that the DBpedia data model includes a `successorOf` property to denote promotion or succession, which might not be directly available. You may need to adjust based on actual DBpedia schema and available properties.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
356,9,train,"Give me the successor of the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/successor> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason WHERE {
  # Step 1: Identify the 2015 Sacramento Republic FC season
  ?sacramentoRepublicFC a dbo:SoccerClub ;
                       dbo:season ?sacramento2015 .
  
  FILTER(STRSTARTS(LCASE(?sacramento2015), ""sacramento republic fc 2015""))

  # Step 2: Find its predecessor
  ?predecessorSeason dbo:succeeds ?sacramento2015 .

  # Step 3: Find the successor of that predecessor
  ?successorSeason dbo:precedes ?predecessorSeason .
  
  FILTER(STRSTARTS(LCASE(?successorSeason), ""sacramento republic fc"") || 
         STRSTARTS(LCASE(?successorSeason), ""soccer club""))
}",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
712,5,train,Who is the awardee of Hero of the Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person dbo:award dbr:Hero_of_the_Soviet_Union .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,837,0,0.0,0
30,5,train,Give me the native of the birthplace of Silvia Cohen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage
WHERE {
  # Step 1: Identify Silvia Cohen's resource
  dbr:Silvia_Cohen dbo:birthPlace ?birthPlace .

  # Step 2: Find the native language of her birthplace
  ?birthPlace dbp:nativeName ?nativeName .
  ?birthPlace dbo:language ?nativeLanguage .
}
```",2,2,3,2,1,2,2,9,0,0,11488,0,0.0,0
251,1,train,Give me the administration of Forza Italia (2013).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         rdfs:label ""Forza Italia""@en .
  
  OPTIONAL { 
    ?administration dbo:hasMember ?member .
    ?member dbo:affiliation ?party .
    FILTER (YEAR(?administrationStartDate) = 2013 || YEAR(?administrationEndDate) >= 2013)
  }
}
```

This query does the following:
- Identifies ""Forza Italia"" as a political party.
- Searches for administrations that have members affiliated with this party.
- Filters results to include only those administrations active in or starting from 2013.",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
179,3,train,Give me the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q1234 foaf:name ""Sirikit""@en .
  OPTIONAL { wd:Q1234 schema:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
232,4,train,Give me the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?alias WHERE {
  ?person dbo:birthName ""John Devon Roland Pertwee"" .
  OPTIONAL { ?person foaf:name ?alias . }
}
```

This query does the following:
- It uses the `dbo:birthName` property to find individuals with the specified birth name.
- The optional clause attempts to retrieve any aliases or names associated with that person using the `foaf:name` property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
285,2,train,Who is the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  dbr:Aristotle_Onassis dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
184,5,train,"Give me the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?parentLabel WHERE {
  ?archduke a dbo:Archduke ;
            dbp:name ""Ladislaus Philipp of Austria""@en .
  
  ?archduke dbo:childOf ?parent .

  OPTIONAL { 
    ?parent dbo:royalTitle ?title .
  }

  FILTER EXISTS { ?parent dbo:royalTitle ?title }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query does the following:
- Identifies Archduke Ladislaus Philipp of Austria.
- Finds his parents (`dbo:childOf`).
- Filters to include only those parents who have a royal title (`dbo:royalTitle`).",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
778,10,train,"Give me the work, that is a software, of the author of Pushd and popd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v0 . <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?author dbo:wikiPageID ""Brian_Fox_(programmer)""@en.
  ?author dbo:work ?work .
  ?work a dbo:Software .
  ?work rdfs:label ?softwareLabel .
  FILTER (lang(?softwareLabel) = 'en')
}
```

This query does the following:
- Identifies Brian Fox as the author using his DBpedia resource identifier.
- Retrieves works associated with him that are classified as software.
- Selects the English labels of these software works.",2,3,3,2,1,3,2,20,0,0,5,0,0.0,0
16,0,train,Give me the spouse of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Ted McGinley. You can find this by searching for ""Ted McGinley"" on DBpedia or using a SPARQL endpoint to query for his unique identifier.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
378,2,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  VALUES ?person { dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón }
  
  ?person dbo:notableWorkOrContribution ?claimToFame .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,2,train,"Give me the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?member dbo:memberOf ?band .
  ?member rdfs:label ""Solace of Requiem""@en .
  FILTER (CONTAINS(LCASE(?band), ""band"") || CONTAINS(LCASE(?band), ""organization""))
}
```",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
391,9,train,"Give me the actor of The Departed and native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdf:type dbo:Film .
  ?movie rdfs:label ""The Departed""@en .

  ?actor dbo:nativePlace dbr:Compton,_California .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,3,train,Give me the reference to Watchtower.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Watchtower""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""Watchtower""@en .
  ?reference schema:description ?description .
  FILTER(CONTAINS(LCASE(?description), ""reference""))
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for ""Watchtower"" if it differs.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
712,3,train,Give me the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?military a dbo:MilitaryUnit ;
            rdfs:label ""Armed Forces of South Russia""@en .
  OPTIONAL { ?military dbo:country ?country . }
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
666,1,train,Give me the figure known as The Three Lions.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?description WHERE {
  ?team dbo:wikiPageRedirects dbr:The_Three_Lions .
  OPTIONAL { ?team dbo:description ?description . FILTER (lang(?description) = 'en') }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
64,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time ;
           rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
ORDER BY ?label
```",1,2,2,1,1,2,2,9,52,42,4,0.5531914893617021,0.9285714285714286,0.6933333333333335
10,5,train,Give me the birth name of Sharon Kao.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:QXXXXX foaf:name ""Sharon Kao""@en .
  OPTIONAL { wd:QXXXXX schema:birthName ?birthName . }
}
```

Note: Replace `wd:QXXXXX` with the actual DBpedia resource identifier for Sharon Kao.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
404,0,train,Give me the spouse of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  wd:Q123456 wdt:P26 ?spouse .
}
```

Note: In this query, `wd:Q123456` should be replaced with the actual DBpedia identifier for Princess Victoria Louise of Prussia. You can find this identifier by searching for her on DBpedia or using a SPARQL endpoint to look up entities related to her.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
801,11,train,Give me the professional in the alter ego of The Shadow.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?v0 . },"```sparql
SELECT ?professional WHERE {
  wd:Q1234568 wdt:P136 ?professional .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"" if it exists. You may need to look up or verify the correct identifier in DBpedia.",2,2,3,2,1,3,3,71,0,0,39640,0,0.0,0
485,10,train,"Give me the birth place of the awardee, that is a writer and a poet, of Eric Gregory Award.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person dbo:award dbr:Eric_Gregory_Award .
  ?person dbo:occupation dbr:Writer .
  ?person dbo:occupation dbr:Poet .
  OPTIONAL { ?person dbp:birthPlace ?birthPlace . }
}
LIMIT 10
```

This query does the following:

- It selects individuals (`?person`) who have received the Eric Gregory Award.
- It ensures that these individuals are recognized as both writers and poets by checking their occupations.
- It retrieves the birthplace of these individuals if available.

The `LIMIT 10` is used to restrict the number of results, which can be adjusted based on your needs.",2,4,3,2,1,2,3,28,0,0,7,0,0.0,0
54,12,train,Give me the parent of Thado Minsaw of Prome and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent ?predecessor
WHERE {
  # Find Thado Minsaw of Prome and his parent
  ?thadoMinsaw a dbo:Monarch ;
               rdfs:label ""Thado Minsaw of Prome""@en .
  
  OPTIONAL { 
    ?thadoMinsaw dbo:parent ?parent .
  }
  
  # Find Ameitta Thiri Maha Dhamma Dewi of Ava and her predecessor
  ?ameitta a dbo:Monarch ;
           rdfs:label ""Ameitta Thiri Maha Dhamma Dewi of Ava""@en .

  OPTIONAL {
    ?ameitta dbo:predecessor ?predecessor .
  }
}
```

This query assumes that the relationships `dbo:parent` and `dbo:predecessor` are used in DBpedia to denote parent-child and predecessor-successor relationships among monarchs. Adjustments may be necessary if different properties are used.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,9,train,"Give me the manager, that is a sports manager, of the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?manager WHERE {
  # Find Leonid Slutsky as a football coach
  ?slutsky dbo:occupation dbr:Football_manager .
  ?slutsky foaf:name ""Leonid Slutsky"" .

  # Identify teams managed by Leonid Slutsky
  ?team dbo:coach ?slutsky ;
        a dbo:Soccer_club ;
        dbo:sportTeamSeason ?season .

  # Find the current manager of those teams
  ?currentManager dbo:occupation dbr:Sports_manager .
  ?currentManager dbo:managerOf ?team .

  # Ensure the manager is distinct and relevant
  ?manager ?p ?o .
  FILTER(?manager = ?currentManager)
}
```",2,5,3,2,1,3,2,20,0,0,5,0,0.0,0
435,5,train,Give me the author of Iceland.,SELECT ?result WHERE { <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author WHERE {
  ?author dbo:nationality dbr:Iceland .
  ?author a dbo:Writer .
}
ORDER BY ?author
LIMIT 10
```",1,1,2,1,1,2,3,28,0,8,1,0.0,0.0,0
827,4,train,"Who is the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Princess Pauline of Saxe-Weimar-Eisenach
  ?princess a dbo:Princess ;
            foaf:name ""Pauline of Saxe-Weimar-Eisenach""@en .
  
  # Identify her spouse
  ?princess dbo:spouse ?spouse .

  # Check if the spouse is also royalty
  ?spouse a ?royaltyType .
  FILTER (?royaltyType IN (dbo:Monarch, dbo:Princess, dbo:Duke, dbo:King, dbo:Queen))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
54,16,train,Give me the child of the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?thadoMinsaw a dbo:Monarch ;
                foaf:name ""Thado Minsaw""@en .
  
  ?thadoMinsaw dbo:father ?parent .

  ?parent dbo:child ?child .
}
```

This query assumes that Thado Minsaw is represented as an instance of `dbo:Monarch` and uses the properties `foaf:name`, `dbo:father`, and `dbo:child`. Adjustments might be necessary based on the exact schema used in DBpedia.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
659,0,train,Give me the commander in German campaign of 1813.,SELECT ?result WHERE { <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  # Find the campaign related to the German Campaign of 1813
  ?campaign dbo:wikiPageRedirects dbr:German_Campaign_of_1813 .
  
  # Get commanders involved in this campaign
  ?campaign dbo:commander ?commander .

  # Filter for notable commanders (Napoleon, Blücher, Schwarzenberg)
  VALUES ?commander {
    dbr:Napoleon_I_of_France
    dbr:Gebhard_Leberecht_von_Blücher
    dbr:Karl_Philipp_Schwarzenberg
  }

  # Get the name of each commander
  ?commander rdfs:label ?name .
  
  FILTER (lang(?name) = 'en')
}
ORDER BY ?commander
```",1,1,2,1,1,3,3,71,0,0,31,0,0.0,0
617,7,train,Who is the commander in Battle of Panium?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle dbo:event = dbr:Battle_of_Panium .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
801,15,train,Give me the alter ego of the true self of The Shadow.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
SELECT ?alterEgo WHERE {
  ?character rdfs:label ""The Shadow""@en .
  ?character dbo:aliasName ?alterEgo .
}
```

This query searches for a character labeled as ""The Shadow"" and retrieves its alias name, which is the alter ego.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
915,1,train,Give me the father of Lizzie Spaulding.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person dbp:name ""Lizzie Spaulding""@en .
  ?person dbo:parent ?father .
}
```",1,1,2,1,1,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
783,9,train,Give me the band member of the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  # Find Shaggy's DBpedia resource using his birth name
  ?shaggy dbo:birthName ""Samuel Ofori Amponsah""@en.
  
  # Get the bands associated with Shaggy
  ?shaggy dbp:memberOfBand ?band.

  # For each band, find its members
  ?bandMember dbp:memberOf ?band.

  # Filter out Shaggy himself from the results
  FILTER(?bandMember != ?shaggy)
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
701,1,train,Give me the parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
    ?henuttawy a dbo:Person ;
               dbo:spouseOrChild ?relation .
    ?relation dbo:spouseOrChild ?parent .
    ?henuttawy rdfs:label ""Henuttawy""@en .
    OPTIONAL { ?henuttawy dbo:era dbr:19th_Dynasty_of_Egypt . }
}
```

This query does the following:
- It looks for a person (`?henuttawy`) who is labeled as ""Henuttawy"" in English.
- It checks if this person has any spouse or child relationships (`dbo:spouseOrChild`).
- It then finds the parent of that relationship.
- The `OPTIONAL` clause ensures that we are considering Henuttawy from the 19th Dynasty, though it might not be strictly necessary depending on how DBpedia is structured.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,10,train,Give me the child of Thinkhaya of Pagan and predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Thinkhaya of Pagan
  dbr:Thinkhaya_of_Pagan dbo:spouse ?spouse .
  
  # Find children of Thinkhaya of Pagan
  ?spouse dbo:child ?child .

  # Ameitta Thiri Maha Dhamma Dewi of Ava
  dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava dbo:predecessor ?predecessor .
  
  # Find the child who is also the predecessor
  FILTER (?child = ?predecessor)
}
```

This query assumes that DBpedia has direct relationships for spouses, children, and predecessors. Adjustments may be necessary based on the actual structure of data in DBpedia.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
778,5,train,"Give me the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?software WHERE {
  ?person dbo:profession dbr:Computer_programmer .
  ?person foaf:name ""Bill Joy"" .
  ?work dbo:creator ?person ;
        a dbo:Software .
  BIND(?work AS ?software)
}
```",1,2,2,1,1,3,2,20,0,0,5,0,0.0,0
251,11,train,Give me the death place of the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?deathPlace WHERE {
  ?book dcterms:title ""The Twelve Abbots of Challant""@en .
  ?book dbo:author ?author .
  ?author foaf:name ?name .
  OPTIONAL { ?author dbo:deathPlace ?deathPlace . }
}
```",2,2,3,2,1,2,3,28,0,0,3,0,0.0,0
314,3,train,Give me the headquarter of House of Sombrerete.,SELECT ?result WHERE { <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?house a dbo:Organization ;
         rdfs:label ""House of Sombrerete""@en .
  OPTIONAL { ?house dbo:headquarter ?headquarters . }
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
391,17,train,"Give me the movie, that is a movie and a work and a television show, with the professional in .","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/occupation> """"@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://dbpedia.org/property/starring> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?movie WHERE {
  ?movie rdf:type dbo:Film .
  ?movie rdf:type dbo:Work .
  ?movie rdf:type dbo:TelevisionShow .
}
```",2,5,3,2,1,3,3,71,1674,3157,0,0.346512109294142,1.0,0.5146810146041507
9,2,train,Give me the figure known as QUB.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
SELECT ?item ?itemLabel WHERE {
  VALUES ?item { <http://dbpedia.org/resource/QUB> }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query selects the item and its label where the item is specifically ""QUB"" in DBpedia. The `SERVICE wikibase:label` part ensures that we get a human-readable label for the entity, preferably in English or automatically in the user's language.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
392,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```

This query selects countries (`dbo:Country`) that have the `dbo:timeZone` property set to Central European Time (`dbr:Central_European_Time`).",1,2,2,1,1,2,3,28,0,0,56,0,0.0,0
645,6,train,Give me the alma mater of Sylvia Pankhurst and entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  dbr:Sylvia_Pankhurst dbo:almaMater ?almaMater .
  ?almaMater dbo:country dbr:United_Kingdom .
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
645,4,train,Give me the parent of Adela Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Adela_Pankhurst> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parentName WHERE {
  ?person dbo:birthName ""Adela Pankhurst""@en .
  ?person dbo:parent ?parent .
  ?parent rdfs:label ?parentName .
  FILTER(LANG(?parentName) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,15,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of the person born in 1958.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Person ;
          dbo:birthYear ""1958""^^xsd:gYear ;
          foaf:almaMater ?almaMater .
  
  ?almaMater a dbo:EducationalOrganization ;
             dbo:country dbr:Japan .
}
```",2,6,3,2,1,3,3,71,0,0,3,0,0.0,0
303,7,train,Give me the party of Arnulfo Arias and party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyName WHERE {
  VALUES ?person { 
    dbr:Aarnulfo_Arias_Monge 
    dbr:Guillermo_Endara_García
  }
  
  ?person dbo:politicalParty ?party .
  ?party rdfs:label ?partyName .
  FILTER (lang(?partyName) = 'en')
}
ORDER BY ?person",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
16,10,train,Give me the person born as Georgeanne Marie Rice and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person foaf:name ""Georgeanne Marie Rice""@en .
  ?person dbo:birthName ""Georgeanne Marie Rice"" .
  ?marriage dbo:spouse1 ?person ;
            dbo:spouse2 <http://dbpedia.org/resource/Ted_McGinley> .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,6,train,Give me the administration of Forza Italia (2013) and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?location
WHERE {
  # Find the administration of Forza Italia in 2013
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           dbo:leader ?person .
    ?person dbo:officePeriod ?period .
    FILTER(CONTAINS(str(?period), ""2013""))
    BIND(str(?person) AS ?administration)
  }
  
  # Find the location of the Battle of Marengo
  {
    dbr:Battle_of_Marengo dbo:location ?battleLocation .
    ?battleLocation rdfs:label ?location .
    FILTER(LANG(?location) = ""en"")
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
838,1,train,Give me the band member of Kerber.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . },"```sparql
SELECT ?member WHERE {
  wd:Q1234568 dbo:musicalArtistMember ?member .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Kerber. You can find this by searching for ""Kerber"" in DBpedia or using a SPARQL endpoint to query for the correct QID.",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
747,5,train,"Give me the work, that is a song, of Amba Shepherd.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?song WHERE {
  ?artist a dbo:MusicalArtist ;
          foaf:name ""Amba Shepherd""@en .
  
  ?work dbo:artist ?artist ;
        rdf:type dbo:Song .

  ?work rdfs:label ?song .
  FILTER (lang(?song) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
339,3,train,Who is the child of Christian IX of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
SELECT ?child WHERE {
  ?person dbo:spouse ?partner .
  ?partner foaf:name ""Christian IX""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
303,8,train,"Give me the party of the commander, that is a politician, in United States invasion of Panama.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?party WHERE {
  # Find the event of the United States invasion of Panama
  dbr:United_States_invasion_of_Panama dbo:commander ?commander .
  
  # Ensure the commander is a politician
  ?commander rdf:type dbo:Politician .

  # Get the political party of the commander
  ?commander dbo:partyAffiliation ?party .
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
312,0,train,Give me the entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Province_of_Bergamo .
}
```",1,1,2,1,1,2,2,9,0,16,228,0.0,0.0,0
48,0,train,Give me the band of Carl Falk.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Carl Falk""@en.
  ?person dbo:musicGroup ?band.
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
487,6,train,Give me the country of 2022 Vermont House of Representatives election and administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country
WHERE {
  # Find the country associated with Vermont House of Representatives
  OPTIONAL { 
    dbr:Vermont_House_of_Representatives dbo:country ?country .
  }
  
  # Find the country associated with Phil Scott's administration
  OPTIONAL { 
    dbr:Phil_Scott dbo:officeHolderOf <http://dbpedia.org/resource/Governor_of_Vermont> ;
                   dbo:country ?country .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
547,13,train,Give me the resting place of the actor of Enemy at the Door.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?burialPlace WHERE {
  ?film dbo:starring dbr:James_Stewart .
  ?film rdfs:label ""Enemy at the Door""@en .
  OPTIONAL { ?actor dbo:birthName dbr:James_Stewart . }
  OPTIONAL { ?actor dbo:deathPlace ?burialPlace . }
}
```

This query does the following:
- Identifies films starring James Stewart.
- Filters for the film titled ""Enemy at the Door.""
- Retrieves the actor's burial place if available.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
184,2,train,Give me the parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Ilona_of_Austria dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
356,5,train,"Give me the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?name WHERE {
  # Find people who are soccer players and managers
  ?person a dbo:SoccerPlayer .
  ?person dbo:managerOf ?team .

  # Ensure they are native to Wolverhampton
  ?person dbp:nationality dbr:United_Kingdom ;
          dbp:birthPlace dbr:Wolverhampton .

  # Get their name
  ?person rdfs:label ?name .
  
  FILTER (lang(?name) = 'en')
}
```",1,3,2,1,1,3,2,20,0,0,17,0,0.0,0
959,4,train,"Give me the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  wd:Q123456 wdt:P69 ?almaMater .
  FILTER (lang(?almaMater) = ""ja"" || lang(?almaMater) = """")
  FILTER EXISTS { ?almaMater wdt:P31/wdt:P279* wd:Q391 . } # Organization
  FILTER EXISTS { ?almaMater wdt:P31/wdt:P279* wd:Q3912 . } # University
  FILTER EXISTS { ?almaMater wdt:P31/wdt:P279* wd:Q483627 . } # Educational institution
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Eiji Ōtsuka.",1,5,2,1,1,3,3,71,0,0,1,0,0.0,0
179,1,train,Give me the parent of Ubol Ratana.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbp:name ""Ubol Ratana""@en .
  ?person dbo:father ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
528,16,train,Give me the commander in the work of --01-09.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . ?v1 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?commander WHERE {
  ?event dbo:date ?date .
  ?event dbo:commander ?commander .
  FILTER (STRSTARTS(STR(?date), ""2010-01-09T"")) # Adjust the year as needed
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
177,6,train,"Give me the headquarter of the office, that is an organisation, of Joo Don-sik.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/location> ?result . <http://dbpedia.org/resource/Joo_Don-sik> <http://dbpedia.org/property/office> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?organization ?headquarters WHERE {
  ?person dbo:agent ?organization .
  FILTER (str(?person) = ""Joo_Don-sik"")
  
  OPTIONAL { ?organization dbo:headquarters ?headquarters . }
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
528,7,train,Give me the birth name of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?birthName .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Narciso Campero. You can find this by searching for ""Narciso Campero"" in DBpedia or using a SPARQL endpoint to query for his resource.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
16,6,train,Give me the profession of Satomi Ishihara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia/Wikidata ID for Satomi Ishihara. You can find this ID by searching for her on Wikidata or DBpedia.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
617,5,train,"Who is the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?antiochus dbo:father dbr:Antiochus_III_the_Great .
  ?antiochus a dbo:Monarch .
  ?antiochus dbo:successor ?successor .
  ?successor a dbo:Monarch .
}
```

This query does the following:
- Identifies Antiochus as the son of Antiochus III the Great.
- Ensures that both Antiochus and his successor are classified under `dbo:Monarch`, indicating royalty.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
161,1,train,Give me the military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
SELECT ?militaryForce WHERE {
  ?event dbo:wikiPageID ""Spanish_Civil_War"" .
  ?event dbo:militaryConflictOf ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,514,0,0.0,0
404,10,train,"Give me the spouse of Princess Victoria Louise of Prussia and child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Find Princess Victoria Louise of Prussia
  dbr:Princess_Victoria_Louise_of_Prussia dbo:spouse ?spouse .
  
  # Ensure the spouse is a child of Ernest Augustus, Crown Prince of Hanover
  ?spouse dbo:childOf dbr:Ernest_Augustus,_Crown_Prince_of_Hanover .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
747,12,train,Give me the band of Shèna and band of Amba Shepherd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandShena ?bandAmanda WHERE {
  # Find Shèna's band
  ?shena a dbo:MusicalArtist ;
         foaf:name ""Shèna""@en .
  OPTIONAL { 
    ?shena dbo:memberOf ?bandShena .
  }

  # Find Amba Shepherd's band
  ?amanda a dbo:MusicalArtist ;
          foaf:name ""Amanda Shepherd""@en .
  OPTIONAL {
    ?amanda dbo:memberOf ?bandAmanda .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,2,train,Give me the person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?alias WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person dbp:birthName ""Edin Dervišhalidović"" . }
  OPTIONAL { ?person foaf:name ?alias . }
}
```",1,1,2,1,1,2,3,28,1,1540255,0,6.492427232875573e-07,1.0,1.2984846035434344e-06
767,4,train,"Give me the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ""Green""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?adminName WHERE {
  ?green a dbo:Settlement ;
         rdfs:label ""Green""@en .
  
  OPTIONAL { 
    ?green dbo:partOf ?adminEntity .
    ?adminEntity rdfs:label ?adminName .
    FILTER(LANG(?adminName) = 'en')
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
485,8,train,"Give me the entity in the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Western_European_Time .
}
```",2,3,3,2,1,2,3,28,0,8,46363,0.0,0.0,0
488,10,train,Give me the administration of Emperor Go-Yōzei and birth place of Enomoto Takeaki.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?emperorReign ?enomotoBirthPlace
WHERE {
  # Get the reign of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reign ?emperorReign .
  
  # Get the birthplace of Enomoto Takeaki
  dbr:Enomoto_Takeaki dbo:birthPlace ?enomotoBirthPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,15,train,Who is the person born as the birth name of Ted McGinley?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ""Ted McGinley""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER(?birthName = ""Ted McGinley"")
}
```

This query does the following:
- It selects individuals (`?person`) who are of type `dbo:Person`.
- It looks for a label matching ""Ted McGinley"" in English.
- It checks if the birth name (`dbo:birthName`) is also ""Ted McGinley"".",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
197,3,train,Who is the awardee of Leroy P. Steele Prize?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?prize a dbo:Award .
  ?prize dbo:name ""Leroy P. Steele Prize"" .
  ?prize dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,2,9,0,0,21,0,0.0,0
488,13,train,"Give me the death place of the father, that is a politician, of Yūki Hideyasu.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  # Find Yūki Hideyasu
  dbr:Yuki_Hideyasu dbo:father ?father .

  # Ensure the father is a politician
  ?father rdf:type dbo:Politician .
  
  # Get the death place of the father
  OPTIONAL { ?father dbo:deathPlace ?deathPlace . }
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
701,9,train,Give me the parent of Meritamen and parent of Henuttawy (19th dynasty).,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person (SAMPLE(?parent) AS ?parent)
WHERE {
  VALUES (?person ?label) { 
    (:Meritamen ""Meritamen""@en) 
    (:Henuttawy ""Henuttawy""@en)
  }
  
  ?person dbo:spouse|dbo:child ?parent .
  OPTIONAL { ?parent rdfs:label ?parentLabel . FILTER (lang(?parentLabel) = 'en') }
}
GROUP BY ?person
ORDER BY ?person",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
10,8,train,"Give me the associated musical artist of the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find Matt Colton in DBpedia
  ?person a dbo:Person ;
          foaf:name ""Matt Colton""@en .
  
  # Assume he has worked with artists (e.g., as an engineer or producer)
  ?work dbo:producer ?person ;
        dbo:performer ?artist .

  FILTER(?artist != ?person) # Ensure we don't select Matt Colton himself
}
```",2,3,3,2,1,2,3,28,0,0,4,0,0.0,0
528,8,train,Give me the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName WHERE {
  ?person dbo:birthName ""Narciso Campero Leyes"" .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```

This query searches for entities in DBpedia where the `dbo:birthName` property matches ""Narciso Campero Leyes"". It also optionally retrieves a label for the person, filtered to English language labels.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,15,train,Give me the father of the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?father WHERE {
  # Find Thinkhaya of Pagan
  ?thinkhaya a dbo:Person ;
             rdfs:label ""Thinkhaya of Pagan""@en .

  # Find his children
  ?child dbo:parent ?thinkhaya .

  # Find the fathers of those children
  ?child dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
360,0,train,Give me the writer of The Roaring Silence.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  dbr:The_Roaring_Silence dbo:author ?writer .
}
```",1,1,2,1,1,2,3,28,0,0,8,0,0.0,0
404,13,train,"Give me the parent of the child, that is a royalty, of Ernest Augustus, Duke of Brunswick.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/child> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Ernest Augustus, Duke of Brunswick
  ?ernestAugustus a dbo:Duke ;
                 foaf:name ""Ernest Augustus, Duke of Brunswick""@en .

  # Step 2: Find his children
  ?child dbo:childOf ?ernestAugustus .

  # Step 3: Filter for royalty among the children
  OPTIONAL { ?child dbo:royaltyTitle ?title . FILTER(?title != """") }

  # Step 4: Retrieve the parent of that child
  ?parent dbo:parentOf ?child .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
547,6,train,Give me the actor of Enemy at the Door.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enemy_at_the_Door> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dcterms:title ""Enemy at the Door""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
318,4,train,Give me the person born in 1970 and professional in Composer.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthYear ""1970""^^xsd:gYear .
  ?person dbo:occupation dbp:Composer .
}
```",2,2,3,1,2,2,2,9,0,0,7,0,0.0,0
626,6,train,Give me the commander in Battle of Leipzig and awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  # Find the Battle of Leipzig resource
  dbr:Battle_of_Leipzig dbo:commander ?commander .

  # Ensure the commander was awarded the Order of St. Andrew
  ?commander dbo:awardeeOf dbr:Order_of_St._Andrew .
}
```

This query does the following:
- It identifies the resource for the Battle of Leipzig.
- It looks for individuals who were commanders in this battle.
- It checks if these commanders were also awardees of the Order of St. Andrew.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,13,train,Give me the alma mater of the administration of George K. Nash.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> ?result . ?v1 <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""George K. Nash""@en .
  
  OPTIONAL { 
    ?person dbo:almaMater ?almaMater .
  }
}
```",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
9,13,train,Give me the alma mater of the awardee of Royal Medal.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . ?v1 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  ?person dbo:award dbr:Royal_Medal .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```

This query selects individuals (`?person`) who have been awarded the Royal Medal and retrieves their alma mater (`?almaMater`). The `OPTIONAL` clause ensures that even if an individual does not have an alma mater listed, they will still be included in the results.",2,2,3,2,1,3,3,71,0,0,31,0,0.0,0
182,1,train,Give me the war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?event ?label ?description WHERE {
  ?event a dbo:Event .
  OPTIONAL { ?event rdfs:label ?label FILTER (lang(?label) = 'en') . }
  OPTIONAL { ?event dbo:description ?description FILTER (lang(?description) = 'en') . }
  ?event dbo:agent dbr:Jagath_Dias .
}
```",1,1,2,1,1,2,3,28,0,0,5,0,0.0,0
801,13,train,"Give me the producer of the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/ontology/producer> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer WHERE {
  ?song a dbo:SongsBy50Cent ;
        dbo:musicalWork [dbo:composer ?producer] .
}
```",2,5,3,2,1,3,3,71,0,0,38,0,0.0,0
534,4,train,"Give me the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?event dbo:location dbr:Millennium_Stadium ;
         dbo:eventName ""2012 Pro12 Grand Final""@en .
  
  ?location a dbo:SportsVenue, dbo:ArchitecturalStructure ;
            dbo:location dbr:Cardiff .
}
```

This query does the following:
- It looks for an event with the name ""2012 Pro12 Grand Final"" and specifies its location as Millennium Stadium.
- It then finds locations that are both a `SportsVenue` and an `ArchitecturalStructure`, specifically located in Cardiff.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
645,3,train,"Give me the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Wilkes Maurice""@en .
  OPTIONAL { ?person dbo:country ?residence . }
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
747,3,train,"Who is the person decedent, that is an athlete and a soccer player, at Zolotonosha?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:deathPlace dbr:Zolotonosha .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,9,train,Give me the spouse of Princess Victoria Louise of Prussia and parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?princess a dbo:Person ;
            dbo:spouse ?spouse .
  
  FILTER (
    str(?princess) = ""Princess_Victoria_Louise_of_Prussia"" &&
    EXISTS { ?child dbo:parent ?spouse . 
             ?child rdfs:label ""Prince_Ernest_Augustus_of_Hanover_(1914)""@en .
           }
  )
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,12,train,Give me the spouse of Laodice IV and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?nysa dbo:parent ?parent .
  ?parent dbo:spouse ?spouse .
  ?nysa rdfs:label ""Nysa (wife of Pharnaces I of Pontus)""@en .
  ?laodiceIV dbo:spouse ?parent .
  ?laodiceIV rdfs:label ""Laodice IV""@en .
}
```",2,2,3,1,2,3,3,71,0,1,1,0.0,0.0,0
712,10,train,Who is the awardee of the show of Soviet Union?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . ?v0 <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?show dbo:country dbr:Soviet_Union .
  ?award dbo:recipient ?awardee .
  ?show dbo:relatedAward ?award .
}
```",2,2,3,2,1,3,2,20,0,0,1209,0,0.0,0
528,12,train,Give me the war of Orozimbo Barbosa and force of Narciso Campero.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?description WHERE {
  # Find the war involving Orozimbo Barbosa and Narciso Campero
  ?war a dbo:MilitaryConflict ;
      dbo:participatedIn [
        dbo:agent dbr:Orozimbo_Barbosa ;
        dbo:agent dbr:Narciso_Campero
      ] .
  
  # Get the description of the war
  ?war dbo:description ?description .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
30,4,train,"Give me the native of Paris and professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:nationality dbr:France .
  ?person dbo:birthPlace dbr:Paris .
  
  { ?person dbo:occupation dbr:Financier . }
  UNION
  { ?person dbo:occupation dbr:Businessman . }
  UNION
  { ?person dbo:occupation dbr:Vineyard_owner . }
  UNION
  { ?person dbo:occupation dbr:Art_collector . }
  UNION
  { ?person dbo:occupation dbr:Racehorse_owner . }

  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
303,0,train,Give me the party of Guillermo Endara.,SELECT ?result WHERE { <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q123456 wdt:P102 ?party .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Guillermo Endara. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
754,5,train,Give me the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person dbo:child ?child .
  FILTER(STR(?person) = ""Ram Khamhaeng"")
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
820,1,train,Give me the child of Jack Schwartzman.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jack Schwartzman""@en .
  ?person dbo:child ?child .
}
```",1,1,2,1,1,3,2,20,2,1,0,0.6666666666666666,1.0,0.8
10,1,train,Give me the band member of Luke Vibert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?band dbo:member dbr:Luke_Vibert .
  ?band dbo:member ?bandMember .
  FILTER(?bandMember != dbr:Luke_Vibert)
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
959,11,train,"Give me the member of the alma mater, that is Japanese and an organisation and a university and an educational institution, of Eiji Ōtsuka.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. <http://dbpedia.org/resource/Eiji_Ōtsuka> <http://dbpedia.org/ontology/almaMater> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dcterms: <http://purl.org/dc/terms/>

SELECT ?university WHERE {
  ?eiji dbo:almaMater ?university .
  FILTER (strstarts(str(?eiji), ""http://dbpedia.org/resource/Eiji_Ōtsuka""))
  
  ?university a dbo:University ;
             a dbo:EducationalOrganization ;
             a dbo:Organisation .
             
  OPTIONAL { ?university dcterms:language ?lang . }
  FILTER (langMatches(lang(?lang), ""ja"") || lang(?lang) = """")
}
```",2,6,3,2,1,3,3,71,0,0,267,0,0.0,0
365,4,train,Give me the reference to The Blasters and band of Phil Alvin.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
SELECT ?reference WHERE {
  ?band rdf:type dbo:MusicalBand ;
        foaf:name ""The Blasters"" .
  OPTIONAL { 
    ?band dbo:member ?member .
    ?member foaf:name ""Phil Alvin"" .
  }
  ?band dbo:wikiPageRedirects ?reference .
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
963,0,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Srbija .
}
```

This query selects entities (`?entity`) that have a `dbo:country` property pointing to the DBpedia resource for Serbia (denoted as ""dbr:Srbija"").",1,1,2,1,1,3,2,20,0,0,5428,0,0.0,0
994,4,train,Give me the associated musical artist of Watchtower (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q123456 wdt:P175 ?artist .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Watchtower (band). You can find this by searching for ""Watchtower band"" on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
392,11,train,"Give me the province of the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/province> ?result . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?province WHERE {
  # Find Sebastiano Bianchetti's resource
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@it .
  
  # Get the residence of Sebastiano Bianchetti
  ?person dbp:residence ?settlement .

  # Ensure the settlement is in Italy and is a populated place
  ?settlement a dbo:Settlement ;
              dbo:country dbr:Italy ;
              dbo:administrativeTerritory ?province .
}
```",2,4,3,2,1,2,3,28,0,0,1,0,0.0,0
427,2,train,Give me the party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q1528 dbo:politicalParty ?party .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
92,2,train,Give me the band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:name ""Joseph Michael""@en .
  ?person dbo:memberOf ?band .
}
```

This query looks for a person named Joseph Michael and retrieves the band he is associated with through the `memberOf` property.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
303,4,train,"Give me the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  ?place rdfs:label ""El Valle de Antón""@en .
  ?place dbo:country ?country .
  FILTER(LANG(?country) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,4,train,Give me the alma mater of Jovan Hristić and entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?almaMater WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jovan Hristić""@en .
  
  ?person dbo:almaMater ?almaMater .

  OPTIONAL { 
    ?almaMater dbp:country ""Serbia"" .
  }
}
```",2,2,3,1,2,2,2,9,1,0,0,1.0,1.0,1.0
534,8,train,Give me the headquarter of the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?v0 . ?v0 <http://dbpedia.org/ontology/headquarter> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?arena dbo:location dbr:RDS_Arena .
  ?arena dbo:owner ?owner .
  ?owner dbo:headquarters ?headquarters .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
48,9,train,"Give me the writer of the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v0 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . ?v0 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?writer WHERE {
  ?producer a dbo:RecordProducer ;
            foaf:name ""Shellback"" .
  
  ?production dbo:recordedBy ?producer ;
              dbo:work ?work .

  OPTIONAL { 
    ?work dbo:composer ?writer .
  }
}
```",2,3,3,2,1,3,2,20,0,0,1065,0,0.0,0
820,9,train,Give me the award of the author of Understanding Comics.,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?author dbo:book dbr:Understanding_Comics .
  ?author foaf:name ""Scott McCloud"" .
  ?author dbo:award ?award .
}
```",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
281,3,train,Give me the award of Jonathon Band.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jonathon Band""@en .
  OPTIONAL { ?person dbo:award ?award . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
77,6,train,Give me the war of Alexander Chechenskiy and force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?opposingForce WHERE {
  # Find the war involving Alexander Chechenskiy
  ?person a dbo:Person ;
          foaf:name ""Alexander Chechenskiy""@en .
  
  ?person dbo:participatedIn ?war .

  # Find the opposing military force of Alexander I of Russia in that war
  ?war dbo:opposingMilitaryForce ?opposingForce .

  OPTIONAL {
    ?opposingForce dbo:commandedBy dbr:Aleksandr_I_of_Russia .
  }
}
```",2,2,3,1,2,3,2,20,0,0,6,0,0.0,0
285,7,train,Give me the parent of the child of Tina Onassis Niarchos.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent
WHERE {
  # Find Tina Onassis Niarchos
  ?tina a dbo:Person ;
        foaf:name ""Tina Onassis Niarchos""@en .
  
  # Find her children
  ?child dbo:spouseOrPartner ?tina ;
         a dbo:Person .

  # For each child, find their parents
  ?child dbp:parent ?parent .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
64,1,train,Give me the entity in Serbia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Serbia .
}
```",1,1,2,1,1,2,2,9,5428,0,0,1.0,1.0,1.0
404,8,train,"Who is the father of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father .
}
```

In this query:
- `wd:Q123456` should be replaced with the actual DBpedia resource identifier for Ernest Augustus, Duke of Brunswick. You can find this by searching DBpedia or using a tool like Wikidata to get the correct Q number.
- `wdt:P22` is the property used in DBpedia and Wikidata to denote ""father.""",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,16,train,Give me the administration of the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . ?result <http://dbpedia.org/property/governor> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person rdfs:label ""George Kilbon Nash""@en .
  ?person a dbo:Person .
  OPTIONAL { 
    ?person dbo:positionHeld ?administration .
  }
}
```",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
994,2,train,Give me the band member of Don Dokken.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"```sparql
SELECT ?member WHERE {
  wd:Q1234568 dbo:musicalArtist ?band .
  ?band dbo:bandMember ?member .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia identifier for Don Dokken. You can find this identifier by searching for Don Dokken on DBpedia or using a SPARQL endpoint to look up his resource.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,8,train,Give me the war of the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war
WHERE {
  # Find the responsible party of the 2019 Sri Lanka Easter bombings
  dbr:2019_Sri_Lanka_Easter_bombings dbo:perpetrator ?responsibleParty .

  # Find wars associated with the responsible party
  ?responsibleParty dbo:participatedInWar ?war .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
294,5,train,"Give me the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Marion James"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { ?birthPlace a dbo:Settlement }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
64,2,train,"Give me the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Writer .
  ?person dbo:deathPlace dbr:Sremska_Kamenica .
  OPTIONAL { ?person foaf:name ?name . }
}
```

This query does the following:
- Selects individuals (`?person`) who are of type `dbo:Writer`.
- Filters those whose death place is Sremska Kamenica (`dbr:Sremska_Kamenica`).
- Optionally retrieves their name using the `foaf:name` property.",1,2,2,1,1,2,2,9,0,0,2,0,0.0,0
778,4,train,Give me the author of Pushd and popd.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pushd_and_popd> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?software rdfs:label ""pushd""@en .
  ?software dbo:creator ?person .
  ?person foaf:name ?author .
  
  OPTIONAL {
    ?software rdfs:label ""popd""@en .
    ?software dbo:creator ?person2 .
    FILTER(?person = ?person2)
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,8,train,Give me the birth name of Gigi Rice.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  ?person foaf:name ""Gigi Rice""@en .
  ?person dbo:birthName ?birthName .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
996,0,train,Give me the force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person dbo:birthName ""Dagobert Sigmund von Wurmser"" .
  ?person dbo:role ?role .
  OPTIONAL { ?role dbo:commanded ?force . }
  FILTER (lang(?person->rdfs:label) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
659,8,train,"Give me the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?event WHERE {
  # Rutger Jan Schimmelpenninck as an individual
  VALUES ?schimmelpenninck { dbr:Rutger_Jan_Schimmelpenninck }

  # Societal events he was involved in
  ?societalEvent dbo:agent ?schimmelpenninck .
  ?societalEvent a dbo:SocietalEvent .

  # General events he was involved in
  ?generalEvent dbo:agent ?schimmelpenninck .
  ?generalEvent a dbo:Event .

  # Military conflicts he was involved in
  ?militaryConflict dbo:agent ?schimpelpenning .
  ?militaryConflict a dbo:MilitaryConflict .

  # Union of all events
  VALUES ?event { ?societalEvent ?generalEvent ?militaryConflict }
}
```",1,4,2,1,1,3,3,71,0,0,2,0,0.0,0
488,1,train,Give me the death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q11939 dbo:placeOfBirth ?birthPlace .
  wd:Q11939 dbo:deathPlace ?deathPlace .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
197,6,train,Give me the birthplace of the awardee of Leroy P. Steele Prize.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://dbpedia.org/property/awards> ""Leroy P. Steele Prize""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient ?birthPlace WHERE {
  ?award dbo:winner ?recipient .
  FILTER (str(?award) = ""Leroy_P._Steele_Prize"")
  OPTIONAL { ?recipient dbo:birthPlace ?birthPlace }
}
```

This query does the following:
- It selects recipients (`?recipient`) of an award and their birthplace (`?birthPlace`).
- It filters for awards specifically named ""Leroy P. Steele Prize"".
- It uses `dbo:winner` to link awards to their winners.
- The `OPTIONAL` clause is used to ensure that even if a recipient's birthplace isn't available, the query still returns other information.",2,2,3,2,1,2,2,9,0,0,21,0,0.0,0
378,14,train,Give me the claim to fame of the commander in Great Siege of Gibraltar.,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?claimToFame WHERE {
  ?person dbo:wikiPageID ""1234567"" . # Replace with the actual WikiPage ID for George Augustus Eliott
  ?person dbo:notableWorkOrEvent ?event .
  ?event dbo:description ?description .
  FILTER(CONTAINS(LCASE(?description), ""great siege of gibraltar""))
  
  OPTIONAL {
    ?person dbo:claimToFame ?claimToFame .
  }
}
```

Note: You need to replace `""1234567""` with the actual WikiPage ID for George Augustus Eliott. This can be found by searching DBpedia or Wikipedia.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
959,17,train,"Give me the team of the manager, that is a sports manager, of 1998 Kashima Antlers season.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> ?v0 . <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?manager a dbo:SoccerManager ;
           dbo:managedTeam ?kashimaAntlers .
  
  ?kashimaAntlers dbo:season ?season ;
                  rdfs:label ""Kashima Antlers""@en .

  FILTER(CONTAINS(LCASE(?season), ""1998""))

  OPTIONAL { ?team dbo:manager ?manager . }
}
```

This query does the following:

- It selects entities that are of type `SoccerManager`.
- It checks if these managers have managed a team labeled as ""Kashima Antlers"".
- It filters for seasons containing ""1998"" to ensure we're looking at the correct year.
- It optionally retrieves teams managed by this manager.",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
48,3,train,Give me the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  dbr:Emotion_(Carly_Rae_Jepsen_album) dbo:composer ?writer .
}
```",1,1,2,1,1,3,2,20,0,0,48,0,0.0,0
547,3,train,Give me the child of William Haliburton.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ""William Haliburton""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?parent .
  ?parent dbp:children ?child .
  FILTER(CONTAINS(LCASE(?person), ""william haliburton""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
959,3,train,Who is the person born in 1958?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1958""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:birthYear ?year .
  FILTER (?year = ""1958""^^xsd:gYear) .
  OPTIONAL { ?person foaf:name ?name . }
}
ORDER BY ?name
```",1,1,2,1,1,3,3,71,2515,2380,0,0.5137895812053116,1.0,0.678812415654521
778,3,train,Give me the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ralph L. Brinster""@en .
  OPTIONAL { ?person dbo:honoraryTitle ?award . }
}
```",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
547,4,train,Give me the child of James Burton (property developer).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""James Burton"" ;
          dbp:occupation ""Property developer""@en .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
    ?spouse dbo:children ?child .
  }
}
```

This query does the following:
- It looks for a person with the name ""James Burton"" who has an occupation of ""Property developer.""
- It then attempts to find any children associated with his spouse.

Note that this approach assumes there is data available in DBpedia about James Burton's family, which may not always be comprehensive or accurate. Adjustments might be needed based on actual data availability and structure.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
10,11,train,Give me the professional in the birth name of Sharon Kao.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Sharon_Kao> <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sharon Kao"" ;
          dbo:birthName ?birthName .
  
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,2,1,2,3,28,0,0,39640,0,0.0,0
767,7,train,"Give me the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?character WHERE {
  ?person foaf:name ""Matthew Burland""@en .
  ?person dbo:portrayal ?character .
  ?character a dbo:FictionalCharacter .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
285,10,train,Who is the professional in the award of Stan Lee?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?recipient WHERE {
  ?award dbo:awardedBy dbr:Stan_Lee .
  ?award dbo:recipient ?recipient .
}
```",2,2,3,2,1,3,2,20,0,0,39640,0,0.0,0
701,8,train,Give me the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q1512 wdt:P22 ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
626,7,train,"Give me the commander in the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict ?commander WHERE {
  # Find military conflicts involving Alexander I of Russia
  ?conflict dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:participant dbr:Alexander_I_of_Russia .
  ].
  
  # Identify commanders in those conflicts
  ?conflict dbo:commander ?commander .
}
```

This query does the following:
- It looks for military conflicts (`dbo:MilitaryConflict`) that Alexander I of Russia participated in.
- It then identifies any commanders associated with these conflicts.",2,3,3,2,1,3,2,20,0,0,230,0,0.0,0
915,5,train,"Give me the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?spaulding dbo:child ?child .
  FILTER(STRSTARTS(STR(?spaulding), ""http://dbpedia.org/resource/Phillip_Spaulding""))
  
  ?child a dbo:FictionalCharacter ;
         dbp:genre ""Soap opera""^^xsd:string .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
838,6,train,Give me the band member of Kerber and band of Raša Đelmaš.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Kerber> . <http://dbpedia.org/resource/Raša_Đelmaš> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member ?band WHERE {
  # Find band members of Kerber
  { 
    ?band a dbo:Band ;
          dbp:name ""Kerber""@en .
    ?member dbo:bandMember ?band .
  }
  
  UNION
  
  # Find the band associated with Raša Đelmaš
  { 
    ?person foaf:name ""Raša Đelmaš""@sr .
    ?person dbo:bandMember ?band .
  }
}
```

This query does the following:
- Searches for entities classified as a `Band` with the name ""Kerber"".
- Retrieves individuals who are band members of this band.
- Uses a UNION to also find the band associated with Raša Đelmaš by looking for persons named ""Raša Đelmaš"" and their band memberships.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
356,8,train,"Give me the team of the native, that is a soccer player and a soccer manager, of Wolverhampton.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Wolverhampton> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:nationality dbr:Wolverhampton .
  ?person dbo:managerTeam ?team .
  
  OPTIONAL { 
    ?person dbo:currentManagerTeam ?team .
  }
  
  FILTER EXISTS { ?person dbo:occupation dbr:Soccer_manager . }
}
```

This query does the following:
- Selects individuals (`?person`) who are soccer players and have a nationality linked to Wolverhampton.
- Checks if they manage a team (`dbo:managerTeam` or `dbo:currentManagerTeam`).
- Ensures that these individuals also have an occupation as a soccer manager.",2,4,3,2,1,3,2,20,0,0,46,0,0.0,0
838,7,train,"Give me the band of the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Identify a member of YU Grupa
  ?member dbo:memberOf dbr:YU_Grupa .
  
  # Ensure the member is an artist and specifically a musical artist
  ?member rdf:type dbo:MusicalArtist .

  # Find the band associated with this member
  ?member dbo:band ?band .
}
```

This query does the following:
- It selects distinct bands (`?band`) where there exists a member (`?member`).
- The member must be part of YU Grupa (`dbo:memberOf dbr:YU_Grupa`).
- The member is filtered to ensure they are a `MusicalArtist`.
- Finally, it retrieves the band associated with this member (`dbo:band ?band`).",2,4,3,2,1,3,2,20,0,0,21,0,0.0,0
827,9,train,"Who is the child, that is a royalty, of the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?parent .

  # Step 2: Find the children of his parent(s)
  ?parent dbo:child ?child .

  # Step 3: Filter for those who are royalty
  ?child a dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,3,0,0.0,0
778,1,train,Give me the author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?work dcterms:title ""Chroot""@en .
  ?work dbo:author ?person .
  ?person foaf:name ?author .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
285,5,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional a dbo:Person .
  ?professional dbo:profession dbr:{Field} .
}
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
617,10,train,Give me the child of Antiochus III the Great and parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Antiochus III the Great
  ?antiochus3 a dbo:Monarch ;
              dbo:spouse ?wife .

  # Identify his children
  ?antiochus3 dbo:child ?child .

  # Find Nysa, wife of Pharnaces I of Pontus
  ?nysa a dbo:Person ;
        dbo:spouse ?pharnaces1 .
  
  # Ensure the child is also the parent of Nysa
  ?child dbo:parent ?nysa .

  # Link Pharnaces I to his wife Nysa
  ?pharnaces1 dbr:Pharnaces_I_of_Pontus ;
              dbo:spouse ?nysa .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
16,11,train,Give me the spouse of the person born as Ted Martin McGinley.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . ?v0 <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbp:birthName ""Ted Martin McGinley"" .
  OPTIONAL { ?person dbo:spouse ?spouse . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
747,9,train,Give me the person born on 1985-04-29 and band of Amba Shepherd.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Amba_Shepherd> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person ?dateOfBirth ?band
WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Amba Shepherd""@en ;
          dbo:dateOfBirth ?dateOfBirth .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
  }
  
  FILTER (xsd:date(?dateOfBirth) = ""1985-04-29""^^xsd:date)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,2,train,Give me the native of Prague.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthPlace dbr:Prague .
}
```",1,1,2,1,1,2,2,9,1654,0,0,1.0,1.0,1.0
365,0,train,Give me the band of Phil Alvin.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Phil_Alvin> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:name ""Phil Alvin""@en .
  ?person dbo:memberOf ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
328,7,train,"Who is the leader, that is an office holder and a politician, of Gustav Jonson?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?leader WHERE {
  ?gustavJonson a dbo:Person ;
                foaf:name ""Gustav Jonson""@en .
  
  ?gustavJonson dbo:leader ?leader .

  ?leader a dbo:OfficeHolder ;
          a dbo:Politician .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
404,12,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover and parent of Prince Ernest Augustus of Hanover (born 1914).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent dbo:spouse ?spouse .
  ?parent a dbo:Person ;
          foaf:name ""Ernest Augustus, Crown Prince of Hanover""@en .

  ?child dbo:father ?parent ;
         dbo:mother ?spouse .

  ?grandChild dbo:father ?child ;
              foaf:name ""Prince Ernest Augustus of Hanover (1914)""@en .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
177,4,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism and entity in South Korea.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
SELECT ?headquarter ?entity WHERE {
  ?ministry dcterms:isPartOf <http://dbpedia.org/resource/South_Korea> ;
            dbp:name ""Ministry of Culture, Sports and Tourism""@en .
  OPTIONAL { ?ministry dbo:headquarters ?headquarter . }
  OPTIONAL { ?ministry foaf:page ?entity . }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
161,5,train,Who is the predecessor of Indalecio Prieto?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Indalecio_Prieto> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?position dbo:incumbent dbr:Indalecio_Prieto .
  ?position dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
915,7,train,"Give me the resident of the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/residence> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  # Step 1: Find Stephen Verona's birthplace
  dbr:Stephen_Verona dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .

  # Step 3: Find residents of that settlement
  ?resident dbo:residence ?birthPlace .
}
```",2,3,3,2,1,3,2,20,15,0,0,1.0,1.0,1.0
339,9,train,Who is the child of the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Frederick VIII of Denmark
  dbr:Frederick_VIII_of_Denmark dbo:predecessor ?predecessor .
  
  # Find the predecessor's children
  ?predecessor dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,4,2,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
345,5,train,"Who is the person born, that is a soccer player and a soccer manager, on 1978-09-15?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:birthDate ""1978-09-15""^^xsd:date .
  OPTIONAL { ?person dbo:managerOf ?team . }
}
```",1,3,2,1,1,3,2,20,3,8,0,0.2727272727272727,1.0,0.42857142857142855
701,13,train,Give me the parent of the child of Ramesses II.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . ?result <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Step 1: Find a child of Ramesses II
  ?child dbo:father dbr:Ramesses_II .
  
  # Step 2: Find the parent (mother) of that child
  ?child dbo:mother ?parent .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
485,1,train,Give me the birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Thomas Warner (poet). You can find this identifier by searching for him on DBpedia or using a SPARQL endpoint to query his unique ID.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
184,17,train,Give me the child of the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Archduchess Margaret of Austria born in 1925
  ?margaret a dbo:Person ;
            foaf:name ""Margaret of Austria"" ;
            dbo:birthYear ""1925"" .

  # Find her parents
  ?parent dbo:child ?margaret .
  
  # Find the children of those parents (siblings of Margaret)
  ?parent dbo:child ?child .
  
  FILTER(?child != ?margaret) # Exclude Margaret herself from the results
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
115,2,train,Who is the alumnus of National University of San Marcos?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . },"```sparql
SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:National_University_of_San_Marcos .
}
```",1,1,2,1,1,2,2,9,74,0,0,1.0,1.0,1.0
161,17,train,"Give me the force, that is an event, of the figure known as El Director.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  VALUES ?character { dbr:El_Director }
  ?character dbo:affiliation ?force .
}
```",2,3,3,2,1,3,3,71,0,0,10,0,0.0,0
303,2,train,Give me the party of Arnulfo Arias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q123456 wdt:P102 ?party .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Arnulfo Arias. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
314,10,train,Give me the awardee of the award of Sergei Makovetsky.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v1 . <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Sergei Makovetsky""@en .
  OPTIONAL { ?person dbo:honoraryTitle ?award . }
}
```",2,2,3,2,1,2,3,28,0,0,951,0,0.0,0
9,6,train,Who is the awardee of Royal Medal?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Medal> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects dbr:Royal_Medal .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,3,71,0,0,45,0,0.0,0
161,13,train,"Give me the military force of the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Francisco Largo Caballero as an individual
  dbr:Francisco_Largo_Caballero a dbo:Person .

  # His involvement in the Spanish Civil War, which is both a societal event and military conflict
  ?event dbo:participant dbr:Francisco_Largo_Caballero ;
         a (dbo:SocietalEvent|dbo:MilitaryConflict) .
  
  # The military force associated with him during this event
  ?event dbo:militaryForce ?militaryForce .
}
```",2,4,3,2,1,3,3,71,0,0,514,0,0.0,0
281,12,train,Give me the war of New Zealand Army and entity in Colony of New Zealand.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?opponent WHERE {
  ?war a dbo:MilitaryConflict ;
      dbo:participatingMilitaryUnit dbr:New_Zealand_Army ;
      dbo:location dbr:Colony_of_New_Zealand .
  
  OPTIONAL { 
    ?war dbo:opposingMilitaryUnit ?opponent .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
701,11,train,Give me the parent of the child of Nefertari.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nefertari> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent
WHERE {
  ?nefertari dbo:spouse ?husband .
  ?child dbo:mother ?nefertari .
  ?child dbo:father ?husband .
  ?child dbo:parent ?grandparent .
  ?grandparent rdfs:label ?parentLabel .
  FILTER (CONTAINS(LCASE(?parentLabel), ""nefertari""))
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
161,4,train,"Give me the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  # Find forces associated with Francisco Franco
  ?force dbo:associatedWith dbr:Franco_Francisco .

  # Ensure the force is categorized as a societal event, an event, and a military conflict
  ?force rdf:type ?type1 .
  ?force rdf:type ?type2 .
  ?force rdf:type ?type3 .

  FILTER (
    ?type1 IN (dbr:Societal_event, dbr:Event) &&
    ?type2 IN (dbr:Military_conflict, dbr:Event) &&
    ?type3 IN (dbr:Societal_event, dbr:Military_conflict)
  )
}
```",1,4,2,1,1,3,3,71,0,0,12,0,0.0,0
488,5,train,"Who is the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?office WHERE {
  ?matsudairaTadamasa a dbo:Person ;
                      foaf:name ""Matsudaira Tadamasa""@en .
  
  ?matsudairaTadamasa dbo:father ?father .

  OPTIONAL { 
    ?father dbo:officeHolder ?office .
  }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
16,2,train,Give me the person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER (CONTAINS(LCASE(?birthName), ""georgeanne marie rice""))
}
```",1,1,2,1,1,3,3,71,1,1,0,0.5,1.0,0.6666666666666666
328,10,train,Give me the leader of People's Commissariat of Defense of the Soviet Union and awardee of Order of Suvorov.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:position dbr:People's_Commissar_for_Defence_of_the_Soviet_Union .
  ?person dbo:award dbr:Order_of_Suvorov .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,14,train,"Give me the person decedent at the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?v1 . ?result <http://dbpedia.org/ontology/deathPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:placeOfBirth ?birthPlace .
  ?person dbo:deathPlace ?deathPlace .
  FILTER (str(?deathPlace) = ""Algiers"") .
}
```

This query does the following:
- It selects individuals (`?person`) and their death places (`?deathPlace`).
- It filters results to include only those whose `?deathPlace` is Algiers.",2,3,3,2,1,3,3,71,0,0,122,0,0.0,0
404,3,train,Give me the birth name of Princess Victoria Louise of Prussia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?birthName .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Princess Victoria Louise of Prussia. You can find this identifier by searching for her on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,12,train,Give me the parent of Henuttawy (19th dynasty) and spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Henuttawy_(19th_dynasty)> . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Find Henuttawy (19th dynasty) and her parent
  ?henuttawy a dbo:Person ;
             rdfs:label ""Henuttawy (19th dynasty)""@en .
  
  OPTIONAL { 
    ?henuttawy dbo:parent ?parent .
  }
  
  # Find Ramesses II and his spouse
  ?ramessesII a dbo:Person ;
              rdfs:label ""Ramesses II""@en .

  OPTIONAL {
    ?ramessesII dbo:spouse ?spouse .
  }

  FILTER (lang(?henuttawyLabel) = 'en')
  FILTER (lang(?ramessesIILabel) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,11,train,Give me the person born as the birth name of Dino Merlin.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Dino_Merlin dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  FILTER(?person != dbr:Dino_Merlin)
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
492,12,train,Give me the person decedent at Algiers and commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:deathPlace dbr:Algiers .
  ?person dbo:commanderOf ?event1 .
  ?event1 rdfs:label ""Franco-Hova Wars""@en .

  OPTIONAL { ?person foaf:name ?name . }
}
```

This query does the following:
- Selects individuals (`?person`) who are of type `dbo:MilitaryPerson`.
- Filters those whose death place is Algiers.
- Checks if they were commanders in an event labeled as ""Franco-Hova Wars.""
- Optionally retrieves their name using the `foaf:name` property.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
783,5,train,"Give me the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?person rdf:type dbo:Artist .
  ?person dbo:occupation dbr:Musical_artist .
  ?person foaf:name ""Priscilla Opoku-Kwarteng""@en .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
963,5,train,"Give me the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?location rdfs:label ""Sremski Karlovci""@en .
  ?location dbo:country dbr:Serbia .
  ?location dbo:government ?government .
  ?government dbo:rulingParty ?party .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
285,1,train,Give me the spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1116 dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
487,0,train,Give me the country of 2022 Vermont House of Representatives election.,SELECT ?result WHERE { <http://dbpedia.org/resource/2022_Vermont_House_of_Representatives_election> <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?election a dbo:Election .
  ?election dbo:eventLocation dbr:Vermont .
  ?election dbo:date ?date .
  FILTER (YEAR(?date) = 2022)
  ?election dbo:country ?country .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
177,5,train,Give me the entity in the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?v0 . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person dbo:birthName ""Alexander Gamelin""@en .
  ?person dbo:residence ?residence .
}
```",2,2,3,2,1,2,2,9,0,0,3065,0,0.0,0
465,0,train,Give me the death place of Jiřina Štěpničková.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q123456 wdt:P20 ?deathPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Jiřina Štěpničková. You can find this identifier by searching her name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
404,11,train,"Give me the spouse of the person born, that is a royalty, as Princess Victoria Louise of Prussia.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/spouse> ?result . ?v0 <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          dbp:name ""Victoria Louise of Prussia"" ;
          dbp:title ""Princess"" .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
328,12,train,Give me the commander in Eastern Front (World War II) and leader of People's Commissariat of Defense of the Soviet Union.,SELECT ?result WHERE { <http://dbpedia.org/resource/People's_Commissariat_of_Defense_of_the_Soviet_Union> <http://dbpedia.org/ontology/leader> ?result . <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?person WHERE {
  ?person dbo:position ""Commander-in-Chief of the Soviet Union"" .
  ?person dbo:office ""People's Commissar for Defence (Soviet Union)"" .
  ?person dbo:rank ""Marshal of the Soviet Union"" .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""stalin"") || CONTAINS(LCASE(?name), ""georgy zhukov""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,5,train,Who is the commander in Battle of Verdun?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  wd:Q1234 wdt:P910 ?commander .
}
```

Note: In this query, `wd:Q1234` should be replaced with the actual DBpedia resource identifier for the Battle of Verdun. You can find this by searching DBpedia or using a SPARQL endpoint to identify the correct entity.",1,1,2,1,1,3,3,71,0,0,17,0,0.0,0
421,5,train,Give me the birth name of Dino Merlin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dino_Merlin> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?birthName .
  FILTER (lang(?birthName) = ""en"")
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Dino Merlin.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
996,3,train,Who is the awardee of 1778.0?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:identifier ""1778.0"" .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
801,5,train,"Give me the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?artist a dbo:MusicalArtist .
  ?artist dbo:genre dbr:Rap_music .
}
```",1,2,2,1,1,3,3,71,9,75,1354,0.10714285714285714,0.006603081438004402,0.01243953006219765
16,16,train,Give me the profession of the actor of Unnatural (TV series).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor ?profession WHERE {
  # Find the TV series ""Unnatural""
  dbr:Unnatural (dbo:starring) ?actor .
  
  # Get the profession of each actor
  ?actor dbo:occupation ?profession .
}
```",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
391,12,train,Give me the actor of All About the Andersons and actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  # Actors in ""All About the Andersons""
  {
    ?film1 dbo:title ""All About the Andersons""@en .
    ?film1 dbo:starring ?actor .
  }
  
  UNION
  
  # Actors in ""The Departed""
  {
    ?film2 dbo:title ""The Departed""@en .
    ?film2 dbo:starring ?actor .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
492,9,train,Give me the person decedent at French Algeria and commander in Franco-Hova Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:MilitaryPerson .
  ?person dbo:deathPlace dbr:French_Algeria .
  ?person dbo:role dbr:Commander_in_the_Franco-Hova_Wars .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
421,7,train,Give me the band member of Senidah and person born as Edin Dervišhalidović.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find Senidah's band members
  OPTIONAL {
    ?senidah dbo:member ?bandMember .
    FILTER(STRSTARTS(STR(?senidah), ""http://dbpedia.org/resource/Senidah""))
  }
  
  # Identify Edin Dervišhalidović as a person
  OPTIONAL {
    ?edin dbr:Edin_Dervišhalidović .
    FILTER(STRSTARTS(STR(?edin), ""http://dbpedia.org/resource/Edin_Dervišhalidović""))
  }
  
  # Ensure the band member is also Edin Dervišhalidović
  ?bandMember dbr:Edin_Dervišhalidović .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,7,train,Give me the parent of Archduchess Margaret of Austria (born 1925).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Margaret_of_Austria_(born_1925)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Archduchess ;
          dbo:birthDate ?birthDate .
  FILTER (CONTAINS(LCASE(?birthDate), ""1925""))
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  ?parent dbo:child ?person .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
285,9,train,Who is the child of the spouse of Aristotle Onassis?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?aristotleOnassis a dbo:Person ;
                    foaf:name ""Aristotle Onassis""@en .
  
  ?aristotleOnassis dbo:spouse ?spouse .

  ?spouse dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,5,0,0,1.0,1.0,1.0
547,0,train,Give me the resting place of James Burton (Egyptologist).,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?place WHERE {
  wd:Q123456 wdt:P20 ?place .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for James Burton, the Egyptologist. You can find this identifier by searching for him on DBpedia or using a SPARQL query to identify his unique resource.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,14,train,Give me the figure known as the nickname of Queen's University Belfast.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  VALUES ?university { dbr:Queen's_University_Belfast }
  ?university dbo:commonName ?nickname .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,15,train,"Give me the force of the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?officeHolder ?force
WHERE {
  ?officeHolder dbo:country dbr:Kingdom_of_Ireland .
  OPTIONAL { ?officeHolder dbo:hasForce ?force . }
}
```

This query attempts to find office holders associated with the Kingdom of Ireland and any forces they might have been linked to. Note that this is a broad query, as DBpedia's data coverage can be limited or structured differently than expected.",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
801,16,train,"Give me the work, that is a musical work and a song and a work, of the professional, that is a musical artist, in Rapper.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/occupation> ""Rapper""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://dbpedia.org/property/writer> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?artist a dbo:MusicalArtist ;
          dbo:genre dbr:Rap_music .
  ?work dbo:performer ?artist ;
        a dbo:Song .
}
```",2,6,3,2,1,3,3,71,0,0,2395,0,0.0,0
55,9,train,Give me the band member of Metallica and band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName ?formerBand ?newBand WHERE {
  # Find Jason Newsted as a member of Metallica
  ?metallicaMember dbo:band dbr:Metallica .
  ?metallicaMember foaf:name ""Jason Newsted""@en .

  # Get the name of the former band member
  ?metallicaMember foaf:name ?memberName .

  # Find the new band formed by Jason Newsted
  OPTIONAL {
    ?newBand dbo:bandLeader ?metallicaMember .
    ?newBand dbo:name ?newBandName .
    BIND(?newBandName AS ?newBand)
  }
}
```

This query does the following:
- It identifies a person (`?metallicaMember`) who was a member of Metallica.
- Filters this to specifically find Jason Newsted by matching his name.
- Retrieves the name of this band member.
- Optionally finds any new band that Jason Newsted leads, capturing its name.",2,2,3,1,2,2,3,28,0,0,3,0,0.0,0
429,0,train,Give me the administration of Andrew Johnson.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"```sparql
SELECT ?administration WHERE {
  wd:Q1116 dbo:presidencyOf ?administration .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
696,4,train,Who is the commander in Battle of Chishui River?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects dbr:Battle_of_Chishui_River .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,24,0,0.0,0
182,7,train,Give me the entity in Sri Lanka and war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?war
WHERE {
  # Find Mahesh Senanayake and his birthplace in Sri Lanka
  ?person a dbo:Person ;
          foaf:name ""Mahesh Senanayake""@en ;
          dbo:birthPlace dbr:Sri_Lanka .

  # Check if he participated in any wars
  OPTIONAL { 
    ?person dbo:militaryConflict ?war .
  }

  # Return the entity (person) and any war they were involved in
  BIND(?person AS ?entity)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
197,0,train,Give me the birthplace of Dumitru Nadu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dumitru_Nadu> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Dumitru Nadu. You can find this by searching for Dumitru Nadu on DBpedia or using a SPARQL endpoint to query for his unique identifier.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
92,11,train,"Give me the band member of the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?member WHERE {
  ?album dcterms:isPartOf ?band .
  ?band rdfs:label ""Nevermore""@en .
  ?album dbo:artist ?member .
  ?member dbo:occupation dbp:musician .
  FILTER(LANG(?band) = 'en')
}
```",2,3,3,2,1,3,3,71,0,0,12,0,0.0,0
391,2,train,Give me the actor of All About the Andersons.,SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dct:subject dbr:All_About_the_Andersons .
  ?movie dbo:starring ?actor .
  FILTER (lang(?actor) = ""en"")
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
626,10,train,Give me the award of the military force of Battle of Borodino.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?army ?award 
WHERE {
  # Find the military forces involved in the Battle of Borodino
  ?battle dbo:participatedInMilitaryConflict ?army .
  
  FILTER(?battle = dbr:Battle_of_Borodino)

  OPTIONAL {
    # Check if these armies received any awards
    ?army dbo:award ?award .
  }
}
```",2,2,3,2,1,3,2,20,0,0,53,0,0.0,0
701,5,train,Give me the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?setiI dbo:spouse ?parent .
  ?parent dbo:child ?child .
  FILTER (str(?setiI) = ""Seti_I"")
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
303,9,train,Give me the entity in Panama and party of Arnulfo Arias.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Arnulfo_Arias> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person dbo:nationality dbr:Panama .
  ?person foaf:name ""Arnulfo Arias"" .
  ?person dbo:memberOf ?party .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
435,1,train,Give me the region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"```sparql
SELECT ?region WHERE {
  wd:Q11173 wdt:P131* ?region .
}
```",1,1,2,1,1,2,3,28,0,0,2484,0,0.0,0
54,11,train,Give me the child of the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?soeMinWimalaDewi a dbo:Person ;
                    foaf:name ""Soe Min Wimala Dewi""@en .
  
  ?soeMinWimalaDewi dbo:father ?father .

  ?father dbo:child ?child .
}
```

This query does the following:
- It identifies Soe Min Wimala Dewi as a person with the specified name.
- It finds her father using the `dbo:father` property.
- It then retrieves all children of that father using the `dbo:child` property.",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
9,3,train,"Give me the entity, that is an organisation, in Belfast.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
SELECT ?entity WHERE {
  ?entity a dbo:Organisation .
  ?entity dbo:location dbr:Belfast .
}
```",1,2,2,1,1,3,3,71,57,0,0,1.0,1.0,1.0
492,1,train,Give me the commander in Franco-Hova Wars.,SELECT ?result WHERE { <http://dbpedia.org/resource/Franco-Hova_Wars> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?war dbo:participatedIn [
    a dbo:MilitaryConflict ;
    dbo:participant [
      a dbo:Person ;
      foaf:name ?name ;
      rdfs:label ?commander .
    ]
  ].
  
  FILTER(CONTAINS(LCASE(?war), ""franco-hova wars"") || CONTAINS(LCASE(?war), ""madagascar war""))
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
232,12,train,Give me the native of London and actor of Dog Soldiers (film).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?actor dbo:nationality dbr:United_Kingdom .
  ?actor dbo:birthPlace dbr:London .
  ?film dbo:starring ?actor .
  ?film rdfs:label ""Dog Soldiers""@en .
  FILTER (LANG(?film) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
645,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:United_Kingdom .
}
```",1,1,2,1,1,3,2,20,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
488,11,train,Give me the birth place of the commander in Boshin War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Person ;
          dbo:birthPlace ?birthPlace ;
          rdfs:label ""Tokugawa Yoshinobu""@en .
}
```",2,2,3,2,1,3,3,71,0,0,15,0,0.0,0
404,7,train,Who is the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Princess Victoria Louise of Prussia""@en .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
534,10,train,"Give me the owner of the location, that is a venue and an architectural structure, of 2012 Pro12 Grand Final.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/owner> ?result . <http://dbpedia.org/resource/2012_Pro12_Grand_Final> <http://dbpedia.org/ontology/location> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ArchitecturalStructure>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?owner WHERE {
  # Identify RDS Arena as the venue for the event
  dbr:RDS_Arena a dbo:SportsVenue ;
                dbo:location dbr:Dublin .

  # Ensure it is also an architectural structure
  dbr:RDS_Arena a dbo:ArchitecturalStructure .

  # Retrieve the owner of RDS Arena
  OPTIONAL { dbr:RDS_Arena dbo:owner ?owner . }
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
232,10,train,Give me the child of Jon Pertwee and native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Jon Pertwee's children
  ?person dbo:spouse ?partner .
  ?partner dbo:children ?child .
  
  FILTER(?person = dbr:Jon_Pertwee)
  
  # Check if the child is a native of London
  ?child dbo:nationality dbr:United_Kingdom ;
         dbo:birthPlace dbr:London .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,15,train,"Give me the native of the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?nativeLanguage
WHERE {
  ?landmark a dbo:PopulatedPlace ;
            dbo:elevationAboveSeaLevel ?elevation ;
            dbp:nativeName ?nativeName .
  
  FILTER (?elevation = ""96.0""^^xsd:float)
  
  OPTIONAL { 
    ?landmark dbp:language ?nativeLanguage .
  }
}
```

This query does the following:
- Selects landmarks that are a type of `PopulatedPlace` (which includes settlements).
- Filters these landmarks to those with an elevation of exactly 96.0 meters.
- Retrieves the native language if available.",2,3,3,2,1,3,3,71,0,0,3320,0,0.0,0
747,2,train,Give me the band of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:birthName ""Shèna"" .
  ?person dbo:musicalBand ?band .
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
485,11,train,"Give me the entity in the birth place, that is a region, of Joseph Whitaker (naturalist).",SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Whitaker_(naturalist)> <http://dbpedia.org/ontology/birthPlace> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceRegion WHERE {
  # Find Joseph Whitaker (naturalist)
  ?person a dbo:Naturalist ;
          foaf:name ""Joseph Whitaker"" ;
          dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is categorized as a region
  ?birthPlace a dbo:AdministrativeRegion ;
              rdfs:label ?birthPlaceLabel .
  
  # Filter to ensure we are getting the correct Joseph Whitaker
  FILTER(CONTAINS(LCASE(?person), ""joseph whitaker""))

  # Return the label of the birthplace that is a region
  BIND(?birthPlace AS ?birthPlaceRegion)
}
```",2,3,3,2,1,2,3,28,0,0,369,0,0.0,0
754,9,train,Give me the parent of the parent of Min Linka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandparentCategoryLabel WHERE {
  # Find the category for Min Linka
  ?minLinkaCategory rdfs:label ""Min Linka""@en .
  
  # Find its parent category
  ?minLinkaCategory dbo:wikiPageRedirects ?parentCategory .

  # Find the grandparent category
  ?parentCategory dbo:wikiPageRedirects ?grandparentCategory .

  # Get the label of the grandparent category
  ?grandparentCategory rdfs:label ?grandparentCategoryLabel .
}
```",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
177,0,train,Give me the entity in South Korea.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/South_Korea> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:South_Korea .
}
```",1,1,2,1,1,2,2,9,3065,0,0,1.0,1.0,1.0
701,0,train,Give me the parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?parent WHERE {
  ?child dbo:wikiPageRedirects db:Q123456 . # Replace Q123456 with Meritamen's DBpedia ID
  ?child dbo:child ?parent .
}
```

To complete this query, you need to replace `Q123456` with the actual DBpedia identifier for Meritamen. You can find this by searching for her on DBpedia or using a SPARQL endpoint to look up her entity.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
365,3,train,Give me the real name of The Blasters.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?realName WHERE {
  wd:Q1234568 rdfs:label ""The Blasters""@en .
  wd:Q1234568 foaf:name ?bandName .
  ?person dbo:member ?bandMember .
  ?bandMember dbp:band ?bandName .
  ?person foaf:name ?realName .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
996,2,train,Give me the elevation of Lac d'Avoriaz.,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?result . },"```sparql
SELECT ?elevation WHERE {
  wd:Q123456 rdfs:label ""Lac d'Avoriaz""@en .
  OPTIONAL { wd:Q123456 dbo:elevationAboveSeaLevel ?elevation . }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Lac d'Avoriaz. You can find this by searching DBpedia or using a SPARQL query to identify the correct entity.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
9,8,train,Give me the nickname of Queen's University Belfast.,SELECT ?result WHERE { <http://dbpedia.org/resource/Queen's_University_Belfast> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  wd:Q1699 rdfs:label ?label .
  FILTER (lang(?label) = 'en')
  OPTIONAL { 
    wd:Q1699 schema:nickName ?nickname .
    FILTER(lang(?nickname) = 'en') 
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
161,10,train,Give me the military force of Rif War and commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce ?commander WHERE {
  # Rif War military forces and commanders
  {
    ?rifWarEvent a dbo:MilitaryConflict ;
                 dbo:militaryCommander ?rifCommander .
    ?rifCommander foaf:name ?rifCommanderName .
    ?rifMilitaryForce dbo:participatedIn ?rifWarEvent .
    BIND(""Rif War"" AS ?militaryForce)
  }
  
  UNION
  
  # Biscay Campaign military forces and commanders
  {
    ?biscayCampaign a dbo:MilitaryConflict ;
                    dbo:militaryCommander ?biscayCommander .
    ?biscayCommander foaf:name ?biscayCommanderName .
    ?biscayMilitaryForce dbo:participatedIn ?biscayCampaign .
    BIND(""Biscay Campaign"" AS ?militaryForce)
  }
  
  # Output the results
  {
    SELECT DISTINCT ?rifCommanderName WHERE { ?rifWarEvent a dbo:MilitaryConflict ; dbo:militaryCommander ?rifCommander . ?rifCommander foaf:name ?rifCommanderName . } UNION
    SELECT DISTINCT ?biscayCommanderName WHERE { ?biscayCampaign a dbo:MilitaryConflict ; dbo:militaryCommander ?biscayCommander . ?biscayCommander foaf:name ?biscayCommanderName . }
  }
}
ORDER BY ?militaryForce",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,1,train,Give me the associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234567 wdt:P175 ?artist .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for ""Red Tide (band)"".",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
251,0,train,Give me the location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . },"```sparql
SELECT ?location WHERE {
  ?battle dbo:wikiPageRedirects dbpedia-owl:Battle_of_Marengo .
  ?battle dbo:location ?location .
}
```",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
915,4,train,"Give me the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  # Find Lizzie Spaulding
  dbr:Lizzie_Spaulding dbo:spouse ?parent .
  
  # Ensure the parent is a fictional character
  ?parent rdf:type dbo:FictionalCharacter .

  # Ensure the parent is specifically a soap character
  ?parent dbo:genre dbr:SoapOpera .
}
```

This query assumes:
- The relationship `dbo:spouse` is used to denote parental relationships in this context. If it's different, you might need to adjust based on available data.
- The resource for Lizzie Spaulding is correctly identified as `dbr:Lizzie_Spaulding`.
- The parent must be of type `dbo:FictionalCharacter` and associated with the genre `dbr:SoapOpera`.",1,3,2,1,1,3,2,20,0,0,2,0,0.0,0
16,13,train,Give me the professional in the profession of Satomi Ishihara.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Satomi_Ishihara> <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Satomi Ishihara""@en .
  OPTIONAL { ?person dbo:occupation ?profession . }
}
```",2,2,3,2,1,3,3,71,0,1,19241,0.0,0.0,0
617,2,train,Give me the parent of Nysa (wife of Pharnaces I of Pontus).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Nysa_(wife_of_Pharnaces_I_of_Pontus)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?nysa a dbo:Person ;
        foaf:name ""Nysa""@en .
  OPTIONAL { ?nysa dbo:spouse dbr:Pharnaces_I_of_Pontus . }
  ?nysa dbo:childOf ?parent .
}
```

This query does the following:
- It looks for a resource representing Nysa, who is identified as a person (`dbo:Person`) with the name ""Nysa"".
- It checks if she has a spouse relationship with Pharnaces I of Pontus.
- It retrieves her parent using the `dbo:childOf` property.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,5,train,"Give me the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?description WHERE {
  VALUES ?label { ""Polish Horse"" }
  
  # Find entities with the label ""Polish Horse""
  ?entity rdfs:label ?label .
  FILTER (lang(?label) = 'en')

  OPTIONAL {
    ?entity dbo:militaryUnitOf ?militaryUnit.
    BIND(""Military Unit"" AS ?description)
  }

  OPTIONAL {
    ?entity dbo:organizationType ?orgType.
    BIND(""Organization"" AS ?description)
  }
  
  FILTER (?militaryUnit != '' || ?orgType != '')
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
391,7,train,Who is the professional in ?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional a dbo:Person .
  ?professional dbo:profession dbr:{Field} .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
659,10,train,Give me the military force of Napoleonic Wars and commander in German campaign of 1813.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?commander WHERE {
  ?event dbo:partOf dbr:Napoleonic_Wars .
  ?event dbo:eventDescription ""German campaign of 1813"" .
  ?event dbo:militaryForce ?militaryForce .
  ?militaryForce dbo:commander ?commander .
}
```",2,2,3,1,2,3,3,71,0,0,6,0,0.0,0
179,6,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara and parent of Ubol Ratana.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . <http://dbpedia.org/resource/Ubol_Ratana> <http://dbpedia.org/ontology/parent> ?result . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Mom Rajawongse Sirikit Kitiyakara"" .
  ?person dbo:child ?ubolRatana .
  ?ubolRatana rdfs:label ""Ubol Ratana""@en .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,9,train,"Who is the member of the associated musical artist, that is an organisation and a group and a band, of The Boils?",SELECT ?result WHERE { <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/ontology/bandMember> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Find The Boils as a band
  dbr:The_Boils dbo:bandMember ?member .
  
  # Ensure the member is associated with an organization that is also a group or band
  ?organization dbo:associatedBand ?member ;
                rdf:type ?type .
  FILTER (
    ?type IN (dbo:MusicalGroup, dbo:Band)
  )
}
```",2,5,3,2,1,3,2,20,0,0,6,0,0.0,0
696,10,train,Give me the award of the commander in Battle of Chishui River.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Chishui_River> <http://dbpedia.org/ontology/commander> ?v0 . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?title WHERE {
  ?battle dbo:name ""Battle of Chishui River""@en .
  ?battle dbo:participatedIn ?event .
  ?event dbo:award ?award .
  ?award dbo:title ""Commander""@en .
  ?award dbo:recipient ?person .
  OPTIONAL { ?person dbo:title ?title . }
}
```",2,2,3,2,1,3,2,20,0,0,9,0,0.0,0
492,4,train,"Give me the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph C. Satterthwaite""@en .
  OPTIONAL { ?person dbo:positionHeld ?work . }
}
```

This query assumes that the DBpedia resource for Joseph C. Satterthwaite is correctly identified by his name and that he has a `dbo:positionHeld` property linking to his work or position.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
767,6,train,Give me the administration of George K. Nash.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/George_K._Nash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person a dbo:Person ;
          foaf:name ""George K. Nash""@en .
  OPTIONAL { 
    ?position dbo:positionHeldBy ?person ;
              dbo:administration ?administration .
  }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
747,10,train,Give me the band of Shèna and person born on 1985-04-29.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band ?person WHERE {
  # Find Shèna's band
  OPTIONAL {
    ?singer a dbo:Singer ;
            foaf:name ""Shèna"" ;
            dbo:memberOf ?band .
  }
  
  # Find person born on April 29, 1985
  OPTIONAL {
    ?person a dbo:Person ;
            dbp:birthday ?birthday .
    FILTER (YEAR(?birthday) = 1985 && MONTH(?birthday) = 4 && DAY(?birthday) = 29)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
356,2,train,"Give me the predecessor, that is a sports team season and a soccer club season, of 2015 Sacramento Republic FC season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Find the 2015 Sacramento Republic FC season
  ?season a dbo:SoccerSeason ;
          dbo:sportTeam dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .

  # Find the predecessor season, which is the 2014 season
  ?predecessor a dbo:SoccerSeason ;
               dbo:sportTeam dbr:Sacramento_Republic_FC ;
               dbo:year ""2014""^^xsd:gYear .
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
177,1,train,"Give me the headquarter of Ministry of Culture, Sports and Tourism.","SELECT ?result WHERE { <http://dbpedia.org/resource/Ministry_of_Culture,_Sports_and_Tourism> <http://dbpedia.org/ontology/location> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?headquarters WHERE {
  ?ministry a dbo:GovernmentMinistry ;
            rdfs:label ""Ministry of Culture, Sports and Tourism""@en .
  OPTIONAL { ?ministry dbo:headquarters ?headquarters . }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
666,5,train,Give me the nickname of England national beach soccer team.,SELECT ?result WHERE { <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  ?team dbo:country dbr:England .
  ?team rdf:type dbo:NationalBeachSoccerTeam .
  ?team dbo:nickname ?nickname .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
378,5,train,"Give me the reference, that is a military conflict, to Peninsular War.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q1117 wdt:P646 ?peninsularWarFreebaseID .
  ?reference wdt:P31 wd:Q1656682 ; # instance of military conflict
             wdt:P646 ?freebaseID .
  FILTER(?freebaseID = ?peninsularWarFreebaseID)
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,7,train,"Give me the territory administered from Reykjavík and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?administeredFrom ?articleDetails
WHERE {
  # Find territories administered from Reykjavík
  ?territory dbo:administrativeCapital dbr:Reykjavík .
  
  OPTIONAL {
    ?territory dbo:wikiPageWikiLink ?constitutionArticle .
    ?constitutionArticle rdfs:label ""Article 62, Section IV of the Constitution of Iceland""@en .
    
    # Retrieve details about the article
    ?constitutionArticle dbo:abstract ?articleDetails .
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
626,2,train,Who is the commander in Battle of Paris (1814)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  wd:Q1234568 wdt:P112 ?commander .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for the ""Battle of Paris (1814)"". You can find this identifier by searching DBpedia or using a SPARQL endpoint to look up the battle's details.",1,1,2,1,1,3,2,20,0,0,11,0,0.0,0
528,11,train,Give me the war of the military force of Battle of Pisagua.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?battle ?date ?participant1 ?participant2 WHERE {
  VALUES ?battle { dbr:Battle_of_Pisagua }
  
  ?battle dbo:date ?date .
  ?battle dbo:participatedIn ?event .
  ?event dbo:agent ?participant1 .
  OPTIONAL { ?event dbo:opponent ?participant2 . }

  FILTER (lang(?date) = 'en')
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
281,13,train,"Give me the entity in the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/place> ?v1 . <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find Bob Heffron's resource
  dbr:Bob_Heffron dbo:birthPlace ?birthPlace .

  # Check if the birthplace is a country
  ?birthPlace rdf:type dbo:Country .
  
  # Bind the country to the variable
  BIND(?birthPlace AS ?country)
}
```",2,3,3,2,1,3,3,71,0,1,1,0.0,0.0,0
783,4,train,Give me the persona of Ebony Reigns.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?name ?birthDate ?deathDate ?occupation WHERE {
  VALUES ?ebony { dbr:Ebony_Reigns }
  
  ?ebony foaf:name ?name .
  OPTIONAL { ?ebony dbo:birthDate ?birthDate . }
  OPTIONAL { ?ebony dbo:deathDate ?deathDate . }
  OPTIONAL { ?ebony dbo:occupation ?occupation . }
}
```",1,1,2,1,1,3,2,20,0,3,1,0.0,0.0,0
492,15,train,Give me the work of the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?v1 . ?result <http://dbpedia.org/property/author> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?author { dbr:Albert_Camus }
  ?author dbo:work ?work .
}
```

This query selects the works (`?work`) of Albert Camus, who is identified by `dbr:Albert_Camus` in DBpedia.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
378,3,train,Give me the birth name of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 rdfs:label ""Carl Pontus Gahn""@en.
  OPTIONAL { 
    wd:Q123456 foaf:name ?birthName.
  }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Carl Pontus Gahn.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,2,train,"Give me the work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?article ?section WHERE {
  # Find the resource for Iceland's Constitution
  ?constitution a dbo:Constitution ;
                dbo:country dbr:Iceland .

  # Look for properties that might describe articles or sections
  OPTIONAL { ?constitution dbo:hasArticle ?article . }
  OPTIONAL { ?article dbo:hasSection ?section . }

  FILTER regex(?article, ""62"", ""i"") .
  FILTER regex(?section, ""IV"", ""i"") .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
281,14,train,"Give me the war of the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Heather Roy""@en .
  ?person dbo:militaryUnit ?unit .
  ?unit dbp:participatedInWar ?war .
}
```",2,3,3,2,1,3,3,71,0,0,14,0,0.0,0
712,4,train,Give me the show of Soviet Union.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Soviet_Union> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show ?showLabel WHERE {
  ?show a dbo:TelevisionShow .
  ?show dbo:country dbr:Soviet_Union .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,2,20,0,0,8,0,0.0,0
48,7,train,Give me the band of the writer of Emotion (Carly Rae Jepsen album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Emotion_(Carly_Rae_Jepsen_album)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find songs from the album ""Emotion""
  ?song dbo:album dbr:Emotion_(Carly_Rae_Jepsen_album) .
  
  # Get writers of these songs
  ?song dbo:composer ?writer .

  # Check if the writer is a member of any band
  OPTIONAL { 
    ?band dbo:member ?writer .
    FILTER EXISTS { ?band a dbo:Band }
  }

  # Ensure we get at least one result for bands
  FILTER (?band != """")
}
```",2,2,3,2,1,3,2,20,0,0,95,0,0.0,0
404,5,train,"Who is the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  ?person dbo:child ?child .
  ?child rdfs:label ""Prince George William of Hanover""@en .
  ?person a dbo:Monarch ;
          dbo:spouse ?spouse .
  FILTER (lang(?child) = 'en')
}
```

This query does the following:
- It looks for individuals (`?person`) who have a child (`dbo:child`) relationship with ""Prince George William of Hanover"".
- It filters these individuals to ensure they are royalty by checking if they are an instance of `dbo:Monarch`.
- The result will be the parent(s) who is/are royalty.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
285,0,train,Give me the parent of Alexander Onassis.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Alejandro_Onassis dbo:child dbr:Alexander_Onassis .
  dbr:Alejandro_Onassis a dbo:Person ;
                       rdfs:label ?parentLabel .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
281,0,train,"Give me the war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?person a dbo:Person ;
          foaf:name ""Beauchamp Seymour""@en .
  
  ?event dbo:participant ?person ;
         rdf:type dbo:Event ;
         rdfs:label ?eventName .

  FILTER CONTAINS(LCASE(?eventName), ""war of the roses"")

  OPTIONAL { ?event dbo:description ?description }
}
```

This query does the following:
- Searches for a person named ""Beauchamp Seymour"" in DBpedia.
- Finds events where this person was a participant and checks if these events are related to the War of the Roses by filtering event names containing ""war of the roses"".
- Optionally retrieves descriptions of these events.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,6,train,"Give me the birth place, that is a country, of Bob Heffron.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Bob_Heffron> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
  FILTER (isBlank(?birthPlace) || ?birthPlace a wd:Q6256)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Bob Heffron.",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,3,train,Give me the parent of May Hnin Htapi.,SELECT ?result WHERE { <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentCategory WHERE {
  ?person a dbo:Person ;
          rdfs:label ""May Hnin Htapi""@en .
  
  OPTIONAL { 
    ?person dbo:category ?parentCategory .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
429,5,train,Give me the administration of the father of Martha Johnson Patterson.,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/property/leader> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?fatherName ?administration WHERE {
  ?martha a dbo:Person ;
          foaf:name ""Martha Johnson Patterson""@en .
  
  ?martha dbo:parent ?father .

  ?father foaf:name ?fatherName .

  OPTIONAL {
    ?father dbo:officeHeld ?position .
    ?position dbo:holder ?father ;
              dbo:administrativeBody ?administration .
  }
}
```

This query does the following:
- Identifies Martha Johnson Patterson as a `dbo:Person`.
- Finds her father using the `dbo:parent` property.
- Retrieves the father's name with `foaf:name`.
- Optionally finds any political office (`dbo:officeHeld`) held by the father and the corresponding administration.",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
48,6,train,Give me the band of Carl Falk and band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Carl_Falk> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?person ?bandName
WHERE {
  VALUES ?person { 
    dbr:Carl_Falk 
    dbr:Murda_Mook 
  }
  
  ?person dbp:band ?band .
  ?band rdfs:label ?bandName .
  FILTER (lang(?bandName) = 'en')
}
ORDER BY ?person
```

This query does the following:
- Uses `PREFIX` to define common namespaces for properties and ontology.
- Selects individuals (`?person`) who are either Carl Falk or Murda Mook.
- Retrieves their associated bands using the property `dbp:band`.
- Fetches the English label of each band with `rdfs:label`.
- Filters results to ensure labels are in English.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
182,5,train,Give me the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?result . },"```sparql
SELECT ?nationality WHERE {
  wd:Q123456 wdt:P27 ?nationality .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Tamara Kunanayakam. You can find this by searching her name on DBpedia or using a SPARQL query to identify her unique identifier.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
44,5,train,Give me the band member of the band of John Pettibone.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  ?band dbo:leadMember dbr:John_Pettibone .
  ?band dbo:bandMember ?member .
}
```",2,2,3,2,1,2,2,9,0,0,2,0,0.0,0
666,10,train,"Give me the nickname of the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""England""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?club a dbo:SoccerClub ;
        dbo:sport dbr:Soccer ;
        dbo:country dbr:England .
  OPTIONAL { ?club rdfs:label ?label . FILTER (lang(?label) = 'en') }
  OPTIONAL { ?club dbo:nickname ?nickname . FILTER (lang(?nickname) = 'en') }
  FILTER regex(str(?label), ""The Football Association"", ""i"")
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
232,6,train,"Give me the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  # Find Sean Pertwee's DBpedia resource
  ?person a dbo:Actor ;
          foaf:name ""Sean Pertwee""@en .
  
  # Get films associated with him
  OPTIONAL { 
    ?film dbo:starring ?person ;
          a dbo:Film .
    BIND (str(?film) AS ?film)
  }
  
  # Get military conflicts he might be associated with
  OPTIONAL {
    ?conflict dbo:participant ?person ;
              a dbo:MilitaryConflict .
    BIND (str(?conflict) AS ?conflict)
  }
}
```

This query does the following:
- Identifies Sean Pertwee as an actor using his name.
- Searches for films where he has starred, binding them to `?film`.
- Looks for military conflicts in which he might have participated, binding them to `?conflict`.",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
820,6,train,Give me the child of Jack Schwartzman and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Jack_Schwartzman> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child ?profession WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jack Schwartzman""@en .
  ?person dbo:child ?child .
  ?child dbo:occupation ?profession .
}
```

This query does the following:
- It selects individuals (`?child`) who are children of Jack Schwartzman.
- It also retrieves their profession (`?profession`).

Note that this assumes the existence and correct linking of these properties in DBpedia. If the data model changes or if specific details about Jack Schwartzman's family are not available, the query might need adjustments.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
54,0,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Thihathu dbo:spouse ?spouse .
  ?spouse dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,6,3,0.0,0.0,0
488,16,train,"Who is the father, that is a politician, of the father, that is an office holder, of Matsudaira Tadamasa?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Matsudaira_Tadamasa> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?politicianFather
WHERE {
  # Matsudaira Tadamasa and his father who is an office holder
  ?matsudairaTadamasa a dbo:Person ;
                     foaf:name ""Matsudaira Tadamasa""@en .
  
  ?matsudairaTadamasa dbo:father ?officeHolderFather .

  ?officeHolderFather a dbo:OfficeHolder .

  # The father of the office holder who is a politician
  ?officeHolderFather dbo:father ?politicianFather .

  ?politicianFather a dbo:Politician .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
391,16,train,"Give me the claim to fame, that is a work, of the spouse of Sherry Hormann.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  # Identify Sherry Hormann
  dbr:Sherry_Hormann dbo:spouse ?spouse .

  # Find the spouse's notable works
  ?spouse dbo:notableWork ?work .
}
```",2,3,3,2,1,3,3,71,0,0,4,0,0.0,0
666,8,train,Give me the figure known as the nickname of England national beach soccer team.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v0 . <http://dbpedia.org/resource/England_national_beach_soccer_team> <http://dbpedia.org/property/nickname> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?team dbo:nationality dbr:England .
  ?team rdf:type dbo:SoccerTeam .
  ?team dbo:sport dbr:Beach_soccer .
  OPTIONAL { ?team dbo:commonName ?nickname . }
}
```",2,2,3,2,1,3,2,20,0,0,5,0,0.0,0
617,7,train,"Give me the child of the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?grandchild WHERE {
  # Boleslaus I, Duke of Bohemia
  ?boleslaus a dbo:Duke ;
             foaf:name ""Boleslaus I"" .

  # Find his children
  ?boleslaus dbo:spouse ?parent .
  ?parent dbo:child ?child .

  # Find the grandchildren (children of Boleslaus's children)
  ?child dbo:child ?grandchild .

  # Filter those who are royalty
  ?grandchild a dbo:Monarch ;
              dbp:title ?title .
}
```",2,3,3,2,1,3,2,20,0,0,4,0,0.0,0
328,14,train,"Give me the leader of the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/leader> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?office ?leader WHERE {
  # Find Joseph Stalin's resource
  VALUES ?stalin { dbr:Joseph_Stalin }

  # Find offices or roles associated with him
  ?stalin dbo:positionHeld ?office .

  OPTIONAL {
    # Try to find the leader of that office, if applicable
    ?office dbo:leader ?leader .
  }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
9,15,train,"Who is the mayor, that is a politician, of the entity, that is an organisation, in Belfast?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belfast> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?mayor WHERE {
  ?organization a dbo:Organization ;
                dbo:location dbr:Belfast .
  ?mayor dbo:positionHeld ?position ;
         dbo:memberOf ?organization ;
         rdf:type dbo:Politician .
  ?position dbp:title ""Mayor""@en .
}
```

This query does the following:
- Selects organizations that are located in Belfast.
- Finds individuals who hold a position titled ""Mayor"" and are members of these organizations.
- Ensures that these individuals are also classified as politicians.",2,4,3,2,1,3,3,71,0,0,13,0,0.0,0
915,10,train,"Give me the child, that is a fictional character and a soap character, of the parent, that is a fictional character and a soap character, of Lizzie Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/ontology/parent> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?result <http://dbpedia.org/property/father> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childCharacter WHERE {
  # Step 1: Identify Lizzie Spaulding as a fictional character in a soap opera
  dbr:Lizzie_Spaulding dbo:characterIn dbr:AllMyChildren .
  
  # Step 2: Find her parent within the story
  dbr:Lizzie_Spaulding dbo:spouse ?parentCharacter .

  # Ensure the parent is also a fictional character in a soap opera
  ?parentCharacter dbo:characterIn dbr:AllMyChildren .

  # Step 3: Identify the child of this parent who is also a fictional character in a soap opera
  ?parentCharacter dbo:child ?childCharacter .
  
  ?childCharacter dbo:characterIn dbr:AllMyChildren .
}
```

This query assumes that ""Lizzie Spaulding"" and her relationships are well-represented in DBpedia, specifically within the context of the soap opera ""All My Children."" Adjustments may be necessary if additional or different data sources need to be queried.",2,6,3,2,1,3,2,20,0,0,1,0,0.0,0
820,2,train,Who is the author of Understanding Comics?,SELECT ?result WHERE { <http://dbpedia.org/resource/Understanding_Comics> <http://dbpedia.org/ontology/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?comic dcterms:title ""Understanding Comics"" .
  ?comic dbo:author ?author .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,2,train,"Give me the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  VALUES ?place { dbr:Salak_(North_Sumatra) }
  ?place dbo:timezone ?timeZone .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,9,train,Give me the war of Jagath Dias and entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?description ?location ?person WHERE {
  ?war a dbo:Event .
  ?war rdfs:label ""War of Jagath Dias""@en .
  OPTIONAL { ?war dbo:description ?description . FILTER (lang(?description) = 'en') }
  OPTIONAL { ?war dbo:location ?location . }
  OPTIONAL { ?war dbo:agent ?person . }
}
```",2,2,3,1,2,2,3,28,0,0,5,0,0.0,0
184,3,train,"Give me the landmark at elevation, that is a settlement, of 96.0.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""96.0""^^<http://www.w3.org/2001/XMLSchema#double> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  ?landmark a dbo:Landmark .
  ?landmark dbo:elevation ?elevation .
  ?landmark a dbo:Settlement .
  FILTER (?elevation = ""96.0""^^xsd:float)
}
```",1,2,2,1,1,3,3,71,0,0,162,0,0.0,0
232,13,train,"Give me the actor of the claim to fame, that is a film and a military conflict, of Sean Pertwee.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. <http://dbpedia.org/resource/Sean_Pertwee> <http://dbpedia.org/ontology/knownFor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  # Find Sean Pertwee's resource
  ?person a dbo:Actor ;
          foaf:name ""Sean Pertwee""@en .

  # Find films associated with Sean Pertwee
  ?film dbo:starring ?person .
  
  # Find military conflicts associated with Sean Pertwee
  ?conflict dbo:participant ?person .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
498,3,train,"Who is the member, that is an artist, of Mortician (band)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?artistName WHERE {
  ?band a dbo:Band ;
        dbo:name ""Mortician"" .
  
  ?band dbo:bandMember ?member .

  ?member dbo:occupation ?occupation .
  
  FILTER(CONTAINS(LCASE(?occupation), ""artist""))
  
  OPTIONAL { 
    ?member foaf:name ?artistName .
  }
}
```",1,2,2,1,1,2,2,9,0,0,1,0,0.0,0
626,5,train,Give me the award of Aleksey Petrovich Yermolov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Aleksey_Petrovich_Yermolov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  dbr:Aleksey_Petrovich_Yermolov dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,6,0,0,1.0,1.0,1.0
392,0,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:country dbr:Italy . }
  FILTER NOT EXISTS { ?entity dbo:country ?otherCountry . FILTER (?otherCountry != dbr:Italy) }
}
ORDER BY ?entity
LIMIT 100",1,1,2,1,1,2,3,28,0,100,13092,0.0,0.0,0
328,0,train,Give me the awardee of Order of Suvorov.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects dbpedia-owl:Order_of_Suvorov .
  ?award dbo:recipient ?person .
  ?person rdfs:label ?awardee .
  FILTER (LANG(?awardee) = ""en"")
}
```",1,1,2,1,1,3,3,71,0,0,22,0,0.0,0
487,3,train,Give me the administration of Patricia McCoy.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person foaf:name ""Patricia McCoy""@en .
  ?person dbo:office ?position .
  ?position dbo:holder ?person .
  ?position dbo:administrativeArea ?administration .
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
9,7,train,"Give me the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . },"```sparql
SELECT ?entity WHERE {
  ?entity a dbo:Organisation .
  ?entity a dbo:EducationalInstitution .
  ?entity dbo:country dbr:Northern_Ireland .
}
```",1,3,2,1,1,3,3,71,134,0,0,1.0,1.0,1.0
92,16,train,"Give me the person born, that is an artist, as the actor of Return to Nuke 'Em High Volume 1.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the movie resource
  dbr:Return_to_Nuke_'Em_High_Volume_1 dbo:starring ?actor .
  
  # Ensure the actor is a person and has an occupation of artist
  ?actor rdf:type dbo:Actor ;
         foaf:name ?name ;
         dbo:occupation ?occupation .

  FILTER (CONTAINS(LCASE(?occupation), ""artist""))
}
```

This query does the following:
- It identifies the movie ""Return to Nuke 'Em High Volume 1"" and retrieves its actors.
- It filters these actors to find those whose occupation includes ""artist.""",2,3,3,2,1,3,3,71,0,0,205,0,0.0,0
30,0,train,Give me the native of Paris.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . },"```sparql
SELECT ?native WHERE {
  ?native dbo:nativePlace dbr:Paris .
}
```",1,1,2,1,1,2,2,9,0,0,4485,0,0.0,0
754,4,train,Give me the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""Ram Khamhaeng the Great""@en .
  OPTIONAL { 
    ?reference schema:description ?description .
    FILTER(CONTAINS(LCASE(?description), ""ram khamhaeng the great""))
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
981,9,train,"Give me the region of the time zone in Salak, North Sumatra.","SELECT ?result WHERE { <http://dbpedia.org/resource/Salak,_North_Sumatra> <http://dbpedia.org/ontology/timeZone> ?v0 . ?result <http://dbpedia.org/property/timeZone> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  # Find Salak, North Sumatra in DBpedia
  ?salak a dbo:Place ;
         rdfs:label ""Salak, North Sumatra""@en .
  
  # Get the time zone of Salak
  ?salak dbo:timeZone ?timezone .

  # Find the region associated with this time zone
  ?timezone dbo:region ?region .
}
```

This query does the following:
- It identifies `Salak, North Sumatra` as a place in DBpedia.
- Retrieves the time zone associated with Salak.
- Finds and returns the region related to that time zone.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
820,3,train,Give me the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  wd:Q12345 dbo:award ?award .
}
```

Note: Replace `wd:Q12345` with Scott McCloud's actual DBpedia QID.",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
488,6,train,"Who is the father, that is a politician, of Yūki Hideyasu?",SELECT ?result WHERE { <http://dbpedia.org/resource/Yūki_Hideyasu> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father ?fatherName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yūki Hideyasu""@en .
  OPTIONAL { ?person dbo:father ?father . }
  OPTIONAL { ?father foaf:name ?fatherName . FILTER(lang(?fatherName) = 'en') }
  OPTIONAL { ?father dbo:occupation ?occupation . }
  FILTER EXISTS {
    ?father dbo:occupation ?occupation .
    ?occupation rdfs:label ?occupationLabel .
    FILTER(CONTAINS(LCASE(str(?occupationLabel)), ""politician""))
  }
}
```",1,2,2,1,1,3,3,71,0,4,1,0.0,0.0,0
360,11,train,Give me the reference to the author of Blinded by the Light.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?v1 . },"```sparql
SELECT ?author WHERE {
  ?work dcterms:title ""Blinded by the Light""@en .
  ?work dbo:author ?author .
}
```",2,2,3,2,1,2,3,28,0,0,2,0,0.0,0
994,14,train,"Give me the band member of the person born, that is a musical artist, as Donald Maynard Dokken.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?dokken a dbo:MusicalArtist ;
          foaf:name ""Donald Maynard Dokken""@en .
  
  ?dokken dbo:memberOfBand ?band .

  ?bandMember dbo:memberOfBand ?band ;
              dbp:role ?role .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
421,3,train,Who is the awardee of [[#Awards and nominations?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Academy Award for Best Actor""@en .
}
```",1,1,2,1,1,2,3,28,0,0,113,0,0.0,0
378,1,train,Give me the war of Joaquín Blake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
SELECT ?war WHERE {
  ?person foaf:name ""Joaquín Blake""@en .
  ?person dbo:participatedIn ?event .
  ?event rdf:type dbo:MilitaryConflict ;
         rdfs:label ?war .
}
```",1,1,2,1,1,3,3,71,0,0,11,0,0.0,0
617,6,train,Who is the child of Antiochus III the Great?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""Antiochus_III_the_Great"")
  
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
696,6,train,Give me the landmark at elevation of 50 and birth place of Tim Brennan.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark ?birthPlace WHERE {
  # Query for landmark at elevation of 50 meters
  {
    SELECT ?landmark WHERE {
      ?landmark a dbo:Lighthouse ;
                dbo:elevationAboveSeaLevel ""50""^^xsd:float .
    }
  }

  UNION

  # Query for birthplace of Tim Brennan
  {
    SELECT ?birthPlace WHERE {
      dbr:Tim_Brennan dbo:birthPlace ?birthPlace .
    }
  }
}
```",2,2,3,1,2,3,2,20,1,0,0,1.0,1.0,1.0
92,17,train,Give me the person born as the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Joseph Michael""@en .
}
```

This query searches for any resource (`?person`) in DBpedia that has a `dbo:birthName` property with the value ""Joseph Michael"" (with English language tag).",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
16,5,train,Who is the actor of Unnatural (TV series)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Unnatural_(TV_series)> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  wd:Q1234568 dbo:starring ?actor .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for ""Unnatural (TV series)"".",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
312,6,train,Give me the entity in the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  dbr:Giorgio_Grigolli dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?birthPlaceLabel .
  FILTER (lang(?birthPlaceLabel) = 'en')
}
```",2,2,3,2,1,2,2,9,0,0,13092,0,0.0,0
617,1,train,Give me the parent of Mieszko II Lambert.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""Mieszko II Lambert""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  OPTIONAL { ?person dbo:hasParent ?parent . }
  
  FILTER NOT EXISTS {
    ?person dbo:child dbr:Mieszko_II_Lambert
  }

  SERVICE <http://dbpedia.org/sparql> {
    ?person foaf:name ""Mieszko II Lambert""@en .
  }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
427,11,train,Give me the reference to the name of Italian People's Party (1994).,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v0 . <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?v0 . },"```sparql
SELECT ?reference WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Italian People's Party (1994)"" .
  OPTIONAL { 
    ?party dbo:wikiPageWikiLink ?reference .
  }
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
92,7,train,Give me the birth name of Joseph Michael.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joseph_Michael> <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?birthName WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael""@en .
  OPTIONAL { ?person foaf:mbox ?email . } # To ensure we get the correct person
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```

This query does the following:
- It looks for an entity of type `dbo:Person` with a name ""Joseph Michael"".
- It attempts to retrieve the birth name using the property `dbo:birthName`.
- The optional email check (`foaf:mbox`) is included as a heuristic to help disambiguate between multiple people with similar names, assuming that more detailed information like an email might be available for the correct individual.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,2,train,Give me the military force of Napoleonic Wars.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . },"```sparql
SELECT ?militaryForce WHERE {
  wd:Q1161 wdt:P31/wdt:P279* wd:Q11173 .
  wd:Q1161 wdt:P161 ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,1051,0,0.0,0
392,10,train,"Give me the region of the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?region WHERE {
  # Find Aguilar de Segarra
  ?place a dbo:Settlement ;
         rdfs:label ""Aguilar de Segarra""@en .
  
  # Get the time zone of Aguilar de Segarra
  OPTIONAL { ?place dbp:timeZone ?timezone . }
  
  # Get sports events in Aguilar de Segarra
  ?event dbo:location ?place ;
         a dbo:SportEvent .

  # Find region from the time zone
  ?timezone dbo:region ?region .
}
```",2,3,3,2,1,2,3,28,0,0,49990,0,0.0,0
92,12,train,Give me the associated musical artist of Jim Sheppard and band of Joseph Michael.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?artist WHERE {
  # Find musical artist associated with Jim Sheppard
  { 
    ?person foaf:name ""Jim Sheppard""@en .
    ?person dbo:musicalArtist ?artist .
  }
  
  UNION
  
  # Find band of Joseph Michael
  { 
    ?person foaf:name ""Joseph Michael""@en .
    ?person dbo:band ?artist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
378,11,train,Give me the war of the person born as Carl Pontus Gahn.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . ?v0 <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war
WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl Pontus Gahn""@en .
  
  OPTIONAL { 
    ?person dbo:nationality dbr:Sweden . 
  }
  
  ?person dbo:participatedInWar ?war .
}
```

This query does the following:
- Searches for a person with the name ""Carl Pontus Gahn"".
- Optionally checks if he is associated with Sweden, which might help in narrowing down results.
- Retrieves any wars (`?war`) that this person participated in.",2,2,3,2,1,3,3,71,0,0,12,0,0.0,0
54,9,train,Give me the child of Thinkhaya of Pagan and parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find children of Thinkhaya of Pagan
  ?child dbo:parent dbr:Thinkhaya_of_Pagan .
  
  # Find parents of Thado Minsaw of Prome
  ?parent dbo:child dbr:Thado_Minsaw_of_Prome .

  # Intersection: person who is both a child and a parent in the respective relationships
  FILTER (?child = ?parent)
  
  BIND(?child AS ?person)
}
```",2,2,3,1,2,3,3,71,1,0,0,1.0,1.0,1.0
617,11,train,"Give me the child of the child, that is a royalty, of Seleucus II Callinicus.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Seleucus II Callinicus
  VALUES ?parent { dbr:Seleucus_II_Callinicus }

  # Find children of Seleucus II Callinicus
  ?child dbo:parent ?parent .
  
  # For each child, find their children (grandchildren)
  ?grandchild dbo:parent ?child .

  # Filter grandchildren who are royalty
  ?grandchild a dbo:Monarch ;
              dbo:country ?country .
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
747,0,train,Give me the person born on 1985-04-29.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ""1985-04-29""^^<http://www.w3.org/2001/XMLSchema#date> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbo:birthday ?birthday .
  FILTER (YEAR(?birthday) = ""1985"" && MONTH(?birthday) = ""4"" && DAY(?birthday) = ""29"")
}
```",1,1,2,1,1,3,3,71,0,0,30,0,0.0,0
318,5,train,Give me the person born in the founding year of Eel Pie Publishing.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ?v1 . <http://dbpedia.org/resource/Eel_Pie_Publishing> <http://dbpedia.org/ontology/foundingYear> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthYear WHERE {
  # Find the founding year of Eel Pie Publishing
  dbr:Eel_Pie_Publishing dbo:foundingDate ?foundingDate .
  
  # Extract the year from the founding date
  BIND(YEAR(?foundingDate) AS ?foundingYear)
  
  # Find people born in that year
  ?person a dbo:Person ;
          dbp:birthday ?birthDate .
  
  # Extract the birth year and match it with the founding year
  BIND(YEAR(?birthDate) AS ?birthYear)
  FILTER (?birthYear = ?foundingYear)
}
ORDER BY ?person",2,2,3,2,1,2,2,9,0,0,2810,0,0.0,0
232,11,train,Give me the child of the person born as John Devon Roland Pertwee.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/property/birthName> ""John Devon Roland Pertwee""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""John Devon Roland Pertwee""@en .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse . 
    ?spouse dbo:children ?child .
  }
  
  UNION
  
  OPTIONAL { 
    ?person dbo:children ?child .
  }
}
```

This query does the following:
- It identifies a person with the name ""John Devon Roland Pertwee"".
- It checks for children through both direct association and via spouses.",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
547,1,train,Give me the resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?place WHERE {
  wd:Q123456 dbr:resting_place ?place .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Simon Cadell. You can find this by searching for Simon Cadell on DBpedia or using a SPARQL query to retrieve his unique identifier.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
378,7,train,"Give me the war, that is a military conflict and a societal event and an event, of Thomas Trigge.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Thomas_Trigge> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find the DBpedia resource for Thomas Trigge
  VALUES ?trigge { dbr:Thomas_Trigge }

  # Find wars or military conflicts that are societal events
  ?war a dbo:MilitaryConflict ;
      a dbo:SocietalEvent ;
      a dbo:Event .

  # Link Thomas Trigge to these wars or military conflicts
  ?trigge dbo:participatedIn ?war .
}
```

This query does the following:
- It identifies the DBpedia resource for Thomas Trigge.
- It selects events that are classified as both `MilitaryConflict` and `SocietalEvent`.
- It checks if Thomas Trigge participated in these events.

Note: The exact class names (`dbo:MilitaryConflict`, `dbo:SocietalEvent`) and properties (`dbo:participatedIn`) might need to be adjusted based on the actual DBpedia schema, as they can vary or may not exist exactly as assumed. You might need to explore DBpedia's ontology to find the precise classes and properties.",1,4,2,1,1,3,3,71,0,0,7,0,0.0,0
754,6,train,Give me the parent of Loe Thai and parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?individual ?parent
WHERE {
  VALUES ?individual { 
    dbpedia:Loe_Thai 
    dbpedia:May_Hnin_Thwe-Da 
  }
  
  OPTIONAL { ?individual dbo:parentOrganization ?parent . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,14,train,Give me the reference to the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?character a dbo:FictionalCharacter .
  ?character dbo:alias ""Black Hood"" .
  ?character dbo:alterEgo ?alterEgo .
}
```",2,2,3,2,1,3,3,71,0,0,98447,0,0.0,0
626,3,train,"Give me the force, that is a military conflict, of Alexander I of Russia.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?conflict WHERE {
  # Identify Alexander I of Russia in DBpedia
  dbr:Alexander_I_of_Russia 
    dbo:commander ?conflict .
  
  UNION
  
  dbr:Alexander_I_of_Russia 
    dbo:opponent ?conflict .

  UNION

  dbr:Alexander_I_of_Russia 
    dbo:participatedIn ?conflict .
}
```",1,2,2,1,1,3,2,20,0,0,25,0,0.0,0
996,9,train,Who is the awardee of the elevation of Lac d'Avoriaz?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lac_d'Avoriaz> <http://dbpedia.org/ontology/elevation> ?v0 . ?result <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?event a dbo:Award ;
         dbo:recipient ?awardee .
  ?event dbo:subject dbr:Lac_d%27Avoriaz_Elevation .
}
```

This query assumes that there is an `Award` class in DBpedia and that the event related to the ""Elevation of Lac d'Avoriaz"" has a subject property linking it to the resource for Lac d'Avoriaz's elevation. Adjustments might be necessary based on actual data availability.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
827,5,train,"Who is the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894)?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Identify Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach
  VALUES ?parent { dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach }

  # Find his children
  ?parent dbo:child ?child .

  # Filter for those who are royalty
  ?child a ?royaltyClass .
  FILTER (
    ?royaltyClass IN (
      dbr:Monarch ,
      dbr:Royal_family_member ,
      dbr:Prince ,
      dbr:Princess
    )
  )
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
528,3,train,"Give me the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event ?eventLabel WHERE {
  ?event a dbo:Event .
  OPTIONAL { ?event dbo:location dbr:Chile . }
  OPTIONAL { ?event dbo:country dbr:Chile . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?eventLabel
LIMIT 10
```",1,2,2,1,1,3,3,71,0,0,34,0,0.0,0
392,5,train,"Give me the residence, that is a settlement and Italian, of Sebastiano Bianchetti.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Sebastiano_Bianchetti> <http://dbpedia.org/property/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  # Find Sebastiano Bianchetti's DBpedia resource
  ?person a dbo:Person ;
          foaf:name ""Sebastiano Bianchetti""@it .
  
  # Get the residence of Sebastiano Bianchetti
  ?person dbp:residence ?residence .

  # Ensure the residence is a settlement and located in Italy
  ?residence a dbo:Settlement ;
             dbo:country dbr:Italy .
}
```

This query does the following:
- It identifies Sebastiano Bianchetti using his name.
- Retrieves the `dbp:residence` property to find where he resides.
- Ensures that this residence is classified as a `dbo:Settlement`.
- Confirms that the settlement is in Italy by checking its country association.",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
801,10,train,Give me the associated musical artist of Chris Taylor (music producer) and professional in .,"SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?producer a dbo:MusicProducer ;
            foaf:name ""Chris Taylor (music producer)"" .
  
  ?production dbo:performer ?artist ;
              dbo:producer ?producer .

  FILTER NOT EXISTS { ?artist dbo:birthDate ?date } # Filter out non-artists
}
```",2,2,3,1,2,3,3,71,0,0,4,0,0.0,0
303,10,train,"Give me the entity in the country, that is a country, of El Valle de Antón.",SELECT ?result WHERE { <http://dbpedia.org/resource/El_Valle_de_Antón> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/ontology/country> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  dbr:El_Valle_de_Antón dbo:locatedInCountry ?location.
  ?location a dbo:Country.
  BIND(?location AS ?country)
}
```

This query does the following:
- It uses `dbo:locatedInCountry` to find the country associated with ""El Valle de Antón"".
- It ensures that the location is indeed a country by checking if it's an instance of `dbo:Country`.
- The result is bound as `?country`.",2,3,3,2,1,2,3,28,0,0,991,0,0.0,0
54,2,train,Give me the predecessor of Ameitta Thiri Maha Dhamma Dewi of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  VALUES ?ameittaThiriMahaDhammaDewi { dbr:Ameitta_Thiri_Maha_Dhamma_Dewi_of_Ava }
  ?ameittaThiriMahaDhammaDewi dbo:predecessor ?predecessor .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
747,11,train,Give me the person born on the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthdate WHERE {
  # Find Pavlo Khudzik's birthdate
  VALUES (?pavloKhudzik) { dbr:Pavlo_Khudzik }
  
  ?pavloKhudzik dbo:birthday ?birthdate .
  
  # Find other individuals with the same birthdate
  ?person a dbo:Person ;
          dbo:birthday ?sameBirthdate .
  
  FILTER (?person != ?pavloKhudzik)
  FILTER (?sameBirthdate = ?birthdate)
}
ORDER BY ?person",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
404,16,train,"Who is the child, that is a royalty, of the parent, that is a royalty, of Prince George William of Hanover?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Prince_George_William_of_Hanover> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?grandchild WHERE {
  ?parent a dbo:Monarch ;
          dbo:spouseOrPartner ?partner .

  FILTER (?parent = dbr:Prince_George_William_of_Hanover)

  ?child dbo:childOf ?parent ;
         a dbo:Monarch .

  ?grandchild dbo:childOf ?child ;
              a dbo:Monarch .
}
```",2,4,3,2,1,3,3,71,0,0,3,0,0.0,0
421,1,train,Give me the native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . },"```sparql
SELECT ?language WHERE {
  wd:Q35 dbo:officialLanguage ?language .
}
```

This query selects the official languages of the entity with the DBpedia identifier `Q35`, which corresponds to the Socialist Federal Republic of Yugoslavia.",1,1,2,1,1,2,3,28,0,0,5399,0,0.0,0
498,5,train,"Give me the band of the band, that is an organisation and a band, of Solace of Requiem.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Solace_of_Requiem> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  VALUES ?solaceOfRequiem { dbr:Solace_of_Requiem }
  
  ?solaceOfRequiem a dbo:Band .
  OPTIONAL {
    ?solaceOfRequiem dbo:member ?band .
  }
}
```",2,4,3,2,1,2,2,9,0,0,11,0,0.0,0
427,17,train,"Who is the person born, that is an office holder and a politician, as the birth name of Romano Prodi?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Romano Prodi""@en .
  ?person a dbo:OfficeHolder ;
          a dbo:Politician .
}
```

This query does the following:
- Uses `dbo:birthName` to find entities with the birth name ""Romano Prodi.""
- Ensures that these entities are both an instance of `dbo:OfficeHolder` and `dbo:Politician`.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
360,4,train,"Give me the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Winnie Madikizela-Mandela""@en .
  
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
  
  FILTER EXISTS { 
    ?deathPlace a dbo:Settlement .
  }
}
```",1,2,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
547,11,train,Give me the resting place of the child of James Burton (property developer).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(property_developer)> <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?childRestingPlace WHERE {
  # Identify James Burton, the property developer
  ?james a dbo:Person ;
         foaf:name ""James Burton"" ;
         dbo:occupation dbr:Property_developer .

  # Find his children
  ?james dbo:child ?child .

  # Get the resting place of each child
  ?child dbo:finalBurialPlace ?restingPlace .
  
  BIND(?restingPlace AS ?childRestingPlace)
}
```

This query assumes that James Burton is uniquely identified by his occupation as a property developer. It retrieves the final burial places (resting places) of his children.",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
617,8,train,"Give me the parent of the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent WHERE {
  # Step 1: Identify Richeza of Poland, Queen of Hungary
  ?richeza a dbo:Person ;
           foaf:name ""Richeza of Poland"" ;
           dbp:title ""Queen of Hungary""@en .

  # Step 2: Find her father
  ?richeza dbo:father ?father .

  # Step 3: Determine if the father is royalty
  OPTIONAL { ?father dbo:spouse ?mother . }
  OPTIONAL { ?father dbo:child ?royalChild .
             FILTER EXISTS { ?royalChild dbp:title ?title .
                            FILTER (CONTAINS(LCASE(?title), ""king"") || CONTAINS(LCASE(?title), ""queen"")) } }

  # Step 4: Retrieve the parent of this royal father
  OPTIONAL { ?father dbo:mother ?parent . }
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
391,10,train,"Give me the actor of All About the Andersons and native of Compton, California.","SELECT ?result WHERE { <http://dbpedia.org/resource/All_About_the_Andersons> <http://dbpedia.org/property/starring> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  ?movie dbo:starring ?actor .
  ?movie rdfs:label ""All About the Andersons""@en .
  
  ?actor dbo:nativePlace dbr:Compton,_California .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
994,9,train,Give me the associated musical artist of Red Tide (band) and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?artist
WHERE {
  VALUES (?band ?resource) { 
    (dbr:Red_Tide_(band) dbo:associatedBand ?artist)
    (dbr:S.A._Slayer dbo:associatedBand ?artist)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
547,10,train,Give me the resting place of James Burton (Egyptologist) and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?restingPlace WHERE {
  VALUES ?person { 
    dbr:James_Burton_(Egyptologist) 
    dbr:Alan_Cunningham_(explorer)
  }
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,4,train,"Give me the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?result . },"```sparql
SELECT ?party WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:country dbr:Sicily ;
         dbo:headquarters ?location .
  
  OPTIONAL { 
    ?organisation dbo:member ?party . 
    FILTER (isLiteral(?organisation))
  }
}
```",1,3,2,1,1,2,3,28,0,0,1,0,0.0,0
915,0,train,"Give me the resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?resident WHERE {
  ?resident dbo:birthPlace dbr:Springfield_(Illinois) .
  FILTER NOT EXISTS { ?resident dbo:deathPlace ?dp . }
}
```

This query selects individuals whose birthplace is Springfield, Illinois, and who are still alive (i.e., no recorded death place).",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
294,9,train,"Give me the resting place of Edwin A. Keeble and entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?restingPlace ?nashvilleEntity WHERE {
  # Find Edwin A. Keeble's resting place
  OPTIONAL {
    ?keeblesResource a dbo:Person ;
                     foaf:name ""Edwin A. Keeble"" ;
                     dbo:deathPlace ?restingPlace .
  }

  # Find an entity in Nashville, Tennessee
  ?nashvilleEntity a dbo:Place ;
                   dbo:locationCity dbr:Nashville,_Tennessee .

}
```

This query does the following:
- Searches for Edwin A. Keeble as a `dbo:Person` and retrieves his death place (`?restingPlace`).
- Finds any entity that is a `dbo:Place` located in Nashville, Tennessee.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
9,5,train,"Give me the reference, that is an award, to Royal Medals.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?medal a dbo:Award .
  ?medal rdfs:label ""Royal Medal""@en .
  ?medal dbo:awardedBy dbr:The_Royal_Society .
  ?medal dbo:reference ?award .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
754,1,train,Give me the parent of May Hnin Thwe-Da.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/May_Hnin_Thwe-Da> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?parent WHERE {
  ?person a dbo:Person ;
          foaf:name ""May Hnin Thwe-Da""@en .
  
  OPTIONAL { ?person dbo:parent ?parent . }
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
77,7,train,Give me the war of the awardee of Golden Weapon for Bravery.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?awardee ?war WHERE {
  ?award dbo:recipient ?awardee .
  ?award rdfs:label ""Golden Weapon for Bravery""@en .
  
  OPTIONAL { 
    ?awardee dbo:participatedInWar ?war .
  }
}
```

This query does the following:
- Searches for awards with the label ""Golden Weapon for Bravery"".
- Retrieves the awardees of these awards.
- Optionally links these awardees to any wars they participated in.

Note: The exact property names and labels might need adjustment based on DBpedia's current schema and available data. If ""participatedInWar"" is not a direct property, you may need to explore related properties or use more complex queries involving intermediary relationships.",2,2,3,2,1,3,2,20,0,0,22,0,0.0,0
142,3,train,Give me the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dcterms:title ""Papa wa Newscaster""@ja .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,2,2,9,0,0,4,0,0.0,0
115,3,train,Who is the awardee of National Order of Scientific Merit?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"```sparql
SELECT ?person WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> .
  ?award dbo:recipient ?person .
}
```",1,1,2,1,1,2,2,9,0,0,9,0,0.0,0
312,4,train,Give me the entity in Italy and entity in Province of Bergamo.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/province> <http://dbpedia.org/resource/Province_of_Bergamo> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?italyEntity ?bergamoEntity WHERE {
  ?italyEntity a dbo:Place ;
               dbo:country dbr:Italy .
  
  ?bergamoEntity a dbo:Place ;
                 dbo:administrativeRegion dbr:Province_of_Bergamo .
}
```",2,2,3,1,2,2,2,9,0,0,228,0,0.0,0
754,2,train,Give me the parent of Min Linka.,SELECT ?result WHERE { <http://dbpedia.org/resource/Min_Linka> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?parent WHERE {
  VALUES ?minLinka { 
    <http://dbpedia.org/resource/Min_Linka> 
  }
  
  OPTIONAL { ?minLinka dbo:wikiPageRedirects ?redirect . }
  BIND(COALESCE(?redirect, ?minLinka) AS ?entity)

  ?entity rdf:type ?parent .
}
```",1,1,2,1,1,3,2,20,0,13,2,0.0,0.0,0
365,5,train,"Give me the band of the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/bandMember> ?v1 . ?v1 <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?band
WHERE {
  ?person a dbo:MusicalArtist .
  ?person dbo:occupation ?occupation .
  
  FILTER (
    ?occupation IN (dbr:Vocalist, dbr:Musician, dbr:Songwriter)
  )
  
  OPTIONAL { 
    ?person dbo:band ?band .
  }
}
```",2,4,3,2,1,2,2,9,0,4049,2,0.0,0.0,0
44,4,train,Give me the band member of Undertow (band) and band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?bandMemberName (GROUP_CONCAT(?bandLabel; separator="", "") AS ?bands)
WHERE {
  VALUES ?band { 
    dbpedia:Undertow_(band) 
    dbpedia:Sledgeback
  }
  
  ?band dbo:bandMember ?member .
  ?member rdfs:label ?bandMemberName .
  FILTER(LANG(?bandMemberName) = 'en')
  
  ?band rdfs:label ?bandLabel .
  FILTER(LANG(?bandLabel) = 'en')
}
GROUP BY ?bandMemberName
ORDER BY ?bandMemberName
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
528,14,train,Give me the force of the person born as Narciso Campero Leyes.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Narciso Campero Leyes""@en . ?result <http://dbpedia.org/ontology/commander> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?position ?startYear ?endYear
WHERE {
  VALUES ?person { dbr:Narciso_Campero_Leyes }
  
  ?person dbo:officeHeld ?position .
  OPTIONAL { ?position dbo:startDate ?startYear . }
  OPTIONAL { ?position dbo:endDate ?endYear . }
}
ORDER BY ?startYear
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
994,8,train,"Who is the person born, that is a musical artist, as Donald Maynard Dokken?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ""Donald Maynard Dokken""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?birthDate WHERE {
  ?person a dbo:Musician ;
          foaf:name ""Donald Maynard Dokken""@en ;
          dbp:birthday ?birthDate .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
435,10,train,Give me the region of the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> ?v0 . <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  # Step 1: Find the time zone of Bombali Shebora Chiefdom
  dbr:Bombali_Shebora_Chow.html dbo:timeZone ?timeZone .

  # Step 2: Find the region associated with that time zone
  ?timeZone dbo:inRegion ?region .
}
```",2,2,3,2,1,2,3,28,0,0,2484,0,0.0,0
996,4,train,Who is the native of Palestine (region)?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Palestine_(region) .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,2,20,0,0,47,0,0.0,0
365,2,train,"Give me the professional, that is an artist and a musical artist, in Vocalist, musician, songwriter.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Vocalist, musician, songwriter""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person WHERE {
  ?person a dbo:Artist .
  ?person a (dbo:Vocalist | dbo:Musician | dbo:Singer) .
  OPTIONAL { ?person dbo:genre dbr:Musical_artists . }
}
```

This query does the following:
- Selects individuals (`?person`) who are of type `dbo:Artist`.
- Ensures they are also categorized as either a `Vocalist`, `Musician`, or `Singer` (using `dbo:Singer` to cover songwriters).
- Optionally checks if they have a genre related to musical artists, though this is not strictly necessary for the query's logic.",1,3,2,1,1,2,2,9,0,0,4,0,0.0,0
314,7,train,Give me the person deceased at Madrid and commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') . }
  
  # Check for occupation or role related to military command
  OPTIONAL { 
    ?person dbo:occupation ?occupation .
    FILTER (
      CONTAINS(LCASE(str(?occupation)), ""commander"") ||
      CONTAINS(LCASE(str(?occupation)), ""general"") ||
      CONTAINS(LCASE(str(?occupation)), ""military"")
    )
  }
  
  # Check for involvement in the Spanish Civil War through labels or descriptions
  OPTIONAL {
    ?person dbo:abstract ?description .
    FILTER (
      CONTAINS(LCASE(str(?description)), ""spanish civil war"") ||
      CONTAINS(LCASE(str(STR(?person))), ""spanish civil war"")
    )
  }
}
ORDER BY ?name",2,2,3,1,2,2,3,28,0,2680,1,0.0,0.0,0
232,7,train,"Give me the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:France ;
          dbo:officeHolder true .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,3,2,1,1,3,3,71,0,0,270,0,0.0,0
547,9,train,Give me the resting place of James Burton (Egyptologist) and resting place of Simon Cadell.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/James_Burton_(Egyptologist)> <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  VALUES (?person ?name) {
    (dbr:James_Burton_(Egyptologist) ""James Burton (Egyptologist)"")
    (dbr:Simon_Cadell ""Simon Cadell"")
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```

This query does the following:
- Uses `PREFIX` to define common namespaces for DBpedia ontology (`dbo`) and resources (`dbr`).
- Selects entities representing James Burton (Egyptologist) and Simon Cadell.
- Retrieves their names and death places, which are often used as resting places in DBpedia.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
429,2,train,Who is the father of Martha Johnson Patterson?,SELECT ?result WHERE { <http://dbpedia.org/resource/Martha_Johnson_Patterson> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          foaf:name ""Martha Johnson Patterson""@en .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  OPTIONAL { ?person dbo:child ?child . }
  OPTIONAL { ?child dbo:parent ?father . }
}
```",1,1,2,1,1,2,2,9,0,33501,1,0.0,0.0,0
328,9,train,Give me the awardee of Order of Suvorov and commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_Suvorov> . },"```sparql
SELECT ?person WHERE {
  ?person dbo:award ""Order of Suvorov""@en .
  ?person dbo:commanderOf ""Eastern Front (World War II)""@en .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
747,15,train,"Give me the birth date of the person decedent, that is an athlete and a soccer player, at Zolotonosha.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthDate> ?result . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Zolotonosha> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Athlete .
  ?person dbo:sport dbr:Soccer .
  ?person dbo:birthPlace dbr:Zolotonosha .
  OPTIONAL { ?person dbp:birthday ?birthDate . }
}
```

This query does the following:
- Filters individuals who are athletes (`dbo:Athlete`).
- Ensures they play soccer (`dbo:sport` linked to `dbr:Soccer`).
- Checks if their birthplace is Zolotonosha (`dbo:birthPlace` linked to `dbr:Zolotonosha`).
- Retrieves the optional birth date (`dbp:birthday`).",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
435,6,train,Give me the territory administered from Reykjavík and region of Greenwich Mean Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory ?gmtRegion
WHERE {
  # Find territories administered from Reykjavík
  ?territory dbo:capital dbr:Reykjavík .
  
  # Check if the territory is in the GMT region
  OPTIONAL { 
    ?territory dbo:timeZone dbr:Greenwich_Mean_Time ;
               rdfs:label ?gmtRegion .
  }
}
```

This query does the following:
- It selects territories (`?territory`) that have Reykjavík as their capital.
- It checks if these territories are associated with Greenwich Mean Time and retrieves their labels (`?gmtRegion`).",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
339,2,train,Who is the predecessor of Frederick VIII of Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Frederick_VIII_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  ?frederick8 dbo:successorOf ?predecessor .
  ?frederick8 dbr:Frederick_VIII_of_Denmark .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
142,2,train,Give me the region of Japan Standard Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . },"```sparql
SELECT ?region WHERE {
  wd:Q11173 wdt:P282 ?timezone.
  ?timezone wdt:P31/wdt:P279* wd:Q11424. # Q11424 is the DBpedia class for ""Time zone""
  ?timezone wdt:P131 ?location.
  ?location wdt:P30 wd:Q36. # Q36 is the DBpedia item for Japan
  ?location rdfs:label ?region.
  FILTER (lang(?region) = 'en')
}
```",1,1,2,1,1,2,2,9,0,0,2255,0,0.0,0
747,16,train,"Who is the writer of the work, that is a song, of Amba Shepherd?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?v1 <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Amba_Shepherd> . ?v1 <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?song rdf:type dbo:Songs .
  ?song rdfs:label ""Amba Shepherd""@en .
  OPTIONAL { ?song dbo:lyricist ?writer . }
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
30,6,train,Give me the professional in the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v0 . <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession
WHERE {
  VALUES ?person { dbr:Édouard_Alphonse_James_de_Rothschild }
  ?person dbo:occupation ?profession .
}
```",2,2,3,2,1,2,2,9,0,2,1,0.0,0.0,0
55,0,train,Give me the band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . },"```sparql
SELECT ?member WHERE {
  wd:Q1523 dbo:musicalArtist ?band .
  ?band dbo:bandMember ?member .
}
```",1,1,2,1,1,2,3,28,0,0,55,0,0.0,0
701,6,train,Give me the child of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent dbo:spouse ?spouse .
  FILTER (str(?parent) = ""Ramesses_II"")
  
  OPTIONAL { ?parent dbo:child ?child . }
}
```",1,1,2,1,1,3,3,71,0,0,8,0,0.0,0
827,7,train,"Give me the child of the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?grandchild WHERE {
  # Step 1: Identify Grand Duchess Maria Pavlovna of Russia
  VALUES ?mariaPavlovna { dbr:Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859) }
  
  # Step 2: Find her children
  ?child dbo:parent ?mariaPavlovna .
  
  # Step 3: For each child, find their children (Maria Pavlovna's grandchildren)
  ?grandchild dbo:parent ?child .

  # Step 4: Filter those grandchildren to find ones who are royalty
  ?grandchild a ?royaltyClass .
  VALUES ?royaltyClass {
    dbo:Monarch
    dbo:RoyalFamilyMember
    dbo:Princess
    dbo:Duke
    dbo:GrandDuchess
    dbo:Prince
    # Add more classes if needed to cover different types of royalty
  }
}
```",2,3,3,2,1,3,2,20,0,0,6,0,0.0,0
528,1,train,Give me the war of Orozimbo Barbosa.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Orozimbo Barbosa""@en .
  
  OPTIONAL { 
    ?person dbo:nationality dbr:Brazil . 
  }
  
  ?person dbo:participatedInWar ?war .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
487,10,train,"Give me the person born, that is a soccer player, as the birth name of Phil Scott.",SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?v0 . ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?fullName WHERE {
  ?person a dbo:SoccerPlayer .
  ?person foaf:name ""Phil Scott""@en .
  OPTIONAL { ?person foaf:name ?fullName . }
}
```

This query does the following:
- Uses `dbo:SoccerPlayer` to filter individuals who are soccer players.
- Searches for those whose name is ""Phil Scott"" using the `foaf:name` property.
- Optionally retrieves their full name if available.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
303,1,train,Give me the entity in Panama.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Panama .
}
```",1,1,2,1,1,2,3,28,3,79,988,0.036585365853658534,0.0030272452068617556,0.0055917986952469705
492,8,train,"Give me the capital, that is a settlement, of Algeria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Algeria> <http://dbpedia.org/ontology/capital> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
SELECT ?capital WHERE {
  wd:Q1599 wdt:P36 ?capital .
  FILTER EXISTS { ?capital wdt:P31/wdt:P279* wd:Q515. }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
179,7,train,Give me the person born as the birth name of Sirikit.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sirikit> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  dbr:Sirikit dbo:birthName ?birthName .
  ?person dbo:birthName ?birthName .
  FILTER(?person != dbr:Sirikit)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
391,5,train,Who is the spouse of Sherry Hormann?,SELECT ?result WHERE { <http://dbpedia.org/resource/Sherry_Hormann> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person foaf:name ""Sherry Hormann""@en .
  ?person dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
963,2,train,Give me the time zone of Herzegovina-Neretva Canton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timezone
WHERE {
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .
}
```",1,1,2,1,1,3,2,20,1,0,0,1.0,1.0,1.0
232,14,train,"Give me the native of the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?nativeLanguage WHERE {
  # Find Sylvie Bermann's residence
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en .
  
  ?sylvie dbo:residence ?residence .

  # Ensure the residence is a settlement and has a British connection
  ?residence a dbo:Settlement ;
             dbo:country dbr:United_Kingdom .

  # Get the native language of the residence
  ?residence dbp:nativeLanguage ?nativeLanguage .
}
```",2,4,3,2,1,3,3,71,0,0,9121,0,0.0,0
77,0,train,Give me the war of Alexander Chechenskiy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Chechenskiy> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Chechenskiy""@en .
  
  OPTIONAL { 
    ?event dbo:agent ?person ;
           rdfs:label ?eventName ;
           dbo:description ?description .
    FILTER (lang(?eventName) = 'en' && lang(?description) = 'en')
  }
}
```

This query attempts to find a person named ""Alexander Chechenskiy"" and any events where this person is an agent, which might include wars or conflicts. It retrieves the event's label and description.",1,1,2,1,1,3,2,20,0,0,9,0,0.0,0
827,8,train,"Give me the father of the child, that is a royalty, of Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach (1844–1894).","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach_(1844–1894)> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?father WHERE {
  # Identify Charles Augustus, Hereditary Grand Duke of Saxe-Weimar-Eisenach
  VALUES ?charlesAugustus { dbr:Charles_Augustus,_Hereditary_Grand_Duke_of_Saxe-Weimar-Eisenach }

  # Find his children who are royalty
  ?child dbo:parent ?charlesAugustus .
  ?child a dbo:Monarch .

  # Determine the father of each child (who is also royalty)
  ?child dbo:father ?father .
  ?father a dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,0,train,Give me the alma mater of Vladimir Cerrón.,SELECT ?result WHERE { <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  wd:Q1234568 dbo:almaMater ?almaMater .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Vladimir Cerrón. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
16,4,train,Who is the person born as Ted Martin McGinley?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Ted Martin McGinley""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person dbp:birthName ""Ted Martin McGinley"" .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
44,2,train,Give me the band of John Pettibone.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/John_Pettibone> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?band WHERE {
  ?person dbo:name ""John Pettibone""@en .
  ?person dbo:musicalBand ?band .
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,7,train,Give me the birth name of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q1234 foaf:name ""Romano Prodi""@en .
  OPTIONAL { wd:Q1234 schema:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
488,7,train,"Who is the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person dbo:spouse ?spouse .
  ?person rdfs:label ""Tokugawa Masako""@en .
  FILTER EXISTS { ?spouse dbo:royalTitle ?title . }
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
701,17,train,"Give me the father of the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?battle dbo:wikiPageRedirects dbpedia-en:Battle_of_Perire .
  ?battle dbo:commander ?commander .
  ?commander rdf:type dbo:Monarch .
  ?commander dbo:parent ?father .
}
```

This query does the following:
- It identifies the battle by redirecting to ""Battle of Perire.""
- It finds individuals who were commanders in this battle.
- It checks if these commanders are of type `dbo:Monarch` (indicating royalty).
- It retrieves the parent (father) of such a commander.",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
959,12,train,Give me the manager of 2013 Júbilo Iwata season and native of Japan.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:manager ?manager .
  ?manager dbo:nationality dbr:Japan .
  OPTIONAL { ?manager dbo:birthPlace ?place . FILTER (CONTAINS(LCASE(str(?place)), ""japan"")) }
  
  VALUES ?team { 
    dbr:Júbilo_Iwata_season_2013
  }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
232,9,train,Give me the actor of Dog Soldiers (film) and child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?actor WHERE {
  # Find the film ""Dog Soldiers""
  dbr:Dog_Soldiers_(film) dbo:starring ?actor .

  # Check if this actor is a child of Jon Pertwee
  ?actor dbo:parent dbr:Jon_Pertwee .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
617,4,train,"Who is the child, that is a royalty, of Seleucus II Callinicus?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seleucus_II_Callinicus> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbr:Seleucus_II_Callinicus ;
          dbo:spouse ?spouse .
  OPTIONAL { ?spouse dbo:child ?child . }
  OPTIONAL { ?person dbo:child ?child . }
  
  FILTER EXISTS {
    ?child a dbo:Monarch .
  }
}
```",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
294,3,train,"Who is the awardee, that is a politician, of Distinguished Service Medal (U.S. Army)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?awardee dbo:award [ 
    a dbo:Award ;
    dbo:recipient ?person .
  ] .
  ?person dbo:occupation dbr:Politician .
  ?awardee rdfs:label ""Distinguished Service Medal (U.S. Army)""@en .
}
```",1,2,2,1,1,2,3,28,0,0,11,0,0.0,0
547,16,train,Give me the actor of the show with Emily Richard.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Emily_Richard> . ?v1 <http://dbpedia.org/property/starring> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?show dbo:starring dbr:Emily_Richey .
  ?show dbo:starring ?actor .
  FILTER(?actor != dbr:Emily_Richey)
}
```",2,2,3,2,1,3,3,71,0,0,22,0,0.0,0
659,6,train,"Give me the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)""@en .
  
  ?event dbo:participatedIn ?regiment ;
         a dbo:MilitaryConflict ;
         rdfs:label ?warLabel .

  FILTER(LANG(?warLabel) = 'en')
}
```

This query does the following:
- It identifies the military unit ""1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish)"".
- It looks for events (`?event`) that are classified as `dbo:MilitaryConflict` and in which this regiment participated.
- It retrieves the label of these events, filtering to ensure they are in English.",1,3,2,1,1,3,3,71,0,0,19,0,0.0,0
182,0,train,Give me the war of Mahesh Senanayake.,SELECT ?result WHERE { <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:name ""Mahesh Senanayake""@en .
  ?person dbo:occupation ?occupation .
  ?event dbo:participatedIn ?person ;
         a dbo:MilitaryConflict .
  BIND(?event AS ?war)
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
54,14,train,"Give me the predecessor of the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://dbpedia.org/ontology/successor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?predecessor WHERE {
  # Step 1: Identify Thihapate of Mohnyin
  ?thihapate a dbo:Person ;
             foaf:name ""Thihapate of Mohnyin""@en .

  # Step 2: Find his children who are office holders and royalty
  ?child dbo:parent ?thihapate ;
         a dbo:Monarch, dbo:OfficeHolder .

  # Step 3: Determine the predecessor of that specific child
  ?officeHolderPosition dbo:positionHeldBy ?child .
  ?predecessor dbo:positionHeldBy ?officeHolderPosition ;
               dbo:predecessorOf ?child .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
339,8,train,Give me the father of the child of Grand Duchess Elena Vladimirovna of Russia.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?father WHERE {
  # Find Grand Duchess Elena Vladimirovna of Russia
  dbr:Grand_Duchess_Elena_Vladimirovna_of_Russia dbo:child ?child .
  
  # Find the father of each child
  ?child dbo:father ?father .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
77,10,train,"Who is the mayor of the territory administered, that is an organisation, from Warsaw?",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://dbpedia.org/property/leader> ?result . ?v0 <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?mayor WHERE {
  # Find organizations based in Warsaw
  ?organization dbo:location dbr:Warsaw .
  
  # Determine territories administered by these organizations
  ?territory dbo:administeredBy ?organization .

  # Get the mayor of these territories
  ?territory dbp:mayor ?mayor .
}
```",2,3,3,2,1,3,2,20,0,0,8,0,0.0,0
318,3,train,Give me the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?occupation .
  OPTIONAL { ?occupation rdfs:label ?profession . FILTER (lang(?profession) = ""en"") }
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Robert Xavier Rodriguez. You can find this by searching for his name on DBpedia or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
963,7,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```

This query selects entities that are classified as countries (`dbo:Country`) and have the time zone `dbr:Central_European_Time`.",2,3,3,2,1,3,2,20,0,0,173261,0,0.0,0
435,4,train,Give me the time zone in Bombali Shebora Chiefdom.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bombali_Shebora_Chiefdom> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?timeZone
WHERE {
  ?chiefdom a dbo:AdministrativeRegion ;
            rdfs:label ""Shebora Chiefdom""@en .
  OPTIONAL { ?chiefdom dbo:locatedIn dbr:Bombali_District . }
  OPTIONAL { ?chiefdom dbo:timeZone ?timeZone . }
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
488,9,train,Give me the death place of Tokugawa Ieyasu and birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlaceTokugawaIeyasu ?birthPlaceEnomotoTakeaki
WHERE {
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlaceTokugawaIeyasu .
  dbr:Enomoto_Takeaki dbo:birthPlace ?birthPlaceEnomotoTakeaki .
}
```",2,2,3,1,2,3,3,71,1,2,0,0.3333333333333333,1.0,0.5
534,7,train,"Give me the birth place of the child, that is a politician and an office holder, of Desmond FitzGerald (politician).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child ?birthPlace WHERE {
  # Find Desmond FitzGerald
  ?desmond a dbo:Politician ;
           foaf:name ""Desmond FitzGerald""@en .
  
  # Find his children who are politicians or office holders
  ?desmond dbp:spouse ?spouse .
  ?child dbo:parent ?spouse ;
         dbo:parent ?desmond .

  FILTER EXISTS { 
    ?child a dbo:Politician .
  } UNION {
    ?child a dbo:OfficeHolder .
  }

  # Get the birthplace of such a child
  ?child dbp:birthPlace ?birthPlace .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
285,4,train,Give me the award of Stan Lee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Stan_Lee> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  wd:Q1111 dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
534,2,train,"Who is the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace dbr:Essex .
  ?person dbo:occupation dbr:Politician .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
ORDER BY ?name
LIMIT 10",1,2,2,1,1,3,2,20,0,0,89,0,0.0,0
161,14,train,"Give me the commander in the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?event dbo:agent dbr:Emilio_Mola .
  ?event dbo:commander ?commander .
}
```",2,3,3,2,1,3,3,71,0,0,85,0,0.0,0
820,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:location dbr:CityName .
  ?professional rdf:type dbo:Person .
}
```",1,1,2,1,1,3,2,20,0,0,39640,0,0.0,0
314,4,train,Give me the award of Sergei Makovetsky.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sergei_Makovetsky> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Sergei_Makovetsky }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
404,17,train,Who is the father of the spouse of Princess Victoria Louise of Prussia?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/ontology/spouse> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?princess a dbo:Person ;
            dbp:name ""Victoria Louise of Prussia"" .
  
  ?princess dbo:spouse ?spouse .

  ?spouse dbo:father ?father .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
485,6,train,Give me the entity in United Kingdom and birth place of Thomas Warner (poet).,SELECT ?result WHERE { <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Poet ;
          foaf:name ""Thomas Warner"" ;
          dbo:nationality dbr:United_Kingdom .
  ?person dbo:birthPlace ?birthPlace .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
312,3,train,Give me the birthplace of Giorgio Grigolli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giorgio_Grigolli> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Giorgio Grigolli"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
232,8,train,"Give me the residence, that is a settlement and British, of Sylvie Bermann.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Sylvie_Bermann> <http://dbpedia.org/property/residence> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  # Find Sylvie Bermann's resource
  ?sylvie a dbo:Person ;
          foaf:name ""Sylvie Bermann""@en .
  
  # Get her place of residence
  ?sylvie dbp:residence ?residence .

  # Ensure the residence is a settlement
  ?residence a dbo:Settlement .

  # Ensure the residence is in the United Kingdom
  ?residence dbo:country dbr:United_Kingdom .
}
```

This query does the following:
- It identifies Sylvie Bermann as a `Person` entity.
- Retrieves her place of residence using the property `dbp:residence`.
- Ensures that this residence is classified as a `Settlement`.
- Confirms that the settlement is located in the United Kingdom.",1,3,2,1,1,3,3,71,0,0,2,0,0.0,0
747,4,train,Give me the birth date of Pavlo Khudzik.,SELECT ?result WHERE { <http://dbpedia.org/resource/Pavlo_Khudzik> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthDate WHERE {
  wd:Q1234568 dbo:birthDate ?birthDate .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Pavlo Khudzik. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for entities matching ""Pavlo Khudzik"".",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
197,1,train,Give me the birthplace of George Lusztig.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Lusztig> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q12345 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for George Lusztig. You can find this by searching for his page on DBpedia or using a service like Wikidata to get the correct QID.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
312,1,train,Give me the entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:country dbr:Italy . }
  FILTER NOT EXISTS { ?entity dbo:country ?otherCountry . FILTER (?otherCountry != dbr:Italy) }
}
ORDER BY ?entity
LIMIT 100",1,1,2,1,1,2,2,9,0,100,13092,0.0,0.0,0
9,17,train,"Give me the nickname of the entity, that is an organisation and an educational institution, in Northern Ireland.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Northern_Ireland> . ?v1 <http://dbpedia.org/property/nickname> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?entity ?nickname WHERE {
  ?entity a dbo:EducationalInstitution ;
         dbo:location dbr:Northern_Ireland .
  OPTIONAL { ?entity rdfs:label ?nickname . FILTER (lang(?nickname) = 'en') }
}
LIMIT 10
```

This query does the following:
- Filters entities that are of type `EducationalInstitution`.
- Ensures these institutions have a location associated with Northern Ireland.
- Attempts to retrieve any available nickname (`rdfs:label`) in English.",2,4,3,2,1,3,3,71,0,0,5,0,0.0,0
16,17,train,Give me the birth name of the alumnus of Ohio State University.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . ?v1 <http://dbpedia.org/property/birthName> ?result . },"```sparql
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?alumnus ?givenName ?familyName WHERE {
  ?alumnus a foaf:Person .
  ?alumnus foaf:alumniOf <http://dbpedia.org/resource/Ohio_State_University> .
  
  OPTIONAL { ?alumnus foaf:givenName ?givenName . }
  OPTIONAL { ?alumnus foaf:familyName ?familyName . }

  FILTER(?givenName || ?familyName) # Ensure at least one name part is present
}
```",2,2,3,2,1,3,3,71,0,0,90,0,0.0,0
429,4,train,Give me the country of 77th Ohio Infantry Regiment and administration of Andrew Johnson.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Andrew_Johnson> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country ?administration
WHERE {
  # Query for the country of the 77th Ohio Infantry Regiment
  OPTIONAL {
    dbr:77th_Ohio_Infantry_Regiment dbo:nationality ?country .
  }

  # Query for Andrew Johnson's administration
  OPTIONAL {
    dbr:Andrew_Johnson dbo:positionHeld [
      a dbo:Presidency ;
      dbo:presidentOf dbr:United_States ;
      dbo:startDate ?start ;
      dbo:endDate ?end
    ] .
    BIND(CONCAT(""Administration from "", STR(?start), "" to "", STR(?end)) AS ?administration)
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
360,2,train,Give me the reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q11188 wdt:P1438 ?reference .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
487,5,train,"Give me the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Philip Brian Scott"" .
  ?person rdf:type dbo:SoccerPlayer .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
994,6,train,"Give me the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  ?band rdf:type dbo:Band .
  ?band rdfs:label ""Meshuggah""@en .

  ?band dbo:bandMember ?member .
  
  OPTIONAL { ?member dbo:band ?band . }
  OPTIONAL { ?member dbo:group ?band . }
  OPTIONAL { ?member dbo:organisation ?band . }

  FILTER(?member != ?band)
}
```",1,4,2,1,1,3,3,71,0,4,6,0.0,0.0,0
427,8,train,"Who is the person born, that is an office holder and a politician, as Romano Antonio Prodi?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  # Identify Romano Prodi
  dbr:Romano_Prodi a dbo:Person ;
                   dbo:birthDate ?prodiBirthDate .

  # Find other persons who are office holders and politicians, born individuals
  ?person a dbo:Person ;
          dbo:birthDate ?birthDate ;
          (dbo:officeHolder | dbo:politician) ?role .
  
  FILTER(?person != dbr:Romano_Prodi)
}
ORDER BY ?birthDate",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,13,train,Give me the band of the writer of Apollo (Hardwell song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Apollo_(Hardwell_song)> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find the song ""Apollo"" by Hardwell
  ?song dbo:title ""Apollo""@en .
  ?song dbo:artist dbr:Hardwell .

  # Find the writer(s) of the song
  ?song dbo:lyricist ?writer .

  # Check if the writer is associated with any band
  OPTIONAL {
    ?writer dbo:band ?band .
  }
}
```",2,2,3,2,1,3,3,71,0,0,13,0,0.0,0
626,9,train,"Give me the force, that is a military conflict, of the commander in Battle of Paris (1814).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Battle_of_Paris_(1814)> <http://dbpedia.org/ontology/commander> ?v0 . },"PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?force WHERE {
  ?battle a dbo:Battle .
  ?battle rdfs:label ""Battle of Paris (1814)""@en .
  
  OPTIONAL { 
    ?battle dbp:commander ?commander .
    ?commander dbo:militaryCommand ?force .
  }
}
```

This query does the following:
- Identifies the battle as an instance of `dbo:Battle`.
- Uses the label ""Battle of Paris (1814)"" to find the specific event.
- Optionally retrieves the commander and their military command.",2,3,3,2,1,3,2,20,0,0,77,0,0.0,0
754,7,train,Give me the parent of the parent of May Hnin Htapi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . <http://dbpedia.org/resource/May_Hnin_Htapi> <http://dbpedia.org/ontology/parent> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandparent WHERE {
  ?person dbo:birthName ""May Hnin Htapi""@en.
  
  OPTIONAL { ?person dbo:mother ?mother. }
  OPTIONAL { ?person dbo:father ?father. }

  OPTIONAL { 
    ?mother dbo:mother ?grandmotherMother; 
            dbo:father ?grandfatherFather.
  }
  OPTIONAL {
    ?father dbo:mother ?grandmotherFather; 
            dbo:father ?grandfatherFather.
  }

  BIND(COALESCE(?grandmotherMother, ?grandmotherFather) AS ?grandparent)
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
92,8,train,Give me the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person WHERE {
  ?person foaf:name ""Joseph Michael Furney""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,5,train,"Give me the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q123456 yago:YAGOBand_memberOf_band ?band .
  FILTER (str(?band) = ""YU Grupa"")
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for YU Grupa. You can find this by searching for YU Grupa in DBpedia or using a SPARQL query to retrieve its identifier.",1,2,2,1,1,3,2,20,0,0,8,0,0.0,0
659,11,train,"Give me the commander in the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . ?v0 <http://dbpedia.org/ontology/commander> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?subordinate WHERE {
  ?wellesley a dbo:MilitaryPerson ;
             foaf:name ""Arthur Wellesley, 1st Duke of Wellington""@en .
  
  ?commander a dbo:MilitaryPerson ;
             dbo:commandedBy ?wellesley ;
             foaf:name ?subordinate .
}
```",2,2,3,2,1,3,3,71,0,0,175,0,0.0,0
963,8,train,"Give me the administration of the ruling party, that is a political party, in Sremski Karlovci.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. <http://dbpedia.org/resource/Sremski_Karlovci> <http://dbpedia.org/property/leaderParty> ?v0 . ?result <http://dbpedia.org/property/leaderParty> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?administration WHERE {
  # Find Sremski Karlovci
  VALUES ?location { dbr:Sremski_Karlovci }

  # Find political parties associated with the location
  ?party dbo:country dbr:Serbia ;
         dbo:politicalPartyInCountry ?location .

  # Determine ruling party (assuming a property like 'ruling' exists or using a workaround)
  OPTIONAL {
    ?party dbo:rulingParty true .
  }

  # Get administration details of the ruling party
  OPTIONAL {
    ?administration dbo:headOfGovernment ?leader ;
                    dbo:politicalParty ?party .
  }
  
  FILTER (?party != null && ?administration != null)
}
ORDER BY ?party",2,3,3,2,1,3,2,20,0,0,86,0,0.0,0
77,5,train,Who is the mayor of Congress Poland?,SELECT ?result WHERE { <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?position WHERE {
  # Find entities related to Congress Poland
  ?entity a dbo:AdministrativeRegion ;
          dbo:country dbr:Congress_Poland .

  # Look for leadership roles or administrative positions
  OPTIONAL { 
    ?entity dbo:headLeader ?leader .
    ?leader dbo:occupation ?position .
    
    FILTER(CONTAINS(LCASE(?position), ""mayor"") || CONTAINS(LCASE(?position), ""governor"") || CONTAINS(LCASE(?position), ""administrator""))
  }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
54,17,train,"Give me the child, that is an office holder and a royalty, of the reference to Thihapate of Mohnyin.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Thihapate of Mohnyin
  dbr:Thihapate_of_Mohnyin dbo:spouse ?parent .

  # Find children who are office holders and royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch ; # Assuming Monarch as a class for royalty
         dbo:officeHolder ?office . # Assuming officeHolder property for office holding

}
```

This query assumes:
- `dbo:spouse` is used to find the parent (Thihapate of Mohnyin).
- `dbo:child` identifies children.
- The child must be a `Monarch` and have an `officeHolder` property.

Note: Adjustments may be needed based on actual DBpedia schema details, as class names and properties might differ or require more specific filtering.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
345,8,train,"Give me the team of the person born, that is a soccer player and a soccer manager, on 1978-09-15.","SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/ontology/birthDate> ""1978-09-15""^^<http://www.w3.org/2001/XMLSchema#date> . ?result <http://dbpedia.org/ontology/manager> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?team WHERE {
  ?person a dbo:SoccerPlayer .
  ?person dbo:birthDate ""1978-09-15""^^xsd:date .
  ?person dbo:managerTeam ?team .
  OPTIONAL { 
    ?person dbo:playerFor ?team .
  }
  FILTER EXISTS { ?person dbo:occupation dbr:Soccer_manager . }
}
```

### Explanation:

- **PREFIX**: Define prefixes for common DBpedia namespaces.
- **SELECT**: Choose the variables `?person` and `?team`.
- **FILTER**: Ensure the person is both a soccer player and manager by checking their occupation.
- **dbo:birthDate**: Match the birth date to ""1978-09-15"".
- **dbo:managerTeam** and **dbo:playerFor**: Retrieve teams associated with the person as either a manager or player.

This query assumes that DBpedia has structured data for soccer players, managers, and their respective teams. Adjustments might be necessary based on actual schema details in DBpedia.",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
251,9,train,Give me the administration of Forza Italia (2013) and death place of Laura Mancinelli.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Forza_Italia_(2013)> . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration ?deathPlace
WHERE {
  # Forza Italia administration in 2013
  OPTIONAL {
    ?party a dbo:PoliticalParty ;
           dbo:leader ?person .
    ?person dbo:officeHeld ?office .
    ?office dbo:startDate ?start ;
            dbo:endDate ?end .
    FILTER (YEAR(?start) <= 2013 && YEAR(?end) >= 2013)
    BIND(""Forza Italia"" AS ?administration)
  }
  
  # Laura Mancinelli's death place
  OPTIONAL {
    dbr:Laura_Mancinelli dbo:deathPlace ?deathPlace .
  }
}
```",2,2,3,1,2,2,3,28,1,2,0,0.3333333333333333,1.0,0.5
404,4,train,"Who is the person born, that is a royalty, as Princess Victoria Louise of Prussia?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ""Princess Victoria Louise of Prussia""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:Person .
  ?person dbo:spouse|dbo:childOf|dbo:siblingOf* dbr:Victoria_Louise_of_Prussia .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,3,train,"Give me the child, that is a royalty, of Boleslaus I, Duke of Bohemia.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Boleslaus_I,_Duke_of_Bohemia> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?boleslausI a dbo:Duke ;
              dbp:name ""Boleslaus I, Duke of Bohemia""@en .
  
  ?boleslausI dbo:child ?child .

  OPTIONAL { 
    ?child dbo:royalty ?royalty .
  }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
92,5,train,Give me the actor of Return to Nuke 'Em High Volume 1.,SELECT ?result WHERE { <http://dbpedia.org/resource/Return_to_Nuke_'Em_High_Volume_1> <http://dbpedia.org/property/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dcterms:title ""Return to Nuke 'Em High Volume 1""@en .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,19,0,0.0,0
345,7,train,Give me the figure known as the nickname of FC Vaduz.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?v1 . },"```sparql
SELECT ?nickname WHERE {
  <http://dbpedia.org/resource/FC_Vaduz> dbo:nickname ?nickname .
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
959,7,train,"Who is the manager, that is a sports manager, of 1998 Kashima Antlers season?",SELECT ?result WHERE { <http://dbpedia.org/resource/1998_Kashima_Antlers_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?season dbo:sportTeam dbr:Kashima_Antlers ;
          dbo:year ""1998""^^xsd:gYear .
  
  ?season dbo:manager ?manager .
  
  ?manager a dbo:SportsManager .
}
```

This query does the following:
- It selects entities that are sports managers (`dbo:SportsManager`) of the Kashima Antlers for the year 1998.
- It uses `dbo:sportTeam` to link the season to the team and `dbo:year` to specify the year.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
485,0,train,Give me the entity in United Kingdom.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:United_Kingdom .
}
```",1,1,2,1,1,2,3,28,87,2691,42912,0.03131749460043196,0.0020233028675085466,0.003801035454485877
959,14,train,Give me the manager of the team of Takashi Sekizuka.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . ?v0 <http://dbpedia.org/ontology/manager> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?manager WHERE {
  ?player rdf:type dbo:Athlete .
  ?player foaf:name ""Takashi Sekizuka""@en .
  
  ?team dbo:member ?player .
  
  ?team dbo:coach ?manager .
}
```

This query does the following:
- It looks for an entity of type `dbo:Athlete` with a name matching ""Takashi Sekizuka"".
- It finds teams (`?team`) where Takashi Sekizuka is a member.
- It retrieves the coach (or manager) of that team.

Note: The exact properties and classes might vary depending on how DBpedia has structured its data. Adjustments may be necessary if different predicates are used for these relationships.",2,2,3,2,1,3,3,71,0,0,10,0,0.0,0
701,15,train,Give me the child of the spouse of Amun-her-khepeshef.,SELECT ?result WHERE { <http://dbpedia.org/resource/Amun-her-khepeshef> <http://dbpedia.org/ontology/spouse> ?v1 . ?v1 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person a dbo:Person ;
          foaf:name ""Amun-her-khepeshef""@en .
  
  OPTIONAL { ?person dbo:spouse ?spouse . }
  
  OPTIONAL { ?spouse dbo:child ?child . }
}
```

This query does the following:
- It identifies `?person` as Amun-her-khepeshef.
- It finds the spouse of this person (`?spouse`).
- It retrieves the children of that spouse (`?child`).

Note: The query assumes that DBpedia has structured data for these relationships. If the specific names or properties are not directly available, you might need to adjust the query based on actual data availability in DBpedia.",2,2,3,2,1,3,3,71,0,0,6,0,0.0,0
963,6,train,Give me the entity in Serbia and administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Serbia> . ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?position WHERE {
  ?person a dbo:Politician ;
          dbo:nationality dbr:Serbia ;
          dbo:partyAffiliation dbr:Serbian_Progressive_Party .
  
  OPTIONAL { 
    ?person dbo:officeHeld ?position .
  }
}
```",2,2,3,1,2,3,2,20,0,0,84,0,0.0,0
528,17,train,Give me the person born as the birth name of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Narciso_Campero> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Narciso Campero""@en .
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,7,train,Give me the reference to Rutger Jan Schimmelpenninck.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""Rutger Jan Schimmelpenninck""@en.
  OPTIONAL { 
    ?reference schema:description ?description .
    FILTER(CONTAINS(LCASE(?description), ""reference""))
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
421,0,train,Give me the band member of Senidah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"```sparql
SELECT ?member WHERE {
  wd:Q11050172 dbo:musicalArtistMember ?member .
}
```",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
281,10,train,"Give me the war of New Zealand Army and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?description WHERE {
  # Wars involving the New Zealand Army
  VALUES ?newZealandArmy { dbr:New_Zealand_Army }
  
  ?war dbo:participatingOrganisation ?newZealandArmy .
  
  OPTIONAL {
    ?war dbo:description ?description .
  }

  UNION

  # Wars involving Beauchamp Seymour, 1st Baron Alcester
  VALUES ?beauchampSeymour { dbr:Beauchamp_Seymour,_1st_Baron_Alcester }
  
  ?war dbo:participatingPerson ?beauchampSeymour .
  
  OPTIONAL {
    ?war dbo:description ?description .
  }

  # Find common wars
  FILTER EXISTS {
    VALUES ?commonWar { ?war }
    ?commonWar dbo:participatingOrganisation ?newZealandArmy .
    ?commonWar dbo:participatingPerson ?beauchampSeymour .
  }
}
ORDER BY ?war
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
251,7,train,Give me the death place of Laura Mancinelli and location of Battle of Marengo.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Marengo> <http://dbpedia.org/ontology/place> ?result . <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?deathPlace ?battleLocation
WHERE {
  ?mancinelli a dbo:Person ;
              foaf:name ""Laura Mancinelli""@en ;
              dbo:deathPlace ?deathPlace .

  ?marengoEvent a dbo:Event ;
                dbp:title ""Battle of Marengo""@en ;
                dbp:location ?battleLocation .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
498,4,train,Give me the band of Malevolent Creation and band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMalevolentCreation ?bandWillRahmer
WHERE {
  # Find bands associated with Malevolent Creation
  OPTIONAL { 
    ?malevolentCreation a dbo:MusicalArtist ;
                        foaf:name ""Malevolent Creation"" .
    ?malevolentCreation dbo:band ?bandMalevolentCreation .
  }
  
  # Find bands associated with Will Rahmer
  OPTIONAL {
    ?willRahmer a dbo:MusicalArtist ;
                foaf:name ""Will Rahmer"" .
    ?willRahmer dbo:band ?bandWillRahmer .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,16,train,"Give me the war, that is a military conflict and an event, of the commander in Battle of Verdun.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Battle_of_Verdun> <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Identify the Battle of Verdun resource
  dbr:Battle_of_Verdun dbo:commander ?commander .
  
  # Find the war associated with this commander
  ?commander dbo:participatedInMilitaryConflict ?conflict .
  ?conflict a dbo:MilitaryConflict ;
           dbo:partOf ?war .

  FILTER(?war != dbr:Battle_of_Verdun) # Exclude the battle itself from results
}
```",2,4,3,2,1,3,3,71,0,0,11,0,0.0,0
465,1,train,Give me the administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . },"```sparql
SELECT ?administration WHERE {
  wd:Q1116980 dbo:administrativeBody ?administration .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
528,0,train,Give me the war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?description WHERE {
  ?person rdfs:label ""Irene Morales""@en .
  ?event dbo:wikiPageDisambiguates ?person ;
         dbo:description ?description .
}
```

This query attempts to find events (`?event`) that are disambiguated by the resource for Irene Morales, along with their descriptions.",1,1,2,1,1,3,3,71,0,0,6,0,0.0,0
487,7,train,Give me the country of the administration of Patricia McCoy.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Patricia_McCoy> . ?v1 <http://dbpedia.org/ontology/country> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person foaf:name ""Patricia McCoy""@en .
  OPTIONAL { ?person dbo:position ?position . }
  OPTIONAL { ?position dbo:office ?office . }
  OPTIONAL { ?office dbo:country ?country . }
}
```",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
994,12,train,Give me the band member of Don Dokken and associated musical artist of Red Tide (band).,SELECT ?result WHERE { <http://dbpedia.org/resource/Red_Tide_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?donDokkenBandMember ?redTideArtist
WHERE {
  # Find band members of Don Dokken
  ?band dbo:member dbr:Don_Dokken .
  ?band dbo:member ?donDokkenBandMember .

  # Find associated musical artists of Red Tide (band)
  ?artist dbo:associatedMusicalArtist dbr:Red_Tide_(band) .
  ?artist rdfs:label ?redTideArtist .
  
  FILTER(LANG(?redTideArtist) = 'en')
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
465,3,train,"Give me the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party ?organization WHERE {
  # Find the Chamber of Deputies of the Czech Republic
  dbr:Czech_Parliament dbo:member ?chamber .
  
  # Identify the leader of the Chamber of Deputies
  ?chamber dbo:chairman ?leader .

  # Ensure the leader is associated with a political party
  ?leader dbo:party ?party .
  
  # Ensure the leader is also an organization (or part of one)
  OPTIONAL { ?leader dbo:organization ?organization . }
  
  FILTER EXISTS { ?party a dbo:PoliticalParty } 
  FILTER EXISTS { ?organization a dbo:Organization }
}
```

This query does the following:
- Identifies the Chamber of Deputies as a member of the Czech Parliament.
- Retrieves the chairman (or leader) of this chamber.
- Ensures that the leader is associated with a political party and optionally an organization.",1,3,2,1,1,2,2,9,0,0,5,0,0.0,0
659,4,train,"Give me the force of Arthur Wellesley, 1st Duke of Wellington.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_Wellesley,_1st_Duke_of_Wellington> . }","```sparql
SELECT ?force WHERE {
  wd:Q11142 dbo:force ?force .
}
```",1,1,2,1,1,3,3,71,0,0,52,0,0.0,0
827,1,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","```sparql
SELECT ?father WHERE {
  wd:Q123456 dbo:father ?father .
}
```

In this query, `wd:Q123456` should be replaced with the actual DBpedia resource identifier for William Ernest, Grand Duke of Saxe-Weimar-Eisenach. You can find this identifier by searching for his name on DBpedia or using a SPARQL endpoint to search for it.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
465,4,train,Give me the death place of Jiřina Štěpničková and administration of Czech Pirate Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Czech_Pirate_Party> . <http://dbpedia.org/resource/Jiřina_Štěpničková> <http://dbpedia.org/ontology/deathPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?deathPlace ?administrator
WHERE {
  # Query for Jiřina Štěpničková's death place
  dbr:Ji%C5%99ina_%C5%A0t%C4%9Bpnickov%C3%A1 dbo:deathPlace ?deathPlace .

  # Query for the administrator of Czech Pirate Party
  OPTIONAL {
    dbr:Czech_Pirate_Party dbo:administrator ?administrator .
  }
}
```",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
492,17,train,"Give me the capital, that is a settlement, of the country of Khemis Miliana District.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?capital WHERE {
  # Find Khemis Miliana District in Algeria
  dbr:Khemis_Miliana_District dbo:country dbr:Algeria .
  
  # Find the capital of this district, which is a settlement
  ?district dbo:administrativeCapital ?capital .
  FILTER EXISTS { ?capital a dbo:Settlement . }
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
427,1,train,Give me the party of Giulio Andreotti.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q1234 dbo:politicalParty ?party .
}
```

Note: Replace `wd:Q1234` with the actual DBpedia identifier for Giulio Andreotti.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,12,train,Give me the commander in Biscay Campaign and military force of Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?militaryForce WHERE {
  # Find the Biscay Campaign and its commander
  ?campaign dbo:partOf dbr:Spanish_Civil_War ;
            rdfs:label ""Biscay Campaign""@en .
  
  OPTIONAL { 
    ?campaign dbo:commander ?commander . 
    ?commander rdfs:label ?commanderLabel .
    FILTER(LANG(?commanderLabel) = 'en')
  }
  
  # Find military forces involved in the Biscay Campaign
  ?campaign dbo:militaryForce ?militaryForce ;
            ?prop ?value .
  ?militaryForce rdfs:label ?militaryForceLabel .
  FILTER(LANG(?militaryForceLabel) = 'en')

}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
994,13,train,"Give me the associated musical artist of the band member, that is a band and a group and an organisation, of Meshuggah.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Meshuggah> . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember ?associatedArtist WHERE {
  # Find band members of Meshuggah
  ?member dbo:memberOfBand dbr:Meshuggah .
  
  # Ensure the member is also a band/group/organization
  ?member a ?type .
  FILTER (
    ?type = dbo:MusicalGroup ||
    ?type = dbo:Organization ||
    ?type = dbo:Band
  )
  
  # Find associated musical artists of these members
  ?member dbp:associatedActs ?artist .
}
```",2,5,3,2,1,3,3,71,0,0,33,0,0.0,0
30,1,train,"Give me the professional in Financier, businessman, vineyard owner, art collector, racehorse owner/breeder.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Financier, businessman, vineyard owner, art collector, racehorse owner/breeder""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person a dbo:Person .
  VALUES ?occupation { 
    dbr:Financier 
    dbr:Businessman 
    dbr:Vineyard_owner 
    dbr:Art_collector 
    dbr:Racehorse_owner
  }
  ?person dbo:profession ?occupation .
  FILTER(CONTAINS(LCASE(STR(?person)), ""edmond de rothschild""))
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
427,0,train,Give me the reference to Partito Popolare Italiano.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q1116 rdfs:label ""Partito Popolare Italiano""@en .
  OPTIONAL { wd:Q1116 schema:isPartOf ?reference . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
404,1,train,Give me the parent of Prince Ernest Augustus of Hanover (born 1914).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Prince_Ernest_Augustus_of_Hanover_(born_1914)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Prince_Ernest_Augustus_of_Hanover_(1914) }
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
659,13,train,"Give me the commander in the war, that is an event and a military conflict, of 1st Light Cavalry Lancers Regiment of the Imperial Guard (Polish).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish)> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Find the regiment and its related wars
  VALUES ?regiment { dbr:1st_Light_Cavalry_Lancers_Regiment_of_the_Imperial_Guard_(Polish) }
  
  ?regiment dbo:participatedIn ?war .
  
  # Ensure the war is a military conflict
  ?war rdf:type dbo:MilitaryConflict .

  # Find commanders of these wars
  ?war dbo:commander ?commander .
}
```

This query does the following:
- It identifies the regiment using its DBpedia resource.
- It finds all wars or military conflicts (`dbo:MilitaryConflict`) that the regiment participated in.
- It retrieves the commanders associated with those wars.",2,4,3,2,1,3,3,71,0,0,130,0,0.0,0
498,0,train,Give me the band of Malevolent Creation.,SELECT ?result WHERE { <http://dbpedia.org/resource/Malevolent_Creation> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q1234568 wdt:P175 ?band .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia identifier for Malevolent Creation. You can find this identifier by searching for ""Malevolent Creation"" in DBpedia or using a SPARQL endpoint to retrieve it.",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
996,10,train,Give me the award of the native of Palestine (region).,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Palestine_(region)> . ?v0 <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?award
WHERE {
  ?person dbo:nationality dbr:Palestine .
  OPTIONAL { ?person dbo:award ?award . }
}
```",2,2,3,2,1,3,2,20,0,2,14,0.0,0.0,0
959,10,train,Give me the manager of 2013 Júbilo Iwata season and member of University of Tsukuba.,SELECT ?result WHERE { <http://dbpedia.org/resource/2013_Júbilo_Iwata_season> <http://dbpedia.org/ontology/manager> ?result . ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team dbo:coach ?manager .
  ?manager dbo:almaMater dbr:University_of_Tsukuba .
  
  ?team rdfs:label ""Júbilo Iwata""@en .
  FILTER(CONTAINS(LCASE(?teamLabel), ""2013""))
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
92,13,train,"Give me the associated musical artist of the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?person a dbo:Person ;
          foaf:name ""Jim Sheppard"" .

  ?person dbo:birthPlace ?birthPlace .
  
  ?person dbo:associatedMusicalArtist ?artist .
}
```",2,3,3,2,1,3,3,71,0,0,2,0,0.0,0
197,5,train,Give me the birthplace of the member of FC Politehnica Timișoara.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?player ?birthPlace WHERE {
  # Find players who are members of FC Politehnica Timișoara
  ?player dbo:memberOfTeam dbr:FC_Politehnica_Timișoara .
  
  # Get the birthplace of each player
  ?player dbo:birthPlace ?birthPlace .
}
```",2,2,3,2,1,2,2,9,0,0,171,0,0.0,0
981,1,train,Give me the birth place of Novia Indriani Mamuaja.,SELECT ?result WHERE { <http://dbpedia.org/resource/Novia_Indriani_Mamuaja> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:QXXXXX dbo:birthPlace ?birthPlace .
}
```

Note: Replace `wd:QXXXXX` with the actual DBpedia identifier (QID) for Novia Indriani Mamuaja. You can find this QID by searching for her on DBpedia or a similar resource.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
534,6,train,Give me the headquarter of Royal Dublin Society and birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . <http://dbpedia.org/resource/Royal_Dublin_Society> <http://dbpedia.org/ontology/headquarter> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?headquarters ?birthPlace
WHERE {
  ?society a dbo:Society;
           rdfs:label ""Royal Dublin Society""@en.
  ?society dbp:headquarters ?headquarters.

  ?person a dbo:Person;
          rdfs:label ""Garret FitzGerald""@en.
  ?person dbo:birthPlace ?birthPlace.
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
783,0,train,Give me the associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234568 wdt:P106 ?artist .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Appietus. You can find this by searching for ""Appietus"" on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,2,20,0,0,15,0,0.0,0
963,10,train,"Give me the ruling party, that is a political party, in the location for 21205.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/leaderParty> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v0 <http://dbpedia.org/ontology/postalCode> ""21205"" . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?rulingParty WHERE {
  # Find the city associated with postal code 21205
  ?city dbo:postalCode ""21205"" ;
        a dbo:City .

  # Find the administrative region (state) of this city
  ?region dbo:administrativeRegion ?city .

  # Find the ruling party of this administrative region
  ?region dbo:rulingParty ?rulingParty .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
427,15,train,Give me the name of the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?v1 . ?v1 <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyName WHERE {
  ?person dbo:birthName ""Michele Pinto""@en .
  OPTIONAL { ?person dbo:politicalParty ?party . }
  BIND(STR(?party) AS ?partyUri)
  OPTIONAL { 
    VALUES ?lang { en } 
    ?party rdfs:label ?partyLabel .
    FILTER(LANG(?partyLabel) = ?lang)
    BIND(?partyLabel AS ?partyName)
  }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
981,0,train,Give me the entity in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:Indonesia .
}
```",1,1,2,1,1,3,2,20,2949,0,0,1.0,1.0,1.0
360,6,train,Give me the writer of The Roaring Silence and native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer ?nativePlace WHERE {
  ?book dbo:author ?writer .
  ?writer dbo:nativePlace dbr:Johannesburg .
  ?book rdfs:label ""The Roaring Silence""@en .
  FILTER (lang(?book) = 'en')
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
492,6,train,"Give me the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person dbo:birthName ""Frédéric-Georges Herr""@en .
  ?person dbo:agent ?war .

  ?war a dbo:MilitaryConflict ;
      a dbo:Event .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
712,0,train,Give me the capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  ?country dcterms:isPartOf dbc:""Ukrainian_People%27s_Republic"" .
  ?country dbo:capital ?capital .
}
```

This query looks for the capital of a country that is part of the Ukrainian People's Republic, which corresponds to South Russia during the specified period.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
392,4,train,"Give me the time zone, that is a sports event, of Aguilar de Segarra.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsEvent>. <http://dbpedia.org/resource/Aguilar_de_Segarra> <http://dbpedia.org/ontology/timeZone> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?event ?timezone
WHERE {
  # Find the location entity for Aguilar de Segarra
  ?location a dbo:Place ;
            rdfs:label ""Aguilar de Segarra""@en .

  # Find sports events associated with this location
  ?event dbo:location ?location ;
         a dbo:SportEvent .

  # Get the time zone of these events
  OPTIONAL { ?event dbp:timeZone ?timezone }
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
617,9,train,Give me the spouse of Laodice IV and child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  # Laodice IV and her spouse
  dbr:Laodice_IV dbo:spouse ?spouse .
  
  # The spouse is a child of Antiochus III the Great
  ?spouse dbo:parent dbr:Antiochus_III_the_Great .
}
```",2,2,3,1,2,3,3,71,3,0,0,1.0,1.0,1.0
378,6,train,Who is the commander in Peninsular War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Peninsular_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?event dbo:wikiPageRedirects dbr:Peninsular_War .
  ?event dbo:commander ?person .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,37,0,0.0,0
281,4,train,Who is the awardee of Knight Grand Cross of the Order of the Bath?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
}
```

This query uses the `dbo:honoraryTitle` property to find individuals (`?person`) who have been awarded the Knight Grand Cross of the Order of the Bath.",1,1,2,1,1,3,3,71,0,0,558,0,0.0,0
959,8,train,Give me the team of Takashi Sekizuka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Takashi_Sekizuka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?team WHERE {
  ?person foaf:name ""Takashi Sekizuka""@en .
  ?person dbo:nationality ?nationality .
  ?person dbo:sportsTeam ?team .
}
```",1,1,2,1,1,3,3,71,0,0,10,0,0.0,0
547,7,train,Give me the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:name ""Gerald Graham""@en .
  ?person dbo:award ?award .
}
```

This query looks for a person named Gerald Graham and retrieves any awards associated with him.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
838,2,train,"Give me the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Žika Jelić""@en .
  ?person a dbo:Musician ;
          dbo:musicalArtist ?band .
  
  FILTER (CONTAINS(LCASE(?band), ""band"") || CONTAINS(LCASE(?band), ""group""))
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
378,0,train,Give me the war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbp: <http://dbpedia.org/property/>
PREFIX dbo: <http://dbpedia.org/ontology/>

SELECT ?war WHERE {
  ?person a dbo:Person ;
          foaf:name ""Carl Pontus Gahn""@en .
  
  OPTIONAL { 
    ?person dbp:participatedInWar ?war .
  }
}
```

This query assumes:
- Carl Pontus Gahn is represented as an instance of `dbo:Person`.
- His name is linked using the `foaf:name` property.
- He might have participated in wars, which are linked via a hypothetical `dbp:participatedInWar` property.

Note: The actual properties and URIs may vary based on DBpedia's current schema. You might need to adjust the query if different properties or structures are used.",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
547,8,train,Give me the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . },"```sparql
SELECT ?person WHERE {
  ?award dbo:recipient ?person .
  ?award dbo:type dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
}
```",1,1,2,1,1,3,3,71,0,0,61,0,0.0,0
485,3,train,"Give me the region, that is a country, of Western European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Western_European_Time> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?timeZone dbo:wikiPageRedirects dbr:Western_European_Time .
  ?timeZone dbo:location ?place .
  ?place a dbo:Country .
  ?place rdfs:label ?country .
  FILTER (lang(?country) = 'en')
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
778,6,train,Give me the entity in United States and author of Chroot.,SELECT ?result WHERE { <http://dbpedia.org/resource/Chroot> <http://dbpedia.org/ontology/author> ?result . ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?author WHERE {
  ?book dbo:author ?author .
  ?book rdfs:label ""Chroot""@en .
  FILTER NOT EXISTS { ?book owl:sameAs ?otherBook . }
  
  ?author dbo:nationality dbr:United_States .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
617,5,train,"Give me the father, that is a royalty, of Richeza of Poland, Queen of Hungary.","SELECT ?result WHERE { <http://dbpedia.org/resource/Richeza_of_Poland,_Queen_of_Hungary> <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify Richeza of Poland, Queen of Hungary
  VALUES ?richeza { dbr:Richeza_of_Poland,_Queen_of_Hungary }
  
  # Find her father
  ?richeza dbo:father ?father .
  
  # Ensure the father is royalty
  ?father a dbo:Monarch ;
          dbo:country ?country .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
959,5,train,"Who is the leader, that is a politician, of 2010 Japanese House of Councillors election?",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:electionDate ?date .
  ?candidate dbo:positionHeld ?election .
  ?candidate dbo:officeHolder ?leader .
  ?leader rdf:type dbo:Politician .
  
  FILTER (STRSTARTS(STR(?election), ""http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election""))
}
```

This query does the following:

- It selects entities that are linked to the ""2010 Japanese House of Councillors election"" as a position held.
- It checks if these candidates have an office holder who is classified as a politician.
- The `FILTER` clause ensures we're specifically looking at the 2010 election.",1,2,2,1,1,3,3,71,0,0,9,0,0.0,0
30,2,train,Give me the birthplace of Silvia Cohen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Silvia_Cohen> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Silvia Cohen"" .
  ?person dbo:birthPlace ?birthPlace .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
77,3,train,Who is the awardee of Golden Weapon for Bravery?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Golden_Weapon_for_Bravery> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award a dbo:Award .
  ?award dbo:name ""Golden Weapon for Bravery""@en .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
232,16,train,"Give me the claim to fame, that is a film and a military conflict, of the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/knownFor> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?conflict WHERE {
  VALUES ?person { dbr:Mel_Gibson }
  
  # Find films associated with the person
  ?film dbo:starring ?person .
  FILTER (strstarts(str(?film), ""Braveheart""))

  # Find military conflicts associated with the film
  ?film dbo:subject ?conflict .
  FILTER (strstarts(str(?conflict), ""Battle of Stirling Bridge""))
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
281,7,train,"Who is the professional, that is an office holder and a politician, in New Zealand Army?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?person ?office ?party WHERE {
  ?person dbo:nationality dbr:New_Zealand ;
          dbo:occupation dbr:Military_personnel ;
          dbo:memberOf ?army .
  
  OPTIONAL { ?person dbo:officeHolder ?office . }
  OPTIONAL { ?person dbo:politicalPartyMember ?party . }

  FILTER EXISTS {
    ?army rdfs:label ""New Zealand Army""@en .
  }
}
```

This query does the following:
- Selects individuals (`?person`) who are of New Zealand nationality and have an occupation related to military personnel.
- Checks if they hold any office (`dbo:officeHolder`).
- Checks if they are members of a political party (`dbo:politicalPartyMember`).
- Ensures that the military affiliation is specifically with the ""New Zealand Army"".",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
747,17,train,Who is the person born as the persona of Shèna?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""shèna""))
}
```",2,2,3,2,1,3,3,71,1,0,0,1.0,1.0,1.0
783,8,train,"Give me the band member of the person born, that is an artist and a musical artist, as Priscilla Opoku-Kwarteng.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://dbpedia.org/property/birthName> ""Priscilla Opoku-Kwarteng""@en . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?person a dbo:Artist .
  ?person dbo:birthName ""Priscilla Opoku-Kwarteng"" .
  ?person dbo:musicalArtist true .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?band dbo:bandMember ?bandMember .
  }
}
```

This query does the following:
- Filters for a person who is an artist (`dbo:Artist`) and has the birth name ""Priscilla Opoku-Kwarteng"".
- Ensures that this person is also identified as a musical artist (`dbo:musicalArtist`).
- Uses an optional pattern to find any band memberships and their members.",2,4,3,2,1,3,2,20,0,0,7,0,0.0,0
378,9,train,Give me the war of Joaquín Blake and war of Carl Pontus Gahn.,SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?warLabel WHERE {
  VALUES ?person { 
    dbr:Joaquín_Blake 
    dbr:Carl_Pontus_Gahn
  }
  
  ?person dbo:militaryConflict ?war .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }

}
ORDER BY ?warLabel",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
391,13,train,"Give me the actor of the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/starring> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?film dbo:director dbr:Michael_Ballhaus .
  ?film dbo:starring ?actor .
}
```

This query does the following:
- It selects distinct actors (`?actor`) who starred in films.
- It filters films (`?film`) that have Michael Ballhaus as their director using `dbo:director`.
- It retrieves actors involved in those films using `dbo:starring`.",2,3,3,2,1,3,3,71,0,0,20,0,0.0,0
534,9,train,"Who is the child, that is a politician and an office holder, of the native, that is a politician, of Essex?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Essex> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?child a dbo:Politician ;
         dbo:officeHolderOf ?office .
  
  ?parent dbo:nationality dbr:Essex ;
          dbo:birthPlace dbr:Essex ;
          a dbo:Politician .

  ?child dbo:parent ?parent .
}
```

This query does the following:
- Selects individuals (`?child`) who are politicians and have held an office.
- Identifies parents (`?parent`) who are politicians and natives of Essex (both nationality and birthplace).
- Establishes a parent-child relationship between `?child` and `?parent`.",2,5,3,2,1,3,2,20,0,0,7,0,0.0,0
392,8,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```

This query selects entities that are classified as countries (`dbo:Country`) and have the time zone `dbr:Central_European_Time`.",2,3,3,2,1,2,3,28,0,0,173261,0,0.0,0
378,16,train,"Who is the commander in the reference, that is a military conflict, to Peninsular War?","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Peninsular War""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?war a dbo:MilitaryConflict ;
      rdfs:label ""Peninsular War""@en .
  
  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
}
```",2,3,3,2,1,3,3,71,37,0,0,1.0,1.0,1.0
435,0,train,Give me the territory administered from Reykjavík.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Reykjavík> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?territory WHERE {
  ?city dbo:administrativeCapitalOf ?country .
  ?city rdfs:label ""Reykjavík""@en .
  OPTIONAL { ?territory dbo:capital ?city . }
}
```

This query does the following:
- It uses `dbo:administrativeCapitalOf` to find countries for which Reykjavík is an administrative capital.
- It checks if there are any territories that have Reykjavík as their capital using `dbo:capital`.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
251,10,train,"Give me the administration of the ruling party, that is a political party and an organisation, in Sicily.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Sicily> <http://dbpedia.org/property/leaderParty> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?party ?administration WHERE {
  ?party a dbo:PoliticalParty ;
         dbo:isBasedIn dbr:Sicily ;
         dbo:hasGovernmentRole ?role .
  
  ?role dbo:officeHolder ?administration .

  FILTER EXISTS { ?party dbo:organizationType dbp:Organization }
}
ORDER BY ?party
```

This query does the following:
- Selects entities that are a political party (`dbo:PoliticalParty`) and based in Sicily (`dbo:isBasedIn dbr:Sicily`).
- Checks if these parties have an organization type of ""Organization"" using `FILTER EXISTS`.
- Retrieves the administration associated with the ruling party through their government role.",2,4,3,2,1,2,3,28,0,0,5,0,0.0,0
294,1,train,Give me the resting place of Edwin A. Keeble.,SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?place WHERE {
  wd:Q123456 dbr:resting_place ?place .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Edwin A. Keeble.",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
392,2,train,Give me the province of Schio.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . },"```sparql
SELECT ?province WHERE {
  ?s dbp:location ?place .
  ?place rdfs:label ""Schio""@en .
  ?place dbo:administrativeTerritory ?province .
  ?province rdfs:label ?provinceLabel .
  FILTER(LANG(?provinceLabel) = 'it')
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
994,10,train,Give me the band member of Don Dokken and associated musical artist of S.A. Slayer.,SELECT ?result WHERE { <http://dbpedia.org/resource/S.A._Slayer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Don_Dokken> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find Don Dokken's band membership
  OPTIONAL {
    ?donDokken a dbo:MusicalArtist ;
               foaf:name ""Don Dokken"" .
    ?donDokken dbo:memberOfBand ?bandMember .
  }
  
  # Find the associated musical artist of S.A. Slayer
  OPTIONAL {
    ?sASlayer a dbo:MusicalArtist ;
              foaf:name ""S.A. Slayer"" .
    ?sASlayer dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
528,9,train,Give me the war of Orozimbo Barbosa and war of Irene Morales.,SELECT ?result WHERE { <http://dbpedia.org/resource/Orozimbo_Barbosa> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?war ?label WHERE {
  VALUES (?person) { 
    (dbo:OrozimboBarbosa) 
    (dbo:IreneMorales)
  }
  
  ?war dbo:participatedIn ?person .
  ?war rdfs:label ?label .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
994,17,train,"Who is the person born, that is a musical artist, as the persona of Don Dokken?",SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/property/birthName> ?v0 . },"```sparql
SELECT ?person WHERE {
  ?person dbo:birthPlace ?place .
  ?person foaf:name ""Don Dokken"" .
  ?person dbo:occupation dbc:Musicians_from_California .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
488,0,train,Give me the birth place of Enomoto Takeaki.,SELECT ?result WHERE { <http://dbpedia.org/resource/Enomoto_Takeaki> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q12345 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Enomoto Takeaki. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
391,8,train,"Give me the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?movie WHERE {
  ?movie a dbo:Film .
  ?movie a dbo:CreativeWork .
  ?movie a dbo:TelevisionShow .
  ?movie dbo:starring dbr:Roz_Ryan .
}
```",1,4,2,1,1,3,3,71,0,0,1,0,0.0,0
294,11,train,"Give me the entity in the birth place, that is a settlement, of Marion James.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/location> ?v1 . <http://dbpedia.org/resource/Marion_James> <http://dbpedia.org/ontology/birthPlace> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlaceEntity WHERE {
  # Find Marion James resource
  ?marionJames a dbo:Person ;
               foaf:name ""Marion James"" .

  # Get her birthplace
  ?marionJames dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace a dbo:Settlement .
  
  # Retrieve the entity of the birthplace
  ?birthPlaceEntity rdfs:label ?birthPlaceLabel ;
                   owl:sameAs ?birthPlace .
}
```

This query does the following:
- It identifies Marion James as an instance of `dbo:Person`.
- Retrieves her birthplace using the property `dbo:birthPlace`.
- Ensures that this birthplace is a settlement by checking if it's an instance of `dbo:Settlement`.
- Finally, retrieves the entity corresponding to this birthplace.",2,3,3,2,1,2,3,28,0,0,340,0,0.0,0
92,1,train,Give me the associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Jim Sheppard is a musician (P106)
    wdt:P175 ?artist. # Associated musical artist (P175)
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Jim Sheppard.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
92,10,train,Give me the band of Joseph Michael and band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Joseph_Michael> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band ?memberOfNevermore WHERE {
  # Find the band associated with Joseph Michael
  ?person a dbo:MusicArtist ;
          foaf:name ""Joseph Michael"" .
  
  OPTIONAL { 
    ?person dbo:band ?band .
  }
  
  # Check if he is a member of Nevermore
  OPTIONAL {
    ?person dbo:memberOf dbr:Nevermore .
    BIND(""Yes"" AS ?memberOfNevermore)
  }

  FILTER NOT EXISTS {
    ?person dbo:memberOf dbr:Nevermore .
    BIND(""No"" AS ?memberOfNevermore)
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
392,1,train,Give me the region of Central European Time.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  dbr:Central_European_Time dbo:timeZoneRegion ?region .
}
```",1,1,2,1,1,2,3,28,0,0,49990,0,0.0,0
281,11,train,Give me the war of the awardee of Knight Grand Cross of the Order of the Bath.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_the_Bath> . ?v0 <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?war 
WHERE {
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_the_Bath .
  OPTIONAL { ?person dbo:participatedInWar ?war . }
}
```

This query does the following:
- It selects individuals (`?person`) who have been awarded the Knight Grand Cross of the Order of the Bath.
- It optionally retrieves any wars (`?war`) they participated in.",2,2,3,2,1,3,3,71,0,0,450,0,0.0,0
427,16,train,Who is the father of the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ?result . ?v1 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?alumnus ?father WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
  OPTIONAL { ?alumnus dbo:father ?father . }
}
```",2,2,3,2,1,3,3,71,0,1559,12,0.0,0.0,0
617,0,train,Give me the child of Antiochus III the Great.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Antiochus_III_the_Great> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:parent dbr:Antiochus_III_the_Great .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
161,8,train,"Give me the force, that is an event, of Emilio Mola.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Emilio_Mola> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?event dbo:agent dbr:Emilio_Mola .
  ?event dbo:participatedIn ?force .
}
```",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
838,4,train,"Give me the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""YU Grupa""@en. # Replace Q123456 with the actual DBpedia ID of YU Grupa if known.
  ?reference dbo:type (wd:Q43210|wd:Q618); # wd:Q43210 is an example for 'group', and wd:Q618 for 'organisation'
             rdfs:label ?label .
  FILTER(LANG(?label) = ""en"")
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
617,3,train,"Who is the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?antiochus2 dbo:predecessor ?successor .
  ?antiochus2 rdf:type dbo:Monarch .
  ?antiochus2 rdfs:label ""Antiochus II Theos""@en .
  FILTER (lang(?successorLabel) = 'en')
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
356,4,train,"Give me the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
SELECT ?birthPlace WHERE {
  ?person dbo:birthYear ""1960""^^xsd:gYear ;
          foaf:name ""Gary Williams (footballer, born 1960)"" .
  ?person dbo:birthPlace ?birthPlace .
  FILTER EXISTS { 
    ?birthPlace rdf:type dbo:Settlement .
    ?birthPlace dbo:country dbc:England .
  }
}
```",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
55,5,train,"Give me the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:memberOfBand ?band .
  ?person foaf:name ""Jason Newsted""@en .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
915,2,train,Give me the director of Pipe Dreams (1976 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?result . },"```sparql
SELECT ?director WHERE {
  dbr:Pipe_Dreams_(1976_film) dbo:director ?director .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
488,3,train,"Give me the war, that is a military conflict and an event and a societal event, of Saitō Hajime.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Find Saitō Hajime resource
  ?saitoHajime a dbo:Person ;
               foaf:name ""Saitō Hajime""@en .

  # Find wars that are military conflicts, events, and societal events
  ?war a dbo:MilitaryConflict ;
       dbo:participatedIn ?event .
  
  ?event a dbo:Event ;
         dbo:participant ?saitoHajime .

  OPTIONAL { 
    ?war a dbo:SocietalEvent .
  }
}
```

This query does the following:
- Identifies Saitō Hajime as a person.
- Searches for wars that are classified as military conflicts and events, where Saitō Hajime participated.
- Optionally checks if these wars can also be considered societal events.",1,4,2,1,1,3,3,71,0,0,4,0,0.0,0
9,0,train,"Give me the alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
SELECT ?almaMater WHERE {
  wd:Q123456 wdt:P69 ?almaMater .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for John Alderdice, Baron Alderdice. You can find this identifier by searching for his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
435,11,train,Give me the work of the author of Iceland.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ?v1 . <http://dbpedia.org/resource/Iceland> <http://dbpedia.org/property/author> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?author { dbr:Halldór_Laxness }
  ?author dbo:literaryWork ?work .
}
```",2,2,3,2,1,2,3,28,0,0,1,0,0.0,0
294,8,train,"Give me the resting place of the awardee, that is a politician, of Distinguished Service Medal (U.S. Army).",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Distinguished_Service_Medal_(U.S._Army)> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?restingPlace WHERE {
  ?person a dbo:Politician ;
          dbo:award dbr:Distinguished_Service_Medal_(U.S._Army) .
  
  OPTIONAL { ?person dbo:deathPlace ?restingPlace . }
}
```

### Explanation:

- **PREFIX**: We define prefixes for common DBpedia namespaces to simplify the query.
- **SELECT**: We are selecting two variables, `?person` and `?restingPlace`.
- **FILTER by Occupation**: The query filters individuals who are of type `dbo:Politician`.
- **Filter by Award**: It further narrows down to those who have received the `Distinguished_Service_Medal_(U.S._Army)`.
- **Resting Place**: We attempt to retrieve the `deathPlace` as a proxy for resting place, which is often used in DBpedia.

This query assumes that the award and occupation data are available and correctly linked in DBpedia. Adjustments might be necessary based on actual data availability and structure.",2,3,3,2,1,2,3,28,0,0,10,0,0.0,0
528,15,train,"Give me the military force of the entity, that is a societal event, in Chile.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Chile> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?event ?militaryForce WHERE {
  ?event a dbo:SocietalEvent ;
         dbo:country dbr:Chile .
  
  OPTIONAL { 
    ?event dbo:militaryForce ?militaryEntity .
    ?militaryEntity rdfs:label ?militaryForce .
  }
}
ORDER BY ?event
```

This query does the following:
- Filters entities that are of type `SocietalEvent` and located in Chile.
- Uses an optional pattern to find any military force associated with these events, capturing their labels.",2,3,3,2,1,3,3,71,0,0,91,0,0.0,0
696,0,train,Give me the birth place of Tim Brennan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tim_Brennan> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Tim Brennan. You can find this by searching for Tim Brennan on DBpedia or using a SPARQL endpoint to query his identifier.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,1,train,Give me the entity in France.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:country dbr:France .
}
```",1,1,2,1,1,3,2,20,0,44301,292,0.0,0.0,0
115,5,train,Give me the alma mater of the alumnus of National University of San Marcos.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_University_of_San_Marcos> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:alumnusOf dbp:National_University_of_San_Marcos .
  ?person dbo:almaMater ?almaMater .
}
```

This query does the following:

1. It selects distinct alma maters (`?almaMater`) of individuals.
2. It filters individuals who are alumni of ""National University of San Marcos"" using `dbo:alumnusOf`.
3. It retrieves the alma mater for each individual using `dbo:almaMater`.",2,2,3,2,1,2,2,9,0,0,49,0,0.0,0
487,8,train,"Give me the administration of the person born, that is a soccer player, as Philip Brian Scott.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?v0 <http://dbpedia.org/property/birthName> ""Philip Brian Scott""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  ?person foaf:name ""Philip Brian Scott""@en .
  ?person dbo:nationality ?nationality .
  ?person dbo:sport ?sport .
  FILTER(?sport = dbp:Soccer) .
  
  OPTIONAL { ?person dbo:memberOfTeam ?team . }
  OPTIONAL { ?person dbo:memberOfOrganization ?organization . }

  BIND(COALESCE(?team, ?organization) AS ?administration)
}
```

This query does the following:
- Searches for a person with the name ""Philip Brian Scott"".
- Ensures that this person is associated with soccer as their sport.
- Attempts to find any team or organization they are part of using `dbo:memberOfTeam` and `dbo:memberOfOrganization`.
- Uses `COALESCE` to select either the team or organization if available.",2,3,3,2,1,3,2,20,0,0,14,0,0.0,0
179,9,train,"Give me the birth name of the child, that is a royalty, of Nakkhatra Mangala.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . ?v0 <http://dbpedia.org/property/birthName> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?childBirthName WHERE {
  ?parent rdfs:label ""Nakkhatra Mangala""@en .
  ?parent dbo:child ?child .
  ?child rdf:type dbo:RoyalFamilyMember .
  ?child foaf:name ?childBirthName .
}
```

This query assumes:
- Nakkhatra Mangala is labeled in English.
- The child relationship is represented by `dbo:child`.
- Royalty can be identified with `rdf:type` and `dbo:RoyalFamilyMember`.
- Birth names are stored using `foaf:name`.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
767,3,train,Give me the writer of Where It's At (Dustin Lynch album).,SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?result . },"```sparql
SELECT ?writer WHERE {
  ?album dcterms:title ""Where It's At"" ;
         dbo:artist <http://dbpedia.org/resource/Dustin_Lynch> ;
         dbo:composer ?writer .
}
```",1,1,2,1,1,3,3,71,0,0,35,0,0.0,0
427,12,train,Give me the party of Giulio Andreotti and party of Romano Prodi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?partyLabel WHERE {
  VALUES ?person { 
    dbr:Giulio_Andreotti 
    dbr:Romano_Prodi 
  }
  
  ?person dbo:politicalParty ?party .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,1,2,3,3,71,0,0,3,0,0.0,0
617,2,train,Give me the parent of Mlada (abbess).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?m Abbess ""Mlada""@en .
  OPTIONAL { ?m dbo:partOf ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
360,5,train,Give me the author of Blinded by the Light.,SELECT ?result WHERE { <http://dbpedia.org/resource/Blinded_by_the_Light> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?work dcterms:title ""Blinded by the Light""@en .
  ?work dbo:author ?person .
  ?person foaf:name ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
161,9,train,Give me the military force of Rif War and military force of Spanish Civil War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Spanish_Civil_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event ?militaryForce WHERE {
  VALUES ?event { 
    dbr:Rif_War 
    dbr:Spanish_Civil_War 
  }
  
  ?event dbo:militaryParticipant ?participant .
  ?participant a dbo:MilitaryUnit ;
               rdfs:label ?militaryForce .
  
  FILTER (lang(?militaryForce) = 'en')
}
ORDER BY ?event
```",2,2,3,1,2,3,3,71,0,0,34,0,0.0,0
767,2,train,Give me the reference to .,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> """"@en . }",,1,1,2,1,1,3,3,71,0,0,98447,0,0.0,0
421,9,train,Give me the person born as Edin Dervišhalidović and native of Socialist Federal Republic of Yugoslavia.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/property/birthName> ""Edin Dervišhalidović""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthName ?nativeCountry WHERE {
  ?person a dbo:Person .
  ?person dbo:birthName ""Edin Dervišhalidović""@en .
  OPTIONAL { ?person dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia . }
  OPTIONAL { ?person dbp:nativePlace dbr:Socialist_Federal_Republic_of_Yugoslavia . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
142,4,train,Give me the birthplace of George Tokoro and entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace ?relatedEntityInJapan WHERE {
  ?person a dbo:Person ;
          foaf:name ""George Tokoro""@en ;
          dbo:birthPlace ?birthPlace .
  
  OPTIONAL {
    ?birthPlace dbo:country dbr:Japan .
    ?relatedEntityInJapan a dbo:City ;
                          dbo:country dbr:Japan .
  }
}
```",2,2,3,1,2,2,2,9,1,715,0,0.0013966480446927375,1.0,0.002789400278940028
617,1,train,Give me the spouse of Laodice IV.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laodice_IV> <http://dbpedia.org/ontology/spouse> ?result . },"```sparql
SELECT ?spouse WHERE {
  dbpedia:Laodice_IV dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
281,8,train,"Give me the profession, that is a military unit, of Heather Roy.",SELECT ?result WHERE { <http://dbpedia.org/resource/Heather_Roy> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession WHERE {
  ?person rdfs:label ""Heather Roy""@en .
  ?person dbo:occupation ?profession .
  FILTER (CONTAINS(LCASE(STR(?profession)), ""military unit""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
360,7,train,Give me the reference to Manfred Mann and writer of The Roaring Silence.,"SELECT ?result WHERE { <http://dbpedia.org/resource/The_Roaring_Silence> <http://dbpedia.org/property/writer> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
SELECT ?reference WHERE {
  ?album rdf:type dbo:Album .
  ?album dbo:artist <http://dbpedia.org/resource/Manfred_Mann> ;
         dbo:title ""The Roaring Silence""^^xsd:string .
  ?album dbo:writer ?writer .
  FILTER(?writer != <http://dbpedia.org/resource/Manfred_Mann>) .
  ?reference dbo:referencedBy ?album .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
487,1,train,Give me the administration of Phil Scott.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Phil_Scott> . },"```sparql
SELECT ?administration WHERE {
  wd:Q1234567 wdt:P39 ?administration .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Phil Scott. You can find this by searching for Phil Scott on DBpedia or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,3,2,20,0,0,14,0,0.0,0
184,10,train,Give me the parent of Géza von Habsburg and parent of Archduchess Ilona of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parentGéza ?parentIlona WHERE {
  # Find parents of Géza von Habsburg
  OPTIONAL { 
    ?géza dbo:child <http://dbpedia.org/resource/G%C3%A9za_von_Habsburg> .
    ?géza a dbo:Person .
    ?géza dbp:name ?parentGézaName .
    BIND (STR(?parentGézaName) AS ?parentGéza)
  }
  
  # Find parents of Archduchess Ilona of Austria
  OPTIONAL { 
    ?ilona dbo:child <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> .
    ?ilona a dbo:Person .
    ?ilona dbp:name ?parentIlonaName .
    BIND (STR(?parentIlonaName) AS ?parentIlona)
  }
}
```",2,2,3,1,2,3,3,71,0,3,2,0.0,0.0,0
294,0,train,"Give me the resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
SELECT ?place WHERE {
  wd:Q123456 wdt:P570 ?deathDate; # Luke Lea's death date
             wdt:P20 ?place.      # Luke Lea's resting place
  FILTER (YEAR(?deathDate) = 1951) # Assuming he died in 1951, adjust if known differently
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Luke Lea.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
994,11,train,Give me the associated musical artist of the associated musical artist of Watchtower (band).,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . <http://dbpedia.org/resource/Watchtower_(band)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . },"```sparql
SELECT ?secondArtist WHERE {
  ?watchtower dbo:associatedMusicalArtist ?firstArtist .
  ?firstArtist dbo:associatedMusicalArtist ?secondArtist .
  FILTER (str(?watchtower) = ""Watchtower_(band)"")
}
```",2,2,3,2,1,3,3,71,0,0,16,0,0.0,0
232,15,train,Give me the person born as the birth name of Jon Pertwee.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  # Get Jon Pertwee's birth name
  dbr:Jon_Pertwee dbo:birthName ?jonBirthName .
  
  # Find other individuals with the same birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
  
  FILTER (?birthName = ?jonBirthName && ?person != dbr:Jon_Pertwee)
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
314,6,train,Give me the person deceased at Madrid and awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?personLabel WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
  ?person dbo:award ?award .
  FILTER (COUNT(?award) = 30)
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
ORDER BY ?personLabel
LIMIT 10",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
365,1,train,Give me the reference to The Blasters.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""The Blasters""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""The Blasters""@en. # Replace Q123456 with the actual DBpedia resource ID for The Blasters if known.
  OPTIONAL { 
    ?reference schema:description ?description .
    FILTER(CONTAINS(LCASE(?description), ""reference""))
  }
}
```",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
617,4,train,"Give me the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?reference WHERE {
  VALUES ?richeza { dbr:Richeza_of_Poland }
  ?richeza a dbo:Person .
  ?richeza dbo:spouse|dbo:child|dbo:parent ?reference .
  ?reference a dbo:Monarch .
}
```",1,2,2,1,1,3,2,20,0,0,3,0,0.0,0
10,4,train,"Give me the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Luke Francis Vibert"" .
  ?person a dbo:Artist .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
767,11,train,"Give me the entity in the administration, that is a settlement, of Green.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v0 <http://dbpedia.org/property/leaderParty> ""Green""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement .
  ?settlement rdfs:label ""Green""@en .
  OPTIONAL { ?settlement dbo:partOf ?adminEntity . }
}
```",2,3,3,2,1,3,3,71,0,0,60,0,0.0,0
378,4,train,Who is the person born as Carl Pontus Gahn?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Carl Pontus Gahn""@en . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Carl Pontus Gahn""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
996,7,train,Give me the force of the awardee of 1778.0.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""1778.0""^^<http://www.w3.org/2001/XMLSchema#double> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?award dbo:date ""1778-01-01""^^xsd:date .
  ?recipient dbo:award ?award .
  ?recipient dbo:force ?force .
}
```",2,2,3,2,1,3,2,20,0,0,11,0,0.0,0
360,1,train,Give me the native of Johannesburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language WHERE {
  ?place dbo:location dbr:Johannesburg .
  ?place dbo:nativeLanguage ?language .
}
```",1,1,2,1,1,2,3,28,0,0,1000,0,0.0,0
617,9,train,"Give me the child, that is a royalty, of the parent of Mlada (abbess).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mlada_(abbess)> . ?result <http://dbpedia.org/ontology/parent> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Mlada (abbess)
  ?mlada a dbo:ApostolicAbbess ;
         foaf:name ""Mlada""@en .
  
  # Find her parent(s)
  ?parent dbo:spouseOrPartner ?mlada .

  # Check if the parent has children who are royalty
  ?parent dbo:child ?child .
  ?child a dbo:Monarch .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
92,14,train,Give me the band of the person born as Joseph Michael Furney.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Joseph Michael Furney""@en . ?result <http://dbpedia.org/ontology/bandMember> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person a dbo:Person ;
          foaf:name ""Joseph Michael Furney"" .
  OPTIONAL { ?person dbo:memberOfBand ?band . }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
659,17,train,"Give me the force, that is a societal event and an event and a military conflict, of the reference to Rutger Jan Schimmelpenninck.","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Rutger Jan Schimmelpenninck""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?force WHERE {
  # Rutger Jan Schimmelpenninck as a central figure
  dbr:Rutger_Jan_Schimmelpenninck dbo:wikiPageDisambiguates ?disambiguation .
  
  # Societal event related to him
  ?societalEvent dbo:wikiPageDisambiguates ?disambiguation ;
                a dbo:SocietalEvent .

  # General event related to him
  ?event dbo:wikiPageDisambiguates ?disambiguation ;
         a dbo:Event .

  # Military conflict related to him
  ?militaryConflict dbo:wikiPageDisambiguates ?disambiguation ;
                    a dbo:MilitaryConflict .

  # Unifying the results under ""force""
  OPTIONAL { ?societalEvent rdfs:label ?force . }
  OPTIONAL { ?event rdfs:label ?force . }
  OPTIONAL { ?militaryConflict rdfs:label ?force . }

  FILTER (lang(?force) = 'en')
}
ORDER BY ?force",2,5,3,2,1,3,3,71,0,0,2,0,0.0,0
184,6,train,Give me the child of Archduke Joseph Karl of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Karl_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?partner .
  OPTIONAL { ?person dbo:child ?child . }
  FILTER (?person = dbr:Archduke_Joseph_Karl_of_Austria)
}
```",1,1,2,1,1,3,3,71,3,1,0,0.75,1.0,0.8571428571428571
345,0,train,Give me the figure known as Stolz von Liechtenstein.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity a dbo:Horse .
  OPTIONAL { ?entity rdfs:label ?label . FILTER (lang(?label) = 'en') }
  VALUES ?name { ""Stolz von Liechtenstein"" }
  ?entity foaf:name ?name
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
55,11,train,"Give me the band of the reference, that is a band, to Newsted.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://xmlns.com/foaf/0.1/name> ""Newsted""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:memberOfBand ?band .
  ?person foaf:name ""Jason Newsted""@en .
}
```

This query uses the `dbo:memberOfBand` property to find bands associated with a person named Jason Newsted. The `foaf:name` predicate is used to specify the name of the individual.",2,3,3,2,1,2,3,28,0,0,9,0,0.0,0
701,10,train,Give me the spouse of Ramesses II and parent of Meritamen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Meritamen> <http://dbpedia.org/ontology/parent> ?result . ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?ramesses2 dbo:spouse ?spouse .
  ?meritamen dbo:parent ?spouse .
  
  FILTER (str(?ramesses2) = ""Ramesses_II"")
  FILTER (str(?meritamen) = ""Meritamen"")
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
767,10,train,Give me the entity in Baden-Württemberg and reference to .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . ?result <http://xmlns.com/foaf/0.1/name> """"@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?entityLabel WHERE {
  ?entity dbo:location dbr:Baden-Württemberg .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```

This query does the following:
- Uses `dbo:location` to find entities that have Baden-Württemberg as their location.
- Retrieves both the entity and its label for better readability.",2,2,3,1,2,3,3,71,0,0,7,0,0.0,0
44,0,train,Give me the band member of Undertow (band).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Undertow_(band)> . },"```sparql
SELECT ?member WHERE {
  wd:Q1234568 dbo:bandMember ?member .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for the band ""Undertow"". You can find this by searching for the band on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
915,8,train,"Give me the father of the child, that is a fictional character and a soap character, of Phillip Spaulding.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoapCharacter>. ?v0 <http://dbpedia.org/property/father> ?result . ?v0 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Phillip_Spaulding> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Find Phillip Spaulding
  dbr:Phillip_Spaulding dbo:child ?child .

  # Ensure the child is a fictional character and a soap opera character
  ?child rdf:type dbo:FictionalCharacter .
  ?child dbo:genre dbr:SoapOpera .

  # Find the father of this child
  ?child dbo:father ?father .
}
```",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
783,10,train,"Give me the person born, that is an artist and a musical artist, as the persona of Ebony Reigns.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Ebony_Reigns> <http://xmlns.com/foaf/0.1/givenName> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:MusicalArtist ;
          dbo:birthDate ?birthDate ;
          rdfs:label ""Ebony Reigns""@en .
  FILTER (LANG(?person) = 'en')
}
```

### Explanation:

- **PREFIX**: We define prefixes for common DBpedia namespaces to simplify the query.
- **SELECT**: We are selecting the person and their birth date.
- **?person a dbo:MusicalArtist**: This ensures that the individual is classified as a musical artist.
- **dbo:birthDate ?birthDate**: Retrieves the birth date of the person.
- **rdfs:label ""Ebony Reigns""@en**: Filters results to include only those with the label ""Ebony Reigns"" in English.
- **FILTER (LANG(?person) = 'en')**: Ensures that we are considering English language resources.

This query should return the relevant information about Ebony Reigns, focusing on her birth details and confirming her roles as an artist and musical artist.",2,4,3,2,1,3,2,20,0,0,1,0,0.0,0
77,1,train,Give me the force of Alexander I of Russia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Alexander_I_of_Russia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Alexander I""@en .
  OPTIONAL { 
    ?person dbo:militaryCommanderOf ?campaign .
    ?campaign dbo:commander ?leader .
    ?leader dbo:commandedMilitaryForce ?force .
  }
}
```",1,1,2,1,1,3,2,20,0,0,25,0,0.0,0
115,1,train,Give me the alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  ?person dbo:name ""Jorge Sotomayor Tello""@en .
  ?person dbo:almaMater ?university .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
429,3,train,"Give me the military force, that is an organisation, of Camden Expedition.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Camden_Expedition> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?expedition dbo:militaryConflict ?conflict .
  ?conflict dbo:participatingMilitaryUnit ?militaryForce .
  
  FILTER (str(?expedition) = ""Camden_Expedition"")
}
```

This query assumes that the Camden Expedition is linked to a military conflict, which in turn lists participating military units. Adjustments might be necessary based on actual DBpedia schema and available data.",1,2,2,1,1,2,2,9,0,0,22,0,0.0,0
285,6,train,Give me the parent of Alexander Onassis and spouse of Aristotle Onassis.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Aristotle_Onassis> . <http://dbpedia.org/resource/Alexander_Onassis> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?parent ?spouse WHERE {
  # Find Alexander Onassis and his parent
  ?alexander a dbo:Person ;
             dbp:name ""Alexander Onassis""@en .
  
  OPTIONAL { 
    ?alexander dbo:childOf ?parent .
  }
  
  # Find Aristotle Onassis and his spouse
  ?aristotle a dbo:Person ;
             dbp:name ""Aristotle Onassis""@en .

  OPTIONAL {
    ?aristotle dbo:spouse ?spouse .
  }

  FILTER(?alexander != ?aristotle) # Ensure they are distinct individuals
}
```",2,2,3,1,2,3,2,20,1,1,0,0.5,1.0,0.6666666666666666
645,8,train,Give me the alma mater of the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater
WHERE {
  # Find Richard Pankhurst
  ?person a dbo:Person ;
          foaf:name ""Richard Pankhurst""@en .
  
  # Find his children
  ?child dbo:parent ?person .

  # Get the alma mater of each child
  ?child dbo:almaMater ?almaMater .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
328,4,train,"Give me the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
617,15,train,"Who is the child, that is a royalty, of the successor, that is a royalty, of Antiochus II Theos?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Antiochus_II_Theos> <http://dbpedia.org/ontology/successor> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find Antiochus II Theos and his successors
  dbr:Antiochus_II_Theos dbo:successor ?successor .
  
  # Ensure the successor is royalty
  ?successor a dbo:Monarch .

  # Find children of that royal successor who are also royalty
  ?successor dbo:child ?child .
  ?child a dbo:Monarch .
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
754,10,train,Give me the child of the reference to Ram Khamhaeng the Great.,"SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Ram Khamhaeng the Great""@en . ?v0 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT ?child WHERE {
  ?person dbo:wikiPageRedirects <http://dbpedia.org/resource/Ram_Khamhaeng_the_Great> .
  ?person dbo:child ?child .
}
```

This query does the following:
- Uses the `dbo` namespace for DBpedia ontology.
- Searches for a person who is redirected to ""Ram Khamhaeng the Great"".
- Retrieves any child entities related to that person.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
356,3,train,Give me the successor of 2014 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2014_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/successor> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successorSeason WHERE {
    ?team dbo:sportTeamLeague dbr:USL_Professional_League .
    ?team dbo:homeCity dbr:Sacramento,_California .
    ?season dbo:participatingTeam ?team ;
            dbo:year ""2014""^^xsd:gYear .
    
    OPTIONAL { 
        ?nextSeason dbo:participatingTeam ?team ;
                    dbo:year ?year .
        FILTER (?year > 2014)
        BIND (MIN(?year) AS ?successorYear)
    }
    
    VALUES ?successorSeason {
        dbr:Sacramento_Republic_FC_in_the_2015_USL_Professional_League_season
        dbr:Sacramento_Republic_FC_in_the_2016_USL_Championship_season
        # Add more seasons as needed
    }

    FILTER (?successorYear = ?successorSeason)
}
ORDER BY ?successorYear",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
996,8,train,Give me the entity in the award of Ekrem Akurgal.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> ?v0 . <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person a dbo:Person ;
          foaf:name ""Ekrem Akurgal""@en .
  ?person dbo:honoraryTitle ?award .
}
```",2,2,3,2,1,3,2,20,0,0,292,0,0.0,0
778,2,train,"Give me the awardee, that is American, of Wolf Prize in Medicine.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> . ?result <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States>. },"```sparql
SELECT ?person WHERE {
  ?award dcterms:isPartOf <http://dbpedia.org/resource/Wolf_Prize_in_Medicine> .
  ?award dbo:recipient ?person .
  ?person dbo:nationality <http://dbpedia.org/resource/Category:American_physicians> .
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
801,6,train,"Give me the work, that is a musical work and a song and a work, of 50 Cent.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/50_Cent> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  VALUES ?artist { dbr:50_Cent }
  ?work dbo:artist ?artist .
  ?work a ?type .
  FILTER (
    (?type = dbo:MusicalWork) ||
    (?type = dbo:Song)
  )
}
```",1,4,2,1,1,3,3,71,30,23,28,0.5660377358490566,0.5172413793103449,0.5405405405405406
488,15,train,"Who is the commander in the war, that is a military conflict and an event and a societal event, of Saitō Hajime?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. <http://dbpedia.org/resource/Saitō_Hajime> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?war ?commander WHERE {
  # Find Saitō Hajime and his involvement in wars
  dbr:Sait%C5%8D_Hajime dbo:militaryConflict ?war .
  
  # Ensure the war is a military conflict, event, and societal event
  ?war rdf:type dbo:MilitaryConflict ;
       rdf:type dbo:Event ;
       rdf:type dbo:SocietalEvent .

  # Find commanders of those wars
  ?war dbo:commander ?commander .
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
981,8,train,"Give me the birth place of the person born, that is a beauty queen, as .","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/birthName> """"@en . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthPlace WHERE {
  ?person a dbo:Person .
  ?person dbo:title ""Beauty Queen""@en ; # Assuming the title is stored in English
          dbp:birthPlace ?birthPlace .
}
```",2,3,3,2,1,3,2,20,0,0,170,0,0.0,0
547,14,train,Give me the resting place of the awardee of Knight Grand Cross of the Order of St Michael and St George.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George> . ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?burialPlace WHERE {
  ?person dbo:honoraryTitle dbr:Knight_Grand_Cross_of_the_Order_of_St_Michael_and_St_George .
  OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') . }
  OPTIONAL { ?person dbo:finalBurial ?burialPlace . }
}
ORDER BY ?name
LIMIT 10",2,2,3,2,1,3,3,71,0,0,28,0,0.0,0
64,6,train,"Give me the entity in the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> ?v0 . ?v0 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time .
}
```

This query selects entities that are of type `dbo:Country` and have the `dbo:timeZone` property set to `dbr:Central_European_Time`.",2,3,3,2,1,2,2,9,0,0,173261,0,0.0,0
666,6,train,Give me the figure known as The Three Lions and player in Steve Bruce.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . ?result <http://dbpedia.org/property/nickname> ""The Three Lions""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?team dbo:member ?player .
  ?player foaf:name ""Steve Bruce""@en .
  ?team rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""three lions""))
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,7,train,Give me the band member of Guns N' Roses and band of Newsted.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?memberName ?newstedBand
WHERE {
  # Find members of Guns N' Roses
  ?gnaMember dbo:band dbr:Guns_N%27_Roses .
  
  # Get the name of each member
  ?gnaMember rdfs:label ?memberName .
  
  FILTER (LANG(?memberName) = 'en')
  
  # Find bands associated with A. Newsted
  ?newsted dbo:band dbr:A_Newsted .
  ?newstedBand dbo:band ?newsted .
  
  # Filter to find if the member of Guns N' Roses is A. Newsted
  FILTER (?memberName = ""A. Newsted""@en)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,4,train,Who is the commander in Boshin War?,SELECT ?result WHERE { <http://dbpedia.org/resource/Boshin_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?event dbo:wikiPageRedirects dbr:Boshin_War .
  ?event dbo:participatedIn ?person .
  ?person a dbo:MilitaryPerson ;
          foaf:name ?name .
  OPTIONAL { ?person dbo:spouse ?spouse . }
  FILTER (lang(?name) = 'en')
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,3,3,71,0,0,26,0,0.0,0
142,1,train,Give me the birthplace of George Tokoro.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_Tokoro> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for George Tokoro. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
339,10,train,Who is the child of the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> ?result . ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Find the parent of Princess Olga of Greece and Denmark
  ?olga dbo:parent ?parent .
  
  FILTER(?olga = dbr:Princess_Olga_of_Greece_and_Denmark)
  
  # Find a child of that parent
  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,3,0,0,1.0,1.0,1.0
659,3,train,"Give me the native, that is an office holder, of Kingdom of Ireland.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kingdom_of_Ireland> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?officeHolder ?office ?birthPlace WHERE {
  ?officeHolder dbo:nationality dbr:Kingdom_of_Ireland .
  ?officeHolder dbo:birthPlace ?birthPlace .
  ?officeHolder dbo:positionHeld ?office .
  FILTER (?office != """")
}
```",1,2,2,1,1,3,3,71,0,0,23,0,0.0,0
161,2,train,Give me the commander in Biscay Campaign.,SELECT ?result WHERE { <http://dbpedia.org/resource/Biscay_Campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign dbo:wikiPageRedirects dbr:Biscay_Campaign .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
435,8,train,"Give me the territory administered from the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?v1 <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://dbpedia.org/ontology/capital> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?country rdfs:label ""Iceland""@en .
  ?country dbo:officialName ""Iceland"" .
  ?settlement dbo:partOf ?country ;
              a dbo:Settlement ;
              a dbo:Town .
}
```

This query does the following:
- It identifies Iceland using its label and official name.
- It selects settlements that are part of Iceland, ensuring they are classified as both `Settlement` and `Town`.",2,5,3,2,1,2,3,28,0,0,2,0,0.0,0
54,6,train,Give me the child of Narapati I of Ava.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  ?person dbo:children ?child .
  FILTER (str(?person) = ""Narapati_I_of_Ava"")
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
345,2,train,"Give me the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?player ?club WHERE {
  ?player rdf:type dbo:SoccerPlayer .
  ?player foaf:name ""Armando Heeb"" .
  
  ?player dbo:member ?club .
  ?club rdf:type dbo:SportsClub .
  ?club rdf:type dbo:Organization .
  ?club dbo:sport dbo:Soccer .
}
```",1,4,2,1,1,3,2,20,0,0,8,0,0.0,0
314,5,train,"Give me the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession WHERE {
  # Lisa Gavrić's resource
  VALUES ?lisa { dbr:Lisa_Gavrić }

  # Find her profession(s)
  ?lisa dbo:occupation ?profession .

  # Filter professions that are both an event and a societal event
  ?profession rdf:type/rdfs:subClassOf* dbo:Event .
  ?profession rdf:type/rdfs:subClassOf* dbo:SocietalEvent .
}
```",1,3,2,1,1,2,3,28,2,0,0,1.0,1.0,1.0
801,2,train,Give me the associated musical artist of Chris Taylor (music producer).,SELECT ?result WHERE { <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q123456 wdt:P106 wd:Q33999; # Chris Taylor is a music producer (P106: occupation, Q33999: musician)
  wdt:P175 ?artist. # P175: associated acts
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
64,0,train,Give me the alma mater of Jovan Hristić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jovan_Hristić> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  wd:Q123456 foaf:almaMater ?almaMater .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Jovan Hristić. You can find this by searching for his DBpedia page or using a SPARQL query to identify him.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
339,0,train,Give me the child of George I of Greece.,SELECT ?result WHERE { <http://dbpedia.org/resource/George_I_of_Greece> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:George_I_of_Greece dbo:child dbr:?child .
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
48,5,train,"Give me the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?actor WHERE {
  ?song dcterms:title ""Honor Up"" .
  ?song dbo:artist ?artist .
  ?artist a dbo:MusicalArtist ;
          foaf:name ?actor .
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
54,8,train,"Give me the child, that is an office holder and a royalty, of Thihapate of Mohnyin.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Thihapate_of_Mohnyin> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Thihapate of Mohnyin as a subject
  dbr:Thihapate_of_Mohnyin dbo:child ?child .

  # The child must be an office holder
  ?child dbo:officeHolderOf ?office .

  # The child must also be royalty
  ?child rdf:type dbo:RoyalFamily .
}
```

This query does the following:
- It starts by identifying Thihapate of Mohnyin and finds his children.
- It then checks if each child is an office holder (`dbo:officeHolderOf`).
- Finally, it ensures that the child is part of a royal family (`rdf:type dbo:RoyalFamily`).",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
184,8,train,Give me the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?partner .
  OPTIONAL { ?person dbo:child ?child . }
  FILTER (?person = dbr:Joseph_Francis_of_Austria)
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
294,4,train,Who is the architect of P. D. Houston Jr. House?,SELECT ?result WHERE { <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?architect WHERE {
  dbr:P._D._Houston_Jr._House dbo:architect ?architect .
}
```",1,1,2,1,1,2,3,28,1,0,0,1.0,1.0,1.0
161,15,train,"Give me the force, that is a societal event and an event and a military conflict, of the person decedent at Francoist Spain.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . ?result <http://dbpedia.org/ontology/commander> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?force WHERE {
  ?force a dbo:MilitaryConflict ;
         dbo:place dbr:Spain ;
         dbo:dateStart ?start ;
         dbo:dateEnd ?end .
  
  FILTER (?start >= ""1939-01-01""^^xsd:date && ?end <= ""1975-12-31""^^xsd:date)

  OPTIONAL { ?force dbo:societalEvent ?event . }
  OPTIONAL { ?force dbo:event ?generalEvent . }

  # Assuming a decedent of a person is related to an organization
  ?person dbo:deathPlace dbr:Spain ;
          dbo:decedent ?force .
  
  FILTER EXISTS {
    ?person dbo:dateOfDeath ?deathDate .
    FILTER (?deathDate >= ""1939-01-01""^^xsd:date && ?deathDate <= ""1975-12-31""^^xsd:date)
  }
}
```",2,5,3,2,1,3,3,71,0,0,29,0,0.0,0
356,1,train,Give me the team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team WHERE {
  ?person a dbo:FootballPlayer ;
          foaf:name ""Mark Briggs""@en .
  OPTIONAL { ?person dbo:playsForTeam ?team . }
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
378,15,train,Who is the person born as the birth name of Carl Pontus Gahn?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person foaf:name ?name .
  OPTIONAL { ?person dbo:birthName ""Carl Pontus Gahn""@en . }
  FILTER EXISTS { ?person dbo:birthName ""Carl Pontus Gahn""@en }
}
```",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
963,4,train,Give me the location for 21205.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/postalCode> ""21205"" . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?location WHERE {
  ?entity dbo:postalCode ""21205"" .
  ?entity dbo:location ?location .
}
```

This query searches for an entity with the postal code ""21205"" and retrieves its location.",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
666,0,train,Give me the player in Steve Bruce.,SELECT ?result WHERE { <http://dbpedia.org/resource/Steve_Bruce> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?player WHERE {
  ?manager a dbo:FootballManager ;
           foaf:name ""Steve Bruce""@en .
  
  ?team dbo:manager ?manager ;
        dbo:member ?player .

  FILTER (lang(?teamLabel) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
30,3,train,Give me the profession of Édouard Alphonse James de Rothschild.,SELECT ?result WHERE { <http://dbpedia.org/resource/Édouard_Alphonse_James_de_Rothschild> <http://dbpedia.org/property/occupation> ?result . },"```sparql
SELECT ?profession WHERE {
  wd:Q123456 wdt:P106 ?profession .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Édouard Alphonse James de Rothschild. You can find this identifier by searching his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,2,2,9,0,0,1,0,0.0,0
767,5,train,Give me the reference to George Kilbon Nash.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""George Kilbon Nash""@en . }","```sparql
SELECT ?reference WHERE {
  wd:Q123456 rdfs:label ""George Kilbon Nash""@en. # Replace Q123456 with the actual DBpedia ID of George Kilbon Nash if known.
  ?reference schema:about wd:Q123456;
              schema:isPartOf ?source.
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
232,3,train,Give me the birth name of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q12345 foaf:name ""Jon Pertwee""@en .
  OPTIONAL { wd:Q12345 schema:birthName ?birthName . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
55,10,train,"Give me the band member of the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Step 1: Identify San Francisco Symphony
  dbr:San_Francisco_Symphony a dbo:MusicalGroup .

  # Step 2: Find its band members
  ?symphonyMember dbo:bandMemberOf dbr:San_Francisco_Symphony .
  
  # Step 3: Check if the member is both a band and a group
  ?member rdfs:label ?label .
  FILTER(CONTAINS(LCASE(?label), ""band"") && CONTAINS(LCASE(?label), ""group""))
  ?symphonyMember dbo:bandMemberOf ?member .

}
```",2,4,3,2,1,2,3,28,0,0,15,0,0.0,0
696,5,train,Give me the award of Nie Rongzhen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?result . },"```sparql
SELECT ?award WHERE {
  wd:Q12345 dbo:awardReceived ?award .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Nie Rongzhen. You can find this by searching for Nie Rongzhen on DBpedia or using a SPARQL query to retrieve his QID.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
701,7,train,"Give me the commander, that is a royalty, in Battle of Perire.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. <http://dbpedia.org/resource/Battle_of_Perire> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?battle dbo:participatedInBattle ?event .
  ?event rdfs:label ""Battle of Perire""@en .
  
  ?battle dbo:commandedBy ?commander .
  ?commander a dbo:Monarch ;
             dbo:country ?country .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
314,11,train,"Give me the commander in the profession, that is an event and a societal event, of Lisa Gavrić.",SELECT ?result WHERE { <http://dbpedia.org/resource/Lisa_Gavrić> <http://dbpedia.org/property/occupation> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?commander WHERE {
  ?person rdfs:label ""Lisa Gavrić""@en .
  ?person dbo:profession ?profession .

  ?profession a dbo:Event ;
              a dbo:SocietalEvent .

  ?profession dbo:commander ?commander .
}
```

This query does the following:
- Identifies Lisa Gavrić using her label.
- Retrieves her profession.
- Filters professions that are both an event and a societal event.
- Finds the commander associated with this profession.",2,4,3,2,1,2,3,28,0,0,28,0,0.0,0
281,17,train,"Give me the profession, that is a military unit, of the professional, that is an office holder and a politician, in New Zealand Army.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/occupation> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?v1 <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/New_Zealand_Army> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?profession WHERE {
  # Find military units in the New Zealand Army
  ?unit a dbo:MilitaryUnit ;
        dbo:militaryBranch dbr:New_Zealand_Army .

  # Find individuals who are office holders or politicians
  ?person dbo:occupation ?profession ;
          dbo:officeHolderOf ?office ;
          dbo:politicalParty ?party .
  
  # Ensure the profession is related to a military unit
  ?unit dbo:hasMember ?person .

  FILTER EXISTS { ?office dbo:country dbr:New_Zealand }
}
```",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
10,2,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:location dbr:CityName .
  ?professional rdf:type dbo:Person .
}
```",1,1,2,1,1,2,3,28,0,0,39640,0,0.0,0
645,7,train,"Give me the entity in the residence, that is a country, of James Wilkes Maurice.",SELECT ?result WHERE { <http://dbpedia.org/resource/James_Wilkes_Maurice> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?person dbo:birthName ""James Wilkes Maurice""@en .
  ?person dbo:residence ?residence .
  ?residence a dbo:Place ;
             rdfs:label ?placeLabel .
  FILTER (lang(?placeLabel) = 'en')
  OPTIONAL { ?residence dbo:country ?country }
  FILTER EXISTS { ?country a dbo:Country }
}
```

This query does the following:
- It looks for an entity representing James Wilkes Maurice by his birth name.
- Retrieves the residence associated with him.
- Checks if this place is categorized as a `Place`.
- Filters to ensure that the label of the place is in English.
- Optionally retrieves the country related to this place and ensures it's classified as a `Country`.",2,3,3,2,1,3,2,20,0,0,42999,0,0.0,0
421,4,train,Give me the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q123456 wdt:P19 ?birthPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Samir Bekrić. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for entities matching his name.",1,1,2,1,1,2,3,28,0,0,2,0,0.0,0
421,8,train,Give me the band member of the awardee of [[#Awards and nominations.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . ?v1 <http://dbpedia.org/property/awards> ""[[#Awards and nominations""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?winner ?bandMember ?role WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Grammy Award""@en .
  
  ?recipient dbo:award ?award ;
             foaf:name ?winner .

  OPTIONAL {
    ?member dbo:memberOf ?band ;
            foaf:name ?bandMember ;
            dbo:role ?role .
    
    ?band dbo:member ?member .
    ?recipient dbr:Grammy_Award_winner .
  }
}
```

This query assumes:
- The award is labeled ""Grammy Award"" in English.
- Recipients of the award are linked to their bands and roles.

You may need to adjust the query based on specific awards or additional details you have. If you provide more context, I can refine this further.",2,2,3,2,1,2,3,28,0,0,582,0,0.0,0
232,2,train,Give me the native of London.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/London> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nativePlace dbr:London .
}
LIMIT 10
```

This query selects individuals (`?person`) whose native place is London. The `LIMIT 10` clause restricts the results to a manageable number, which you can adjust as needed.",1,1,2,1,1,3,3,71,0,0,8939,0,0.0,0
92,3,train,Give me the name of Nevermore (2006 film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?name WHERE {
  wd:Q2108670 rdfs:label ?name .
  FILTER (lang(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,5,train,Give me the work of --01-09.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""--01-09""^^<http://www.w3.org/2001/XMLSchema#gMonthDay> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?film ?title WHERE {
    ?film a dbo:Film .
    ?film dbo:title ?title .
    ?film dbo:releaseDate ?date .
    FILTER (YEAR(?date) = 2023 && MONTH(?date) = 1 && DAY(?date) = 9)
}
ORDER BY ?title
```

This query:
- Selects films (`dbo:Film`) with a release date on January 9, 2023.
- Retrieves the film's title using `dbo:title`.
- Filters results to match only those released on the specified date.

If you are interested in other types of works (e.g., books or music albums), you would adjust the class (`a dbo:Film`) and potentially the property if a different one is used for release dates.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
659,16,train,"Give me the war, that is an event and a military conflict, of the figure known, that is a military unit and an organisation, as 'Polish Horse'.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/nickname> ""'Polish Horse'""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  # Identify the resource for Polish Horse, which is likely related to Polish cavalry units
  ?polishHorse a dbo:MilitaryUnit ;
               rdfs:label ""Polish Horse""@en .
  
  # Find wars that are associated with this military unit
  ?polishHorse dbo:participatedIn ?war .

  FILTER (isLiteral(?war) && langMatches(lang(?war), ""EN""))
}
```

This query does the following:
- It looks for a resource labeled as ""Polish Horse"" under the class `dbo:MilitaryUnit`.
- It then finds wars (`?war`) that this military unit participated in.
- The filter ensures that the war names are returned as literals in English.",2,6,3,2,1,3,3,71,0,0,19,0,0.0,0
328,8,train,"Give me the office, that is a government agency, of Joseph Stalin.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. <http://dbpedia.org/resource/Joseph_Stalin> <http://dbpedia.org/property/office> ?result . },"```sparql
SELECT ?office WHERE {
  ?person foaf:name ""Joseph Stalin""@en .
  ?person dbo:positionHeld ?office .
  ?office a dbo:GovernmentAgency .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
427,10,train,Give me the reference to Partito Popolare Italiano and party of Romano Prodi.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Romano_Prodi> <http://dbpedia.org/ontology/party> ?result . ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel ?leaderLabel WHERE {
  # Find Partito Popolare Italiano and its details
  OPTIONAL {
    dbr:Partito_Popolare_Italiano 
      rdfs:label ?partyLabel ;
      dbo:leader ?leader .
  }
  
  # Find Romano Prodi's party affiliation
  OPTIONAL {
    dbr:Romano_Prodi 
      dbo:politicalParty ?party ;
      rdfs:label ?leaderLabel .
  }

  FILTER (lang(?partyLabel) = 'en' && lang(?leaderLabel) = 'en')
}
```

This query does the following:
- It looks for the Partito Popolare Italiano and retrieves its label.
- It checks if Romano Prodi has any political party affiliation and retrieves that information along with his label.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
981,10,train,"Who is the person born, that is a beauty queen, as the author of Kamikaze Girls?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v0 . <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?birthDate WHERE {
  ?person a dbo:Person .
  ?person dbo:occupation dbr:Author . # Assuming 'Author' is the relevant class for authors
  ?person dbo:title ""Kamikaze Girls""@en . # The title of the book
  ?person dbo:award ?beautyQueenAward . # Assuming there's a specific award or property indicating beauty queen status

  OPTIONAL { ?person dbo:birthPlace ?birthPlace }
  OPTIONAL { ?person dbo:birthDate ?birthDate }
}
```",2,3,3,2,1,3,2,20,0,0,120,0,0.0,0
328,1,train,Give me the commander in Eastern Front (World War II).,SELECT ?result WHERE { <http://dbpedia.org/resource/Eastern_Front_(World_War_II)> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?front a dbo:MilitaryFront ;
         dbo:location ?location .
  FILTER(CONTAINS(LCASE(?location), ""eastern front"") && CONTAINS(LCASE(?location), ""world war ii"")) .
  
  ?operation dbo:commander ?commander ;
             dbo:partOf ?front .

  OPTIONAL {
    ?commander rdfs:label ?name .
    FILTER(LANG(?name) = 'en')
  }
}
ORDER BY DESC(?commander)
LIMIT 1
```",1,1,2,1,1,3,3,71,0,0,63,0,0.0,0
318,0,train,Give me the person born in 1970.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthYear> ""1970""^^<http://www.w3.org/2001/XMLSchema#gYear> . }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthYear ""1970""^^xsd:gYear .
}
```",1,1,2,1,1,2,2,9,2810,0,0,1.0,1.0,1.0
404,6,train,"Who is the child, that is a royalty, of Ernest Augustus, Duke of Brunswick?","SELECT ?result WHERE { <http://dbpedia.org/resource/Ernest_Augustus,_Duke_of_Brunswick> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:parent dbr:Ernest_Augustus,_Duke_of_Brunswick.
  ?person a dbo:RoyalFamilyMember.
  ?person dbo:child ?child.
}
```",1,2,2,1,1,3,3,71,0,0,3,0,0.0,0
339,7,train,Give me the child of the child of Christian IX of Denmark.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Christian_IX_of_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  ?parent dbo:spouse|dbo:childOf db:Christian_IX_of_Denmark .
  ?parent dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```",2,2,3,2,1,3,2,20,0,0,32,0,0.0,0
492,2,train,Give me the person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:deathPlace dbr:Algiers .
  OPTIONAL { ?person rdfs:label ?name . FILTER (lang(?name) = 'en') }
}
```",1,1,2,1,1,3,3,71,122,120,0,0.5041322314049587,1.0,0.6703296703296704
959,9,train,Give me the native of Japan and member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  ?person dbo:nationality dbr:Japan .
  ?person dbo:almaMater dbr:University_of_Tsukuba .
}
```",2,2,3,1,2,3,3,71,0,1,84,0.0,0.0,0
48,1,train,Give me the band of Murda Mook.,SELECT ?result WHERE { <http://dbpedia.org/resource/Murda_Mook> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?band WHERE {
  wd:Q1234567 dbo:musicalArtist ?band .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Murda Mook. You can find this by searching for Murda Mook on DBpedia or using a SPARQL query to retrieve his QID.",1,1,2,1,1,3,2,20,0,0,10,0,0.0,0
392,6,train,Give me the region of Central European Time and entity in Italy.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region WHERE {
  ?region dbo:timeZone dbr:Central_European_Time ;
          dbo:country dbr:Italy .
}
```",2,2,3,1,2,2,3,28,513,0,0,1.0,1.0,1.0
427,6,train,Who is the father of Lamberto Andreotti?,SELECT ?result WHERE { <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  dbpedia:it:Lamberto_Andreotti dbo:father ?father .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
701,14,train,Give me the spouse of the father of Merneptah.,SELECT ?result WHERE { <http://dbpedia.org/resource/Merneptah> <http://dbpedia.org/property/father> ?v1 . ?result <http://dbpedia.org/ontology/spouse> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?spouse WHERE {
  ?merneptah dbo:father ?father .
  ?father dbo:spouse ?spouse .

  FILTER(STR(?merneptah) = ""Merneptah"")
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
404,2,train,"Give me the child of Ernest Augustus, Crown Prince of Hanover.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ernest_Augustus,_Crown_Prince_of_Hanover> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  dbr:Ernest_Augustus,_Crown_Prince_of_Hanover dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
48,8,train,"Give me the band of the actor, that is a musical artist, of Honor Up.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/Honor_Up> <http://dbpedia.org/property/starring> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person rdfs:label ""Honor Up""@en .
  FILTER (LANG(?person) = 'en') .

  # Assuming the person is an actor and a musical artist
  ?person dbo:occupation dbr:Actor ;
          dbo:occupation dbr:Musical_artist .

  # Find the band associated with this person
  ?band dbo:member ?person .
}
```",2,3,3,2,1,3,2,20,0,0,10,0,0.0,0
184,14,train,Give me the parent of the child of Archduke Joseph Francis of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_Francis_of_Austria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Archduke Joseph Francis of Austria
  ?archduke a dbo:Person ;
            rdfs:label ""Archduke Joseph Francis of Austria""@en .
  
  # Step 2: Find his children
  ?child dbo:parent ?archduke .

  # Step 3: For each child, find their parents
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,3,71,2,0,0,1.0,1.0,1.0
318,6,train,Give me the professional in the profession of Robert Xavier Rodriguez.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ?v1 . <http://dbpedia.org/resource/Robert_Xavier_Rodriguez> <http://dbpedia.org/property/occupation> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?professional WHERE {
  # Step 1: Identify Robert Xavier Rodriguez and his profession(s)
  ?robert a dbo:Person ;
          foaf:name ""Robert Xavier Rodríguez""@en .
  
  ?robert dbo:profession ?profession .

  # Step 2: Find other professionals with the same profession
  ?professional a dbo:Person ;
                dbo:profession ?profession .
  
  FILTER(?professional != ?robert) # Exclude Robert himself from results
}
ORDER BY ?professional",2,2,3,2,1,2,2,9,0,0,1942,0,0.0,0
996,5,train,Give me the award of Ekrem Akurgal.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ekrem_Akurgal> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Ekrem_Akurgal }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,4,0,1,1.0,0.8,0.888888888888889
617,10,train,"Give me the father, that is a royalty, of the reference, that is a royalty, to Richeza of Poland.","SELECT ?result WHERE { ?v0 <http://xmlns.com/foaf/0.1/name> ""Richeza of Poland""@en . ?v0 <http://dbpedia.org/property/father> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father ?reference
WHERE {
  # Richeza of Poland and her father
  dbr:Richeza_of_Poland dbo:parent ?father .
  
  # Ensure the father is royalty
  ?father a dbo:Monarch .

  # Find a reference who is royalty and related to Richeza
  ?reference dbo:parent ?father .
  ?reference a dbo:Monarch .
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
281,9,train,"Give me the entity in Colony of New Zealand and war of Beauchamp Seymour, 1st Baron Alcester.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . <http://dbpedia.org/resource/Beauchamp_Seymour,_1st_Baron_Alcester> <http://dbpedia.org/ontology/battle> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:wikiPageWikiLink dbr:Colony_of_New_Zealand .
  ?entity dbo:wikiPageWikiLink dbr:War_of_Beauchamp_Seymour_1st_Baron_Alcester .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
339,5,train,Who is the child of Grand Duchess Elena Vladimirovna of Russia?,SELECT ?result WHERE { <http://dbpedia.org/resource/Grand_Duchess_Elena_Vladimirovna_of_Russia> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Grand Duchess_Elena_Vladimirovna_of_Russia"")
  ?person dbo:child ?child .
}
```

This query assumes that the relationship between spouses and children is represented in DBpedia using `dbo:spouse` for spouse relationships and `dbo:child` for child relationships. It filters to find individuals who are listed as having Grand Duchess Elena Vladimirovna of Russia as a spouse, then selects their children.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
801,3,train,Give me the true self of The Shadow.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/givenName> ""The Shadow""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?subject ?label WHERE {
  VALUES ?resource { dbr:The_Shadow }
  ?resource rdfs:label ?label .
  OPTIONAL { ?resource dbo:wikiPageRedirects ?redirect . FILTER(!bound(?redirect)) }
  ?resource dbo:mainSubject ?subject .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
783,6,train,Give me the band member of Ebony Reigns and associated musical artist of Appietus.,SELECT ?result WHERE { <http://dbpedia.org/resource/Appietus> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember ?associatedArtist
WHERE {
  # Find band member of Ebony Reigns
  { 
    ?ebony a dbo:MusicalArtist ;
           dbp:name ""Ebony Reigns"" .
    ?ebony dbo:bandMember ?bandMember .
  }
  
  UNION
  
  # Find associated musical artist of Appietus
  {
    ?appietus a dbo:MusicalArtist ;
              dbp:name ""Appietus"" .
    ?appietus dbo:associatedMusicalArtist ?associatedArtist .
  }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
696,1,train,Give me the landmark at elevation of 50.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ""50""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?landmark ?name WHERE {
  ?landmark a dbo:Landmark .
  OPTIONAL { ?landmark rdfs:label ?name . FILTER (lang(?name) = 'en') }
  ?landmark dbp:elevation ?elevation .
  FILTER (?elevation = ""50""^^xsd:integer)
}
```",1,1,2,1,1,3,2,20,0,0,599,0,0.0,0
391,15,train,"Give me the figure known as the nick name of Jackson, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ?v1 . <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  ?city dbo:name ""Jackson, Tennessee""@en .
  OPTIONAL { ?city dbo:commonName ?nickname . }
}
```",2,2,3,2,1,3,3,71,0,0,4,0,0.0,0
184,9,train,Give me the child of Archduke Joseph August of Austria and parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Archduke Joseph August of Austria
  ?archduke a dbo:Person ;
            foaf:name ""Joseph August, Archduke of Austria"" ;
            dbo:spouse ?spouse .

  # Find the child of Archduke Joseph August
  ?archduke dbo:child ?child .
  
  # Géza von Habsburg
  ?geza a dbo:Person ;
        foaf:name ""Géza von Habsburg"" ;
        dbo:parent ?child .

}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
44,6,train,"Give me the band member of the associated musical artist, that is a group and an organisation, of Queensrÿche.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . <http://dbpedia.org/resource/Queensrÿche> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member WHERE {
  # Identify Queensrÿche as both an organization and a musical artist group
  dbr:Queensr%C3%BDche 
    dbo:musicalArtistGroup dbr:Queensr%C3%BDche ;
    dbo:organization dbr:Queensr%C3%BDche .

  # Find members of the band
  ?member dbo:bandMemberOf dbr:Queensr%C3%BDche .
}
```",2,4,3,2,1,2,2,9,0,0,13,0,0.0,0
485,7,train,Give me the entity in United Kingdom and entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?ukEntity ?nottinghamshireEntity WHERE {
  ?ukEntity dbo:country dbr:United_Kingdom .
  ?nottinghamshireEntity dbo:locatedIn dbr:Nottinghamshire .
}
```",2,2,3,1,2,2,3,28,0,0,357,0,0.0,0
747,14,train,Give me the band of the person born as Tracey Elizabeth McSween.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?band WHERE {
  ?person foaf:name ""Tracey Elizabeth McSween""@en .
  OPTIONAL { ?person dbo:birthName ""Tracey Elizabeth McSween""@en . }
  ?person dbo:musicalBand ?band .
}
```",2,2,3,2,1,3,3,71,0,0,8,0,0.0,0
314,8,train,Give me the person deceased at the headquarter of House of Sombrerete.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> ?v1 . <http://dbpedia.org/resource/House_of_Sombrerete> <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathDate WHERE {
  ?house dbo:location dbr:Headquarters_of_the_House_of_Sombrerete .
  
  ?event dbo:place dbr:Headquarters_of_the_House_of_Sombrerete ;
         a dbo:Death .

  ?person dbo:death ?event .
  ?event dbo:date ?deathDate .
}
```",2,2,3,2,1,2,3,28,0,0,34,0,0.0,0
328,15,train,Give me the award of the commander in Volcano and Ryukyu Islands campaign.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/awards> ?result . <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  # Find the resource for the Volcano and Ryukyu Islands campaign
  ?campaign rdfs:label ""Volcano and Ryukyu Islands campaign""@en .
  
  # Look for awards associated with this campaign
  ?campaign dbo:awardedBy ?award .
}
```

This query does the following:
- It searches for a DBpedia resource labeled as ""Volcano and Ryukyu Islands campaign.""
- It then looks for any awards (`dbo:awardedBy`) related to that campaign.

Please note that this query assumes there is a direct relationship between campaigns and awards in DBpedia, which might not always be the case. If no results are found, you may need to explore related entities or refine your search criteria based on available data.",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
314,9,train,Give me the commander in Spanish Civil War and awardee of 30.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?name ?awardYear WHERE {
  # Find a person who was a commander in the Spanish Civil War
  ?person dbo:occupation dbr:Commander_in_the_Spanish_Civil_War .
  
  # Ensure this person is also a Nobel laureate
  ?person dbo:nobelPrizeAwardedFor ?award .

  # Get the name of the person
  ?person rdfs:label ?name .
  
  # Filter for English labels
  FILTER (lang(?name) = 'en')

  # Get the year of the award
  ?award dbp:year ?awardYear .

  # Optionally, filter by a specific Nobel category if needed
  # ?award dbo:nobelPrizeCategory dbr:Nobel_Prize_in_Peace .
}
ORDER BY ?person",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
328,6,train,Give me the force of Ferenc Szálasi.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?occupation WHERE {
  dbr:Ferenc_Szálasi dbo:occupation ?occupation .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
827,6,train,"Give me the father of William Ernest, Grand Duke of Saxe-Weimar-Eisenach and child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/William_Ernest,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?father WHERE {
  # Identify William Ernest, Grand Duke of Saxe-Weimar-Eisenach
  ?williamErnest a dbo:Person ;
                foaf:name ""William Ernest, Grand Duke of Saxe-Weimar-Eisenach""@en ;
                dbo:childOf ?father .

  # Ensure the father is also a child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach
  ?charlesAlexander a dbo:Person ;
                   foaf:name ""Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach""@en .
  
  ?father dbo:childOf ?charlesAlexander .
}
```

This query does the following:
1. Identifies William Ernest by his name and retrieves his father.
2. Ensures that this father is also a child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
767,0,train,Give me the entity in Baden-Württemberg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Baden-Württemberg .
}
```",1,1,2,1,1,3,3,71,0,201,60,0.0,0.0,0
161,7,train,Who is the figure known as El Director?,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/nick> ""El Director""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person rdfs:label ""El Director""@en .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
10,3,train,"Give me the person born, that is an artist, as Matt Colton.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Matt Colton""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Matt Colton""@en .
  ?person a dbo:Artist .
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
345,10,train,"Who is the person born, that is a soccer player and a soccer manager, on the birth date of Eiður Guðjohnsen?",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthDate> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?person WHERE {
  # Get Eiður Guðjohnsen's birthdate
  dbr:Eiður_Guðjohnsen dbo:birthDate ?birthDate .

  # Find persons with the same birthdate who are both soccer players and managers
  ?person dbo:birthDate ?birthDate .
  ?person dbo:sportsTeam ?team .
  ?team a dbo:SoccerClub .
  
  OPTIONAL { 
    ?person dbo:occupation dbr:Soccer_player .
  }
  OPTIONAL {
    ?person dbo:occupation dbr:Soccer_manager .
  }

  FILTER EXISTS { ?person dbo:occupation dbr:Soccer_player . }
  FILTER EXISTS { ?person dbo:occupation dbr:Soccer_manager . }
}
```",2,4,3,2,1,3,2,20,0,0,3,0,0.0,0
184,1,train,Give me the child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?partner .
  OPTIONAL { ?person dbo:child ?child . }
  FILTER (?person = dbr:Archduke_Joseph_August_of_Austria)
}
```",1,1,2,1,1,3,3,71,1,0,0,1.0,1.0,1.0
666,4,train,"Give me the reference, that is an organisation and a soccer club and a sports club, to England.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://xmlns.com/foaf/0.1/name> ""England""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?club WHERE {
  ?club a dbo:SoccerClub .
  ?club a dbo:SportsClub .
  ?club a dbo:Organization .
  OPTIONAL { ?club dbo:country dbr:England . }
  OPTIONAL { ?club dbp:location dbr:England . }
}
```

This query selects clubs that are instances of `SoccerClub`, `SportsClub`, and `Organization` and have an association with England either through the `dbo:country` or `dbp:location` properties.",1,4,2,1,1,3,2,20,0,0,4,0,0.0,0
712,6,train,Give me the resting place of Nina Onilova and capital of South Russia (1919–1920).,SELECT ?result WHERE { <http://dbpedia.org/resource/South_Russia_(1919–1920)> <http://dbpedia.org/ontology/capital> ?result . <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  ?person a dbo:Person ;
          foaf:name ""Nina Onilova""@en .
  OPTIONAL { ?person dbo:deathPlace ?burialPlace . }
}

SELECT ?capital WHERE {
  ?entity a dbo:Country ;
          rdfs:label ?name .
  FILTER(CONTAINS(LCASE(?name), ""south russia"") && 
         CONTAINS(LCASE(?name), ""1919-1920""))
  OPTIONAL { ?entity dbo:capital ?capital . }
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
16,3,train,Give me the birth name of Ted McGinley.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 foaf:name ""Ted McGinley""@en .
  OPTIONAL { wd:Q123456 schema:givenName ?givenName . }
  OPTIONAL { wd:Q123456 schema:familyName ?familyName . }
  BIND(CONCAT(?givenName, "" "", ?familyName) AS ?birthName)
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
528,4,train,Give me the military force of Battle of Pisagua.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Pisagua> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force ?country WHERE {
  VALUES ?battle { dbr:Battle_of_Pisagua }
  
  ?battle dbo:militaryForce ?force .
  OPTIONAL { ?force dbo:country ?country . }
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
838,9,train,"Give me the band member, that is an artist and a musical artist, of the band, that is a band and a group, of Žika Jelić.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Žika_Jelić> . },"```sparql
SELECT ?bandMember WHERE {
  ?band dbo:member ?bandMember .
  ?bandMember dbo:occupation dbp:musician .
  ?bandMember dbo:occupation dbp:singer .
  ?band dbo:member Žika Jelić .
  ?band a dbo:Band ;
        a dbo:Group .
}
```",2,6,3,2,1,3,2,20,0,0,4,0,0.0,0
801,14,train,"Give me the associated musical artist of the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?v1 . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  # Find the book ""40 Dayz & 40 Nightz""
  ?book a dbo:Book ;
        rdfs:label ""40 Dayz & 40 Nightz""@en .
  
  # Identify its author
  ?book dbo:author ?person .

  # Check if this person is also a musical artist and an artist
  ?person dbo:musicalArtist ?artist ;
          rdf:type dbo:Artist .

  FILTER (lang(?bookLabel) = 'en')
}
```",2,4,3,2,1,3,3,71,0,0,50,0,0.0,0
232,1,train,Give me the actor of Dog Soldiers (film).,SELECT ?result WHERE { <http://dbpedia.org/resource/Dog_Soldiers_(film)> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?movie dbo:genre dbc:British_horror_films ;
         foaf:name ""Dog Soldiers"" .
  ?movie dbo:starring ?actor .
}
```",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
92,15,train,"Give me the reference, that is an artist, to the name of Nevermore (2006 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Nevermore_(2006_film)> <http://xmlns.com/foaf/0.1/name> ?v1 . ?result <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  ?film a dbo:Film ;
        rdfs:label ""Nevermore (2006 film)""@en .
  
  OPTIONAL { ?film dbo:starring ?actor . }
  OPTIONAL { ?film dbo:director ?director . }

  BIND(COALESCE(?actor, ?director) AS ?artist)
}
```",2,3,3,2,1,3,3,71,0,4,1,0.0,0.0,0
312,5,train,"Give me the entity in the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?v1 <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . ?result <http://dbpedia.org/ontology/province> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?entity WHERE {
  ?entity a dbo:AdministrativeTerritory ;
         dbo:country dbr:Italy ;
         dbo:state dbr:Italy ;
         dbo:settlementType ?settlementType .
  
  FILTER (?settlementType IN (dbo:CivilParish, dbo:Municipality, dbo:City, dbo:Region))
  
  OPTIONAL { ?entity dbp:politicalParty dbr:Democratic_Party_(Italy) . }
  
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language ""it"" .
  }
}
```

This query does the following:
- Selects entities that are administrative territories in Italy.
- Filters these entities to include only those classified as settlements, regions, or states.
- Optionally checks if they have a political party association with the Democratic Party of Italy.
- Uses the `wikibase:label` service to ensure labels are in Italian.",2,6,3,2,1,2,2,9,0,0,587,0,0.0,0
177,2,train,Give me the residence of Alexander Gamelin.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alexander_Gamelin> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?person a dbo:Person ;
          foaf:name ""Alexander Gamelin""@en .
  OPTIONAL { ?person dbo:residenceLocation ?residence . }
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
959,16,train,"Give me the residence, that is a country, of the leader, that is a politician, of 2010 Japanese House of Councillors election.",SELECT ?result WHERE { <http://dbpedia.org/resource/2010_Japanese_House_of_Councillors_election> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/property/residence> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residenceCountry WHERE {
  # Identify Shintaro Ishihara as a politician involved in the 2010 election
  dbr:Shintaro_Ishihara dbo:occupation dbr:Politician .
  
  # Find his residence
  OPTIONAL { 
    dbr:Shintaro_Ishihara dbo:residence ?residence .
    
    # Get the country of the residence
    ?residence dbo:country ?residenceCountry .
  }
}
```

This query does the following:
- Identifies Shintaro Ishihara as a politician.
- Attempts to find his place of residence.
- Retrieves the country associated with that residence.",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
182,3,train,Give me the author of 2019 Sri Lanka Easter bombings.,SELECT ?result WHERE { <http://dbpedia.org/resource/2019_Sri_Lanka_Easter_bombings> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?perpetrator WHERE {
  ?event dbo:location dbr:Sri_Lanka .
  ?event dbo:date ""2019-04-21""^^xsd:date .
  ?event dbo:eventType dbr:Bombing .
  ?event dbo:perpetrator ?perpetrator .
}
```

This query attempts to find the perpetrator of an event classified as a bombing that occurred in Sri Lanka on April 21, 2019. However, due to the nature of DBpedia and its sources, this information might not be available or accurately represented.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
10,7,train,Give me the professional in  and associated musical artist of Matt Colton.,"SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professionalRole ?associatedArtist WHERE {
  VALUES ?person { dbr:Matt_Colton }
  
  # Find the professional role of Matt Colton
  OPTIONAL {
    ?person dbo:profession ?professionalRole .
  }

  # Find associated musical artists through works or collaborations
  OPTIONAL {
    ?work dbo:producer ?person ;
          dbo:musicalArtist ?associatedArtist .
  }
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
696,3,train,Who is the member of Dropkick Murphys?,SELECT ?result WHERE { <http://dbpedia.org/resource/Dropkick_Murphys> <http://dbpedia.org/ontology/bandMember> ?result . },"```sparql
SELECT ?member WHERE {
  ?band rdf:type dbo:MusicalGroup .
  ?band rdfs:label ""Dropkick Murphys""@en .
  ?band dbo:member ?member .
  ?member rdf:type dbo:Person .
}
```",1,1,2,1,1,3,2,20,0,0,6,0,0.0,0
285,3,train,Who is the child of Tina Onassis Niarchos?,SELECT ?result WHERE { <http://dbpedia.org/resource/Tina_Onassis_Niarchos> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?tina .
  ?tina foaf:name ""Tina Onassis Niarchos""@en ;
        dbo:spouse ?person .
  OPTIONAL { ?person dbo:child ?child . }
  FILTER(?person = dbr:Tina_Onassis_Niarchos)
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
617,13,train,Give me the spouse of the child of Antiochus III the Great.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/spouse> ?result . <http://dbpedia.org/resource/Antiochus_III_the_Great> <http://dbpedia.org/ontology/child> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?spouse WHERE {
  # Find Antiochus III the Great
  dbr:Antiochus_III_the_Great dbo:child ?child .
  
  # Find the spouse of each child
  ?child dbo:spouse ?spouse .
}
```",2,2,3,2,1,3,3,71,5,0,0,1.0,1.0,1.0
994,7,train,Give me the persona of Don Dokken.,SELECT ?result WHERE { <http://dbpedia.org/resource/Don_Dokken> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?value WHERE {
  VALUES ?subject { dbr:Don_Dokken }
  
  ?subject ?property ?value .
  
  FILTER (
    regex(str(?property), ""^(foaf|dbo|dcterms):"", ""i"") &&
    !regex(str(?value), ""^http://dbpedia.org/resource/"", ""i"")
  )
}
ORDER BY ?property
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
754,0,train,Give me the parent of Loe Thai.,SELECT ?result WHERE { <http://dbpedia.org/resource/Loe_Thai> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parent WHERE {
  ?loethai a dbo:Place .
  ?loethai rdfs:label ""Loe Thai""@en .
  OPTIONAL { ?loethai dbo:partOf+ ?parent . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
77,2,train,Give me the award of Maxim Grigorievich Vlasov.,SELECT ?result WHERE { <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  VALUES ?person { dbr:Maxim_Grigorievich_Vlasov }
  ?person dbo:award ?award .
}
```",1,1,2,1,1,3,2,20,8,0,0,1.0,1.0,1.0
314,2,train,Give me the commander in Spanish Civil War.,SELECT ?result WHERE { <http://dbpedia.org/resource/Spanish_Civil_War> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander ?name WHERE {
  ?commander a dbo:MilitaryPerson .
  ?commander dbo:nationality dbr:Spain ;
            dbo:occupation dbr:Military_officer .
  OPTIONAL { ?commander foaf:name ?name . }
  FILTER EXISTS {
    ?event dbo:location dbr:Spanish_Civil_War ;
           dbo:participant ?commander .
  }
}
ORDER BY ?name
LIMIT 10
```",1,1,2,1,1,2,3,28,0,0,28,0,0.0,0
959,1,train,Give me the native of Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Japan> . },"```sparql
SELECT ?native WHERE {
  ?native dbo:nationality dbr:Japan .
}
```",1,1,2,1,1,3,3,71,316,841,8103,0.2731201382886776,0.03753414894880627,0.06599832915622389
534,3,train,"Who is the child, that is a politician and an office holder, of Desmond FitzGerald (politician)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Desmond_FitzGerald_(politician)> <http://dbpedia.org/ontology/child> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  # Identify Desmond FitzGerald (politician)
  ?desmond a dbo:Politician ;
           foaf:name ""Desmond FitzGerald"" .

  # Find children of Desmond FitzGerald
  ?desmond dbo:spouse ?parent .
  ?parent dbo:child ?child .

  # Filter children who are politicians and office holders
  ?child a dbo:Politician ;
         dbo:officeHolder ?office .
}
```

This query assumes that the relationships such as `dbo:spouse`, `dbo:child`, and `dbo:officeHolder` are correctly modeled in DBpedia. Adjustments might be necessary based on the actual schema used by DBpedia.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
365,6,train,Give me the reference to the real name of The Blasters.,SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ?v1 . <http://dbpedia.org/resource/The_Blasters> <http://xmlns.com/foaf/0.1/name> ?v1 . },"```sparql
SELECT ?realName WHERE {
  wd:Q1234568 foaf:name ""The Blasters""@en .
  wd:Q1234568 schema:alternateName ?realName .
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia resource identifier for The Blasters if it is known. You may need to look up this identifier in DBpedia or another reliable source.",2,2,3,2,1,2,2,9,0,0,1,0,0.0,0
360,3,train,"Give me the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?result <http://dbpedia.org/property/author> ""Dave Flett""@en . }","```sparql
SELECT ?album WHERE {
  ?person dbo:birthName ""Dave Flett"" .
  ?person foaf:name ?name .
  FILTER(CONTAINS(LCASE(?name), ""dave flett""))
  ?work dbo:artist ?person ;
        a dbo:MusicAlbum .
  ?work rdfs:label ?album .
  FILTER(LANGMATCHES(LANG(?album), ""en""))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
54,7,train,Give me the reference to Thihapate of Mohnyin.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Thihapate of Mohnyin""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?title WHERE {
  ?person a dbo:Monarch ;
          rdfs:label ""Thihapate of Mohnyin""@en .
  
  OPTIONAL { 
    ?person dbo:title ?title .
  }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
356,10,train,"Give me the native, that is a soccer player and a soccer manager, of the birth place, that is English and a settlement, of Gary Williams (footballer, born 1960).","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>. ?v0 <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Gary_Williams_(footballer,_born_1960)> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>. ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?native WHERE {
  # Step 1: Identify Gary Williams and his birthplace
  dbr:Gary_Williams_(footballer,_born_1960) dbo:nationality dbr:England ;
                                         dbo:birthPlace ?birthPlace .

  # Step 2: Ensure the birthplace is an English settlement
  ?birthPlace a dbo:Settlement ;
              dbp:country dbr:England .

  # Step 3: Find a native of this place who is both a soccer player and a soccer manager
  ?native dbo:nationality dbr:England ;
          dbo:birthPlace ?birthPlace ;
          dbo:occupation ?occupation1, ?occupation2 .
  
  FILTER (?occupation1 = dbr:Soccer_player && ?occupation2 = dbr:Soccer_manager)
}
```",2,6,3,2,1,3,2,20,0,0,17,0,0.0,0
429,1,train,Give me the country of 77th Ohio Infantry Regiment.,SELECT ?result WHERE { <http://dbpedia.org/resource/77th_Ohio_Infantry_Regiment> <http://dbpedia.org/ontology/country> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  ?regiment a dbo:MilitaryUnit ;
            rdfs:label ""77th Ohio Infantry Regiment""@en .
  OPTIONAL { ?regiment dbo:country ?country . }
}
```

This query does the following:
- It looks for an entity that is of type `dbo:MilitaryUnit` and has the label ""77th Ohio Infantry Regiment"" in English.
- It then attempts to find a property `dbo:country` associated with this regiment, which would indicate the country it belongs to.",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
48,2,train,"Give me the work, that is a work, of Shellback (record producer).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Shellback_(record_producer)> . },"```sparql
SELECT ?work WHERE {
  wd:Q2105180 dbo:worksForCreativeWork ?work .
}
```",1,2,2,1,1,3,2,20,0,0,57,0,0.0,0
281,5,train,"Who is the leader, that is a politician, of 1962 New South Wales state election?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader WHERE {
  ?election dbo:country dbr:Australia ;
            dbo:stateOrProvince dbr:New_South_Wales ;
            dbo:date ""1962-03-10""^^xsd:date ;
            dbo:winner ?party .
  
  ?party dbo:leader ?leader .

  ?leader a dbo:Politician .
}
```

This query does the following:
- It identifies an election (`?election`) that took place in New South Wales, Australia, on March 10, 1962.
- It retrieves the winning party of this election and its leader.
- It ensures that the leader is classified as a `dbo:Politician`.",1,2,2,1,1,3,3,71,0,0,2,0,0.0,0
281,2,train,Give me the war of New Zealand Army.,SELECT ?result WHERE { <http://dbpedia.org/resource/New_Zealand_Army> <http://dbpedia.org/ontology/battle> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?army a dbo:MilitaryUnit .
  ?army rdfs:label ""New Zealand Army""@en .

  ?conflict dbo:militaryParticipant ?army .
  ?conflict a dbo:MilitaryConflict .

  BIND(IRI(CONCAT(""http://dbpedia.org/resource/"", REPLACE(LCASE(?conflict), "" "", ""_""))) AS ?war)
}
```",1,1,2,1,1,3,3,71,0,0,14,0,0.0,0
179,4,train,Who is the parent of Vajiralongkorn?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          dbp:name ""Vajiralongkorn""@en .
  OPTIONAL { ?person dbo:father ?father . }
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
328,16,train,Give me the force of the person decedent at Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v1 . ?v1 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?description WHERE {
  ?person a dbo:Person .
  ?person rdfs:label ?name .
  OPTIONAL { ?person dbo:description ?description . }
  FILTER (CONTAINS(LCASE(?name), ""arpád toma"") || CONTAINS(LCASE(?description), ""budapest""))
}
```",2,2,3,2,1,3,3,71,0,0,23,0,0.0,0
64,5,train,"Give me the alma mater of the person decedent, that is a writer, at Sremska Kamenica.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. ?v0 <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Sremska_Kamenica> . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?almaMater WHERE {
  ?person a dbo:Writer ;
          dbo:deathPlace dbr:Sremska_Kamenica ;
          dbo:almaMater ?almaMater .
}
```

This query does the following:
- Uses `dbo:Writer` to filter individuals by their occupation as writers.
- Filters those who died in Sremska Kamenica using `dbo:deathPlace`.
- Retrieves the alma mater of these individuals with `dbo:almaMater`.",2,3,3,2,1,2,2,9,0,0,1,0,0.0,0
767,15,train,"Give me the administration, that is a settlement, of the writer of Where It's At (Dustin Lynch album).",SELECT ?result WHERE { <http://dbpedia.org/resource/Where_It's_At_(Dustin_Lynch_album)> <http://dbpedia.org/property/writer> ?v1 . ?result <http://dbpedia.org/property/leaderParty> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administration WHERE {
  # Find the song ""Where It's At""
  ?song dbo:title ""Where It's At"" .
  
  # Get the writers of the song
  ?song dbo:lyricist ?writer .

  # Find the settlement associated with the writer
  ?writer dbo:birthPlace ?settlement .

  # Retrieve the administration of the settlement
  ?settlement dbo:administrativeUnit ?administration .
}
```",2,3,3,2,1,3,3,71,0,0,31,0,0.0,0
251,5,train,Give me the author of The Twelve Abbots of Challant.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Twelve_Abbots_of_Challant> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dct:subject dbc:The_Twelve_Abbots_of_Challant .
  ?book dbo:author ?author .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
314,1,train,Give me the awardee of 30.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ""30""^^<http://www.w3.org/2001/XMLSchema#integer> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:number ""30"" .
  ?award dbo:recipient ?awardee .
}
```",1,1,2,1,1,2,3,28,0,0,951,0,0.0,0
184,12,train,Give me the parent of Archduchess Ilona of Austria and child of Archduke Joseph August of Austria.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Archduke_Joseph_August_of_Austria> . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Archduchess_Ilona_of_Austria> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person WHERE {
  # Find the parent of Archduchess Ilona of Austria
  ?parent dbo:child dbr:Archduchess_Ilona_of_Austria .
  
  # Ensure this person is also a child of Archduke Joseph August of Austria
  ?parent dbo:parent dbr:Archduke_Joseph_August_of_Austria .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
328,5,train,Who is the person decedent at Budapest?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathDate WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Budapest .
  OPTIONAL { ?person dbo:dateOfDeath ?deathDate . }
}
ORDER BY ?deathDate
```",1,1,2,1,1,3,3,71,1147,0,0,1.0,1.0,1.0
184,11,train,Give me the parent of the native of Budapest.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?entity ?parentClass
WHERE {
  ?entity dbo:birthPlace dbr:Budapest .
  ?entity rdf:type ?class .
  ?class rdfs:subClassOf ?parentClass .
}
```",2,2,3,2,1,3,3,71,7,2774,12,0.0025170801869830997,0.3684210526315789,0.005
617,8,train,Who is the child of Antiochus (son of Antiochus III the Great)?,SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/child> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?parent a dbo:Person .
  ?parent foaf:name ""Antiochus""@en .
  ?parent dbo:father dbr:Antiochus_III_the_Great .
  ?parent dbo:child ?child .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,11,train,"Give me the person decedent at the work of US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> ""US Assistant Secretary of State for African Affairs, Joseph C. Satterthwaite""@en . ?result <http://dbpedia.org/ontology/deathPlace> ?v0 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?successor WHERE {
  ?satterthwaite a dbo:Person ;
                 foaf:name ""Joseph C. Satterthwaite""@en .
  
  ?position dbo:officeHolder ?satterthwaite ;
            rdfs:label ?positionLabel .

  FILTER(CONTAINS(LCASE(?positionLabel), ""us assistant secretary of state for african affairs""))

  OPTIONAL {
    ?position dbo:successor ?successor .
  }
}
```",2,2,3,2,1,3,3,71,0,0,30,0,0.0,0
645,2,train,Give me the commander in Battle of Diamond Rock.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle dbo:wikiPageID ""Battle_of_Diamond_Rock"" .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
16,1,train,Give me the professional in Actress.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
SELECT ?actor WHERE {
  ?actor a dbo:Actor .
  OPTIONAL { ?actor dbo:profession dbr/Actress . }
}
```",1,1,2,1,1,3,3,71,0,0,19241,0,0.0,0
498,1,train,Give me the band of Will Rahmer.,SELECT ?result WHERE { <http://dbpedia.org/resource/Will_Rahmer> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person dbo:name ""Will Rahmer""@en .
  ?person dbo:memberOf ?band .
}
```",1,1,2,1,1,2,2,9,0,0,2,0,0.0,0
747,7,train,Give me the persona of Shèna.,SELECT ?result WHERE { <http://dbpedia.org/resource/Shèna> <http://xmlns.com/foaf/0.1/givenName> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?hasValue WHERE {
  VALUES ?resource { dbr:Shèna }
  ?resource ?property ?hasValue .
}
```",1,1,2,1,1,3,3,71,1,135,0,0.007352941176470588,1.0,0.014598540145985401
915,6,train,"Give me the father of Lizzie Spaulding and resident of Springfield, Illinois.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Springfield,_Illinois> . <http://dbpedia.org/resource/Lizzie_Spaulding> <http://dbpedia.org/property/father> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?lizzie dbo:birthName ""Lizzie Spaulding"" .
  ?lizzie dbo:father ?father .
  ?father dbp:residence ?residence .
  FILTER(CONTAINS(LCASE(?residence), ""springfield, illinois""))
}
```

This query does the following:
- It looks for a resource representing Lizzie Spaulding using her birth name.
- It finds the father of this person using the `dbo:father` property.
- It checks if the residence of this father contains ""Springfield, Illinois"" (case-insensitive).",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
161,0,train,Give me the military force of Rif War.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Rif_War> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  VALUES ?rifWar { dbr:Rif_War }
  
  ?rifWar dbo:militaryParticipant ?participant .
  ?participant dbo:militaryForce ?militaryForce .
}
```",1,1,2,1,1,3,3,71,0,0,56,0,0.0,0
179,2,train,"Who is the child, that is a royalty, of Nakkhatra Mangala?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Nakkhatra_Mangala> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?child WHERE {
  ?person dbo:name ""Nakkhatra Mangala""@en .
  ?person dbo:child ?child .
  ?child rdf:type ?type .
  FILTER (
    ?type = dbo:Monarch ||
    ?type = dbo:RoyalFamilyMember
  )
}
```

This query does the following:
- Uses `dbo:name` to find the person named ""Nakkhatra Mangala"".
- Finds any children of this person using `dbo:child`.
- Checks if these children are of a type indicating royalty, such as `dbo:Monarch` or `dbo:RoyalFamilyMember`.",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
356,0,train,Give me the player in 2015 Sacramento Republic FC season.,SELECT ?result WHERE { <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?name WHERE {
  ?team dbo:sportTeamMember ?player .
  ?player a dbo:FootballPlayer ;
          foaf:name ?name .
  
  ?team foaf:name ""Sacramento Republic FC"" .
  FILTER(YEAR(?season) = 2015)
}
```

This query assumes that there is structured data available in DBpedia for the Sacramento Republic FC and its players, which might not be comprehensive. The `FILTER` clause attempts to restrict results to the year 2015, but this relies on the presence of a `?season` property or similar temporal information.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
54,3,train,Give me the child of Thinkhaya of Pagan.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thinkhaya_of_Pagan> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?king dbo:spouse ?spouse .
  ?king dbo:child ?child .
  FILTER (?king = dbr:Thihathu)
}
```",1,1,2,1,1,3,3,71,0,6,3,0.0,0.0,0
9,4,train,"Who is the mayor, that is a politician, of Northern Ireland Forum?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor WHERE {
  ?forum dbo:member ?person .
  ?person dbo:position ?role .
  FILTER(CONTAINS(LCASE(?role), ""mayor"") && CONTAINS(LCASE(?person), ""northern ireland forum""))
  ?person a dbo:Politician .
}
```

This query attempts to find individuals who are members of the Northern Ireland Forum and hold a position that includes the term ""mayor,"" while also being classified as a politician.",1,2,2,1,1,3,3,71,0,0,10,0,0.0,0
626,4,train,Who is the military force of Battle of Borodino?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_Borodino> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?force WHERE {
  ?battle dbo:participatedInMilitaryConflict ?conflict .
  ?battle rdfs:label ""Battle of Borodino""@en .
  ?conflict dbo:combatant ?force .
}
```",1,1,2,1,1,3,2,20,0,0,52,0,0.0,0
10,9,train,Give me the professional in  and band member of Luke Vibert.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?profession ?band 
WHERE {
  VALUES ?lukeVibert { dbr:Luke_Vibert }
  
  ?lukeVibert dbo:occupation ?profession .
  OPTIONAL { ?lukeVibert dbo:memberOfBand ?band . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
485,4,train,"Who is the awardee, that is a writer and a poet, of Eric Gregory Award?",SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Eric_Gregory_Award> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Poet>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:recipient ?person .
  ?person dbo:occupation ?occupation1 .
  ?person dbo:occupation ?occupation2 .
  
  FILTER (
    (str(?award) = ""Eric Gregory Award"") &&
    (str(?occupation1) = ""writer"" || str(?occupation1) = ""poet"") &&
    (str(?occupation2) = ""writer"" || str(?occupation2) = ""poet"")
  )
}
```",1,3,2,1,1,2,3,28,0,0,7,0,0.0,0
783,2,train,Give me the person born as Samuel Ofori Amponsah.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Samuel Ofori Amponsah""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person .
  OPTIONAL { ?person foaf:name ?name . }
  OPTIONAL { ?person dbo:birthName ?birthName . }
  FILTER (CONTAINS(LCASE(?birthName), ""samuel ofori amponsah""))
}
```

This query searches for entities classified as `dbo:Person` and checks if their birth name contains the string ""Samuel Ofori Amponsah"". The use of `LCASE()` ensures that the search is case-insensitive.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
182,11,train,Give me the entity in the nationality of Tamara Kunanayakam.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tamara_Kunanayakam> <http://dbpedia.org/ontology/nationality> ?v1 . ?result <http://dbpedia.org/ontology/place> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nationality WHERE {
  dbr:Tamara_Kunanayakam dbo:nationality ?nationality .
}
```",2,2,3,2,1,2,3,28,0,1,62,0.0,0.0,0
488,17,train,"Who is the father of the spouse, that is a royalty, of Tokugawa Masako?",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tokugawa_Masako> . ?v1 <http://dbpedia.org/property/father> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  # Step 1: Identify Tokugawa Masako
  ?masako a dbo:Person ;
          foaf:name ""Tokugawa Masako""@en .

  # Step 2: Find her spouse
  ?masako dbp:spouse ?spouse .

  # Step 3: Check if the spouse is royalty
  ?spouse dbo:title ?title .
  FILTER(CONTAINS(LCASE(?title), ""royalty"") || CONTAINS(LCASE(?title), ""prince"") || CONTAINS(LCASE(?title), ""duke""))

  # Step 4: Retrieve the father of this royal spouse
  ?spouse dbo:father ?father .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
827,0,train,"Give me the child of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.","SELECT ?result WHERE { <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?person) = ""Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach"")
  
  OPTIONAL { ?person dbo:child ?child . }
}
```

This query looks for the `dbo:child` property of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,0,train,Give me the band member of Nevermore.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"```sparql
SELECT ?member WHERE {
  wd:Q152698 bandMemberOf/schema:band ?nevermore .
  ?nevermore rdfs:label ""Nevermore""@en .
  ?member schema:memberOf ?nevermore ;
          schema:name ?name .
  FILTER(LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,12,0,0.0,0
115,6,train,Give me the alma mater of the awardee of National Order of Scientific Merit.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/almaMater> ?result . ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/National_Order_of_Scientific_Merit> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?almaMater WHERE {
  ?person dbo:nationality ?nationality .
  ?person dbo:award ?order .
  ?order rdfs:label ""National Order of Scientific Merit""@en .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
```

This query does the following:
- Selects distinct alma mater (`?almaMater`) for individuals.
- Filters individuals who have received an award labeled as ""National Order of Scientific Merit"".
- Uses `dbo:award` to link persons to their awards and `dbo:almaMater` to find educational institutions.",2,2,3,2,1,2,2,9,0,0,5,0,0.0,0
701,2,train,Give me the spouse of Ramesses II.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ramesses_II> . },"```sparql
SELECT ?spouse WHERE {
  wd:Q1511 dbo:spouse ?spouse .
}
```",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
465,6,train,"Give me the administration of the leader, that is a political party and an organisation, of Chamber of Deputies of the Czech Republic.",SELECT ?result WHERE { <http://dbpedia.org/resource/Chamber_of_Deputies_of_the_Czech_Republic> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/property/leaderParty> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?leader ?party ?organization ?administration
WHERE {
  # Find the leader of the Chamber of Deputies
  ?leader dbo:position dbr:Chamber_of_Deputies_of_the_Czech_Republic .
  
  # Ensure the leader is associated with a political party
  ?leader dbo:memberOf ?party .
  FILTER (isLiteral(?party) && contains(lcase(str(?party)), ""political party""))

  # Ensure the leader is part of an organization
  ?leader dbo:memberOf ?organization .
  FILTER (isLiteral(?organization) && contains(lcase(str(?organization)), ""organisation""))

  # Retrieve administration details if available
  OPTIONAL { ?leader dbo:administration ?administration }
}
```

This query does the following:
- Uses `dbo:position` to find individuals associated with the Chamber of Deputies.
- Filters for those who are members of a political party and an organization.
- Optionally retrieves any administration details linked to the leader.",2,4,3,2,1,2,2,9,0,0,50,0,0.0,0
285,8,train,Give me the spouse of the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/spouse> ?v0 . ?v0 <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?spouse WHERE {
  ?person a dbo:Person ;
          foaf:name ""<ProfessionalName>""@en .
  
  OPTIONAL { 
    ?person dbo:spouse ?spouse .
  }
}
```",2,2,3,2,1,3,2,20,0,0,4149,0,0.0,0
820,8,train,Give me the child of the parent of Jason Schwartzman.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . ?result <http://dbpedia.org/property/father> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?child WHERE {
  ?person foaf:name ""Jason Schwartzman""@en .
  ?person dbo:parent ?parent .

  ?parent dbo:child ?child .
}
```",2,2,3,2,1,3,2,20,0,0,2,0,0.0,0
778,0,train,Give me the entity in United States.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:United_States .
}
```",1,1,2,1,1,3,2,20,13008,0,0,1.0,1.0,1.0
161,3,train,Who is the person decedent at Francoist Spain?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Francoist_Spain> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathDate WHERE {
  ?person a dbo:Person .
  ?person dbo:causeOfDeath ?cause .
  OPTIONAL { ?person dbo:dateOfBirth ?birthDate . }
  OPTIONAL { ?person dbo:dateOfDeath ?deathDate . }
  FILTER EXISTS { 
    ?event dbo:place dbr:Francoist_Spain ;
           dbo:agent ?person .
  }
  FILTER (?deathDate != """" && ?cause != """")
}
ORDER BY ?deathDate
LIMIT 10",1,1,2,1,1,3,3,71,0,0,125,0,0.0,0
303,6,train,Give me the entity in Panama and party of Guillermo Endara.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Panama> . <http://dbpedia.org/resource/Guillermo_Endara> <http://dbpedia.org/ontology/party> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Guillermo Endara"" ;
          dbo:country dbr:Panama .
  ?person dbo:politicalParty ?party .
}
```",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
547,17,train,Give me the awardee of the award of Gerald Graham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Gerald_Graham> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  VALUES ?person { dbr:Gerald_Graham }
  
  ?person dbo:receivedAward ?award .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,2075,0,0.0,0
959,13,train,"Give me the native of the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?native WHERE {
  # Step 1: Identify Yōichi Masuzoe
  dbr:Yōichi_Masuzoe dbo:residence ?residence .

  # Step 2: Check if the residence is a country
  ?residence rdf:type dbo:Country .

  # Step 3: Find the native of that country
  ?native dbo:nationality ?residence .
}
```",2,3,3,2,1,3,3,71,316,841,8103,0.2731201382886776,0.03753414894880627,0.06599832915622389
251,3,train,"Give me the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Louis François Félix Musnier""@en .
  
  OPTIONAL { ?person dbo:participatedInMilitaryConflict ?conflict . }
  OPTIONAL { ?conflict dbo:wikiPageRedirects ?war . }

  FILTER(?conflict != ?war)
}
```

This query does the following:
- Identifies a person with the name ""Louis François Félix Musnier"" who is classified as a `dbo:MilitaryPerson`.
- Looks for any military conflicts (`dbo:participatedInMilitaryConflict`) associated with this person.
- Checks if these conflicts have redirects to wars using `dbo:wikiPageRedirects`, which helps in identifying broader war contexts.",1,2,2,1,1,2,3,28,0,0,16,0,0.0,0
182,10,train,Give me the war of the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/battle> ?result . ?v1 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work ?description WHERE {
  # Find the DBpedia resource for Gotabhaya Rajapaksa
  dbr:Gotabhaya_Rajapaksa dbo:wikiPageDisambiguates ?disambiguation .
  
  # Look for works related to wars in the disambiguation pages or subjects
  ?disambiguation dbo:subject ?war .
  ?work dbo:wikiPageDisambiguates ?disambiguation .
  OPTIONAL { ?work dbo:abstract ?description . FILTER(lang(?description) = 'en') }
  
  # Filter for works related to wars
  ?war rdfs:label ?warLabel .
  FILTER(CONTAINS(LCASE(?warLabel), ""war""))
}
```",2,2,3,2,1,2,3,28,0,0,5,0,0.0,0
55,3,train,"Give me the producer, that is a band, of Used to Love Her.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. <http://dbpedia.org/resource/Used_to_Love_Her> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  ?song dcterms:title ""Used to Love Her"" .
  ?song dbo:performer ?band .
  ?band a dbo:Band .
  ?song dbo:producer ?producer .
  FILTER (isLiteral(?producer) && langMatches(lang(?producer), ""en""))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
981,5,train,"Who is the person born, that is a beauty queen, as ?","SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BeautyQueen>. ?result <http://dbpedia.org/property/birthName> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate WHERE {
  ?person a dbo:BeautyQueen .
  ?person dbo:birthDate ?birthDate .
}
```",1,2,2,1,1,3,2,20,110,3938,10,0.02717391304347826,0.9166666666666666,0.052783109404990404
485,9,train,Give me the entity in Nottinghamshire and birth place of Thomas Warner (poet).,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . <http://dbpedia.org/resource/Thomas_Warner_(poet)> <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person a dbo:Writer ;
          foaf:name ""Thomas Warner"" ;
          dbo:residence dbr:Nottinghamshire .
  ?person dbo:birthPlace ?birthPlace .
}
```

This query does the following:
- It looks for an entity (`?person`) that is of type `dbo:Writer` and has a name ""Thomas Warner"".
- It checks if this person has a residence in Nottinghamshire.
- It retrieves the birthplace of this person.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
783,7,train,Give me the associated musical artist of the band member of Ofori Amponsah.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v1 <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  ?band dbo:member ?member .
  ?band rdfs:label ""Ofori Amponsah""@en .

  OPTIONAL { ?member dbo:musicalArtist ?artist . }
}
```

This query assumes:
- `dbo:member` links a band to its members.
- `rdfs:label` is used to identify the band by name.
- `dbo:musicalArtist` links a person to their musical artist role.",2,2,3,2,1,3,2,20,0,0,35,0,0.0,0
251,8,train,"Give me the location of the war, that is a military conflict, of Louis François Félix Musnier.",SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_François_Félix_Musnier> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://dbpedia.org/ontology/place> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?location WHERE {
  # Find DBpedia resource for Louis François Félix Musnier
  ?person rdfs:label ""Louis François Félix Musnier""@en .
  
  # Link person to wars they were involved in
  ?person dbo:militaryConflict ?war .

  # Get the location of the war
  ?war dbo:location ?location .
}
```",2,3,3,2,1,2,3,28,0,0,25,0,0.0,0
345,3,train,Give me the nickname of FC Vaduz.,SELECT ?result WHERE { <http://dbpedia.org/resource/FC_Vaduz> <http://dbpedia.org/property/nickname> ?result . },"```sparql
SELECT ?nickname WHERE {
  wd:Q1698785 rdfs:label ?label .
  OPTIONAL { wd:Q1698785 foaf:nick ?nickname . }
  FILTER (lang(?label) = 'en')
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
92,9,train,Give me the band member of Nevermore and associated musical artist of Jim Sheppard.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jim_Sheppard> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Nevermore> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?member ?associatedArtist WHERE {
  # Find members of Nevermore
  ?band a dbo:Band ;
        dbo:name ""Nevermore""@en .
  
  ?bandMember dbo:memberOf ?band ;
              dbo:birthName ?name .

  BIND(?bandMember AS ?member)

  OPTIONAL {
    # Check if the member is Jim Sheppard and find associated artists
    ?member dbo:birthName ""Jim Sheppard"" .
    
    ?associatedBand a dbo:Band ;
                   dbo:member ?member .
    
    ?associatedArtist dbo:memberOf ?associatedBand ;
                      dbo:birthName ?artistName .

    BIND(?associatedArtist AS ?associatedArtist)
  }
}
```

This query does the following:
- Identifies ""Nevermore"" as a band and retrieves its members.
- Checks if any of these members are Jim Sheppard.
- If Jim Sheppard is found, it looks for other bands he is associated with and lists their members.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
820,10,train,Who is the parent of the professional in Actor?,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/property/occupation> ""Actor""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?parentClass WHERE {
  ?actorClass rdfs:subClassOf* ?parentClass .
  FILTER NOT EXISTS { ?parentClass rdfs:subClassOf+ ?otherClass . }
  VALUES ?actorClass { <http://dbpedia.org/ontology/Actor> }
}
```",2,2,3,2,1,3,2,20,0,0,921,0,0.0,0
626,1,train,Give me the awardee of Order of St. Andrew.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Order_of_St._Andrew> . },"```sparql
SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects db:Order_of_St._Andrew.
  ?award dbo:recipient ?awardee.
}
```",1,1,2,1,1,3,2,20,0,0,33,0,0.0,0
161,11,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Francisco Franco.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?result <http://dbpedia.org/ontology/battle> ?v0 . ?v0 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Franco> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  # Find military forces associated with Francisco Franco
  ?militaryForce dbo:commander dbr:Francisco_Franco .
  
  # Ensure the force is categorized as a societal event, an event, and a military conflict
  ?militaryForce rdf:type/rdfs:subClassOf*+ (dbo:SocietalEvent dbo:Event dbo:MilitaryConflict) .

  # Filter to ensure all three categories are matched
  FILTER EXISTS { ?militaryForce rdf:type/rdfs:subClassOf* dbo:SocietalEvent }
  FILTER EXISTS { ?militaryForce rdf:type/rdfs:subClassOf* dbo:Event }
  FILTER EXISTS { ?militaryForce rdf:type/rdfs:subClassOf* dbo:MilitaryConflict }
}
```",2,5,3,2,1,3,3,71,0,0,545,0,0.0,0
666,3,train,"Give me the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?manager WHERE {
  ?team a dbo:FootballClub ;
        dbo:season ""2016–17""^^xsd:string ;
        dbo:manager ?manager .
  
  FILTER(CONTAINS(LCASE(STR(?manager)), ""sports manager""))
  
  VALUES ?team { dbr:Hull_City_A.F.C. }
}
```",1,2,2,1,1,3,2,20,0,0,4,0,0.0,0
232,5,train,"Give me the professional in Actor, narrator and producer.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actor, narrator and producer""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person a dbo:Actor .
  ?person dbo:occupation dbp:narrator .
  ?person dbo:occupation dbp:producer .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,0,train,Give me the person born as Mom Rajawongse Sirikit Kitiyakara.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Mom Rajawongse Sirikit Kitiyakara""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?person ?birthName WHERE {
  ?person a dbo:Person ;
          rdfs:label ""Queen Sirikit""@en .
  OPTIONAL { ?person dbo:birthName ?birthName . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
318,1,train,Give me the professional in Composer.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Composer> . },"```sparql
SELECT ?composer WHERE {
  ?composer a dbo:Composer .
}
```",1,1,2,1,1,2,2,9,0,0,1916,0,0.0,0
838,10,train,"Give me the band, that is a group, of the reference, that is a group and an organisation, to YU Grupa.","SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://xmlns.com/foaf/0.1/name> ""YU Grupa""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  # Find the resource for YU Grupa
  dbr:YU_Grupa a dbo:Band .
  
  # Look for references or related groups that are also bands and organizations
  OPTIONAL { 
    dbr:YU_Grupa dbo:reference dbr:?relatedGroup .
    ?relatedGroup a (dbo:Band dbo:Organization) .
    
    # Find the band associated with this related group
    ?relatedGroup dbo:bandMember ?member .
    ?member a dbo:MusicalArtist .
    ?member dbo:associatedBand ?band .
  }
}
```",2,5,3,2,1,3,2,20,0,0,8,0,0.0,0
9,12,train,Give me the figure known as QUB and alma mater of Allen Hill (scientist).,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""QUB""@en . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university WHERE {
  # Find Queen's University Belfast (QUB)
  dbr:Queen%27s_University_Belfast a dbo:EducationalInstitution .

  # Find Allen Hill and his alma mater
  OPTIONAL {
    ?allenHill dbo:almaMater ?university .
    FILTER(CONTAINS(LCASE(?allenHill), ""allen hill"") && CONTAINS(LCASE(STR(?allenHill)), ""scientist""))
  }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,16,train,"Who is the awardee of the reference, that is an award, to Royal Medals?","SELECT ?result WHERE { ?v1 <http://xmlns.com/foaf/0.1/name> ""Royal Medals""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>. ?result <http://dbpedia.org/property/awards> ?v1 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:wikiPageRedirects dbr:Royal_Medal .
  ?award dbo:recipient ?awardee .
}
```",2,3,3,2,1,3,3,71,0,0,45,0,0.0,0
328,11,train,"Give me the awardee of the award of Bruce Fraser, 1st Baron Fraser of North Cape.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Bruce_Fraser,_1st_Baron_Fraser_of_North_Cape> <http://dbpedia.org/property/awards> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?awardee WHERE {
  ?person a dbo:Person ;
          foaf:name ""Bruce Fraser, 1st Baron Fraser of North Cape""@en .
  ?person dbo:honoraryTitle dbr:Knight_Baronet_of_the_United_Kingdom .
  ?person dbo:receivedAward ?award .
  ?award dbo:recipient ?awardee .
  FILTER (str(?award) = ""Knight Grand Cross of the Order of the Bath""@en)
}
```",2,2,3,2,1,3,3,71,0,0,1484,0,0.0,0
915,3,train,"Give me the birthplace, that is a settlement, of Stephen Verona.",SELECT ?result WHERE { <http://dbpedia.org/resource/Stephen_Verona> <http://dbpedia.org/ontology/birthPlace> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?person dbo:birthName ""Stephen Verona""@en.
  ?person dbo:birthPlace ?birthPlace.
  FILTER (isLiteral(?birthPlace) && langMatches(lang(?birthPlace), ""en""))
}
```",1,2,2,1,1,3,2,20,0,0,1,0,0.0,0
55,4,train,"Give me the band member, that is a band and a group, of San Francisco Symphony.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/San_Francisco_Symphony> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?bandMember WHERE {
  ?symphony a dbo:SymphonyOrChoir ;
            dbp:name ""San Francisco Symphony""@en .
  
  ?performance dbo:performer ?bandMember ;
               dbo:placePerformed ?symphony .

  ?bandMember a dbo:Band ;
              a dbo:MusicalGroup .
}
```",1,3,2,1,1,2,3,28,0,0,3,0,0.0,0
345,1,train,Give me the team of Alessandro Mangiarratti.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . },"```sparql
SELECT ?team WHERE {
  wd:Q1234567 dbo:playsFor ?team .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Alessandro Mangiarratti. You can find this by searching his name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
55,6,train,Give me the band member of Metallica and band member of Guns N' Roses.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Guns_N'_Roses> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  # Find people who are band members of Metallica
  ?metallicaMember dbo:band dbp:Metallica .
  
  # Ensure the person is a human (to avoid non-human entities)
  ?metallicaMember rdf:type dbo:Person .

  # Find people who are also band members of Guns N' Roses
  ?gunsNRosesMember dbo:band dbp:""Guns N' Roses"" .
  
  # Ensure the same person is being referred to in both cases
  FILTER (?metallicaMember = ?gunsNRosesMember)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
827,2,train,"Who is the parent of Charles Alexander, Grand Duke of Saxe-Weimar-Eisenach?","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Charles_Alexander,_Grand_Duke_of_Saxe-Weimar-Eisenach dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
547,12,train,Give me the resting place of Simon Cadell and resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Simon_Cadell> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  VALUES (?person ?name) {
    (dbr:Simon_Cadell ""Simon Cadell"")
    (dbr:Alan_Cunningham_(actor) ""Alan Cunningham"")
  }
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
92,4,train,"Give me the reference, that is an artist, to Nevermore.","SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Nevermore""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?artist WHERE {
  ?album dcterms:creator ?artist .
  ?album rdfs:label ""Nevermore""@en .
  FILTER (langMatches(lang(?album), ""EN""))
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
378,12,train,"Give me the war of Joaquín Blake and claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón.","SELECT ?result WHERE { <http://dbpedia.org/resource/Joaquín_Blake> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?war ?claimToFame
WHERE {
  # Joaquín Blake's involvement in a war
  dbr:Joaqu%C3%ADn_Blake dbo:participatedIn ?war .
  
  # Louis des Balbes de Berton de Crillon, 1st Duke of Mahón's claim to fame
  dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mah%C3%B3n dbo:famousFor ?claimToFame .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
645,1,train,Give me the alma mater of Sylvia Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Sylvia_Pankhurst> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  wd:Q123456 wdt:P69 ?almaMater .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Sylvia Pankhurst. You can find this by searching her name on DBpedia or using a SPARQL endpoint to query for her unique identifier.",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
427,3,train,Give me the party of Michele Pinto.,SELECT ?result WHERE { <http://dbpedia.org/resource/Michele_Pinto> <http://dbpedia.org/ontology/party> ?result . },"```sparql
SELECT ?party WHERE {
  wd:Q1234567 dbo:politicalParty ?party .
}
```

Note: Replace `wd:Q1234567` with the actual DBpedia identifier for Michele Pinto. You can find this by searching for Michele Pinto on DBpedia or using a SPARQL query to identify his unique identifier.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
498,6,train,"Give me the band of the member, that is an artist, of Mortician (band).",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. <http://dbpedia.org/resource/Mortician_(band)> <http://dbpedia.org/ontology/bandMember> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?band WHERE {
  # Find Mortician as a band
  dbr:Mortician dbo:member ?member .
  
  # Check if the member is an artist
  ?member dbo:occupation dbr:Artist .

  # Retrieve bands associated with this member
  ?member dbo:member ?band .
}
```",2,3,3,2,1,2,2,9,0,0,2,0,0.0,0
44,1,train,Give me the band member of Sledgeback.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sledgeback> . },"```sparql
SELECT ?member WHERE {
  ?band dbr:Sledgeback ;
        dbo:bandMember ?member .
}
```",1,1,2,1,1,2,2,9,0,0,8,0,0.0,0
281,15,train,Who is the awardee of the award of Jonathon Band?,SELECT ?result WHERE { <http://dbpedia.org/resource/Jonathon_Band> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/awards> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?awardee WHERE {
  ?award dbo:givenBy dbr:Jonathon_Band .
  ?award dbo:recipient ?awardee .
}
```",2,2,3,2,1,3,3,71,0,0,558,0,0.0,0
435,3,train,"Give me the figure known, that is a settlement and a town and Icelandic, as Land of fire and ice.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Land of fire and ice""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>. ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Iceland>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?settlement WHERE {
  ?settlement a dbo:Settlement .
  ?settlement dbo:country dbr:Iceland .
  ?settlement rdfs:label ?label .
  FILTER (langMatches(lang(?label), ""en"") && contains(lcase(str(?label)), ""land of fire and ice""))
}
```",1,4,2,1,1,2,3,28,0,0,1,0,0.0,0
421,10,train,Give me the native of the birthplace of Samir Bekrić.,SELECT ?result WHERE { <http://dbpedia.org/resource/Samir_Bekrić> <http://dbpedia.org/ontology/birthPlace> ?v0 . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . },"```sparql
SELECT ?nativeLanguage WHERE {
  ?person dbo:birthPlace ?birthPlace .
  ?birthPlace rdfs:label ?placeLabel .
  ?placeLabel foaf:nativeName ?nativeName .
  ?placeLabel dbo:language ?nativeLanguage .

  FILTER (lang(?placeLabel) = 'en')
  
  VALUES ?person { <http://dbpedia.org/resource/Samir_Bekrić> }
}
```",2,2,3,2,1,2,3,28,0,0,5492,0,0.0,0
659,12,train,Give me the military force of Napoleonic Wars and commander in Battle of Leipzig.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Napoleonic_Wars> . <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?militaryForce ?commander WHERE {
  # Find military forces involved in the Napoleonic Wars
  ?battle dbp:partOfWar dbpedia:Napoleonic_Wars.
  
  # Get commanders for each battle
  ?battle dbp:commander ?commander.

  # Filter to find Battle of Leipzig specifically
  VALUES ?specificBattle { dbpedia:Battle_of_Leipzig }
  FILTER(?battle = ?specificBattle)

  # Get military force associated with the commander in the Battle of Leipzig
  ?commander dbo:militaryService ?militaryForce.
  
  # Ensure we get distinct results
  DISTINCT
}
```",2,2,3,1,2,3,3,71,0,0,5,0,0.0,0
712,1,train,Give me the resting place of Nina Onilova.,SELECT ?result WHERE { <http://dbpedia.org/resource/Nina_Onilova> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?burialPlace WHERE {
  VALUES ?person { dbr:Nina_Onilova }
  ?person dbo:placeOfBurial ?burialPlace .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
959,6,train,"Give me the residence, that is a country, of Yōichi Masuzoe.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Yōichi_Masuzoe> <http://dbpedia.org/property/residence> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?country WHERE {
  ?person a dbo:Person ;
          foaf:name ""Yōichi Masuzoe""@en .
  ?person dbo:residence ?location .
  ?location a dbo:Country ;
            rdfs:label ?country .
}
```",1,2,2,1,1,3,3,71,0,1,1,0.0,0.0,0
712,2,train,"Give me the military force, that is an organisation and a military unit, of Vyoshenskaya Uprising.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>. ?result <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Vyoshenskaya_Uprising> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  ?uprising dbo:relatedMilitaryConflict dbr:Vyoshenskaya_Uprising .
  ?militaryForce dbo:partOf ?uprising ;
                 a dbo:MilitaryUnit, dbo:Organization .
}
```

This query does the following:
- It looks for entities related to the ""Vyoshenskaya Uprising"" using `dbo:relatedMilitaryConflict`.
- It filters these entities to find those that are both a `dbo:MilitaryUnit` and a `dbo:Organization`.
- The result is stored in the variable `?militaryForce`.",1,3,2,1,1,3,2,20,0,0,1,0,0.0,0
783,3,train,Give me the band member of Ofori Amponsah.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ofori_Amponsah> . },"```sparql
SELECT ?member WHERE {
  ?band dbr:Ofori_Amponsah/musicalGroup_member ?member .
}
```",1,1,2,1,1,3,2,20,0,0,5,0,0.0,0
232,17,train,"Give me the residence, that is a settlement and British, of the native, that is a politician and an office holder, of France.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/France> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?v1 <http://dbpedia.org/property/residence> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?residence WHERE {
  ?person dbo:nationality dbr:France .
  ?person dbo:occupation dbr:Politician ;
          dbo:officeHolder true .
  ?person dbo:residence ?residence .
  ?residence a dbo:Settlement .
  ?residence dbo:country dbr:United_Kingdom .
}
```",2,6,3,2,1,3,3,71,0,0,2,0,0.0,0
179,10,train,Who is the child of the parent of Vajiralongkorn?,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Vajiralongkorn> . ?v0 <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  ?vajiralongkorn dbo:spouse ?parent .
  ?parent dbo:child ?child .
  FILTER(?vajiralongkorn = dbpedia:Vajiralongkorn)
}
```

This query assumes that the parent is identified through a spouse relationship, which might not be accurate for all familial structures. Adjustments may be needed based on the actual data model in DBpedia.",2,2,3,2,1,3,2,20,0,0,4,0,0.0,0
10,10,train,"Give me the band member of the person born, that is an artist, as Luke Francis Vibert.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Luke Francis Vibert""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v1 . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?bandMember WHERE {
  ?person a dbo:Artist ;
          foaf:name ""Luke Francis Vibert"" .
  
  OPTIONAL { 
    ?person dbo:memberOfBand ?band .
    ?band dbo:bandMember ?bandMember .
  }
}
```

This query does the following:
- It selects individuals (`?person`) who are of type `dbo:Artist` and have a name ""Luke Francis Vibert"".
- It then optionally finds any band (`?band`) that Luke is a member of, and retrieves the members (`?bandMember`) of that band.",2,3,3,2,1,2,3,28,0,0,3,0,0.0,0
783,1,train,Give me the band member of Ebony Reigns.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Ebony_Reigns> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  ?ebony a dbo:MusicalArtist ;
        foaf:name ""Ebony Reigns""@en .
  
  OPTIONAL {
    ?collaboration dbo:artist ?ebony ;
                   dbo:member ?bandMember .
  }
}
```",1,1,2,1,1,3,2,20,0,0,7,0,0.0,0
232,0,train,Give me the child of Jon Pertwee.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jon_Pertwee> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?person dbo:spouse ?partner .
  OPTIONAL { ?person dbo:child ?child . }
  FILTER (str(?person) = ""Jon_Pertwee"")
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
182,4,train,Give me the work of Gotabhaya Rajapaksa.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Gotabhaya_Rajapaksa> . },"```sparql
SELECT ?work WHERE {
  wd:Q1055230 dbo:worksFor ?work .
}
```",1,1,2,1,1,2,3,28,0,0,1,0,0.0,0
391,1,train,Give me the actor of The Departed.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Departed> <http://dbpedia.org/ontology/starring> ?result . },"```sparql
SELECT ?actor WHERE {
  ?film dbo:starring ?actor .
  ?film rdfs:label ""The Departed""@en .
  FILTER (lang(?film) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,9,0,0.0,0
547,2,train,Give me the resting place of Alan Cunningham.,SELECT ?result WHERE { <http://dbpedia.org/resource/Alan_Cunningham> <http://dbpedia.org/ontology/restingPlace> ?result . },"```sparql
SELECT ?place WHERE {
  wd:Q12345 dbo:finalRestingPlace ?place .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Alan Cunningham. You can find this by searching for his name on DBpedia or using a SPARQL query to identify him.",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
142,5,train,Give me the entity in the region of Japan Standard Time.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Japan_Standard_Time> . ?result <http://dbpedia.org/ontology/country> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:timeZone dbr:Japan_Standard_Time .
}
```",2,2,3,2,1,2,2,9,2080,175,6842,0.9223946784922394,0.233131584846447,0.372192896125973
981,7,train,Give me the entity in the region of Time in Indonesia.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . ?result <http://dbpedia.org/ontology/country> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity dbo:country dbr:Indonesia .
  OPTIONAL { ?entity dbo:timeZone ?timezone . }
  OPTIONAL { ?entity dbo:era ?era . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,2,20,0,0,2949,0,0.0,0
659,9,train,Give me the commander in German campaign of 1813 and commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . <http://dbpedia.org/resource/German_campaign_of_1813> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander1813 ?commanderLeipzig WHERE {
  # Napoleon Bonaparte as commander in German campaign of 1813
  OPTIONAL {
    ?campaign dbo:commander dbr:Napoleon .
    ?campaign rdfs:label ""German campaign (1813)""@en .
    BIND(dbr:Napoleon AS ?commander1813)
  }

  # Commanders at the Battle of Leipzig
  OPTIONAL {
    ?battle dbo:commander ?commanderLeipzig .
    ?battle rdfs:label ""Battle of Leipzig""@en .
    FILTER NOT EXISTS { ?commanderLeipzig = dbr:Napoleon }
  }
}
```",2,2,3,1,2,3,3,71,0,0,16,0,0.0,0
465,5,train,Give me the death place of the native of Prague.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/deathPlace> ?result . ?v1 <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Prague> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?deathPlace WHERE {
  ?person dbo:birthPlace dbr:Prague .
  OPTIONAL { ?person dbo:deathPlace ?deathPlace . }
}
```

This query does the following:
- Uses `dbo:birthPlace` to find individuals born in Prague.
- Uses `dbo:deathPlace` to optionally retrieve their death place.",2,2,3,2,1,2,2,9,0,0,254,0,0.0,0
963,9,train,"Give me the region, that is a country, of the time zone of Herzegovina-Neretva Canton.",SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. <http://dbpedia.org/resource/Herzegovina-Neretva_Canton> <http://dbpedia.org/property/timeZone> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?country WHERE {
  # Find Herzegovina-Neretva Canton and its time zone
  dbr:Herzegovina-Neretva_Canton dbo:timeZone ?timezone .

  # Find the region or country associated with this time zone
  ?timezone dbo:region ?region .
  
  # Ensure that the region is a country
  ?region rdf:type dbo:Country .
  
  # Bind the country to the variable for output
  BIND(?region AS ?country)
}
```",2,3,3,2,1,3,2,20,0,0,56,0,0.0,0
801,1,train,Give me the producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . },"```sparql
SELECT ?producer WHERE {
  dbr:Westside_Story_(song) dbo:producer ?producer .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
617,16,train,"Who is the child of the successor, that is a royalty, of Antiochus (son of Antiochus III the Great)?",SELECT ?result WHERE { <http://dbpedia.org/resource/Antiochus_(son_of_Antiochus_III_the_Great)> <http://dbpedia.org/ontology/successor> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?v1 <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  # Step 1: Identify Antiochus (son of Antiochus III the Great)
  ?antiochus a dbo:Person ;
             foaf:name ""Antiochus IV Epiphanes""@en ;
             dbo:father dbr:Antiochus_III_the_Great .

  # Step 2: Determine his successor
  ?successor dbo:predecessor ?antiochus ;
            a dbo:Person ;
            foaf:name ?name .

  # Step 3: Find the children of this successor who are royalty
  ?child dbo:parent ?successor ;
         a dbo:RoyalFamilyMember .
}
```",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
820,7,train,Give me the professional in the award of Scott McCloud.,SELECT ?result WHERE { <http://dbpedia.org/resource/Scott_McCloud> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/property/occupation> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award ?profession 
WHERE {
  ?person dbo:givenName ""Scott"" .
  ?person dbo:familyName ""McCloud"" .
  ?person dbo:occupation ?profession .
  
  OPTIONAL { 
    ?award dbo:recipient ?person .
  }
}
```",2,2,3,2,1,3,2,20,0,0,39650,0,0.0,0
617,6,train,Give me the parent of Mieszko II Lambert and child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mieszko_II_Lambert> . },"```sparql
SELECT ?individual WHERE {
  ?individual dbo:childOf dbr:Mieszko_II_Lambert .
  ?individual dbo:childOf dbr:Doubravka_of_Bohemia .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,0,train,Give me the professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?professional WHERE {
  ?professional dbo:location dbr:CityName .
  ?professional rdf:type dbo:Person .
}
```",1,1,2,1,1,3,3,71,0,0,39640,0,0.0,0
328,13,train,Give me the commander in the force of Ferenc Szálasi.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ferenc_Szálasi> . ?v1 <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?szalasi dbo:leaderOf dbr:Ferenc_Szálasi.
  ?szalasi dbo:memberOf dbr:Arrow_Cross_Party.
  ?force dbo:commandedBy ?commander.
  ?szalasi dbo:memberOf ?force.
}
```",2,2,3,2,1,3,3,71,0,0,73,0,0.0,0
391,4,train,Give me the figure known as Hub City.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Hub City""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?city ?officialName WHERE {
  ?city a dbo:City .
  OPTIONAL { ?city rdfs:label ?officialName . FILTER (lang(?officialName) = 'en') }
  OPTIONAL { ?city dbo:alsoKnownAs ?alias . FILTER regex(?alias, ""Hub City"", ""i"") }
}
```",1,1,2,1,1,3,3,71,3,73538,1,4.079357093322092e-05,0.75,8.158270446665307e-05
659,14,train,"Give me the military force of the force, that is a societal event and an event and a military conflict, of Rutger Jan Schimmelpenninck.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. ?v1 <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Rutger_Jan_Schimmelpenninck> . ?result <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?militaryForce WHERE {
  VALUES ?schimmelpenninck { dbr:Rutger_Jan_Schimmelpenninck }
  
  OPTIONAL {
    ?event dbo:militaryConflict ?conflict .
    ?conflict dbo:participant ?schimmelpenninck .
    ?conflict dbo:militaryForce ?militaryForce .
  }

  OPTIONAL {
    ?event dbo:societalEvent ?societalEvent .
    ?societalEvent dbo:participant ?schimmelpenninck .
    ?societalEvent dbo:militaryForce ?militaryForce .
  }
  
  FILTER(?militaryForce != dbr:None)
}
```",2,5,3,2,1,3,3,71,0,0,1127,0,0.0,0
617,17,train,Who is the child of the commander in Battle of Panium?,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/child> ?result . <http://dbpedia.org/resource/Battle_of_Panium> <http://dbpedia.org/ontology/commander> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?battle dbo:event = dbr:Battle_of_Panium .
  ?battle dbo:commander ?commander .
  ?commander dbo:child ?child .
}
```

This query does the following:
- Identifies the Battle of Panium using `dbr:Battle_of_Panium`.
- Finds the commander(s) associated with this battle.
- Retrieves any children of these commanders.",2,2,3,2,1,3,3,71,0,0,7,0,0.0,0
360,8,train,"Give me the writer of the work, that is an album, of Dave Flett.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>. ?v1 <http://dbpedia.org/property/author> ""Dave Flett""@en . ?v1 <http://dbpedia.org/property/writer> ?result . }","```sparql
SELECT ?writer WHERE {
  ?album dcterms:creator ?person .
  ?album dbo:artist ?band .
  ?band foaf:name ""Dave Flett"" .
  OPTIONAL { ?album rdfs:label ?title . FILTER (lang(?title) = 'en') }
}
```",2,3,3,2,1,2,3,28,0,0,8,0,0.0,0
294,6,train,"Give me the resting place of Luke Lea (American politician, born 1879) and resting place of Edwin A. Keeble.","SELECT ?result WHERE { <http://dbpedia.org/resource/Edwin_A._Keeble> <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?restingPlace WHERE {
  VALUES ?person { 
    dbr:Luke_Lea_(American_politician) 
    dbr:Edwin_A._Keeble
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:placeOfBurial ?restingPlace . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
184,0,train,Give me the parent of Géza von Habsburg.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Géza_von_Habsburg> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Géza_von_Habsburg }
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,3,71,2,0,0,1.0,1.0,1.0
328,3,train,Who is the commander in Volcano and Ryukyu Islands campaign?,SELECT ?result WHERE { <http://dbpedia.org/resource/Volcano_and_Ryukyu_Islands_campaign> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?campaign dbo:wikiPageRedirects dbr:Volcano_and_Ryukyu_Islands_campaign .
  ?campaign dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,20,0,0.0,0
626,0,train,Give me the commander in Battle of Leipzig.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_Leipzig> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle dbo:wikiPageRedirects dbpedia-owl:Battle_of_Leipzig .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,2,20,0,0,21,0,0.0,0
838,3,train,"Give me the band member, that is an artist and a musical artist, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/YU_Grupa> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. },"```sparql
SELECT ?member WHERE {
  ?band dcterms:subject dbc:YU_Grupa .
  ?band dbo:musicalArtist ?member .
  ?member a dbo:MusicalArtist ;
          dbo:occupation dbp:Musician .
}
```",1,3,2,1,1,3,2,20,0,0,4,0,0.0,0
747,8,train,Who is the person born as Tracey Elizabeth McSween?,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Tracey Elizabeth McSween""@en . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person WHERE {
  ?person dbo:birthName ""Tracey Elizabeth McSween"" .
}
```

This query uses the `dbo:birthName` property to find entities in DBpedia where the birth name matches ""Tracey Elizabeth McSween"". The result will be a list of resources (persons) that have this birth name.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
345,6,train,Give me the figure known as Stolz von Liechtenstein and team of Alessandro Mangiarratti.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/nickname> ""Stolz von Liechtenstein""@en . ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Alessandro_Mangiarratti> . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?horse ?teamLeader WHERE {
  # Find the horse ""Stolz von Liechtenstein""
  VALUES ?horse { dbr:Stolz_von_Liechtenstein }
  
  # Get the team associated with the horse
  ?horse dbo:trainer ?trainer .
  
  # Find the trainer's name and check if it matches Alessandro Mangiarratti
  ?trainer foaf:name ?name .
  FILTER (CONTAINS(LCASE(?name), ""alessandro mangiarratti""))
  
  # Bind the team leader to the result
  BIND(?trainer AS ?teamLeader)
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
801,8,train,"Give me the writer, that is a musical artist and an artist, of 40 Dayz & 40 Nightz.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. <http://dbpedia.org/resource/40_Dayz_&_40_Nightz> <http://dbpedia.org/property/writer> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?writer WHERE {
  ?album dbo:artist ?writer .
  ?album rdfs:label ""40 Dayz & 40 Nightz""@en .
  FILTER (lang(?albumLabel) = 'en')
  
  OPTIONAL { ?writer dbo:occupation dbr:Hip_hop_musician . }
  OPTIONAL { ?writer dbo:occupation dbr:Artist . }
}
```",1,3,2,1,1,3,3,71,0,0,12,0,0.0,0
666,7,train,"Give me the player in the manager, that is a sports manager, of 2016–17 Hull City A.F.C. season.",SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/team> ?result . <http://dbpedia.org/resource/2016–17_Hull_City_A.F.C._season> <http://dbpedia.org/ontology/manager> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>. },"```sparql
SELECT ?playerInManager WHERE {
  ?team dcterms:isPartOf ?season .
  ?team dbp:name ""Hull City A.F.C."" .
  ?season dbp:startDate ?startYear .
  FILTER (YEAR(?startYear) = 2016 && MONTH(?startYear) <= 7)
  ?season dbp:endDate ?endYear .
  FILTER (YEAR(?endYear) = 2017 || (YEAR(?endYear) = 2016 && MONTH(?endYear) >= 8))
  
  ?team dbp:manager ?manager .
  ?manager a dbo:SportsManager .

  ?manager foaf:name ?playerInManager .
}
```",2,3,3,2,1,3,2,20,0,0,22,0,0.0,0
345,9,train,"Give me the nickname of the player, that is a sports club and an organisation and a soccer club, in Armando Heeb.",SELECT ?result WHERE { <http://dbpedia.org/resource/Armando_Heeb> <http://dbpedia.org/ontology/team> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsClub>. ?v0 <http://dbpedia.org/property/nickname> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nickname WHERE {
  # Find entities that are sports clubs, organizations, and soccer clubs
  ?entity a dbo:SportsClub ;
          a dbo:Organization ;
          a dbo:FootballClub .

  # Ensure the entity is related to Armando Heeb
  ?heeb dbr:Armando_Heeb ;
        dbo:member ?entity .

  # Retrieve the nickname of the player associated with this entity
  ?player dbo:nickname ?nickname .
  ?player dbo:playsFor ?entity .
}
```",2,5,3,2,1,3,2,20,0,0,3,0,0.0,0
981,4,train,Give me the author of Kamikaze Girls.,SELECT ?result WHERE { <http://dbpedia.org/resource/Kamikaze_Girls> <http://dbpedia.org/property/author> ?result . },"```sparql
SELECT ?author WHERE {
  ?book dct:subject dbc:Kamikaze_Girls.
  ?book dbo:author ?author.
}
```",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
391,6,train,"Give me the claim to fame, that is a work, of Michael Ballhaus.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. <http://dbpedia.org/resource/Michael_Ballhaus> <http://dbpedia.org/ontology/knownFor> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?work WHERE {
  ?person dbo:profession dbr:Cinematographer .
  ?person foaf:name ""Michael Ballhaus""@en .
  ?person dbo:notableWork ?work .
}
```",1,2,2,1,1,3,3,71,0,0,4,0,0.0,0
9,10,train,"Give me the figure known as QUB and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/property/nickname> ""QUB""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?university ?almaMaterLabel WHERE {
  # Find the entity for Queen's University Belfast (QUB)
  dbr:Queen%27s_University_Belfast a dbo:EducationalInstitution ;
                                  rdfs:label ?university .

  # Find John Alderdice and his alma mater
  OPTIONAL { 
    dbr:John_Alderdice dbo:almaMater ?almaMater .
    ?almaMater rdfs:label ?almaMaterLabel .
  }

  FILTER(?university = ""Queen's University Belfast""^^xsd:string)
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
197,2,train,Who is the member of FC Politehnica Timișoara?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/FC_Politehnica_Timișoara> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player WHERE {
  ?club rdf:type dbo:FootballClub .
  ?club foaf:name ""FC Politehnica Timișoara""@en .
  ?teamMember dbo:playsFor ?club .
  ?teamMember a dbo:Person .
  ?teamMember foaf:name ?player .
}
```",1,1,2,1,1,2,2,9,0,0,572,0,0.0,0
54,5,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Thado Minsaw""@en .
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,6,train,Give me the war of Mahesh Senanayake and war of Jagath Dias.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jagath_Dias> <http://dbpedia.org/ontology/battle> ?result . <http://dbpedia.org/resource/Mahesh_Senanayake> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?war WHERE {
  VALUES ?person { 
    dbr:Mahesh_Senanayake 
    dbr:Jagath_Dias
  }
  
  ?person dbo:militaryConflict ?war .
}
```

This query uses the `dbo:militaryConflict` property to find wars associated with Mahesh Senanayake and Jagath Dias. It assumes that DBpedia has entries for these individuals and their military involvement.",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
778,7,train,Give me the entity in the award of Ralph L. Brinster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ralph_L._Brinster> <http://dbpedia.org/property/awards> ?v1 . ?result <http://dbpedia.org/ontology/location> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?award WHERE {
  ?person dbo:honorificTitle ?title .
  ?person foaf:name ""Ralph L. Brinster""@en .
  ?person dbo:awardsReceived ?award .
}
```",2,2,3,2,1,3,2,20,0,0,18629,0,0.0,0
179,5,train,Who is the child of Bhumibol Adulyadej?,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?spouse .
  FILTER (str(?spouse) = ""Bhumibol_Adulyadej"")
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,2,20,0,0,4,0,0.0,0
54,13,train,Give me the parent of the child of Narapati I of Ava.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/parent> ?result . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Narapati_I_of_Ava> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?parentName WHERE {
  # Step 1: Identify Narapati I of Ava
  ?narapatiI a dbo:Monarch ;
             foaf:name ""Narapati I""@en ;
             dbo:country dbr:Ava .

  # Step 2: Find his children
  ?child dbo:parent ?narapatiI .

  # Step 3: For each child, find their parents
  ?childParentRelation dbo:child ?child .
  
  # Step 4: Retrieve the parent information
  ?childParentRelation dbo:parent ?parent .
  ?parent foaf:name ?parentName .
}
```",2,2,3,2,1,3,3,71,0,0,2,0,0.0,0
303,5,train,"Who is the person born, that is a politician, as Arnulfo Arias Madrid?","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?person ?birthDate ?politicalRole WHERE {
  VALUES ?person { dbr:Arnulfo_Arias_Madrid }
  
  ?person dbo:birthDate ?birthDate .
  ?person dbo:occupation ?politicalRole .
  FILTER(CONTAINS(LCASE(?politicalRole), ""politician""))
}
```",1,2,2,1,1,2,3,28,0,0,1,0,0.0,0
534,5,train,Give me the owner of RDS Arena.,SELECT ?result WHERE { <http://dbpedia.org/resource/RDS_Arena> <http://dbpedia.org/ontology/owner> ?result . },"```sparql
SELECT ?owner WHERE {
  wd:Q123456 rdfs:label ""RDS Arena""@en. # Replace Q123456 with the actual DBpedia resource ID for RDS Arena.
  OPTIONAL { 
    wd:Q123456 wdt:P127 ?owner. # P127 is the property for 'instance of' or 'part of', which might be used to denote ownership in some contexts.
  }
  FILTER (lang(?label) = ""en"")
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
767,1,train,Give me the alma mater of Carl L. Nippert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
SELECT ?almaMater WHERE {
  wd:Q123456 foaf:almaMater ?almaMater .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Carl L. Nippert.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
963,1,train,Give me the administration of Serbian Progressive Party.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Serbian_Progressive_Party> . },"```sparql
SELECT ?administration WHERE {
  wd:Q1116980 wdt:P6 ?administration .
}
```",1,1,2,1,1,3,2,20,0,0,86,0,0.0,0
345,4,train,Give me the birth date of Eiður Guðjohnsen.,SELECT ?result WHERE { <http://dbpedia.org/resource/Eiður_Guðjohnsen> <http://dbpedia.org/ontology/birthDate> ?result . },"```sparql
SELECT ?birthDate WHERE {
  wd:Q12345 dbo:birthDate ?birthDate .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia resource identifier for Eiður Guðjohnsen. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
10,6,train,Give me the associated musical artist of Matt Colton and band member of Luke Vibert.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Luke_Vibert> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?artist WHERE {
  # Find associated musical artist of Matt Colton
  ?colton a dbo:Person ;
          foaf:name ""Matt Colton""@en .
  ?colton dbo:associatedMusicalArtist ?artist .

  # Find band member of Luke Vibert
  ?vibert a dbo:Person ;
          foaf:name ""Luke Vibert""@en .
  ?vibert dbo:bandMember ?artist .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
391,3,train,"Give me the nick name of Jackson, Tennessee.","SELECT ?result WHERE { <http://dbpedia.org/resource/Jackson,_Tennessee> <http://xmlns.com/foaf/0.1/nick> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?nickname WHERE {
  VALUES ?city { dbr:Jackson_(Tennessee) }
  ?city dbo:commonName ?nickname .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
696,2,train,"Give me the associated musical artist, that is an organisation and a group and a band, of The Boils.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. <http://dbpedia.org/resource/The_Boils> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?artist WHERE {
  VALUES ?boils { dbr:The_Boils }
  
  ?boils dbo:associatedBand ?artist .
  ?artist a ?type .
  
  FILTER (
    (?type = dbo:MusicalArtist) &&
    (?type = dbo:Organization) &&
    (?type = dbo:Group)
  )
}
```",1,4,2,1,1,3,2,20,0,0,2,0,0.0,0
994,16,train,"Give me the band member, that is a band and a group and an organisation, of the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?bandMember WHERE {
  # Find the band associated with Fredrik Thordendal
  ?band a dbo:Band ;
        dbo:member dbr:Fredrik_Thordendal ;
        a dbo:Organization .

  # Find members of that band who are also bands and organizations
  ?bandMember dbo:memberOf ?band ;
              a dbo:Band, dbo:Group, dbo:Organization .
}
```",2,6,3,2,1,3,3,71,0,0,6,0,0.0,0
492,3,train,Give me the author of French Algeria.,SELECT ?result WHERE { <http://dbpedia.org/resource/French_Algeria> <http://dbpedia.org/property/author> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?author ?birthPlace WHERE {
  ?author a dbo:Writer .
  ?author dbo:nationality dbr:French ;
          dbo:birthPlace dbr:Algeria .
  OPTIONAL { ?author foaf:name ?name . }
  FILTER(CONTAINS(LCASE(?name), ""camus""))
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
9,1,train,Give me the alma mater of Allen Hill (scientist).,SELECT ?result WHERE { <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Scientist .
  ?person foaf:name ""Allen Hill"" .
  ?person dbo:almaMater ?almaMater .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
54,4,train,Give me the father of Soe Min Wimala Dewi.,SELECT ?result WHERE { <http://dbpedia.org/resource/Soe_Min_Wimala_Dewi> <http://dbpedia.org/property/father> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?father WHERE {
  ?person a dbo:Person ;
          dbp:name ""Soe Min Wimala Dewi""@en .
  OPTIONAL { ?person dbo:father ?father . }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
492,13,train,"Give me the commander in the war, that is a military conflict and an event, of Frédéric-Georges Herr.",SELECT ?result WHERE { <http://dbpedia.org/resource/Frédéric-Georges_Herr> <http://dbpedia.org/ontology/battle> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?v1 <http://dbpedia.org/ontology/commander> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?war ?commander WHERE {
  ?person a dbo:MilitaryPerson ;
          foaf:name ""Frédéric-Georges Herr""@en .
  
  ?person dbo:participatedIn ?war .

  OPTIONAL { 
    ?war dbo:commander ?commander .
  }
}
```",2,4,3,2,1,3,3,71,0,0,2,0,0.0,0
485,2,train,Give me the entity in Nottinghamshire.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Nottinghamshire> . },"```sparql
SELECT ?entity WHERE {
  ?entity dbo:location dbr:Nottinghamshire .
  FILTER NOT EXISTS { ?entity rdf:type dbo:AdministrativeRegion }
}
```",1,1,2,1,1,2,3,28,0,101,369,0.0,0.0,0
827,10,train,"Who is the child, that is a royalty, of the spouse, that is a royalty, of Princess Pauline of Saxe-Weimar-Eisenach?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/father> ?v0 . ?v0 <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Princess_Pauline_of_Saxe-Weimar-Eisenach> . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?child WHERE {
  ?princess a dbo:Person ;
            foaf:name ""Princess Pauline of Saxe-Weimar-Eisenach""@en .
  
  ?princess dbo:spouse ?spouse .
  ?spouse a dbo:Monarch .

  ?spouse dbo:child ?child .
  ?child a dbo:Monarch .
}
```",2,4,3,2,1,3,2,20,0,0,2,0,0.0,0
142,0,train,Give me the entity in Japan.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity a dbo:Place .
  OPTIONAL { ?entity dbo:country dbr:Japan . }
  FILTER NOT EXISTS { ?entity dbo:country ?otherCountry . FILTER (?otherCountry != dbr:Japan) }
}
ORDER BY ?entity
LIMIT 100",1,1,2,1,1,2,2,9,0,100,8916,0.0,0.0,0
55,2,train,Give me the band of Newsted.,SELECT ?result WHERE { <http://dbpedia.org/resource/Newsted> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?band WHERE {
  ?person a dbo:Musician .
  ?person foaf:name ""Jason Newsted""@en .
  ?person dbo:memberOfBand ?band .
}
```",1,1,2,1,1,2,3,28,0,0,9,0,0.0,0
392,7,train,Give me the province of Schio and entity in Italy.,SELECT ?result WHERE { <http://dbpedia.org/resource/Schio> <http://dbpedia.org/ontology/province> ?result . ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?province ?entity
WHERE {
  ?town dbo:locatedIn ?province .
  ?town rdfs:label ""Schio""@en .
  FILTER (lang(?town) = 'en')
  
  OPTIONAL { ?province dbo:country dbr:Italy . }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
427,13,train,Give me the party of the father of Lamberto Andreotti.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/party> ?result . <http://dbpedia.org/resource/Lamberto_Andreotti> <http://dbpedia.org/property/father> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?fatherPartyLabel WHERE {
  ?lamberto a dbo:Person ;
            foaf:name ""Lamberto Andreotti""@en .
  
  OPTIONAL { ?lamberto dbo:spouse ?spouse . }
  
  ?parent dbo:child ?lamberto ;
          dbo:child ?otherChild .

  FILTER(?otherChild != ?lamberto)

  ?fatherParty a dbo:PoliticalParty ;
               dbo:member ?parent .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,2,3,2,1,3,3,71,0,0,5,0,0.0,0
294,2,train,"Give me the entity in Nashville, Tennessee.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Nashville,_Tennessee .
}
```",1,1,2,1,1,2,3,28,0,0,340,0,0.0,0
303,11,train,"Give me the party of the person born, that is a politician, as Arnulfo Arias Madrid.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/birthName> ""Arnulfo Arias Madrid""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?v1 <http://dbpedia.org/ontology/party> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party WHERE {
  # Find Arnulfo Arias Madrid in DBpedia
  dbr:Arnulfo_Arias_Madrid a dbo:Politician .
  
  # Get the political party associated with him
  OPTIONAL { 
    dbr:Arnulfo_Arias_Madrid dbo:politicalParty ?party .
  }
}
```",2,3,3,2,1,2,3,28,0,0,1,0,0.0,0
767,9,train,Give me the alma mater of Carl L. Nippert and entity in Baden-Württemberg.,SELECT ?result WHERE { <http://dbpedia.org/resource/Carl_L._Nippert> <http://dbpedia.org/ontology/almaMater> ?result . ?result <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Baden-Württemberg> . },"# Query to find the alma mater of Carl L. Nippert
SELECT ?almaMater WHERE {
  ?person dbo:name ""Carl L. Nippert""@en .
  ?person dbo:almaMater ?almaMater .
}

UNION

# Query to find entities in Baden-Württemberg
SELECT ?entity WHERE {
  ?entity dbp:location dbr:Baden-Württemberg .
}
UNION
{
  ?entity rdf:type dbo:Place .
  ?entity dbo:country dbr:Germany ;
          dbo:stateOrProvince dbr:Baden-Württemberg .
}",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
488,8,train,Who is the father of Emperor Go-Mizunoo?,SELECT ?result WHERE { <http://dbpedia.org/resource/Emperor_Go-Mizunoo> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q123456 wdt:P22 ?father .
}
```

In this query:
- Replace `wd:Q123456` with the actual DBpedia entity ID for Emperor Go-Mizunoo. You can find this by searching DBpedia or using a tool like Wikidata to get the correct Q number.",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
838,8,train,"Give me the band member of the band, that is a group, of YU Grupa.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>. <http://dbpedia.org/resource/YU_Grupa> <http://dbpedia.org/ontology/associatedMusicalArtist> ?v0 . },"```sparql
SELECT ?member WHERE {
  ?band dbr:YU_Grupa ;
        dbo:bandMember ?member .
}
```",2,3,3,2,1,3,2,20,0,0,40,0,0.0,0
801,17,train,"Give me the writer, that is a musical artist and an artist, of the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>. ?v1 <http://dbpedia.org/property/writer> ?result . <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. },"```sparql
SELECT ?writer WHERE {
  ?album dcterms:title ""What U See Is What U Get"" ;
         dbo:artist ?artist .
  ?artist a dbo:MusicalArtist ;
          foaf:name ?name .
  ?artist dbo:worksForCreativeWork ?work .
  ?work a dbo:MusicalWork .

  OPTIONAL {
    ?artist dbo:occupation ""musician""@en.
  }
  
  FILTER EXISTS { 
    ?artist dbo:occupation ""artist""@en
  }

  ?writer dbo:worksForCreativeWork ?album ;
          foaf:name ?name .
}
```",2,6,3,2,1,3,3,71,0,0,12,0,0.0,0
48,4,train,Give me the show with Stacey Dash.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Stacey_Dash> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?show WHERE {
  ?actor dbo:birthName ""Stacey Dash"" .
  ?actor dbo:film dbp:starring ?show .
  FILTER (isLiteral(?show))
}
```",1,1,2,1,1,3,2,20,0,0,18,0,0.0,0
378,10,train,"Give me the claim to fame of Louis des Balbes de Berton de Crillon, 1st Duke of Mahón and war of Carl Pontus Gahn.","SELECT ?result WHERE { <http://dbpedia.org/resource/Louis_des_Balbes_de_Berton_de_Crillon,_1st_Duke_of_Mahón> <http://dbpedia.org/ontology/knownFor> ?result . <http://dbpedia.org/resource/Carl_Pontus_Gahn> <http://dbpedia.org/ontology/battle> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?claimToFame WHERE {
  VALUES (?person ?label) {
    (dbr:Louis_des_Balbes_de_Berton_de_Crillon_1st_Duke_of_Mahón ""Louis des Balbes de Berton de Crillon, 1st Duke of Mahón"")
    (dbr:Carl_Pontus_Gahn ""Carl Pontus Gahn"")
  }
  
  ?person dbo:knownFor ?claimToFame .
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
328,17,train,"Give me the office, that is a government agency, of the leader, that is an office holder and a politician, of Gustav Jonson.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Gustav_Jonson> <http://dbpedia.org/property/leader> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>. ?v1 <http://dbpedia.org/property/office> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?office WHERE {
  # Find Gustav Jonson
  ?gustavJonson a dbo:Person ;
                foaf:name ""Gustav Jonson""@en .

  # Identify his leadership role as an office holder and politician
  ?role dbo:positionHeldBy ?gustavJonson ;
        a dbo:OfficeHolder ;
        dbo:office ?office .
  
  # Ensure the office is a government agency
  ?office a dbo:GovernmentAgency .
}
```

This query does the following:
- It identifies Gustav Jonson as a person.
- It looks for roles where he is an office holder and politician.
- It checks if the associated office is classified as a government agency.",2,5,3,2,1,3,3,71,0,0,1,0,0.0,0
339,4,train,Who is the parent of Princess Olga of Greece and Denmark?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Princess_Olga_of_Greece_and_Denmark> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  dbr:Princess_Olga_of_Greece_and_Denmark dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,2,0,0,1.0,1.0,1.0
701,16,train,Give me the child of the child of Seti I.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://dbpedia.org/property/father> <http://dbpedia.org/resource/Seti_I> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?grandchild WHERE {
  ?setiI dbo:spouse ?wife .
  ?setiI dbo:child ?child1 .
  ?child1 dbo:child ?grandchild .
}
```",2,2,3,2,1,3,3,71,0,9746,8,0.0,0.0,0
996,6,train,Give me the entity in France and force of Dagobert Sigmund von Wurmser.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Dagobert_Sigmund_von_Wurmser> . ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/France> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entityInFrance ?militaryForce WHERE {
  # Find the DBpedia resource for Dagobert Sigmund von Wurmser
  VALUES ?wurmser { dbr:Dagobert_Sigmund_von_Wurmser }
  
  # Get his military rank or command (force)
  OPTIONAL { 
    ?wurmser dbo:militaryRank ?militaryForce .
  }

  # Find entities related to France, assuming a property like 'dbo:birthPlace' or similar
  OPTIONAL {
    ?wurmser dbo:birthPlace ?entityInFrance .
    FILTER(CONTAINS(LCASE(STR(?entityInFrance)), ""france""))
  }
}
```",2,2,3,1,2,3,2,20,0,0,4,0,0.0,0
492,10,train,Give me the person decedent at French Algeria and person decedent at Algiers.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Algiers> . ?result <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/French_Algeria> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  # Individuals who died in French Algeria
  {
    ?person a dbo:Person ;
            dbo:deathPlace dbr:French_Algeria .
    OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
  }

  UNION

  # Individuals who died specifically in Algiers
  {
    ?person a dbo:Person ;
            dbo:deathPlace dbr:Algiers .
    OPTIONAL { ?person rdfs:label ?name FILTER (lang(?name) = 'en') }
  }
}
ORDER BY ?name
LIMIT 100",2,2,3,1,2,3,3,71,11,167,5,0.06179775280898876,0.6875,0.1134020618556701
421,6,train,Give me the band member of Senidah and native of Socialist Federal Republic of Yugoslavia.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Socialist_Federal_Republic_of_Yugoslavia> . ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Senidah> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?member WHERE {
  # Find Senidah's resource
  dbr:Senidah dbo:bandMember ?member .
  
  # Check if the member is native of SFRY
  OPTIONAL { ?member dbo:nationality dbr:Socialist_Federal_Republic_of_Yugoslavia . }
}
```

This query does the following:
- It starts by identifying Senidah's resource in DBpedia.
- It looks for any band members associated with her using the `dbo:bandMember` property.
- It then checks if these members have a nationality linked to SFRY.

Note that this assumes there is a direct link between Senidah and her band members, and that such members' nationalities are recorded in DBpedia. Adjustments might be necessary based on actual data availability and structure in DBpedia.",2,2,3,1,2,2,3,28,0,0,2,0,0.0,0
487,4,train,Give me the birth name of Phil Scott.,SELECT ?result WHERE { <http://dbpedia.org/resource/Phil_Scott> <http://dbpedia.org/property/birthName> ?result . },"```sparql
SELECT ?birthName WHERE {
  wd:Q123456 wdt:P735 ?birthName .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia resource identifier for Phil Scott. You can find this by searching for Phil Scott on DBpedia or using a SPARQL endpoint to query for his resource.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
827,3,train,"Who is the child, that is a royalty, of Grand Duchess Maria Pavlovna of Russia (1786–1859)?",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Grand_Duchess_Maria_Pavlovna_of_Russia_(1786–1859)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child ?title WHERE {
  # Find Maria Pavlovna of Russia
  ?mariaPavlovna a dbo:Person ;
                 foaf:name ""Maria Pavlovna of Russia""@en ;
                 dbo:birthYear ""1786""^^xsd:gYear ;
                 dbo:deathYear ""1859""^^xsd:gYear .

  # Find her children who are royalty
  ?mariaPavlovna dbo:child ?child .
  ?child a dbo:Person ;
         dbo:title ?title .
  
  FILTER EXISTS { ?title dbo:isPartOf dbr:Royal_Titles }
}
```",1,2,2,1,1,3,2,20,0,0,2,0,0.0,0
435,9,train,"Give me the region of Greenwich Mean Time and work of Article 62, Section IV of Constitution of Iceland.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/author> ""Article 62, Section IV of Constitution of Iceland""@en . ?result <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Greenwich_Mean_Time> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?region ?articleContent WHERE {
  # Query for the region associated with Greenwich Mean Time
  OPTIONAL {
    dbr:Greenwich_Mean_Time dbo:location dbr:?region .
    BIND(dbo:location AS ?region)
  }

  # Query for Article 62, Section IV of the Constitution of Iceland
  OPTIONAL {
    dbr:Constitution_of_Iceland dbo:textContent ?articleText .
    FILTER(CONTAINS(LCASE(?articleText), ""article 62 section iv""))
    BIND(?articleText AS ?articleContent)
  }
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
488,12,train,Give me the administration of Emperor Go-Yōzei and death place of Tokugawa Ieyasu.,SELECT ?result WHERE { <http://dbpedia.org/resource/Tokugawa_Ieyasu> <http://dbpedia.org/ontology/deathPlace> ?result . ?result <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Emperor_Go-Yōzei> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?administrationPeriod ?deathPlace
WHERE {
  # Administration period of Emperor Go-Yōzei
  dbr:Emperor_Go-Yōzei dbo:reign ?administrationPeriod .
  
  # Death place of Tokugawa Ieyasu
  dbr:Tokugawa_Ieyasu dbo:deathPlace ?deathPlace .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
666,2,train,"Give me the team, that is a soccer club and a sports team season, of Leonid Slutsky (football coach).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeamSeason>. ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Leonid_Slutsky_(football_coach)> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?team ?season
WHERE {
  # Identify Leonid Slutsky as a football coach
  dbr:Leonid_Slutsky dbo:coach ?team .
  
  # Filter for soccer clubs and sports teams
  ?team rdf:type ?type .
  FILTER (
    ?type = dbo:SoccerClub || 
    ?type = dbo:SportsTeamSeason
  )
  
  OPTIONAL {
    ?team dbo:sportSeason ?season .
  }
}
```",1,3,2,1,1,3,2,20,0,0,3,0,0.0,0
767,8,train,Give me the alter ego of Black Hood.,SELECT ?result WHERE { <http://dbpedia.org/resource/Black_Hood> <http://dbpedia.org/property/alterEgo> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  VALUES ?character { dbr:Black_Hood }
  ?character dbo:alterEgo ?alterEgo .
}
```

This query looks for the `dbo:alterEgo` property of the ""Black Hood"" character in DBpedia.",1,1,2,1,1,3,3,71,0,0,5,0,0.0,0
9,9,train,"Give me the alma mater of Allen Hill (scientist) and alma mater of John Alderdice, Baron Alderdice.","SELECT ?result WHERE { <http://dbpedia.org/resource/John_Alderdice,_Baron_Alderdice> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Allen_Hill_(scientist)> <http://dbpedia.org/ontology/almaMater> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name ?almaMater
WHERE {
  VALUES (?person ?name) {
    (dbr:Allen_Hill_(scientist) ""Allen Hill"") 
    (dbr:John_Alderdice_Baron_Alderdice ""John Alderdice, Baron Alderdice"")
  }
  
  ?person dbo:name ?name .
  OPTIONAL { ?person dbo:almaMater ?almaMater . }
}
ORDER BY ?person",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
281,1,train,Give me the entity in Colony of New Zealand.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Colony_of_New_Zealand> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity ?label WHERE {
  ?entity dbo:wikiPageRedirects dbr:Colony_of_New_Zealand .
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
179,8,train,Give me the parent of the child of Bhumibol Adulyadej.,SELECT ?result WHERE { <http://dbpedia.org/resource/Bhumibol_Adulyadej> <http://dbpedia.org/ontology/child> ?v0 . ?v0 <http://dbpedia.org/ontology/parent> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?parent WHERE {
  # Step 1: Identify Bhumibol Adulyadej
  ?bhumibol a dbo:Person ;
            foaf:name ""Bhumibol Adulyadej""@en .

  # Step 2: Find his children
  ?child dbo:spouse|dbo:partner ?bhumibol ;
         a dbo:Person .

  # Step 3: For each child, find their parents
  ?child dbo:parent ?parent .
}
```",2,2,3,2,1,3,2,20,0,2,3,0.0,0.0,0
142,6,train,Give me the birthplace of the actor of Papa wa Newscaster.,SELECT ?result WHERE { <http://dbpedia.org/resource/Papa_wa_Newscaster> <http://dbpedia.org/ontology/starring> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  ?actor a dbo:Actor ;
         foaf:name ""Masaharu Fukuyama""@en .
  OPTIONAL { ?actor dbo:birthPlace ?birthPlace . }
}
```",2,2,3,2,1,2,2,9,0,0,3,0,0.0,0
778,8,train,"Give me the author of the work, that is a software, of Bill Joy.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Bill_Joy> . ?v0 <http://dbpedia.org/ontology/author> ?result . ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>. },"```sparql
SELECT ?software WHERE {
  ?work dcterms:creator ?author .
  ?work rdf:type dbo:Software .
  ?author foaf:name ""Bill Joy"" .
}
```",2,3,3,2,1,3,2,20,0,0,2,0,0.0,0
378,8,train,Who is the commander in Great Siege of Gibraltar?,SELECT ?result WHERE { <http://dbpedia.org/resource/Great_Siege_of_Gibraltar> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?event dbo:wikiPageID ""Great_Siege_of_Gibraltar"" .
  ?event dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,7,0,0.0,0
360,10,train,"Give me the native of the death place, that is a settlement, of Winnie Madikizela-Mandela.",SELECT ?result WHERE { <http://dbpedia.org/resource/Winnie_Madikizela-Mandela> <http://dbpedia.org/ontology/deathPlace> ?v1 . ?result <http://dbpedia.org/ontology/birthPlace> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  # Step 1: Identify Winnie Madikizela-Mandela's resource
  dbr:Winnie_Madikizela-Mandela dbo:placeOfBirth ?birthPlace .
  
  # Step 2: Find her place of death
  dbr:Winnie_Madikizela-Mandela dbo:deathPlace ?deathPlace .

  # Step 3: Ensure the death place is a settlement
  ?deathPlace rdf:type dbo:Settlement .

  # Step 4: Retrieve the native place associated with this settlement
  ?deathPlace dbo:nativeName ?nativePlace .
}
```",2,3,3,2,1,2,3,28,0,0,1099,0,0.0,0
391,0,train,"Give me the native of Compton, California.","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Compton,_California> . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person dbo:birthPlace dbr:Compton_(California) .
  ?person rdfs:label ?name .
  FILTER (LANG(?name) = 'en')
}
```",1,1,2,1,1,3,3,71,0,0,97,0,0.0,0
534,0,train,Give me the birth place of Garret FitzGerald.,SELECT ?result WHERE { <http://dbpedia.org/resource/Garret_FitzGerald> <http://dbpedia.org/ontology/birthPlace> ?result . },"```sparql
SELECT ?birthPlace WHERE {
  wd:Q12345 foaf:bornIn ?birthPlace .
}
```

Note: Replace `wd:Q12345` with the actual DBpedia identifier for Garret FitzGerald. You can find this by searching for his name on DBpedia or using a SPARQL endpoint to query for his identifier.",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
528,10,train,Give me the force of Narciso Campero and war of Irene Morales.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . <http://dbpedia.org/resource/Irene_Morales> <http://dbpedia.org/ontology/battle> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?narcisoRole ?warName ?ireneAssociation WHERE {
  # Narciso Campero's military role and associated war
  OPTIONAL {
    dbr:Narciso_Campero dbo:militaryRank ?narcisoRole .
    ?narcisoRole dbo:participatedIn ?war .
    ?war rdfs:label ?warName .
    FILTER (lang(?warName) = 'en')
  }

  # Irene Morales' association with any conflict
  OPTIONAL {
    dbr:Irene_Morales dbo:associatedWith ?conflict .
    ?conflict rdfs:label ?ireneAssociation .
    FILTER (lang(?ireneAssociation) = 'en')
  }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
303,3,train,"Who is the commander, that is a politician, in United States invasion of Panama?",SELECT ?result WHERE { <http://dbpedia.org/resource/United_States_invasion_of_Panama> <http://dbpedia.org/ontology/commander> ?result . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?commander WHERE {
  ?operation dbo:participatedIn [
    a dbo:MilitaryOperation ;
    dbo:location dbr:Panama ;
    dbo:date ""1989-12""^^xsd:gYearMonth
  ] .
  
  ?operation dbo:commandedBy ?commander .
  
  ?commander rdf:type dbo:Politician .
}
```",1,2,2,1,1,2,3,28,0,0,6,0,0.0,0
492,7,train,Give me the country of Khemis Miliana District.,SELECT ?result WHERE { <http://dbpedia.org/resource/Khemis_Miliana_District> <http://dbpedia.org/ontology/country> ?result . },"```sparql
SELECT ?country WHERE {
  wd:Q1105017 wdt:P17 ?country .
}
```",1,1,2,1,1,3,3,71,0,0,1,0,0.0,0
427,9,train,Give me the reference to Partito Popolare Italiano and party of Giulio Andreotti.,"SELECT ?result WHERE { ?result <http://xmlns.com/foaf/0.1/name> ""Partito Popolare Italiano""@en . <http://dbpedia.org/resource/Giulio_Andreotti> <http://dbpedia.org/ontology/party> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?party ?andreottiParty WHERE {
  # Find the Partito Popolare Italiano
  VALUES ?ppi { dbr:Partito_Popolare_Italiano }
  
  # Get political parties associated with Giulio Andreotti
  OPTIONAL {
    ?andreotti dbo:politicalAffiliation ?andreottiParty .
    FILTER(?andreotti = dbr:Giulio_Andreotti)
  }

  # Check if the PPI is one of the parties associated with Andreotti
  OPTIONAL {
    VALUES ?party { ?ppi }
    ?party a dbo:PoliticalParty .
  }
}
```

This query does the following:
- It identifies the Partito Popolare Italiano using its DBpedia resource.
- It retrieves any political affiliations of Giulio Andreotti.
- It checks if the PPI is among those affiliations.",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
9,11,train,"Give me the alma mater of the mayor, that is a politician, of Northern Ireland Forum.",SELECT ?result WHERE { ?v0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. <http://dbpedia.org/resource/Northern_Ireland_Forum> <http://dbpedia.org/property/leader> ?v0 . ?v0 <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?almaMater WHERE {
  ?person a dbo:Politician ;
          dbo:officeHolderOf dbr:Northern_Ireland_Forum ;
          dbo:almaMater ?almaMater .
}
```

This query assumes:
- The mayor is listed as an office holder of the Northern Ireland Forum.
- The person is categorized under `dbo:Politician`.
- The alma mater information is available in the DBpedia dataset.

Please note that this query might need adjustments based on the actual data structure and availability in DBpedia. If specific names or additional identifiers are known, they can be included to refine the search further.",2,3,3,2,1,3,3,71,0,0,6,0,0.0,0
427,4,train,Give me the name of Italian People's Party (1994).,SELECT ?result WHERE { <http://dbpedia.org/resource/Italian_People's_Party_(1994)> <http://xmlns.com/foaf/0.1/name> ?result . },"```sparql
SELECT ?name WHERE {
  ?party a dbo:PoliticalParty ;
         foaf:name ""Italian People's Party (1994)""@en ;
         dbo:foundingDate ?foundingDate .
  
  OPTIONAL { 
    ?party rdfs:label ?name .
    FILTER(LANG(?name) = 'it')
  }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
182,2,train,Give me the entity in Sri Lanka.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sri_Lanka> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?entity dbo:location dbr:Sri_Lanka .
}
```",1,1,2,1,1,2,3,28,0,343,62,0.0,0.0,0
528,2,train,Give me the force of Narciso Campero.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Narciso_Campero> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?property ?hasValue
WHERE {
  VALUES ?resource { dbr:Narciso_Campero }
  ?resource ?property ?hasValue .
}
```

This query retrieves all properties and their values associated with the resource for Narciso Campero in DBpedia.",1,1,2,1,1,3,3,71,0,0,4,0,0.0,0
645,9,train,"Give me the residence, that is a country, of the commander in Battle of Diamond Rock.",SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/residence> ?result . <http://dbpedia.org/resource/Battle_of_Diamond_Rock> <http://dbpedia.org/ontology/commander> ?v0 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?residence WHERE {
  ?battle dbo:commander dbr:Alexander_Cochrane .
  ?battle rdfs:label ""Battle of Diamond Rock""@en .
  ?cochrane dbo:nationality ?nationality .
  ?nationality dbo:country ?residence .
}
```

This query does the following:
- Identifies the battle with Alexander Cochrane as a commander.
- Links Cochrane to his nationality.
- Retrieves the country associated with that nationality, which serves as his residence.",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
801,4,train,Give me the alter ego of The Shadow.,SELECT ?result WHERE { <http://dbpedia.org/resource/The_Shadow> <http://dbpedia.org/property/alterEgo> ?result . },"```sparql
SELECT ?alterEgo WHERE {
  wd:Q1234568 wdt:P136 ?alterEgo .
}
```

Note: In this query, `wd:Q1234568` should be replaced with the actual DBpedia resource identifier for ""The Shadow"". You can find this by searching DBpedia or using a SPARQL endpoint to look up the entity.",1,1,2,1,1,3,3,71,0,0,3,0,0.0,0
547,15,train,Give me the child of the child of William Haliburton.,"SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/father> ""William Haliburton""@en . ?v1 <http://dbpedia.org/ontology/child> ?result . }","PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?grandchild WHERE {
  ?williamHaliburton rdfs:label ""William Haliburton""@en .
  ?williamHaliburton dbo:child ?child .
  ?child dbo:child ?grandchild .
}
```

This query does the following:
- It looks for a resource with the label ""William Haliburton"" in English.
- It finds all children of William Haliburton using the `dbo:child` property.
- For each child, it finds their children (the grandchildren of William Haliburton).",2,2,3,2,1,3,3,71,0,0,3,0,0.0,0
10,0,train,Give me the associated musical artist of Matt Colton.,SELECT ?result WHERE { <http://dbpedia.org/resource/Matt_Colton> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
SELECT ?artist WHERE {
  wd:Q1234568 wdt:P106 wd:Q33999 . # Matt Colton is a sound engineer (P106)
  ?artist wdt:P112 wd:Q1234568 .    # Associated with artist (P112)
}
```

Note: Replace `wd:Q1234568` with the actual DBpedia identifier for Matt Colton. You can find this by searching his name on DBpedia or using a SPARQL endpoint to query for it.",1,1,2,1,1,2,3,28,0,0,4,0,0.0,0
528,6,train,Give me the commander in Battle of La Rinconada de Ate.,SELECT ?result WHERE { <http://dbpedia.org/resource/Battle_of_La_Rinconada_de_Ate> <http://dbpedia.org/ontology/commander> ?result . },"```sparql
SELECT ?commander WHERE {
  ?battle dbo:wikiPageID ""Battle_of_La_Rinconada_de_Ate"" .
  ?battle dbo:commander ?commander .
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
294,7,train,"Give me the entity in Nashville, Tennessee and resting place of Luke Lea (American politician, born 1879).","SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Nashville,_Tennessee> . <http://dbpedia.org/resource/Luke_Lea_(American_politician,_born_1879)> <http://dbpedia.org/ontology/restingPlace> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?entity WHERE {
  ?person a dbo:Politician ;
          foaf:name ""Luke Lea"" ;
          dbo:birthDate ?birthDate .
  
  FILTER (YEAR(?birthDate) = 1879)
  
  ?person dbo:deathPlace ?place .
  
  ?place dbo:locationCity dbr:Nashville,_Tennessee .

  ?entity dbo:burialPlace ?place .
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
754,8,train,Give me the parent of the child of Ram Khamhaeng.,SELECT ?result WHERE { <http://dbpedia.org/resource/Ram_Khamhaeng> <http://dbpedia.org/ontology/child> ?v0 . ?result <http://dbpedia.org/ontology/child> ?v0 . },"```sparql
SELECT DISTINCT ?parent WHERE {
  ?child dbo:spouse|dbo:childOf|dbo:parent RamKhamhaeng .
  ?child dbo:spouse|dbo:childOf|dbo:parent ?parent .
}
```

This query does the following:
- It looks for entities (`?child`) that are either a spouse, child, or parent of Ram Khamhaeng.
- For each such `?child`, it finds their parents (`?parent`).
- The `DISTINCT` keyword ensures that we only get unique parent entries.",2,2,3,2,1,3,2,20,0,0,1,0,0.0,0
54,1,train,Give me the parent of Thado Minsaw of Prome.,SELECT ?result WHERE { <http://dbpedia.org/resource/Thado_Minsaw_of_Prome> <http://dbpedia.org/ontology/parent> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  ?person a dbo:Monarch ;
          foaf:name ""Thado Minsaw""@en .
  OPTIONAL { ?person dbo:father ?parent . }
  OPTIONAL { ?person dbo:mother ?parent . }
}
```",1,1,2,1,1,3,3,71,0,0,2,0,0.0,0
360,9,train,Give me the native of Johannesburg and reference to Manfred Mann.,"SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Johannesburg> . ?result <http://xmlns.com/foaf/0.1/name> ""Manfred Mann""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthPlace ?association
WHERE {
  ?person dbo:nativePlace dbr:Johannesburg .
  OPTIONAL { ?person dbo:associatedBand dbr:Manfred_Mann . }
  BIND(dbr:Johannesburg AS ?birthPlace)
}
```",2,2,3,1,2,2,3,28,0,0,1,0,0.0,0
645,5,train,Give me the child of Richard Pankhurst.,SELECT ?result WHERE { <http://dbpedia.org/resource/Richard_Pankhurst> <http://dbpedia.org/ontology/child> ?result . },"```sparql
SELECT ?child WHERE {
  wd:Q123456 wdt:P40 ?child .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Richard Pankhurst. You can find this by searching for ""Richard Pankhurst"" on DBpedia or using a SPARQL endpoint to query his identifier.",1,1,2,1,1,3,2,20,0,0,3,0,0.0,0
161,6,train,"Give me the force, that is a societal event and a military conflict, of Francisco Largo Caballero.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Francisco_Largo_Caballero> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SocietalEvent>. },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?event WHERE {
  # Identify Francisco Largo Caballero's resource in DBpedia
  dbr:Francisco_Largo_Caballero 
    dbo:spouse ?person . 

  # Find events related to him that are either societal or military conflicts
  OPTIONAL { ?person dbo:memberOf ?organization } .
  OPTIONAL { ?event dbo:wikiPageRedirects ?redirect } .

  FILTER EXISTS {
    ?event a ?type .
    VALUES ?type { 
      dbr:Societal_event 
      dbr:Military_conflict 
    }
  }

  # Ensure the event is related to Francisco Largo Caballero
  OPTIONAL { ?person dbo:wikiPageDisambiguates ?disambiguation } .
  FILTER EXISTS {
    ?event dbo:wikiPageRedirects ?redirect ;
           dbo:wikiPageDisambiguates dbr:Francisco_Largo_Caballero .
  }
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
251,2,train,Give me the death place of Laura Mancinelli.,SELECT ?result WHERE { <http://dbpedia.org/resource/Laura_Mancinelli> <http://dbpedia.org/ontology/deathPlace> ?result . },"```sparql
SELECT ?deathPlace WHERE {
  wd:Q123456 wdt:P20 ?deathPlace .
}
```

Note: Replace `wd:Q123456` with the actual DBpedia identifier for Laura Mancinelli. You can find this by searching her name on DBpedia or using a SPARQL query to retrieve it.",1,1,2,1,1,2,3,28,0,0,3,0,0.0,0
314,0,train,Give me the person deceased at Madrid.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?name WHERE {
  ?person a dbo:Person .
  ?person dbo:deathPlace dbr:Madrid .
  OPTIONAL { ?person foaf:name ?name . }
}
```

This query does the following:
- It selects individuals (`?person`) who are of type `dbo:Person`.
- It checks if their death place is Madrid (`dbr:Madrid`).
- It optionally retrieves their name using the `foaf:name` property, which might not be available for all entries.",1,1,2,1,1,2,3,28,0,0,20,0,0.0,0
391,14,train,"Give me the actor of the movie, that is a movie and a work and a television show, with Roz Ryan.",SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>. ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?v1 <http://dbpedia.org/property/starring> ?result . ?v1 <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Roz_Ryan> . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?actor WHERE {
  ?movie a dbo:Film ;
         a dbo:CreativeWork ;
         a dbo:TelevisionShow .
  
  ?castMember dbo:characterName ?role ;
              dbo:actor ?actor ;
              dbo:film ?movie .

  ?rozRole dbo:actor dbr:Roz_Ryan ;
           dbo:film ?movie .

}
```

This query does the following:
- It selects entities that are classified as a `Film`, `CreativeWork`, and `TelevisionShow`.
- It retrieves actors (`?actor`) associated with these movies.
- It ensures that Roz Ryan is part of the cast for the same movie.",2,5,3,2,1,3,3,71,0,0,5,0,0.0,0
712,7,train,Give me the capital of the country of Armed Forces of South Russia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Armed_Forces_of_South_Russia> <http://dbpedia.org/ontology/country> ?v1 . ?v1 <http://dbpedia.org/ontology/capital> ?result . },"```sparql
SELECT ?capital WHERE {
  wd:Q38 wdt:P36 ?capital .
}
```

This query retrieves the capital city of Ukraine (Kyiv) from DBpedia.",2,2,3,2,1,3,2,20,0,0,3,0,0.0,0
312,2,train,"Give me the administration, that is a settlement and a region and Italian and a state, of Democratic Party (Italy).",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Italy>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>. ?result <http://dbpedia.org/property/leaderParty> <http://dbpedia.org/resource/Democratic_Party_(Italy)> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?administration ?type WHERE {
  # Find the Democratic Party in Italy
  VALUES ?party { dbr:Democratic_Party_(Italy) }
  
  # Link to administrations it is involved with
  ?party dbo:hasMember ?member .
  ?member dbo:officeHolderOf ?administration .

  # Filter by type of administration (settlement, region, state)
  ?administration a ?type .
  FILTER (
    (?type = dbo:City || 
     ?type = dbo:Region ||
     ?type = dbo:State) &&
    EXISTS { ?administration dbo:country dbr:Italy }
  )
  
  # Ensure the administration is Italian
  OPTIONAL { ?administration rdfs:label ?label . FILTER (lang(?label) = ""it"") }
}
ORDER BY ?administration",1,5,2,1,1,2,2,9,0,0,14,0,0.0,0
801,9,train,Give me the producer of Westside Story (song) and professional in .,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> """"@en . <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?producer ?otherRole
WHERE {
  # Find the song ""West Side Story""
  dbr:West_Side_Story_(song) dbo:producer ?producer .

  # Get other professional roles of the producer
  OPTIONAL { ?producer dbo:occupation ?otherRole . }
}
```",2,2,3,1,2,3,3,71,0,0,2,0,0.0,0
404,15,train,"Who is the person born, that is a royalty, as the birth name of Princess Victoria Louise of Prussia?",SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Victoria_Louise_of_Prussia> <http://dbpedia.org/property/birthName> ?v1 . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. ?result <http://dbpedia.org/property/birthName> ?v1 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthName WHERE {
  dbr:Princess_Victoria_Louise_of_Prussia dbo:birthName ?birthName .
}
```",2,3,3,2,1,3,3,71,0,0,1,0,0.0,0
294,10,train,Give me the resting place of the architect of P. D. Houston Jr. House.,SELECT ?result WHERE { ?v1 <http://dbpedia.org/ontology/restingPlace> ?result . <http://dbpedia.org/resource/P._D._Houston_Jr._House> <http://dbpedia.org/ontology/architect> ?v1 . },"```sparql
SELECT ?architect ?restingPlace WHERE {
  # Find the architect of P. D. Houston Jr. House
  ?house dbo:architect ?architect .
  ?house rdfs:label ""P. D. Houston Jr. House""@en .

  OPTIONAL {
    # Get the resting place of the architect
    ?architect dbo:placeOfBurial ?restingPlace .
  }
}
```",2,2,3,2,1,2,3,28,0,1,1,0.0,0.0,0
339,1,train,Give me the father of Princess Elizabeth of Greece and Denmark.,SELECT ?result WHERE { <http://dbpedia.org/resource/Princess_Elizabeth_of_Greece_and_Denmark> <http://dbpedia.org/property/father> ?result . },"```sparql
SELECT ?father WHERE {
  wd:Q11150 wdt:P22 ?father .
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
963,3,train,"Give me the region, that is a country, of Central European Time.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Central_European_Time> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?country WHERE {
  ?country a dbo:Country .
  ?country dbo:timeZone dbr:Central_European_Time ;
           rdfs:label ?label .
  FILTER (lang(?label) = 'en')
}
ORDER BY ?label
```",1,2,2,1,1,3,2,20,52,42,4,0.5531914893617021,0.9285714285714286,0.6933333333333335
820,5,train,Who is the parent of Jason Schwartzman?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Jason_Schwartzman> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?parent WHERE {
  VALUES ?person { dbr:Jason_Schwartzman }
  ?person dbo:parent ?parent .
}
```",1,1,2,1,1,3,2,20,0,0,2,0,0.0,0
994,5,train,"Give me the band, that is an organisation, of Fredrik Thordendal.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. ?result <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Fredrik_Thordendal> . },"```sparql
SELECT ?band WHERE {
  ?person foaf:name ""Fredrik Thordendal""@en .
  ?person dbo:memberOf ?band .
  ?band a dbo:Band ;
        dbo:type dbr:Musical_group .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
617,0,train,Give me the child of Doubravka of Bohemia.,SELECT ?result WHERE { <http://dbpedia.org/resource/Doubravka_of_Bohemia> <http://dbpedia.org/ontology/child> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?child WHERE {
  ?person dbo:spouse ?doubravka .
  ?doubravka foaf:name ""Doubravka of Bohemia""@en ;
             dbo:spouse ?person .
  OPTIONAL { ?person dbo:child ?child . }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
16,9,train,Give me the professional in Actress and spouse of Ted McGinley.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/occupation> ""Actress""@en . <http://dbpedia.org/resource/Ted_McGinley> <http://dbpedia.org/ontology/spouse> ?result . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?actress WHERE {
  ?person dbo:spouse dbr:Ted_McGinley .
  ?person rdf:type dbo:Actress .
  ?person foaf:name ?actress .
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
915,9,train,"Give me the birthplace, that is a settlement, of the director of Pipe Dreams (1976 film).",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>. <http://dbpedia.org/resource/Pipe_Dreams_(1976_film)> <http://dbpedia.org/ontology/director> ?v0 . ?v0 <http://dbpedia.org/ontology/birthPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find the director of the film ""Pipe Dreams""
  ?film dbo:director ?director .
  
  # Specify the film
  VALUES ?film { dbr:Pipe_Dreams_(1976_film) }
  
  # Get the birthplace of the director
  ?director dbo:birthPlace ?birthPlace .

  # Ensure the birthplace is a settlement
  ?birthPlace rdf:type dbo:Settlement .
}
```",2,3,3,2,1,3,2,20,0,0,1,0,0.0,0
115,4,train,Give me the alma mater of Vladimir Cerrón and alma mater of Jorge Sotomayor Tello.,SELECT ?result WHERE { <http://dbpedia.org/resource/Jorge_Sotomayor_Tello> <http://dbpedia.org/ontology/almaMater> ?result . <http://dbpedia.org/resource/Vladimir_Cerrón> <http://dbpedia.org/ontology/almaMater> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?almaMater WHERE {
  VALUES ?person { 
    dbr:Vladimir_Cerrón 
    dbr:Jorge_Sotomayor_Tello
  }
  
  OPTIONAL {
    ?person dbo:almaMater ?almaMater.
  }
}
```

This query uses the `dbo:almaMater` property to find the educational institutions associated with each person. The `VALUES` clause specifies the individuals of interest, and the `OPTIONAL` block ensures that even if one or both do not have an alma mater listed, the query will still return results for any available data.",2,2,3,1,2,2,2,9,0,0,1,0,0.0,0
184,4,train,Give me the native of Budapest.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Budapest> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?language WHERE {
  dbr:Budapest dbo:nativeLanguage ?language .
}
```",1,1,2,1,1,3,3,71,0,0,2751,0,0.0,0
801,7,train,"Give me the album, that is a musical work and a work, of What U See Is What U Get.",SELECT ?result WHERE { ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>. <http://dbpedia.org/resource/What_U_See_Is_What_U_Get> <http://dbpedia.org/ontology/album> ?result . },"```sparql
SELECT ?album WHERE {
  ?album dcterms:title ""What U See Is What U Get"" .
  ?album a dbo:Album .
}
```",1,3,2,1,1,3,3,71,0,0,1,0,0.0,0
427,5,train,Who is the alumnus of Massachusetts Institute of Technology?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Massachusetts_Institute_of_Technology> . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:Massachusetts_Institute_of_Technology .
}
```

This query selects individuals (`?alumnus`) who have MIT as their alma mater. The `dbo:almaMater` property is used to link people to the institutions they attended.",1,1,2,1,1,3,3,71,0,0,1559,0,0.0,0
16,12,train,Give me the professional in Actress and person born as Georgeanne Marie Rice.,"SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Georgeanne Marie Rice""@en . ?result <http://dbpedia.org/property/occupation> ""Actress""@en . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?actor ?birthName ?profession WHERE {
  ?actor a dbo:Actor ;
         dbp:birthName ""Georgeanne Marie Rice"" .
  OPTIONAL { ?actor dbo:occupation ?profession . }
}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
16,14,train,Give me the person born as the birth name of Gigi Rice.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ?v1 . <http://dbpedia.org/resource/Gigi_Rice> <http://dbpedia.org/property/birthName> ?v1 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?person ?birthName WHERE {
  # Step 1: Get Gigi Rice's birth name
  dbr:Gigi_Rice dbo:birthName ?gigiBirthName .

  # Step 2: Find other individuals with the same birth name
  ?person a dbo:Person ;
          dbo:birthName ?birthName .
  
  FILTER (?birthName = ?gigiBirthName && ?person != dbr:Gigi_Rice)
}
ORDER BY ?person",2,2,3,2,1,3,3,71,0,0,1,0,0.0,0
959,0,train,Give me the member of University of Tsukuba.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/University_of_Tsukuba> . },"```sparql
SELECT ?member WHERE {
  ?university dcterms:isPartOf <http://dbpedia.org/resource/University_of_Tsukuba> .
  ?university dbo:alumniOrStudent ?member .
}
```",1,1,2,1,1,3,3,71,0,0,267,0,0.0,0
712,8,train,Give me the resting place of the awardee of Hero of the Soviet Union.,SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Hero_of_the_Soviet_Union> . ?v0 <http://dbpedia.org/ontology/restingPlace> ?result . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?person ?restingPlace WHERE {
  ?award a dbo:Award ;
         rdfs:label ""Hero of the Soviet Union""@en .
  
  ?person dbo:award ?award .
  OPTIONAL { ?person dbo:finalBurialPlace ?restingPlace . }
}
```

This query does the following:
- It identifies awards labeled as ""Hero of the Soviet Union.""
- It finds individuals (`?person`) who have received this award.
- It optionally retrieves their final resting place using `dbo:finalBurialPlace`.",2,2,3,2,1,3,2,20,0,0,49,0,0.0,0
767,17,train,"Give me the alter ego of the persona, that is a fictional character, of Matthew Burland.","SELECT ?result WHERE { ?v1 <http://dbpedia.org/property/alterEgo> ""Matthew Burland""@en . ?v1 <http://dbpedia.org/property/alterEgo> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alterEgo WHERE {
  ?person dbo:birthName ""Matthew Burland""@en .
  OPTIONAL { ?person dbo:fictionalCharacter ?alterEgo . }
}
```",2,3,3,2,1,3,3,71,0,0,5,0,0.0,0
356,6,train,Give me the player in 2015 Sacramento Republic FC season and team of Mark Briggs.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Mark_Briggs> . <http://dbpedia.org/resource/2015_Sacramento_Republic_FC_season> <http://dbpedia.org/ontology/team> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?player ?team WHERE {
  ?player dbo:birthName ""Mark Briggs""@en .
  ?player dbo:nationality dbr:United_Kingdom .
  ?player dbo:sport dbr:Soccer .
  
  ?season dbo:club dbr:Sacramento_Republic_FC ;
          dbo:year ""2015""^^xsd:gYear .

  ?team dbo:member ?player ;
        dbo:participatedInSport dbr:Soccer ;
        dbo:participatedIn ?season .
}
```",2,2,3,1,2,3,2,20,0,0,1,0,0.0,0
55,1,train,Give me the band member of Metallica.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Metallica> . },"```sparql
SELECT ?member WHERE {
  wd:Q1346 dbo:musicalArtist ?band .
  ?band wdt:P106 wd:Q215380 . # P106 is ""occupation"", Q215380 is ""musician""
  ?band wdt:P527 ?member . # P527 is ""part of""
}
```",1,1,2,1,1,2,3,28,0,0,15,0,0.0,0
77,8,train,Give me the force of the mayor of Congress Poland.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/commander> ?v0 . <http://dbpedia.org/resource/Congress_Poland> <http://dbpedia.org/property/leader> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?mayor ?mayorName ?relatedEntity ?entityDescription
WHERE {
  # Find the resource for Congress Poland
  ?congressPoland a dbo:AdministrativeRegion ;
                  rdfs:label ""Congress Poland""@en .

  # Find the mayor of Congress Poland
  ?mayor dbo:positionHeld dbr:Mayor_of_Congress_Poland ;
         foaf:name ?mayorName .

  # Optionally, find related entities or descriptions
  OPTIONAL {
    ?relatedEntity dbo:isRelatedTo ?congressPoland .
    ?relatedEntity rdfs:comment ?entityDescription .
  }
}
```",2,2,3,2,1,3,2,20,0,0,33,0,0.0,0
696,8,train,Give me the landmark at elevation of the award of Nie Rongzhen.,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/elevation> ?v0 . <http://dbpedia.org/resource/Nie_Rongzhen> <http://dbpedia.org/property/awards> ?v0 . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?landmark WHERE {
  # Find awards associated with Nie Rongzhen
  ?award dbo:recipient dbr:Nie_Rongzhen .
  
  # Assume the award has an elevation property (this is hypothetical as DBpedia might not have this directly)
  ?award dbo:elevation ?elevation .

  # Find landmarks at that elevation
  ?landmark dbo:elevation ?elevation .
}
```",2,2,3,2,1,3,2,20,0,0,599,0,0.0,0
427,14,train,"Give me the party of the person born, that is an office holder and a politician, as Romano Antonio Prodi.","SELECT ?result WHERE { ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>. ?v1 <http://dbpedia.org/ontology/party> ?result . ?v1 <http://dbpedia.org/property/birthName> ""Romano Antonio Prodi""@en . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?partyLabel WHERE {
  dbr:Romano_Prodi a dbo:Politician ;
                   dbo:officeHolderOf ?office .
  OPTIONAL { ?office dbo:politicalParty ?party . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language ""[AUTO_LANGUAGE],en"". }
}
```",2,4,3,2,1,3,3,71,0,0,7,0,0.0,0
77,4,train,"Give me the territory administered, that is an organisation, from Warsaw.",SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Warsaw> . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?organization WHERE {
  ?territory a dbo:AdministrativeTerritory ;
             dbp:administrativeBody ?organization .
  ?territory dbp:location ?city .
  FILTER (str(?city) = ""Warsaw"")
}
```

This query does the following:

- Selects distinct organizations (`?organization`) that are linked to territories (`?territory`).
- Ensures these territories are of type `dbo:AdministrativeTerritory`.
- Checks if the organization is listed as an administrative body for the territory.
- Filters results to include only those territories located in Warsaw.",1,2,2,1,1,3,2,20,0,0,7,0,0.0,0
281,16,train,"Give me the birth place, that is a country, of the leader, that is a politician, of 1962 New South Wales state election.",SELECT ?result WHERE { <http://dbpedia.org/resource/1962_New_South_Wales_state_election> <http://dbpedia.org/property/leader> ?v1 . ?v1 <http://dbpedia.org/ontology/birthPlace> ?result . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>. ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?birthPlace WHERE {
  # Find the politician who was the leader in the 1962 NSW state election
  ?politician dbo:officeTitle ""Leader of the Opposition (New South Wales)"" ;
              dbo:termStart ?start ;
              dbo:termEnd ?end .
  
  FILTER (?start <= ""1962-01-01""^^xsd:date && ?end >= ""1962-12-31""^^xsd:date)
  
  # Get their place of birth that is a country
  ?politician dbo:birthPlace ?birthPlace .
  ?birthPlace rdf:type dbo:Country .
}
```",2,4,3,2,1,3,3,71,0,0,1,0,0.0,0
801,12,train,Give me the associated musical artist of Chris Taylor (music producer) and producer of Westside Story (song).,SELECT ?result WHERE { <http://dbpedia.org/resource/Westside_Story_(song)> <http://dbpedia.org/ontology/producer> ?result . <http://dbpedia.org/resource/Chris_Taylor_(music_producer)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?result . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?artist WHERE {
  # Chris Taylor, known for being a music producer
  ?chris a dbo:MusicProducer ;
         foaf:name ""Chris Taylor"" .

  # Link to Westside Story (song) as a producer
  ?westsideStory dbo:producer ?chris .
  
  FILTER(STRSTARTS(STR(?westsideStory), STR(dbr:Westside_Story_(song))))

  # Find associated musical artists through production or collaboration
  ?artist dbo:associatedMusicalArtist ?chris ;
          a dbo:MusicArtist .

}
```",2,2,3,1,2,3,3,71,0,0,1,0,0.0,0
184,16,train,"Give me the child of the parent, that is a royalty, of Archduke Ladislaus Philipp of Austria.",SELECT ?result WHERE { <http://dbpedia.org/resource/Archduke_Ladislaus_Philipp_of_Austria> <http://dbpedia.org/ontology/parent> ?v1 . ?result <http://dbpedia.org/property/father> ?v1 . ?v1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>. },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT DISTINCT ?child WHERE {
  # Step 1: Identify Archduke Ladislaus Philipp of Austria
  ?archduke a dbo:Archduke ;
            foaf:name ""Ladislaus Philipp of Austria""@en .

  # Step 2: Find his parents
  ?archduke dbo:parent ?parent .

  # Step 3: Filter for royalty
  ?parent dbo:royalty true .

  # Step 4: Find children of the qualifying parent
  ?parent dbo:child ?child .
}
```",2,3,3,2,1,3,3,71,0,0,3,0,0.0,0
391,11,train,Give me the native of the figure known as Hub City.,"SELECT ?result WHERE { ?v0 <http://dbpedia.org/property/nickname> ""Hub City""@en . ?result <http://dbpedia.org/ontology/birthPlace> ?v0 . }","```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?nativePlace WHERE {
  VALUES ?city { dbr:Chicago }
  ?city dbo:nativeName ?nativePlace .
}
```",2,2,3,2,1,3,3,71,0,0,176,0,0.0,0
77,9,train,Who is the awardee of the award of Maxim Grigorievich Vlasov?,SELECT ?result WHERE { ?result <http://dbpedia.org/property/awards> ?v0 . <http://dbpedia.org/resource/Maxim_Grigorievich_Vlasov> <http://dbpedia.org/property/awards> ?v0 . },"PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT DISTINCT ?award ?awardee WHERE {
  # Find Maxim Grigorievich Vlasov's resource
  VALUES ?maximGrigorievichVlasov { dbr:Maxim_Grigorievich_Vlasov }
  
  # Find awards associated with him
  ?maximGrigorievichVlasov dbo:award ?award .
  
  # For each award, find its awardees
  ?award dbo:recipient ?awardee .
}
```

This query assumes that Maxim Grigorievich Vlasov is represented in DBpedia as `dbr:Maxim_Grigorievich_Vlasov`. If the exact resource URI differs, you may need to adjust it accordingly.",2,2,3,2,1,3,2,20,0,0,416,0,0.0,0
16,7,train,Who is the alumnus of Ohio State University?,SELECT ?result WHERE { ?result <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ohio_State_University> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>

SELECT ?alumnus WHERE {
  ?alumnus dbo:almaMater dbr:Ohio_State_University .
}
```",1,1,2,1,1,3,3,71,467,0,0,1.0,1.0,1.0
92,6,train,"Give me the person born, that is an artist, as Jim Sheppard.","SELECT ?result WHERE { ?result <http://dbpedia.org/property/birthName> ""Jim Sheppard""@en . ?result <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>. }","```sparql
SELECT ?person WHERE {
  ?person dbo:birthName ""Jim Sheppard"" .
  ?person rdf:type dbo:Artist .
}
```",1,2,2,1,1,3,3,71,0,0,1,0,0.0,0
981,3,train,Give me the region of Time in Indonesia.,SELECT ?result WHERE { ?result <http://dbpedia.org/property/timeZone> <http://dbpedia.org/resource/Time_in_Indonesia> . },"```sparql
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbp: <http://dbpedia.org/property/>

SELECT ?region WHERE {
  ?time a dbo:Time ;
        dbo:country dbr:Indonesia .
  OPTIONAL { ?time dbp:region ?region }
}
```",1,1,2,1,1,3,2,20,0,0,1,0,0.0,0
